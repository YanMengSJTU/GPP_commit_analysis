diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 28abaf958..846b0042b 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -7,22 +7,25 @@ repositories {
 dependencies {
     compile 'com.android.support:support-v4:23.4.0'
     compile "com.google.android.gms:play-services-gcm:8.4.0"
-    compile "com.google.android.gms:play-services-maps:8.4.0"
+  //  compile "com.google.android.gms:play-services-maps:8.4.0"
     compile 'net.hockeyapp.android:HockeySDK:4.0.1'
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
 
+    compile 'org.slf4j:slf4j-log4j12:1.6.4'
+    compile 'org.osmdroid:osmdroid-android:4.2'
+
+    compile 'com.google.android.gms:play-services-analytics:8.4.0'
     compile 'com.google.code.gson:gson:2.2.4'
     compile 'com.paypal.sdk:paypal-android-sdk:2.14.2'
     compile 'com.google.android.gms:play-services-ads:8.4.0'
-
+    compile 'com.android.support:multidex:1.0.1'
 }
 
+
+
 android {
     compileSdkVersion 23
     buildToolsVersion '23.0.3'
-
-
-
     useLibrary 'org.apache.http.legacy'
     defaultConfig.applicationId = "org.telegram.messenger"
 
@@ -70,7 +73,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 821
+ //   defaultConfig.versionCode = 821
 
     sourceSets.main {
         jniLibs.srcDir 'libs'
@@ -119,16 +122,27 @@ android {
     }
 
     defaultConfig {
-        minSdkVersion 14
+
+       multiDexEnabled true
+
+        minSdkVersion 9
         targetSdkVersion 23
-        versionName "3.10.1"
+        versionCode 14
+        versionName "4.0.0"
     }
 
+    /*defaultConfig {
+        multiDexEnabled true
+    }*/
 
-    dexOptions {
+  /*  dexOptions {
         jumboMode true
-    }
+    }*/
+    dexOptions {
+        javaMaxHeapSize "3g"
+        preDexLibraries = false
 
+    }
 }
 
 apply plugin: 'com.google.gms.google-services'
diff --git a/TMessagesProj/google-services.json b/TMessagesProj/google-services.json
index 9403433ed..146369be3 100755
--- a/TMessagesProj/google-services.json
+++ b/TMessagesProj/google-services.json
@@ -34,6 +34,8 @@
           "certificate_hash": []
         }
       },
+
+
       "oauth_client": [],
       "api_key": [],
       "services": {
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index a3ac2a653..7e8c900ea 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -130,7 +130,9 @@
 
         <activity android:name="org.telegram.payment.PaymentManager"
             android:label=""></activity>
-
+        <activity android:name="org.telegram.ui.OsmLocation"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+            ></activity>
         <activity
             android:name="org.telegram.ui.ManageSpaceActivity"
             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index ed2e6c085..0d89a5311 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -25,6 +25,7 @@
 import android.os.Build;
 import android.os.Handler;
 import android.os.PowerManager;
+import android.support.multidex.MultiDex;
 import android.util.Base64;
 
 import com.google.android.gms.common.ConnectionResult;
@@ -33,11 +34,21 @@
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.SerializedData;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Components.ForegroundDetector;
 
 import java.io.File;
 import java.io.RandomAccessFile;
 
+
+import com.google.android.gms.analytics.GoogleAnalytics;
+import com.google.android.gms.analytics.HitBuilders;
+import com.google.android.gms.analytics.Tracker;
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.GooglePlayServicesUtil;
+import com.google.android.gms.gcm.GoogleCloudMessaging;
+
+
 public class ApplicationLoader extends Application {
 
     private static Drawable cachedWallpaper;
@@ -78,6 +89,12 @@ private static void calcBackgroundColor() {
         preferences.edit().putInt("serviceMessageColor", serviceMessageColor).putInt("serviceSelectedMessageColor", serviceSelectedMessageColor).commit();
     }
 
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(base);
+        MultiDex.install(this);
+    }
+
     public static int getServiceMessageColor() {
         return serviceMessageColor;
     }
@@ -304,6 +321,12 @@ public void onCreate() {
 
         applicationContext = getApplicationContext();
         NativeLoader.initNativeLibs(ApplicationLoader.applicationContext);
+
+
+        AnalyticsTrackers.initialize(this);
+        AnalyticsTrackers.getInstance().get(AnalyticsTrackers.Target.APP);
+
+
         ConnectionsManager.native_setJava(Build.VERSION.SDK_INT == 14 || Build.VERSION.SDK_INT == 15);
         new ForegroundDetector(this);
 
@@ -312,6 +335,30 @@ public void onCreate() {
         startPushService();
     }
 
+
+    public synchronized Tracker getGoogleAnalyticsTracker() {
+        AnalyticsTrackers analyticsTrackers = AnalyticsTrackers.getInstance();
+        return analyticsTrackers.get(AnalyticsTrackers.Target.APP);
+    }
+    public void trackScreenView(String screenName) {
+        Tracker t = getGoogleAnalyticsTracker();
+
+        // Set screen name.
+        t.setScreenName(screenName);
+
+        // Send a screen view.
+        t.send(new HitBuilders.ScreenViewBuilder().build());
+
+        GoogleAnalytics.getInstance(this).dispatchLocalHits();
+    }
+    public void trackEvent(String category, String action, String label) {
+        Tracker t = getGoogleAnalyticsTracker();
+        // Build and send an Event.
+        t.send(new HitBuilders.EventBuilder().setCategory(category).setAction(action).setLabel(label).build());
+    }
+
+
+
     /*public static void sendRegIdToBackend(final String token) {
         Utilities.stageQueue.postRunnable(new Runnable() {
             @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
index 0a63e242a..82c093f8c 100644
--- a/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/payment/PaymentManager.java
@@ -34,7 +34,7 @@
  * Created by craterzone3 on 13/6/16.
  */
 
-public class PaymentManager extends Activity implements PaymentConfirmationListener {
+public class PaymentManager extends Activity implements PaymentConfirmationListener{
 
     public static final String TAG = PaymentManager.class.getName().toString();
 
@@ -241,7 +241,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                 Log.i(TAG, "The user canceled.");
             } else if (resultCode == PaymentActivity.RESULT_EXTRAS_INVALID) {
                 Log.i(TAG,
-                        "An invalid Payment or PayPalConfiguration was submitted.");
+                        "An invalid Payment or PayPalConfiguration was submitted. Please see the docs.");
             }
         } else if (requestCode == REQUEST_CODE_FUTURE_PAYMENT) {
             if (resultCode == Activity.RESULT_OK) {
@@ -266,7 +266,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
             } else if (resultCode == PayPalFuturePaymentActivity.RESULT_EXTRAS_INVALID) {
                 Log.i(
                         "FuturePaymentExample",
-                        "Probably the attempt to previously start the PayPalService had an invalid PayPalConfiguration.");
+                        "Probably the attempt to previously start the PayPalService had an invalid PayPalConfiguration. Please see the docs.");
             }
         } else if (requestCode == REQUEST_CODE_PROFILE_SHARING) {
             if (resultCode == Activity.RESULT_OK) {
diff --git a/TMessagesProj/src/main/java/org/telegram/tracker/AnalyticsTrackers.java b/TMessagesProj/src/main/java/org/telegram/tracker/AnalyticsTrackers.java
new file mode 100755
index 000000000..fdee06aba
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/tracker/AnalyticsTrackers.java
@@ -0,0 +1,133 @@
+package org.telegram.tracker;
+
+import android.content.Context;
+
+import com.google.android.gms.analytics.GoogleAnalytics;
+import com.google.android.gms.analytics.Tracker;
+
+import org.telegram.messenger.R;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * A collection of Google Analytics trackers. Fetch the tracker you need using
+ * {@code AnalyticsTrackers.getInstance().get(...)}
+ * <p/>
+ * This code was generated by Android Studio but can be safely modified by
+ * hand at this point.
+ * <p/>
+ * TODO: Call {@link #initialize(Context)} from an entry point in your app
+ * before using this!
+ */
+public final class AnalyticsTrackers {
+
+    public static final String CHAT_ACTIVITY = "Chat Screen";
+    public static final String CHATPROFILE = "Chat profile Screen";
+    public static final String CHANGENAMEACTIVITY = "Change name screen";
+    public static final String ADD_CONTACT= "Add contact Screen";
+    public static final String CONTACT  = "Contact Screen";
+    public static final String SELECT_CUNTRY = "Country select Screen";
+    public static final String SELECT_DOCUMENT = "Select Document Screen";
+    public static final String CREATE_GROUP = "Creat Group Screen";
+    public static final String IDENTICONACTIVITY  = "Identicon Activity Screen";
+    public static final String INTRO_ACTIVITY = "Intro Activity Screen";
+    public static final String SELECT_LANGUAGE_ACTIVITY = "Select Language SCREEN";
+    public static final String LAST_SCREEN_ACTIVITY = "Last Activity Screen";
+    public static final String LAST_SCREEN_USER_ACTIVITY = "Last seen user Activity Screen";
+    public static final String LAUNCH_ACTIVITY = "Launch Screen";
+    public static final String LOCATION_ACTIVITY = "Location Screen";
+    public static final String LOGIN = "LOGIN Screen";
+    public static final String MEDIA_ACTIVITY = "Media Screen";
+    public static final String MANAGESPACE = "ManageSpace Screen";
+    public static final String MESSAGE_ACTIVITY = "Message Screen";
+    public static final String VIDEO_PICKER = "Video picker Screen";
+    public static final String VIDEO_EDITOR = "Video editor Screen";
+    public static final String USER_PROFILE = "User profile Screen";
+    public static final String SETTING_WRAPPER = "Setting Wallpaper Screen";
+    public static final String CHANGE_USER_NAME = "Change userScreen";
+    public static final String CHANGESETTING = "Change setting Screen";
+    public static final String BLOCKED_USER= "Blocked User Screen";
+    public static final String SETTING_SCREEN = "Setting Screen";
+    public static final String PRIVACT_SETTING = "Privacy setting Screen";
+    public static final String POPUP_NOTIFICATION = "PopUp Notification Screen";
+    public static final String CHAT_SETTING = "Chat setting Screen";
+    public static final String SETTING_NOTIFICATION_AND_SOUND = "Notification and sound Screen";
+    public static final String GROUP_CREATE_FINAL_ACTIVITY = "Group create final Screen";
+    public static final String MEDIA_ATTACH_ACTIVITY = "Media attach Screen";
+    public static final String OSMLOCATION = "OSM Location Screen";
+    public static final String PHOTOCROP_SCREEN = "Photo Crop Screen";
+    public static final String PHOTO_ALBUM_PICKER= "Photo Album picker Screen";
+    public static final String PHOTO_PICK_SCREEN = "Photo PICK Screen";
+    public static final String NOTIFICATION_SETTING = "Notification Setting Screen";
+    public static final String PROFILE_NOTIFICATION = "Profile Notification Screen";
+    /////
+    public static final String AUDIO_SELECT = "Audio Select Screen";
+    public static final String AUDIO_PLAYER = "Audio Player Screen";
+    public static final String CACHECONTROL = "Cache control Screen";
+    public static final String CHANGE_CHAT_NAME = "Change Chat Name Screen";
+    public static final String CHANGE_PHONE = "Change Phone Screen";
+    public static final String CHANGE_PHONE_HELP = "Change Phone Help Screen";
+    public static final String CHANNEL_CREATE = "Channel Create Screen";
+    public static final String CHANNEL_INTRO = "Channel Intro Screen";
+    public static final String CHANNEL_EDIT = "Channel Edit Screen";
+    public static final String CHANNEL_USER = "Channel user Screen";
+    public static final String GROUP_INVITE = "Group Invite Screen";
+    public static final String TWOSTEP_VARIFICATION = "Two step varification Screen";
+    public static final String WALLPAPER_ACTIVITY = "Wallpaper Screen";
+    public static final  String STICKERS_ACTIVITY = "Stickers Screen";
+    public static final String ADMIN_ACTIVITY = "Set Admin Screen";
+    public static final String SESSION_ACTIVITY ="Session Screen";
+    public static final String PHOTOVIEWER = "PhotoViewer Screeen";
+    public static final String PASSCODE = "Passcode Screeen";
+    public static final String DIALOGACTIVITY = "Dialog Screen";
+    public enum Target {
+        APP,
+        // Add more trackers here if you need, and update the code in #get(Target) below
+    }
+
+    private static AnalyticsTrackers sInstance;
+
+    public static synchronized void initialize(Context context) {
+        if (sInstance != null) {
+            throw new IllegalStateException("Extra call to initialize analytics trackers");
+        }
+
+        sInstance = new AnalyticsTrackers(context);
+    }
+
+    public static synchronized AnalyticsTrackers getInstance() {
+        if (sInstance == null) {
+            throw new IllegalStateException("Call initialize() before getInstance()");
+        }
+
+        return sInstance;
+    }
+
+    private final Map<Target, Tracker> mTrackers = new HashMap<Target, Tracker>();
+    private final Context mContext;
+
+    /**
+     * Don't instantiate directly - use {@link #getInstance()} instead.
+     */
+    private AnalyticsTrackers(Context context) {
+        mContext = context.getApplicationContext();
+    }
+
+    public synchronized Tracker get(Target target) {
+        if (!mTrackers.containsKey(target)) {
+            Tracker tracker;
+            switch (target) {
+                case APP:
+                    tracker = GoogleAnalytics.getInstance(mContext).newTracker(R.xml.app_tracker);
+                    break;
+                default:
+                    throw new IllegalArgumentException("Unhandled analytics target " + target);
+            }
+            mTrackers.put(target, tracker);
+        }
+
+        return mTrackers.get(target);
+    }
+}
+
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
index 596b2a0b4..2364bd12f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
@@ -91,27 +91,7 @@ public void onClick(View v) {
             }
         });
 
-     /*   if (backButtonImageView != null) {
-            return;
-        }
-        backButtonImageView = new ImageView(getContext());
-        backButtonImageView.setScaleType(ImageView.ScaleType.CENTER);
-        backButtonImageView.setBackgroundDrawable(Theme.createBarSelectorDrawable(itemsBackgroundColor));
-        backButtonImageView.setPadding(AndroidUtilities.dp(1), 0, 0, 0);
-        //addView(backButtonImageView, LayoutHelper.createFrame(54, 54, Gravity.LEFT | Gravity.TOP));
 
-        backButtonImageView.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (isSearchFieldVisible) {
-                    closeSearchField();
-                    return;
-                }
-                if (actionBarMenuOnItemClick != null) {
-                    actionBarMenuOnItemClick.onItemClick(-1);
-                }
-            }
-        });*/
     }
 
     public void setBackButtonDrawable(Drawable drawable) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 200187b41..b70cd1307 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -15,11 +15,17 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
+import android.support.v4.widget.DrawerLayout;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewParent;
 
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
+import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
+import org.telegram.tracker.AnalyticsTrackers;
 
 public class BaseFragment {
 
@@ -31,7 +37,7 @@
     protected ActionBar actionBar;
     protected int classGuid = 0;
     protected Bundle arguments;
-    protected boolean swipeBackEnabled = true;
+    protected boolean swipeBackEnabled = false;
     protected boolean hasOwnBackground = false;
 
     public BaseFragment() {
@@ -121,6 +127,23 @@ protected void setParentLayout(ActionBarLayout layout) {
         }
     }
 
+
+
+    public void showTabsAndmenu(){
+        parentLayout.setPadding(0,0,0, AndroidUtilities.dp(50));
+        ViewParent view1=  parentLayout.getParent();
+        DrawerLayout drawerLayout=((DrawerLayout)((View) view1.getParent()).findViewById(R.id.chat_viewer_drawer_layout));
+        drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED);
+    }
+    public void hideTabsAnsMenu(){
+        ViewParent view1=  parentLayout.getParent();
+        DrawerLayout drawerLayout=((DrawerLayout)((View) view1.getParent()).findViewById(R.id.chat_viewer_drawer_layout));
+        if(drawerLayout!=null){
+            parentLayout.setPadding(0,0,0,0);
+            drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+        }
+    }
+
     protected ActionBar createActionBar(Context context) {
         ActionBar actionBar = new ActionBar(context);
         actionBar.setBackgroundColor(Theme.ACTION_BAR_COLOR);
@@ -148,6 +171,8 @@ public void removeSelfFromStack() {
 
     public boolean onFragmentCreate() {
         return true;
+
+
     }
 
     public void onFragmentDestroy() {
@@ -163,6 +188,8 @@ public boolean needDelayOpenAnimation() {
     }
 
     public void onResume() {
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.AUDIO_PLAYER);
+
 
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
index 92ff709ab..5991c71c8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/AudioSelectActivity.java
@@ -30,6 +30,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
@@ -172,6 +173,14 @@ public void didReceivedNotification(int id, Object... args) {
         }
     }
 
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.AUDIO_SELECT);
+
+    }
+
     private void updateBottomLayoutCount() {
         bottomLayout.updateSelectedCount(selectedAudios.size(), true);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index fb41fc92f..aefd76212 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -24,11 +24,13 @@
 import android.widget.TextView;
 
 import org.telegram.PhoneFormat.PhoneFormat;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextInfoCell;
 import org.telegram.ui.Cells.UserCell;
@@ -66,7 +68,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("BlockedUsers", R.string.BlockedUsers));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -88,17 +90,32 @@ public void onItemClick(int id) {
 
         ActionBarMenu menu = actionBar.createMenu();
         menu.addItem(block_user, R.drawable.plus);
+        fragmentView = View.inflate(context,R.layout.layout_blocked_user,null);
+        //   FrameLayout frameLayout = (FrameLayout) fragmentView;
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
 
-        fragmentView = new FrameLayout(context);
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
 
-        emptyTextView = new TextView(context);
+        emptyTextView  =(TextView) fragmentView.findViewById(R.id.tv_empty); //	new TextView(context);
         emptyTextView.setTextColor(0xff808080);
         emptyTextView.setTextSize(20);
         emptyTextView.setGravity(Gravity.CENTER);
         emptyTextView.setVisibility(View.INVISIBLE);
         emptyTextView.setText(LocaleController.getString("NoBlocked", R.string.NoBlocked));
-        frameLayout.addView(emptyTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
+   //     frameLayout.addView(emptyTextView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
         emptyTextView.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -106,20 +123,24 @@ public boolean onTouch(View v, MotionEvent event) {
             }
         });
 
-        progressView = new FrameLayout(context);
-        frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        hideTabsAnsMenu();
+        progressView = (FrameLayout)fragmentView.findViewById(R.id.frame_layout);
+
+        //     frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
+        ProgressBar progressBar =  (ProgressBar) fragmentView.findViewById(R.id.pb);
+        // progressView.addView(progressBar, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
-        ProgressBar progressBar = new ProgressBar(context);
-        progressView.addView(progressBar, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
-        listView = new ListView(context);
+        progressBar.setVisibility(View.GONE);
+        listView = (ListView) fragmentView.findViewById(R.id.lv);// new ListView(context);
         listView.setEmptyView(emptyTextView);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setAdapter(listViewAdapter = new ListAdapter(context));
         listView.setVerticalScrollbarPosition(LocaleController.isRTL ? ListView.SCROLLBAR_POSITION_LEFT : ListView.SCROLLBAR_POSITION_RIGHT);
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+     //   frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -183,6 +204,13 @@ public void didReceivedNotification(int id, Object... args) {
             }
             if (listViewAdapter != null) {
                 listViewAdapter.notifyDataSetChanged();
+                ((FrameLayout) progressView).addView(View.inflate(getParentActivity(), R.layout.notification_settings, null));
+                progressView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        finishFragment();
+                    }
+                });
             }
         }
     }
@@ -206,6 +234,8 @@ public void onResume() {
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.BLOCKED_USER);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
index 81355575a..5b745a573 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
@@ -40,6 +40,7 @@
 import org.telegram.messenger.query.BotQuery;
 import org.telegram.tgnet.NativeByteBuffer;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.BottomSheet;
@@ -305,10 +306,16 @@ public void run() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+
+
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("CacheSettings", R.string.CacheSettings));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+
+//            hideTabsAnsMenu();
+
             @Override
             public void onItemClick(int id) {
                 if (id == -1) {
@@ -319,16 +326,31 @@ public void onItemClick(int id) {
 
         listAdapter = new ListAdapter(context);
 
-        fragmentView = new FrameLayout(context);
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+        fragmentView =  View.inflate(context,R.layout.layout_cache_control_activity,null);//new FrameLayout(context);
+     //   FrameLayout frameLayout = (FrameLayout) fragmentView;
+        fragmentView.setBackgroundColor(0xfff0f0f0);
 
-        ListView listView = new ListView(context);
+        ListView listView =  (ListView)fragmentView.findViewById(R.id.lv_cache);//new ListView(context);
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDrawSelectorOnTop(true);
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        //  frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         listView.setAdapter(listAdapter);
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -547,6 +569,8 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CACHECONTROL);
+
     }
 
     private class ListAdapter extends BaseFragmentAdapter {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AdvertiesmentCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AdvertiesmentCell.java
index 0724e0c26..35d17894f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AdvertiesmentCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AdvertiesmentCell.java
@@ -3,9 +3,11 @@
 import android.content.Context;
 import android.view.View;
 import android.widget.FrameLayout;
+/*
 
 import com.google.android.gms.ads.AdRequest;
 import com.google.android.gms.ads.AdView;
+*/
 
 import org.telegram.messenger.R;
 import org.telegram.payment.CheckPremiumListener;
@@ -13,8 +15,12 @@
 import org.telegram.payment.UserPaymentInfo;
 import org.telegram.socialuser.BackgroundExecuter;
 
-//import com.smaato.soma.AdDimension;
-//import com.smaato.soma.BannerView;
+import com.google.android.gms.ads.AdRequest;
+import com.google.android.gms.ads.AdView;
+/*
+import com.smaato.soma.AdDimension;
+import com.smaato.soma.BannerView;
+*/
 
 /**
  * Created by craterzone3 on 20/5/16.
@@ -58,4 +64,5 @@ public void onGeneralUser() {
         UserPaymentInfo.getInstatance().setPaymentStatus(UserPaymentInfo.unPaidUser);
     }
 
+
 }
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index cff4907c0..63ed70117 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -30,6 +30,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -134,8 +135,10 @@ public void onResume() {
             firstNameField.requestFocus();
             AndroidUtilities.showKeyboard(firstNameField);
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_CHAT_NAME);
     }
 
+
     @Override
     public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
         if (isOpen) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
index 3af498a7f..41033e912 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
@@ -34,6 +34,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -153,6 +154,7 @@ public void onResume() {
             firstNameField.requestFocus();
             AndroidUtilities.showKeyboard(firstNameField);
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_USER_NAME);
     }
 
     private void saveName() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index 4ab801a98..7e03f3e74 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -60,6 +60,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -155,6 +156,8 @@ public void onItemClick(int id) {
     public void onResume() {
         super.onResume();
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
index bb14930ad..a1e2565f8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
@@ -23,11 +23,13 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.LayoutHelper;
@@ -153,4 +155,11 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         return fragmentView;
     }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
+
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index ccdf81dfc..b0ca0858c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -40,6 +40,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -160,6 +161,7 @@ public void afterTextChanged(Editable editable) {
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_USER_NAME);
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
         if (!animations) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
index 938228083..70bb3eaca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
@@ -204,8 +204,8 @@ public void onResume() {
     public View createView(Context context) {
         searching = false;
         searchWas = false;
-
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
 
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -837,6 +837,20 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
             });
         }
 
+
+
+        linearLayout.addView(View.inflate(context,R.layout.settings_layout,null));
+
+        linearLayout.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+
+
         return fragmentView;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditActivity.java
index 47d402c4a..e94d3369f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditActivity.java
@@ -32,6 +32,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -40,6 +41,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -128,6 +130,8 @@ public void run() {
         return super.onFragmentCreate();
     }
 
+
+
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
@@ -143,6 +147,8 @@ public void onFragmentDestroy() {
     public void onResume() {
         super.onResume();
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANNEL_EDIT);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelIntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelIntroActivity.java
index 1ad5b77b8..7996a24ee 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelIntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelIntroActivity.java
@@ -19,8 +19,10 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.Theme;
@@ -34,6 +36,7 @@
 
     @Override
     public View createView(Context context) {
+        hideTabsAnsMenu();
         actionBar.setBackgroundColor(Theme.ACTION_BAR_CHANNEL_INTRO_COLOR);
         actionBar.setBackButtonImage(R.drawable.pl_back);
         actionBar.setItemsBackgroundColor(Theme.ACTION_BAR_CHANNEL_INTRO_SELECTOR_COLOR);
@@ -147,4 +150,10 @@ public void onClick(View v) {
 
         return fragmentView;
     }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANNEL_INTRO);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
index 958a1e7ad..d0b79d20b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelUsersActivity.java
@@ -20,6 +20,7 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -31,6 +32,7 @@
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -483,8 +485,10 @@ public void onResume() {
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANNEL_USER);
     }
 
+
     private class ListAdapter extends BaseFragmentAdapter {
         private Context mContext;
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 28f154309..38477c70b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -46,8 +46,10 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewParent;
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
+import android.widget.AdapterView;
 import android.widget.EditText;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
@@ -93,11 +95,13 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.ActionBar.SimpleTextView;
 import org.telegram.ui.Adapters.MentionsAdapter;
+import org.telegram.ui.Adapters.SlidingMenuAdapter;
 import org.telegram.ui.Adapters.StickersAdapter;
 import org.telegram.messenger.AnimatorListenerAdapterProxy;
 import org.telegram.ui.Cells.ChatActionCell;
@@ -132,6 +136,7 @@
 import org.telegram.ui.Components.URLSpanReplacement;
 import org.telegram.ui.Components.URLSpanUserMention;
 import org.telegram.ui.Components.WebFrameLayout;
+import org.telegram.ui.listners.OnAttachListner;
 import org.telegram.ui.listners.OnclicklistnerOnChatActivity;
 
 import java.io.File;
@@ -144,7 +149,7 @@
 
 @SuppressWarnings("unchecked")
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate,
-        PhotoViewer.PhotoViewerProvider,OnclicklistnerOnChatActivity {
+        PhotoViewer.PhotoViewerProvider,OnAttachListner ,OnclicklistnerOnChatActivity{
 
     protected TLRPC.Chat currentChat;
     protected TLRPC.User currentUser;
@@ -375,35 +380,15 @@ public void onItemClick(View view, int position) {
             createMenu(view, true);
         }
     };
+    private SlidingMenuAdapter adapter;
 
     public ChatActivity(Bundle args) {
         super(args);
     }
 
-
-
-    @Override
-    public void onClickListnerOnUi(int i) {
-        try {
-            AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
-            if (i == 1) {
-              //  showTabsAndmenu();
-                finishFragment();
-            } else if (i == 2) {
-                if(parentLayout!=null)
-                    parentLayout.openDrawer();
-            }
-        } catch (Exception e) {
-            // Log("logs",e);
-        }
-
-    }
-
-
-
-
     @Override
     public boolean onFragmentCreate() {
+        chatActivityEnterView.onListnerAttachment(this);
         final int chatId = arguments.getInt("chat_id", 0);
         final int userId = arguments.getInt("user_id", 0);
         final int encId = arguments.getInt("enc_id", 0);
@@ -711,6 +696,9 @@ public void onFragmentDestroy() {
     @Override
     public View createView(Context context) {
 
+
+        ChatActivityEnterView.onbacklistner(this);
+
         if (chatMessageCellsCache.isEmpty()) {
             for (int a = 0; a < 8; a++) {
                 chatMessageCellsCache.add(new ChatMessageCell(context));
@@ -731,7 +719,7 @@ public View createView(Context context) {
         Theme.loadRecources(context);
         Theme.loadChatResources(context);
 
-      //  actionBar.setBackButtonDrawable(new BackDrawable(false));
+        actionBar.setBackButtonDrawable(new BackDrawable(false));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(final int id) {
@@ -897,9 +885,21 @@ public void onClick(DialogInterface dialogInterface, int i) {
         });
 
         avatarContainer = new ChatAvatarContainer(context, this, currentEncryptedChat != null);
+
+
+     //   avatarContainer = new FrameLayout(context);
+        avatarContainer.setBackgroundResource(R.drawable.bar_selector);
         avatarContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
+        actionBar.setBackButtonImage(0x00000000);//todo invisible back button
+
+
         actionBar.addView(avatarContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 0, 0, 48, 0));
 
+
+
+
+      //  actionBar.addView(avatarContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 56, 0, 40, 0));
+
         if (currentChat != null) {
             if (!ChatObject.isChannel(currentChat)) {
                 int count = currentChat.participants_count;
@@ -920,6 +920,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 @Override
                 public void onSearchCollapse() {
                     avatarContainer.setVisibility(View.VISIBLE);
+                    actionBar.setBackButtonImage(0);//todo invisible back button
+
                     if (chatActivityEnterView.hasText()) {
                         if (headerItem != null) {
                             headerItem.setVisibility(View.GONE);
@@ -952,6 +954,8 @@ public void onSearchExpand() {
                         public void run() {
                             searchItem.getSearchField().requestFocus();
                             AndroidUtilities.showKeyboard(searchItem.getSearchField());
+                            actionBar.setBackButtonImage(R.drawable.ic_ab_back);//todo invisible back button
+
                         }
                     }, 300);
                 }
@@ -966,7 +970,7 @@ public void onSearchPressed(EditText editText) {
             searchItem.setVisibility(View.GONE);
         }
 
-        headerItem = menu.addItem(0, R.drawable.ic_ab_other);
+        headerItem = menu.addItem(0, 0);
         if (searchItem != null) {
             headerItem.addSubItem(search, LocaleController.getString("Search", R.string.Search), 0);
         }
@@ -999,7 +1003,9 @@ public void onSearchPressed(EditText editText) {
         avatarContainer.updateSubtitle();
         updateTitleIcons();
 
+        headerItem.setVisibility(View.GONE);
         attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
+
         attachItem.setVisibility(View.GONE);
         menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach).setAllowCloseAnimation(false);
         menuItem.setBackgroundDrawable(null);
@@ -2520,24 +2526,42 @@ public void onClick(View view) {
         searchCountText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         searchContainer.addView(searchCountText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.CENTER_VERTICAL, 108, 0, 0, 0));
 
+
+
         bottomOverlay = new FrameLayout(context);
         bottomOverlay.setVisibility(View.INVISIBLE);
         bottomOverlay.setFocusable(true);
         bottomOverlay.setFocusableInTouchMode(true);
         bottomOverlay.setClickable(true);
         bottomOverlay.setBackgroundResource(R.drawable.compose_panel);
+        bottomOverlay.setBackgroundColor(0xffffffff);
         bottomOverlay.setPadding(0, AndroidUtilities.dp(3), 0, 0);
         contentView.addView(bottomOverlay, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 51, Gravity.BOTTOM));
 
         bottomOverlayText = new TextView(context);
         bottomOverlayText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
-        bottomOverlayText.setTextColor(Theme.CHAT_BOTTOM_OVERLAY_TEXT_COLOR);
+      //  bottomOverlayText.setTextColor(Theme.CHAT_BOTTOM_OVERLAY_TEXT_COLOR);
+        bottomOverlayText.setTextColor(0xff7f7f7f);
+
         bottomOverlay.addView(bottomOverlayText, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
         bottomOverlayChat = new FrameLayout(context);
         bottomOverlayChat.setBackgroundResource(R.drawable.compose_panel);
         bottomOverlayChat.setPadding(0, AndroidUtilities.dp(3), 0, 0);
+        bottomOverlayChat.setBackgroundColor(0xfffbfcfd);
         bottomOverlayChat.setVisibility(View.INVISIBLE);
+        ImageView img =new ImageView(context);
+        img.setBackgroundResource(R.drawable.ic_bar_back);
+        //img.setScaleType(ImageView.ScaleType.CENTER);
+        img.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+                //showTabsAndmenu();
+            }
+        });
+        bottomOverlayChat.setBackgroundColor(context.getResources().getColor(R.color.light_black));
+        bottomOverlayChat.addView(img,LayoutHelper.createFrame(60,LayoutHelper.MATCH_PARENT, Gravity.LEFT));
         contentView.addView(bottomOverlayChat, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 51, Gravity.BOTTOM));
         bottomOverlayChat.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -2601,6 +2625,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
 
+
+
+
         bottomOverlayChatText = new TextView(context);
         bottomOverlayChatText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15);
         bottomOverlayChatText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
@@ -3174,7 +3201,26 @@ public boolean didSelectVideo(String path) {
                 FileLog.e("tmessages", e);
             }
         } else if (which == attach_location) {
-            if (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
+
+
+            getParentActivity().startActivity(new Intent(getParentActivity(), OsmLocation.class));
+            OsmLocation.setMessageObject(null);
+            //  LocationActivity fragment = new LocationActivity();
+            OsmLocation.setDelegate(new OsmLocation.LocationActivityDelegate() {
+                @Override
+                public void didSelectLocation(TLRPC.TL_messageMediaGeo location) {
+                 //   SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject, chatActivityEnterView == null || chatActivityEnterView.isTopViewVisible());
+
+                    SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject, null, null);
+                    moveScrollToLastMessage();
+                    showReplyPanel(false, null, null, null, false, true);
+                    if (paused) {
+                        scrollToTopOnResume = true;
+                    }
+                }
+            });
+
+        /*    if (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
                 return;
             }
             LocationActivity fragment = new LocationActivity();
@@ -3190,7 +3236,7 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
                     }
                 }
             });
-            presentFragment(fragment);
+            presentFragment(fragment);*/
         } else if (which == attach_document) {
             if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                 getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
@@ -6600,9 +6646,12 @@ private void checkRaiseSensors() {
     @Override
     public void onResume() {
         super.onResume();
-
+        hideTabsAnsMenu();
+        setChatMenuList();
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
         MediaController.getInstance().startRaiseToEarSensors(this);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHAT_ACTIVITY);
+
         checkRaiseSensors();
 
         checkActionBarMenu();
@@ -7995,6 +8044,100 @@ private void removeMessageObject(MessageObject messageObject) {
         }
     }
 
+    @Override
+    public void onAttachlistner() {
+
+        if (getParentActivity() == null) {
+            return;
+        }
+
+        createChatAttachView();
+        chatAttachAlert.loadGalleryPhotos();
+        if (Build.VERSION.SDK_INT == 21 || Build.VERSION.SDK_INT == 22) {
+            chatActivityEnterView.closeKeyboard();
+        }
+        chatAttachAlert.init(ChatActivity.this);
+        showDialog(chatAttachAlert);
+
+
+/*
+        if (getParentActivity() == null) {
+            return;
+        }
+        if (chatAttachAlert == null) {
+            chatAttachAlert = new ChatAttachAlert(getParentActivity());
+            chatAttachAlert.setDelegate(new ChatAttachAlert.ChatAttachViewDelegate() {
+                @Override
+                public void didPressedButton(int button) {
+                    if (getParentActivity() == null) {
+                        return;
+                    }
+                    if (button == 7) {
+                        chatAttachAlert.dismiss();
+                        HashMap<Integer, MediaController.PhotoEntry> selectedPhotos = chatAttachAlert.getSelectedPhotos();
+                        if (!selectedPhotos.isEmpty()) {
+                            ArrayList<String> photos = new ArrayList<>();
+                            ArrayList<String> captions = new ArrayList<>();
+                            for (HashMap.Entry<Integer, MediaController.PhotoEntry> entry : selectedPhotos.entrySet()) {
+                                MediaController.PhotoEntry photoEntry = entry.getValue();
+                                if (photoEntry.imagePath != null) {
+                                    photos.add(photoEntry.imagePath);
+                                    captions.add(photoEntry.caption != null ? photoEntry.caption.toString() : null);
+                                } else if (photoEntry.path != null) {
+                                    photos.add(photoEntry.path);
+                                    captions.add(photoEntry.caption != null ? photoEntry.caption.toString() : null);
+                                }
+                                photoEntry.imagePath = null;
+                                photoEntry.thumbPath = null;
+                                photoEntry.caption = null;
+                            }
+                            SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id, replyingMessageObject, captions);
+                            showReplyPanel(false, null, null, null, false, true);
+                            DraftQuery.cleanDraft(dialog_id, true);
+                        }
+                        return;
+                    } else if (chatAttachAlert != null) {
+                        chatAttachAlert.dismissWithButtonClick(button);
+                    }
+                    processSelectedAttach(button);
+                }
+
+                @Override
+                public View getRevealView() {
+                    return menuItem;
+                }
+
+                @Override
+                public void didSelectBot(TLRPC.User user) {
+                    if (chatActivityEnterView == null || user.username == null || user.username.length() == 0) {
+                        return;
+                    }
+                    chatActivityEnterView.setFieldText("@" + user.username + " ");
+                    chatActivityEnterView.openKeyboard();
+                }
+            });
+        }
+*/
+
+    }
+    @Override
+    public void onClickListnerOnUi(int i) {
+        try {
+            AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
+            if (i == 1) {
+                showTabsAndmenu();
+                finishFragment();
+            } else if (i == 2) {
+                if(parentLayout!=null)
+                    parentLayout.openDrawer();
+            }
+        } catch (Exception e) {
+            // Log("logs",e);
+        }
+
+    }
+
+
     public class ChatActivityAdapter extends RecyclerView.Adapter {
 
         private Context mContext;
@@ -8125,7 +8268,7 @@ public void didPressedUserAvatar(ChatMessageCell cell, TLRPC.User user) {
                             Bundle args = new Bundle();
                             args.putInt("user_id", user.id);
                             ProfileActivity fragment = new ProfileActivity(args);
-                            fragment.setPlayProfileAnimation(currentUser != null && currentUser.id == user.id);
+                          //  fragment.setPlayProfileAnimation(currentUser != null && currentUser.id == user.id);
                             presentFragment(fragment);
                         }
                     }
@@ -8267,12 +8410,17 @@ public void didPressedImage(ChatMessageCell cell) {
                                 alertUserOpenError(message);
                             }
                         } else if (message.type == 4) {
-                            if (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
+
+
+                            getParentActivity().startActivity(new Intent(getParentActivity(),OsmLocation.class));
+                            OsmLocation.setMessageObject(message);
+
+                         /*   if (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this)) {
                                 return;
                             }
                             LocationActivity fragment = new LocationActivity();
                             fragment.setMessageObject(message);
-                            presentFragment(fragment);
+                            presentFragment(fragment);*/
                         } else if (message.type == 9 || message.type == 0) {
                             try {
                                 AndroidUtilities.openForView(message, getParentActivity());
@@ -8525,4 +8673,200 @@ public void notifyItemRangeRemoved(int positionStart, int itemCount) {
             }
         }
     }
+
+
+
+
+
+    private void setChatMenuList(){
+        ArrayList<MenuItems> draweritems=new ArrayList<MenuItems>();
+        if(currentUser != null) {
+            draweritems.add(new MenuItems(LocaleController.getString("Call", R.string.Call), R.drawable.menu_phone, true, "",0));
+            draweritems.add(new MenuItems(LocaleController.getString("About", R.string.About), R.drawable.bar_profile, true, "",1));
+        }else {
+            draweritems.add(new MenuItems(LocaleController.getString("About", R.string.About), R.drawable.menu_group, true, "",1));
+        }
+  /*      if(currentChat != null){
+            draweritems.add(new MenuItems(LocaleController.getString("AddParticipant", R.string.AddParticipant),R.drawable.menu_bar_contact_plus,true ,"",3));
+        }*/
+        //   draweritems.add(new MenuItems(LocaleController.getString("SharedMedia", R.string.SharedMedia),R.drawable.menu_sharedmedia,true, totalMediaCount+""));
+        if (currentEncryptedChat != null) {
+            draweritems.add(new MenuItems( LocaleController.getString("SetTimer", R.string.SetTimer), R.drawable.ic_emoji_clock,true ,"",2));
+        }
+
+        if (! ChatObject.isChannel(currentChat)) {
+            draweritems.add(new MenuItems(LocaleController.getString("ClearHistory", R.string.ClearHistory),R.drawable.menu_deletehistory,true ,"",3));
+            if (currentChat != null && !isBroadcast) {
+                draweritems.add(new MenuItems(LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit),R.drawable.menu_bin,true ,"",4));
+            } else {
+                draweritems.add(new MenuItems(LocaleController.getString("DeleteChatUser", R.string.DeleteChatUser), R.drawable.menu_bin,true ,"",4));
+            }
+        }
+
+
+        draweritems.add(new MenuItems("        Search", R.drawable.ic_ab_search,true ,"",5));
+
+        adapter = new SlidingMenuAdapter(getParentActivity(),
+                draweritems);
+        ViewParent view=  parentLayout.getParent();
+
+        ListView drawerList=((ListView)((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+
+        drawerList.setAdapter(adapter);
+        drawerList.setOnItemClickListener(new ChatMenuClickListener());
+
+
+      /*  ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.VISIBLE);
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);*/
+        //     ((ImageView)((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.menu_bin);
+        if(currentUser != null){
+            //   ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("ClearChat", R.string.ClearChat));
+        }else{
+            //    ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("ClearConversation", R.string.ClearConversation));
+        }
+
+        ((View) view.getParent()).findViewById(R.id.menu_container).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+
+            }
+        });
+
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                //  closeDrawer();
+                //     MessagesController.getInstance().deleteDialog(dialog_id, 0, true);
+            }
+        });
+
+
+    }
+
+    private class ChatMenuClickListener implements
+            ListView.OnItemClickListener {
+        @Override
+        public void onItemClick(AdapterView<?> parent, View view, int position,
+                                long id) {
+            MenuItems items =(MenuItems) parent.getItemAtPosition(position);
+
+            switch(items.getId()){
+
+                case 0:
+                    parentLayout.closeDrawer();
+                    if(currentUser != null) {
+                        try {
+                            Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:+" + currentUser.phone));
+                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                            getParentActivity().startActivity(intent);
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }  }
+                    break;
+
+                case 1:
+                    parentLayout.closeDrawer();
+                    //  if(currentUser != null){
+                    openProfile();
+                    //}
+                    break;
+
+                case 2:
+                    parentLayout.closeDrawer();
+                    // encrypted chat
+                    if (getParentActivity() == null) {
+                        return;
+                    }
+                    showDialog(AndroidUtilities.buildTTLAlert(getParentActivity(), currentEncryptedChat).create());
+                    break;
+
+                case 3:
+                    parentLayout.closeDrawer();
+                    clearOrDeletechat(3);
+                    break;
+                case 4:
+                    parentLayout.closeDrawer();
+                    clearOrDeletechat(4);
+                    break;
+                case 5:
+                    parentLayout.closeDrawer();
+                    openSearchWithText(null);
+                    break;
+                case 6:
+                    break;
+
+                case 7:
+                    break;
+
+
+            }
+
+
+        }
+    }
+
+
+
+    public void openProfile(){
+       /* if (radioButton == null || radioButton.getVisibility() != View.VISIBLE) {
+            if (currentUser != null) {
+                Bundle args = new Bundle();
+                args.putInt("user_id", currentUser.id);
+                if (currentEncryptedChat != null) {
+                    args.putLong("dialog_id", dialog_id);
+                }
+                ProfileActivity fragment = new ProfileActivity(args);
+                fragment.setPlayProfileAnimation(true);
+                presentFragment(fragment);
+            } else if (currentChat != null) {
+                Bundle args = new Bundle();
+                args.putInt("chat_id", currentChat.id);
+                ProfileActivity fragment = new ProfileActivity(args);
+                fragment.setChatInfo(info);
+                fragment.setPlayProfileAnimation(true);
+                presentFragment(fragment);
+            }
+        } else {
+            switchImportantMode(null);
+        }*/
+    }
+    public void clearOrDeletechat(final int id){
+        if (getParentActivity() == null) {
+            return;
+        }
+        final boolean isChat = (int) dialog_id < 0 && (int) (dialog_id >> 32) != 1;
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+        if (id == 3) {
+            builder.setMessage(LocaleController.getString("AreYouSureClearHistory", R.string.AreYouSureClearHistory));
+        } else {
+            if (isChat) {
+                builder.setMessage(LocaleController.getString("AreYouSureDeleteAndExit", R.string.AreYouSureDeleteAndExit));
+            } else {
+                builder.setMessage(LocaleController.getString("AreYouSureDeleteThisChat", R.string.AreYouSureDeleteThisChat));
+            }
+        }
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                if (id != 3) {
+                    if (isChat) {
+                        if (ChatObject.isNotInChat(currentChat)) {
+                            MessagesController.getInstance().deleteDialog(dialog_id, 0);
+                        } else {
+                            MessagesController.getInstance().deleteUserFromChat((int) -dialog_id, MessagesController.getInstance().getUser(UserConfig.getClientUserId()), null);
+                        }
+                    } else {
+                        MessagesController.getInstance().deleteDialog(dialog_id, 0);
+                    }
+                    finishFragment();
+                } else {
+                    MessagesController.getInstance().deleteDialog(dialog_id, 1);
+                }
+            }
+        });
+        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+        showDialog(builder.create());
+    }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index c6ea3cc32..6c4567125 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -78,6 +78,7 @@
 import org.telegram.ui.ChatActivity;
 import org.telegram.ui.DialogsActivity;
 import org.telegram.ui.StickersActivity;
+import org.telegram.ui.listners.OnAttachListner;
 import org.telegram.ui.listners.OnclicklistnerOnChatActivity;
 
 import java.io.File;
@@ -87,8 +88,9 @@
 
 public class ChatActivityEnterView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate, SizeNotifierFrameLayout.SizeNotifierFrameLayoutDelegate, StickersAlert.StickersAlertDelegate {
 
+    private static OnAttachListner mOnAttachListner;
     private final LinearLayout textFieldContainerparant;
-    private OnclicklistnerOnChatActivity mOnclicklistnerOnChatActivity;
+    public static OnclicklistnerOnChatActivity mOnclicklistnerOnChatActivity;
 
     public interface ChatActivityEnterViewDelegate {
         void onMessageSend(CharSequence message);
@@ -101,6 +103,13 @@
         void onMessageEditEnd(boolean loading);
     }
 
+
+    public static void onListnerAttachment(OnAttachListner oo){
+        mOnAttachListner =oo;
+    }
+
+
+
     private class SeekBarWaveformView extends View {
 
         private SeekBarWaveform seekBarWaveform;
@@ -542,6 +551,21 @@ public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, C
         textFieldContainerparant = new LinearLayout(context);
         textFieldContainerparant.setBackgroundColor(0x00000000);
         textFieldContainerparant.setOrientation(LinearLayout.VERTICAL);
+
+/*
+        textFieldContainerparant.findViewById(R.id.id_back_img).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                // hidePopup(true);
+                //View view = this.getCurrentFocus();
+                if( mOnclicklistnerOnChatActivity!=null) {
+                    mOnclicklistnerOnChatActivity.onClickListnerOnUi(1);
+                }
+            }
+
+        });
+*/
+
         addView(textFieldContainerparant, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
 
         textFieldContainer = new LinearLayout(context);
@@ -576,6 +600,7 @@ public void onClick(View view) {
 
         textFieldContainerparant.addView(textFieldContainer, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
         textFieldContainerparant.addView(View.inflate(context, R.layout.chat_layout, null));
+
         textFieldContainerparant.findViewById(R.id.id_back_img).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -587,8 +612,8 @@ public void onClick(View view) {
             }
 
         });
-        
-        
+
+
 
         messageEditText = new EditTextCaption(context);
         updateFieldHint();
@@ -744,6 +769,10 @@ public void afterTextChanged(Editable editable) {
             botButton.setOnClickListener(new OnClickListener() {
                 @Override
                 public void onClick(View v) {
+                    if (mOnAttachListner != null&&v.getTag().equals("attach")) {
+                        mOnAttachListner.onAttachlistner();
+                    }
+
                     if (botReplyMarkup != null) {
                         if (!isPopupShowing() || currentPopupContentType != 1) {
                             showPopup(1, 1);
@@ -2683,6 +2712,8 @@ private String getTrimmedString(String src) {
         return src;
     }
 
-
+    public static void onbacklistner(OnclicklistnerOnChatActivity mOnclicklistnerOnChatActivity){
+        ChatActivityEnterView.mOnclicklistnerOnChatActivity = mOnclicklistnerOnChatActivity;
+    }
 
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index c4a0da7b5..e9a93d597 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -35,6 +35,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.Components.AvatarDrawable;
@@ -289,6 +290,7 @@ public void didReceivedNotification(int id, Object... args) {
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.ADD_CONTACT);
         updateAvatarLayout();
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
         boolean animations = preferences.getBoolean("view_animations", true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 06df6be1b..764fbc251 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -15,6 +15,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.text.Editable;
 import android.text.InputType;
@@ -50,6 +51,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseSectionsAdapter;
 import org.telegram.ui.Adapters.ContactsAdapter;
 import org.telegram.ui.Adapters.SearchAdapter;
@@ -87,6 +89,7 @@
     private HashMap<Integer, TLRPC.User> ignoreUsers;
     private boolean allowUsernameSearch = true;
     private ContactsActivityDelegate delegate;
+    private View mView;
 
     public interface ContactsActivityDelegate {
         void didSelectContact(TLRPC.User user, String param);
@@ -214,10 +217,10 @@ public void onTextChanged(EditText editText) {
         listViewAdapter = new ContactsAdapter(context, onlyUsers ? 1 : 0, needPhonebook, ignoreUsers, chat_id != 0);
 
         fragmentView = new FrameLayout(context);
-
         LinearLayout emptyTextLayout = new LinearLayout(context);
         emptyTextLayout.setVisibility(View.INVISIBLE);
         emptyTextLayout.setOrientation(LinearLayout.VERTICAL);
+
         ((FrameLayout) fragmentView).addView(emptyTextLayout);
         FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) emptyTextLayout.getLayoutParams();
         layoutParams.width = LayoutHelper.MATCH_PARENT;
@@ -248,10 +251,15 @@ public boolean onTouch(View v, MotionEvent event) {
         layoutParams1 = (LinearLayout.LayoutParams) frameLayout.getLayoutParams();
         layoutParams1.width = LayoutHelper.MATCH_PARENT;
         layoutParams1.height = LayoutHelper.MATCH_PARENT;
+
         layoutParams1.weight = 0.5f;
         frameLayout.setLayoutParams(layoutParams1);
 
-        listView = new LetterSectionsListView(context);
+        mView=View.inflate(context,R.layout.layout_contact_activity,null);
+        ((FrameLayout)fragmentView).addView(mView);
+        mView.findViewById(R.id.ll_beck).setVisibility(View.GONE);
+
+        listView =  (LetterSectionsListView) fragmentView.findViewById(R.id.contact_list);
         listView.setEmptyView(emptyTextLayout);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDivider(null);
@@ -259,14 +267,27 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setFastScrollEnabled(true);
         listView.setScrollBarStyle(View.SCROLLBARS_OUTSIDE_OVERLAY);
         listView.setAdapter(listViewAdapter);
-        listView.setFastScrollAlwaysVisible(true);
-        listView.setVerticalScrollbarPosition(LocaleController.isRTL ? ListView.SCROLLBAR_POSITION_LEFT : ListView.SCROLLBAR_POSITION_RIGHT);
-        ((FrameLayout) fragmentView).addView(listView);
-        layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        listView.setLayoutParams(layoutParams);
+        if (Build.VERSION.SDK_INT >= 11) {
+            listView.setFastScrollAlwaysVisible(true);
+            listView.setVerticalScrollbarPosition(LocaleController.isRTL ? ListView.SCROLLBAR_POSITION_LEFT : ListView.SCROLLBAR_POSITION_RIGHT);
+        }
+
+
 
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
@@ -538,9 +559,17 @@ public void onClick(DialogInterface dialogInterface, int i) {
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CONTACT);
+        showTabsAndmenu();
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
+        if(destroyAfterSelect){
+            hideTabsAnsMenu();
+            mView.findViewById(R.id.ll_beck).setVisibility(View.VISIBLE);
+        }
+        else{showTabsAndmenu();}
+
 
         setContactMenuList();
 
@@ -606,10 +635,10 @@ public void setIgnoreUsers(HashMap<Integer, TLRPC.User> users) {
     private void setContactMenuList(){
         ArrayList<MenuItems> draweritems=new ArrayList<MenuItems>();
        /* draweritems.add(new MenuItems(LocaleController.getString("AddNewContact", R.string.add_new_contact),R.drawable.menu_plus,true, "",0));*/
-        draweritems.add(new MenuItems(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_broadcast, true, "",0));
-        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat),R.drawable.menu_broadcast,true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_bar_contact_plus, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat),R.drawable.menu_sectretchat,true, "",0));
         draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel),R.drawable.menu_broadcast,true, "",0));
-        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink),R.drawable.menu_broadcast,true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink),R.drawable.menu_wink,true, "",0));
 
         SlidingMenuAdapter adapter = new SlidingMenuAdapter(getParentActivity(),
                 draweritems);
@@ -630,6 +659,12 @@ private void setContactMenuList(){
         public void onItemClick(AdapterView<?> parent, View view, int position,
                                 long id) {
             switch(position){
+
+               /* case 0:
+               parentLayout.closeDrawer();
+
+                    //     closeDrawer();
+                    break;*/
                 case 0:
                     parentLayout.closeDrawer();
                     //   closeDrawer();
@@ -688,5 +723,4 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
     }
 
 
-
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
index da75104f5..7a48426ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
@@ -21,8 +21,10 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.CountryAdapter;
 import org.telegram.ui.Adapters.CountryAdapter.Country;
 import org.telegram.ui.Adapters.CountrySearchAdapter;
@@ -220,6 +222,7 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.SELECT_CUNTRY);
         if (listViewAdapter != null) {
             listViewAdapter.notifyDataSetChanged();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 7a2e4f926..63bcd2472 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -18,6 +18,7 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.graphics.Outline;
@@ -28,8 +29,10 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewOutlineProvider;
+import android.view.ViewParent;
 import android.view.ViewTreeObserver;
 import android.view.animation.AccelerateDecelerateInterpolator;
+import android.widget.AdapterView;
 import android.widget.EditText;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
@@ -39,6 +42,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.DialogObject;
@@ -53,6 +57,10 @@
 import org.telegram.payment.CheckPremiumUserRequester;
 import org.telegram.payment.UserPaymentInfo;
 import org.telegram.socialuser.BackgroundExecuter;
+import org.telegram.socialuser.Util;
+import org.telegram.socialuser.model.CustomHttpParams;
+import org.telegram.socialuser.runable.AddUserRequester;
+import org.telegram.socialuser.runable.GetUserRequester;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MessagesController;
@@ -61,8 +69,10 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.BottomSheet;
+import org.telegram.ui.Adapters.CountryAdapter;
 import org.telegram.ui.Adapters.DialogsAdapter;
 import org.telegram.ui.Adapters.DialogsSearchAdapter;
+import org.telegram.ui.Adapters.SlidingMenuAdapter;
 import org.telegram.ui.Cells.HintDialogCell;
 import org.telegram.ui.Cells.ProfileSearchCell;
 import org.telegram.ui.Cells.UserCell;
@@ -77,10 +87,11 @@
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.RecyclerListView;
 import org.telegram.ui.ActionBar.Theme;
+import org.telegram.ui.listners.OnSocialLogin;
 
 import java.util.ArrayList;
 
-public class DialogsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
+public class DialogsActivity extends BaseFragment implements OnSocialLogin, NotificationCenter.NotificationCenterDelegate {
     
     private RecyclerListView listView;
     private LinearLayoutManager layoutManager;
@@ -117,6 +128,32 @@
 
     private DialogsActivityDelegate delegate;
 
+
+
+    @Override
+    public void onSocialLoginSuccess() {
+        getParentActivity().runOnUiThread(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        presentFragment(new MyProfileActivity());
+
+                    }
+                }
+        );
+    }
+
+    @Override
+    public void onSocialLoginError() {
+
+    }
+
+    @Override
+    public void onSocialFailer(String userid) {
+
+    }
+
+
     public interface DialogsActivityDelegate {
         void didSelectDialog(DialogsActivity fragment, long dialog_id, boolean param);
     }
@@ -207,6 +244,32 @@ public void run() {
             passcodeItem = menu.addItem(1, R.drawable.lock_close);
             updatePasscodeButton();
         }
+
+        if(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getBoolean("Login_Status",true)) {
+            TLRPC.User user = UserConfig.getCurrentUser();
+            SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+            if(p.getString("dobforserver","").equals("")) {
+                ArrayList<CustomHttpParams> paramse = new ArrayList();
+                paramse.add(new CustomHttpParams("uniqueId", Util.getNumber(user.phone)));
+                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, DialogsActivity.this));
+            } else {
+                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                newuser.setDob(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver", "2000-01-01"));
+                newuser.setSex(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("sex", "M"));
+                newuser.setId(user.id + "");
+
+                CountryAdapter.Country cu = Util.getcountry((ApplicationLoader.
+                        applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("country", "india")));
+                newuser.setcCode(cu.shortname);
+                newuser.setname((user.first_name != null ? user.first_name : "") + " " + (user.last_name != null ? user.last_name : ""));
+                newuser.setPhoto(user.photo);
+                newuser.setPhone(user.phone);
+                newuser.setUsername(user.username);
+                BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser, null));
+            } }
+
+        BackgroundExecuter.getInstance().execute(new CheckPremiumUserRequester(UserPaymentInfo.getInstatance().getUserId()));
+
         final ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
@@ -219,7 +282,7 @@ public void onSearchExpand() {
                         emptyView.setVisibility(View.GONE);
                     }
                     if (!onlySelect) {
-                        floatingButton.setVisibility(View.GONE);
+                     //   floatingButton.setVisibility(View.GONE);
                     }
                 }
                 updatePasscodeButton();
@@ -250,10 +313,10 @@ public void onSearchCollapse() {
                         listView.setEmptyView(emptyView);
                     }
                     if (!onlySelect) {
-                        floatingButton.setVisibility(View.VISIBLE);
+                      /*  floatingButton.setVisibility(View.VISIBLE);
                         floatingHidden = true;
                         floatingButton.setTranslationY(AndroidUtilities.dp(100));
-                        hideFloatingButton(false);
+                        hideFloatingButton(false);*/
                     }
                     if (listView.getAdapter() != dialogsAdapter) {
                         listView.setAdapter(dialogsAdapter);
@@ -658,6 +721,7 @@ public boolean onTouch(View v, MotionEvent event) {
         progressView = new ProgressBar(context);
         progressView.setVisibility(View.GONE);
         frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
+/*
 
         floatingButton = new ImageView(context);
         floatingButton.setVisibility(onlySelect ? View.GONE : View.VISIBLE);
@@ -686,6 +750,7 @@ public void onClick(View v) {
                 presentFragment(new ContactsActivity(args));
             }
         });
+*/
 
         listView.setOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
@@ -713,7 +778,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     }
                 }
 
-                if (floatingButton.getVisibility() != View.GONE) {
+             /*   if (floatingButton.getVisibility() != View.GONE) {
                     final View topChild = recyclerView.getChildAt(0);
                     int firstViewTop = 0;
                     if (topChild != null) {
@@ -734,7 +799,7 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                     prevPosition = firstVisibleItem;
                     prevTop = firstViewTop;
                     scrollUpdated = true;
-                }
+                }*/
             }
         });
 
@@ -843,6 +908,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
     @Override
     public void onResume() {
         super.onResume();
+        showTabsAndmenu();
+        setChatMenuList();
         if (dialogsAdapter != null) {
             dialogsAdapter.notifyDataSetChanged();
         }
@@ -905,7 +972,7 @@ protected void onDialogDismiss(Dialog dialog) {
     @Override
     public void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
-        if (!onlySelect && floatingButton != null) {
+   /*     if (!onlySelect && floatingButton != null) {
             floatingButton.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
                 @Override
                 public void onGlobalLayout() {
@@ -920,7 +987,7 @@ public void onGlobalLayout() {
                     }
                 }
             });
-        }
+        }*/
     }
 
     @Override
@@ -1049,14 +1116,14 @@ private void updatePasscodeButton() {
     }
 
     private void hideFloatingButton(boolean hide) {
-        if (floatingHidden == hide) {
+      /*  if (floatingHidden == hide) {
             return;
         }
         floatingHidden = hide;
         ObjectAnimator animator = ObjectAnimator.ofFloat(floatingButton, "translationY", floatingHidden ? AndroidUtilities.dp(100) : 0).setDuration(300);
         animator.setInterpolator(floatingInterpolator);
         floatingButton.setClickable(!hide);
-        animator.start();
+        animator.start();*/
     }
 
     private void updateVisibleRows(int mask) {
@@ -1182,4 +1249,116 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         }
     }
+
+    ////////////////////////////////////////Drawer menu list updated and redesigned below/////////////////////////////////
+
+
+    private void setChatMenuList() {
+        ArrayList<MenuItems> draweritems = new ArrayList<MenuItems>();
+        draweritems.add(new MenuItems(LocaleController.getString("NewChat", R.string.new_chat), R.drawable.menu_bar_chat, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewGroup", R.string.NewGroup), R.drawable.menu_group, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewSecretChat", R.string.NewSecretChat), R.drawable.menu_sectretchat, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("NewBroadcastList", R.string.CreateChannel), R.drawable.menu_broadcast, true, "",0));
+        draweritems.add(new MenuItems(LocaleController.getString("Wink", R.string.wink),R.drawable.menu_wink,true, "",0));
+
+        SlidingMenuAdapter adapter = new SlidingMenuAdapter(getParentActivity(),
+                draweritems);
+        ViewParent view = parentLayout.getParent();
+        ListView drawerList = ((ListView) ((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+        drawerList.setAdapter(adapter);
+        drawerList.setOnItemClickListener(new ChatMenuClickListener());
+        ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.INVISIBLE);
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.INVISIBLE);
+        // ((View) view.getParent()).findViewById(R.id.divider).setBackgroundColor(getParentActivity().getResources().getColor(R.color.divider));
+        ((ImageView) ((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.transparent);
+        ((TextView) ((View) view.getParent()).findViewById(R.id.row_title)).setText("");
+        ((View) view.getParent()).findViewById(R.id.menu_container).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+
+            }
+        });
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+
+            }
+        });
+    }
+
+
+    private class ChatMenuClickListener implements
+            ListView.OnItemClickListener {
+        @Override
+        public void onItemClick(AdapterView<?> parent, View view, int position,
+                                long id) {
+            switch (position) {
+
+                case 0:
+                    parentLayout.closeDrawer();
+                    Bundle args2 = new Bundle();
+                    args2.putBoolean("onlyUsers", true);
+                    args2.putBoolean("destroyAfterSelect", true);
+                    args2.putBoolean("usersAsSections", true);
+                    args2.putString("title", LocaleController.getString("SelectContact", R.string.SelectContact));
+                    presentFragment(new ContactsActivity(args2));
+                    break;
+                case 1:
+                    parentLayout.closeDrawer();
+                    //closeDrawer();
+                    presentFragment(new GroupCreateActivity());
+                    break;
+                case 2:
+                    parentLayout.closeDrawer();
+
+                    // closeDrawer();
+                    Bundle args = new Bundle();
+                    args.putBoolean("onlyUsers", true);
+                    args.putBoolean("destroyAfterSelect", true);
+                    args.putBoolean("usersAsSections", true);
+                    args.putBoolean("createSecretChat", true);
+                    args.putString("title", LocaleController.getString("NewSecretChat", R.string.NewSecretChat));
+                    presentFragment(new ContactsActivity(args));
+                    break;
+                case 3:
+
+                    parentLayout.closeDrawer();
+
+                    if (!MessagesController.isFeatureEnabled("broadcast_create", parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 1))) {
+                        return;
+                    }
+                    SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                    if (preferences.getBoolean("channel_intro", false)) {
+                        Bundle ars = new Bundle();
+                        ars.putInt("step", 0);
+
+                        presentFragment(new ChannelCreateActivity(ars));
+                    } else {
+                        presentFragment(new ChannelIntroActivity());
+                        preferences.edit().putBoolean("channel_intro", true).commit();
+
+
+                    }
+
+                    break;
+                case 4:
+                    SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("preferences", Activity.MODE_PRIVATE);
+                    if(p.getString("minage","0").equals("0")){
+                        presentFragment(new PreferencesActivity());
+                    }
+                    else {
+                        Bundle arg = new Bundle();
+                        arg.putString("s_friend", "wink");
+                        presentFragment(new SocialFriendActivity(arg));
+                    }
+                    break;
+            }
+
+        }
+    }
+
+
+
+
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index 7a36f9e21..6cce0d312 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -34,6 +34,7 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
@@ -347,6 +348,9 @@ public void onResume() {
             listAdapter.notifyDataSetChanged();
         }
         fixLayoutInternal();
+
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.SELECT_DOCUMENT);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 5d0506f43..46416f50a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -47,6 +47,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.ContactsAdapter;
 import org.telegram.ui.Adapters.SearchAdapter;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -62,6 +63,8 @@
 
 public class GroupCreateActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
+    private LinearLayout listContainer;
+
     public interface GroupCreateActivityDelegate {
         void didSelectUsers(ArrayList<Integer> ids);
     }
@@ -118,12 +121,20 @@ public void onFragmentDestroy() {
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.chatDidCreated);
     }
 
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CREATE_GROUP);
+
+    }
+
     @Override
     public View createView(Context context) {
         searching = false;
         searchWas = false;
-
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0x00000000);
         actionBar.setAllowOverlayTitle(true);
         if (isAlwaysShare) {
             if (isGroup) {
@@ -176,13 +187,13 @@ public void onItemClick(int id) {
         listViewAdapter = new ContactsAdapter(context, 1, false, null, false);
         listViewAdapter.setCheckedMap(selectedContacts);
 
-        fragmentView = new LinearLayout(context);
+        fragmentView = View.inflate(context,R.layout.layout_group_create_activity,null);/*new LinearLayout(context);
         LinearLayout linearLayout = (LinearLayout) fragmentView;
         linearLayout.setOrientation(LinearLayout.VERTICAL);
 
         FrameLayout frameLayout = new FrameLayout(context);
         linearLayout.addView(frameLayout, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT));
-
+*/
         userSelectEditText = new EditText(context);
         userSelectEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
         userSelectEditText.setHintTextColor(0xff979797);
@@ -198,7 +209,7 @@ public void onItemClick(int id) {
         userSelectEditText.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);
         userSelectEditText.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         AndroidUtilities.clearCursorDrawable(userSelectEditText);
-        frameLayout.addView(userSelectEditText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.TOP | Gravity.LEFT, 10, 0, 10, 0));
+      //  frameLayout.addView(userSelectEditText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.TOP | Gravity.LEFT, 10, 0, 10, 0));
 
         if (isAlwaysShare) {
             if (isGroup) {
@@ -296,10 +307,10 @@ public void afterTextChanged(Editable editable) {
             }
         });
 
-        LinearLayout emptyTextLayout = new LinearLayout(context);
+        LinearLayout emptyTextLayout =  (LinearLayout)fragmentView.findViewById(R.id.ll_group2); //new LinearLayout(context);
         emptyTextLayout.setVisibility(View.INVISIBLE);
         emptyTextLayout.setOrientation(LinearLayout.VERTICAL);
-        linearLayout.addView(emptyTextLayout, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+    //    linearLayout.addView(emptyTextLayout, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         emptyTextLayout.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -315,7 +326,9 @@ public boolean onTouch(View v, MotionEvent event) {
         emptyTextLayout.addView(emptyTextView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, 0.5f));
 
         FrameLayout frameLayout2 = new FrameLayout(context);
-        emptyTextLayout.addView(frameLayout2, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, 0.5f));
+      //  emptyTextLayout.addView(frameLayout2, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, 0.5f));
+
+        listContainer=(LinearLayout)fragmentView.findViewById(R.id.lv_container);
 
         listView = new LetterSectionsListView(context);
         listView.setEmptyView(emptyTextLayout);
@@ -327,7 +340,10 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setAdapter(listViewAdapter);
         listView.setFastScrollAlwaysVisible(true);
         listView.setVerticalScrollbarPosition(LocaleController.isRTL ? ListView.SCROLLBAR_POSITION_LEFT : ListView.SCROLLBAR_POSITION_RIGHT);
-        linearLayout.addView(listView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+      //  linearLayout.addView(listView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        listContainer.addView(listView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
+
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
@@ -428,6 +444,21 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
             }
         });
 
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
         return fragmentView;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
index 3c3cef490..4b2c2a14e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
@@ -29,6 +29,7 @@
 import android.widget.ListView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesStorage;
@@ -38,6 +39,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.UserCell;
@@ -136,6 +138,7 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.GROUP_CREATE_FINAL_ACTIVITY);
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
index a3ec2c9ad..495449033 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
@@ -33,6 +33,7 @@
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
@@ -194,6 +195,7 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.GROUP_INVITE);
     }
 
     private void generateLink(final boolean newRequest) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
index 401a1b005..5aceeeb10 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
@@ -35,6 +35,7 @@
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.IdenticonDrawable;
@@ -163,6 +164,7 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     public void onResume() {
         super.onResume();
         fixLayout();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.IDENTICONACTIVITY);
     }
 
     private void fixLayout() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
index 06c8d4f69..bc21e97cc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
@@ -28,14 +28,18 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.Theme;
 
 public class IntroActivity extends Activity {
 
+
     private ViewPager viewPager;
     private ImageView topImage1;
     private ImageView topImage2;
@@ -51,7 +55,6 @@
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.Theme_TMessages);
         super.onCreate(savedInstanceState);
-        Theme.loadRecources(this);
         requestWindowFeature(Window.FEATURE_NO_TITLE);
 
         if (AndroidUtilities.isTablet()) {
@@ -68,6 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     R.drawable.intro5,
                     R.drawable.intro4,
                     R.drawable.intro3,
+                    R.drawable.social,
                     R.drawable.intro2,
                     R.drawable.intro1
             };
@@ -77,6 +81,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     R.string.Page5Title,
                     R.string.Page4Title,
                     R.string.Page3Title,
+                    R.string.Page0Title,
                     R.string.Page2Title,
                     R.string.Page1Title
             };
@@ -86,6 +91,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     R.string.Page5Message,
                     R.string.Page4Message,
                     R.string.Page3Message,
+                    R.string.Page0Message,
                     R.string.Page2Message,
                     R.string.Page1Message
             };
@@ -93,6 +99,7 @@ protected void onCreate(Bundle savedInstanceState) {
             icons = new int[]{
                     R.drawable.intro1,
                     R.drawable.intro2,
+                    R.drawable.social,
                     R.drawable.intro3,
                     R.drawable.intro4,
                     R.drawable.intro5,
@@ -102,6 +109,7 @@ protected void onCreate(Bundle savedInstanceState) {
             titles = new int[]{
                     R.string.Page1Title,
                     R.string.Page2Title,
+                    R.string.Page0Title,
                     R.string.Page3Title,
                     R.string.Page4Title,
                     R.string.Page5Title,
@@ -111,6 +119,7 @@ protected void onCreate(Bundle savedInstanceState) {
             messages = new int[]{
                     R.string.Page1Message,
                     R.string.Page2Message,
+                    R.string.Page0Message,
                     R.string.Page3Message,
                     R.string.Page4Message,
                     R.string.Page5Message,
@@ -167,6 +176,7 @@ public void onPageScrollStateChanged(int i) {
                         fadeinImage.clearAnimation();
                         fadeoutImage.clearAnimation();
 
+
                         Animation outAnimation = AnimationUtils.loadAnimation(IntroActivity.this, R.anim.icon_anim_fade_out);
                         outAnimation.setAnimationListener(new Animation.AnimationListener() {
                             @Override
@@ -222,7 +232,7 @@ public void onClick(View view) {
                 finish();
             }
         });
-        if (BuildVars.DEBUG_VERSION) {
+        if (BuildConfig.DEBUG) {
             startMessagingButton.setOnLongClickListener(new View.OnLongClickListener() {
                 @Override
                 public boolean onLongClick(View v) {
@@ -238,10 +248,11 @@ public boolean onLongClick(View v) {
     @Override
     protected void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.INTRO_ACTIVITY);
         if (justCreated) {
             if (LocaleController.isRTL) {
-                viewPager.setCurrentItem(6);
-                lastPage = 6;
+                viewPager.setCurrentItem(7);
+                lastPage = 7;
             } else {
                 viewPager.setCurrentItem(0);
                 lastPage = 0;
@@ -261,7 +272,7 @@ protected void onPause() {
     private class IntroAdapter extends PagerAdapter {
         @Override
         public int getCount() {
-            return 7;
+            return 8;
         }
 
         @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
index 1fc54b735..b40ea4e71 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
@@ -24,10 +24,12 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextSettingsCell;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -53,10 +55,12 @@
 
     @Override
     public View createView(Context context) {
+
+        hideTabsAnsMenu();
         searching = false;
         searchWas = false;
-
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0x00000000);//todo
+        // actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("Language", R.string.Language));
 
@@ -64,16 +68,18 @@ public View createView(Context context) {
             @Override
             public void onItemClick(int id) {
                 if (id == -1) {
+                    // actionBar.setBackButtonImage(0x0000000);//todo
                     finishFragment();
+                    // actionBar.setBackButtonImage(0x0000000);//todo
                 }
             }
         });
-
         ActionBarMenu menu = actionBar.createMenu();
         ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
                 searching = true;
+                // actionBar.setBackButtonImage(R.drawable.ic_ab_back);//todo
             }
 
             @Override
@@ -104,17 +110,17 @@ public void onTextChanged(EditText editText) {
         listAdapter = new ListAdapter(context);
         searchListViewAdapter = new SearchAdapter(context);
 
-        fragmentView = new FrameLayout(context);
+        fragmentView =  View.inflate(context,R.layout.layout_language,null);       //new FrameLayout(context);
 
-        LinearLayout emptyTextLayout = new LinearLayout(context);
+        LinearLayout emptyTextLayout =(LinearLayout)fragmentView.findViewById(R.id.ll_language);   //new LinearLayout(context);
         emptyTextLayout.setVisibility(View.INVISIBLE);
         emptyTextLayout.setOrientation(LinearLayout.VERTICAL);
-        ((FrameLayout) fragmentView).addView(emptyTextLayout);
+       /* ((FrameLayout) fragmentView).addView(emptyTextLayout);
         FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) emptyTextLayout.getLayoutParams();
         layoutParams.width = LayoutHelper.MATCH_PARENT;
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         layoutParams.gravity = Gravity.TOP;
-        emptyTextLayout.setLayoutParams(layoutParams);
+        emptyTextLayout.setLayoutParams(layoutParams);*/
         emptyTextLayout.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -122,37 +128,57 @@ public boolean onTouch(View v, MotionEvent event) {
             }
         });
 
-        emptyTextView = new TextView(context);
+        emptyTextView = (TextView)fragmentView.findViewById(R.id.tv_lan);  //new TextView(context);
         emptyTextView.setTextColor(0xff808080);
         emptyTextView.setTextSize(20);
         emptyTextView.setGravity(Gravity.CENTER);
         emptyTextView.setText(LocaleController.getString("NoResult", R.string.NoResult));
-        emptyTextLayout.addView(emptyTextView);
+       /* emptyTextLayout.addView(emptyTextView);
         LinearLayout.LayoutParams layoutParams1 = (LinearLayout.LayoutParams) emptyTextView.getLayoutParams();
         layoutParams1.width = LayoutHelper.MATCH_PARENT;
         layoutParams1.height = LayoutHelper.MATCH_PARENT;
         layoutParams1.weight = 0.5f;
-        emptyTextView.setLayoutParams(layoutParams1);
+        emptyTextView.setLayoutParams(layoutParams1);*/
 
-        FrameLayout frameLayout = new FrameLayout(context);
-        emptyTextLayout.addView(frameLayout);
+        FrameLayout frameLayout = (FrameLayout)fragmentView.findViewById(R.id.fl_lan); //new FrameLayout(context);
+      /*  emptyTextLayout.addView(frameLayout);
         layoutParams1 = (LinearLayout.LayoutParams) frameLayout.getLayoutParams();
         layoutParams1.width = LayoutHelper.MATCH_PARENT;
         layoutParams1.height = LayoutHelper.MATCH_PARENT;
         layoutParams1.weight = 0.5f;
-        frameLayout.setLayoutParams(layoutParams1);
+        frameLayout.setLayoutParams(layoutParams1);*/
 
-        listView = new ListView(context);
+        listView = (ListView)fragmentView.findViewById(R.id.lv_lan);   //new ListView(context);
         listView.setEmptyView(emptyTextLayout);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setAdapter(listAdapter);
+        /*
         ((FrameLayout) fragmentView).addView(listView);
         layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
         layoutParams.width = LayoutHelper.MATCH_PARENT;
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         listView.setLayoutParams(layoutParams);
+*/
+  /*      View mView = View.inflate(context, R.layout.settings_layout, null);
+        ((FrameLayout) fragmentView).addView(mView);
+
+
+        mView.findViewById(R.id.black_view).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        mView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showTabsAndmenu();
+                finishFragment();
+            }
+        });*/
+
 
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -230,12 +256,30 @@ public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleI
             }
         });
 
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
+
         return fragmentView;
     }
 
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.SELECT_LANGUAGE_ACTIVITY);
+
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index f5ea7cf2e..c34e75287 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -73,6 +73,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.DrawerLayoutAdapter;
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -133,6 +134,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         ApplicationLoader.postInitApplication();
         NativeCrashManager.handleDumpFiles(this);
+        BackgroundExecuter.getInstance().execute(new CheckPremiumUserRequester(UserPaymentInfo.getInstatance().getUserId()));
 
         if (!UserConfig.isClientActivated()) {
             Intent intent = getIntent();
@@ -293,7 +295,7 @@ public void onClick(View v) {
             actionBarLayout.setLayoutParams(params);
             drawerLayout=((DrawerLayout)parentView.findViewById(R.id.chat_viewer_drawer_layout));
             actionBarLayout.setDrawerlayout(drawerLayout);
-     //       setTabEnableDisable(true,false,true);
+            setTabEnableDisable(true,false,true);
 
 
      //       drawerLayoutContainer.addView(actionBarLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
@@ -309,7 +311,7 @@ public void onClick(View v) {
                     BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, LaunchActivity.this));
                 }*/
                 presentFragment(new ContactsActivity(null), true, true);
-//                setTabEnableDisable(false, true, true);
+                setTabEnableDisable(false, true, true);
 
                 //      drawerLayoutContainer.closeDrawer(false);
 
@@ -324,8 +326,8 @@ public void onClick(View v) {
                     BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse, LaunchActivity.this));
                 }*/
                 presentFragment(new SettingsActivity(),true,true);
-            //    setTabEnableDisable(true, true, false);
-                //      drawerLayoutContainer.closeDrawer(false);
+                setTabEnableDisable(true, true, false);
+                //     drawerLayoutContainer.closeDrawer(false);
 
             }
         });
@@ -343,7 +345,7 @@ public void onClick(View v) {
             @Override
             public void onClick(View v) {
                 presentFragment(new DialogsActivity(null),true,true);
-              //  setTabEnableDisable(true,false,true);
+               setTabEnableDisable(true,false,true);
 
 //                drawerLayoutContainer.closeDrawer(false);
 
@@ -1836,6 +1838,7 @@ protected void onResume() {
         super.onResume();
         ApplicationLoader.mainInterfacePaused = false;
         onPasscodeResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.LAUNCH_ACTIVITY);
         if (passcodeView.getVisibility() != View.VISIBLE) {
             actionBarLayout.onResume();
             if (AndroidUtilities.isTablet()) {
@@ -1927,7 +1930,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 mainFragmentsStack.get(mainFragmentsStack.size() - 1).showDialog(builder.create());
             }
         } else if (id == NotificationCenter.wasUnableToFindCurrentLocation) {
-            final HashMap<String, MessageObject> waitingForLocation = (HashMap<String, MessageObject>) args[0];
+            /*final HashMap<String, MessageObject> waitingForLocation = (HashMap<String, MessageObject>) args[0];
             AlertDialog.Builder builder = new AlertDialog.Builder(this);
             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
             builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
@@ -1957,7 +1960,7 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
             builder.setMessage(LocaleController.getString("ShareYouLocationUnable", R.string.ShareYouLocationUnable));
             if (!mainFragmentsStack.isEmpty()) {
                 mainFragmentsStack.get(mainFragmentsStack.size() - 1).showDialog(builder.create());
-            }
+            }*/
         }
     }
 
@@ -2359,6 +2362,27 @@ public void onRebuildAllFragments(ActionBarLayout layout) {
                 actionBarLayout.showLastFragment();
             }
         }
-        drawerLayoutAdapter.notifyDataSetChanged();
+//        drawerLayoutAdapter.notifyDataSetChanged();
+    }
+
+
+
+    /////////////////////////////////////////////////////////////////////////////////////////////
+
+    /**
+     *
+     *  enable and disable tabs
+     *  onClick event
+     *
+     */
+
+    private void setTabEnableDisable(boolean firstTab,boolean secondTab,boolean thirdTab){
+        parentView.findViewById(R.id.contact).setEnabled(firstTab);
+        parentView.findViewById(R.id.message).setEnabled(secondTab);
+        parentView.findViewById(R.id.setting).setEnabled(thirdTab);
+        parentView.findViewById(R.id.contact).setSelected(!firstTab);
+        parentView.findViewById(R.id.message).setSelected(!secondTab);
+        parentView.findViewById(R.id.setting).setSelected(!thirdTab);
     }
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index 9e03f4ff7..b23985a15 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -4,7 +4,8 @@
  * You should have received a copy of the license in this archive (see LICENSE).
  *
  * Copyright Nikolai Kudashov, 2013-2016.
- */
+ *//*
+
 
 package org.telegram.ui;
 
@@ -956,3 +957,4 @@ private void updateSearchInterface() {
         }
     }
 }
+*/
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index dce7b5f89..2390fd13e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -59,18 +59,27 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.payment.CheckPremiumUserRequester;
+import org.telegram.socialuser.BackgroundExecuter;
+import org.telegram.socialuser.Util;
+import org.telegram.socialuser.model.CustomHttpParams;
+import org.telegram.socialuser.runable.AddUserRequester;
+import org.telegram.socialuser.runable.GetUserRequester;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Adapters.CountryAdapter;
 import org.telegram.ui.Components.HintEditText;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.SlideView;
+import org.telegram.ui.listners.OnSocialLogin;
 
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
@@ -84,7 +93,7 @@
 import java.util.Timer;
 import java.util.TimerTask;
 
-public class LoginActivity extends BaseFragment {
+public class LoginActivity extends BaseFragment implements OnSocialLogin {
 
     private int currentViewNum = 0;
     private SlideView[] views = new SlideView[8];
@@ -201,6 +210,8 @@ public void onPause() {
     public void onResume() {
         super.onResume();
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.LOGIN);
+
         try {
             if (currentViewNum >= 1 && currentViewNum <= 4 && views[currentViewNum] instanceof LoginActivitySmsView) {
                 int time = ((LoginActivitySmsView) views[currentViewNum]).openTime;
@@ -507,6 +518,34 @@ private void fillNextCodeParams(Bundle params, TLRPC.TL_auth_sentCode res) {
         }
     }
 
+    @Override
+    public void onSocialLoginSuccess() {
+        getParentActivity().runOnUiThread(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        presentFragment(new MyProfileActivity());
+
+                    }
+                }
+        );
+    }
+
+
+    @Override
+    public void onSocialLoginError() {
+
+
+        // needFinishActivity();
+    }
+
+    @Override
+    public void onSocialFailer(String userId) {
+        BackgroundExecuter.getInstance().execute(new CheckPremiumUserRequester(userId));
+
+        // needFinishActivity();
+    }
+
     public class PhoneView extends SlideView implements AdapterView.OnItemSelectedListener {
 
         private EditText codeField;
@@ -1548,6 +1587,10 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ArrayList<CustomHttpParams> paramse =new ArrayList();//todo change
+                                paramse.add(new CustomHttpParams("uniqueId",Util.getNumber(res.user.phone)));
+                                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse,LoginActivity.this));
+
                                 needFinishActivity();
                             } else {
                                 lastError = error.text;
@@ -2010,6 +2053,10 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ArrayList<CustomHttpParams> paramse =new ArrayList();//todo change
+                                paramse.add(new CustomHttpParams("uniqueId",Util.getNumber(res.user.phone)));
+                                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse,LoginActivity.this));
+
                                 needFinishActivity();
                             } else {
                                 if (error.text.equals("PASSWORD_HASH_INVALID")) {
@@ -2233,6 +2280,10 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ArrayList<CustomHttpParams> paramse =new ArrayList();//todo
+                                paramse.add(new CustomHttpParams("uniqueId", Util.getNumber(res.user.phone)));
+                                BackgroundExecuter.getInstance().execute(new GetUserRequester(paramse,LoginActivity.this));
+
                                 needFinishActivity();
                             } else {
                                 if (error.text.startsWith("CODE_INVALID")) {
@@ -2447,6 +2498,24 @@ public void run() {
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
+                                ////////////
+                                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                                if(!ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver","2000-06-06").equalsIgnoreCase("2000-06-06")) {
+                                    //paramse.add(new CustomHttpParams("uniqueId",Util.getNumber(res.user.phone)));
+                                    newuser.setDob(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("dobforserver", "2000-06-06"));
+                                    newuser.setSex(ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("sex", "M"));
+                                    newuser.setId(res.user.id + "");
+                                    // p.edit().putString("country",name).commit();
+                                    CountryAdapter.Country cu = Util.getcountry((ApplicationLoader.
+                                            applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("country", "india")));
+                                    newuser.setcCode(cu.shortname);
+                                    newuser.setname((res.user.first_name != null ? res.user.first_name : "") + " " + (res.user.last_name != null ? res.user.last_name : ""));
+                                    newuser.setPhoto(res.user.photo);
+                                    newuser.setPhone(res.user.phone);
+                                    newuser.setUsername(res.user.username);
+                                    BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser, null));
+                                }
+                                ////////////
                                 needFinishActivity();
                             } else {
                                 if (error.text.contains("PHONE_NUMBER_INVALID")) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ManageSpaceActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ManageSpaceActivity.java
index 65430d061..e49e06d51 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ManageSpaceActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ManageSpaceActivity.java
@@ -29,6 +29,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBarLayout;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
@@ -291,6 +292,8 @@ protected void onResume() {
         if (AndroidUtilities.isTablet()) {
             layersActionBarLayout.onResume();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.MANAGESPACE);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index 06e75bc50..7793abedc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -58,6 +58,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.ActionBarPopupWindow;
@@ -242,7 +243,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonDrawable(new BackDrawable(false));
+        // actionBar.setBackButtonDrawable(new BackDrawable(false));
         actionBar.setTitle("");
         actionBar.setAllowOverlayTitle(false);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -257,8 +258,15 @@ public void onItemClick(int id) {
                         actionBar.hideActionMode();
                         listView.invalidateViews();
                     } else {
-                        finishFragment();
-                    }
+                        if (Build.VERSION.SDK_INT < 11 && listView != null) {
+                            listView.setAdapter(null);
+                            listView = null;
+                            photoVideoAdapter = null;
+                            documentsAdapter = null;
+                            audioAdapter = null;
+                            linksAdapter = null;
+                        }
+                        finishFragment();}
                 } else if (id == shared_media_item) {
                     if (selectedMode == 0) {
                         return;
@@ -331,7 +339,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
                     DialogsActivity fragment = new DialogsActivity(args);
-                    fragment.setDelegate(new DialogsActivity.DialogsActivityDelegate() {
+                    /*fragment.setDelegate(new DialogsActivity.MessagesActivityDelegate() {
                         @Override
                         public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                             int lower_part = (int) did;
@@ -343,9 +351,6 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                                 } else if (lower_part < 0) {
                                     args.putInt("chat_id", -lower_part);
                                 }
-                                if (!MessagesController.checkCanOpenChat(args, fragment)) {
-                                    return;
-                                }
 
                                 ArrayList<MessageObject> fmessages = new ArrayList<>();
                                 for (int a = 1; a >= 0; a--) {
@@ -362,7 +367,6 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                                 actionBar.hideActionMode();
 
                                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
-
                                 ChatActivity chatActivity = new ChatActivity(args);
                                 presentFragment(chatActivity, true);
                                 chatActivity.showReplyPanel(true, null, fmessages, null, false, false);
@@ -374,7 +378,7 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                                 fragment.finishFragment();
                             }
                         }
-                    });
+                    });*/
                     presentFragment(fragment);
                 }
             }
@@ -437,18 +441,13 @@ public void onTextChanged(EditText editText) {
         searchItem.getSearchField().setHint(LocaleController.getString("Search", R.string.Search));
         searchItem.setVisibility(View.GONE);
 
-        dropDownContainer = new ActionBarMenuItem(context, menu, 0);
+        dropDownContainer = new ActionBarMenuItem(context, menu, R.drawable.bar_selector);
         dropDownContainer.setSubMenuOpenSide(1);
         dropDownContainer.addSubItem(shared_media_item, LocaleController.getString("SharedMediaTitle", R.string.SharedMediaTitle), 0);
         dropDownContainer.addSubItem(files_item, LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle), 0);
         if ((int) dialog_id != 0) {
             dropDownContainer.addSubItem(links_item, LocaleController.getString("LinksTitle", R.string.LinksTitle), 0);
             dropDownContainer.addSubItem(music_item, LocaleController.getString("AudioTitle", R.string.AudioTitle), 0);
-        } else {
-            TLRPC.EncryptedChat currentEncryptedChat = MessagesController.getInstance().getEncryptedChat((int) (dialog_id >> 32));
-            if (currentEncryptedChat != null && AndroidUtilities.getPeerLayerVersion(currentEncryptedChat.layer) >= 46) {
-                dropDownContainer.addSubItem(music_item, LocaleController.getString("AudioTitle", R.string.AudioTitle), 0);
-            }
         }
         actionBar.addView(dropDownContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, AndroidUtilities.isTablet() ? 64 : 56, 0, 40, 0));
         dropDownContainer.setOnClickListener(new View.OnClickListener() {
@@ -486,9 +485,9 @@ public boolean onTouch(View v, MotionEvent event) {
         actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f, 65, 0, 0, 0));
 
         if ((int) dialog_id != 0) {
-            actionModeViews.add(actionMode.addItem(forward, R.drawable.ic_ab_fwd_forward, Theme.ACTION_BAR_MODE_SELECTOR_COLOR, null, AndroidUtilities.dp(54)));
+            actionModeViews.add(actionMode.addItem(forward, R.drawable.ic_ab_fwd_forward, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
         }
-        actionModeViews.add(actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, Theme.ACTION_BAR_MODE_SELECTOR_COLOR, null, AndroidUtilities.dp(54)));
+        actionModeViews.add(actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
         photoVideoAdapter = new SharedPhotoVideoAdapter(context);
         documentsAdapter = new SharedDocumentsAdapter(context, 1);
@@ -511,7 +510,7 @@ public boolean onTouch(View v, MotionEvent event) {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
                 if ((selectedMode == 1 || selectedMode == 4) && view instanceof SharedDocumentCell) {
-                    MediaActivity.this.onItemClick(i, view, ((SharedDocumentCell) view).getMessage(), 0);
+                 //   MediaActivity.this.onItemClick(i, view, ((SharedDocumentCell) view).getDocument(), 0);
                 } else if (selectedMode == 3 && view instanceof SharedLinkCell) {
                     MediaActivity.this.onItemClick(i, view, ((SharedLinkCell) view).getMessage(), 0);
                 }
@@ -559,8 +558,8 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
             public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id) {
                 if ((selectedMode == 1 || selectedMode == 4) && view instanceof SharedDocumentCell) {
                     SharedDocumentCell cell = (SharedDocumentCell) view;
-                    MessageObject message = cell.getMessage();
-                    return MediaActivity.this.onItemLongClick(message, view, 0);
+                    //MessageObject message = cell.getDocument();
+                   // return MediaActivity.this.onItemLongClick(message, view, 0);
                 } else if (selectedMode == 3 && view instanceof SharedLinkCell) {
                     SharedLinkCell cell = (SharedLinkCell) view;
                     MessageObject message = cell.getMessage();
@@ -612,7 +611,13 @@ public boolean onTouch(View v, MotionEvent event) {
         if (!AndroidUtilities.isTablet()) {
             frameLayout.addView(new PlayerView(context, this), LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 39, Gravity.TOP | Gravity.LEFT, 0, -36, 0, 0));
         }
-
+        ((FrameLayout) fragmentView).addView(View.inflate(context, R.layout.notification_settings, null));
+        frameLayout.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
         return fragmentView;
     }
 
@@ -771,6 +776,7 @@ public void onPause() {
     @Override
     public void onResume() {
         super.onResume();
+       ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.MEDIA_ACTIVITY);
         scrolling = true;
         if (photoVideoAdapter != null) {
             photoVideoAdapter.notifyDataSetChanged();
@@ -900,11 +906,7 @@ private void switchToCurrentSelectedMode() {
                 listView.setAdapter(photoVideoAdapter);
                 dropDown.setText(LocaleController.getString("SharedMediaTitle", R.string.SharedMediaTitle));
                 emptyImageView.setImageResource(R.drawable.tip1);
-                if ((int) dialog_id == 0) {
-                    emptyTextView.setText(LocaleController.getString("NoMediaSecret", R.string.NoMediaSecret));
-                } else {
-                    emptyTextView.setText(LocaleController.getString("NoMedia", R.string.NoMedia));
-                }
+                emptyTextView.setText(LocaleController.getString("NoMedia", R.string.NoMedia));
                 searchItem.setVisibility(View.GONE);
                 if (sharedMediaData[selectedMode].loading && sharedMediaData[selectedMode].messages.isEmpty()) {
                     progressView.setVisibility(View.VISIBLE);
@@ -921,20 +923,12 @@ private void switchToCurrentSelectedMode() {
                     listView.setAdapter(documentsAdapter);
                     dropDown.setText(LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle));
                     emptyImageView.setImageResource(R.drawable.tip2);
-                    if ((int) dialog_id == 0) {
-                        emptyTextView.setText(LocaleController.getString("NoSharedFilesSecret", R.string.NoSharedFilesSecret));
-                    } else {
-                        emptyTextView.setText(LocaleController.getString("NoSharedFiles", R.string.NoSharedFiles));
-                    }
+                    emptyTextView.setText(LocaleController.getString("NoSharedFiles", R.string.NoSharedFiles));
                 } else if (selectedMode == 4) {
                     listView.setAdapter(audioAdapter);
                     dropDown.setText(LocaleController.getString("AudioTitle", R.string.AudioTitle));
                     emptyImageView.setImageResource(R.drawable.tip4);
-                    if ((int) dialog_id == 0) {
-                        emptyTextView.setText(LocaleController.getString("NoSharedAudioSecret", R.string.NoSharedAudioSecret));
-                    } else {
-                        emptyTextView.setText(LocaleController.getString("NoSharedAudio", R.string.NoSharedAudio));
-                    }
+                    emptyTextView.setText(LocaleController.getString("NoSharedAudio", R.string.NoSharedAudio));
                 }
                 searchItem.setVisibility(!sharedMediaData[selectedMode].messages.isEmpty() ? View.VISIBLE : View.GONE);
                 if (!sharedMediaData[selectedMode].loading && !sharedMediaData[selectedMode].endReached[0] && sharedMediaData[selectedMode].messages.isEmpty()) {
@@ -955,11 +949,7 @@ private void switchToCurrentSelectedMode() {
                 listView.setAdapter(linksAdapter);
                 dropDown.setText(LocaleController.getString("LinksTitle", R.string.LinksTitle));
                 emptyImageView.setImageResource(R.drawable.tip3);
-                if ((int) dialog_id == 0) {
-                    emptyTextView.setText(LocaleController.getString("NoSharedLinksSecret", R.string.NoSharedLinksSecret));
-                } else {
-                    emptyTextView.setText(LocaleController.getString("NoSharedLinks", R.string.NoSharedLinks));
-                }
+                emptyTextView.setText(LocaleController.getString("NoSharedLinks", R.string.NoSharedLinks));
                 searchItem.setVisibility(!sharedMediaData[3].messages.isEmpty() ? View.VISIBLE : View.GONE);
                 if (!sharedMediaData[selectedMode].loading && !sharedMediaData[selectedMode].endReached[0] && sharedMediaData[selectedMode].messages.isEmpty()) {
                     sharedMediaData[selectedMode].loading = true;
@@ -980,7 +970,7 @@ private void switchToCurrentSelectedMode() {
     }
 
     private boolean onItemLongClick(MessageObject item, View view, int a) {
-        if (actionBar.isActionModeShowed()) {
+  /*      if (actionBar.isActionModeShowed()) {
             return false;
         }
         AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
@@ -990,16 +980,18 @@ private boolean onItemLongClick(MessageObject item, View view, int a) {
         }
         actionBar.createActionMode().getItem(delete).setVisibility(cantDeleteMessagesCount == 0 ? View.VISIBLE : View.GONE);
         selectedMessagesCountTextView.setNumber(1, false);
-        AnimatorSet animatorSet = new AnimatorSet();
-        ArrayList<Animator> animators = new ArrayList<>();
-        for (int i = 0; i < actionModeViews.size(); i++) {
-            View view2 = actionModeViews.get(i);
-            AndroidUtilities.clearDrawableAnimation(view2);
-            animators.add(ObjectAnimator.ofFloat(view2, "scaleY", 0.1f, 1.0f));
-        }
-        animatorSet.playTogether(animators);
-        animatorSet.setDuration(250);
-        animatorSet.start();
+        if (Build.VERSION.SDK_INT >= 11) {
+            AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            ArrayList<Object> animators = new ArrayList<>();
+            for (int i = 0; i < actionModeViews.size(); i++) {
+                View view2 = actionModeViews.get(i);
+                AndroidUtilities.clearDrawableAnimation(view2);
+                animators.add(ObjectAnimatorProxy.ofFloat(view2, "scaleY", 0.1f, 1.0f));
+            }
+            animatorSet.playTogether(animators);
+            animatorSet.setDuration(250);
+            animatorSet.start();
+        }
         scrolling = false;
         if (view instanceof SharedDocumentCell) {
             ((SharedDocumentCell) view).setChecked(true, true);
@@ -1008,7 +1000,7 @@ private boolean onItemLongClick(MessageObject item, View view, int a) {
         } else if (view instanceof SharedLinkCell) {
             ((SharedLinkCell) view).setChecked(true, true);
         }
-        actionBar.showActionMode();
+        actionBar.showActionMode();*/
         return true;
     }
 
@@ -1057,7 +1049,7 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
                             }
                         }
                         File f = null;
-                        String fileName = message.messageOwner.media != null ? FileLoader.getAttachFileName(message.getDocument()) : "";
+                        String fileName = FileLoader.getAttachFileName(message.messageOwner.media.document);
                         if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
                             f = new File(message.messageOwner.attachPath);
                         }
@@ -1069,12 +1061,12 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
                             try {
                                 Intent intent = new Intent(Intent.ACTION_VIEW);
                                 MimeTypeMap myMime = MimeTypeMap.getSingleton();
-                                int idx = fileName.lastIndexOf('.');
+                                int idx = fileName.lastIndexOf(".");
                                 if (idx != -1) {
                                     String ext = fileName.substring(idx + 1);
                                     realMimeType = myMime.getMimeTypeFromExtension(ext.toLowerCase());
                                     if (realMimeType == null) {
-                                        realMimeType = message.getDocument().mime_type;
+                                        realMimeType = message.messageOwner.media.document.mime_type;
                                         if (realMimeType == null || realMimeType.length() == 0) {
                                             realMimeType = null;
                                         }
@@ -1104,16 +1096,16 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
                                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                                 builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                                 builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
-                                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", R.string.NoHandleAppInstalled, message.getDocument().mime_type));
+                                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", R.string.NoHandleAppInstalled, message.messageOwner.media.document.mime_type));
                                 showDialog(builder.create());
                             }
                         }
                     } else if (!cell.isLoading()) {
-                        FileLoader.getInstance().loadFile(cell.getMessage().getDocument(), false, false);
-                        cell.updateFileExistIcon();
+                        //FileLoader.getInstance().loadFile(cell.getDocument().messageOwner.media.document, true, false);
+                        //cell.updateFileExistIcon();
                     } else {
-                        FileLoader.getInstance().cancelLoadFile(cell.getMessage().getDocument());
-                        cell.updateFileExistIcon();
+                        //FileLoader.getInstance().cancelLoadFile(cell.getDocument().messageOwner.media.document);
+                        //cell.updateFileExistIcon();
                     }
                 }
             } else if (selectedMode == 3) {
@@ -1132,7 +1124,10 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
                         link = ((SharedLinkCell) view).getLink(0);
                     }
                     if (link != null) {
-                        Browser.openUrl(getParentActivity(), link);
+                        Uri uri = Uri.parse(link);
+                        Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+                        intent.putExtra(android.provider.Browser.EXTRA_APPLICATION_ID, getParentActivity().getPackageName());
+                        getParentActivity().startActivity(intent);
                     }
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
@@ -1143,7 +1138,7 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
 
     private void openWebView(TLRPC.WebPage webPage) {
         BottomSheet.Builder builder = new BottomSheet.Builder(getParentActivity());
-        builder.setCustomView(new WebFrameLayout(getParentActivity(), builder.create(), webPage.site_name, webPage.description, webPage.url, webPage.embed_url, webPage.embed_width, webPage.embed_height));
+     //   builder.setCustomView(new WebFrameLayout(getParentActivity(), builder.create(), webPage.title, webPage.url, webPage.embed_url, webPage.embed_width, webPage.embed_height));
         builder.setUseFullWidth(true);
         showDialog(builder.create());
     }
@@ -1555,7 +1550,7 @@ public void queryServerSearch(final String query, final int max_id, long did) {
             } else if (currentType == 3) {
                 req.filter = new TLRPC.TL_inputMessagesFilterUrl();
             } else if (currentType == 4) {
-                req.filter = new TLRPC.TL_inputMessagesFilterMusic();
+             //   req.filter = new TLRPC.TL_inputMessagesFilterAudioDocuments();
             }
             req.q = query;
             req.peer = MessagesController.getInputPeer(uid);
@@ -1571,7 +1566,7 @@ public void run(TLObject response, TLRPC.TL_error error) {
                         TLRPC.messages_Messages res = (TLRPC.messages_Messages) response;
                         for (int a = 0; a < res.messages.size(); a++) {
                             TLRPC.Message message = res.messages.get(a);
-                            if (max_id != 0 && message.id > max_id) {
+                            if (message.id > max_id) {
                                 continue;
                             }
                             messageObjects.add(new MessageObject(message, null, false));
@@ -1625,14 +1620,14 @@ private void processSearch(final String query) {
                 @Override
                 public void run() {
                     if (!sharedMediaData[currentType].messages.isEmpty()) {
-                        if (currentType == 1 || currentType == 4) {
+                        if (currentType == 1) {
                             MessageObject messageObject = sharedMediaData[currentType].messages.get(sharedMediaData[currentType].messages.size() - 1);
                             queryServerSearch(query, messageObject.getId(), messageObject.getDialogId());
-                        } else if (currentType == 3) {
+                        } else if (currentType == 3 || currentType == 4) {
                             queryServerSearch(query, 0, dialog_id);
                         }
                     }
-                    if (currentType == 1 || currentType == 4) {
+                    if (currentType == 1) {
                         final ArrayList<MessageObject> copy = new ArrayList<>();
                         copy.addAll(sharedMediaData[currentType].messages);
                         Utilities.searchQueue.postRunnable(new Runnable() {
@@ -1657,8 +1652,7 @@ public void run() {
 
                                 for (int a = 0; a < copy.size(); a++) {
                                     MessageObject messageObject = copy.get(a);
-                                    for (int b = 0; b < search.length; b++) {
-                                        String q = search[b];
+                                    for (String q : search) {
                                         String name = messageObject.getDocumentName();
                                         if (name == null || name.length() == 0) {
                                             continue;
@@ -1668,31 +1662,6 @@ public void run() {
                                             resultArray.add(messageObject);
                                             break;
                                         }
-                                        if (currentType == 4) {
-                                            TLRPC.Document document;
-                                            if (messageObject.type == 0) {
-                                                document = messageObject.messageOwner.media.webpage.document;
-                                            } else {
-                                                document = messageObject.messageOwner.media.document;
-                                            }
-                                            boolean ok = false;
-                                            for (int c = 0; c < document.attributes.size(); c++) {
-                                                TLRPC.DocumentAttribute attribute = document.attributes.get(c);
-                                                if (attribute instanceof TLRPC.TL_documentAttributeAudio) {
-                                                    if (attribute.performer != null) {
-                                                        ok = attribute.performer.toLowerCase().contains(q);
-                                                    }
-                                                    if (!ok && attribute.title != null) {
-                                                        ok = attribute.title.toLowerCase().contains(q);
-                                                    }
-                                                    break;
-                                                }
-                                            }
-                                            if (ok) {
-                                                resultArray.add(messageObject);
-                                                break;
-                                            }
-                                        }
                                     }
                                 }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
index 1d8fa6831..98bb0605e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MyProfileActivity.java
@@ -40,6 +40,7 @@
 import org.telegram.socialuser.runable.AddUserRequester;
 import org.telegram.tgnet.TLRPC;
 //import org.telegram.tracker.AnalyticsTrackers;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.CountryAdapter;
@@ -52,7 +53,7 @@
 import java.util.Calendar;
 import java.util.HashMap;
 
-public class MyProfileActivity extends BaseFragment implements OnAddUserListner,PhotoViewer.PhotoViewerProvider,View.OnClickListener,NotificationCenter.NotificationCenterDelegate{
+public class MyProfileActivity extends BaseFragment implements PhotoViewer.PhotoViewerProvider,View.OnClickListener,NotificationCenter.NotificationCenterDelegate{
     private BackupImageView avatarImageView;
     private TextView statusTextView,nameTextView;
     private FrameLayout avatarContainer;
@@ -81,7 +82,7 @@
     @Override
     public View createView(final Context context) {
 
-     //   hideTabsAnsMenu();
+        hideTabsAnsMenu();
         mcContext = context;
         currentUser = UserConfig.getCurrentUser();
         //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
@@ -142,7 +143,7 @@ public void didSelectCountry(String name) {
             }
         });
 
-    //  phone_txt.setText("+"+currentUser.phone);
+        //  phone_txt.setText("+"+currentUser.phone);
         gender.setOnClickListener(this);
         dob.setOnClickListener(this);
         save_btn.setOnClickListener(this);
@@ -164,7 +165,7 @@ public void didSelectCountry(String name) {
         nameTextView.setOnClickListener(this);
         avatarImageView.setOnClickListener(this);
         phone.setOnClickListener(this);
-             statusTextView.setOnClickListener(new View.OnClickListener() {
+        statusTextView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 if (getParentActivity() == null) {
@@ -184,17 +185,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
 
-       fragmentView.findViewById(R.id.backview).setOnClickListener(this);
-
-     //   ApplicationLoader.getInstance().addUIListener(OnAddUserListner.class,MyProfileActivity.this);
-
-
-
+        fragmentView.findViewById(R.id.backview).setOnClickListener(this);
         return fragmentView;
-
-
-
-
     }
 
 
@@ -208,8 +200,8 @@ public void onClick(View v) {
                 presentFragment(new ChangeUsernameActivity());
                 break;
             case R.id.backview:
-              //  showTabsAndmenu();
-                removeUIListeners();
+                showTabsAndmenu();
+                finishFragment();
                 break;
             case R.id.number:
                 presentFragment(new ChangePhoneHelpActivity());
@@ -225,9 +217,9 @@ public void onClick(View v) {
                 break;
             case R.id.age:
                 final Calendar c = Calendar.getInstance();
-               year = c.get(Calendar.YEAR);
-               month = c.get(Calendar.MONTH);
-               day = c.get(Calendar.DAY_OF_MONTH);
+                year = c.get(Calendar.YEAR);
+                month = c.get(Calendar.MONTH);
+                day = c.get(Calendar.DAY_OF_MONTH);
 
                 DatePickerDialog dpd = new DatePickerDialog(mcContext,
                         new DatePickerDialog.OnDateSetListener() {
@@ -241,10 +233,10 @@ public void onDateSet(DatePicker view, int year1,
                                 if(dateValidater(year1,monthOfYear,dayOfMonth)){
                                     ApplicationLoader.applicationContext.
                                             getSharedPreferences("socialuser", Activity.MODE_PRIVATE).edit()
-                                            .putString("dob", Util.getDateforserver(year1,monthOfYear,dayOfMonth)).commit();
+                                            .putString("dob",Util.getDateforserver(year1,monthOfYear,dayOfMonth)).commit();
                                     dob_txt.setText(Util.getDateforserver(year1,monthOfYear,dayOfMonth));
                                 } else{
-                                    Toast.makeText(mcContext, LocaleController.getString("pleaseselectvaliddate", R.string.pleaseselectvaliddate),Toast.LENGTH_SHORT).show();
+                                    Toast.makeText(mcContext,LocaleController.getString("pleaseselectvaliddate", R.string.pleaseselectvaliddate),Toast.LENGTH_SHORT).show();
                                     return;
                                 }
 
@@ -260,9 +252,9 @@ public void onDateSet(DatePicker view, int year1,
                 currentUser = UserConfig.getCurrentUser();
                 SharedPreferences p = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
                 setContact();
-                currentUser = UserConfig.getCurrentUser();
+                currentUser =UserConfig.getCurrentUser();
 
-               TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
+                TLRPC.TelegramUsers newuser = new TLRPC.TelegramUsers();
                 //String dob =Util.convertDate(p.getString("dob",showDate(year,month,day)));
                 newuser.setDob(Util.convertDate(p.getString("dob","2000-02-02")));
                 newuser.setSex(p.getString("sex",getGender()));
@@ -276,16 +268,16 @@ public void onDateSet(DatePicker view, int year1,
                 newuser.setPhone(currentUser.phone);
                 newuser.setUsername(currentUser.username);
                 BackgroundExecuter.getInstance().execute(new AddUserRequester(newuser,null));
-             //   finishFragment();
+                finishFragment();
                 break;
         }
     }
     @Override
     public void onResume() {
         super.onResume();
-     //   hideTabsAnsMenu();
+        hideTabsAnsMenu();
         currentUser = UserConfig.getCurrentUser();
-       // ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
+       ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
         statusTextView.setText(LocaleController.formatUserStatus(currentUser));
         phone_txt.setText("+"+currentUser.phone);
         phone_txt.setText("+"+currentUser.phone);
@@ -313,34 +305,34 @@ private void checkAndUpdateAvatar() {
     @Override
     public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index){
         if (fileLocation == null) {
-        return null;
-    }
+            return null;
+        }
 
-    TLRPC.FileLocation photoBig = null;
-    if (currentUser.id != 0) {
-        TLRPC.User user = MessagesController.getInstance().getUser(currentUser.id);
-        if (user != null && user.photo != null && user.photo.photo_big != null) {
-            photoBig = user.photo.photo_big;
+        TLRPC.FileLocation photoBig = null;
+        if (currentUser.id != 0) {
+            TLRPC.User user = MessagesController.getInstance().getUser(currentUser.id);
+            if (user != null && user.photo != null && user.photo.photo_big != null) {
+                photoBig = user.photo.photo_big;
+            }
         }
-    }
 
-    if (photoBig != null && photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
-        int coords[] = new int[2];
-        avatarImageView.getLocationInWindow(coords);
-        PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
-        object.viewX = coords[0];
-        object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
-        object.parentView = avatarImageView;
-        object.imageReceiver = avatarImageView.getImageReceiver();
-        object.user_id = currentUser.id;
-        object.thumb = object.imageReceiver.getBitmap();
-        object.size = -1;
-        object.radius = avatarImageView.getImageReceiver().getRoundRadius();
-      //  object.scale = ViewProxy.getScaleX(avatarImageView);
-        return object;
+        if (photoBig != null && photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
+            int coords[] = new int[2];
+            avatarImageView.getLocationInWindow(coords);
+            PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
+            object.viewX = coords[0];
+            object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
+            object.parentView = avatarImageView;
+            object.imageReceiver = avatarImageView.getImageReceiver();
+            object.user_id = currentUser.id;
+            object.thumb = object.imageReceiver.getBitmap();
+            object.size = -1;
+            object.radius = avatarImageView.getImageReceiver().getRoundRadius();
+         //   object.scale = ViewProxy.getScaleX(avatarImageView);
+            return object;
+        }
+        return null;
     }
-    return null;
-}
 
 
     @Override
@@ -435,7 +427,7 @@ private String getGender(){
     public CountryAdapter.Country getcountry(String name){
         CountryAdapter k = new CountryAdapter(mcContext);
         HashMap<String, ArrayList<CountryAdapter.Country>> countries = k.getCountries();
-      //  ArrayList<String> sortedCountries = k.getSortedCountries();
+    //    ArrayList<String> sortedCountries = k.getSortedCountries();
         String s = name.substring(0,1).toUpperCase();
         ArrayList<CountryAdapter.Country> dd = countries.get(s);
         for(CountryAdapter.Country selectcountry:dd){
@@ -446,12 +438,12 @@ private String getGender(){
         return null;
     }
 
-private String getGender(String g){
-    if(!g.equalsIgnoreCase("")) {
-        return g.equalsIgnoreCase("m")?"Male":"Female";
+    private String getGender(String g){
+        if(!g.equalsIgnoreCase("")) {
+            return g.equalsIgnoreCase("m")?"Male":"Female";
+        }
+        return "Gender";
     }
-    return "Gender";
-}
 
     private boolean dateValidater(int yr,int mn,int dt){
         try {
@@ -512,46 +504,4 @@ void setContact(){
         }
 
     }
-
-
-
-
-
-
-    @Override
-    public void setUserAddSuccess() {
-      getParentActivity().runOnUiThread(new Runnable() {
-            @Override
-            public void run() {
-         Toast.makeText(getParentActivity(),"Profile Saved !!",Toast.LENGTH_LONG).show();
-              removeUIListeners();
-
-                      }
-        });
-    }
-
-    @Override
-    public void setUserAddFailed() {
-
-        getParentActivity().runOnUiThread(new Runnable() {
-            @Override
-            public void run() {
-
-                Toast.makeText(getParentActivity(),"Error in save profile !",Toast.LENGTH_LONG).show();
-
-            }
-        });
-
-     //   removeUIListeners();
-    }
-
-
-
-
-   public void removeUIListeners(){
-    //   ApplicationLoader.getInstance().removeUIListener(OnAddUserListner.class,MyProfileActivity.this);
-         finishFragment();
-
-   }
-
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 513a21ae7..d00cdbb12 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -40,6 +40,7 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.HeaderCell;
 import org.telegram.ui.Cells.ShadowSectionCell;
@@ -162,7 +163,8 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0x00000000);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -174,7 +176,7 @@ public void onItemClick(int id) {
             }
         });
 
-        fragmentView = new FrameLayout(context);
+        /*fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
 
         listView = new ListView(context);
@@ -187,6 +189,30 @@ public void onItemClick(int id) {
         layoutParams.height = LayoutHelper.MATCH_PARENT;
         listView.setLayoutParams(layoutParams);
         listView.setAdapter(new ListAdapter(context));
+        */
+
+
+        fragmentView =View.inflate(context, R.layout.settings_layout, null);
+
+        fragmentView.findViewById(R.id.black_view).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showTabsAndmenu();
+                finishFragment();
+            }
+        });
+
+        fragmentView.findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);
+        final ListAdapter listAdapter = new ListAdapter(getParentActivity());
+        listView = (ListView)fragmentView.findViewById(R.id.listView);
+        listView.setAdapter(listAdapter);
+
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, final View view, final int i, long l) {
@@ -576,6 +602,14 @@ public void onClick(DialogInterface dialog, int which) {
         return fragmentView;
     }
 
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.NOTIFICATION_SETTING);
+
+    }
+
     public void updateServerNotificationsSettings(boolean group) {
         //disable global settings sync
         /*SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
@@ -889,4 +923,10 @@ public boolean isEmpty() {
             return false;
         }
     }
+
+
+    ////////////////////////////////////////////////////////////////
+
+
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/OsmLocation.java b/TMessagesProj/src/main/java/org/telegram/ui/OsmLocation.java
new file mode 100644
index 000000000..43bf8b119
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/OsmLocation.java
@@ -0,0 +1,358 @@
+package org.telegram.ui;
+
+import android.Manifest;
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Point;
+import android.graphics.drawable.Drawable;
+import android.location.Location;
+import android.location.LocationListener;
+import android.location.LocationManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.view.View;
+import android.view.Window;
+import android.widget.TextView;
+
+import org.osmdroid.DefaultResourceProxyImpl;
+import org.osmdroid.ResourceProxy;
+import org.osmdroid.util.GeoPoint;
+import org.osmdroid.views.MapView;
+import org.osmdroid.views.overlay.ItemizedIconOverlay;
+import org.osmdroid.views.overlay.OverlayItem;
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.ContactsController;
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.MessageObject;
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.NotificationCenter;
+import org.telegram.messenger.R;
+import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
+import org.telegram.ui.Components.BackupImageView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by craterzone on 10/12/14.
+ */
+public class OsmLocation extends Activity implements NotificationCenter.NotificationCenterDelegate {
+    private ArrayList<OverlayItem> overlayItemArray;
+    private LocationManager locationManager;
+    private Location lastLocation;
+    private MapView mapView;
+    private static MessageObject message;
+    private static LocationActivityDelegate delegate;
+    private BackupImageView avatarImageView;
+    private TextView nameTextView;
+    private TextView distanceTextView;
+    private Location userLocation;
+
+    public static interface LocationActivityDelegate {
+        public abstract void didSelectLocation(TLRPC.TL_messageMediaGeo location);
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
+        setContentView(R.layout.location_view_layout);
+        if (message != null) {
+            findViewById(R.id.share_location).setVisibility(View.GONE);
+            findViewById(R.id.location_bottom_view).setVisibility(View.VISIBLE);
+            findViewById(R.id.navigation_option).setVisibility(View.GONE);
+            avatarImageView = (BackupImageView) findViewById(R.id.location_avatar_view);
+            nameTextView = (TextView) findViewById(R.id.location_name_label);
+            distanceTextView = (TextView) findViewById(R.id.location_distance_label);
+        } else {
+            findViewById(R.id.navigation_option).setVisibility(View.VISIBLE);
+            findViewById(R.id.share_location).setVisibility(View.VISIBLE);
+            findViewById(R.id.location_bottom_view).setVisibility(View.GONE);
+        }
+        findViewById(R.id.cancel_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finish();
+            }
+        });
+        findViewById(R.id.navigation_option).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                mapView.getController().setCenter(new GeoPoint(lastLocation.getLatitude(), lastLocation.getLongitude()));
+            }
+        });
+        mapView = (MapView) findViewById(R.id.map_view);
+
+        mapView.setBuiltInZoomControls(true);
+        mapView.setMultiTouchControls(true);
+        mapView.setBuiltInZoomControls(true);
+
+        mapView.getController().setZoom(12);
+
+        //--- Create Overlay
+        overlayItemArray = new ArrayList<OverlayItem>();
+
+        DefaultResourceProxyImpl defaultResourceProxyImpl
+                = new DefaultResourceProxyImpl(this);
+
+
+        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
+        ItemizedIconOverlay mMyLocationOverlay = null;
+        if (message != null) {
+            mapView.getController().setCenter(new GeoPoint(message.messageOwner.media.geo.lat, message.messageOwner.media.geo._long));
+            updateUserData();
+            userLocation = new Location("network");
+            userLocation.setLatitude(message.messageOwner.media.geo.lat);
+            userLocation.setLongitude(message.messageOwner.media.geo._long);
+            OverlayItem olItem = new OverlayItem("Here", "SampleDescription", new GeoPoint(userLocation.getLatitude(), userLocation.getLongitude()));
+            Drawable newMarker = this.getResources().getDrawable(R.drawable.ic_location);
+            olItem.setMarker(newMarker);
+            overlayItemArray.add(olItem);
+            DefaultResourceProxyImpl mResourceProxy = new DefaultResourceProxyImpl(getApplicationContext());
+
+            mMyLocationOverlay = new ItemizedIconOverlay<OverlayItem>(overlayItemArray, newMarker, new ItemizedIconOverlay.OnItemGestureListener<OverlayItem>() {
+                @Override
+                public boolean onItemSingleTapUp(int index, OverlayItem item) {
+                    return false;
+                }
+
+                @Override
+                public boolean onItemLongPress(int index, OverlayItem item) {
+                    return false;
+                }
+            }, mResourceProxy);
+        } else {
+            lastLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
+            if (lastLocation == null) {
+                if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                    // TODO: Consider calling
+                    //    ActivityCompat#requestPermissions
+                    // here to request the missing permissions, and then overriding
+                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+                    //                                          int[] grantResults)
+                    // to handle the case where the user grants the permission. See the documentation
+                    // for ActivityCompat#requestPermissions for more details.
+                    return;
+                }
+                lastLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
+            }
+
+            if (lastLocation != null) {
+                updateLoc(lastLocation);
+            }
+            if (lastLocation == null) {
+                lastLocation = new Location("network");
+                lastLocation.setLatitude(20.659322);
+                lastLocation.setLongitude(-11.406250);
+            }
+            OverlayItem olItem = new OverlayItem("Here", "SampleDescription", new GeoPoint(lastLocation.getLatitude(), lastLocation.getLongitude()));
+            Drawable newMarker = this.getResources().getDrawable(R.drawable.ic_location);
+            olItem.setMarker(newMarker);
+            overlayItemArray.add(olItem);
+            DefaultResourceProxyImpl mResourceProxy = new DefaultResourceProxyImpl(getApplicationContext());
+
+            mMyLocationOverlay = new ItemizedIconOverlay<OverlayItem>(overlayItemArray, newMarker, new ItemizedIconOverlay.OnItemGestureListener<OverlayItem>() {
+                @Override
+                public boolean onItemSingleTapUp(int index, OverlayItem item) {
+                    return false;
+                }
+
+                @Override
+                public boolean onItemLongPress(int index, OverlayItem item) {
+                    return false;
+                }
+            }, mResourceProxy);
+        }
+
+        if (mMyLocationOverlay != null) {
+            mapView.getOverlays().add(mMyLocationOverlay);
+        }
+
+        findViewById(R.id.share_location).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (delegate != null) {
+                    TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
+                    location.geo = new TLRPC.TL_geoPoint();
+                    location.geo.lat = lastLocation.getLatitude();
+                    location.geo._long = lastLocation.getLongitude();
+
+
+                    delegate.didSelectLocation(location);
+                }
+                finish();
+            }
+        });
+
+    }
+
+    private void updateUserData() {
+        if (message != null && avatarImageView != null) {
+            int fromId = message.messageOwner.from_id;
+            if (message.messageOwner instanceof TLRPC.TL_messageForwarded_old) {
+                fromId = message.messageOwner.to_id.user_id;
+            }
+            TLRPC.User user = MessagesController.getInstance().getUser(fromId);
+            if (user != null) {
+                TLRPC.FileLocation photo = null;
+                if (user.photo != null) {
+                    photo = user.photo.photo_small;
+                }
+                avatarImageView.setImage(photo, null, getResources().getDrawable(R.drawable.ic_nav_to), AndroidUtilities.dp(10));
+                nameTextView.setText(ContactsController.formatName(user.first_name, user.last_name));
+
+            }
+        }
+    }
+
+    @Override
+    protected void onResume() {
+        // TODO Auto-generated method stub
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.OSMLOCATION);
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            // TODO: Consider calling
+            //    ActivityCompat#requestPermissions
+            // here to request the missing permissions, and then overriding
+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+            //                                          int[] grantResults)
+            // to handle the case where the user grants the permission. See the documentation
+            // for ActivityCompat#requestPermissions for more details.
+            return;
+        }
+        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, myLocationListener);
+        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, myLocationListener);
+
+    }
+
+    @Override
+    protected void onPause() {
+        // TODO Auto-generated method stub
+        super.onPause();
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            // TODO: Consider calling
+            //    ActivityCompat#requestPermissions
+            // here to request the missing permissions, and then overriding
+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+            //                                          int[] grantResults)
+            // to handle the case where the user grants the permission. See the documentation
+            // for ActivityCompat#requestPermissions for more details.
+            return;
+        }
+        locationManager.removeUpdates(myLocationListener);
+    }
+
+    private void updateLoc(Location loc){
+        GeoPoint locGeoPoint = new GeoPoint(loc.getLatitude(), loc.getLongitude());
+        mapView.getController().setCenter(locGeoPoint);
+
+        setOverlayLoc(loc);
+
+        mapView.invalidate();
+    }
+    private void setOverlayLoc(Location overlayloc){
+        GeoPoint overlocGeoPoint = new GeoPoint(overlayloc);
+        //---
+        overlayItemArray.clear();
+
+        OverlayItem newMyLocationItem = new OverlayItem(
+                "My Location", "My Location", overlocGeoPoint);
+        overlayItemArray.add(newMyLocationItem);
+        //---
+    }
+    private void positionMarker(Location location){
+        if(message==null){
+            return;
+        }
+        float distance = location.distanceTo(userLocation);
+        if (distance < 1000) {
+            distanceTextView.setText(String.format("%d %s", (int) (distance), LocaleController.getString("MetersAway", R.string.MetersAway)));
+        } else {
+            distanceTextView.setText(String.format("%.2f %s", distance / 1000.0f, LocaleController.getString("KMetersAway", R.string.KMetersAway)));
+        }
+
+    }
+    private LocationListener myLocationListener
+            = new LocationListener(){
+
+        @Override
+        public void onLocationChanged(Location location) {
+            // TODO Auto-generated method stub
+            updateLoc(location);
+            positionMarker(location);
+        }
+
+        @Override
+        public void onProviderDisabled(String provider) {
+            // TODO Auto-generated method stub
+
+        }
+
+        @Override
+        public void onProviderEnabled(String provider) {
+            // TODO Auto-generated method stub
+
+        }
+
+        @Override
+        public void onStatusChanged(String provider, int status, Bundle extras) {
+            // TODO Auto-generated method stub
+
+        }
+
+    };
+
+    @Override
+    public void didReceivedNotification(int id, Object... args) {
+
+    }
+
+    private class MyItemizedIconOverlay extends ItemizedIconOverlay<OverlayItem> {
+
+        public MyItemizedIconOverlay(
+                List<OverlayItem> pList,
+                OnItemGestureListener<OverlayItem> pOnItemGestureListener,
+                ResourceProxy pResourceProxy) {
+            super(pList, pOnItemGestureListener, pResourceProxy);
+            // TODO Auto-generated constructor stub
+        }
+
+        @Override
+        public void draw(Canvas canvas, MapView mapview, boolean arg2) {
+            // TODO Auto-generated method stub
+            super.draw(canvas, mapview, arg2);
+
+            if(!overlayItemArray.isEmpty()){
+
+                //overlayItemArray have only ONE element only, so I hard code to get(0)
+                GeoPoint in = overlayItemArray.get(0).getPoint();
+
+                Point out = new Point();
+                mapview.getProjection().toPixels(in, out);
+
+                Bitmap bm = BitmapFactory.decodeResource(getResources(),
+                        R.drawable.ic_location);
+                canvas.drawBitmap(bm,
+                        out.x - bm.getWidth()/2,  //shift the bitmap center
+                        out.y - bm.getHeight()/2,  //shift the bitmap center
+                        null);
+            }
+        }
+
+
+    }
+    public static void setDelegate(LocationActivityDelegate delegateValue) {
+        delegate = delegateValue;
+    }
+
+    public static void setMessageObject(MessageObject messageObject ){
+        message = messageObject;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
index fa4904cf1..1b100f205 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
@@ -25,6 +25,7 @@
 import android.text.method.PasswordTransformationMethod;
 import android.util.TypedValue;
 import android.view.ActionMode;
+import android.view.ContextMenu;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.Menu;
@@ -48,6 +49,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -61,6 +63,7 @@
 
 public class PasscodeActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
+
     private ListAdapter listAdapter;
     private ListView listView;
     private TextView titleTextView;
@@ -111,7 +114,8 @@ public void onFragmentDestroy() {
     @Override
     public View createView(Context context) {
         if (type != 3) {
-            actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+            actionBar.setBackButtonImage(0x00000000);//todo
+            // actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         }
         actionBar.setAllowOverlayTitle(false);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -127,22 +131,22 @@ public void onItemClick(int id) {
                     }
                 } else if (id == pin_item) {
                     currentPasswordType = 0;
-                    updateDropDownTextView();
+                    //  updateDropDownTextView();
                 } else if (id == password_item) {
                     currentPasswordType = 1;
-                    updateDropDownTextView();
+                    //updateDropDownTextView();
                 }
             }
         });
 
-        fragmentView = new FrameLayout(context);
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
+        fragmentView = View.inflate(context,R.layout.layout_passcode_activity,null );  // new FrameLayout(context);
+        //  FrameLayout frameLayout = (FrameLayout) fragmentView;
 
         if (type != 0) {
             ActionBarMenu menu = actionBar.createMenu();
             menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
 
-            titleTextView = new TextView(context);
+            titleTextView =  (TextView)fragmentView.findViewById(R.id.tv_title); //new TextView(context);
             titleTextView.setTextColor(0xff757575);
             if (type == 1) {
                 if (UserConfig.passcodeHash.length() != 0) {
@@ -155,15 +159,16 @@ public void onItemClick(int id) {
             }
             titleTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
             titleTextView.setGravity(Gravity.CENTER_HORIZONTAL);
-            frameLayout.addView(titleTextView);
-            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) titleTextView.getLayoutParams();
+            //     frameLayout.addView(titleTextView);
+           /* FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) titleTextView.getLayoutParams();
             layoutParams.width = LayoutHelper.WRAP_CONTENT;
             layoutParams.height = LayoutHelper.WRAP_CONTENT;
             layoutParams.gravity = Gravity.CENTER_HORIZONTAL;
             layoutParams.topMargin = AndroidUtilities.dp(38);
-            titleTextView.setLayoutParams(layoutParams);
+            titleTextView.setLayoutParams(layoutParams);*/
 
-            passwordEditText = new EditText(context);
+            passwordEditText = (EditText) fragmentView.findViewById(R.id.et_passcode_pswd);
+            //new EditText(context);
             passwordEditText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
             passwordEditText.setTextColor(0xff000000);
             passwordEditText.setMaxLines(1);
@@ -180,7 +185,10 @@ public void onItemClick(int id) {
             passwordEditText.setTransformationMethod(PasswordTransformationMethod.getInstance());
             passwordEditText.setTypeface(Typeface.DEFAULT);
             AndroidUtilities.clearCursorDrawable(passwordEditText);
-            frameLayout.addView(passwordEditText);
+
+
+
+         /*   frameLayout.addView(passwordEditText);
             layoutParams = (FrameLayout.LayoutParams) passwordEditText.getLayoutParams();
             layoutParams.topMargin = AndroidUtilities.dp(90);
             layoutParams.height = AndroidUtilities.dp(36);
@@ -188,7 +196,9 @@ public void onItemClick(int id) {
             layoutParams.gravity = Gravity.TOP | Gravity.LEFT;
             layoutParams.rightMargin = AndroidUtilities.dp(40);
             layoutParams.width = LayoutHelper.MATCH_PARENT;
-            passwordEditText.setLayoutParams(layoutParams);
+            passwordEditText.setLayoutParams(layoutParams);*/
+
+
             passwordEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
                 @Override
                 public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
@@ -202,6 +212,10 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                     return false;
                 }
             });
+
+
+
+
             passwordEditText.addTextChangedListener(new TextWatcher() {
                 @Override
                 public void beforeTextChanged(CharSequence s, int start, int count, int after) {
@@ -228,26 +242,33 @@ public void afterTextChanged(Editable s) {
                     }
                 }
             });
+            if (android.os.Build.VERSION.SDK_INT < 11) {
+                passwordEditText.setOnCreateContextMenuListener(new View.OnCreateContextMenuListener() {
+                    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
+                        menu.clear();
+                    }
+                });
+            } else {
+                passwordEditText.setCustomSelectionActionModeCallback(new ActionMode.Callback() {
+                    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
+                        return false;
+                    }
 
-            passwordEditText.setCustomSelectionActionModeCallback(new ActionMode.Callback() {
-                public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-                    return false;
-                }
-
-                public void onDestroyActionMode(ActionMode mode) {
-                }
+                    public void onDestroyActionMode(ActionMode mode) {
+                    }
 
-                public boolean onCreateActionMode(ActionMode mode, Menu menu) {
-                    return false;
-                }
+                    public boolean onCreateActionMode(ActionMode mode, Menu menu) {
+                        return false;
+                    }
 
-                public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-                    return false;
-                }
-            });
+                    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
+                        return false;
+                    }
+                });
+            }
 
-            if (type == 1) {
-                dropDownContainer = new ActionBarMenuItem(context, menu, 0);
+            if (type == 1) {/*{
+                dropDownContainer = new ActionBarMenuItem(context, menu, R.drawable.bar_selector);
                 dropDownContainer.setSubMenuOpenSide(1);
                 dropDownContainer.addSubItem(pin_item, LocaleController.getString("PasscodePIN", R.string.PasscodePIN), 0);
                 dropDownContainer.addSubItem(password_item, LocaleController.getString("PasscodePassword", R.string.PasscodePassword), 0);
@@ -285,25 +306,26 @@ public void onClick(View view) {
                 layoutParams.gravity = Gravity.CENTER_VERTICAL;
                 layoutParams.bottomMargin = AndroidUtilities.dp(1);
                 dropDown.setLayoutParams(layoutParams);
-            } else {
+            }*/ }else {
                 actionBar.setTitle(LocaleController.getString("Passcode", R.string.Passcode));
             }
 
-            updateDropDownTextView();
+            //    updateDropDownTextView();
         } else {
             actionBar.setTitle(LocaleController.getString("Passcode", R.string.Passcode));
-            frameLayout.setBackgroundColor(0xfff0f0f0);
-            listView = new ListView(context);
+            fragmentView.setBackgroundColor(0xfff0f0f0);
+            listView =(ListView)fragmentView.findViewById(R.id.lv_pascode) ;
+            //new ListView(context);
             listView.setDivider(null);
             listView.setDividerHeight(0);
             listView.setVerticalScrollBarEnabled(false);
             listView.setDrawSelectorOnTop(true);
-            frameLayout.addView(listView);
-            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
+            //frameLayout.addView(listView);
+           /* FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
             layoutParams.width = LayoutHelper.MATCH_PARENT;
             layoutParams.height = LayoutHelper.MATCH_PARENT;
             layoutParams.gravity = Gravity.TOP;
-            listView.setLayoutParams(layoutParams);
+            listView.setLayoutParams(layoutParams);*/
             listView.setAdapter(listAdapter = new ListAdapter(context));
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
@@ -354,7 +376,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                             @Override
                             public String format(int value) {
                                 if (value == 0) {
-                                    return LocaleController.getString("AutoLockDisabled", R.string.AutoLockDisabled);
+                                    return LocaleController.getString("Disabled", R.string.Disabled);
                                 } else if (value == 1) {
                                     return LocaleController.formatString("AutoLockInTime", R.string.AutoLockInTime, LocaleController.formatPluralString("Minutes", 1));
                                 } else if (value == 2) {
@@ -397,12 +419,31 @@ public void onClick(DialogInterface dialog, int which) {
             });
         }
 
+
+
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
         return fragmentView;
     }
 
     @Override
     public void onResume() {
         super.onResume();
+       ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PASSCODE);
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
@@ -512,7 +553,7 @@ private void processNext() {
         } else {
             actionBar.setTitle(LocaleController.getString("PasscodePassword", R.string.PasscodePassword));
         }
-        dropDownContainer.setVisibility(View.GONE);
+//        dropDownContainer.setVisibility(View.GONE);
         titleTextView.setText(LocaleController.getString("ReEnterYourPasscode", R.string.ReEnterYourPasscode));
         firstPassword = passwordEditText.getText().toString();
         passwordEditText.setText("");
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
index 1305c1caa..371e58e1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
@@ -33,6 +33,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -301,6 +302,8 @@ public void onResume() {
             listAdapter.notifyDataSetChanged();
         }
         fixLayout();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PHOTO_ALBUM_PICKER);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
index b3d8d6590..6f1e160ca 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
@@ -20,11 +20,13 @@
 import android.widget.FrameLayout;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.Bitmaps;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -319,6 +321,7 @@ public Bitmap getBitmap() {
             return null;
         }
 
+
         @Override
         protected void onDraw(Canvas canvas) {
             if (drawable != null) {
@@ -455,4 +458,11 @@ public void onItemClick(int id) {
     public void setDelegate(PhotoEditActivityDelegate delegate) {
         this.delegate = delegate;
     }
+
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PHOTOCROP_SCREEN);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 95dde05b8..bab818f28 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -56,6 +56,7 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.Theme;
@@ -444,6 +445,8 @@ public void onResume() {
             getParentActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
         }
         fixLayout();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PHOTO_PICK_SCREEN);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 7a1bb4036..d3582321c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -77,6 +77,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Adapters.MentionsAdapter;
 import org.telegram.messenger.AnimatorListenerAdapterProxy;
@@ -3670,6 +3671,8 @@ public void run() {
 
     public void onResume() {
         redraw(0); //workaround for camera bug
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PHOTOVIEWER);
+
     }
 
     public void onPause() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index 8573bfb89..f8e4f73a9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -53,6 +53,7 @@
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessageObject;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.Components.AvatarDrawable;
@@ -1134,6 +1135,8 @@ protected void onResume() {
         fixLayout();
         checkAndUpdateAvatar();
         wakeLock.acquire(7000);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.POPUP_NOTIFICATION);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
index 034915980..d9ad5e7b3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PreferencesActivity.java
@@ -32,6 +32,7 @@
 import org.telegram.socialuser.runable.GetPreferenceRq;
 import org.telegram.socialuser.runable.PreferencesRequester;
 //import org.telegram.tracker.AnalyticsTrackers;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.CountryAdapter;
@@ -45,6 +46,7 @@
 public class PreferencesActivity extends BaseFragment implements OnPreferencesListner,OnGetpreferences {
 
 
+
     @Override
     public void setPreferencesSuccess() {
         getParentActivity().runOnUiThread(
@@ -141,7 +143,7 @@ public void setMaxage(String maxage) {
     @Override
     public View createView(Context context) {
 
-     //   hideTabsAnsMenu();
+        hideTabsAnsMenu();
         mContext = context;
         //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setBackButtonImage(0x00000000);//todo
@@ -236,7 +238,7 @@ public void onClick(View v) {
         fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-               // showTabsAndmenu();
+                showTabsAndmenu();
                 finishFragment();
             }
         });
@@ -246,7 +248,7 @@ public void onClick(View v) {
     @Override
     public void onResume() {
         super.onResume();
-      //  ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
     }
 
 
@@ -277,7 +279,7 @@ public void onClick(DialogInterface dialog, int item) {
     public CountryAdapter.Country getcountrybyName(String name){
         CountryAdapter k = new CountryAdapter(mContext);
         HashMap<String, ArrayList<CountryAdapter.Country>> countries = k.getCountries();
-       // ArrayList<String> sortedCountries = k.getSortedCountries();
+    //    ArrayList<String> sortedCountries = k.getSortedCountries();
         String s = name.substring(0,1).toUpperCase();
         ArrayList<CountryAdapter.Country> dd = countries.get(s);
         for(CountryAdapter.Country selectcountry:dd){
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
index 79377a656..77e9494ab 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyControlActivity.java
@@ -162,22 +162,35 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         listAdapter = new ListAdapter(context);
 
-        fragmentView = new FrameLayout(context);
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
 
-        ListView listView = new ListView(context);
+        fragmentView = View.inflate(context,R.layout.layout_last_seen,null);
+        //FrameLayout frameLayout = (FrameLayout) fragmentView;
+        fragmentView.setBackgroundColor(0xfff0f0f0);
+
+        ListView listView = (ListView)fragmentView.findViewById(R.id.lv);
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setVerticalScrollBarEnabled(false);
         listView.setDrawSelectorOnTop(true);
-        frameLayout.addView(listView);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP;
-        listView.setLayoutParams(layoutParams);
+
         listView.setAdapter(listAdapter);
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
+
+
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index b4d5fa086..93ea62118 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -108,7 +108,8 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("PrivacySettings", R.string.PrivacySettings));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -120,7 +121,29 @@ public void onItemClick(int id) {
             }
         });
 
+
         listAdapter = new ListAdapter(context);
+        fragmentView = View.inflate(context, R.layout.settings_layout, null);
+        fragmentView.findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);
+        ListView   listView = (ListView)fragmentView.findViewById(R.id.listView);
+        listView.setAdapter(listAdapter);
+
+
+        fragmentView.findViewById(R.id.black_view).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showTabsAndmenu();
+                finishFragment();
+            }
+        });
+
+        /*  listAdapter = new ListAdapter(context);
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
@@ -132,7 +155,7 @@ public void onItemClick(int id) {
         listView.setVerticalScrollBarEnabled(false);
         listView.setDrawSelectorOnTop(true);
         frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
-        listView.setAdapter(listAdapter);
+        listView.setAdapter(listAdapter);*/
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyUsersActivity.java
index 9c7412527..347cc1ae3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacyUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacyUsersActivity.java
@@ -13,6 +13,7 @@
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.view.Gravity;
+import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
@@ -78,7 +79,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
         if (isGroup) {
             if (isAlwaysShare) {
@@ -199,6 +200,25 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
 
+
+        frameLayout.addView(View.inflate(context,R.layout.layout_back_frame,null));
+
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
         return fragmentView;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index da09dbca9..a3f647c6d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -29,16 +29,20 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.text.TextUtils;
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
+import android.view.ViewParent;
 import android.view.ViewTreeObserver;
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
+import android.widget.AdapterView;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
+import android.widget.ListView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
@@ -66,8 +70,10 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.SimpleTextView;
+import org.telegram.ui.Adapters.SlidingMenuAdapter;
 import org.telegram.ui.Cells.AboutLinkCell;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.EmptyCell;
@@ -180,6 +186,7 @@
     private int loadMoreMembersRow;
     private int addMemberRow;
     private int rowCount = 0;
+    private SlidingMenuAdapter menuAdapter;
 
     private class TopView extends View {
 
@@ -192,7 +199,7 @@ public TopView(Context context) {
 
         @Override
         protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-            setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), ActionBar.getCurrentActionBarHeight() + (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + AndroidUtilities.dp(91));
+            setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), ActionBar.getCurrentActionBarHeight() + (actionBar.getOccupyStatusBar() ? 0/*AndroidUtilities.statusBarHeight*/ : 0) + AndroidUtilities.dp(5));
         }
 
         @Override
@@ -205,7 +212,7 @@ public void setBackgroundColor(int color) {
 
         @Override
         protected void onDraw(Canvas canvas) {
-            int height = getMeasuredHeight() - AndroidUtilities.dp(91);
+            int height = getMeasuredHeight() - AndroidUtilities.dp(5);
             canvas.drawRect(0, 0, getMeasuredWidth(), height + extraHeight, paint);
             if (parentLayout != null) {
                 parentLayout.drawHeaderShadow(canvas, height + extraHeight);
@@ -348,10 +355,10 @@ public boolean onTouchEvent(MotionEvent event) {
             }
         };
         actionBar.setItemsBackgroundColor(AvatarDrawable.getButtonColorForId(user_id != 0 || ChatObject.isChannel(chat_id) && !currentChat.megagroup ? 5 : chat_id));
-        actionBar.setBackButtonDrawable(new BackDrawable(false));
+        actionBar.setBackButtonDrawable(null /*new BackDrawable(false)*/);
         actionBar.setCastShadows(false);
         actionBar.setAddToContainer(false);
-        actionBar.setOccupyStatusBar(Build.VERSION.SDK_INT >= 21 && !AndroidUtilities.isTablet());
+      //  actionBar.setOccupyStatusBar(Build.VERSION.SDK_INT >= 21 && !AndroidUtilities.isTablet());
         return actionBar;
     }
 
@@ -359,6 +366,7 @@ public boolean onTouchEvent(MotionEvent event) {
     public View createView(Context context) {
         hasOwnBackground = true;
         extraHeight = AndroidUtilities.dp(88);
+
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(final int id) {
@@ -531,7 +539,7 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
             }
         });
 
-        createActionBarMenu();
+        //createActionBarMenu();
 
         listAdapter = new ListAdapter(context);
         avatarDrawable = new AvatarDrawable();
@@ -558,7 +566,7 @@ public boolean hasOverlappingRendering() {
             }
         };
         listView.setTag(6);
-        listView.setPadding(0, AndroidUtilities.dp(88), 0, 0);
+        listView.setPadding(0, AndroidUtilities.dp(8), 0, 0);
         listView.setBackgroundColor(0xffffffff);
         listView.setVerticalScrollBarEnabled(false);
         listView.setItemAnimator(null);
@@ -796,7 +804,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         avatarImage.setRoundRadius(AndroidUtilities.dp(21));
         avatarImage.setPivotX(0);
         avatarImage.setPivotY(0);
-        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
+        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.CENTER_VERTICAL,10, 0, 0, 0));
         avatarImage.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -829,13 +837,13 @@ public void onClick(View v) {
             nameTextView[a].setRightDrawableTopPadding(-AndroidUtilities.dp(1.3f));
             nameTextView[a].setPivotX(0);
             nameTextView[a].setPivotY(0);
-            frameLayout.addView(nameTextView[a], LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, a == 0 ? 48 : 0, 0));
+            frameLayout.addView(nameTextView[a], LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 60, 0, a == 0 ? 48 : 0, 0));
 
             onlineTextView[a] = new SimpleTextView(context);
             onlineTextView[a].setTextColor(AvatarDrawable.getProfileTextColorForId(user_id != 0 || ChatObject.isChannel(chat_id) && !currentChat.megagroup ? 5 : chat_id));
             onlineTextView[a].setTextSize(14);
             onlineTextView[a].setGravity(Gravity.LEFT);
-            frameLayout.addView(onlineTextView[a], LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, a == 0 ? 48 : 8, 0));
+            frameLayout.addView(onlineTextView[a], LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 60, 0, a == 0 ? 48 : 8, 0));
         }
 
         if (user_id != 0 || chat_id >= 0 && !ChatObject.isLeftFromChat(currentChat)) {
@@ -950,6 +958,44 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
             }
         });
 
+
+        ((FrameLayout) fragmentView).addView(View.inflate(context, R.layout.profile_layout, null));
+        frameLayout.findViewById(R.id.id_back).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+        frameLayout.findViewById(R.id.id_edit).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(chat_id!=0 && chat_id>0){
+
+                    TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
+                    if(chat!=null){
+                        if (!chat.admins_enabled || chat.creator || chat.admin||chat.megagroup && chat.editor){
+                                   editName();
+                        }}}
+                else{
+                    editContact();
+
+                }
+
+            }
+        });
+        frameLayout.findViewById(R.id.id_chat).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+        frameLayout.findViewById(R.id.id_menu).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                parentLayout.openDrawer();
+
+            }
+        });
         return fragmentView;
     }
 
@@ -1080,6 +1126,8 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
         }
     }
 
+
+
     private void getChannelParticipants(boolean reload) {
         if (loadingUsers || participantsMap == null || info == null) {
             return;
@@ -1494,8 +1542,13 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+
+        setChatMenuList();
+        hideTabsAnsMenu();
         updateProfileData();
         fixLayout();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHATPROFILE);
+
     }
 
     public void setPlayProfileAnimation(boolean value) {
@@ -1581,7 +1634,7 @@ protected AnimatorSet onCustomTransitionAnimation(final boolean isOpen, final Ru
             ActionBarMenu menu = actionBar.createMenu();
             if (menu.getItem(10) == null) {
                 if (animatingItem == null) {
-                    animatingItem = menu.addItem(10, R.drawable.ic_ab_other);
+                //    animatingItem = menu.addItem(10, R.drawable.ic_ab_other);
                 }
             }
             if (isOpen) {
@@ -2578,4 +2631,368 @@ public int getItemViewType(int i) {
             return 0;
         }
     }
+
+
+
+    public void editChannel(){
+        Bundle args = new Bundle();
+        args.putInt("chat_id", chat_id);
+        ChannelEditActivity fragment = new ChannelEditActivity(args);
+        fragment.setInfo(info);
+        presentFragment(fragment);
+    }
+
+
+    public void editName(){
+        Bundle args = new Bundle();
+        args.putInt("chat_id", chat_id);
+        presentFragment(new ChangeChatNameActivity(args));
+    }
+
+
+    public void setAdmin(){
+        Bundle args = new Bundle();
+        args.putInt("chat_id", chat_id);
+        SetAdminsActivity fragment = new SetAdminsActivity(args);
+        fragment.setChatInfo(info);
+        presentFragment(fragment);
+    }
+
+    public void editContact(){
+        Bundle args = new Bundle();
+        args.putInt("user_id", user_id);
+        presentFragment(new ContactAddActivity(args));
+    }
+    /**
+     *  setting drawer items for profile screen
+     *
+     */
+
+    private void setChatMenuList(){
+        ArrayList<MenuItems> draweritems=new ArrayList<MenuItems>();
+        if (user_id != 0) {
+            if (ContactsController.getInstance().contactsDict.get(user_id) == null) {
+                TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                if (user == null) {
+                    return;
+                }
+
+                if (user.bot) {
+                    if (!user.bot_nochats) {
+                        draweritems.add(new MenuItems(LocaleController.getString("BotInvite", R.string.BotInvite),R.drawable.menu_bar_contact_plus, true, "",0));
+                    }
+                    draweritems.add(new MenuItems(LocaleController.getString("BotShare", R.string.BotShare), R.drawable.menu_contactshare, true, "",1));
+                }
+                if (user.phone != null && user.phone.length() != 0) {
+                    draweritems.add(new MenuItems(LocaleController.getString("AddContact", R.string.AddContact),R.drawable.menu_plus, true, "",2));
+                    draweritems.add(new MenuItems(LocaleController.getString("ShareContact", R.string.ShareContact), R.drawable.menu_contactshare, true, "",3));
+                    draweritems.add(new MenuItems(!userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock),R.drawable.menu_bar_block_user, true, "",4));
+                } else {
+                    if (user.bot) {
+                        draweritems.add(new MenuItems(!userBlocked ? LocaleController.getString("BotStop", R.string.BotStop) : LocaleController.getString("BotRestart", R.string.BotRestart),R.drawable.menu_bar_edit, true, "",5));
+                    } else {
+                        draweritems.add(new MenuItems(!userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock),R.drawable.menu_bar_block_user, true, "",6));
+                    }
+                }
+            } else {
+
+                draweritems.add(new MenuItems(LocaleController.getString("ShareContact", R.string.ShareContact), R.drawable.menu_contactshare, true, "",7));
+                draweritems.add(new MenuItems(!userBlocked ? LocaleController.getString("BlockContact", R.string.BlockContact) : LocaleController.getString("Unblock", R.string.Unblock), R.drawable.menu_bar_block_user, true, "",8));
+                draweritems.add(new MenuItems( LocaleController.getString("EditContact", R.string.EditContact), R.drawable.menu_bar_edit, true, "",9));
+                draweritems.add(new MenuItems( LocaleController.getString("DeleteContact", R.string.DeleteContact), R.drawable.menu_bin, true, "",10));
+            }
+        }
+
+        else if (chat_id != 0) {
+            if (chat_id > 0) {
+                TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
+                if (writeButton != null) {
+                    boolean isChannel = ChatObject.isChannel(currentChat);
+                    if (isChannel && !currentChat.creator && (!currentChat.megagroup || !currentChat.editor) || !isChannel && !currentChat.admin && !currentChat.creator && currentChat.admins_enabled) {
+                        writeButton.setImageResource(R.drawable.floating_message);
+                        writeButton.setPadding(0, AndroidUtilities.dp(3), 0, 0);
+                    } else {
+                        writeButton.setImageResource(R.drawable.floating_camera);
+                        writeButton.setPadding(0, 0, 0, 0);
+                    }
+                }
+                if (ChatObject.isChannel(chat)) {
+                    ActionBarMenuItem item = null;
+                    if (chat.creator) {
+                        draweritems.add(new MenuItems(LocaleController.getString("ChannelEdit", R.string.ChannelEdit),R.drawable.menu_bar_edit, true, "",11));
+                    } else if (chat.megagroup && chat.editor) {
+                        draweritems.add(new MenuItems( LocaleController.getString("EditName", R.string.EditName), R.drawable.menu_bar_edit, true, "",12));
+                    }else if(!chat.creator){
+                        draweritems.add(new MenuItems(LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu), R.drawable.menu_userdelete, true, "",13));
+
+                    }
+
+                    if (!chat.creator && !chat.left && !chat.kicked && chat.megagroup) {
+                        if (item == null) {
+
+                            //       item = menu.addItem(10, R.drawable.ic_ab_other);
+                        }
+                        draweritems.add(new MenuItems(LocaleController.getString("LeaveMegaMenu", R.string.LeaveMegaMenu), R.drawable.menu_userdelete, true, "",13));
+                    }
+                } else {
+                    //     ActionBarMenuItem item = menu.addItem(10, R.drawable.ic_ab_other);
+                    if (chat.creator && chat_id > 0) {
+                        draweritems.add(new MenuItems( LocaleController.getString("SetAdmins", R.string.SetAdmins), R.drawable.menu_admin, true, "",14));
+                    }
+                    if (!chat.admins_enabled || chat.creator || chat.admin) {
+                        draweritems.add(new MenuItems( LocaleController.getString("EditName", R.string.EditName), R.drawable.menu_bar_edit, true, "",15));
+                    }
+                    draweritems.add(new MenuItems( LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit), R.drawable.menu_bin, true, "",16));
+                }
+            } else {
+                draweritems.add(new MenuItems( LocaleController.getString("EditName", R.string.EditName), R.drawable.menu_bar_edit, true, "",17));
+            }
+        }
+
+
+
+
+
+
+        menuAdapter = new SlidingMenuAdapter(getParentActivity(), draweritems);
+        ViewParent view=  parentLayout.getParent();
+        ListView drawerList=((ListView)((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+
+        drawerList.setAdapter(menuAdapter);
+        drawerList.setOnItemClickListener(new ChatMenuClickListener());
+        //  ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.VISIBLE);
+        //((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);
+        // ((ImageView)((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.menu_bin);
+        //((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("DeleteContact", R.string.DeleteContact));
+
+
+
+
+    }
+    private class ChatMenuClickListener implements
+            ListView.OnItemClickListener {
+        @Override
+        public void onItemClick(AdapterView<?> parent, View view, int position,
+                                long id) {
+
+            MenuItems items =(MenuItems) parent.getItemAtPosition(position);
+
+            switch(items.getId()){
+
+                case 0:
+                    parentLayout.closeDrawer();
+                    inviteToGroup();
+                    break;
+
+                case 1:
+                    parentLayout.closeDrawer();
+                    botShare();
+                    break;
+                case 2:
+                    parentLayout.closeDrawer();
+                    addContact();
+                    break;
+                case 3:
+                    parentLayout.closeDrawer();
+                    shareContact();
+                    break;
+                case 4:
+                    parentLayout.closeDrawer();
+                    blockUnblock();
+                    break;
+                case 5:
+                    parentLayout.closeDrawer();
+                    blockUnblock();
+                    break;
+                case 6:
+                    parentLayout.closeDrawer();
+                    blockUnblock();
+                    break;
+
+                case 7:
+                    parentLayout.closeDrawer();
+                    shareContact();
+                    break;
+                case 8:
+                    parentLayout.closeDrawer();
+                    blockUnblock();
+                    break;
+
+                case 9:
+                    parentLayout.closeDrawer();
+                    editContact();
+                    break;
+                case 10:
+                    parentLayout.closeDrawer();
+                    deleteContact();
+                    break;
+                case 11:
+                    parentLayout.closeDrawer();
+                    editChannel();
+                    break;
+                case 12:
+                    parentLayout.closeDrawer();
+                    editName();
+                    break;
+                case 13:
+                    parentLayout.closeDrawer();
+                    leaveChatPressed();
+                    break;
+                case 14:
+                    parentLayout.closeDrawer();
+                    setAdmin();
+                    break;
+
+                case 15:
+                    parentLayout.closeDrawer();
+                    editName();
+                    break;
+
+                case 16:
+                    parentLayout.closeDrawer();
+                    leaveChatPressed();
+                    break;
+                case 17:
+                    parentLayout.closeDrawer();
+                    editName();
+                    break;
+            }
+
+        }
+
+        public void addContact(){
+            TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+            Bundle args = new Bundle();
+            args.putInt("user_id", user.id);
+            args.putBoolean("addContact", true);
+            presentFragment(new ContactAddActivity(args));
+        }
+
+
+
+
+        public void botShare(){
+            try {
+                TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                if (user == null) {
+                    return;
+                }
+                Intent intent = new Intent(Intent.ACTION_SEND);
+                intent.setType("text/plain");
+               /* if (botInfo != null && botInfo.share_text != null && botInfo.share_text.length() > 0) {
+                    intent.putExtra(Intent.EXTRA_TEXT, String.format("%s https://telegram.me/%s", botInfo.share_text, user.username));
+                } else {
+                    intent.putExtra(Intent.EXTRA_TEXT, String.format("https://telegram.me/%s", user.username));
+                }*/
+                startActivityForResult(Intent.createChooser(intent, LocaleController.getString("BotShare", R.string.BotShare)), 500);
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+        }
+
+
+
+
+
+        public void inviteToGroup(){
+            final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+            if (user == null) {
+                return;
+            }
+            Bundle args = new Bundle();
+            args.putBoolean("onlySelect", true);
+            args.putInt("dialogsType", 2);
+            args.putString("addToGroupAlertString", LocaleController.formatString("AddToTheGroupTitle", R.string.AddToTheGroupTitle, UserObject.getUserName(user), "%1$s"));
+            DialogsActivity fragment = new DialogsActivity(args);
+        /*    fragment.setDelegate(new DialogsActivity.MessagesActivityDelegate() {
+                @Override
+                public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
+                    NotificationCenter.getInstance().removeObserver(ProfileActivity.this, NotificationCenter.closeChats);
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
+                    MessagesController.getInstance().addUserToChat(-(int) did, user, null, 0, null, ProfileActivity.this);
+                    Bundle args = new Bundle();
+                    args.putBoolean("scrollToTopOnResume", true);
+                    args.putInt("chat_id", -(int) did);
+                    presentFragment(new ChatActivity(args), true);
+                    removeSelfFromStack();
+                }
+            });*/
+            presentFragment(fragment);
+        }
+
+
+
+
+        public void blockUnblock(){
+            TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+            if (user == null) {
+                return;
+            }
+            if (!user.bot) {
+                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                if (!userBlocked) {
+                    builder.setMessage(LocaleController.getString("AreYouSureBlockContact", R.string.AreYouSureBlockContact));
+                } else {
+                    builder.setMessage(LocaleController.getString("AreYouSureUnblockContact", R.string.AreYouSureUnblockContact));
+                }
+                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        if (!userBlocked) {
+                            MessagesController.getInstance().blockUser(user_id);
+                        } else {
+                            MessagesController.getInstance().unblockUser(user_id);
+                        }
+                    }
+                });
+                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                showDialog(builder.create());
+            } else {
+               /* if (!userBlocked) {
+                    MessagesController.getInstance().blockUser(user_id);
+                    finishFragment();
+                } else {
+                    MessagesController.getInstance().unblockUser(user_id);
+                  //  SendMessagesHelper.getInstance().sendMessage("/start", user_id, null, null, false, false);
+                    finishFragment();
+                }*/
+            }
+        }
+
+
+    }
+
+
+
+    public void shareContact(){
+        Bundle args = new Bundle();
+        args.putBoolean("onlySelect", true);
+        args.putInt("dialogsType", 1);
+        args.putString("selectAlertString", LocaleController.getString("SendContactTo", R.string.SendContactTo));
+        args.putString("selectAlertStringGroup", LocaleController.getString("SendContactToGroup", R.string.SendContactToGroup));
+        DialogsActivity fragment = new DialogsActivity(args);
+        fragment.setDelegate(ProfileActivity.this);
+        presentFragment(fragment);
+    }
+
+
+
+    public void deleteContact(){   final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+        if (user == null || getParentActivity() == null) {
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setMessage(LocaleController.getString("AreYouSureDeleteContact", R.string.AreYouSureDeleteContact));
+        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                ArrayList<TLRPC.User> arrayList = new ArrayList<>();
+                arrayList.add(user);
+                ContactsController.getInstance().deleteContact(arrayList);
+            }
+        });
+        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+        showDialog(builder.create());}
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index 6331dc07f..8ba7931a0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -41,6 +41,7 @@
 import org.telegram.messenger.R;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextColorCell;
 import org.telegram.ui.Cells.TextDetailSettingsCell;
@@ -95,10 +96,19 @@ public void onFragmentDestroy() {
         super.onFragmentDestroy();
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
     }
-
+    @Override
+    public void onResume() {
+        super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.PROFILE_NOTIFICATION);
+       /* if (listViewAdapter != null) {
+            listViewAdapter.notifyDataSetChanged();
+        }*/
+        // hideActionBar();
+    }
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0x00000000);//todo
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -423,7 +433,13 @@ public void onClick(DialogInterface dialog, int which) {
                 }
             }
         });
-
+        ((FrameLayout) fragmentView).addView(View.inflate(context, R.layout.notification_settings, null));
+        frameLayout.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
         return fragmentView;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
index 283b8d675..1f5a78120 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
@@ -29,6 +29,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
@@ -39,6 +40,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
@@ -86,7 +88,7 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0x00000000);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("SessionsTitle", R.string.SessionsTitle));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -269,6 +271,26 @@ public void run() {
             }
         });
 
+
+
+
+        frameLayout.addView(View.inflate(context,R.layout.layout_back_frame,null));
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
         return fragmentView;
     }
 
@@ -278,6 +300,8 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.SESSION_ACTIVITY);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SetAdminsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SetAdminsActivity.java
index c5cdcaf67..08201f5f3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SetAdminsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SetAdminsActivity.java
@@ -18,6 +18,7 @@
 import android.widget.ListView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
@@ -27,6 +28,7 @@
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.Utilities;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -264,6 +266,8 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.ADMIN_ACTIVITY);
+
     }
 
     public void setChatInfo(TLRPC.ChatFull chatParticipants) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 64d0c5ad0..4759599c8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -41,6 +41,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
+import android.view.ViewParent;
 import android.view.ViewTreeObserver;
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
@@ -78,8 +79,10 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.MessageObject;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
+import org.telegram.ui.Adapters.SlidingMenuAdapter;
 import org.telegram.ui.Cells.CheckBoxCell;
 import org.telegram.ui.Cells.TextInfoCell;
 import org.telegram.ui.Cells.EmptyCell;
@@ -163,6 +166,7 @@
     private int contactsSortRow;
     private int autoplayGifsRow;
     private int rowCount;
+    private int contactUsRow;
 
     private final static int edit_name = 1;
     private final static int logout = 2;
@@ -246,8 +250,15 @@ public void run() {
         usernameRow = rowCount++;*/
           myprofileRow = rowCount++;
           preferencerow = rowCount++;
+          premiumFeature=rowCount++;
+
+        if(UserPaymentInfo.getInstatance().getPaymentStatus() ==UserPaymentInfo.paidUser
+                && (!UserPaymentInfo.getInstatance().getUserId().equalsIgnoreCase("")) ){
+            premiumFeature=rowCount--;
+        }
+
+
 
-        premiumFeature=rowCount++;
         settingsSectionRow = rowCount++;
         settingsSectionRow2 = rowCount++;
         notificationRow = rowCount++;
@@ -275,9 +286,10 @@ public void run() {
         sendByEnterRow = rowCount++;
         supportSectionRow = rowCount++;
         supportSectionRow2 = rowCount++;
-        askQuestionRow = rowCount++;
+        contactUsRow = rowCount++;
+        /*askQuestionRow = rowCount++;
         telegramFaqRow = rowCount++;
-        privacyPolicyRow = rowCount++;
+        privacyPolicyRow = rowCount++;*/
         if (BuildVars.DEBUG_VERSION) {
             sendLogsRow = rowCount++;
             clearLogsRow = rowCount++;
@@ -308,13 +320,13 @@ public void onFragmentDestroy() {
     public View createView(Context context) {
         actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
         actionBar.setItemsBackgroundColor(AvatarDrawable.getButtonColorForId(5));
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonImage(0/*R.drawable.ic_ab_back*/);
         actionBar.setAddToContainer(false);
         extraHeight = 88;
         if (AndroidUtilities.isTablet()) {
             actionBar.setOccupyStatusBar(false);
         }
-        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+       /* actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
                 if (id == -1) {
@@ -343,7 +355,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_other);
         item.addSubItem(edit_name, LocaleController.getString("EditName", R.string.EditName), 0);
         item.addSubItem(logout, LocaleController.getString("LogOut", R.string.LogOut), 0);
-
+*/
         listAdapter = new ListAdapter(context);
 
         fragmentView = new FrameLayout(context) {
@@ -366,7 +378,7 @@ protected boolean drawChild(@NonNull Canvas canvas, @NonNull View child, long dr
                                 break;
                             }
                         }
-                        parentLayout.drawHeaderShadow(canvas, actionBarHeight);
+                //        parentLayout.drawHeaderShadow(canvas, actionBarHeight);
                     }
                     return result;
                 } else {
@@ -381,7 +393,18 @@ protected boolean drawChild(@NonNull Canvas canvas, @NonNull View child, long dr
         listView.setDividerHeight(0);
         listView.setVerticalScrollBarEnabled(false);
         AndroidUtilities.setListViewEdgeEffectColor(listView, AvatarDrawable.getProfileBackColorForId(5));
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
+       // frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
+
+/////////////////////////////////////////////
+
+        LinearLayout.LayoutParams layout = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);
+        layout.setMargins(0, 0, 0, 0);
+        frameLayout.setLayoutParams(layout);
+        frameLayout.addView(listView);
+
+
+
+
         listView.setAdapter(listAdapter);
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -446,7 +469,7 @@ else if(i==premiumFeature){
 
 
                 else if (i == askQuestionRow) {
-                    if (getParentActivity() == null) {
+                  /*  if (getParentActivity() == null) {
                         return;
                     }
                     final TextView message = new TextView(getParentActivity());
@@ -465,7 +488,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         }
                     });
                     builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                    showDialog(builder.create());
+                    showDialog(builder.create());*/
                 } else if (i == sendLogsRow) {
                     sendLogs();
                 } else if (i == clearLogsRow) {
@@ -524,10 +547,15 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                     showDialog(builder.create());
                 } else if (i == telegramFaqRow) {
-                    Browser.openUrl(getParentActivity(), LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl));
+                    //Browser.openUrl(getParentActivity(), LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl));
                 } else if (i == privacyPolicyRow) {
-                    Browser.openUrl(getParentActivity(), LocaleController.getString("PrivacyPolicyUrl", R.string.PrivacyPolicyUrl));
-                } else if (i == contactsReimportRow) {
+                  //  Browser.openUrl(getParentActivity(), LocaleController.getString("PrivacyPolicyUrl", R.string.PrivacyPolicyUrl));
+                }
+
+                else if(i == contactUsRow){
+                    sendMail();
+                }
+                else if (i == contactsReimportRow) {
                     //not implemented
                 } else if (i == contactsSortRow) {
                     if (getParentActivity() == null) {
@@ -743,7 +771,8 @@ public void onClick(DialogInterface dialog, int which) {
         avatarImage.setRoundRadius(AndroidUtilities.dp(21));
         avatarImage.setPivotX(0);
         avatarImage.setPivotY(0);
-        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
+        avatarImage.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
+        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 8, 0, 0, 0));
         avatarImage.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -766,7 +795,7 @@ public void onClick(View v) {
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         nameTextView.setPivotX(0);
         nameTextView.setPivotY(0);
-        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 60, 0, 48, 0));
 
         onlineTextView = new TextView(context);
         onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(5));
@@ -776,7 +805,9 @@ public void onClick(View v) {
         onlineTextView.setSingleLine(true);
         onlineTextView.setEllipsize(TextUtils.TruncateAt.END);
         onlineTextView.setGravity(Gravity.LEFT);
-        frameLayout.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+        frameLayout.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 60, 0, 48, 0));
+
+
 
         writeButton = new ImageView(context);
         writeButton.setBackgroundResource(R.drawable.floating_user_states);
@@ -795,7 +826,10 @@ public void getOutline(View view, Outline outline) {
                 }
             });
         }
-        frameLayout.addView(writeButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.TOP, 0, 0, 16, 0));
+
+        frameLayout.addView(writeButton, LayoutHelper.createFrame(40,40, Gravity.RIGHT | Gravity.TOP, 0, 10, 16, 0));
+
+//        frameLayout.addView(writeButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.TOP, 0, 0, 16, 0));
         writeButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -855,7 +889,7 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
                 View child = view.getChildAt(0);
                 if (child != null) {
                     if (firstVisibleItem == 0) {
-                        height = AndroidUtilities.dp(88) + (child.getTop() < 0 ? child.getTop() : 0);
+                //        height = AndroidUtilities.dp(88) + (child.getTop() < 0 ? child.getTop() : 0);
                     }
                     if (extraHeight != height) {
                         extraHeight = height;
@@ -1059,6 +1093,9 @@ public void didReceivedNotification(int id, Object... args) {
     @Override
     public void onResume() {
         super.onResume();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.SETTING_SCREEN);
+        setSettingMenuList();
+        showTabsAndmenu();
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
@@ -1074,7 +1111,7 @@ public void onConfigurationChanged(Configuration newConfig) {
 
     private void needLayout() {
         FrameLayout.LayoutParams layoutParams;
-        int newTop = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
+        int newTop = 0;//(actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
         if (listView != null) {
             layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
             if (layoutParams.topMargin != newTop) {
@@ -1092,8 +1129,8 @@ private void needLayout() {
 
             writeButton.setTranslationY((actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
 
-            final boolean setVisible = diff > 0.2f;
-            boolean currentVisible = writeButton.getTag() == null;
+            final boolean setVisible = true;//diff > 0.2f;
+            boolean currentVisible = false;//writeButton.getTag() == null;
             if (setVisible != currentVisible) {
                 if (setVisible) {
                     writeButton.setTag(null);
@@ -1229,7 +1266,7 @@ public boolean isEnabled(int i) {
                     i == askQuestionRow || i == sendLogsRow || i == sendByEnterRow || i == autoplayGifsRow || i == privacyRow || i == wifiDownloadRow ||
                     i == mobileDownloadRow || i == clearLogsRow || i == roamingDownloadRow || i == languageRow || i == preferencerow/*|| i == usernameRow*/ ||
                     i == switchBackendButtonRow || i == telegramFaqRow || i == contactsSortRow || i == contactsReimportRow || i == saveToGalleryRow ||
-                    i == stickersRow || i == cacheRow || i == raiseToSpeakRow || i == privacyPolicyRow || i == customTabsRow || i == directShareRow || i == versionRow;
+                    i == stickersRow || i == cacheRow || i == raiseToSpeakRow || i == privacyPolicyRow || i == customTabsRow || i == directShareRow || i == versionRow|| i == contactUsRow;
         }
 
         @Override
@@ -1260,7 +1297,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     view = new EmptyCell(mContext);
                 }
                 if (i == overscrollRow) {
-                    ((EmptyCell) view).setHeight(AndroidUtilities.dp(88));
+                    ((EmptyCell) view).setHeight(AndroidUtilities.dp(40));
                 } else {
                     ((EmptyCell) view).setHeight(AndroidUtilities.dp(16));
                 }
@@ -1299,22 +1336,25 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     textCell.setText("Send Logs", true);
                 } else if (i == clearLogsRow) {
                     textCell.setText("Clear Logs", true);
-                } else if (i == askQuestionRow) {
+                }/* else if (i == askQuestionRow) {
                     textCell.setText(LocaleController.getString("AskAQuestion", R.string.AskAQuestion), true);
-                } else if (i == privacyRow) {
+                }*/ else if (i == privacyRow) {
                     textCell.setText(LocaleController.getString("PrivacySettings", R.string.PrivacySettings), true);
                 } else if (i == switchBackendButtonRow) {
                     textCell.setText("Switch Backend", true);
-                } else if (i == telegramFaqRow) {
+                }/* else if (i == telegramFaqRow) {
                     textCell.setText(LocaleController.getString("TelegramFAQ", R.string.TelegramFaq), true);
-                } else if (i == contactsReimportRow) {
+                }*/ else if (i == contactsReimportRow) {
                     textCell.setText(LocaleController.getString("ImportContacts", R.string.ImportContacts), true);
                 } else if (i == stickersRow) {
                     textCell.setText(LocaleController.getString("Stickers", R.string.Stickers), true);
                 } else if (i == cacheRow) {
                     textCell.setText(LocaleController.getString("CacheSettings", R.string.CacheSettings), true);
-                } else if (i == privacyPolicyRow) {
+                }/* else if (i == privacyPolicyRow) {
                     textCell.setText(LocaleController.getString("PrivacyPolicy", R.string.PrivacyPolicy), true);
+                }*/
+                else if(i == contactUsRow) {
+                    textCell.setText(LocaleController.getString("ContactUs", R.string.ContactUs), true);
                 }
             } else if (type == 3) {
                 if (view == null) {
@@ -1487,7 +1527,7 @@ public int getItemViewType(int i) {
                 return 1;
             } else if (i == enableAnimationsRow || i == sendByEnterRow || i == saveToGalleryRow || i == autoplayGifsRow || i == raiseToSpeakRow || i == customTabsRow || i == directShareRow) {
                 return 3;
-            } else if (i == notificationRow || i == backgroundRow || i == askQuestionRow || i == sendLogsRow || i == privacyRow || i == clearLogsRow || i == switchBackendButtonRow || i == telegramFaqRow || i == contactsReimportRow || i == textSizeRow || i == languageRow || i == contactsSortRow || i == stickersRow || i == cacheRow || i == privacyPolicyRow) {
+            } else if (i == notificationRow || i == backgroundRow || i == askQuestionRow || i == sendLogsRow || i == privacyRow || i == clearLogsRow || i == switchBackendButtonRow || i == telegramFaqRow || i == contactsReimportRow || i == textSizeRow || i == languageRow || i == contactsSortRow || i == stickersRow || i == cacheRow || i == privacyPolicyRow|| i == contactUsRow) {
                 return 2;
             } else if (i == versionRow) {
                 return 5;
@@ -1514,4 +1554,171 @@ public boolean isEmpty() {
             return false;
         }
     }
+
+
+
+    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
+
+    private void setSettingMenuList(){
+        ArrayList<MenuItems> draweritems=new ArrayList<MenuItems>();
+        draweritems.add(new MenuItems(LocaleController.getString("Edit", R.string.Edit),R.drawable.menu_bar_edit,true, "",0));
+        //   draweritems.add(new MenuItems(LocaleController.getString("AskAQuestion", R.string.AskAQuestion), R.drawable.menu_faq, true, "",1));
+        //    draweritems.add(new MenuItems(LocaleController.getString("TelegramFaq", R.string.TelegramFaq),R.drawable.menu_faq,true, "",2));
+        draweritems.add(new MenuItems(LocaleController.getString("preferences", R.string.preferences),R.drawable.menu_pref,true, "",3));
+
+        if(!(UserPaymentInfo.getInstatance().getPaymentStatus() == UserPaymentInfo.paidUser) ){
+            draweritems.add(new MenuItems("Upgrade to Premium",R.drawable.ic_premium,true, "",4));
+        }
+
+
+        SlidingMenuAdapter adapter = new SlidingMenuAdapter(getParentActivity(),
+                draweritems);
+
+        ViewParent view=  parentLayout.getParent();
+        ListView drawerList=((ListView)((View) view.getParent()).findViewById(R.id.contact_slidermenu));
+        drawerList.setAdapter(adapter);
+        drawerList.setOnItemClickListener(new SettingMenuClickListener());
+        ((View) view.getParent()).findViewById(R.id.divider).setVisibility(View.VISIBLE);
+
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setVisibility(View.VISIBLE);
+        ((ImageView)((View) view.getParent()).findViewById(R.id.menu_image)).setImageResource(R.drawable.menu_logout);
+        ((TextView)((View) view.getParent()).findViewById(R.id.row_title)).setText(LocaleController.getString("LogOut", R.string.LogOut));
+        ((View) view.getParent()).findViewById(R.id.menu_container).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+
+            }
+        });
+
+        ((View) view.getParent()).findViewById(R.id.bottom_panel).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                logoutUser();
+                parentLayout.closeDrawer();
+                //    logOutUser();
+            }
+        });
+    }
+    private class SettingMenuClickListener implements
+            ListView.OnItemClickListener {
+        @Override
+        public void onItemClick(AdapterView<?> parent, View view, int position,
+                                long id) {
+            switch(position){
+
+                case 0:
+                    parentLayout.closeDrawer();
+                    presentFragment(new ChangeNameActivity());
+                    // closeDrawer();
+                    //  presentFragment(new SettingsChangeNameActivity());
+                    break;
+            /*    case 1:
+                    parentLayout.closeDrawer();
+                    askQuestion();
+                    // closeDrawer();
+                  //  askAQuestion();
+
+                    break;*/
+             /*   case 2:
+                    parentLayout.closeDrawer();
+
+                    //    closeDrawer();
+                    try {
+                        Intent pickIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(LocaleController.getString("TelegramFaqUrl", R.string.TelegramFaqUrl)));
+                        getParentActivity().startActivityForResult(pickIntent, 500);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                    break;*/
+                /*case 3:
+                    parentLayout.closeDrawer();
+                    //    closeDrawer();
+                    logoutUser();
+                    break;*/
+                case 1:
+                    parentLayout.closeDrawer();
+                    SharedPreferences p  = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                    if(p.getString("social_id","").equals("")) {
+                        presentFragment(new MyProfileActivity());
+                    }
+                    else {
+                        presentFragment(new PreferencesActivity());
+                    }
+                    break;
+
+
+                case 2 :
+                    parentLayout.closeDrawer();
+                    SharedPreferences pp  = ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE);
+                    if(pp.getString("social_id","").equals("")) {
+                        presentFragment(new MyProfileActivity());
+                    }
+                    else{
+                        if(UserPaymentInfo.getInstatance().getPaymentStatus() == UserPaymentInfo.paidUser ){
+                            Toast.makeText(getParentActivity(),"YOU HAVE ALREADY SUBSCRIBED",Toast.LENGTH_SHORT).show();
+                        }else {
+                            PaymentManager.createIntent(getParentActivity());
+                        }
+                    }
+
+                    break;
+            }
+
+
+        }
+    }
+
+
+    public void logoutUser(){
+        if (getParentActivity() == null) {
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setMessage(LocaleController.getString("AreYouSureLogout", R.string.AreYouSureLogout));
+        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                MessagesController.getInstance().performLogout(true);
+            }
+        });
+        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+        showDialog(builder.create());
+
+    }
+
+
+
+
+    public void askQuestion(){
+        if (getParentActivity() == null) {
+            return;
+        }
+        final TextView message = new TextView(getParentActivity());
+        message.setText(Html.fromHtml(LocaleController.getString("AskAQuestionInfo", R.string.AskAQuestionInfo)));
+        message.setTextSize(18);
+        message.setPadding(AndroidUtilities.dp(8), AndroidUtilities.dp(5), AndroidUtilities.dp(8), AndroidUtilities.dp(6));
+        message.setMovementMethod(new LinkMovementMethodMy());
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setView(message);
+        builder.setPositiveButton(LocaleController.getString("AskButton", R.string.AskButton), new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                performAskAQuestion();
+            }
+        });
+        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+        showDialog(builder.create());
+    }
+
+    public void sendMail(){
+        Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(
+                "mailto","telegram@craterzone.com", null));
+        emailIntent.putExtra(Intent.EXTRA_SUBJECT, "Support IM for Telegram");
+        emailIntent.putExtra(Intent.EXTRA_TEXT, Html.fromHtml(getParentActivity().getString(R.string.MailContent)));
+        getParentActivity().startActivity(Intent.createChooser(emailIntent, "Send email..."));
+    }
+
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
index 6cc16cc0b..51a10652e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SocialFriendActivity.java
@@ -33,6 +33,7 @@
 import org.telegram.socialuser.runable.GetSuggestFriendsRq;
 import org.telegram.tgnet.TLRPC;
 
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.listners.OnServerResponse;
@@ -103,7 +104,7 @@ public View createView(final Context context) {
             BackgroundExecuter.getInstance().execute(new AddContactRequester(telegramUsersesList, params));
         }
 
-      //  hideTabsAnsMenu();
+        hideTabsAnsMenu();
         //ArrayList<CustomHttpParams> parem = new ArrayList<>();
         ArrayList<CustomHttpParams> params = new ArrayList<>();
         params.add(new CustomHttpParams("userId", pp.getString("social_id", "")));
@@ -113,9 +114,9 @@ public View createView(final Context context) {
             reqester = new GetSuggestFriendsRq(params,SocialFriendActivity.this,"searchdgree");
         }
 
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);//todo
+        actionBar.setBackButtonImage(0x00000000);//todo
         actionBar.setAllowOverlayTitle(true);
-    //    actionBar.setTextLast("");
+        actionBar.setTextLast("");
         final TLRPC.User user = UserConfig.getCurrentUser();
         if(bundle.get("s_friend").equals("wink")){
             actionBar.setTitle(LocaleController.getString("yourpreferences", R.string.yourpreferences));
@@ -130,7 +131,7 @@ public void onItemClick(int id) {
                 }
             }
         });
-         listnew = new ArrayList<>();
+        listnew = new ArrayList<>();
 
         fragmentView = View.inflate(getParentActivity(), R.layout.gridview, null);
 
@@ -140,7 +141,7 @@ public void onItemClick(int id) {
         progressBar = (ProgressBar)fragmentView.findViewById(R.id.pb_load);
         progressBar.setVisibility(View.VISIBLE);
 
-        if(UserPaymentInfo.getInstatance().getPaymentStatus()!= UserPaymentInfo.paidUser){
+        if(UserPaymentInfo.getInstatance().getPaymentStatus()!=UserPaymentInfo.paidUser){
             gr_View.setPadding(0,0,0,0);
             paybutton.setVisibility(View.VISIBLE);
             paybutton.setOnClickListener(new View.OnClickListener() {
@@ -215,41 +216,41 @@ public void onItemClick(AdapterView<?> parent, View view,
                         params.add(new CustomHttpParams("userId", ApplicationLoader.applicationContext.getSharedPreferences("socialuser", Activity.MODE_PRIVATE).getString("social_id", "")));
                         ArrayList<TLRPC.TelegramUsers> telegramList = new ArrayList<>();
                         telegramList.add(listnew.get(pos));
-                       BackgroundExecuter.getInstance().execute(new AddContactRequester(telegramList, params));
-                        listnew.remove(listnew.get(pos));
+                        //  BackgroundExecuter.getInstance().execute(new AddContactRequester(telegramList, params));
+                        //  listnew.remove(listnew.get(pos));
 
-                } else {
+                    } else {
 
                         Toast.makeText(mContext,"Invalid user",Toast.LENGTH_SHORT).show();
+                    }
+                } catch (Exception e) {
+                    Log.d("User_Key", e.getStackTrace().toString());
                 }
-            } catch (Exception e) {
-                Log.d("User_Key", e.getStackTrace().toString());
-            }
 
-        }
-    });
-    img_Back.setOnClickListener(new View.OnClickListener() {
-        @Override
-        public void onClick(View v) {
-            finishFragment();
-        }
-    });
+            }
+        });
+        img_Back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
 
-    return fragmentView;
-}
+        return fragmentView;
+    }
 
     @Override
     public void onResume() {
         super.onResume();
-   //     ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
-
-   if(isSend && remPosition!= -1)
-   {
-       listnew.remove(listnew.get(remPosition));
-       isSend=false;
-       remPosition= -1;
-   }
-     if(listnew.size()<21 && UserPaymentInfo.getInstatance().getPaymentStatus()!=1){
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.CHANGE_PHONE_HELP);
+
+        if(isSend && remPosition!= -1)
+        {
+            listnew.remove(listnew.get(remPosition));
+            isSend=false;
+            remPosition= -1;
+        }
+        if(listnew.size()<21 && UserPaymentInfo.getInstatance().getPaymentStatus()!=1){
             actionBar.setTextLast(listnew.size()+"/20");
         }else{ actionBar.setTextLast("");
         }
@@ -271,7 +272,7 @@ public void run() {
 
                         listnew.addAll(users);
                         if(listnew.size()<21 && UserPaymentInfo.getInstatance().getPaymentStatus()!=1){
-                        actionBar.setTextLast(listnew.size()+"/20");
+                            actionBar.setTextLast(listnew.size()+"/20");
                         }
                         else{ actionBar.setTextLast("");
                         }
@@ -316,7 +317,7 @@ public void onUserSyncFailed() {
     }
 
     public static  void setMessageSend(boolean isMessageSend){
-    isSend = isMessageSend;
+        isSend = isMessageSend;
     }
 
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
index edff6df2e..94b16915d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
@@ -18,6 +18,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
+import android.widget.LinearLayout;
 import android.widget.Toast;
 
 import org.telegram.messenger.LocaleController;
@@ -34,6 +35,7 @@
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Cells.StickerSetCell;
@@ -127,7 +129,8 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("Stickers", R.string.Stickers));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -141,9 +144,12 @@ public void onItemClick(int id) {
 
         listAdapter = new ListAdapter(context);
 
-        fragmentView = new FrameLayout(context);
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
-        frameLayout.setBackgroundColor(0xfff0f0f0);
+//        fragmentView = new FrameLayout(context);
+
+        fragmentView = View.inflate(context,R.layout.layout_stickers_activity,null);//new FrameLayout(context);
+
+      /*  FrameLayout frameLayout = (FrameLayout) fragmentView;
+        frameLayout.setBackgroundColor(0xfff0f0f0);*/
 
         listView = new RecyclerListView(context);
         listView.setFocusable(true);
@@ -154,7 +160,10 @@ public void onItemClick(int id) {
         ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new TouchHelperCallback());
         itemTouchHelper.attachToRecyclerView(listView);
 
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        LinearLayout layout = (LinearLayout) fragmentView.findViewById(R.id.list_container);
+        layout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT/*, Gravity.TOP,0,0,0,50*/));
+
+//        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         listView.setAdapter(listAdapter);
         listView.setOnItemClickListener(new RecyclerListView.OnItemClickListener() {
             @Override
@@ -171,6 +180,21 @@ public void onItemClick(View view, int position) {
             }
         });
 
+
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
         return fragmentView;
     }
 
@@ -224,6 +248,7 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.STICKERS_ACTIVITY);
     }
 
     private class ListAdapter extends RecyclerListView.Adapter {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
index 63e638ee6..720cb0d16 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
@@ -38,6 +38,7 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.FileLog;
@@ -47,6 +48,7 @@
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.Utilities;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -452,6 +454,8 @@ public void run() {
             }, 200);
         }
         AndroidUtilities.requestAdjustResize(getParentActivity(), classGuid);
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.TWOSTEP_VARIFICATION);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
index e550e0c33..fc6ab65fb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
@@ -107,9 +107,9 @@ public UserProfileActivity(Bundle args,TLRPC.TelegramUsers telegramUser ) {
     @Override
     public View createView(final Context context) {
 
-        //hideTabsAnsMenu();
+        hideTabsAnsMenu();
         mcContext = context;
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);//todo
+        actionBar.setBackButtonImage(0);//todo
 
         actionBar.setAllowOverlayTitle(true);
         ActionBarMenu menu = actionBar.createMenu();
@@ -269,7 +269,7 @@ public void onResume() {
         super.onResume();
         ContactsController.getInstance().checkContacts();
         statusTextView.setText(LocaleController.formatUserStatus(currentUser));
-      //  hideTabsAnsMenu();
+        hideTabsAnsMenu();
 
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index 111f7be53..92de1218b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -46,6 +46,7 @@
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -431,6 +432,8 @@ private void setPlayerSurface() {
     public void onResume() {
         super.onResume();
         fixLayoutInternal();
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.VIDEO_EDITOR);
+
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
index fa90e559d..ead489f51 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
@@ -20,6 +20,7 @@
 import android.graphics.PorterDuffColorFilter;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.provider.MediaStore;
 import android.view.Gravity;
@@ -29,6 +30,7 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.ProgressBar;
+import android.widget.RelativeLayout;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ImageLoader;
@@ -46,6 +48,7 @@
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 
+import org.telegram.tracker.AnalyticsTrackers;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.Cells.WallpaperCell;
@@ -62,8 +65,7 @@
 
     private ListAdapter listAdapter;
     private ImageView backgroundImage;
-    private FrameLayout progressView;
-    private View progressViewBackground;
+    private ProgressBar progressBar;
     private int selectedBackground;
     private int selectedColor;
     private ArrayList<TLRPC.WallPaper> wallPapers = new ArrayList<>();
@@ -82,6 +84,7 @@ public boolean onFragmentCreate() {
 
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileLoadProgressChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.wallpapersDidLoaded);
 
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
@@ -98,12 +101,15 @@ public void onFragmentDestroy() {
         super.onFragmentDestroy();
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileDidFailedLoad);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileDidLoaded);
+        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileLoadProgressChanged);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.wallpapersDidLoaded);
     }
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        hideTabsAnsMenu();
+        actionBar.setBackButtonImage(0x00000000);//todo
+        // actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
         actionBar.setTitle(LocaleController.getString("ChatBackground", R.string.ChatBackground));
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
@@ -158,12 +164,12 @@ public void onItemClick(int id) {
         ActionBarMenu menu = actionBar.createMenu();
         doneButton = menu.addItemWithWidth(done_button, R.drawable.ic_done, AndroidUtilities.dp(56));
 
-        FrameLayout frameLayout = new FrameLayout(context);
-        fragmentView = frameLayout;
+        // FrameLayout frameLayout = new FrameLayout(context);
+        fragmentView = View.inflate(context,R.layout.layout_wallpaper_activity,null);//frameLayout;
 
-        backgroundImage = new ImageView(context);
+        backgroundImage = (ImageView)fragmentView.findViewById(R.id.iv_wallpaper); //new ImageView(context);
         backgroundImage.setScaleType(ImageView.ScaleType.CENTER_CROP);
-        frameLayout.addView(backgroundImage, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        //frameLayout.addView(backgroundImage, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
         backgroundImage.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
@@ -171,35 +177,60 @@ public boolean onTouch(View v, MotionEvent event) {
             }
         });
 
-        progressView = new FrameLayout(context);
-        progressView.setVisibility(View.INVISIBLE);
-        frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 0, 0, 0, 52));
+        progressBar = (ProgressBar)fragmentView.findViewById(R.id.pb_wall); //new ProgressBar(context);
+        progressBar.setPadding(AndroidUtilities.dp(6), AndroidUtilities.dp(6), AndroidUtilities.dp(6), AndroidUtilities.dp(6));
+        //  frameLayout.addView(progressBar, LayoutHelper.createFrame(60, 60, Gravity.CENTER, 0, 0, 0, 52));
 
-        progressViewBackground = new View(context);
-        progressViewBackground.setBackgroundResource(R.drawable.system_loader);
-        progressView.addView(progressViewBackground, LayoutHelper.createFrame(36, 36, Gravity.CENTER));
-
-        ProgressBar progressBar = new ProgressBar(context);
-        try {
-            progressBar.setIndeterminateDrawable(context.getResources().getDrawable(R.drawable.loading_animation));
-        } catch (Exception e) {
-            //don't promt
-        }
-        progressBar.setIndeterminate(true);
-        AndroidUtilities.setProgressBarAnimationDuration(progressBar, 1500);
-        progressView.addView(progressBar, LayoutHelper.createFrame(32, 32, Gravity.CENTER));
-
-        RecyclerListView listView = new RecyclerListView(context);
+        RecyclerListView listView =/* (RecyclerListView)fragmentView.findViewById(R.id.lv_wal); //*/new RecyclerListView(context);
         listView.setClipToPadding(false);
-        listView.setTag(8);
         listView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), 0);
         LinearLayoutManager layoutManager = new LinearLayoutManager(context);
         layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);
         listView.setLayoutManager(layoutManager);
+        listView.setClipToPadding(false);
         listView.setDisallowInterceptTouchEvents(true);
-        listView.setOverScrollMode(RecyclerListView.OVER_SCROLL_NEVER);
+
+        if (Build.VERSION.SDK_INT >= 9) {
+            listView.setOverScrollMode(RecyclerListView.OVER_SCROLL_NEVER);
+        }
         listView.setAdapter(listAdapter = new ListAdapter(context));
-        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 102, Gravity.LEFT | Gravity.BOTTOM));
+        ((RelativeLayout)fragmentView).addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 102));
+//        View mView = View.inflate(context, R.layout.settings_layout, null);
+/*
+
+        frameLayout.addView(mView);//, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 102, Gravity.LEFT | Gravity.BOTTOM));
+
+
+        mView.findViewById(R.id.black_view).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        mView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showTabsAndmenu();
+                finishFragment();
+            }
+        });
+*/
+        fragmentView.findViewById(R.id.backview).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finishFragment();
+            }
+        });
+
+
+        fragmentView.findViewById(R.id.black_vw).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
+
         listView.setOnItemClickListener(new RecyclerListView.OnItemClickListener() {
             @Override
             public void onItemClick(View view, int position) {
@@ -323,18 +354,14 @@ private void processSelectedBackground() {
                 height = temp;
             }
             TLRPC.PhotoSize size = FileLoader.getClosestPhotoSizeWithSize(wallPaper.sizes, Math.min(width, height));
-            if (size == null) {
-                return;
-            }
             String fileName = size.location.volume_id + "_" + size.location.local_id + ".jpg";
             File f = new File(FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_CACHE), fileName);
             if (!f.exists()) {
-                int result[] = AndroidUtilities.calcDrawableColor(backgroundImage.getDrawable());
-                progressViewBackground.getBackground().setColorFilter(new PorterDuffColorFilter(result[0], PorterDuff.Mode.MULTIPLY));
+                progressBar.setProgress(0);
                 loadingFile = fileName;
                 loadingFileObject = f;
                 doneButton.setEnabled(false);
-                progressView.setVisibility(View.VISIBLE);
+                progressBar.setVisibility(View.VISIBLE);
                 loadingSize = size;
                 selectedColor = 0;
                 FileLoader.getInstance().loadFile(size, null, true);
@@ -354,7 +381,7 @@ private void processSelectedBackground() {
                 backgroundImage.setBackgroundColor(0);
                 selectedColor = 0;
                 doneButton.setEnabled(true);
-                progressView.setVisibility(View.GONE);
+                progressBar.setVisibility(View.GONE);
             }
         } else {
             if (loadingFile != null) {
@@ -390,7 +417,7 @@ private void processSelectedBackground() {
             loadingFile = null;
             loadingSize = null;
             doneButton.setEnabled(true);
-            progressView.setVisibility(View.GONE);
+            progressBar.setVisibility(View.GONE);
         }
     }
 
@@ -403,20 +430,26 @@ public void didReceivedNotification(int id, final Object... args) {
                 loadingFileObject = null;
                 loadingFile = null;
                 loadingSize = null;
-                progressView.setVisibility(View.GONE);
+                progressBar.setVisibility(View.GONE);
                 doneButton.setEnabled(false);
             }
         } else if (id == NotificationCenter.FileDidLoaded) {
             String location = (String) args[0];
             if (loadingFile != null && loadingFile.equals(location)) {
                 backgroundImage.setImageURI(Uri.fromFile(loadingFileObject));
-                progressView.setVisibility(View.GONE);
+                progressBar.setVisibility(View.GONE);
                 backgroundImage.setBackgroundColor(0);
                 doneButton.setEnabled(true);
                 loadingFileObject = null;
                 loadingFile = null;
                 loadingSize = null;
             }
+        } else if (id == NotificationCenter.FileLoadProgressChanged) {
+            String location = (String) args[0];
+            if (loadingFile != null && loadingFile.equals(location)) {
+                Float progress = (Float) args[1];
+                progressBar.setProgress((int) (progress * 100));
+            }
         } else if (id == NotificationCenter.wallpapersDidLoaded) {
             wallPapers = (ArrayList<TLRPC.WallPaper>) args[0];
             wallpappersByIds.clear();
@@ -471,6 +504,7 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        ApplicationLoader.getInstance().trackScreenView(AnalyticsTrackers.WALLPAPER_ACTIVITY);
         processSelectedBackground();
     }
 
diff --git a/TMessagesProj/src/main/res/layout/layout_ad.xml b/TMessagesProj/src/main/res/layout/layout_ad.xml
index 6ba2e2ad4..e3343021c 100644
--- a/TMessagesProj/src/main/res/layout/layout_ad.xml
+++ b/TMessagesProj/src/main/res/layout/layout_ad.xml
@@ -7,32 +7,32 @@
     android:layout_height="match_parent">
 
 
-<!--
-    <com.smaato.soma.BannerView
-        android:id="@+id/bannerView"
-        android:layout_width="match_parent"
-        android:paddingLeft="10dp"
-        android:paddingRight="10dp"
-        android:layout_height="wrap_content"
-        android:gravity="center"
-        android:paddingBottom="5dp"
-        android:layout_centerHorizontal="true" >
-    </com.smaato.soma.BannerView>
--->
-
-
-<!--
-    <com.google.android.gms.ads.AdView
-        android:id="@+id/adView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        ads:adSize="BANNER"
-        android:paddingLeft="10dp"
-        android:paddingRight="10dp"
-        android:gravity="center"
-        android:paddingBottom="5dp"
-        ads:adUnitId="@string/banner_home_footer">
-    </com.google.android.gms.ads.AdView>-->
+    <!--
+        <com.smaato.soma.BannerView
+            android:id="@+id/bannerView"
+            android:layout_width="match_parent"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:paddingBottom="5dp"
+            android:layout_centerHorizontal="true" >
+        </com.smaato.soma.BannerView>
+    -->
+
+
+    <!--
+        <com.google.android.gms.ads.AdView
+            android:id="@+id/adView"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            ads:adSize="BANNER"
+            android:paddingLeft="10dp"
+            android:paddingRight="10dp"
+            android:gravity="center"
+            android:paddingBottom="5dp"
+            ads:adUnitId="@string/banner_home_footer">
+        </com.google.android.gms.ads.AdView>-->
 
 
     <com.google.android.gms.ads.AdView
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index de547d726..a01c0ef6d 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -14,13 +14,9 @@
     <string name="ChooseCountry">اختر دولة</string>
     <string name="WrongCountry">رمز البلد خاطئ</string>
     <!--code enter view-->
-    <string name="YourCode">تحقق الهاتف</string>
-    <string name="SentSmsCode">تم إرسال رسالة قصيرة تحتوي على رمز التفعيل الخاص بك لرقمك <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.</string>
-    <string name="SentAppCode">لقد قمنا بإرسال رمز الدخول إلى تطبيق <![CDATA[<b>]]>تيليجرام<![CDATA[</b>]]> على جهازك الآخر</string>
-    <string name="SentCallCode">تم إرسال مكالمة تفعيل على رقمك <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.\n\nلا داعي للرد عليها، تيليجرام سيقوم بعملية التفعيل تلقائيًا.</string>
-    <string name="SentCallOnly">جاري الاتصال على رقمك <![CDATA[<b>]]>%1$s<![CDATA[</b>]]> لإيصال رمز التفعيل.</string>
+    <string name="YourCode">رمز التفعيل</string>
+    <string name="SentSmsCode">تم إرسال رسالة قصيرة تحتوي على رمز التفعيل الخاص بك</string>
     <string name="CallText">سنتصل بك خلال %1$d:%2$02d</string>
-    <string name="SmsText">سنقوم بإرسال رسالة قصيرة خلال %1$d:%2$02d</string>
     <string name="Calling">جاري الاتصال بك ...</string>
     <string name="Code">رمز التفعيل</string>
     <string name="WrongNumber">الرقم خاطئ؟</string>
@@ -66,16 +62,8 @@
     <string name="MuteDisable">تعطيل</string>
     <string name="Hashtags">الأوسمة</string>
     <string name="Recent">حديث</string>
-    <string name="ChatHints">المحادثات</string>
-    <string name="ChatHintsDelete">هل ترغب في حذف %1$s من الاقتراحات؟</string>
     <string name="LinkPreview">معاينة الرابط</string>
-    <string name="Draft">مسودة</string>
-    <string name="HistoryCleared">تم مسح السجل</string>
     <!--channels-->
-    <string name="GroupType">نوع المجموعة</string>
-    <string name="ChannelType">نوع القناة</string>
-    <string name="ChannelTypePublic">عامة</string>
-    <string name="ChannelTypePrivate">خاصة</string>
     <string name="SetAsAdmin">ترقية ليكون مشرف</string>
     <string name="DescriptionInfoMega">يمكنك كتابة وصف اختياري لمجموعتك.</string>
     <string name="LeaveMega">مغادرة المجموعة</string>
@@ -93,39 +81,23 @@
     <string name="GroupUserLeftError">المعذرة, هذا المستخدم قرر مغادرة المجموعة, لا يمكنك دعوته مرة أخرى للمجموعة.</string>
     <string name="GroupUserCantAdmin">المعذرة، يوجد الكثير من المشرفين في هذه المجموعة.</string>
     <string name="GroupUserCantBot">المعذرة، يوجد الكثير من حسابات البوت في هذه المجموعة.</string>
-    <string name="ActionPinnedText">un1 ثبت \"%1$s\"</string>
-    <string name="ActionPinnedNoText">un1 ثبت رسالة</string>
-    <string name="ActionPinnedPhoto">un1 ثبت صورة</string>
-    <string name="ActionPinnedVideo">un1 ثبت فيديو</string>
-    <string name="ActionPinnedFile">un1 ثبت ملف</string>
-    <string name="ActionPinnedSticker">un1 ثبت ملصق</string>
-    <string name="ActionPinnedVoice">un1 ثبت رسالة صوتية</string>
-    <string name="ActionPinnedContact">un1 ثبت جهة اتصال</string>
-    <string name="ActionPinnedGeo">un1 ثبت خريطة</string>
-    <string name="ActionPinnedGif">un1 ثبت صورة متحركة</string>
-    <string name="ActionPinnedMusic">un1 ثبت مقطع صوتي</string>
     <string name="ActionMigrateFromGroup">تم ترقية هذه المجموعة لتصبح مجموعة خارقة</string>
     <string name="ActionMigrateFromGroupNotify">تم ترقية المجموعة %1$s لتصبح مجموعة خارقة</string>
     <string name="NoBlockedGroup">أعضاء القائمة السوداء هم أعضاء تم حذفهم من المجموعة ولا يمكنهم العودة لها إلى بدعوة من المشرف. روابط الدعوة لن تمكنهم من العودة للمجموعة.</string>
     <string name="NewChannel">قناة جديدة</string>
     <string name="EnterChannelName">اسم القناة</string>
+    <string name="Comments">التعليقات</string>
+    <string name="CommentsInfo">إذا قمت بتفعيل التعليقات، الأعضاء سيتمكنون من مناقشة ما تنشره في قناتك.</string>
     <string name="AddMutual">إضافة جهات اتصال لقناتك</string>
     <string name="ChannelUsernameHelp">يستطيع الناس مشاركة هذا الرابط مع غيرهم ويمكنهم إيجاد قناتك من خلال البحث في تيليجرام.</string>
-    <string name="MegaUsernameHelp">يستطيع الناس مشاركة هذا الرابط مع غيرهم ويمكنهم إيجاد مجموعتك من خلال البحث في تيليجرام.</string>
     <string name="ChannelUsernamePlaceholder">الرابط</string>
     <string name="ChannelPrivateLinkHelp">يستطيع الناس الدخول إلى قناتك فقط من خلال الرابط أدناه. يمكنك تعطيل هذا الرابط في أي وقت.</string>
-    <string name="MegaPrivateLinkHelp">يستطيع الناس الدخول إلى مجموعتك فقط من خلال الرابط أدناه. يمكنك تعطيل هذا الرابط في أي وقت.</string>
-    <string name="DescriptionOptionalPlaceholder">الوصف (اختياري)</string>
     <string name="DescriptionPlaceholder">الوصف</string>
     <string name="DescriptionInfo">يمكنك كتابة وصف اختياري لقناتك.</string>
     <string name="ChannelPublic">قناة عامة</string>
-    <string name="MegaPublic">مجموعة عامة</string>
     <string name="ChannelPublicInfo">القنوات العامة يمكن إيجادها من الخلال البحث، أي شخص يستطيع الدخول إليها.</string>
-    <string name="MegaPublicInfo">المجموعات العامة يمكن إيجادها من الخلال البحث، سجل المحادثات متاح للجميع وأي شخص يستطيع الدخول إليها.</string>
     <string name="ChannelPrivate">قناة خاصة</string>
-    <string name="MegaPrivate">مجموعة خاصة</string>
     <string name="ChannelPrivateInfo">القنوات الخاصة يمكن الدخول إليها فقط عن طريق رابط الدعوة.</string>
-    <string name="MegaPrivateInfo">المجموعات الخاصة يمكن الدخول إليها فقط عن طريق دعوة من أعضائها أو رابط الدعوة.</string>
     <string name="ChannelLinkTitle">الرابط</string>
     <string name="ChannelInviteLinkTitle">رابط دعوة</string>
     <string name="ChannelAddMembers">إضافة مشارك</string>
@@ -133,8 +105,10 @@
     <string name="LeaveChannelMenu">غادر القناة</string>
     <string name="ChannelSettings">الإعدادات</string>
     <string name="ChannelJoin">اشترك</string>
+    <string name="OpenChannelProfile">معلومات القناة</string>
     <string name="ChannelBroadcast">رسالة جماعية</string>
-    <string name="ChannelSilentBroadcast">رسالة جماعية صامتة</string>
+    <string name="ChannelComment">تعليق</string>
+    <string name="ShowDiscussion">إظهار التعليقات</string>
     <string name="ChannelAlertTitle">ما هي القنوات؟</string>
     <string name="ChannelAlertText">القنوات هي أداة جديدة للرسائل الجماعية لمجموعة كبيرة من المستقبلين.</string>
     <string name="ChannelAlertCreate">أنشاء قناة</string>
@@ -143,8 +117,6 @@
     <string name="LinkInvalidShort">اسم القناة يجب أن يتكوّن من ٥ حروف على الأقل.</string>
     <string name="LinkInvalidLong">الاسم يجب ألا يتخطى ٣٢ حرف كحد أقصى.</string>
     <string name="LinkInvalidStartNumber">أسماء القنوات لا يمكن أن تبدأ برقم.</string>
-    <string name="LinkInvalidShortMega">أسماء المجموعات يجب أن تتكوّن من ٥ حروف على الأقل.</string>
-    <string name="LinkInvalidStartNumberMega">أسماء المجموعات لا يمكن أن تبدأ برقم.</string>
     <string name="LinkChecking">جاري مراجعة الاسم...</string>
     <string name="LinkAvailable">%1$s متاح.</string>
     <string name="ChannelMembers">أعضاء</string>
@@ -156,7 +128,6 @@
     <string name="ChannelLeaveAlert">هل أنت متأكد من رغبتك في مغادرة القناة؟</string>
     <string name="ChannelDeleteInfo">ستخسر كافة الرسائل في هذه القناة.</string>
     <string name="ChannelEdit">تعديل</string>
-    <string name="MegaWasPrivateAlert">يرجى ملاحظة أنه في حال اخترت رابط عام لمجموعتك، سيستطيع أي شخص إيجادها من خلال البحث والدخول إليها.\n\nلا تقم بإنشاء هذا الرابط إذا رغبت في أن تستمر قناتك خاصة.</string>
     <string name="ChannelWasPrivateAlert">يرجى ملاحظة أنه في حال اخترت رابط عام لقناتك، سيستطيع أي شخص إيجادها من خلال البحث والدخول إليها.\n\nلا تقم بإنشاء هذا الرابط إذا رغبت في أن تستمر قناتك خاصة.</string>
     <string name="ChannelPublicEmptyUsername">فضلًا اختر رابط لقناتك العامة ليتمكن الناس من إيجادها من خلال البحث ومشاركتها مع غيرهم.\n\nإلى لم ترغب بذلك، يفضّل إنشاء قناة خاصة بدلًا من العامة.</string>
     <string name="ActionCreateChannel">تم إنشاء القناة</string>
@@ -164,7 +135,6 @@
     <string name="ActionChannelRemovedPhoto">تم حذف صورة القناة</string>
     <string name="ActionChannelChangedTitle">تم تغيير اسم القناة إلى un2</string>
     <string name="ChannelPublicLimitReached">المعذرة، قمت بإنشاء قنوات عامة كثيرة. يمكنك إنشاء قناة خاصة أو حذف أحد القنوات العامة أولًا.</string>
-    <string name="ChangePublicLimitReached">المعذرة، قمت بإنشاء روابط عامة كثيرة. يمكنك حذف بعض مجموعاتك أو قنواتك العامة أو جعلها خاصة.</string>
     <string name="ChannelModerator">المراقب</string>
     <string name="ChannelCreator">المنشئ</string>
     <string name="ChannelEditor">إداري</string>
@@ -180,8 +150,6 @@
     <string name="ChannelAdminsInfo">يمكنك إضافة إداريّون لمساعدتك في إدارة القناة. اضغط باستمرار لحذف الإداريين.</string>
     <string name="ChannelJoinTo">هل ترغب في الدخول لقناة \'%1$s\'؟</string>
     <string name="ChannelCantOpenPrivate">المعذرة، هذه المحادثة لم تعد متاحة.</string>
-    <string name="ChannelCantOpenBanned">للأسف، تم حظرك عن المشاركة في المجموعات العامة.</string>
-    <string name="ChannelCantOpenNa">المعذرة، هذه المحادثة لم تعد متاحة.</string>
     <string name="ChannelAddTo">هل ترغب بإضافة %1$s للقناة؟</string>
     <string name="ChannelUserLeftError">المعذرة، هذا المستخدم قرر مغادرة القناة, لا يمكنك دعوته مرة أخرى للقناة.</string>
     <string name="ChannelUserCantAdd">المعذرة، لا يمكنك إضافة هذا المستخدم للقنوات.</string>
@@ -189,8 +157,7 @@
     <string name="ChannelUserCantBot">المعذرة، يوجد الكثير من حسابات البوت في هذه القناة.</string>
     <string name="ChannelUserAddLimit">المعذرة، يمكنك إضافة أول ٢٠٠ عضو للقناة فقط. يمكن لعدد غير محدود من الأعضاء الدخول للقناة عن طريق رابط القناة.</string>
     <string name="ChannelAddedBy">un1 قام بإضافتك لهذه القناة</string>
-    <string name="ChannelJoined">لقد قمت بالإشتراك في لقناة.</string>
-    <string name="ChannelMegaJoined">لقد قمت بالدخول لهذه المجموعة</string>
+    <string name="ChannelJoined">لقد قمت بالدخول للقناة.</string>
     <string name="ChannelRemoveUser">حذف من القناة</string>
     <string name="ChannelCantSendMessage">المعذرة، لا يمكنك إرسال رسائل لهذه القناة.</string>
     <string name="ChannelAddedByNotification">%1$s قام بإضافتك لقناة %2$s </string>
@@ -201,29 +168,16 @@
     <string name="ChannelMessageGroupContact">%1$s قام بمشاركة جهة اتصال للقناة %2$s</string>
     <string name="ChannelMessageGroupMap">%1$s  قام بإرسال مكان للقناة %2$s</string>
     <string name="ChannelMessageGroupDocument">%1$s  قام بإرسال ملف للقناة %2$s</string>
-    <string name="ChannelMessageGroupGif">%1$s أرسل صورة متحركة للقناة %2$s</string>
-    <string name="ChannelMessageGroupAudio">%1$s أرسل رسالة صوتية للقناة %2$s</string>
-    <string name="ChannelMessageGroupMusic">%1$s  قام بإرسال مقطع صوتي للقناة %2$s</string>
+    <string name="ChannelMessageGroupAudio">%1$s  قام بإرسال مقطع صوتي للقناة %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s  قام بإرسال ملصق للقناة %2$s</string>
-    <string name="ChannelMessageGroupStickerEmoji">%1$s أرسل %3$s ملصق للقناة %2$s</string>
     <string name="ChannelMessageNoText">%1$s أرسل رسالة</string>
     <string name="ChannelMessagePhoto">%1$s أرسل صورة</string>
     <string name="ChannelMessageVideo">%1$s أرسل مقطع مرئي</string>
     <string name="ChannelMessageContact">%1$s أرسل جهة اتصال</string>
     <string name="ChannelMessageMap">%1$s قام بإرسال موقع</string>
     <string name="ChannelMessageDocument">%1$s أرسل ملف</string>
-    <string name="ChannelMessageGIF">%1$s قام بنشر صورة متحركة</string>
     <string name="ChannelMessageAudio">%1$s أرسل رسالة صوتية</string>
-    <string name="ChannelMessageMusic">%1$s أرسل مقطع صوتي</string>
     <string name="ChannelMessageSticker">%1$s أرسل ملصق</string>
-    <string name="ChannelMessageStickerEmoji">%1$s أرسل %2$s ملصق</string>
-    <string name="WhoCanAddMembers">من يستطيع إضافة أعضاء؟</string>
-    <string name="WhoCanAddMembersAllMembers">جميع الأعضاء</string>
-    <string name="WhoCanAddMembersAdmins">فقط المشرفون</string>
-    <string name="ChannelNotifyMembersInfoOn">سيتم إشعار الأعضاء عند إرسال الرسائل.</string>
-    <string name="ChannelNotifyMembersInfoOff">لن يتم إشعار الأعضاء عند إرسال الرسائل.</string>
-    <string name="ChannelSignMessages">وقّع الرسائل</string>
-    <string name="ChannelSignMessagesInfo">قم بإضافة أسماء المشرفين للرسائل التي يرسلونها.</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">رسالة جماعية جديدة</string>
     <string name="EnterListName">أدخل اسم القائمة</string>
@@ -255,13 +209,11 @@
     <string name="Typing">جاري الكتابة… </string>
     <string name="IsTyping">يكتب… </string>
     <string name="AreTyping">يكتبون… </string>
-    <string name="IsRecordingAudio">%1$s يقوم بتسجيل رسالة صوتية...</string>
-    <string name="IsSendingAudio">%1$s يقوم بإرسال مقطع صوتي...</string>
+    <string name="IsRecordingAudio">%1$s يقوم بإرسال مقطع صوتي...</string>
     <string name="IsSendingPhoto">%1$s يقوم بإرسال صورة...</string>
     <string name="IsSendingVideo">%1$s يقوم بإرسال مقطع مرئي...</string>
     <string name="IsSendingFile">%1$s يقوم بإرسال ملف...</string>
-    <string name="RecordingAudio">جاري تسجيل الرسالة الصوتية...</string>
-    <string name="SendingAudio">جاري إرسال المقطع الصوتي...</string>
+    <string name="RecordingAudio">جاري تسجيل المقطع الصوتي...</string>
     <string name="SendingPhoto">جاري إرسال الصورة...</string>
     <string name="SendingVideoStatus">جاري إرسال المقطع المرئي...</string>
     <string name="SendingFile">جاري إرسال الملف...</string>
@@ -293,8 +245,6 @@
     <string name="DeleteThisChat">حذف هذه الدردشة</string>
     <string name="SlideToCancel">قم بالسحب للإلغاء</string>
     <string name="SaveToDownloads">حفظ في الجهاز</string>
-    <string name="SaveToGIFs">حفظ في الصور المتحركة</string>
-    <string name="DeleteGif">هل ترغب بحذف الصورة المتحركة؟</string>
     <string name="SaveToMusic">احفظ في الموسيقى</string>
     <string name="ShareFile">مشاركة</string>
     <string name="ApplyLocalizationFile">تطبيق ملف التعريب</string>
@@ -302,44 +252,19 @@
     <string name="SetTimer">عداد التدمير الذاتي</string>
     <string name="ServiceNotifications">إشعارات الخدمة</string>
     <string name="GettingLinkInfo">جاري جلب معلومات الرابط...</string>
-    <string name="OpenInBrowser">فتح بواسطة...</string>
+    <string name="OpenInBrowser">فتح في المتصفح</string>
     <string name="CopyUrl">انسخ الرابط</string>
     <string name="SendItems">أرسل %1$s</string>
     <string name="OpenUrlAlert">هل ترغب في فتح الرابط باستخدام %1$s ؟</string>
-    <string name="ReportSpam">الإبلاغ عن الرسائل المزعجة</string>
-    <string name="ReportSpamAndLeave">أبلغ عن الإزعاج وغادر</string>
+    <string name="ReportSpam">الإبلاغ عن الرسائل الغير مرغوب فيها</string>
     <string name="AddContactChat">إضافة جهة اتصال</string>
     <string name="ReportSpamAlert">هل أنت متأكد من رغبتك في الإبلاغ عن هذا المستخدم كغير مرغوب به؟</string>
     <string name="ReportSpamAlertGroup">هل أنت متأكد من رغبتك في الإبلاغ عن هذه المجموعة كغير مرغوب بها؟</string>
-    <string name="ReportSpamAlertChannel">هل أنت متأكد من رغبتك في الإبلاغ عن هذه القناة كغير مرغوب بها؟</string>
     <string name="NobodyLikesSpam1">المعذرة، يمكنك فقط إرسال رسائل لمن يمتلك رقمك وتمتلك رقمه في الوقت الحالي.</string>
     <string name="NobodyLikesSpam2">المعذرة، يمكنك فقط إضافة من يمتلك رقمك وتمتلك رقمه للمجموعة في الوقت الحالي.</string>
     <string name="NobodyLikesSpamUrl">https://telegram.org/faq/can-39t-send-messages-to-non-contacts</string>
     <string name="MoreInfo">ملعومات إضافية</string>
     <string name="ShareSendTo">أرسل إلى...</string>
-    <string name="TapHereGifs">اضغط هنا للوصول للصور المتحركة المحفوظة</string>
-    <string name="PinMessage">تثبيت</string>
-    <string name="PinNotify">أشعر جميع الأعضاء</string>
-    <string name="UnpinMessage">إزالة التثبيت</string>
-    <string name="PinMessageAlert">هل ترغب في تثبيت هذه الرسالة في هذه المجموعة؟</string>
-    <string name="UnpinMessageAlert">هل ترغب في إزالة تثبيت هذه الرسالة؟</string>
-    <string name="DeleteBanUser">حظر المستخدم</string>
-    <string name="DeleteReportSpam">الإبلاغ عن إزعاج</string>
-    <string name="DeleteAllFrom">مسح الكل من %1$s</string>
-    <string name="ClearRecentEmoji">هل ترغب في مسح سجل الإيموجي؟</string>
-    <string name="ReportChat">إبلاغ</string>
-    <string name="ReportChatSpam">مزعج</string>
-    <string name="ReportChatViolence">عنف</string>
-    <string name="ReportChatPornography">إباحية</string>
-    <string name="ReportChatOther">أخرى</string>
-    <string name="ReportChatDescription">الوصف</string>
-    <string name="PinnedMessage">رسالة مثبتة</string>
-    <string name="EditedMessage">معدلة</string>
-    <string name="AttachBotsHelp">انتقل إلى الأسفل للبوتات</string>
-    <string name="TimeToEdit">%1$s</string>
-    <string name="TimeToEditExpired">المعذرة، انتهت مدة التعديل على الرسائل.</string>
-    <string name="AddShortcut">إضافة اختصار</string>
-    <string name="ShortcutAdded">تمت إضافة اختصار للشاشة الرئيسية</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s قام بتعيين عداد التدمير الذاتي إلى to %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">لقد قمت بتعيين التدمير الذاتي إلى %1$s</string>
@@ -353,11 +278,8 @@
     <string name="NotificationMessageContact">%1$s قام بإرسال جهة اتصال لك</string>
     <string name="NotificationMessageMap">%1$s قام بإرسال موقع لك</string>
     <string name="NotificationMessageDocument">%1$s قام بإرسال ملف لك</string>
-    <string name="NotificationMessageGif">%1$s أرسل لك صورة متحركة</string>
-    <string name="NotificationMessageAudio">%1$s قام بإرسال رسالة صوتية</string>
-    <string name="NotificationMessageMusic">%1$s أرسل مقطع صوتي لك</string>
+    <string name="NotificationMessageAudio">%1$s قام بإرسال مقطع صوتي لك</string>
     <string name="NotificationMessageSticker">%1$s قام بإرسال ملصق</string>
-    <string name="NotificationMessageStickerEmoji">%1$s قام بإرسال %2$s ملصق</string>
     <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
     <string name="NotificationMessageGroupNoText">%1$s  قام بإرسال رسالة للمجموعة %2$s</string>
     <string name="NotificationMessageGroupPhoto">%1$s قام بإرسال صورة للمجموعة %2$s</string>
@@ -365,17 +287,13 @@
     <string name="NotificationMessageGroupContact">%1$s قام بإرسال جهة اتصال للمجموعة %2$s</string>
     <string name="NotificationMessageGroupMap">%1$s قام بإرسال موقع للمجموعة %2$s</string>
     <string name="NotificationMessageGroupDocument">%1$s قام بإرسال ملف للمجموعة %2$s</string>
-    <string name="NotificationMessageGroupGif">%1$s أرسل صورة متحركة للمجموعة %2$s</string>
-    <string name="NotificationMessageGroupAudio">%1$s أرسل رسالة صوتية للمجموعة %2$s</string>
-    <string name="NotificationMessageGroupMusic">%1$s أرسل مقطع صوتي للمجموعة %2$s</string>
+    <string name="NotificationMessageGroupAudio">%1$s قام بإرسال مقطع صوتي للمجموعة %2$s</string>
     <string name="NotificationMessageGroupSticker">%1$s قام بإرسال ملصق للمجموعة %2$s</string>
-    <string name="NotificationMessageGroupStickerEmoji">%1$s أرسل %3$s ملصق للمجموعة %2$s</string>
     <string name="NotificationInvitedToGroup">%1$s قام بدعوتك للمجموعة %2$s</string>
     <string name="NotificationEditedGroupName">%1$s قام بتعديل اسم المجموعة %2$s</string>
     <string name="NotificationEditedGroupPhoto">%1$s قام بتغيير صورة المجموعة %2$s</string>
     <string name="NotificationGroupAddMember">%1$s قام بدعوة %3$s للمجموعة %2$s</string>
     <string name="NotificationGroupAddSelf">%1$s عاد إلى المجموعة %2$s</string>
-    <string name="NotificationGroupAddSelfMega">%1$s انضم للمجموعة %2$s</string>
     <string name="NotificationGroupKickMember">%1$s قام بإخراج %3$s من المجموعة %2$s</string>
     <string name="NotificationGroupKickYou">%1$s قام بإخراجك من المجموعة %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s قام بمغادرة المجموعة %2$s</string>
@@ -387,30 +305,6 @@
     <string name="ReplyToGroup">الرد على %1$s</string>
     <string name="ReplyToUser">الرد على %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
-    <string name="NotificationActionPinnedText">%1$s ثبت \"%2$s\" في المجموعة %3$s</string>
-    <string name="NotificationActionPinnedNoText">%1$s ثبت رسالة في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedPhoto">%1$s ثبت صورة في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedVideo">%1$s ثبت فيديو في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedFile">%1$s ثبت ملف في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedSticker">%1$s ثبت ملصق في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedStickerEmoji">%1$s قام بتثبيت %3$s ملصق في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedVoice">%1$s ثبت رسالة صوتية في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedContact">%1$s ثبت جهة اتصال في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedGeo">%1$s ثبت خريطة في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedGif">%1$s ثبت صورة متحركة في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedMusic">%1$s ثبت مقطع صوتي في المجموعة %2$s</string>
-    <string name="NotificationActionPinnedTextChannel">%1$s ثبت \"%2$s\"</string>
-    <string name="NotificationActionPinnedNoTextChannel">%1$s ثبت رسالة</string>
-    <string name="NotificationActionPinnedPhotoChannel">%1$s ثبت صورة</string>
-    <string name="NotificationActionPinnedVideoChannel">%1$s ثبت فيديو</string>
-    <string name="NotificationActionPinnedFileChannel">%1$s ثبت ملف</string>
-    <string name="NotificationActionPinnedStickerChannel">%1$s ثبت ملصق</string>
-    <string name="NotificationActionPinnedStickerEmojiChannel">%1$s قام بتثبيت %2$s ملصق</string>
-    <string name="NotificationActionPinnedVoiceChannel">%1$s ثبت رسالة صوتية</string>
-    <string name="NotificationActionPinnedContactChannel">%1$s ثبت جهة اتصال</string>
-    <string name="NotificationActionPinnedGeoChannel">%1$s ثبت خريطة</string>
-    <string name="NotificationActionPinnedGifChannel">%1$s ثبت صورة متحركة</string>
-    <string name="NotificationActionPinnedMusicChannel">%1$s ثبت مقطع صوتي</string>
     <!--contacts view-->
     <string name="SelectContact">اختر جهة اتصال</string>
     <string name="NoContacts">لا توجد جهات اتصال بعد</string>
@@ -430,7 +324,6 @@
     <string name="NewMessageTitle">رسالة جديدة</string>
     <!--group create view-->
     <string name="SendMessageTo">إرسال الرسالة إلى...</string>
-    <string name="SoftUserLimitAlert">ستتمكن من إضافة أعضاء أكثر إذا انتهيت من إنشاء المجموعة وقمت بتحويلها إلى مجموعة خارقة.</string>
     <string name="EnterGroupNamePlaceholder">أدخل اسم للمجموعة</string>
     <string name="GroupName">اسم المجموعة</string>
     <string name="MembersCount">%1$d/%2$d عضو</string>
@@ -460,14 +353,9 @@
     <string name="DeleteAndExit">مغادرة المجموعة وحذفها</string>
     <string name="Notifications">الإشعارات</string>
     <string name="KickFromGroup">إخراج من المجموعة</string>
-    <string name="UpgradeGroup">قم بالتحديث لمجموعة خارقة</string>
-    <string name="ConvertGroup">التحويل إلى مجموعة خارقة</string>
-    <string name="ConvertGroupMenu">التحويل إلى مجموعة خارقة</string>
-    <string name="ConvertGroupAlertWarning">تحذير</string>
-    <string name="ConvertGroupAlert">هذا القرار لا يمكن الرجوع عنه. لن تتمكن من إرجاع المجموعات الخارقة لتصبح مجموعات عادية.</string>
-    <string name="ConvertGroupInfo"><![CDATA[<b>]]>تم الوصول للحد القصى.<![CDATA[</b>]]>\n\nلتتمكن من تخطي هذا الحد والحصول على مميزات إضافية، يمكنك الترقية لمجموعة خارقة:\n\n• المجموعات الخارقة يمكن أن تصل إلى %1$s عضو\n• الأعضاء الجدد يمكنهم رؤية سجل المحادثات بالكامل \n• الرسائل المحذوفة ستختفي عن كل الأعضاء\n• يستطيع الأعضاء التعديل على رسائلهم\n• يمكن لمنشئ المجموعة إنشاء رابط دعوة لها</string>
-    <string name="ConvertGroupInfo2"><![CDATA[<b>]]>في المجموعات الخارقة:<![CDATA[</b>]]>\n\n• الأعضاء الجدد يمكنهم رؤية سجل المحادثات بالكامل \n• الرسائل المحذوفة ستختفي عن كل الأعضاء\n• يستطيع الأعضاء التعديل على رسائلهم\n• يمكن لمنشئ المجموعة إنشاء رابط دعوة لها</string>
-    <string name="ConvertGroupInfo3"><![CDATA[<b>]]>ملاحظة:<![CDATA[</b>]]> لا يمكنك الرجوع عن هذا القرار.</string>
+    <string name="ConvertGroup">قم بالتحديث لمجموعة خارقة</string>
+    <string name="ConvertGroupAlert">فضلًا تذكر أن أعضاء هذه المجموعة يلزمهم تحديث تطبيقات تيليجرام لأحدث النسخ ليتمكنوا من الإستفادة من المجموعات الخارقة. هل أنت متأكد من رغبتك في ترقية المجموعة؟</string>
+    <string name="ConvertGroupInfo"><![CDATA[<b>]]>تم الوصول للحد الأعلى للأعضاء<![CDATA[</b>]]>\n\nيمكنك ترقية مجموعتك لتصبح مجموعة خارقة لتتمكن من إضافة أعضاء أكثر من الحد الأعلى وخصائص مثل:\n\n• الحد الأعلى للأعضاء يصبح %1$s عضو\n• الأعضاء الجدد يرون تاريخ محادثات المجموعة بشكل كامل\n• المشرفون يمكنهم حذف رسائل كافة الأعضاء\n• الإشعارات على وضع الصامت بشكل تلقائي</string>
     <!--contact info view-->
     <string name="ShareContact">مشاركة</string>
     <string name="AddContact">إضافة</string>
@@ -485,8 +373,7 @@
     <string name="EncryptionKey">مفتاح التشفير</string>
     <string name="MessageLifetime">عداد التدمير الذاتي</string>
     <string name="ShortMessageLifetimeForever">إيقاف</string>
-    <string name="EncryptionKeyDescription">هذه الصورة والنص تم اشتقاقهم من مفتاح التشفير لهذه المحادثة السرية مع <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>إذا كانت مطابقة لما يظهر على جهاز <![CDATA[<b>]]>%2$s<![CDATA[</b>]]> ، التشفير من البداية للنهاية مضمون.<![CDATA[<br><br>]]>للإستزادة، إطلع على telegram.org </string>
-    <string name="EncryptionKeyLink">https://telegram.org/faq#secret-chats</string>
+    <string name="EncryptionKeyDescription">هذه الصورة هي تصور لمفتاح التشفير لهذه المحادثة السرية مع <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>إذا كانت مطابقة للصورة التي في جهاز <![CDATA[<b>]]>%2$s<![CDATA[</b>]]>, فمحادثتكم آمنة ٢٠٠٪.<![CDATA[<br><br>]]>للمزيد نرجو الذهاب إلى telegram.org</string>
     <string name="NumberUnknown">غير معروف</string>
     <string name="Info">معلومات</string>
     <string name="Phone">هاتف</string>
@@ -517,8 +404,6 @@
     <string name="StickersCopy">نسخ الرابط</string>
     <string name="StickersRemove">حذف</string>
     <string name="NoStickers">لا يوجد ملصقات بعد</string>
-    <string name="SendSticker">أرسل ملصق</string>
-    <string name="TooMuchStickersets">المعذرة، لقد وصلت الحد الأعلى لحزم الملصقات.</string>
     <!--settings view-->
     <string name="ResetNotificationsText">تم تعيين كافة الإشعارات افتراضيا</string>
     <string name="TextSize">حجم نص الرسائل</string>
@@ -553,22 +438,17 @@
     <string name="TerminateAllSessions">سجل الخروج من كافة الأجهزة الأخرى</string>
     <string name="Events">الأحداث</string>
     <string name="ContactJoined">اشترك صديق في تيليجرام</string>
-    <string name="PinnedMessages">رسائل مثبتة</string>
     <string name="Language">اللغة</string>
     <string name="AskAQuestionInfo">نرجو الأخذ بالعلم أن الدعم الفني في تيليجرام يقوم به مجموعة من المتطوعين. نحن نحاول الرد بسرعة قدر المستطاع، لكن ربما نستغرق القليل من الوقت.<![CDATA[<br><br>]]> <![CDATA[<a href=\"https://telegram.org/faq/ar\">صفحة الأسئلة الأكثر شيوعًا</a>]]>: يوجد بها حلول للمشاكل وإجابات لمعظم الأسئلة.</string>
     <string name="AskButton">اسأل أحد المتطوعين</string>
     <string name="TelegramFaq">الأسئلة الشائعة عن تيليجرام</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq/ar</string>
-    <string name="PrivacyPolicy">سياسة الخصوصية</string>
-    <string name="PrivacyPolicyUrl">https://telegram.org/privacy</string>
     <string name="DeleteLocalization">حذف التعريب؟</string>
     <string name="IncorrectLocalization">ملف التعريب غير صحيح</string>
     <string name="Enabled">تمكين</string>
     <string name="Disabled">تعطيل</string>
-    <string name="NotificationsService">خدمة التشغيل المستمر</string>
-    <string name="NotificationsServiceInfo">إعادة تشغيل التطبيق في حال تم إقفاله من المستخدم أو النظام. هذا سيساعد في إظهار التطبيق للإشعارات.</string>
-    <string name="NotificationsServiceConnection">الاتصال في الخلفية</string>
-    <string name="NotificationsServiceConnectionInfo">استخدام اتصال طفيف في الخلفية للتأكد من وصول إشعارات تيليجرام. قم بالتفعيل لإشعارات أقوى.</string>
+    <string name="NotificationsService">خدمة الإشعارات</string>
+    <string name="NotificationsServiceDisableInfo">إذا كانت خدمات Google play كافية بالنسبة لك لتلقي الإشعارات ، يمكنك تعطيل \" خدمة الإشعارات \" . ومع ذلك نحن نوصي بترك هذه الخدمة مفعلة للحفاظ على تشغيل التطبيق في الخلفية ، ولتلقي إشعارات الدردشة .</string>
     <string name="SortBy">فرز حسب</string>
     <string name="ImportContacts">استيراد جهات الاتصال</string>
     <string name="SortFirstName">الاسم الأول</string>
@@ -589,8 +469,6 @@
     <string name="WhenConnectedOnWiFi">عند الاتصال بالشبكة اللاسلكية</string>
     <string name="WhenRoaming">عند تواجدك خارج البلاد</string>
     <string name="NoMediaAutoDownload">لا يوجد وسائط</string>
-    <string name="AutoplayGifs">تشغيل تلقائي للصور المتحركة</string>
-    <string name="RaiseToSpeak">ارفع الجهاز للتحدث</string>
     <string name="SaveToGallerySettings">حفظ في الجهاز</string>
     <string name="EditName">تعديل الاسم</string>
     <string name="NotificationsPriority">الأولوية</string>
@@ -621,12 +499,6 @@
     <string name="SmartNotificationsTimes">الأوقات</string>
     <string name="SmartNotificationsWithin">خلال</string>
     <string name="SmartNotificationsMinutes">دقائق</string>
-    <string name="SecretWebPage">معاينة الرابط</string>
-    <string name="SecretChat">المحادثات السرية</string>
-    <string name="ChromeCustomTabs">علامات تبويب كروم المخصصة</string>
-    <string name="ChromeCustomTabsInfo">فتح الروابط الخارجية داخل التطبيق</string>
-    <string name="DirectShare">مشاركة مباشرة</string>
-    <string name="DirectShareInfo">اظهار المحادثات الأخيرة في قائمة المشاركة</string>
     <!--cache view-->
     <string name="CacheSettings">إعدادات الذاكرة المخبئية</string>
     <string name="LocalDatabase">قاعدة البيانات على الجهاز</string>
@@ -678,18 +550,14 @@
     <string name="FingerprintHelp">حساس اللمس</string>
     <string name="FingerprintNotRecognized">لم يتم التعرف على البصمة. حاول مرة أخرى</string>
     <!--media view-->
+    <string name="NoMedia">شارك المقاطع المرئية والصور في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <string name="DocumentsTitle">الملفات المشاركة</string>
     <string name="SharedMediaTitle">الوسائط المشتركة</string>
     <string name="LinksTitle">الروابط المشاركة</string>
     <string name="AudioTitle">الموسيقى المشتركة</string>
-    <string name="NoMedia">شارك المقاطع المرئية والصور في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <string name="NoSharedAudio">قم بإرسال مقاطع موسيقية لهذه المحادثة ليمكنك الوصول إليها من أجهزتك الأخرى.</string>
     <string name="NoSharedFiles">شارك الملفات والمستندات في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <string name="NoSharedLinks">شارك الروابط في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
-    <string name="NoMediaSecret">الصور والفيديو من هذه المحادثة سيتم عرضها هنا.</string>
-    <string name="NoSharedAudioSecret">المقاطع الصوتية من هذه المحادثة سيتم عرضها هنا.</string>
-    <string name="NoSharedFilesSecret">الملفات والمستندات من هذه المحادثة سيتم عرضها هنا.</string>
-    <string name="NoSharedLinksSecret">الروابط المشاركة من هذه المحادثة سيتم عرضها هنا.</string>
     <!--map view-->
     <string name="Map">الخريطة</string>
     <string name="Satellite">قمر صناعي</string>
@@ -730,15 +598,6 @@
     <string name="Shadows">الظل</string>
     <string name="Grain">الحبوب</string>
     <string name="Sharpen">زيادة الحدة</string>
-    <string name="Fade">تلاشي</string>
-    <string name="Tint">تظليل</string>
-    <string name="TintShadows">الظلال</string>
-    <string name="TintHighlights">الإضاءات</string>
-    <string name="Curves">المنحنيات</string>
-    <string name="CurvesAll">الكل</string>
-    <string name="CurvesRed">أحمر</string>
-    <string name="CurvesGreen">أخضر</string>
-    <string name="CurvesBlue">أزرق</string>
     <string name="Blur">الطمس</string>
     <string name="BlurOff">إيقاف</string>
     <string name="BlurLinear">طولي</string>
@@ -753,7 +612,6 @@
     <string name="AddCaption">أضف تعليق...</string>
     <string name="PhotoCaption">تعليق الصورة</string>
     <string name="VideoCaption">تعليق المقطع المرئي</string>
-    <string name="Caption">تعليق</string>
     <!--password view-->
     <string name="TwoStepVerification">التحقق بخطوتين</string>
     <string name="SetAdditionalPassword">تعيين كلمة مرور إضافية</string>
@@ -794,7 +652,7 @@
     <string name="ResetMyAccount">إعادة تعيين حسابي</string>
     <string name="ResetMyAccountText">إذا قمت بإعادة تعيين حسابك، ستفقد كافّة محادثاتك ورسائلك، بالإضافة إلى الوسائط والملفات التي تمت مشاركتها.</string>
     <string name="ResetMyAccountWarning">تحذير</string>
-    <string name="ResetMyAccountWarningText">لا يمكنك الرجوع عن هذا القرار\n\nإذا قمت بإعادة تعيين حسابك، كافة رسائلك ومحادثاتك سيتم حذفها.</string>
+    <string name="ResetMyAccountWarningText">لا يمكن الرجوع عن هذا الخيار.\n\nإذا قمت بإعادة تعيين حسابك، كافة رسائلك ومحادثاتك سيتم حذفها.</string>
     <string name="ResetMyAccountWarningReset">إعادة تعيين</string>
     <string name="LoginPassword">كلمة المرور</string>
     <string name="LoginPasswordText">تم تفعيل التحقق بخطوتين، لذلك حسابك محميّ بكلمة مرور إضافية.</string>
@@ -836,18 +694,6 @@
     <string name="PrivacyFloodControlError">المعذرة، يوجد الكثير من الطلبات حاليًا. لا نستطيع تغيير إعدادات الخصوصية الآن، يرجى الإنتظار.</string>
     <string name="ClearOtherSessionsHelp">قم بتسجيل الخروج من جميع الأجهزة الأخرى باستثناء هذا الجهاز</string>
     <string name="RemoveFromListText">إضغط بإستمرار على المستخدم لحذفه</string>
-    <string name="GroupsAndChannels">المجموعات</string>
-    <string name="WhoCanAddMe">من يستطيع إضافتي للمجموعات؟</string>
-    <string name="WhoCanAddMeInfo">بإمكانك تحديد من يستطيع إضافتك للمجموعات والقنوات كيفما تشاء.</string>
-    <string name="AlwaysAllow">دائمًا اسمح</string>
-    <string name="NeverAllow">لا تسمح أبدًا</string>
-    <string name="AlwaysAllowPlaceholder">دائمًا اسمح...</string>
-    <string name="NeverAllowPlaceholder">لا تسمح أبدًا...</string>
-    <string name="CustomShareInfo">هؤلاء المستخدمين يمكنهم أو لا يمكنهم إضافتك للمجموعات والقنوات بغض النظر عن الأعدادات أعلاه.</string>
-    <string name="GroupsAndChannelsHelp">غيّر من يستطيع إضافتك للمجموعات والقنوات.</string>
-    <string name="InviteToGroupError">المعذرة، لا يمكنك إضافة هذا المستخدم للمجموعات بسبب إعدادات الخصوصية المتعلقة به.</string>
-    <string name="InviteToChannelError">المعذرة، لا يمكنك إضافة هذا المستخدم للقنوات بسبب إعدادات الخصوصية المتعلقة به.</string>
-    <string name="CreateGroupError">المعذرة، لا يمكنك إنشاء مجموعة مع هؤلاء المستخدمين نظرًا لإعدادات الخصوصية المتعلقة بهم.</string>
     <!--edit video view-->
     <string name="EditVideo">تحرير الفيديو</string>
     <string name="OriginalVideo">الفيديو الأصلي</string>
@@ -872,7 +718,6 @@
     <string name="Back">رجوع</string>
     <string name="Done">تم</string>
     <string name="Open">فتح</string>
-    <string name="Save">حفظ</string>
     <string name="Cancel">إلغاء</string>
     <string name="Close">إغلاق</string>
     <string name="Add">إضافة</string>
@@ -894,14 +739,14 @@
     <string name="ActionInviteYou">لقد قمت بالدخول للمجموعة باستخدام رابط الدعوة</string>
     <string name="ActionInviteUser">un1 قام بالدخول للمجموعة باستخدام رابط الدعوة</string>
     <string name="ActionKickUser">un1 أزال un2</string>
-    <string name="ActionLeftUser">un1 غادر المجموعة</string>
+    <string name="ActionLeftUser">غادر المجموعة العضو un1</string>
     <string name="ActionAddUser">un1 قام بإضافة un2</string>
     <string name="ActionRemovedPhoto">تمت إزالة صورة المجموعة من قِبَل un1</string>
     <string name="ActionChangedPhoto">تم تغيير صورة المجموعة من قِبَل un1</string>
     <string name="ActionChangedTitle">un1 قام بتغيير اسم المجموعة إلى un2</string>
     <string name="ActionCreateGroup">تم إنشاء مجموعة جديدة من قِبَل un1</string>
     <string name="ActionYouKickUser">لقد قمت بإخراج un2</string>
-    <string name="ActionYouLeftUser">أنت غادرت المجموعة</string>
+    <string name="ActionYouLeftUser">لقد قمت بمغادرة المجموعة</string>
     <string name="ActionYouAddUser">لقد قمت بإضافة un2</string>
     <string name="ActionYouRemovedPhoto">لقد قمت بإزالة صورة المجموعة</string>
     <string name="ActionYouChangedPhoto">لقد قمت بتغيير صورة المجموعة</string>
@@ -910,17 +755,15 @@
     <string name="ActionKickUserYou">un1 قام بإخراجك</string>
     <string name="ActionAddUserYou">un1 قام بإضافتك</string>
     <string name="ActionAddUserSelf">un1 عاد إلى المجموعة</string>
-    <string name="ActionAddUserSelfMega">un1 انضم للمجموعة</string>
     <string name="ActionAddUserSelfYou">لقد عدت إلى المجموعة</string>
-    <string name="UnsupportedMedia">نسخة تيليجرام الموجودة لديك لا تدعم هذه الرسالة. الرجاء التحديث لأحدث نسخة: https://telegram.org/update</string>
+    <string name="UnsuppotedMedia">نسخة تيليجرام الموجودة لديك لا تدعم هذه الرسالة. الرجاء التحديث لأحدث نسخة لاستعراضها: https://telegram.org/update</string>
     <string name="AttachPhoto">صورة</string>
     <string name="AttachVideo">مقطع مرئي</string>
-    <string name="AttachGif">صورة متحركة</string>
     <string name="AttachLocation">موقع</string>
     <string name="AttachContact">جهة اتصال</string>
     <string name="AttachDocument">ملف</string>
     <string name="AttachSticker">ملصق</string>
-    <string name="AttachAudio">رسالة صوتية</string>
+    <string name="AttachAudio">مقطع صوتي</string>
     <string name="FromYou">أنت</string>
     <string name="ActionTakeScreenshootYou">أنت أخذت لقطة للشاشة !</string>
     <string name="ActionTakeScreenshoot">un1 أخذ لقطة للشاشة !</string>
@@ -949,15 +792,7 @@
     <string name="AreYouSureSessions">هل أنت متأكد من تسجيل الخروج من جميع الأجهزة الأخرى باستثناء هذا الجهاز؟</string>
     <string name="AreYouSureDeleteAndExit">هل أنت متأكد من أنك تريد حذف المجموعة والخروج منها؟</string>
     <string name="AreYouSureDeleteThisChat">هل أنت متأكد من رغبتك في حذف المحادثة؟</string>
-    <string name="ShareYouLocationTitle">هل ترغب في مشاركة موقعك؟</string>
-    <string name="ShareYouLocationInfo">هذا الخيار سيرسل موقعك الحالي للبوت.</string>
-    <string name="ShareYouLocationUnable">لا يستطيع التطبيق تحديد موقعك الحالي</string>
-    <string name="ShareYouLocationUnableManually">اختر بشكل يدوي</string>
-    <string name="ShareYouLocationInline">هذا البوت يرغب في معرفة موقعك في كل مرة ترسل له طلب. هذا يمكن الاستفادة منه لإعطائك نتائج مناسبة لموقعك.</string>
-    <string name="ShareYouPhoneNumberTitle">هل ترغب في مشاركة رقم هاتفك؟</string>
-    <string name="AreYouSureShareMyContactInfoBot">البوت سيعلم رقم هاتفك. سيكون هذا مفيد لتفعيله في خدمات أخرى.</string>
-    <string name="AreYouSureShareMyContactInfoUser">هل أنت متأكد من رغبتك في مشاركة رقم هاتفك %1$s مع <![CDATA[<b>]]>%2$s<![CDATA[</b>]]>؟</string>
-    <string name="AreYouSureShareMyContactInfo">هل أنت متأكد من رغبتك في مشاركة رقم هاتفك؟</string>
+    <string name="AreYouSureShareMyContactInfo">هل أنت متأكد من أنك تريد مشاركة معلومات جهة الاتصال الخاصة بك؟</string>
     <string name="AreYouSureBlockContact">هل أنت متأكد من رغبتك في حظر جهة الاتصال هذه؟</string>
     <string name="AreYouSureUnblockContact">هل أنت متأكد من رغبتك في إزالة الحظر عن جهة الاتصال هذه؟</string>
     <string name="AreYouSureDeleteContact">هل أنت متأكد من رغبتك في حذف جهة الاتصال هذه؟</string>
@@ -965,7 +800,7 @@
     <string name="AreYouSureRegistration">هل أنت متأكد من رغبتك في إلغاء التسجيل؟</string>
     <string name="AreYouSureClearHistory">هل أنت متأكد من رغبتك في حذف سجل المحادثات؟</string>
     <string name="AreYouSureClearHistoryChannel">حذف كافة المحادثات والوسائط المتعلقة بهذه القناة من الذاكرة المخبئية؟</string>
-    <string name="AreYouSureClearHistorySuper">حذف كافة المحادثات والوسائط المتعلقة بهذه المجموعة من الذاكرة المخبئية؟</string>
+    <string name="AreYouSureClearHistorySuper">حذف كافة المحادثات والوسائط المتعلقة بهذه المجموعة الخارقة من الذاكرة المخبئية؟</string>
     <string name="AreYouSureDeleteMessages">هل أنت متأكد من رغبتك في حذف %1$s؟</string>
     <string name="SendMessagesToGroup">هل ترغب في إرسال رسالة إلى %1$s؟</string>
     <string name="SendContactToGroup">أرسل جهة الاتصال إلى %1$s؟</string>
@@ -973,23 +808,14 @@
     <string name="FeatureUnavailable">.Sorry, this feature is currently not available in your country</string>
     <string name="NoUsernameFound">لا يوجد حساب تيليجرام بهذا الاسم.</string>
     <string name="BotCantJoinGroups">هذا البوت لا يستطيع الدخول للمجموعات.</string>
-    <string name="SecretLinkPreviewAlert">هل ترغب في تفعيل معاينة الروابط المطولة في المحادثات السرية؟ تذكر أن هذه المعاينات يتم إنشاؤها في خوادم تيليجرام.</string>
-    <string name="SecretChatContextBotAlert">يرجى ملاحظة أن البوتات أثناء الكتابة يتم تطويرها من مطورين مستقلين. لكي تعمل هذه البوتات، ما تكتبه بعد معرف البوت يذهب لمطور البوت.</string>
-    <string name="RaiseToSpeakAlert">هل ترغب في تفعيل خاصية رفع الجهاز لإرسال الرسائل الصوتية؟</string>
-    <string name="EditMessageError">المعذرة، لا يمكنك التعديل على هذه الرسالة.</string>
-    <string name="AllowReadSms">فصلًا قم بالسماح لتيليجرام باستقبال رسائل قصيرة ليتمكن من إدخال الرمز لك تلقائيًا.</string>
-    <string name="AllowReadCall">فصلًا قم بالسماح لتيليجرام باستقبال اتصالات ليتمكن من إدخال الرمز لك تلقائيًا.</string>
-    <string name="AllowReadCallAndSms">فصلًا قم بالسماح لتيليجرام باستقبال اتصالات ورسائل قصيرة ليتمكن من إدخال الرمز لك تلقائيًا.</string>
-    <string name="UserRestricted">المعذرة، لا يمكنك القيام بذلك.</string>
     <!--permissions-->
     <string name="PermissionContacts">تيليجرام يحتاج للسماح له بالوصول لجهات الاتصال الخاصة بك لتتمكن من محادثة أصدقائك من كافة أجهزتك.</string>
     <string name="PermissionStorage">تيليجرام يحتاج للسماح له بالوصول للذاكرة الخاصة بك لتتمكن من إرسال وحفظ الصور، المقاطع المرئية، الموسيقى وغيرها من الوسائط.</string>
     <string name="PermissionNoAudio">تيليجرام يحتاج للسماح له بالوصول للمايكروفون الخاص بك لتتمكن من إرسال رسائل صوتية.</string>
     <string name="PermissionNoLocation">تيليجرام يحتاج للسماح له بالوصول لمكانك لتتمكن من مشاركته مع أصدقائك من خلاله.</string>
-    <string name="PermissionNoLocationPosition">تيليجرام يحتاج صلاحية الحصول على موقعك.</string>
     <string name="PermissionOpenSettings">الإعدادات</string>
     <!--Intro view-->
-    <string name="Page1Title">تيليجرام</string>
+    <string name="Page1Title">IM ل برقية</string>
     <string name="Page2Title">سريع</string>
     <string name="Page3Title">مجاني</string>
     <string name="Page4Title">آمن</string>
@@ -1035,6 +861,12 @@
     <string name="messages_few">%1$d رسائل</string>
     <string name="messages_many">%1$d رسالة</string>
     <string name="messages_other">%1$d رسالة</string>
+    <string name="comments_zero">%1$d تعليقات</string>
+    <string name="comments_one">%1$d تعليق</string>
+    <string name="comments_two">%1$d تعليقان</string>
+    <string name="comments_few">%1$d تعليقات</string>
+    <string name="comments_many">%1$d تعليق</string>
+    <string name="comments_other">%1$d تعليق</string>
     <string name="items_zero">لا يوجد ملفات</string>
     <string name="items_one">%1$d ملف</string>
     <string name="items_two">%1$d ملف</string>
@@ -1156,18 +988,12 @@
     <string name="ForwardedVideo_few">%1$d مقطع مرئي معاد توجيهه</string>
     <string name="ForwardedVideo_many">%1$d مقطع مرئي معاد توجيهه</string>
     <string name="ForwardedVideo_other">%1$d مقطع مرئي معاد توجيهه</string>
-    <string name="ForwardedMusic_zero">%1$d مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedMusic_one">مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedMusic_two">%1$d مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedMusic_few">%1$d مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedMusic_many">%1$d مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedMusic_other">%1$d مقاطع صوتية معاد إرسالها</string>
-    <string name="ForwardedAudio_zero">%1$d رسالة صوتية معاد توجيهها</string>
-    <string name="ForwardedAudio_one">رسالة صوتية معاد توجيهها</string>
-    <string name="ForwardedAudio_two">%1$d رسالة صوتية معاد توجيهها</string>
-    <string name="ForwardedAudio_few">%1$d رسالة صوتية معاد توجيهها</string>
-    <string name="ForwardedAudio_many">%1$d رسالة صوتية معاد توجيهها</string>
-    <string name="ForwardedAudio_other">%1$d رسالة صوتية معاد توجيهها</string>
+    <string name="ForwardedAudio_zero">%1$d مقطع صوتي معاد توجيهه</string>
+    <string name="ForwardedAudio_one">مقطع صوتي معاد توجيهه</string>
+    <string name="ForwardedAudio_two">%1$d مقطع صوتي معاد توجيهه</string>
+    <string name="ForwardedAudio_few">%1$d مقطع صوتي معاد توجيهه</string>
+    <string name="ForwardedAudio_many">%1$d مقطع صوتي معاد توجيهه</string>
+    <string name="ForwardedAudio_other">%1$d مقطع صوتي معاد توجيهه</string>
     <string name="ForwardedLocation_zero">%1$d موقع معاد توجيهه</string>
     <string name="ForwardedLocation_one">موقع معاد توجيهه</string>
     <string name="ForwardedLocation_two">%1$d موقع معاد توجيهه</string>
@@ -1203,4 +1029,48 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s الساعة %2$s</string>
-</resources>
+    <!--update text-->
+    <string name="updateText">تيليجرام نسخة الأندرويد تم تحديثه. الجديد في نسخة ٣.٢.٢:\n\n- إدارة للذاكرة المخبئية: إمكانية التحكم بالذاكرة المخبئية، حذف محتوى لمحادثة معينة.\n- حذف الذاكرة المخبئية من المجموعات الخارقة والقنوات: الضغط والتعليق عليها ثم تحذفها من الذاكرة.n\- إدارة الملصقات: إعادة ترتيب ملصقاتك بشكل يدوي. ويتزامن الترتيب مع باقي أجهزتك.n\n\للإستزادة عن هذا التحديث من هنا:n\
+        https://telegram.org/blog/cache-and-stickers</string>
+    <string name="updateBuild">693</string>
+    <string name="ContactUs">اتصل بنا</string>
+    <string name="gender">جنس</string>
+    <string name="age">عمر</string>
+    <string name="lets_start">هيّا بنا لنلعب</string>
+    <string name="male">ذكر</string>
+    <string name="female">Female</string>
+    <string name="pleaseselectagegroup">الرجاء تحديد الفئة العمرية</string>
+    <string name="dob">تاريخ الولادة</string>
+    <string name="preferences_contant">يتيح لك توصيل للشعب الذي يريد دائما أن صداقة مع !
+ببساطة أدخل اختيارك أدناه ، والمسح الضوئي من خلال ملامح واسعة اند إرسال طلبات صديق ل تلك التي تريدها على الفور!
+</string>
+    <string name="InviteTextsocial">مهلا، لقد وجدت هذا التطبيق متعة مليئة &amp; أمبير ؛ مثيرة ، للاختلاط مع بلدي كيندا - الناس! إعطاء محاولة ، أنت أيضا !: https://telegram.org/dl</string>
+    <string name="InviteFriends1">ادعو أصدقاء</string>
+    <string name="wink">لعب</string>
+    <string name="pleaseselectvaliddate">يرجى تحديد تاريخ صالح</string>
+    <string name="yourpreferences">التفضيلات</string>
+    <string name="pleaseselectcountry">يرجى اختيار الدولة</string>
+    <string name="mutualfrinds">الأصدقاء المتبادل</string>
+
+
+    ////////////////////////biiling strings////////////////////////////
+
+    <string name="buy_premium_content">تريد اقامة علاقات صداقة مع أكثر \ ن الناس للاهتمام ؟
+
+    \n الوقت ل تبديل إلى النسخة المدفوعة !
+    </string>
+
+    <string name="buy">اشتري الآن</string>
+    <string name="myprofile">ملفي الشخصي</string>
+    <string name="preferences">تفضيلات الاجتماعية</string>
+    <string name="premium_features">الحصول على الميزات الممتازة
+</string>
+    <string name="social_friend">الاجتماعية الأصدقاء</string>
+    <string name="looking_for_someone">"أبحث عن شخص ما"</string>
+    <string name="age_group">الفئة العمرية:</string>
+
+    <string name="banner_home_footer">ca-app-pub-2963488631481072/3850621745<!--ca-app-pub-2963488631481072/3850621745--></string> <!--ca-app-pub-3120536913205473/5975042732-->
+
+
+
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 49e8f6aad..27b554fbd 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -3,9 +3,11 @@
 
 
 <resources>
-    <string name="AppName">Telegram</string>
-    <string name="AppNameBeta">Telegram Beta</string>
     <string name="LanguageName">English</string>
+
+    <string name="AppName">Social IM for Telegram</string>
+    <string name="AppNameBeta">Social IM for Telegram</string>
+
     <string name="LanguageNameInEnglish">English</string>
     <string name="LanguageCode">en</string>
     <!--signin view-->
@@ -16,8 +18,8 @@
     <!--code enter view-->
     <string name="YourCode">Phone verification</string>
     <string name="SentSmsCode">We\'ve sent an SMS with an activation code to your phone <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.</string>
-    <string name="SentAppCode">We\'ve sent the code to the <![CDATA[<b>]]>Telegram<![CDATA[</b>]]> app on your other device.</string>
-    <string name="SentCallCode">We\'ve sent an activation call to your phone <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.\n\nDon\'t take it, Telegram will process everything automatically.</string>
+    <string name="SentAppCode">We\'ve sent the code to the <![CDATA[<b>]]>Social IM for Telegram<![CDATA[</b>]]> app on your other device.</string>
+    <string name="SentCallCode">We\'ve sent an activation call to your phone <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.\n\nDon\'t take it, Social IM for Telegram will process everything automatically.</string>
     <string name="SentCallOnly">We are calling your phone <![CDATA[<b>]]>%1$s<![CDATA[</b>]]> to dictate a code.</string>
     <string name="CallText">We will call you in %1$d:%2$02d</string>
     <string name="SmsText">We will send you an SMS in %1$d:%2$02d</string>
@@ -56,7 +58,7 @@
     <string name="HiddenName">Deleted Account</string>
     <string name="SelectChat">Select Chat</string>
     <string name="PhotoTip">Tap and hold to view</string>
-    <string name="CompatibilityChat">%1$s is using an older version of Telegram, so secret photos will be shown in compatibility mode.\n\nOnce %2$s updates Telegram, photos with timers for 1 minute or less will start working in \'Tap and hold to view\' mode, and you will be notified whenever the other party takes a screenshot.</string>
+    <string name="CompatibilityChat">%1$s is using an older version of Social IM for Telegram, so secret photos will be shown in compatibility mode.\n\nOnce %2$s updates Social IM for Telegram, photos with timers for 1 minute or less will start working in \'Tap and hold to view\' mode, and you will be notified whenever the other party takes a screenshot.</string>
     <string name="SearchMessages">MESSAGES</string>
     <string name="Search">Search</string>
     <string name="MuteNotifications">Mute notifications</string>
@@ -110,8 +112,8 @@
     <string name="NewChannel">New Channel</string>
     <string name="EnterChannelName">Channel name</string>
     <string name="AddMutual">Add contacts to your channel</string>
-    <string name="ChannelUsernameHelp">People can share this link with others and find your channel using Telegram search.</string>
-    <string name="MegaUsernameHelp">People can share this link with others and find your group using Telegram search.</string>
+    <string name="ChannelUsernameHelp">People can share this link with others and find your channel using Social IM for Telegram search.</string>
+    <string name="MegaUsernameHelp">People can share this link with others and find your group using Social IM for Telegram search.</string>
     <string name="ChannelUsernamePlaceholder">link</string>
     <string name="ChannelPrivateLinkHelp">People can join your channel by following this link. You can revoke the link any time.</string>
     <string name="MegaPrivateLinkHelp">People can join your group by following this link. You can revoke the link any time.</string>
@@ -176,7 +178,7 @@
     <string name="ChannelRemoveUserAdmin">Remove</string>
     <string name="ChannelMembersInfo">Only channel administrators can see this list.</string>
     <string name="ChannelAdminNotParticipant">This user hasn\'t joined the channel yet. Do you want to invite them?</string>
-    <string name="ChannelLinkInfo">Anyone who has Telegram installed will be able to join your channel by following this link.</string>
+    <string name="ChannelLinkInfo">Anyone who has Social IM for Telegram installed will be able to join your channel by following this link.</string>
     <string name="ChannelAdminsInfo">You can add administrators to help you manage your channel. Tap and hold to remove admins.</string>
     <string name="ChannelJoinTo">Do you want to join the channel \'%1$s\'?</string>
     <string name="ChannelCantOpenPrivate">Sorry, this chat is no longer accessible.</string>
@@ -265,7 +267,7 @@
     <string name="SendingPhoto">sending photo...</string>
     <string name="SendingVideoStatus">sending video...</string>
     <string name="SendingFile">sending file...</string>
-    <string name="GotAQuestion">Got a question\nabout Telegram?</string>
+    <string name="GotAQuestion">Got a question\nabout Social IM for Telegram?</string>
     <string name="ChatTakePhoto">Take photo</string>
     <string name="ChatGallery">Gallery</string>
     <string name="ChatLocation">Location</string>
@@ -379,8 +381,8 @@
     <string name="NotificationGroupKickMember">%1$s removed %3$s from the group %2$s</string>
     <string name="NotificationGroupKickYou">%1$s removed you from the group %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s has left the group %2$s</string>
-    <string name="NotificationContactJoined">%1$s joined Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nWe detected a login into your account from a new device on %2$s\n\nDevice: %3$s\nLocation: %4$s\n\nIf this wasn\'t you, you can go to Settings - Privacy and Security - Sessions and terminate that session.\n\nIf you think that somebody logged in to your account against your will, you can enable two-step verification in Privacy and Security settings.\n\nSincerely,\nThe Telegram Team</string>
+    <string name="NotificationContactJoined">%1$s joined Social IM for Telegram!</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nWe detected a login into your account from a new device on %2$s\n\nDevice: %3$s\nLocation: %4$s\n\nIf this wasn\'t you, you can go to Settings - Privacy and Security - Sessions and terminate that session.\n\nIf you think that somebody logged in to your account against your will, you can enable two-step verification in Privacy and Security settings.\n\nSincerely,\nThe Social IM for Telegram Team</string>
     <string name="NotificationContactNewPhoto">%1$s updated profile photo</string>
     <string name="NotificationInvitedToGroupByLink">%1$s joined to the group %2$s via invite link</string>
     <string name="Reply">Reply</string>
@@ -414,7 +416,7 @@
     <!--contacts view-->
     <string name="SelectContact">Select Contact</string>
     <string name="NoContacts">No contacts yet</string>
-    <string name="InviteText">Hey, let\'s switch to Telegram: https://telegram.org/dl</string>
+    <string name="InviteText">Hey, let\'s switch to Social IM for Telegram: https://telegram.org/dl</string>
     <string name="TodayAt">at</string>
     <string name="YesterdayAt">yesterday at</string>
     <string name="Online">online</string>
@@ -446,7 +448,7 @@
     <string name="RevokeLink">Revoke Link</string>
     <string name="CopyLink">Copy Link</string>
     <string name="ShareLink">Share Link</string>
-    <string name="LinkInfo">Anyone who has Telegram installed will be able to join your group by following this link.</string>
+    <string name="LinkInfo">Anyone who has Social IM for Telegram installed will be able to join your group by following this link.</string>
     <!--set admins view-->
     <string name="SetAdminsTitle">Chat Admins</string>
     <string name="SetAdminsAll">All Members are Admins</string>
@@ -485,7 +487,7 @@
     <string name="EncryptionKey">Encryption Key</string>
     <string name="MessageLifetime">Self-Destruct Timer</string>
     <string name="ShortMessageLifetimeForever">Off</string>
-    <string name="EncryptionKeyDescription">This image and text were derived from the encryption key for this secret chat with <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>If they look the same on <![CDATA[<b>]]>%2$s\'s<![CDATA[</b>]]> device, end-to-end encryption is guaranteed.<![CDATA[<br><br>]]>Learn more at telegram.org</string>
+    <string name="EncryptionKeyDescription">This image and text were derived from the encryption key for this secret chat with <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>If they look the same on <![CDATA[<b>]]>%2$s\'s<![CDATA[</b>]]> device, end-to-end encryption is guaranteed.<![CDATA[<br><br>]]>Learn more at Social IM for Telegram.org</string>
     <string name="EncryptionKeyLink">https://telegram.org/faq#secret-chats</string>
     <string name="NumberUnknown">Unknown</string>
     <string name="Info">Info</string>
@@ -498,7 +500,7 @@
     <string name="UsernameInvalidShort">A username must have at least 5 characters.</string>
     <string name="UsernameInvalidLong">The username must not exceed 32 characters.</string>
     <string name="UsernameInvalidStartNumber">Sorry, a username can\'t start with a number.</string>
-    <string name="UsernameHelp">You can choose a username on <![CDATA[<b>]]>Telegram<![CDATA[</b>]]>. If you do, other people will be able to find you by this username and contact you without knowing your phone number.<![CDATA[<br><br>]]>You can use <![CDATA[<b>]]>a–z<![CDATA[</b>]]>, <![CDATA[<b>]]>0–9<![CDATA[</b>]]> and underscores. Minimum length is <![CDATA[<b>]]>5<![CDATA[</b>]]> characters.</string>
+    <string name="UsernameHelp">You can choose a username on <![CDATA[<b>]]>Social IM for Telegram<![CDATA[</b>]]>. If you do, other people will be able to find you by this username and contact you without knowing your phone number.<![CDATA[<br><br>]]>You can use <![CDATA[<b>]]>a–z<![CDATA[</b>]]>, <![CDATA[<b>]]>0–9<![CDATA[</b>]]> and underscores. Minimum length is <![CDATA[<b>]]>5<![CDATA[</b>]]> characters.</string>
     <string name="UsernameChecking">Checking username...</string>
     <string name="UsernameAvailable">%1$s is available.</string>
     <string name="UsernameEmpty">None</string>
@@ -552,12 +554,12 @@
     <string name="SendByEnter">Send by Enter</string>
     <string name="TerminateAllSessions">Terminate All Other Sessions</string>
     <string name="Events">Events</string>
-    <string name="ContactJoined">Contact joined Telegram</string>
+    <string name="ContactJoined">Contact joined Social IM for Telegram</string>
     <string name="PinnedMessages">Pinned Messages</string>
     <string name="Language">Language</string>
-    <string name="AskAQuestionInfo">Please note that Telegram Support is done by volunteers. We try to respond as quickly as possible, but it may take a while.<![CDATA[<br><br>]]>Please take a look at the <![CDATA[<a href=\"https://telegram.org/faq#general\">Telegram FAQ</a>]]>: it has answers to most questions and important tips for <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">troubleshooting</a>]]>.</string>
+    <string name="AskAQuestionInfo">Please note that Social IM for Telegram Support is done by volunteers. We try to respond as quickly as possible, but it may take a while.<![CDATA[<br><br>]]>Please take a look at the <![CDATA[<a href=\"https://telegram.org/faq#general\">Social IM for Telegram FAQ</a>]]>: it has answers to most questions and important tips for <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">troubleshooting</a>]]>.</string>
     <string name="AskButton">Ask a volunteer</string>
-    <string name="TelegramFaq">Telegram FAQ</string>
+    <string name="TelegramFaq">Social IM for Telegram FAQ</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
     <string name="PrivacyPolicy">Privacy Policy</string>
     <string name="PrivacyPolicyUrl">https://telegram.org/privacy</string>
@@ -568,7 +570,7 @@
     <string name="NotificationsService">Keep-Alive Service</string>
     <string name="NotificationsServiceInfo">Relaunch app when shut down by user or system. This will ensure app can show notifications.</string>
     <string name="NotificationsServiceConnection">Background Connection</string>
-    <string name="NotificationsServiceConnectionInfo">Keep a low impact background connection to Telegram to receive notifications. Enable for reliable notifications.</string>
+    <string name="NotificationsServiceConnectionInfo">Keep a low impact background connection to Social IM for Telegram to receive notifications. Enable for reliable notifications.</string>
     <string name="SortBy">Sort By</string>
     <string name="ImportContacts">Import Contacts</string>
     <string name="SortFirstName">First name</string>
@@ -600,12 +602,12 @@
     <string name="NotificationsPriorityMax">Max</string>
     <string name="RepeatNotificationsNever">Never</string>
     <string name="RepeatNotifications">Repeat Notifications</string>
-    <string name="PhoneNumberHelp">You can change your Telegram number here. Your account and all your cloud data — messages, media, contacts, etc. will be moved to the new number.\n\n<![CDATA[<b>Important:</b>]]> all your Telegram contacts will get your <![CDATA[<b>new number</b>]]> added to their address book, provided they had your old number and you haven\'t blocked them in Telegram.</string>
-    <string name="PhoneNumberAlert">All your Telegram contacts will get your new number added to their address book, provided they had your old number and you haven\'t blocked them in Telegram.</string>
+    <string name="PhoneNumberHelp">You can change your Social IM for Telegram number here. Your account and all your cloud data — messages, media, contacts, etc. will be moved to the new number.\n\n<![CDATA[<b>Important:</b>]]> all your Social IM for Telegram contacts will get your <![CDATA[<b>new number</b>]]> added to their address book, provided they had your old number and you haven\'t blocked them in Social IM for Telegram.</string>
+    <string name="PhoneNumberAlert">All your Social IM for Telegram contacts will get your new number added to their address book, provided they had your old number and you haven\'t blocked them in Social IM for Telegram.</string>
     <string name="PhoneNumberChange">CHANGE NUMBER</string>
     <string name="ChangePhoneNewNumber">New number</string>
     <string name="ChangePhoneHelp">We will send an SMS with a confirmation code to your new number.</string>
-    <string name="ChangePhoneNumberOccupied">The number %1$s is already connected to a Telegram account. Please delete that account before migrating to the new number.</string>
+    <string name="ChangePhoneNumberOccupied">The number %1$s is already connected to a Social IM for Telegram account. Please delete that account before migrating to the new number.</string>
     <string name="NotificationsOther">Other</string>
     <string name="NotificationsDisabled">Disabled</string>
     <string name="VibrationDisabled">Disabled</string>
@@ -631,7 +633,7 @@
     <string name="CacheSettings">Cache Settings</string>
     <string name="LocalDatabase">Local Database</string>
     <string name="LocalDatabaseClear">Clear cached text messages?</string>
-    <string name="LocalDatabaseInfo">Clearing the local database will delete the texts of cached messages and compress the database to save internal disk space. Telegram needs some data to work, so database size will not reach zero.\n\nThis operation can take a few minutes to complete.</string>
+    <string name="LocalDatabaseInfo">Clearing the local database will delete the texts of cached messages and compress the database to save internal disk space. Social IM for Telegram needs some data to work, so database size will not reach zero.\n\nThis operation can take a few minutes to complete.</string>
     <string name="ClearMediaCache">Clear Cache</string>
     <string name="CacheClear">Clear</string>
     <string name="CalculatingSize">Calculating...</string>
@@ -643,13 +645,13 @@
     <string name="LocalCache">Other files</string>
     <string name="CacheEmpty">Empty</string>
     <string name="KeepMedia">Keep Media</string>
-    <string name="KeepMediaInfo">Photos, videos and other files from cloud chats that you have <![CDATA[<b>not accessed</b>]]> during this period will be removed from this device to save disk space.\n\nAll media will stay in the Telegram cloud and can be re-downloaded if you need it again.</string>
+    <string name="KeepMediaInfo">Photos, videos and other files from cloud chats that you have <![CDATA[<b>not accessed</b>]]> during this period will be removed from this device to save disk space.\n\nAll media will stay in the Social IM for Telegram cloud and can be re-downloaded if you need it again.</string>
     <string name="KeepMediaForever">Forever</string>
     <!--sessions view-->
     <string name="SessionsTitle">Active Sessions</string>
     <string name="CurrentSession">Current session</string>
     <string name="NoOtherSessions">No other active sessions</string>
-    <string name="NoOtherSessionsInfo">You can log in to Telegram from other mobile, tablet and desktop devices, using the same phone number. All your data will be instantly synchronized.</string>
+    <string name="NoOtherSessionsInfo">You can log in to Social IM for Telegram from other mobile, tablet and desktop devices, using the same phone number. All your data will be instantly synchronized.</string>
     <string name="OtherSessions">Active Sessions</string>
     <string name="SessionsInfo">Control your sessions on other devices.</string>
     <string name="TerminateSessionInfo">Tap on a session to terminate.</string>
@@ -658,8 +660,8 @@
     <!--passcode view-->
     <string name="Passcode">Passcode Lock</string>
     <string name="ChangePasscode">Change Passcode</string>
-    <string name="ChangePasscodeInfo">When you set up an additional passcode, a lock icon will appear on the chats page. Tap it to lock and unlock your Telegram app.\n\nNote: if you forget the passcode, you\'ll need to delete and reinstall the app. All secret chats will be lost.</string>
-    <string name="ChangePasscodeAlert">You will now see a lock icon on the chats page. Tap it to lock your Telegram app with your new passcode.</string>
+    <string name="ChangePasscodeInfo">When you set up an additional passcode, a lock icon will appear on the chats page. Tap it to lock and unlock your Social IM for Telegram app.\n\nNote: if you forget the passcode, you\'ll need to delete and reinstall the app. All secret chats will be lost.</string>
+    <string name="ChangePasscodeAlert">You will now see a lock icon on the chats page. Tap it to lock your Social IM for Telegram app with your new passcode.</string>
     <string name="PasscodePIN">PIN</string>
     <string name="PasscodePassword">Password</string>
     <string name="EnterCurrentPasscode">Enter your current passcode</string>
@@ -768,7 +770,7 @@
     <string name="YourEmailInfo">Please add your valid e-mail. It is the only way to recover a forgotten password.</string>
     <string name="YourEmailSkip">Skip</string>
     <string name="YourEmailSkipWarning">Warning</string>
-    <string name="YourEmailSkipWarningText">No, seriously.\n\nIf you forget your password, you will lose access to your Telegram account. There will be no way to restore it.</string>
+    <string name="YourEmailSkipWarningText">No, seriously.\n\nIf you forget your password, you will lose access to your Social IM for Telegram account. There will be no way to restore it.</string>
     <string name="YourEmailAlmostThere">Almost there!</string>
     <string name="YourEmailAlmostThereText">Please check your e-mail (don\'t forget the spam folder) to complete Two-Step Verification setup.</string>
     <string name="YourPasswordSuccess">Success!</string>
@@ -802,7 +804,7 @@
     <string name="PasswordRecovery">Password Recovery</string>
     <string name="PasswordCode">Code</string>
     <string name="PasswordReset">Password deactivated</string>
-    <string name="EnabledPasswordText">You have enabled Two-Step verification.\nYou\'ll need the password you set up here to log in to your Telegram account.</string>
+    <string name="EnabledPasswordText">You have enabled Two-Step verification.\nYou\'ll need the password you set up here to log in to your Social IM for Telegram account.</string>
     <string name="PendingEmailText">Your recovery e-mail %1$s is not yet active and pending confirmation.</string>
     <!--privacy settings-->
     <string name="PrivacySettings">Privacy and Security</string>
@@ -912,7 +914,7 @@
     <string name="ActionAddUserSelf">un1 returned to the group</string>
     <string name="ActionAddUserSelfMega">un1 joined the group</string>
     <string name="ActionAddUserSelfYou">You returned to the group</string>
-    <string name="UnsupportedMedia">This message is not supported on your version of Telegram. Update the app to view: https://telegram.org/update</string>
+    <string name="UnsupportedMedia">This message is not supported on your version of Social IM for Telegram. Update the app to view: https://telegram.org/update</string>
     <string name="AttachPhoto">Photo</string>
     <string name="AttachVideo">Video</string>
     <string name="AttachGif">GIF</string>
@@ -936,7 +938,7 @@
     <string name="NoPlayerInstalled">You don\'t have a video player, please install one to continue</string>
     <string name="NoMailInstalled">Please send an email to sms@stel.com and tell us about your problem.</string>
     <string name="NoHandleAppInstalled">You don\'t have applications that can handle the file type \'%1$s\', please install one to continue</string>
-    <string name="InviteUser">This user does not have Telegram yet, send an invitation?</string>
+    <string name="InviteUser">This user does not have Social IM for Telegram yet, send an invitation?</string>
     <string name="AreYouSure">Are you sure?</string>
     <string name="AddToTheGroupTitle">Add %1$s to the chat %2$s?</string>
     <string name="AddToTheGroupForwardCount">Number of last messages to forward:</string>
@@ -945,7 +947,7 @@
     <string name="ForwardMessagesTo">Forward messages to %1$s?</string>
     <string name="SendMessagesTo">Send messages to %1$s?</string>
     <string name="SendContactTo">Send contact to %1$s?</string>
-    <string name="AreYouSureLogout">Are you sure you want to log out?\n\nNote that you can seamlessly use Telegram on all your devices at once.\n\nRemember, logging out kills all your Secret Chats.</string>
+    <string name="AreYouSureLogout">Are you sure you want to log out?\n\nNote that you can seamlessly use Social IM for Telegram on all your devices at once.\n\nRemember, logging out kills all your Secret Chats.</string>
     <string name="AreYouSureSessions">Are you sure you want to terminate all other sessions?</string>
     <string name="AreYouSureDeleteAndExit">Are you sure you want to delete and leave the group?</string>
     <string name="AreYouSureDeleteThisChat">Are you sure you want to delete this chat?</string>
@@ -971,38 +973,42 @@
     <string name="SendContactToGroup">Send contact to %1$s?</string>
     <string name="ForwardMessagesToGroup">Forward messages to %1$s?</string>
     <string name="FeatureUnavailable">Sorry, this feature is currently not available in your country.</string>
-    <string name="NoUsernameFound">There is no Telegram account with this username.</string>
+    <string name="NoUsernameFound">There is no Social IM for Telegram account with this username.</string>
     <string name="BotCantJoinGroups">This bot can\'t join groups.</string>
-    <string name="SecretLinkPreviewAlert">Would you like to enable extended link previews in Secret Chats? Note that link previews are generated on Telegram servers.</string>
+    <string name="SecretLinkPreviewAlert">Would you like to enable extended link previews in Secret Chats? Note that link previews are generated on Social IM for Telegram servers.</string>
     <string name="SecretChatContextBotAlert">Please note that inline bots are provided by third-party developers. For the bot to work, the symbols you type after the bot\'s username are sent to the respective developer.</string>
     <string name="RaiseToSpeakAlert">Would you like to enable "Raise to speak" for voice messages?</string>
     <string name="EditMessageError">Sorry, you can\'t edit this message.</string>
-    <string name="AllowReadSms">Please allow Telegram to receive SMS so that we can automatically enter your code for you.</string>
-    <string name="AllowReadCall">Please allow Telegram to receive calls so that we can automatically enter your code for you.</string>
-    <string name="AllowReadCallAndSms">Please allow Telegram to receive calls and SMS so that we can automatically enter your code for you.</string>
+    <string name="AllowReadSms">Please allow Social IM for Telegram to receive SMS so that we can automatically enter your code for you.</string>
+    <string name="AllowReadCall">Please allow Social IM for Telegram to receive calls so that we can automatically enter your code for you.</string>
+    <string name="AllowReadCallAndSms">Please allow Social IM for Telegram to receive calls and SMS so that we can automatically enter your code for you.</string>
     <string name="UserRestricted">Sorry, you are not allowed to do this.</string>
     <!--permissions-->
-    <string name="PermissionContacts">Telegram needs access to your contacts so that you can connect with your friends across all your devices.</string>
-    <string name="PermissionStorage">Telegram needs access to your storage so that you can send and save photos, videos, music and other media.</string>
-    <string name="PermissionNoAudio">Telegram needs access to your microphone so that you can send voice messages.</string>
-    <string name="PermissionNoLocation">Telegram needs access to your location so that you can share it with your friends.</string>
-    <string name="PermissionNoLocationPosition">Telegram needs access to your location.</string>
+    <string name="PermissionContacts">Social IM for Telegram needs access to your contacts so that you can connect with your friends across all your devices.</string>
+    <string name="PermissionStorage">Social IM for Telegram needs access to your storage so that you can send and save photos, videos, music and other media.</string>
+    <string name="PermissionNoAudio">Social IM for Telegram needs access to your microphone so that you can send voice messages.</string>
+    <string name="PermissionNoLocation">Social IM for Telegram needs access to your location so that you can share it with your friends.</string>
+    <string name="PermissionNoLocationPosition">Social IM for Telegram needs access to your location.</string>
     <string name="PermissionOpenSettings">SETTINGS</string>
     <!--Intro view-->
-    <string name="Page1Title">Telegram</string>
+    <string name="Page1Title">Social Telegram</string>
     <string name="Page2Title">Fast</string>
     <string name="Page3Title">Free</string>
+    <string name="Page0Title">Social</string>
     <string name="Page4Title">Secure</string>
     <string name="Page5Title">Powerful</string>
     <string name="Page6Title">Cloud-Based</string>
     <string name="Page7Title">Private</string>
     <string name="Page1Message">The world\'s <![CDATA[<b>fastest</b>]]> messaging app.<![CDATA[<br/>]]>It is <![CDATA[<b>free</b>]]> and <![CDATA[<b>secure</b>]]>.</string>
-    <string name="Page2Message"><![CDATA[<b>Telegram</b>]]> delivers messages faster than<![CDATA[<br/>]]>any other application.</string>
-    <string name="Page3Message"><![CDATA[<b>Telegram</b>]]> is free forever. No ads.<![CDATA[<br/>]]>No subscription fees.</string>
-    <string name="Page4Message"><![CDATA[<b>Telegram</b>]]> keeps your messages safe<![CDATA[<br/>]]>from hacker attacks.</string>
-    <string name="Page5Message"><![CDATA[<b>Telegram</b>]]> has no limits on the size of<![CDATA[<br/>]]>your media and chats.</string>
-    <string name="Page6Message"><![CDATA[<b>Telegram</b>]]> lets you access your messages<![CDATA[<br/>]]>from multiple devices.</string>
-    <string name="Page7Message"><![CDATA[<b>Telegram</b>]]> messages are heavily encrypted<![CDATA[<br/>]]>and can self-destruct.</string>
+    <string name="Page2Message"><![CDATA[<b>Social Telegram</b>]]> delivers messages faster than<![CDATA[<br/>]]>any other application.</string>
+    <string name="Page0Message"><![CDATA[<b>Social Telegram</b>]]><![CDATA[<br/>]]>Befriend with your kinda-people and let your chats do all the magic :)
+</string>
+
+    <string name="Page3Message"><![CDATA[<b>Social Telegram</b>]]> is Free and now with new features. No ads.<![CDATA[<br/>]]>for premium user.</string>
+    <string name="Page4Message"><![CDATA[<b>Social Telegram</b>]]> keeps your messages safe<![CDATA[<br/>]]>from hacker attacks.</string>
+    <string name="Page5Message"><![CDATA[<b>Social Telegram</b>]]> has no limits on the size of<![CDATA[<br/>]]>your media and chats.</string>
+    <string name="Page6Message"><![CDATA[<b>Social Telegram</b>]]> lets you access your messages<![CDATA[<br/>]]>from multiple devices.</string>
+    <string name="Page7Message"><![CDATA[<b>Social Telegram</b>]]> messages are heavily encrypted<![CDATA[<br/>]]>and can self-destruct.</string>
     <string name="StartMessaging">Start Messaging</string>
     <!--plural-->
     <string name="Online_zero">%1$d online</string>
@@ -1207,7 +1213,7 @@
     /////////////////////////////
 
 
-    <string name="updateText">Social Telegram for Android has been updated. New in version 3.3.2:\n\n- Cache management: Control how much disk space Telegram uses on your device, delete cache for specific types of content.\n- Delete cache from supergroups and channels: Tap and hold on them in the chats list and \'Delete from Cache\'.\n- Sticker management: Manually rearrange your sticker packs. Pack order is now synced across all your devices.\n\nMore about this update:\nhttps://telegram.org/blog/cache-and-stickers</string>
+    <string name="updateText"> Social IM for Telegram for Android has been updated. New in version 3.3.2:\n\n- Cache management: Control how much disk space Social IM for Telegram uses on your device, delete cache for specific types of content.\n- Delete cache from supergroups and channels: Tap and hold on them in the chats list and \'Delete from Cache\'.\n- Sticker management: Manually rearrange your sticker packs. Pack order is now synced across all your devices.\n\nMore about this update:\nhttps://telegram.org/blog/cache-and-stickers</string>
     <string name="updateBuild">693</string>
 
     <!-- update strings for blackberry    -->
diff --git a/TMessagesProj/src/main/res/xml/app_tracker.xml b/TMessagesProj/src/main/res/xml/app_tracker.xml
new file mode 100755
index 000000000..df1ae0fbc
--- /dev/null
+++ b/TMessagesProj/src/main/res/xml/app_tracker.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+   <integer name="ga_sessionTimeout">300</integer>
+ 
+    <!-- Enable automatic Activity measurement -->
+    <bool name="ga_autoActivityTracking">true</bool>
+ 
+    <!--  The property id associated with this analytics tracker -->
+    <string name="ga_trackingId">UA-74767899-1</string>
+ 
+    <string name="ga_sampleFrequency">100.0</string>
+ 
+    <bool name="ga_reportUncaughtExceptions">true</bool>
+ 
+    <!--
+      See Project Structure -> Analytics -> Google Analytics -> Learn More
+      to learn more about configuring this file.
+    -->    
+</resources>
diff --git a/TMessagesProj/src/main/res/xml/tracker/AnalyticsTrackers.java b/TMessagesProj/src/main/res/xml/tracker/AnalyticsTrackers.java
new file mode 100755
index 000000000..dc66724f5
--- /dev/null
+++ b/TMessagesProj/src/main/res/xml/tracker/AnalyticsTrackers.java
@@ -0,0 +1,134 @@
+package org.telegram.tracker;
+
+import android.content.Context;
+
+import com.google.android.gms.analytics.GoogleAnalytics;
+import com.google.android.gms.analytics.Tracker;
+
+import org.telegram.messenger.R;
+
+import java.util.HashMap;
+import java.util.Map;
+
+
+/**
+ * A collection of Google Analytics trackers. Fetch the tracker you need using
+ * {@code AnalyticsTrackers.getInstance().get(...)}
+ * <p/>
+ * This code was generated by Android Studio but can be safely modified by
+ * hand at this point.
+ * <p/>
+ * TODO: Call {@link #initialize(Context)} from an entry point in your app
+ * before using this!
+ */
+public final class AnalyticsTrackers {
+ 
+	public static final String CHAT_ACTIVITY = "Chat Screen";
+	public static final String CHATPROFILE = "Chat profile Screen";
+	public static final String CHANGENAMEACTIVITY = "Change name screen";
+	public static final String ADD_CONTACT= "Add contact Screen";
+	public static final String CONTACT  = "Contact Screen";
+	public static final String SELECT_CUNTRY = "Country select Screen";
+	public static final String SELECT_DOCUMENT = "Select Document Screen";
+	public static final String CREATE_GROUP = "Creat Group Screen";
+	public static final String IDENTICONACTIVITY  = "Identicon Activity Screen";
+	public static final String INTRO_ACTIVITY = "Intro Activity Screen";
+	public static final String SELECT_LANGUAGE_ACTIVITY = "Select Language SCREEN";
+	public static final String LAST_SCREEN_ACTIVITY = "Last Activity Screen";
+	public static final String LAST_SCREEN_USER_ACTIVITY = "Last seen user Activity Screen";
+	public static final String LAUNCH_ACTIVITY = "Launch Screen";
+	public static final String LOCATION_ACTIVITY = "Location Screen";
+	public static final String LOGIN = "LOGIN Screen";
+	public static final String MEDIA_ACTIVITY = "Media Screen";
+    public static final String MANAGESPACE = "ManageSpace Screen";
+	public static final String MESSAGE_ACTIVITY = "Message Screen";
+	public static final String VIDEO_PICKER = "Video picker Screen";
+	public static final String VIDEO_EDITOR = "Video editor Screen";
+	public static final String USER_PROFILE = "User profile Screen";
+	public static final String SETTING_WRAPPER = "Setting Wallpaper Screen";
+	public static final String CHANGE_USER_NAME = "Change userScreen";
+	public static final String CHANGESETTING = "Change setting Screen";
+	public static final String BLOCKED_USER= "Blocked User Screen";
+	public static final String SETTING_SCREEN = "Setting Screen";
+	public static final String PRIVACT_SETTING = "Privacy setting Screen";
+	public static final String POPUP_NOTIFICATION = "PopUp Notification Screen";
+	public static final String CHAT_SETTING = "Chat setting Screen";
+    public static final String SETTING_NOTIFICATION_AND_SOUND = "Notification and sound Screen";
+    public static final String GROUP_CREATE_FINAL_ACTIVITY = "Group create final Screen";
+    public static final String MEDIA_ATTACH_ACTIVITY = "Media attach Screen";
+    public static final String OSMLOCATION = "OSM Location Screen";
+    public static final String PHOTOCROP_SCREEN = "Photo Crop Screen";
+    public static final String PHOTO_ALBUM_PICKER= "Photo Album picker Screen";
+    public static final String PHOTO_PICK_SCREEN = "Photo PICK Screen";
+    public static final String NOTIFICATION_SETTING = "Notification Setting Screen";
+    public static final String PROFILE_NOTIFICATION = "Profile Notification Screen";
+    /////
+    public static final String AUDIO_SELECT = "Audio Select Screen";
+    public static final String AUDIO_PLAYER = "Audio Player Screen";
+    public static final String CACHECONTROL = "Cache control Screen";
+    public static final String CHANGE_CHAT_NAME = "Change Chat Name Screen";
+    public static final String CHANGE_PHONE = "Change Phone Screen";
+    public static final String CHANGE_PHONE_HELP = "Change Phone Help Screen";
+    public static final String CHANNEL_CREATE = "Channel Create Screen";
+    public static final String CHANNEL_INTRO = "Channel Intro Screen";
+    public static final String CHANNEL_EDIT = "Channel Edit Screen";
+    public static final String CHANNEL_USER = "Channel user Screen";
+    public static final String GROUP_INVITE = "Group Invite Screen";
+    public static final String TWOSTEP_VARIFICATION = "Two step varification Screen";
+    public static final String WALLPAPER_ACTIVITY = "Wallpaper Screen";
+    public static final  String STICKERS_ACTIVITY = "Stickers Screen";
+    public static final String ADMIN_ACTIVITY = "Set Admin Screen";
+    public static final String SESSION_ACTIVITY ="Session Screen";
+    public static final String PHOTOVIEWER = "PhotoViewer Screeen";
+    public static final String PASSCODE = "Passcode Screeen";
+    public static final String DIALOGACTIVITY = "Dialog Screen";
+    public enum Target {
+        APP,
+        // Add more trackers here if you need, and update the code in #get(Target) below
+    }
+
+    private static AnalyticsTrackers sInstance;
+
+    public static synchronized void initialize(Context context) {
+        if (sInstance != null) {
+            throw new IllegalStateException("Extra call to initialize analytics trackers");
+        }
+
+        sInstance = new AnalyticsTrackers(context);
+    }
+
+    public static synchronized AnalyticsTrackers getInstance() {
+        if (sInstance == null) {
+            throw new IllegalStateException("Call initialize() before getInstance()");
+        }
+
+        return sInstance;
+    }
+
+    private final Map<Target, Tracker> mTrackers = new HashMap<Target, Tracker>();
+    private final Context mContext;
+
+    /**
+     * Don't instantiate directly - use {@link #getInstance()} instead.
+     */
+    private AnalyticsTrackers(Context context) {
+        mContext = context.getApplicationContext();
+    }
+
+    public synchronized Tracker get(Target target) {
+        if (!mTrackers.containsKey(target)) {
+            Tracker tracker;
+            switch (target) {
+                case APP:
+                    tracker = GoogleAnalytics.getInstance(mContext).newTracker(R.xml.app_tracker);
+                    break;
+                default:
+                    throw new IllegalArgumentException("Unhandled analytics target " + target);
+            }
+            mTrackers.put(target, tracker);
+        }
+
+        return mTrackers.get(target);
+    }
+}
+
