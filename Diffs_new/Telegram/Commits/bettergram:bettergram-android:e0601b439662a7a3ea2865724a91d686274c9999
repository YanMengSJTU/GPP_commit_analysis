diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/BottomBar/BottomNavigationBar.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/BottomBar/BottomNavigationBar.java
index c8242248c..11745ad3a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/BottomBar/BottomNavigationBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/BottomBar/BottomNavigationBar.java
@@ -13,6 +13,7 @@
 import android.util.AttributeSet;
 import android.util.Log;
 import android.util.Pair;
+import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -35,7 +36,7 @@
     private static final String TAG = BottomNavigationBar.class.getName();
 
     private static final List<Pair<Integer, Integer>> ITEMS = Arrays.asList(
-            new Pair<>(R.drawable.floating_message, R.string.barItemChats),
+            new Pair<>(R.drawable.ic_tab_chats, R.string.barItemChats),
             new Pair<>(R.drawable.ic_tab_crypto, R.string.barItemPrices),
             new Pair<>(R.drawable.ic_tab_news, R.string.barItemNews),
             new Pair<>(R.drawable.ic_tab_videos, R.string.barItemVideos),
@@ -49,6 +50,7 @@
     private int activeColorId;
     private int selectedPosition;
     private boolean shouldTriggerListenerOnLayout;
+    private int tabItemBgRes;
 
     private OnSelectListener onSelectListener = (position, title) -> {
 
@@ -167,6 +169,7 @@ public BottomNavigationBar addTab(@NonNull BottomBarItem item) {
         tabView.setClickable(true);
         tabView.setOrientation(LinearLayout.VERTICAL);
         tabView.setTranslationY(AndroidUtilities.dp(2));
+        tabView.setBackgroundResource(tabItemBgRes);
 
         ImageView tabIcon = new ImageView(context);
 
@@ -231,6 +234,10 @@ private void init() {
         if (atLeastLollipop()) {
             setOutlineProvider(ViewOutlineProvider.BOUNDS);
         }
+
+        TypedValue outValue = new TypedValue();
+        getContext().getTheme().resolveAttribute(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP ? android.R.attr.selectableItemBackgroundBorderless : android.R.attr.selectableItemBackground, outValue, true);
+        tabItemBgRes = outValue.resourceId;
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index d712bcf02..b175a68d7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -18,13 +18,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
-import android.graphics.Canvas;
-import android.graphics.ColorFilter;
-import android.graphics.Paint;
-import android.graphics.PixelFormat;
-import android.graphics.PorterDuff;
-import android.graphics.PorterDuffColorFilter;
-import android.graphics.RectF;
+import android.graphics.*;
 import android.graphics.drawable.Drawable;
 import android.media.AudioManager;
 import android.os.Build;
@@ -34,11 +28,7 @@
 import android.support.v13.view.inputmethod.EditorInfoCompat;
 import android.support.v13.view.inputmethod.InputConnectionCompat;
 import android.support.v4.os.BuildCompat;
-import android.text.Editable;
-import android.text.InputFilter;
-import android.text.SpannableStringBuilder;
-import android.text.Spanned;
-import android.text.TextWatcher;
+import android.text.*;
 import android.text.style.ImageSpan;
 import android.util.Property;
 import android.util.TypedValue;
@@ -50,41 +40,17 @@
 import android.view.animation.DecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.view.inputmethod.InputConnection;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.PopupWindow;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.ChatObject;
-import org.telegram.messenger.DataQuery;
-import org.telegram.messenger.Emoji;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MediaController;
-import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.NotificationsController;
-import org.telegram.messenger.SendMessagesHelper;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.NotificationCenter;
+import android.widget.*;
 import io.bettergram.messenger.R;
-import org.telegram.messenger.SharedConfig;
-import org.telegram.messenger.VideoEditedInfo;
+import org.telegram.messenger.*;
+import org.telegram.messenger.MediaController;
 import org.telegram.messenger.camera.CameraController;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.ActionBar.Theme;
-import org.telegram.ui.ChatActivity;
-import org.telegram.ui.DialogsActivity;
-import org.telegram.ui.GroupStickersActivity;
-import org.telegram.ui.LaunchActivity;
-import org.telegram.ui.StickersActivity;
+import org.telegram.ui.*;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -94,25 +60,135 @@
 
     public interface ChatActivityEnterViewDelegate {
         void onMessageSend(CharSequence message);
+
         void needSendTyping();
+
         void onTextChanged(CharSequence text, boolean bigChange);
+
         void onTextSelectionChanged(int start, int end);
+
         void onTextSpansChanged(CharSequence text);
+
         void onAttachButtonHidden();
+
         void onAttachButtonShow();
+
         void onWindowSizeChanged(int size);
+
         void onStickersTab(boolean opened);
+
         void onMessageEditEnd(boolean loading);
+
         void didPressedAttachButton();
+
         void needStartRecordVideo(int state);
+
         void needChangeVideoPreviewState(int state, float seekProgress);
+
         void onSwitchRecordMode(boolean video);
+
         void onPreAudioVideoRecord();
+
         void needStartRecordAudio(int state);
+
         void needShowMediaBanHint();
+
         void onStickersExpandedChange();
     }
 
+    public static class SimpleChatActivityEnterViewDelegate implements ChatActivityEnterViewDelegate {
+
+        @Override
+        public void onMessageSend(CharSequence message) {
+
+        }
+
+        @Override
+        public void needSendTyping() {
+
+        }
+
+        @Override
+        public void onTextChanged(CharSequence text, boolean bigChange) {
+
+        }
+
+        @Override
+        public void onTextSelectionChanged(int start, int end) {
+
+        }
+
+        @Override
+        public void onTextSpansChanged(CharSequence text) {
+
+        }
+
+        @Override
+        public void onAttachButtonHidden() {
+
+        }
+
+        @Override
+        public void onAttachButtonShow() {
+
+        }
+
+        @Override
+        public void onWindowSizeChanged(int size) {
+
+        }
+
+        @Override
+        public void onStickersTab(boolean opened) {
+
+        }
+
+        @Override
+        public void onMessageEditEnd(boolean loading) {
+
+        }
+
+        @Override
+        public void didPressedAttachButton() {
+
+        }
+
+        @Override
+        public void needStartRecordVideo(int state) {
+
+        }
+
+        @Override
+        public void needChangeVideoPreviewState(int state, float seekProgress) {
+
+        }
+
+        @Override
+        public void onSwitchRecordMode(boolean video) {
+
+        }
+
+        @Override
+        public void onPreAudioVideoRecord() {
+
+        }
+
+        @Override
+        public void needStartRecordAudio(int state) {
+
+        }
+
+        @Override
+        public void needShowMediaBanHint() {
+
+        }
+
+        @Override
+        public void onStickersExpandedChange() {
+
+        }
+    }
+
     private int currentAccount = UserConfig.selectedAccount;
 
     private SeekBarWaveform seekBarWaveform;
@@ -2829,7 +2905,7 @@ public void setFieldFocused(boolean focus) {
             return;
         }
         if (focus) {
-             if (!searchingStickers && !messageEditText.isFocused()) {
+            if (!searchingStickers && !messageEditText.isFocused()) {
                 messageEditText.postDelayed(() -> {
                     boolean allowFocus;
                     if (AndroidUtilities.isTablet()) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
index 6b8de6b51..629d4e934 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TabsView.java
@@ -1,5 +1,7 @@
 package org.telegram.ui.Components;
 
+import android.animation.AnimatorSet;
+import android.animation.ValueAnimator;
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
@@ -12,41 +14,40 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.animation.AccelerateDecelerateInterpolator;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
-
-import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.NotificationCenter;
-import org.telegram.messenger.UserConfig;
+import io.bettergram.messenger.R;
+import org.telegram.messenger.*;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.ui.ActionBar.Theme;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
-import io.bettergram.messenger.R;
-
 /**
  * Created by Yan on 09/07/2018.
  */
 
-public class TabsView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate{
+public class TabsView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate {
     private static final String TAG = "TabsView";
     //TODO: move to controller
     private static int selectedTab = 0;
     private static final List<Tab> tabs = Arrays.asList(
-        new Tab(LocaleController.getString("tabsAll", R.string.tabsAll), R.drawable.tab_all, 0),
-        new Tab(LocaleController.getString("tabsDirect", R.string.tabsDirect), R.drawable.tab_user, 101),
-        new Tab(LocaleController.getString("tabsGroups", R.string.tabsGroups), R.drawable.tab_group, 102),
-        new Tab(LocaleController.getString("tabsAnnouncements", R.string.tabsAnnouncements), R.drawable.tab_channel, 103),
-        new Tab(LocaleController.getString("tabsFavorites", R.string.tabsFavorites), R.drawable.tab_favs, 104),
-        new Tab(LocaleController.getString("tabsCrypto", R.string.tabsCrypto), R.drawable.tab_bot, 105)
+            new Tab(LocaleController.getString("tabsAll", R.string.tabsAll), R.drawable.tab_all, 0),
+            new Tab(LocaleController.getString("tabsDirect", R.string.tabsDirect), R.drawable.tab_user, 101),
+            new Tab(LocaleController.getString("tabsGroups", R.string.tabsGroups), R.drawable.tab_group, 102),
+            new Tab(LocaleController.getString("tabsAnnouncements", R.string.tabsAnnouncements), R.drawable.tab_channel, 103),
+            new Tab(LocaleController.getString("tabsFavorites", R.string.tabsFavorites), R.drawable.tab_favs, 104),
+            new Tab(LocaleController.getString("tabsCrypto", R.string.tabsCrypto), R.drawable.tab_bot, 105)
     );
+
+    private final AccelerateDecelerateInterpolator interpolator = new AccelerateDecelerateInterpolator();
+    private int viewWidth;
+    private int viewHeight;
+    private boolean hidden;
+    private int lastParentTopMargin, lastTabTopMargin;
+
     private static class Tab {
         private final String title;
         private final int res;
@@ -66,27 +67,27 @@
             this.unread = 0;
         }
 
-        public String getTitle(){
+        public String getTitle() {
             return this.title;
         }
 
-        public int getRes(){
+        public int getRes() {
             return this.res;
         }
 
-        public int getType(){
+        public int getType() {
             return this.type;
         }
 
-        public int getPosition(){
+        public int getPosition() {
             return this.position;
         }
 
-        public int getUnread(){
+        public int getUnread() {
             return this.unread;
         }
 
-        public void setUnread(int unread){
+        public void setUnread(int unread) {
             this.unread = unread;
         }
     }
@@ -115,12 +116,12 @@ private void loadArray() {
         updatePagerItem();
     }
 
-    public void reloadTabs(){
+    public void reloadTabs() {
         loadArray();
         pager.getAdapter().notifyDataSetChanged();
     }
 
-    private void updatePagerItem(){
+    private void updatePagerItem() {
         currentPage = selectedTab;
         pager.setCurrentItem(currentPage);
     }
@@ -146,6 +147,13 @@ public TabsView(Context context, AttributeSet attrs, int defStyleAttr, int defSt
         init(context);
     }
 
+    @Override
+    protected void onSizeChanged(int xNew, int yNew, int xOld, int yOld) {
+        super.onSizeChanged(xNew, yNew, xOld, yOld);
+        viewWidth = xNew;
+        viewHeight = yNew;
+    }
+
     private void init(Context context) {
         pager = new ViewPager(context) {
             @Override
@@ -183,7 +191,7 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
         pagerSlidingTabStrip.setDelegate(new PlusPagerSlidingTabStrip.PlusScrollSlidingTabStripDelegate() {
             @Override
             public void onTabLongClick(int position) {
-                if(selectedTab == position) {
+                if (selectedTab == position) {
                     //TODO
                 }
             }
@@ -203,8 +211,10 @@ public void onTabClick() {
         pagerSlidingTabStrip.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
 
             private boolean loop;
+
             @Override
-            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {}
+            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+            }
 
             @Override
             public void onPageSelected(int position) {
@@ -218,7 +228,7 @@ public void onPageSelected(int position) {
             @Override
             public void onPageScrollStateChanged(int state) {
                 if (state == ViewPager.SCROLL_STATE_IDLE) {
-                    if(loop){
+                    if (loop) {
                         AndroidUtilities.runOnUIThread(() -> pager.setCurrentItem(currentPage == 0 ? pager.getAdapter().getCount() - 1 : 0), 100);
                         loop = false;
                     }
@@ -246,7 +256,7 @@ private void saveNewPage() {
         editor.apply();
     }
 
-    public ViewPager getPager(){
+    public ViewPager getPager() {
         return pager;
     }
 
@@ -272,11 +282,11 @@ public void didReceivedNotification(int id, int account, Object... args) {
 //        }
     }
 
-    public void forceUpdateTabCounters(){
+    public void forceUpdateTabCounters() {
         force = true;
     }
 
-    private void unreadCount(){
+    private void unreadCount() {
 //        MessagesController messagesController = MessagesController.getInstance(currentAccount);
 //        unreadCount(messagesController.dialogsUnread, positions[8]);
 //        unreadCount(messagesController.dialogsAdmin, positions[7]);
@@ -288,23 +298,23 @@ private void unreadCount(){
 //        unreadCountAll(messagesController.dialogs, positions[0]);
     }
 
-    private void unreadCountGroups(){
+    private void unreadCountGroups() {
         MessagesController messagesController = MessagesController.getInstance(currentAccount);
 //        if(!Theme.plusHideGroupsTab)unreadCount(!Theme.plusHideSuperGroupsTab ? messagesController.dialogsGroups : messagesController.dialogsGroupsAll, positions[2]);
 //        if(!Theme.plusHideSuperGroupsTab)unreadCount(messagesController.dialogsMegaGroups, positions[3]);
     }
 
-    private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position){
-        if(position == -1){
+    private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position) {
+        if (position == -1) {
             return;
         }
         SharedPreferences plusPreferences = ApplicationLoader.applicationContext.getSharedPreferences("plusconfig", Activity.MODE_PRIVATE);
         boolean allMuted = true;
         int unreadCount = 0;
         if (dialogs != null && !dialogs.isEmpty()) {
-            for(int a = 0; a < dialogs.size(); a++) {
+            for (int a = 0; a < dialogs.size(); a++) {
                 TLRPC.TL_dialog dialg = dialogs.get(a);
-                if(dialg != null && dialg.unread_count > 0) {
+                if (dialg != null && dialg.unread_count > 0) {
                     boolean isMuted = MessagesController.getInstance(currentAccount).isDialogMuted(dialg.id);
                     if (!isMuted) {
                         int i = dialg.unread_count;
@@ -318,13 +328,13 @@ private void unreadCount(final ArrayList<TLRPC.TL_dialog> dialogs, int position)
             }
         }
 
-        if(unreadCount != tabs.get(position).getUnread() || force) {
+        if (unreadCount != tabs.get(position).getUnread() || force) {
             tabs.get(position).setUnread(unreadCount);
             pagerSlidingTabStrip.updateCounter(position, unreadCount, allMuted, force);
         }
     }
 
-    private void unreadCountAll(ArrayList<TLRPC.TL_dialog> dialogs, int position){
+    private void unreadCountAll(ArrayList<TLRPC.TL_dialog> dialogs, int position) {
         unreadCount(dialogs, position);
         force = false;
     }
@@ -338,7 +348,7 @@ public int getCount() {
         @Override
         public void notifyDataSetChanged() {
             super.notifyDataSetChanged();
-            if(pagerSlidingTabStrip != null){
+            if (pagerSlidingTabStrip != null) {
                 pagerSlidingTabStrip.notifyDataSetChanged();
             }
         }
@@ -352,7 +362,7 @@ public Object instantiateItem(ViewGroup viewGroup, int position) {
 
         @Override
         public void destroyItem(ViewGroup viewGroup, int position, Object object) {
-            viewGroup.removeView((View)object);
+            viewGroup.removeView((View) object);
         }
 
         @Override
@@ -378,4 +388,39 @@ public String getPageTitle(int position) {
         }
     }
 
+    public void hide(boolean hide) {
+        if (hidden == hide) {
+            return;
+        }
+        hidden = hide;
+
+        ViewGroup parent = (ViewGroup) getParent();
+        MarginLayoutParams parentMargins = (MarginLayoutParams) parent.getLayoutParams();
+
+        lastParentTopMargin = hide ? parentMargins.topMargin : lastParentTopMargin;
+
+        ValueAnimator marginAnimator = ValueAnimator.ofInt(lastParentTopMargin, lastParentTopMargin);
+        marginAnimator.addUpdateListener((ValueAnimator valueAnimator) -> {
+            parentMargins.topMargin = (int) valueAnimator.getAnimatedValue();
+            parent.setLayoutParams(parentMargins);
+        });
+
+        MarginLayoutParams tabMargins = (MarginLayoutParams) getLayoutParams();
+
+        lastTabTopMargin = hide ? tabMargins.topMargin : lastTabTopMargin;
+
+        ValueAnimator tabMarginAnimator = ValueAnimator.ofInt(hide ? lastTabTopMargin : -viewHeight, hide ? -viewHeight : lastTabTopMargin);
+        tabMarginAnimator.addUpdateListener(valueAnimator -> {
+            tabMargins.topMargin = (int) valueAnimator.getAnimatedValue();
+            setLayoutParams(tabMargins);
+        });
+
+        AnimatorSet animatorSet = new AnimatorSet();
+        animatorSet.playTogether(marginAnimator, tabMarginAnimator);
+        animatorSet.setDuration(200);
+        animatorSet.setInterpolator(interpolator);
+        animatorSet.start();
+
+
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index 0800339e9..83ad46d20 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -571,13 +571,10 @@ public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State
                 });
         LinearLayout tabsContainer = new LinearLayout(context);
         tabsContainer.setOrientation(LinearLayout.VERTICAL);
-        tabsContainer.setLayoutParams(new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT));
 
-        tabsContainer.addView(newTabsView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, AndroidUtilities.isTablet() ? 44 : 42, Gravity.TOP));
-        //todo: get back
-//        refreshTabAndListViews(false);
+        tabsContainer.addView(newTabsView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, AndroidUtilities.isTablet() ? 44 : 42, Gravity.TOP));
 
-        tabsContainer.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        tabsContainer.addView(listView, LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT, 0, 1f));
 
         contentView.addView(tabsContainer, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.CENTER, 0, AndroidUtilities.isTablet() ? 16 : 14, 0, AndroidUtilities.isTablet() ? 40 : 42));// added bottom margin for the bottom navigation view
         listView.setOnItemClickListener((view, position) -> {
@@ -1303,7 +1300,7 @@ public void needRemoveHint(final int did) {
             commentView.setForceShowSendButton(true, false);
             commentView.setVisibility(View.GONE);
             contentView.addView(commentView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM));
-            commentView.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate() {
+            commentView.setDelegate(new ChatActivityEnterView.SimpleChatActivityEnterViewDelegate() {
                 @Override
                 public void onMessageSend(CharSequence message) {
                     if (delegate == null) {
@@ -1315,98 +1312,15 @@ public void onMessageSend(CharSequence message) {
                     }
                     delegate.didSelectDialogs(DialogsActivity.this, selectedDialogs, message, false);
                 }
-
-                @Override
-                public void onSwitchRecordMode(boolean video) {
-
-                }
-
-                @Override
-                public void onTextSelectionChanged(int start, int end) {
-
-                }
-
-                @Override
-                public void onStickersExpandedChange() {
-
-                }
-
-                @Override
-                public void onPreAudioVideoRecord() {
-
-                }
-
-                @Override
-                public void onTextChanged(final CharSequence text, boolean bigChange) {
-
-                }
-
-                @Override
-                public void onTextSpansChanged(CharSequence text) {
-
-                }
-
-                @Override
-                public void needSendTyping() {
-
-                }
-
-                @Override
-                public void onAttachButtonHidden() {
-
-                }
-
-                @Override
-                public void onAttachButtonShow() {
-
-                }
-
-                @Override
-                public void onMessageEditEnd(boolean loading) {
-
-                }
-
-                @Override
-                public void onWindowSizeChanged(int size) {
-
-                }
-
-                @Override
-                public void onStickersTab(boolean opened) {
-
-                }
-
-                @Override
-                public void didPressedAttachButton() {
-
-                }
-
-                @Override
-                public void needStartRecordVideo(int state) {
-
-                }
-
-                @Override
-                public void needChangeVideoPreviewState(int state, float seekProgress) {
-
-                }
-
-                @Override
-                public void needStartRecordAudio(int state) {
-
-                }
-
-                @Override
-                public void needShowMediaBanHint() {
-
-                }
             });
         }
 
         BottomNavigationBar bottomBar = new BottomNavigationBar(context)
                 .setOnSelectListener((position, title) -> {
                     actionBar.setTitle(title);
-                    newTabsView.setVisibility(position > 0 ? View.GONE : View.VISIBLE);
+                    boolean isChat = position == 0;
+                    hideFloatingButton(!isChat);
+                    newTabsView.hide(!isChat);
                 })
                 .setOnReselectListener((position, title) -> actionBar.setTitle(title))
                 .selectTabAndTriggerListener(0, true);
