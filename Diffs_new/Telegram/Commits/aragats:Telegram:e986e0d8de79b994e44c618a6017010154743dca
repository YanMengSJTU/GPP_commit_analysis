diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 90043c2c7..8f48c8a99 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -13,6 +13,7 @@
 import android.location.Location;
 
 import org.telegram.android.location.LocationManagerHelper;
+import org.telegram.utils.Constants;
 
 import retrofit.Callback;
 import retrofit.Response;
@@ -206,7 +207,7 @@ public void loadPosts(final String offset, final int count, final boolean reload
         postRequest.setLongitude(location.getLongitude());
         postRequest.setCount(count);
         postRequest.setOffset(offset);
-        postRequest.setDistance(1000); // 1000 meters. ??
+        postRequest.setDistance(Constants.RADIUS);
         RestManager.getInstance().findNearPosts(postRequest, new Callback<PostResponse>() {
             @Override
             public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
index a44ba3d1d..3cbf3bb2c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
@@ -19,10 +19,13 @@
 import org.telegram.android.volley.VolleyError;
 import org.telegram.android.volley.toolbox.JsonObjectRequest;
 import org.telegram.android.volley.toolbox.Volley;
+
 import ru.aragats.wgo.ApplicationLoader;
+
 import org.telegram.messenger.BuildVars;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
+import org.telegram.utils.Constants;
 
 import java.net.URLEncoder;
 import java.util.ArrayList;
@@ -104,7 +107,8 @@ public void searchGooglePlacesWithQuery(final String query, final Location coord
         }
         try {
             searching = true;
-            String url = String.format(Locale.US, "https://api.foursquare.com/v2/venues/search/?v=%s&locale=en&limit=25&client_id=%s&client_secret=%s&ll=%s", BuildVars.FOURSQUARE_API_VERSION, BuildVars.FOURSQUARE_API_ID, BuildVars.FOURSQUARE_API_KEY,  String.format(Locale.US, "%f,%f", coordinate.getLatitude(), coordinate.getLongitude()));
+            String url = String.format(Locale.US, "https://api.foursquare.com/v2/venues/search/?v=%s&locale=en&limit=25&client_id=%s&client_secret=%s&ll=%s&radius=%s",
+                    BuildVars.FOURSQUARE_API_VERSION, BuildVars.FOURSQUARE_API_ID, BuildVars.FOURSQUARE_API_KEY, String.format(Locale.US, "%f,%f", coordinate.getLatitude(), coordinate.getLongitude()), Constants.RADIUS);
             if (query != null && query.length() > 0) {
                 url += "&query=" + URLEncoder.encode(query, "UTF-8");
             }
@@ -219,5 +223,5 @@ public void onErrorResponse(VolleyError error) {
             }
         }
         notifyDataSetChanged();
-        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
index fa063e878..acf87cd0c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/PostsAdapter.java
@@ -10,6 +10,7 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.os.Bundle;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -22,6 +23,7 @@
 import org.telegram.ui.LocationActivityAragats;
 import org.telegram.ui.PhotoViewer;
 import org.telegram.ui.PostsActivity;
+import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
 // TODO-aragats
@@ -119,7 +121,7 @@ public void didClickedImage(PostCell cell) {
                 @Override
                 public void didClickedVenue(PostCell cell) {
                     Post cellPost = cell.getPost();
-                    LocationActivityAragats fragment = new LocationActivityAragats();
+                    LocationActivityAragats fragment = new LocationActivityAragats(new Bundle());
                     fragment.setPost(cellPost);
                     postsActivity.presentFragment(fragment);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index ee2745580..a6201d9af 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -13,10 +13,12 @@
 import android.animation.StateListAnimator;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.Color;
 import android.graphics.Outline;
 import android.location.Location;
 import android.net.Uri;
 import android.os.Build;
+import android.os.Bundle;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -40,6 +42,7 @@
 import com.google.android.gms.maps.MapView;
 import com.google.android.gms.maps.MapsInitializer;
 import com.google.android.gms.maps.model.BitmapDescriptorFactory;
+import com.google.android.gms.maps.model.CameraPosition;
 import com.google.android.gms.maps.model.CircleOptions;
 import com.google.android.gms.maps.model.LatLng;
 import com.google.android.gms.maps.model.MarkerOptions;
@@ -50,8 +53,10 @@
 import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
+
 import ru.aragats.wgo.rest.dto.Post;
 import ru.aragats.wgo.rest.dto.Venue;
+
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -63,6 +68,7 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.MapPlaceholderDrawable;
+import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
@@ -119,6 +125,10 @@
         void didSelectLocation(TLRPC.MessageMedia location);
     }
 
+    public LocationActivityAragats(Bundle args) {
+        super(args);
+    }
+
     @Override
     public boolean needAddActionBar() {
         return post != null;
@@ -630,6 +640,48 @@ public void onMyLocationChange(Location location) {
             if (myLocation == null) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             }
+
+
+            //TODO in case of myLocation is null. it does not work !!!! Consider it !!!!
+            // Circle area restriction.
+            boolean restrictedArea = getArguments().getBoolean("restricted_area", false);
+            final int radius = getArguments().getInt("radius", Constants.RADIUS);
+            if (restrictedArea) {
+                googleMap.setOnCameraChangeListener(new GoogleMap.OnCameraChangeListener() {
+                    @Override
+                    public void onCameraChange(CameraPosition cameraPosition) {
+                        if (userLocation != null && myLocation != null) {
+                            if (myLocation.distanceTo(userLocation) > radius) {
+                                CameraUpdate position = CameraUpdateFactory.newLatLng(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()));
+                                googleMap.animateCamera(position);
+                            }
+                        }
+                    }
+                });
+
+                if (myLocation != null) {
+//                googleMap.addCircle(new CircleOptions()
+//                        .center(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()))
+//                        .radius(Constants.RADIUS)
+//                        .strokeColor(Color.BLUE)
+//                        .fillColor(Color.TRANSPARENT)
+//                        .strokeWidth(2));
+
+                    CircleOptions circleOptions = new CircleOptions()
+                            .center(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()))
+                            .radius(Constants.RADIUS)
+                            .strokeWidth(1)
+                            .strokeColor(Color.BLUE)
+                            .fillColor(Color.parseColor("#300084d3")); //#500084d3  #506bc8ff - blue  #501cff5c - green
+//                        .fillColor(Color.parseColor("#506bc8ff"));// blue original //#500084d3  #506bc8ff - blue  #501cff5c - green
+//                        .fillColor(Color.parseColor("#501cff5c")); //#500084d3  #506bc8ff  #501cff5c - green
+                    ////#500084d3 - original;  #500084d3 - original with other transparency;   #506bc8ff - blue (my);  #501cff5c - green (my)
+                    // Supported formats are: #RRGGBB #AARRGGBB
+                    //   #AA is the alpha, or amount of transparency
+                    googleMap.addCircle(circleOptions);
+                }
+            }
+
         }
 
         return fragmentView;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index f61f53e43..f258d2f12 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -735,7 +735,7 @@ private void updateTitle() {
         String name;
         if (venue != null && !StringUtils.isEmpty(venue.getName())) {
             name = venue.getName();
-        } else if (userCoordinates != null) {
+        } else if (userCoordinates != null) { //TODO Current Location is better to rename to Location. ??? May be is better to delete Place(Ort)
             name = LocaleController.getString("CurrentLocation", R.string.CurrentLocation);
         } else {
             name = LocaleController.getString("Place", R.string.Place);
@@ -1395,7 +1395,10 @@ private void openLocationChooser() {
         if (!isGoogleMapsInstalled()) {
             return;
         }
-        LocationActivityAragats fragment = new LocationActivityAragats();
+        Bundle args = new Bundle();
+        args.putBoolean(Constants.RESTRICTED_AREA, true);
+        args.putInt(Constants.RADIUS_ARG, Constants.RADIUS);
+        LocationActivityAragats fragment = new LocationActivityAragats(args);
         fragment.setDelegate(new LocationActivityAragats.LocationActivityDelegate() {
             @Override
             public void didSelectLocation(TLRPC.MessageMedia location) {
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
index be00ec17b..0f8001f93 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
@@ -17,6 +17,11 @@
     public static final String PREF_NEW_POST_PHOTO = "NEW_POST_PHOTO";
 
 
-
     public static int POST_COUNT = 20;
+
+    public static final int RADIUS = 2000; // meters
+
+
+    public static final String RESTRICTED_AREA = "restricted_area";
+    public static final String RADIUS_ARG = "radius";
 }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
index de2ad76c9..7b4e54850 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
@@ -8,7 +8,7 @@
  * Created by aragats on 05/12/15.
  */
 public class RestClient {
-    private static final String BASE_URL = "http://192.168.0.100:8080/";
+    private static final String BASE_URL = "http://192.168.0.101:8080/";
     private RestService restService;
 
 
