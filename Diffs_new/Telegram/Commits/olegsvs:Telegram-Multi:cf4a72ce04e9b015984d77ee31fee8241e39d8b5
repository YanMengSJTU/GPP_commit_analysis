diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index d0fa03dd9..ed10c591e 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -21,7 +21,7 @@ dependencies {
     compile 'com.googlecode.mp4parser:isoparser:1.0.6'
     compile 'com.stripe:stripe-android:2.0.2'
     compile 'commons-io:commons-io:2.4'
-    compile 'com.android.support:design:25.3.0'
+    compile 'com.github.clans:fab:1.6.4'
 }
 
 android {
diff --git a/TMessagesProj/config/debug/AndroidManifest.xml b/TMessagesProj/config/debug/AndroidManifest.xml
index dd65a5b47..28560f662 100644
--- a/TMessagesProj/config/debug/AndroidManifest.xml
+++ b/TMessagesProj/config/debug/AndroidManifest.xml
@@ -20,7 +20,7 @@
     <permission android:name="org.telegram.multi.beta.permission.C2D_MESSAGE" android:protectionLevel="signature" />
 
     <application
-        android:allowBackup="false"
+        android:allowBackup="allowBackup"
         android:icon="@drawable/ic_launcher"
         android:label="@string/AppNameBeta"
         android:theme="@style/Theme.TMessages.Start"
diff --git a/TMessagesProj/config/debug/AndroidManifest_SDK23.xml b/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
index b7ad69df0..82012f601 100644
--- a/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
+++ b/TMessagesProj/config/debug/AndroidManifest_SDK23.xml
@@ -23,7 +23,7 @@
     <permission android:name="org.telegram.multi.permission.C2D_MESSAGE" android:protectionLevel="signature" />
 
     <application
-        android:allowBackup="false"
+        android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/AppNameBeta"
         android:theme="@style/Theme.TMessages.Start"
diff --git a/TMessagesProj/config/release/AndroidManifest.xml b/TMessagesProj/config/release/AndroidManifest.xml
index 897527ae4..5ecab4d22 100644
--- a/TMessagesProj/config/release/AndroidManifest.xml
+++ b/TMessagesProj/config/release/AndroidManifest.xml
@@ -20,7 +20,7 @@
     <permission android:name="org.telegram.multi.permission.C2D_MESSAGE" android:protectionLevel="signature" />
 
     <application
-        android:allowBackup="false"
+        android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/AppName"
         android:theme="@style/Theme.TMessages.Start"
diff --git a/TMessagesProj/config/release/AndroidManifest_SDK23.xml b/TMessagesProj/config/release/AndroidManifest_SDK23.xml
index b5b74eb41..013deec60 100644
--- a/TMessagesProj/config/release/AndroidManifest_SDK23.xml
+++ b/TMessagesProj/config/release/AndroidManifest_SDK23.xml
@@ -23,7 +23,7 @@
     <permission android:name="org.telegram.multi.permission.C2D_MESSAGE" android:protectionLevel="signature" />
 
     <application
-        android:allowBackup="false"
+        android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/AppName"
         android:theme="@style/Theme.TMessages.Start"
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 36e146554..6c0364a03 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -2,7 +2,6 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="org.telegram.messenger"
     android:installLocation="auto">
-
     <supports-screens
         android:anyDensity="true"
         android:largeScreens="true"
@@ -77,7 +76,7 @@
 
     <application
         android:name="org.telegram.messenger.ApplicationLoader"
-        android:allowBackup="false"
+        android:allowBackup="true"
         android:hardwareAccelerated="@bool/useHardwareAcceleration"
         android:icon="@drawable/ic_launcher"
         android:largeHeap="true"
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 00361619f..992bf0c51 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -119,7 +119,7 @@ public static void postInitApplication() {
 
         applicationInited = true;
         SharedPreferences userID = ApplicationLoader.applicationContext.getSharedPreferences("userID", Context.MODE_PRIVATE);
-        ChangeUserHelper.setUserTag(userID.getString("userID","_user_0"));
+        ChangeUserHelper.setUserTag(userID.getInt("userID",0));
         Log.i("userTAG", "postInitApplication: " + ChangeUserHelper.getUserTag());
         convertConfig();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader2.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader2.java
new file mode 100644
index 000000000..3f4657b80
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader2.java
@@ -0,0 +1,90 @@
+/*
+ * This is the source code of Telegram for Android v. 3.x.x.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013-2017.
+ */
+
+package org.telegram.messenger;
+
+import android.annotation.SuppressLint;
+import android.app.Application;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.content.pm.ApplicationInfo;
+import android.util.Base64;
+
+import org.telegram.tgnet.SerializedData;
+
+import java.io.File;
+import java.io.RandomAccessFile;
+
+public class ApplicationLoader2 extends Application {
+public static String tag;
+    @SuppressLint("StaticFieldLeak")
+    public static volatile Context applicationContext;
+
+    public static void convertConfig2(String tag) {
+        ApplicationLoader2.tag = tag;
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("dataconfig"+tag, Context.MODE_PRIVATE);
+        if (preferences.contains("currentDatacenterId")) {
+            SerializedData buffer = new SerializedData(32 * 1024);
+            buffer.writeInt32(2);
+            buffer.writeBool(preferences.getInt("datacenterSetId", 0) != 0);
+            buffer.writeBool(true);
+            buffer.writeInt32(preferences.getInt("currentDatacenterId", 0));
+            buffer.writeInt32(preferences.getInt("timeDifference", 0));
+            buffer.writeInt32(preferences.getInt("lastDcUpdateTime", 0));
+            buffer.writeInt64(preferences.getLong("pushSessionId", 0));
+            buffer.writeBool(false);
+            buffer.writeInt32(0);
+            try {
+                String datacentersString = preferences.getString("datacenters", null);
+                if (datacentersString != null) {
+                    byte[] datacentersBytes = Base64.decode(datacentersString, Base64.DEFAULT);
+                    if (datacentersBytes != null) {
+                        SerializedData data = new SerializedData(datacentersBytes);
+                        buffer.writeInt32(data.readInt32(false));
+                        buffer.writeBytes(datacentersBytes, 4, datacentersBytes.length - 4);
+                        data.cleanup();
+                    }
+                }
+            } catch (Exception e) {
+                FileLog.e(e);
+            }
+
+            try {
+                File file = new File(getFilesDirFixed()+ tag, "tgnet.dat");
+                RandomAccessFile fileOutputStream = new RandomAccessFile(file, "rws");
+                byte[] bytes = buffer.toByteArray();
+                fileOutputStream.writeInt(Integer.reverseBytes(bytes.length));
+                fileOutputStream.write(bytes);
+                fileOutputStream.close();
+            } catch (Exception e) {
+                FileLog.e(e);
+            }
+            buffer.cleanup();
+            preferences.edit().clear().commit();
+        }
+    }
+
+    public static File getFilesDirFixed() {
+        new File(String.valueOf(applicationContext.getFilesDir())+tag).mkdir();
+        for (int a = 0; a < 10; a++) {
+            File path = ApplicationLoader.applicationContext.getFilesDir();
+            if (path != null) {
+                return path;
+            }
+        }
+        try {
+            ApplicationInfo info = applicationContext.getApplicationInfo();
+            File path = new File(info.dataDir, "files");
+            path.mkdirs();
+            return path;
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
+        return new File("/data/data/org.telegram.messenger/files");
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
index 148972e04..1d18f377d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ChangeUserHelper.java
@@ -7,16 +7,21 @@
  */
 
 public class ChangeUserHelper {
-    private static String userTag = "_user_0";
+    private static String userTag = "_user_";
+    private static int userID = 0;
 
-    static public void setUserTag(String tag) {
-        if(tag != null)
-            userTag = tag;
-        Log.i("userTAG", "getUserTag: " + userTag);
+    static public void setUserTag(int id) {
+        if(id != -1)
+            userID = id;
+        Log.i("userTAG", "getUserTag: " + userTag + userID);
     }
 
     static public String getUserTag() {
-        return userTag;
+        return String.valueOf(userTag + userID);
+    }
+
+    static public int getID() {
+        return userID;
     }
 
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index 738d8a227..3edded20b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -11,6 +11,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.util.Base64;
+import android.util.Log;
 
 import org.telegram.tgnet.SerializedData;
 import org.telegram.tgnet.TLRPC;
@@ -167,6 +168,7 @@ public static void loadConfig() {
                 try {
                     SerializedData data = new SerializedData(configFile);
                     int ver = data.readInt32(false);
+                    Log.i("TGM", "loadConfig: " + String.valueOf(ver));
                     if (ver == 1) {
                         int constructor = data.readInt32(false);
                         currentUser = TLRPC.User.TLdeserialize(data, constructor, false);
@@ -212,16 +214,17 @@ public void run() {
                         lastSendMessageId = -210000;
                     }
                     data.cleanup();
-                    Utilities.stageQueue.postRunnable(new Runnable() {
-                        @Override
-                        public void run() {
-                            saveConfig(true, configFile);
-                        }
-                    });
+//                    Utilities.stageQueue.postRunnable(new Runnable() {
+//                        @Override
+//                        public void run() {
+//                            saveConfig(true, configFile);
+//                        }
+//                    });
                 } catch (Exception e) {
                     FileLog.e(e);
                 }
             } else {
+                Log.i("TGM", "loadConfig: not exists");
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
                 registeredForPush = preferences.getBoolean("registeredForPush", false);
                 pushString = preferences.getString("pushString2", "");
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig2.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig2.java
new file mode 100644
index 000000000..9b2815a32
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig2.java
@@ -0,0 +1,65 @@
+/*
+ * This is the source code of Telegram for Android v. 3.x.x.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013-2017.
+ */
+
+package org.telegram.messenger;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.util.Base64;
+import android.util.Log;
+
+import org.telegram.tgnet.SerializedData;
+import org.telegram.tgnet.TLRPC;
+
+import java.io.File;
+
+public class UserConfig2 {
+
+    private static TLRPC.User currentUser;
+    private final static Object sync = new Object();
+
+
+    public static int getClientUserId() {
+        synchronized (sync) {
+            return currentUser != null ? currentUser.id : 0;
+        }
+    }
+
+    public static TLRPC.User getCurrentUser(String userTag) {
+        synchronized (sync) {
+            UserConfig2.loadConfig(userTag);
+            return currentUser;
+        }
+    }
+
+    public static void setCurrentUser(TLRPC.User user) {
+        synchronized (sync) {
+            currentUser = user;
+        }
+    }
+
+    public static void loadConfig(String userTag) {
+        synchronized (sync) {
+          try {
+            final File configFile = new File(ApplicationLoader.getFilesDirFixed()+ userTag, "user.dat");
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing"+ userTag, Context.MODE_PRIVATE);
+            String string = preferences.getString("user", null);
+            if (string != null) {
+                byte[] bytes = Base64.decode(string, Base64.DEFAULT);
+                if (bytes != null) {
+                    SerializedData data = new SerializedData(bytes);
+                    currentUser = TLRPC.User.TLdeserialize(data, data.readInt32(false), false);
+                    data.cleanup();
+                }
+            }
+          } catch (Exception e) {
+              Log.i("TGM", "loadConfig: " + e.toString());
+          }
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index fe9f0f198..247ef27c9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -117,9 +117,9 @@ private void resetItems() {
             items.add(new Item(10, LocaleController.getString("Calls", R.string.Calls), R.drawable.menu_calls));
         }
         items.add(new Item(7, LocaleController.getString("InviteFriends", R.string.InviteFriends), R.drawable.menu_invite));
+        items.add(new Item(11, LocaleController.getString("Change_another_user", R.string.Change_another_user), R.drawable.menu_invite));
         items.add(new Item(8, LocaleController.getString("Settings", R.string.Settings), R.drawable.menu_settings));
         items.add(new Item(9, LocaleController.getString("TelegramFaq", R.string.TelegramFaq), R.drawable.menu_help));
-        items.add(new Item(11, LocaleController.getString("Change_another_user", R.string.Change_another_user), R.drawable.menu_help));
     }
 
     public int getId(int position) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java
index 30e15a4a6..6b50495be 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/UserItemsAdapter.java
@@ -10,6 +10,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.R;
+import org.telegram.ui.ChangeUserActivity;
 import org.telegram.ui.Components.UserItems;
 
 import java.util.ArrayList;
@@ -20,7 +21,7 @@
 
 public class UserItemsAdapter extends BaseAdapter {
 
-    ArrayList<Object> itemList;
+    ArrayList<Object> itemList = null; //fixed crash on restart activity
 
     public Activity context;
     public LayoutInflater inflater;
@@ -37,7 +38,9 @@ public UserItemsAdapter(Activity context, ArrayList<Object> itemList) {
     @Override
     public int getCount() {
         // TODO Auto-generated method stub
-        return itemList.size();
+        if (itemList != null)
+            return itemList.size();
+        else return 0;
     }
 
     @Override
@@ -59,6 +62,10 @@ public long getItemId(int position) {
         TextView txtViewPhone;
     }
 
+    public void remove(int position){
+        itemList.remove(itemList.get(position));;
+    }
+
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         // TODO Auto-generated method stub
@@ -79,12 +86,13 @@ public View getView(int position, View convertView, ViewGroup parent) {
             holder=(ViewHolder)convertView.getTag();
 
         UserItems userItems = (UserItems) itemList.get(position);
-
-        holder.imgViewPhoto.setImageResource(userItems.getPhoto());
+        if(userItems.getPhoto() == null) holder.imgViewPhoto.setImageBitmap(ChangeUserActivity.book_user);
+        else holder.imgViewPhoto.setImageBitmap(userItems.getPhoto());
         holder.txtViewName.setText(userItems.getName());
         holder.txtViewPhone.setText(userItems.getPhone());
 
         return convertView;
     }
 
+
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
index 4c755e189..76a033342 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUserActivity.java
@@ -3,68 +3,197 @@
 import android.app.Activity;
 import android.app.AlarmManager;
 import android.app.PendingIntent;
+import android.app.ProgressDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.graphics.Shader;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
+//import android.support.design.widget.FloatingActionButton;
+//import android.support.design.widget.Snackbar;
+import android.support.v4.graphics.drawable.RoundedBitmapDrawable;
+import android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory;
 import android.util.Log;
+import android.view.KeyEvent;
 import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
 import android.widget.AdapterView;
 import android.widget.ListView;
 import android.widget.Toast;
 
-import org.telegram.PhoneFormat.PhoneFormat;
+import com.github.clans.fab.FloatingActionButton;
+
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.ApplicationLoader2;
 import org.telegram.messenger.ChangeUserHelper;
-import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.R;
-import org.telegram.messenger.UserConfig;
+import org.telegram.messenger.UserConfig2;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.ui.ActionBar.AlertDialog;
 import org.telegram.ui.Adapters.UserItemsAdapter;
 import org.telegram.ui.Components.UserItems;
 
+import java.io.File;
 import java.util.ArrayList;
 
 public class ChangeUserActivity extends Activity implements AdapterView.OnItemClickListener {
 
-    ListView lvUserList;
-    UserItemsAdapter adapter;
+    ListView lvUserList = null;
+    UserItemsAdapter adapter = null;
     private ArrayList<Object> itemList;
-    private UserItems userItems;
-    private static int usersCount = 1;
+    private UserItems userItems ;
+    public static Bitmap book_user = null;
+    static ProgressDialog prepareProgress;
+    static Context ctx ;
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
+    public void onBackPressed()
+    {
+        System.gc();
+        finish();
+    }
 
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
 
+        book_user = drawableToBitmap(R.drawable.book_user);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_change_user);
+        try {
+            ctx = this;
+            itemList = new ArrayList<Object>();
+            lvUserList = (ListView) findViewById(R.id.users_listview);
+            lvUserList.setOnItemClickListener(this);
+            lvUserList.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
+                @Override
+                public boolean onItemLongClick(AdapterView<?> arg0, View arg1,
+                                               int position, long id) {
+                    // TODO Auto-generated method stub
+                    // TODO deleting user on random position
+                    if (position > 0)
+                        showAlertDeleteUser(position);
+                    return true;
+                }
+            });
+            prepareArrayLits();
+            prepareProgress.dismiss();
+            Thread prepareThread = new Thread(
+                    new Runnable() {
+                        public void run() {
+                            prepareArrayLits();
+                            runOnUiThread(new Runnable() {
+                                public void run() {
+//                                    prepareProgress.dismiss();
+                                }
+                            });
+                        }
+                    }
+            );
+//            prepareThread.start();
+
+            FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+            fab.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    if (lvUserList.getCount() <= 9)
+                        addUser();
+                    else
+                        Toast.makeText(ChangeUserActivity.this, "Maximum 10 users!", Toast.LENGTH_SHORT).show();
+                }
+            });
+        } catch (Throwable th) {
+            Log.i("TGM", "onCreate: " + th.toString());
+        }
+    }
 
-        prepareArrayLits();
-        lvUserList = (ListView) findViewById(R.id.users_listview);
-        adapter = new UserItemsAdapter(this, itemList);
-        lvUserList.setAdapter(adapter);
 
-        lvUserList.setOnItemClickListener(this);
+    public static void showPrepareDialog(Context ctx) {
+        prepareProgress= new ProgressDialog(ctx);
+        prepareProgress.setMessage("Сканирование профилей");
+        prepareProgress.setIndeterminate(false);
+        prepareProgress.setProgressStyle(ProgressDialog.STYLE_SPINNER);
+        prepareProgress.setCancelable(false);
+        prepareProgress.show();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+//        itemList.clear();
+         lvUserList = null;
+         adapter = null;
+         itemList = null;
+         userItems = null;
+         Bitmap book_user = null;
+         System.gc();
+    }
 
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                addUser();
+    private void deleteUser(int position) {
+        SharedPreferences sharedPref = getSharedPreferences("userID", Context.MODE_PRIVATE);
+        sharedPref.edit().putInt("usersCount", getUsersCount() -1).commit();
+        sharedPref.edit().apply();
+        deleteDir(getApplicationInfo().dataDir + "/files_user_" + String.valueOf(position));
+//        Toast.makeText(this, getApplicationInfo().dataDir + "/files_user_" + String.valueOf(position), Toast.LENGTH_SHORT).show();
+        adapter.remove(position);
+        adapter.notifyDataSetChanged();
+    }
+
+    private void showAlertDeleteUser(final int position) {
+        String title = "You are sure?";
+        String message = "Delete user?";
+        String button1String = "Yes";
+        String button2String = "No";
+
+        AlertDialog.Builder ad = new AlertDialog.Builder(this);
+        ad.setTitle(title);
+        ad.setMessage(message);
+        ad.setPositiveButton(button1String, new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int arg1) {
+                deleteUser(position);
             }
         });
-//        TextView userCurrent = (TextView)findViewById(R.id.tvUserCurrent);
-//        TextView tvPnone = (TextView)findViewById(R.id.tvPhone);
-//        Button btUser1 = (Button)findViewById(R.id.setUser1);
-//        Button btUser2 = (Button)findViewById(R.id.setUser2);
+        ad.setNegativeButton(button2String, new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int arg1) {
+
+            }
+        });
+        ad.show();
+    }
+
+    public void deleteDir(String folder) {
+        File dir = new File(folder);
+        if (dir.isDirectory())
+        {
+            String[] children = dir.list();
+            for (int i = 0; i < children.length; i++)
+            {
+                new File(dir, children[i]).delete();
+            }
+            dir.delete();
+        }
     }
 
     public void addUser() {
-        ChangeUserHelper.setUserTag("_user_" + String.valueOf(getUsersCount()));
+        ChangeUserHelper.setUserTag(getUsersCount());
         SharedPreferences sharedPref = getSharedPreferences("userID", Context.MODE_PRIVATE);
-        sharedPref.edit().putString("userID", ChangeUserHelper.getUserTag()).commit();
+        sharedPref.edit().putInt("userID", ChangeUserHelper.getID()).commit();
         sharedPref.edit().putInt("usersCount", getUsersCount() + 1).commit();
         sharedPref.edit().apply();
         Log.i("userTAG", "addUser: tag changed to " + ChangeUserHelper.getUserTag());
@@ -77,9 +206,9 @@ public int getUsersCount() {
     }
 
     public void setUser(int position) {
-        ChangeUserHelper.setUserTag("_user_" + position);
+        ChangeUserHelper.setUserTag(position);
         SharedPreferences sharedPref = getSharedPreferences("userID", Context.MODE_PRIVATE);
-        sharedPref.edit().putString("userID", ChangeUserHelper.getUserTag()).commit();
+        sharedPref.edit().putInt("userID", ChangeUserHelper.getID()).commit();
         sharedPref.edit().apply();
         Log.i("userTAG", "setUser: tag changed to " + ChangeUserHelper.getUserTag());
         restart();
@@ -94,11 +223,6 @@ public void restart() {
         System.exit(2);
     }
 
-    public String getUserTag(String tag) {
-        SharedPreferences userPhone = getSharedPreferences("users" + tag.toString(), Context.MODE_PRIVATE);
-        return userPhone.getString("phone_user1","не задан");
-    }
-
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
         UserItems userItems = (UserItems) adapter.getItem(position);
@@ -107,41 +231,76 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
     }
 
     public void prepareArrayLits()
-    {
-        TLRPC.User user = UserConfig.getCurrentUser();
-        String userName;
-        String userPhone;
-        String userLastName;
-        if (user != null && user.phone != null && user.phone.length() != 0) {
-            userPhone = PhoneFormat.getInstance().format("+" + user.phone);
-        } else {
-            userPhone = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
-        }
-        if (user != null && user.username != null && user.username.length() != 0) {
-            userName =  user.first_name + "@" + user.username;
-            userLastName = user.last_name;
+    {   itemList = new ArrayList<Object>();
+        int usersCount = getUsersCount();
+        for (int i = 0; i < usersCount ; i++) {
+            String first_name = "null";
+            if (getUserByTag("_user_" + i).last_name == null) first_name = getUserByTag("_user_" + i).first_name;
+            else first_name = getUserByTag("_user_" + i).first_name + " " + getUserByTag("_user_" + i).last_name;
+            String phone = getUserByTag("_user_" + i).phone;
+            Bitmap photo = getBitmap(getUserByTag("_user_" + i));
+            if(ChangeUserHelper.getID() == i) first_name += " ---- текущий";
 
-        } else {
-            userName = user.first_name;
-            userLastName = user.last_name;
+            AddObjectToList(photo, first_name, phone);
         }
-//        tvName.setText(userName);
-//        tvPnone.setText(userPhone);
-//        btUser1.setText(getUserTag("_user_0"));
-//        btUser2.setText(getUserTag("_user_1"));
-//        userCurrent.setText("Current user " + userName.toString() + " " + userLastName.toString() + " " + userPhone.toString());
-//        Toast.makeText(this,"Current user " + userName.toString() + " " + userPhone.toString(),Toast.LENGTH_LONG).show();
+        adapter = new UserItemsAdapter(this, itemList);
+        lvUserList.setAdapter(adapter);
+//        System.gc();
+    }
 
+    private TLRPC.User getUserByTag(String tag) {
+        ApplicationLoader2.convertConfig2(tag);
+        TLRPC.User user = UserConfig2.getCurrentUser(tag);
+        return user;
+    }
 
-        itemList = new ArrayList<Object>();
-        int usersCount = getUsersCount();
-        for (int i = 0; i < usersCount ; i++) {
-            AddObjectToList(R.drawable.book_user, "User" , getUserTag("_user_" + i));
+    public Bitmap getBitmap(TLRPC.User user) {
+        RectF bitmapRect;
+        TLRPC.FileLocation photo = null;
+        if (user.photo != null) {
+            photo =user.photo.photo_small;
+        }
+        Bitmap bitmap = null;
+        if (photo != null) {
+            try {
+                File path = FileLoader.getPathToAttach(photo, true);
+                bitmap = BitmapFactory.decodeFile(path.toString());
+                if (bitmap != null) {
+                    int size = AndroidUtilities.dp(58);
+                    Bitmap result = Bitmap.createBitmap(size, size, Bitmap.Config.ARGB_8888);
+                    result.eraseColor(Color.TRANSPARENT);
+                    Canvas canvas = new Canvas(result);
+                    BitmapShader shader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);
+                    Paint roundPaint =  new Paint(Paint.ANTI_ALIAS_FLAG);
+                    bitmapRect = new RectF();
+                    float scale = size / (float) bitmap.getWidth();
+                    canvas.save();
+                    canvas.scale(scale, scale);
+                    roundPaint.setShader(shader);
+                    bitmapRect.set(0, 0, bitmap.getWidth(), bitmap.getHeight());
+                    canvas.drawRoundRect(bitmapRect, bitmap.getWidth(), bitmap.getHeight(), roundPaint);
+                    canvas.restore();
+                    Drawable drawable = ApplicationLoader.applicationContext.getResources().getDrawable(R.drawable.book_logo);
+                    int w = AndroidUtilities.dp(15);
+                    drawable.setBounds(drawable.getBounds().left, drawable.getBounds().top, drawable.getBounds().right, drawable.getBounds().bottom);
+                    drawable.draw(canvas);
+                    try {
+                        canvas.setBitmap(null);
+                    } catch (Exception e) {
+                        //don't promt, this will crash on 2.x
+                    }
+                    bitmap = result;
+                    return bitmap;
+                }
+            } catch (Throwable e) {
+                Log.i("TGM", "getBitmap: " + e.toString());
+            }
         }
+        return null;
     }
 
     // Add one item into the Array List
-    public void AddObjectToList(int image, String title, String desc)
+    public void AddObjectToList(Bitmap image, String title, String desc)
     {
         userItems = new UserItems();
         userItems.setPhone(desc);
@@ -149,4 +308,13 @@ public void AddObjectToList(int image, String title, String desc)
         userItems.setName(title);
         itemList.add(userItems);
     }
+
+    public Bitmap drawableToBitmap (int drawable) {
+        Bitmap b = null;
+        Drawable d = getResources().getDrawable(drawable);
+        Drawable currentState = d.getCurrent();
+        if(currentState instanceof BitmapDrawable)
+            b = ((BitmapDrawable)currentState).getBitmap();
+        return b;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java
index 56b708505..af433cd69 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/UserItems.java
@@ -1,5 +1,7 @@
 package org.telegram.ui.Components;
 
+import android.graphics.Bitmap;
+
 /**
  * Created by oleg.svs on 22.05.2017.
  */
@@ -7,7 +9,7 @@
 public class UserItems {
     String userName;
     String userPhone;
-    int userPhoto;
+    Bitmap userPhoto;
 
     public String getName() {
         return userName;
@@ -25,11 +27,11 @@ public void setPhone(String userPhone) {
         this.userPhone = userPhone;
     }
 
-    public int getPhoto() {
+    public Bitmap getPhoto() {
         return userPhoto;
     }
 
-    public void setPhoto(int image) {
+    public void setPhoto(Bitmap userPhoto) {
         this.userPhoto = userPhoto;
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 7b9d3f1ac..21cff3059 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -390,9 +390,10 @@ public void onItemClick(View view, int position) {
                     drawerLayoutContainer.closeDrawer(false);
                 } else if (id == 11) {
 //                    presentFragment(new CallLogActivity());
+                    drawerLayoutContainer.closeDrawer(false);
                     Intent changeUser = new Intent(getApplicationContext(), ChangeUserActivity.class);
+                    ChangeUserActivity.showPrepareDialog(LaunchActivity.this);
                     startActivity(changeUser);
-                    drawerLayoutContainer.closeDrawer(false);
                 }
             }
         });
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index c9cc59b93..9e626ae9e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -1038,8 +1038,6 @@ public void onNextPressed() {
                 params.putString("ephone", "+" + phone);
             }
             params.putString("phoneFormated", phone);
-            SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
-            users.edit().putString("phone_user1", phone).commit();
             nextPressed = true;
             needShowProgress();
             ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
@@ -2796,6 +2794,9 @@ public void onNextPressed() {
             req.phone_number = requestPhone;
             req.first_name = firstNameField.getText().toString();
             req.last_name = lastNameField.getText().toString();
+            SharedPreferences users = ApplicationLoader.applicationContext.getSharedPreferences("users"+ ChangeUserHelper.getUserTag(), Context.MODE_PRIVATE);
+            users.edit().putString("phone_user1", req.phone_number).commit();
+            users.edit().putString("name__user1", req.first_name + " " + req.last_name).commit();
             needShowProgress();
             ConnectionsManager.getInstance().sendRequest(req, new RequestDelegate() {
                 @Override
@@ -2816,7 +2817,7 @@ public void run() {
                                 ArrayList<TLRPC.User> users = new ArrayList<>();
                                 users.add(res.user);
                                 MessagesStorage.getInstance().putUsersAndChats(users, null, true, true);
-                                //MessagesController.getInstance().uploadAndApplyUserAvatar(avatarPhotoBig);
+//                                MessagesController.getInstance().uploadAndApplyUserAvatar(avatarPhotoBig);
                                 MessagesController.getInstance().putUser(res.user, false);
                                 ContactsController.getInstance().checkAppAccount();
                                 MessagesController.getInstance().getBlockedUsers(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 33704abca..f0aa7e92e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -833,6 +833,7 @@ public boolean scaleToFill() {
                 object.dialogId = UserConfig.getClientUserId();
                 object.thumb = object.imageReceiver.getBitmap();
                 object.size = -1;
+                avatarImage.getImageReceiver().getThumbLocation();
                 object.radius = avatarImage.getImageReceiver().getRoundRadius();
                 object.scale = avatarImage.getScaleX();
                 return object;
@@ -841,6 +842,28 @@ public boolean scaleToFill() {
         return null;
     }
 
+    public Bitmap getBitmap(TLRPC.User user) {
+        if (user != null && user.photo != null && user.photo.photo_big != null) {
+            TLRPC.FileLocation photoBig = user.photo.photo_big;
+            int coords[] = new int[2];
+            avatarImage.getLocationInWindow(coords);
+            PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
+            object.viewX = coords[0];
+            object.viewY = coords[1] - (Build.VERSION.SDK_INT >= 21 ? 0 : AndroidUtilities.statusBarHeight);
+            object.parentView = avatarImage;
+            object.imageReceiver = avatarImage.getImageReceiver();
+            object.dialogId = UserConfig.getClientUserId();
+            object.thumb = object.imageReceiver.getBitmap();
+            object.size = -1;
+            avatarImage.getImageReceiver().getBitmap();
+            object.radius = avatarImage.getImageReceiver().getRoundRadius();
+            object.scale = avatarImage.getScaleX();
+            return avatarImage.getImageReceiver().getBitmap();
+
+        }
+        return null;
+    }
+
     @Override
     public Bitmap getThumbForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
         return null;
diff --git a/TMessagesProj/src/main/res/layout/activity_change_user.xml b/TMessagesProj/src/main/res/layout/activity_change_user.xml
index 8b11891cf..66f338bb9 100644
--- a/TMessagesProj/src/main/res/layout/activity_change_user.xml
+++ b/TMessagesProj/src/main/res/layout/activity_change_user.xml
@@ -9,18 +9,18 @@ android:layout_height="match_parent">
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_centerVertical="true"
+        android:longClickable="true"
         android:theme="@style/Theme.TMessages"
         android:layout_centerHorizontal="true" />
 
-      <android.support.design.widget.FloatingActionButton
+      <com.github.clans.fab.FloatingActionButton
           android:id="@+id/fab"
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:layout_gravity="bottom|end"
           android:layout_margin="@dimen/fab_margin"
-          android:theme="@style/Theme.AppCompat.Light"
+          android:src="@drawable/attach_contact"
           android:layout_alignParentBottom="true"
-          android:layout_alignParentRight="true"
-          app:srcCompat="@drawable/ic_add_black_24dp" />
+          android:layout_alignParentRight="true" />
 
 </RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/user_list_item.xml b/TMessagesProj/src/main/res/layout/user_list_item.xml
index e175f3d77..f7b5ffc00 100644
--- a/TMessagesProj/src/main/res/layout/user_list_item.xml
+++ b/TMessagesProj/src/main/res/layout/user_list_item.xml
@@ -13,7 +13,6 @@
         android:id="@+id/userPhoto"
         android:src="@drawable/book_user"
         android:layout_alignParentLeft="true"
-        android:theme="@style/Theme.AppCompat.Light"
         android:layout_centerInParent="true"
         android:scaleType="center">
     </ImageView>
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
index e72c72e6e..c54962c60 100644
--- a/TMessagesProj/src/main/res/values-ru/strings.xml
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -103,7 +103,7 @@
   <string name="Connecting">Подключение...</string>
   <string name="Updating">Обновление...</string>
   <string name="NewSecretChat">Создать секретный чат</string>
-  <string name="Change_another_user">Сменить пользователя</string>
+  <string name="Change_another_user">Мультиюзер</string>
   <string name="AwaitingEncryption">Ждём, когда %s появится в сети...</string>
   <string name="EncryptionRejected">Секретный чат отменён</string>
   <string name="EncryptionProcessing">Обмен ключами шифрования...</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 03b89a23f..b9552050f 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -102,7 +102,7 @@
     <string name="Connecting">Connecting...</string>
     <string name="Updating">Updating...</string>
     <string name="NewSecretChat">New Secret Chat</string>
-    <string name="Change_another_user">Change user</string>
+    <string name="Change_another_user">Multiuser</string>
     <string name="AwaitingEncryption">Waiting for %s to get online...</string>
     <string name="EncryptionRejected">Secret chat cancelled</string>
     <string name="EncryptionProcessing">Exchanging encryption keys...</string>
