diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index ec544ca0c..286efb3f8 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -13,14 +13,18 @@
 import android.location.Location;
 
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.dto.Coordinates;
+import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
 import org.telegram.messenger.dto.PostResponse;
 import org.telegram.messenger.dto.Venue;
 import org.telegram.messenger.service.mock.PostServiceMock;
 import org.telegram.messenger.service.mock.VenueServiceMock;
 import org.telegram.ui.LocationActivityAragats;
+import org.telegram.utils.StringUtils;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.ConcurrentHashMap;
 
@@ -126,7 +130,7 @@ public void loadPosts(final int offset, final int count, boolean reload, boolean
         }
         loadingPosts = true;
         Location location = LocationActivityAragats.getLastLocation();
-        if(location == null) {
+        if (location == null) {
             loadingPosts = false;
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
             return;
@@ -162,8 +166,22 @@ public void processLoadedPosts(PostResponse postResponse, final int offset, fina
     }
 
 
-    public void loadCurrentVenue(String location) {
-        this.currentVenue = VenueServiceMock.getRandomVenue();
+    public void loadCurrentVenue(String loc) {
+        Location location = LocationActivityAragats.getLastLocation();
+        if(location == null) {
+//            NotificationCenter.getInstance().postNotificationName(NotificationCenter.undefinedLocation);
+            return;
+        }
+        Venue venue = new Venue();
+        Coordinates coordinates = new Coordinates();
+        coordinates.setCoordinates(Arrays.asList(location.getLongitude(), location.getLatitude()));
+        coordinates.setType("Point");
+        venue.setCoordinates(coordinates);
+        if (StringUtils.isEmpty(venue.getAddress())) {
+            venue.setAddress(location.getLongitude() + ", " + location.getLatitude());
+        }
+//        this.currentVenue = VenueServiceMock.getRandomVenue();
+        this.currentVenue = venue;
     }
 
     public Venue getCurrentVenue() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
index 58d4d5986..2013b21ee 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PostMediaCell.java
@@ -495,7 +495,9 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
 
         //DELETE BUTTON
         Drawable buttonDrawable = ResourceLoader.audioStatesDrawable[4][0];
-        setDrawableBounds(buttonDrawable, buttonX, buttonY);
+//        setDrawableBounds(buttonDrawable, buttonX, buttonY);
+        setDrawableBounds(buttonDrawable, buttonX + AndroidUtilities.dp(3), buttonY + AndroidUtilities.dp(3)); // I took it from deleteProgressRect.set(
+
         buttonDrawable.draw(canvas);
 
 //        ImageView imageView = new ImageView(this.getContext());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 4353f53a2..e73a97e29 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -118,12 +118,12 @@
 
     private Post selectedObject;
     private boolean wasPaused = false;
-    private TLRPC.WebPage foundWebPage;
     private Runnable waitingForCharaterEnterRunnable;
 
     private boolean openAnimationEnded = false;
 
 
+    //TODO - here are post for ???
     protected ArrayList<Post> posts = new ArrayList<>();
     protected Venue venue;
 
@@ -881,7 +881,7 @@ private void checkAndUpdateAvatar() {
 //            avatarImageView.setImage(newPhoto, "50_50", avatarDrawable);
 //            avatarImageView.setImage("/storage/emulated/0/Telegram/Telegram Images/730111210_6623.jpg", "50_50", avatarDrawable);
             //TODO probably save venue. into field in Activity.
-            if (venue != null && !StringUtils.isEmpty(venue.getPreviewImage().getUrl())) {
+            if (venue != null && venue.getPreviewImage() != null && !StringUtils.isEmpty(venue.getPreviewImage().getUrl())) {
                 avatarImageView.setImage(venue.getPreviewImage().getUrl(), "50_50", avatarDrawable);
             } else {
                 avatarImageView.setImageResource(R.drawable.pin);
@@ -1038,6 +1038,10 @@ public void onResume() {
             photos.add(lastPhotoURL);
             didSelectPhotos(photos);
         }
+        venue = PostsController.getInstance().getCurrentVenue();
+        PostsController.getInstance().setCurrentVenue(null);
+        updateVenue();
+
 
         if (bottomOverlayChat.getVisibility() != View.VISIBLE) {
             postCreateActivityEnterView.setFieldFocused(true);
@@ -1075,6 +1079,7 @@ public void onPause() {
                     editor.putString("new_post_photo", posts.get(0).getImage().getUrl());
                 }
                 editor.commit();
+                PostsController.getInstance().setCurrentVenue(venue);
             }
             postCreateActivityEnterView.setFieldFocused(false);
         }
@@ -1329,7 +1334,7 @@ public void updatePhotoAtIndex(int index) {
                 PostMediaCell cell = (PostMediaCell) view;
                 Post post = cell.getPost();
                 if (post != null && !StringUtils.isEmpty(post.getId())
-                        &&  post.getId().equals(postObject.getId())) {
+                        && post.getId().equals(postObject.getId())) {
                     postToOpen = post;
                     imageReceiver = cell.getPhotoImage();
                 }
@@ -1605,6 +1610,7 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
                     venue.setAddress(location.geo._long + ", " + location.geo.lat);
                 }
                 PostCreateActivity.this.venue = venue;
+                PostsController.getInstance().setCurrentVenue(venue);
 //                location.iconUrl;
 //                Toast.makeText(getParentActivity(), location.venue_id + " " + location.geo.lat + " " + location.geo._long, Toast.LENGTH_LONG).show();
 //                            SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index a8de84d52..71731f216 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -11,14 +11,17 @@
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
 import android.annotation.SuppressLint;
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.content.Intent;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.Outline;
 import android.os.Build;
 import android.os.Bundle;
+import android.provider.Settings;
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -47,6 +50,7 @@
 import org.telegram.android.PostsController;
 import org.telegram.android.support.widget.LinearLayoutManager;
 import org.telegram.android.support.widget.RecyclerView;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 //TODO delte it or reuse.
@@ -672,18 +676,24 @@ public void didReceivedNotification(int id, Object... args) {
             if (swipeRefreshLayout != null) {
                 swipeRefreshLayout.setRefreshing(false);
             }
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-            builder.setTitle("Whats going on?");
-            builder.setMessage("Please, enable gps on your phone.");
-            builder.setPositiveButton("OK", null);
-//            builder.setPositiveButton(LocaleController.getString("ClearButton", R.string.ClearButton).toUpperCase(), new DialogInterface.OnClickListener() {
-//                @Override
-//                public void onClick(DialogInterface dialogInterface, int i) {
-//                    postsSearchAdapter.clearRecentHashtags();
-//                }
-//            });
-            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-            showDialog(builder.create());
+            Activity context = getParentActivity();
+            if(context != null) {
+                AlertDialog.Builder builder = new AlertDialog.Builder(context);
+                builder.setTitle("Whats going on?");
+                builder.setMessage("Please, enable gps on your phone.");
+//            builder.setPositiveButton("OK", null);
+                builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        Intent myIntent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
+                        //TODO example of invoking application context
+                        Context applicationContext = ApplicationLoader.applicationContext;
+                        PostsActivity.this.getParentActivity().startActivity(myIntent);
+                    }
+                });
+                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                showDialog(builder.create());
+            }
         } else if (id == NotificationCenter.postRequestFinished) {
             if (swipeRefreshLayout != null) {
                 swipeRefreshLayout.setRefreshing(false);
