diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
index 182b51525..9ad9bef3f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
@@ -160,6 +160,7 @@
     public static final int notificationsCountUpdated = totalEvents++;
     public static final int playerDidStartPlaying = totalEvents++;
     public static final int closeSearchByActiveAction = totalEvents++;
+    public static final int didRequestRemoveUser = totalEvents++;
 
     private SparseArray<ArrayList<Object>> observers = new SparseArray<>();
     private SparseArray<ArrayList<Object>> removeAfterBroadcast = new SparseArray<>();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatUsersActivity.java
index fb139c3a8..58c47493d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatUsersActivity.java
@@ -29,6 +29,9 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
@@ -54,10 +57,10 @@
 import org.telegram.ui.Cells.GraySectionCell;
 import org.telegram.ui.Cells.HeaderCell;
 import org.telegram.ui.Cells.ManageChatTextCell;
+import org.telegram.ui.Cells.ManageChatUserCell;
 import org.telegram.ui.Cells.ShadowSectionCell;
 import org.telegram.ui.Cells.TextCheckCell2;
 import org.telegram.ui.Cells.TextInfoPrivacyCell;
-import org.telegram.ui.Cells.ManageChatUserCell;
 import org.telegram.ui.Cells.TextSettingsCell;
 import org.telegram.ui.Components.EmptyTextProgressView;
 import org.telegram.ui.Components.LayoutHelper;
@@ -67,9 +70,6 @@
 import java.util.Collections;
 import java.util.HashMap;
 
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
 public class ChatUsersActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
 
     private ListAdapter listViewAdapter;
@@ -79,6 +79,8 @@
     private ActionBarMenuItem searchItem;
     private ActionBarMenuItem doneItem;
 
+    private AlertDialog progressDialog;
+
     private TLRPC.Chat currentChat;
     private TLRPC.ChatFull info;
     private boolean isChannel;
@@ -316,6 +318,7 @@ private void updateRows() {
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
         NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.chatInfoDidLoad);
+        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.didRequestRemoveUser);
         loadChatParticipants(0, 200);
         return true;
     }
@@ -324,6 +327,7 @@ public boolean onFragmentCreate() {
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
         NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.chatInfoDidLoad);
+        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.didRequestRemoveUser);
     }
 
     @Override
@@ -492,6 +496,7 @@ public void didSelectUsers(ArrayList<TLRPC.User> users, int fwdCount) {
                                 for (int a = 0, N = users.size(); a < N; a++) {
                                     TLRPC.User user = users.get(a);
                                     MessagesController.getInstance(currentAccount).addUserToChat(chatId, user, null, fwdCount, null, ChatUsersActivity.this, null);
+                                    showProgressDialog();
                                 }
                             }
 
@@ -827,6 +832,7 @@ private void removeUser(int userId) {
         TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(userId);
         MessagesController.getInstance(currentAccount).deleteUserFromChat(chatId, user, null);
         finishFragment();
+        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.didRequestRemoveUser, null);
     }
 
     private TLObject getAnyParticipant(int userId) {
@@ -1148,7 +1154,11 @@ private boolean createMenuForParticipant(final TLObject participant, boolean res
 
     @Override
     public void didReceivedNotification(int id, int account, Object... args) {
+        if (id == NotificationCenter.didRequestRemoveUser && !isFinishing()) {
+            showProgressDialog();
+        }
         if (id == NotificationCenter.chatInfoDidLoad) {
+            hideProgressDialog();
             TLRPC.ChatFull chatFull = (TLRPC.ChatFull) args[0];
             boolean byChannelUsers = (Boolean) args[2];
             if (chatFull.id == chatId && (!byChannelUsers || !ChatObject.isChannel(currentChat))) {
@@ -2412,4 +2422,15 @@ public TLObject getItem(int position) {
                 new ThemeDescription(listView, ThemeDescription.FLAG_CHECKTAG, new Class[]{ManageChatTextCell.class}, new String[]{"textView"}, null, null, null, Theme.key_windowBackgroundWhiteBlueIcon),
         };
     }
+
+    private void showProgressDialog(){
+        if(progressDialog!=null && progressDialog.isShowing()) return;
+        progressDialog = new AlertDialog(getParentActivity(), 3);
+        progressDialog.setCanCacnel(false);
+        progressDialog.show();
+    }
+
+    private void hideProgressDialog(){
+        if (progressDialog != null && progressDialog.isShowing()) progressDialog.dismiss();
+    }
 }
