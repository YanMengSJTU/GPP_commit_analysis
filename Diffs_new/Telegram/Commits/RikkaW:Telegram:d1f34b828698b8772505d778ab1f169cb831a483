diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index e87d4072c..b3dbd7208 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -81,7 +81,7 @@ android {
         }
     }
 
-    defaultConfig.versionCode = 851 + 15
+    defaultConfig.versionCode = 851 + 17
 
     sourceSets.debug {
         manifest.srcFile 'config/debug/AndroidManifest.xml'
@@ -121,7 +121,7 @@ android {
     defaultConfig {
         minSdkVersion 21
         targetSdkVersion 25
-        versionName "3.13.1.15"
+        versionName "3.13.1.17"
 
         buildConfigField "String", "BASE64_PUBLIC_KEY", "\"${base64_public_key}\""
 
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index d073e1f1a..1102390b5 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -3,6 +3,8 @@
     package="org.telegram.messenger"
     android:installLocation="auto">
 
+    <uses-permission android:name="com.android.vending.BILLING" />
+
     <supports-screens android:anyDensity="true"
                       android:largeScreens="true"
                       android:normalScreens="true"
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
index db96a510a..5d11ae2bd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java
@@ -73,7 +73,7 @@
     public static final int CHAT_ADD_CONTACT_TEXT_COLOR = 0xff4a82b5;
     public static final int CHAT_REPORT_SPAM_TEXT_COLOR = 0xffcf5957;
     public static final int CHAT_BOTTOM_OVERLAY_TEXT_COLOR = 0xff7f7f7f;
-    public static final int CHAT_BOTTOM_CHAT_OVERLAY_TEXT_COLOR = 0xff3a8ccf;
+    public static int CHAT_BOTTOM_CHAT_OVERLAY_TEXT_COLOR = 0xff3a8ccf;
     public static final int CHAT_GIF_HINT_TEXT_COLOR = 0xffffffff;
     public static final int CHAT_EMPTY_VIEW_TEXT_COLOR = 0xffffffff;
     public static final int CHAT_SEARCH_COUNT_TEXT_COLOR = 0xff4e9ad4;
@@ -85,7 +85,7 @@
     public static int REPLY_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
     public static int REPLY_PANEL_MESSAGE_TEXT_COLOR = 0xff222222;
 
-    public static final int ALERT_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int ALERT_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
     public static int ALERT_PANEL_MESSAGE_TEXT_COLOR = 0xff999999;
 
     public static int AUTODOWNLOAD_SHEET_SAVE_TEXT_COLOR = 0xff3a8ccf;
@@ -101,12 +101,12 @@
     public static int SHARE_SHEET_BADGE_TEXT_COLOR = 0xffffffff;
 
     public static final int STICKERS_SHEET_TITLE_TEXT_COLOR = 0xff212121;
-    public static final int STICKERS_SHEET_SEND_TEXT_COLOR = 0xff3a8ccf;
-    public static final int STICKERS_SHEET_ADD_TEXT_COLOR = 0xff3a8ccf;
-    public static final int STICKERS_SHEET_CLOSE_TEXT_COLOR = 0xff3a8ccf;
-    public static final int STICKERS_SHEET_REMOVE_TEXT_COLOR = 0xffcd5a5a;
+    public static int STICKERS_SHEET_SEND_TEXT_COLOR = 0xff3a8ccf;
+    public static int STICKERS_SHEET_ADD_TEXT_COLOR = 0xff3a8ccf;
+    public static int STICKERS_SHEET_CLOSE_TEXT_COLOR = 0xff3a8ccf;
+    public static int STICKERS_SHEET_REMOVE_TEXT_COLOR = 0xffcd5a5a;
 
-    public static final int PINNED_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
+    public static int PINNED_PANEL_NAME_TEXT_COLOR = 0xff3a8ccf;
     public static int PINNED_PANEL_MESSAGE_TEXT_COLOR = 0xff999999;
 
     public static final int SECRET_CHAT_INFO_TEXT_COLOR = 0xffffffff;
@@ -421,6 +421,8 @@ private static void resetColor(Context context) {
         EmojiView.BACKGROUND_COLOR = ContextCompat.getColor(context, R.color.sticker_select_background);
         EmojiView.INDICATOR_COLOR = ContextCompat.getColor(context, R.color.sticker_indicator_background);
 
+        STICKERS_SHEET_REMOVE_TEXT_COLOR = ContextCompat.getColor(context, R.color.sheet_danger_action);
+
         AUTODOWNLOAD_SHEET_SAVE_TEXT_COLOR = accent;
 
         DIALOGS_NAME_TEXT_COLOR = DIALOGS_ATTACH_TEXT_COLOR = DIALOGS_PRINTING_TEXT_COLOR = ContextCompat.getColor(context, R.color.dialog_name);
@@ -541,6 +543,18 @@ private static void resetColor(Context context) {
         MSG_LINK_TEXT_COLOR = ContextCompat.getColor(context, R.color.msg_link_text);
         MSG_LINK_SELECT_BACKGROUND_COLOR = 0x3362a9e3;
         MSG_TEXT_SELECT_BACKGROUND_COLOR = 0x6662a9e3;
+
+        CHAT_BOTTOM_CHAT_OVERLAY_TEXT_COLOR = accent;
+        REPLY_PANEL_NAME_TEXT_COLOR = accent;
+        ALERT_PANEL_NAME_TEXT_COLOR = accent;
+        AUTODOWNLOAD_SHEET_SAVE_TEXT_COLOR = accent;
+        STICKERS_SHEET_SEND_TEXT_COLOR = accent;
+        STICKERS_SHEET_ADD_TEXT_COLOR = accent;
+        STICKERS_SHEET_CLOSE_TEXT_COLOR = accent;
+        PINNED_PANEL_NAME_TEXT_COLOR = accent;
+        MSG_IN_VIA_BOT_NAME_TEXT_COLOR = accent;
+        MSG_IN_REPLY_NAME_TEXT_COLOR = accent;
+        MSG_IN_SITE_NAME_TEXT_COLOR = accent;
     }
 
     public static void loadChatResources(Context context) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
index 914a00352..40a603c8c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CacheControlActivity.java
@@ -44,6 +44,7 @@
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.BottomSheet;
+import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.CheckBoxCell;
 import org.telegram.ui.Cells.TextInfoPrivacyCell;
@@ -521,7 +522,7 @@ public void onClick(View v) {
                     BottomSheet.BottomSheetCell cell = new BottomSheet.BottomSheetCell(getParentActivity(), 1);
                     cell.setBackgroundResource(R.drawable.list_selector);
                     cell.setTextAndIcon(LocaleController.getString("ClearMediaCache", R.string.ClearMediaCache).toUpperCase(), 0);
-                    cell.setTextColor(0xffcd5a5a);
+                    cell.setTextColor(Theme.STICKERS_SHEET_REMOVE_TEXT_COLOR);
                     cell.setOnClickListener(new View.OnClickListener() {
                         @Override
                         public void onClick(View v) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 01ac3b6af..e8364e45e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -12,6 +12,8 @@
 import android.content.res.Configuration;
 import android.graphics.Canvas;
 import android.graphics.Paint;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffXfermode;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.support.v4.content.ContextCompat;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
index 0585fba7f..def12b8f9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
@@ -73,7 +73,7 @@ protected void onDraw(Canvas canvas) {
             if (ApplicationLoader.isCustomTheme() && ApplicationLoader.getCachedWallpaper() != null) {
                 paint.setColor(ApplicationLoader.getServiceMessageColor());
             } else {
-                paint.setColor(0xff427ba9);
+                paint.setColor(0x23000000);
             }
             canvas.drawCircle(getMeasuredWidth() / 2.0f, getMeasuredHeight() / 2.0f, AndroidUtilities.dp(34) / 2.0f, paint);
             int l = (getMeasuredWidth() - AndroidUtilities.dp(33)) / 2;
@@ -107,7 +107,7 @@ protected void onDraw(Canvas canvas) {
             if (ApplicationLoader.isCustomTheme() && ApplicationLoader.getCachedWallpaper() != null) {
                 paint.setColor(ApplicationLoader.getServiceMessageColor());
             } else {
-                paint.setColor(0xff427ba9);
+                paint.setColor(0x23000000);
             }
             canvas.drawCircle(getMeasuredWidth() / 2.0f, getMeasuredHeight() / 2.0f, AndroidUtilities.dp(34) / 2.0f, paint);
             int l = (getMeasuredWidth() - AndroidUtilities.dp(24)) / 2;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
index 4c09b2573..87fab6b12 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
@@ -11,6 +11,7 @@
 import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -117,7 +118,7 @@ public boolean onTouch(View v, MotionEvent event) {
         textView = new TextView(context);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
         textView.setGravity(Gravity.CENTER_HORIZONTAL);
-        textView.setTextColor(0xff4d83b3);
+        textView.setTextColor(ContextCompat.getColor(context, R.color.colorAccent) /*0xff4d83b3*/);
         textView.setText(LocaleController.getString("PhoneNumberChange", R.string.PhoneNumberChange));
         textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         textView.setPadding(0, AndroidUtilities.dp(10), 0, AndroidUtilities.dp(10));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index c0b3141b2..f2664c979 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -215,7 +215,7 @@ private boolean checkUserName(final String name, boolean alert) {
         if (name != null) {
             if (name.startsWith("_") || name.endsWith("_")) {
                 checkTextView.setText(LocaleController.getString("UsernameInvalid", R.string.UsernameInvalid));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                 return false;
             }
             for (int a = 0; a < name.length(); a++) {
@@ -225,7 +225,7 @@ private boolean checkUserName(final String name, boolean alert) {
                         showErrorAlert(LocaleController.getString("UsernameInvalidStartNumber", R.string.UsernameInvalidStartNumber));
                     } else {
                         checkTextView.setText(LocaleController.getString("UsernameInvalidStartNumber", R.string.UsernameInvalidStartNumber));
-                        checkTextView.setTextColor(0xffcf3030);
+                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     }
                     return false;
                 }
@@ -234,7 +234,7 @@ private boolean checkUserName(final String name, boolean alert) {
                         showErrorAlert(LocaleController.getString("UsernameInvalid", R.string.UsernameInvalid));
                     } else {
                         checkTextView.setText(LocaleController.getString("UsernameInvalid", R.string.UsernameInvalid));
-                        checkTextView.setTextColor(0xffcf3030);
+                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     }
                     return false;
                 }
@@ -245,7 +245,7 @@ private boolean checkUserName(final String name, boolean alert) {
                 showErrorAlert(LocaleController.getString("UsernameInvalidShort", R.string.UsernameInvalidShort));
             } else {
                 checkTextView.setText(LocaleController.getString("UsernameInvalidShort", R.string.UsernameInvalidShort));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             }
             return false;
         }
@@ -254,7 +254,7 @@ private boolean checkUserName(final String name, boolean alert) {
                 showErrorAlert(LocaleController.getString("UsernameInvalidLong", R.string.UsernameInvalidLong));
             } else {
                 checkTextView.setText(LocaleController.getString("UsernameInvalidLong", R.string.UsernameInvalidLong));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             }
             return false;
         }
@@ -266,7 +266,7 @@ private boolean checkUserName(final String name, boolean alert) {
             }
             if (name.equals(currentName)) {
                 checkTextView.setText(LocaleController.formatString("UsernameAvailable", R.string.UsernameAvailable, name));
-                checkTextView.setTextColor(0xff26972c);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_ok));
                 return true;
             }
 
@@ -288,11 +288,11 @@ public void run() {
                                     if (lastCheckName != null && lastCheckName.equals(name)) {
                                         if (error == null && response instanceof TLRPC.TL_boolTrue) {
                                             checkTextView.setText(LocaleController.formatString("UsernameAvailable", R.string.UsernameAvailable, name));
-                                            checkTextView.setTextColor(0xff26972c);
+                                            checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_ok));
                                             lastNameAvailable = true;
                                         } else {
                                             checkTextView.setText(LocaleController.getString("UsernameInUse", R.string.UsernameInUse));
-                                            checkTextView.setTextColor(0xffcf3030);
+                                            checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                                             lastNameAvailable = false;
                                         }
                                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
index 203d18f4b..d455fb854 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelCreateActivity.java
@@ -887,7 +887,7 @@ private void updatePrivatePublic() {
         }
         if (!isPrivate && !canCreatePublic) {
             typeInfoCell.setText(LocaleController.getString("ChangePublicLimitReached", R.string.ChangePublicLimitReached));
-            typeInfoCell.setTextColor(0xffcf3030);
+            typeInfoCell.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             linkContainer.setVisibility(View.GONE);
             sectionCell.setVisibility(View.GONE);
             if (loadingAdminedChannels) {
@@ -1133,31 +1133,31 @@ private boolean checkUserName(final String name) {
         if (name != null) {
             if (name.startsWith("_") || name.endsWith("_")) {
                 checkTextView.setText(LocaleController.getString("LinkInvalid", R.string.LinkInvalid));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                 return false;
             }
             for (int a = 0; a < name.length(); a++) {
                 char ch = name.charAt(a);
                 if (a == 0 && ch >= '0' && ch <= '9') {
                     checkTextView.setText(LocaleController.getString("LinkInvalidStartNumber", R.string.LinkInvalidStartNumber));
-                    checkTextView.setTextColor(0xffcf3030);
+                    checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     return false;
                 }
                 if (!(ch >= '0' && ch <= '9' || ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z' || ch == '_')) {
                     checkTextView.setText(LocaleController.getString("LinkInvalid", R.string.LinkInvalid));
-                    checkTextView.setTextColor(0xffcf3030);
+                    checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     return false;
                 }
             }
         }
         if (name == null || name.length() < 5) {
             checkTextView.setText(LocaleController.getString("LinkInvalidShort", R.string.LinkInvalidShort));
-            checkTextView.setTextColor(0xffcf3030);
+            checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             return false;
         }
         if (name.length() > 32) {
             checkTextView.setText(LocaleController.getString("LinkInvalidLong", R.string.LinkInvalidLong));
-            checkTextView.setTextColor(0xffcf3030);
+            checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             return false;
         }
 
@@ -1180,7 +1180,7 @@ public void run() {
                                 if (lastCheckName != null && lastCheckName.equals(name)) {
                                     if (error == null && response instanceof TLRPC.TL_boolTrue) {
                                         checkTextView.setText(LocaleController.formatString("LinkAvailable", R.string.LinkAvailable, name));
-                                        checkTextView.setTextColor(0xff26972c);
+                                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_ok));
                                         lastNameAvailable = true;
                                     } else {
                                         if (error != null && error.text.equals("CHANNELS_ADMIN_PUBLIC_TOO_MUCH")) {
@@ -1189,7 +1189,7 @@ public void run() {
                                         } else {
                                             checkTextView.setText(LocaleController.getString("LinkInUse", R.string.LinkInUse));
                                         }
-                                        checkTextView.setTextColor(0xffcf3030);
+                                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                                         lastNameAvailable = false;
                                     }
                                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditTypeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditTypeActivity.java
index 9f39e1dbe..9eb798e94 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditTypeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChannelEditTypeActivity.java
@@ -470,7 +470,7 @@ private void updatePrivatePublic() {
         }
         if (!isPrivate && !canCreatePublic) {
             typeInfoCell.setText(LocaleController.getString("ChangePublicLimitReached", R.string.ChangePublicLimitReached));
-            typeInfoCell.setTextColor(0xffcf3030);
+            typeInfoCell.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             linkContainer.setVisibility(View.GONE);
             sectionCell.setVisibility(View.GONE);
             if (loadingAdminedChannels) {
@@ -535,7 +535,7 @@ private boolean checkUserName(final String name) {
         if (name != null) {
             if (name.startsWith("_") || name.endsWith("_")) {
                 checkTextView.setText(LocaleController.getString("LinkInvalid", R.string.LinkInvalid));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                 return false;
             }
             for (int a = 0; a < name.length(); a++) {
@@ -543,16 +543,16 @@ private boolean checkUserName(final String name) {
                 if (a == 0 && ch >= '0' && ch <= '9') {
                     if (currentChat.megagroup) {
                         checkTextView.setText(LocaleController.getString("LinkInvalidStartNumberMega", R.string.LinkInvalidStartNumberMega));
-                        checkTextView.setTextColor(0xffcf3030);
+                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     } else {
                         checkTextView.setText(LocaleController.getString("LinkInvalidStartNumber", R.string.LinkInvalidStartNumber));
-                        checkTextView.setTextColor(0xffcf3030);
+                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     }
                     return false;
                 }
                 if (!(ch >= '0' && ch <= '9' || ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z' || ch == '_')) {
                     checkTextView.setText(LocaleController.getString("LinkInvalid", R.string.LinkInvalid));
-                    checkTextView.setTextColor(0xffcf3030);
+                    checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                     return false;
                 }
             }
@@ -560,16 +560,16 @@ private boolean checkUserName(final String name) {
         if (name == null || name.length() < 5) {
             if (currentChat.megagroup) {
                 checkTextView.setText(LocaleController.getString("LinkInvalidShortMega", R.string.LinkInvalidShortMega));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             } else {
                 checkTextView.setText(LocaleController.getString("LinkInvalidShort", R.string.LinkInvalidShort));
-                checkTextView.setTextColor(0xffcf3030);
+                checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             }
             return false;
         }
         if (name.length() > 32) {
             checkTextView.setText(LocaleController.getString("LinkInvalidLong", R.string.LinkInvalidLong));
-            checkTextView.setTextColor(0xffcf3030);
+            checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
             return false;
         }
 
@@ -593,7 +593,7 @@ public void run() {
                                 if (lastCheckName != null && lastCheckName.equals(name)) {
                                     if (error == null && response instanceof TLRPC.TL_boolTrue) {
                                         checkTextView.setText(LocaleController.formatString("LinkAvailable", R.string.LinkAvailable, name));
-                                        checkTextView.setTextColor(0xff26972c);
+                                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_ok));
                                         lastNameAvailable = true;
                                     } else {
                                         if (error != null && error.text.equals("CHANNELS_ADMIN_PUBLIC_TOO_MUCH")) {
@@ -602,7 +602,7 @@ public void run() {
                                         } else {
                                             checkTextView.setText(LocaleController.getString("LinkInUse", R.string.LinkInUse));
                                         }
-                                        checkTextView.setTextColor(0xffcf3030);
+                                        checkTextView.setTextColor(ContextCompat.getColor(getParentActivity(), R.color.message_error));
                                         lastNameAvailable = false;
                                     }
                                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
index 15bf6aff5..7ed724b45 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
@@ -57,7 +57,15 @@ public static void resetColor(Context context) {
                 ContextCompat.getColor(context, R.color.avatar_profile_back_blue)};
 
         arrColorsProfilesText = new int[]{0xfff9cbc5, 0xfffdddc8, 0xffcdc4ed, 0xffc0edba, 0xffb8e2f0, Theme.ACTION_BAR_PROFILE_SUBTITLE_COLOR, 0xffcdc4ed, 0xffb3d7f7};
-        arrColorsNames = new int[]{0xffca5650, 0xffd87b29, 0xff4e92cc, 0xff50b232, 0xff42b1a8, 0xff4e92cc, 0xff4e92cc, 0xff4e92cc};
+        arrColorsNames = new int[]{
+                ContextCompat.getColor(context, R.color.name_red),
+                ContextCompat.getColor(context, R.color.name_origin),
+                ContextCompat.getColor(context, R.color.name_blue),
+                ContextCompat.getColor(context, R.color.name_green),
+                ContextCompat.getColor(context, R.color.name_cyan),
+                ContextCompat.getColor(context, R.color.name_blue),
+                ContextCompat.getColor(context, R.color.name_blue),
+                ContextCompat.getColor(context, R.color.name_blue)};
         arrColorsButtons = new int[]{Theme.ACTION_BAR_RED_SELECTOR_COLOR, Theme.ACTION_BAR_ORANGE_SELECTOR_COLOR, Theme.ACTION_BAR_VIOLET_SELECTOR_COLOR,
                 Theme.ACTION_BAR_GREEN_SELECTOR_COLOR, Theme.ACTION_BAR_CYAN_SELECTOR_COLOR, Theme.ACTION_BAR_BLUE_SELECTOR_COLOR, Theme.ACTION_BAR_VIOLET_SELECTOR_COLOR, Theme.ACTION_BAR_BLUE_SELECTOR_COLOR};
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
index f7b8ca00f..975947a7e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
@@ -9,6 +9,7 @@
 package org.telegram.ui.Components;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
 import android.text.TextUtils;
@@ -16,6 +17,7 @@
 import android.view.View;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
+import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ChatObject;
@@ -35,7 +37,7 @@
 public class ChatAvatarContainer extends FrameLayout {
 
     private BackupImageView avatarImageView;
-    private SimpleTextView titleTextView;
+    private TextView titleTextView;
     private SimpleTextView subtitleTextView;
     private ImageView timeItem;
     private TimerDrawable timerDrawable;
@@ -55,13 +57,16 @@ public ChatAvatarContainer(Context context, ChatActivity chatActivity, boolean n
         avatarImageView.setRoundRadius(AndroidUtilities.dp(21));
         addView(avatarImageView);
 
-        titleTextView = new SimpleTextView(context);
+        titleTextView = new TextView(context);
         titleTextView.setTextColor(Theme.ACTION_BAR_TITLE_COLOR);
         titleTextView.setTextSize(18);
-        titleTextView.setGravity(Gravity.LEFT);
+        titleTextView.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);
         titleTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        titleTextView.setLeftDrawableTopPadding(-AndroidUtilities.dp(1.3f));
-        titleTextView.setRightDrawableTopPadding(-AndroidUtilities.dp(1.3f));
+        titleTextView.setEllipsize(TextUtils.TruncateAt.END);
+        titleTextView.setMaxLines(1);
+        /*titleTextView.setLeftDrawableTopPadding(-AndroidUtilities.dp(1.3f));
+        titleTextView.setRightDrawableTopPadding(-AndroidUtilities.dp(1.3f));*/
+        titleTextView.setCompoundDrawablePadding(-AndroidUtilities.dp(1.3f));
         addView(titleTextView);
 
         subtitleTextView = new SimpleTextView(context);
@@ -136,7 +141,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         int actionBarHeight = ActionBar.getCurrentActionBarHeight();
         int viewTop = (actionBarHeight - AndroidUtilities.dp(42)) / 2 + (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0);
         avatarImageView.layout(AndroidUtilities.dp(8), viewTop, AndroidUtilities.dp(42 + 8), viewTop + AndroidUtilities.dp(42));
-        titleTextView.layout(AndroidUtilities.dp(8 + 54), viewTop + AndroidUtilities.dp(1.3f), AndroidUtilities.dp(8 + 54) + titleTextView.getMeasuredWidth(), viewTop + titleTextView.getTextHeight() + AndroidUtilities.dp(1.3f));
+        titleTextView.layout(AndroidUtilities.dp(8 + 54), viewTop + AndroidUtilities.dp(1.3f), AndroidUtilities.dp(8 + 54) + titleTextView.getMeasuredWidth(), viewTop + titleTextView.getMeasuredHeight() + AndroidUtilities.dp(1.3f));
         if (timeItem != null) {
             timeItem.layout(AndroidUtilities.dp(8 + 16), viewTop + AndroidUtilities.dp(15), AndroidUtilities.dp(8 + 16 + 34), viewTop + AndroidUtilities.dp(15 + 34));
         }
@@ -165,8 +170,17 @@ public void setTime(int value) {
     }
 
     public void setTitleIcons(int leftIcon, int rightIcon) {
-        titleTextView.setLeftDrawable(leftIcon);
-        titleTextView.setRightDrawable(rightIcon);
+        Drawable left = null, right = null;
+        if (leftIcon != 0) {
+            left = getContext().getDrawable(leftIcon);
+        }
+        if (rightIcon != 0) {
+            right = getContext().getDrawable(rightIcon);
+        }
+
+        titleTextView.setCompoundDrawables(left, null, right, null);
+        /*titleTextView.setLeftDrawable(leftIcon);
+        titleTextView.setRightDrawable(rightIcon);*/
     }
 
     public void setTitle(CharSequence value) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/CircularBorderDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/CircularBorderDrawable.java
new file mode 100644
index 000000000..13e41e697
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/CircularBorderDrawable.java
@@ -0,0 +1,211 @@
+/*
+ * Copyright (C) 2015 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.telegram.ui.Components;
+
+import android.content.res.ColorStateList;
+import android.graphics.Canvas;
+import android.graphics.ColorFilter;
+import android.graphics.LinearGradient;
+import android.graphics.Paint;
+import android.graphics.PixelFormat;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.graphics.Shader;
+import android.graphics.drawable.Drawable;
+import android.support.v4.graphics.ColorUtils;
+
+/**
+ * A drawable which draws an oval 'border'.
+ */
+class CircularBorderDrawable extends Drawable {
+
+    /**
+     * We actually draw the stroke wider than the border size given. This is to reduce any
+     * potential transparent space caused by anti-aliasing and padding rounding.
+     * This value defines the multiplier used to determine to draw stroke width.
+     */
+    private static final float DRAW_STROKE_WIDTH_MULTIPLE = 1.3333f;
+
+    final Paint mPaint;
+    final Rect mRect = new Rect();
+    final RectF mRectF = new RectF();
+
+    float mBorderWidth;
+
+    private int mTopOuterStrokeColor;
+    private int mTopInnerStrokeColor;
+    private int mBottomOuterStrokeColor;
+    private int mBottomInnerStrokeColor;
+
+    private ColorStateList mBorderTint;
+    private int mCurrentBorderTintColor;
+
+    private boolean mInvalidateShader = true;
+
+    private float mRotation;
+
+    public CircularBorderDrawable() {
+        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        mPaint.setStyle(Paint.Style.STROKE);
+    }
+
+    void setGradientColors(int topOuterStrokeColor, int topInnerStrokeColor,
+                           int bottomOuterStrokeColor, int bottomInnerStrokeColor) {
+        mTopOuterStrokeColor = topOuterStrokeColor;
+        mTopInnerStrokeColor = topInnerStrokeColor;
+        mBottomOuterStrokeColor = bottomOuterStrokeColor;
+        mBottomInnerStrokeColor = bottomInnerStrokeColor;
+    }
+
+    /**
+     * Set the border width
+     */
+    void setBorderWidth(float width) {
+        if (mBorderWidth != width) {
+            mBorderWidth = width;
+            mPaint.setStrokeWidth(width * DRAW_STROKE_WIDTH_MULTIPLE);
+            mInvalidateShader = true;
+            invalidateSelf();
+        }
+    }
+
+    @Override
+    public void draw(Canvas canvas) {
+        if (mInvalidateShader) {
+            mPaint.setShader(createGradientShader());
+            mInvalidateShader = false;
+        }
+
+        final float halfBorderWidth = mPaint.getStrokeWidth() / 2f;
+        final RectF rectF = mRectF;
+
+        // We need to inset the oval bounds by half the border width. This is because stroke draws
+        // the center of the border on the dimension. Whereas we want the stroke on the inside.
+        copyBounds(mRect);
+        rectF.set(mRect);
+        rectF.left += halfBorderWidth;
+        rectF.top += halfBorderWidth;
+        rectF.right -= halfBorderWidth;
+        rectF.bottom -= halfBorderWidth;
+
+        canvas.save();
+        canvas.rotate(mRotation, rectF.centerX(), rectF.centerY());
+        // Draw the oval
+        canvas.drawOval(rectF, mPaint);
+        canvas.restore();
+    }
+
+    @Override
+    public boolean getPadding(Rect padding) {
+        final int borderWidth = Math.round(mBorderWidth);
+        padding.set(borderWidth, borderWidth, borderWidth, borderWidth);
+        return true;
+    }
+
+    @Override
+    public void setAlpha(int alpha) {
+        mPaint.setAlpha(alpha);
+        invalidateSelf();
+    }
+
+    void setBorderTint(ColorStateList tint) {
+        if (tint != null) {
+            mCurrentBorderTintColor = tint.getColorForState(getState(), mCurrentBorderTintColor);
+        }
+        mBorderTint = tint;
+        mInvalidateShader = true;
+        invalidateSelf();
+    }
+
+    @Override
+    public void setColorFilter(ColorFilter colorFilter) {
+        mPaint.setColorFilter(colorFilter);
+        invalidateSelf();
+    }
+
+    @Override
+    public int getOpacity() {
+        return mBorderWidth > 0 ? PixelFormat.TRANSLUCENT : PixelFormat.TRANSPARENT;
+    }
+
+    final void setRotation(float rotation) {
+        if (rotation != mRotation) {
+            mRotation = rotation;
+            invalidateSelf();
+        }
+    }
+
+    @Override
+    protected void onBoundsChange(Rect bounds) {
+        mInvalidateShader = true;
+    }
+
+    @Override
+    public boolean isStateful() {
+        return (mBorderTint != null && mBorderTint.isStateful()) || super.isStateful();
+    }
+
+    @Override
+    protected boolean onStateChange(int[] state) {
+        if (mBorderTint != null) {
+            final int newColor = mBorderTint.getColorForState(state, mCurrentBorderTintColor);
+            if (newColor != mCurrentBorderTintColor) {
+                mInvalidateShader = true;
+                mCurrentBorderTintColor = newColor;
+            }
+        }
+        if (mInvalidateShader) {
+            invalidateSelf();
+        }
+        return mInvalidateShader;
+    }
+
+    /**
+     * Creates a vertical {@link LinearGradient}
+     * @return
+     */
+    private Shader createGradientShader() {
+        final Rect rect = mRect;
+        copyBounds(rect);
+
+        final float borderRatio = mBorderWidth / rect.height();
+
+        final int[] colors = new int[6];
+        colors[0] = ColorUtils.compositeColors(mTopOuterStrokeColor, mCurrentBorderTintColor);
+        colors[1] = ColorUtils.compositeColors(mTopInnerStrokeColor, mCurrentBorderTintColor);
+        colors[2] = ColorUtils.compositeColors(
+                ColorUtils.setAlphaComponent(mTopInnerStrokeColor, 0), mCurrentBorderTintColor);
+        colors[3] = ColorUtils.compositeColors(
+                ColorUtils.setAlphaComponent(mBottomInnerStrokeColor, 0), mCurrentBorderTintColor);
+        colors[4] = ColorUtils.compositeColors(mBottomInnerStrokeColor, mCurrentBorderTintColor);
+        colors[5] = ColorUtils.compositeColors(mBottomOuterStrokeColor, mCurrentBorderTintColor);
+
+        final float[] positions = new float[6];
+        positions[0] = 0f;
+        positions[1] = borderRatio;
+        positions[2] = 0.5f;
+        positions[3] = 0.5f;
+        positions[4] = 1f - borderRatio;
+        positions[5] = 1f;
+
+        return new LinearGradient(
+                0, rect.top,
+                0, rect.bottom,
+                colors, positions,
+                Shader.TileMode.CLAMP);
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/FloatingActionButton.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/FloatingActionButton.java
new file mode 100644
index 000000000..b0f5053aa
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/FloatingActionButton.java
@@ -0,0 +1,130 @@
+package org.telegram.ui.Components;
+
+import android.animation.ObjectAnimator;
+import android.animation.StateListAnimator;
+import android.content.Context;
+import android.content.res.ColorStateList;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
+import android.graphics.drawable.LayerDrawable;
+import android.graphics.drawable.RippleDrawable;
+import android.support.v4.content.res.ConfigurationHelper;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.widget.ImageView;
+
+import org.telegram.messenger.AndroidUtilities;
+
+/**
+ * Created by Rikka on 2016/11/3.
+ */
+
+public class FloatingActionButton extends ImageView {
+
+    /**
+     * The mini sized button. Will always been smaller than {@link #SIZE_NORMAL}.
+     *
+     * @see #setSize(int)
+     */
+    public static final int SIZE_MINI = 1;
+
+    /**
+     * The normal sized button. Will always been larger than {@link #SIZE_MINI}.
+     *
+     * @see #setSize(int)
+     */
+    public static final int SIZE_NORMAL = 0;
+
+    /**
+     * Size which will change based on the window size. For small sized windows
+     * (largest screen dimension < 470dp) this will select a small sized button, and for
+     * larger sized windows it will select a larger size.
+     *
+     * @see #setSize(int)
+     */
+    public static final int SIZE_AUTO = -1;
+
+    /**
+     * The switch point for the largest screen edge where SIZE_AUTO switches from mini to normal.
+     */
+    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH = 470;
+
+    public FloatingActionButton(Context context) {
+        this(context, null);
+    }
+
+    public FloatingActionButton(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public FloatingActionButton(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+
+        TypedValue outValue = new TypedValue();
+        context.getTheme().resolveAttribute(android.R.attr.colorAccent, outValue, true);
+        int color = outValue.data;
+        context.getTheme().resolveAttribute(android.R.attr.colorControlHighlight, outValue, true);
+        int rippleColor = outValue.data;
+
+        Drawable shapeDrawable = createShapeDrawable();
+        shapeDrawable.setTint(color);
+
+        Drawable borderDrawable = createBorderDrawable(context, (int) (0.5 * AndroidUtilities.density), ColorStateList.valueOf(color));
+        Drawable rippleContent = new LayerDrawable(new Drawable[]{borderDrawable, shapeDrawable});
+
+        RippleDrawable rippleDrawable = new RippleDrawable(ColorStateList.valueOf(rippleColor),
+                rippleContent, null);
+        setBackground(rippleDrawable);
+        setScaleType(ImageView.ScaleType.CENTER);
+
+        setElevation(AndroidUtilities.dp(6));
+        StateListAnimator stateListAnimator = new StateListAnimator();
+        stateListAnimator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(this, "translationZ", AndroidUtilities.dp(6)).setDuration(200));
+        stateListAnimator.addState(new int[0], ObjectAnimator.ofFloat(this, "translationZ", AndroidUtilities.dp(0)).setDuration(200));
+        setStateListAnimator(stateListAnimator);
+    }
+
+    /*int getSizeDimension() {
+        return getSizeDimension(mSize);
+    }
+
+    private int getSizeDimension(final int size) {
+        final Resources res = getResources();
+        switch (size) {
+            case SIZE_AUTO:
+                // If we're set to auto, grab the size from resources and refresh
+                final int width = ConfigurationHelper.getScreenWidthDp(res);
+                final int height = ConfigurationHelper.getScreenHeightDp(res);
+                return Math.max(width, height) < AUTO_MINI_LARGEST_SCREEN_WIDTH
+                        ? getSizeDimension(SIZE_MINI)
+                        : getSizeDimension(SIZE_NORMAL);
+            case SIZE_MINI:
+                return res.getDimensionPixelSize(R.dimen.design_fab_size_mini);
+            case SIZE_NORMAL:
+            default:
+                return res.getDimensionPixelSize(R.dimen.design_fab_size_normal);
+        }
+    }*/
+
+    private GradientDrawable createShapeDrawable() {
+        GradientDrawable d = new GradientDrawable();
+        d.setShape(GradientDrawable.OVAL);
+        d.setColor(Color.WHITE);
+        return d;
+    }
+
+    private CircularBorderDrawable createBorderDrawable(Context context, int borderWidth, ColorStateList backgroundTint) {
+        CircularBorderDrawable borderDrawable = new CircularBorderDrawable();
+        borderDrawable.setGradientColors(
+                0x2EFFFFFF/*ContextCompat.getColor(context, R.color.design_fab_stroke_top_outer_color)*/,
+                0x1AFFFFFF/*ContextCompat.getColor(context, R.color.design_fab_stroke_top_inner_color)*/,
+                0x0A000000/*ContextCompat.getColor(context, R.color.design_fab_stroke_end_inner_color)*/,
+                0x0F000000/*ContextCompat.getColor(context, R.color.design_fab_stroke_end_outer_color)*/);
+        borderDrawable.setBorderWidth(borderWidth);
+        borderDrawable.setBorderTint(backgroundTint);
+        return borderDrawable;
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/StickersAlert.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/StickersAlert.java
index 7898b16ff..0173a8b4b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/StickersAlert.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/StickersAlert.java
@@ -14,6 +14,7 @@
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
+import android.content.res.Configuration;
 import android.graphics.*;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
@@ -445,7 +446,11 @@ public void onClick(View view) {
         pickerBottomLayout.doneButtonBadgeTextView.setBackgroundResource(R.drawable.stickercounter);
 
         stickerPreviewLayout = new FrameLayout(context);
-        stickerPreviewLayout.setBackgroundColor(0xdfffffff);
+        if ((context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_YES) != 0) {
+            stickerPreviewLayout.setBackgroundColor(0x00ffffff & ContextCompat.getColor(context, R.color.card_background) | 0xdf000000);
+        } else {
+            stickerPreviewLayout.setBackgroundColor(0xdfffffff);
+        }
         stickerPreviewLayout.setVisibility(View.GONE);
         stickerPreviewLayout.setSoundEffectsEnabled(false);
         containerView.addView(stickerPreviewLayout, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
@@ -483,7 +488,7 @@ public void onClick(View v) {
         previewSendButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
         previewSendButton.setTextColor(Theme.STICKERS_SHEET_SEND_TEXT_COLOR);
         previewSendButton.setGravity(Gravity.CENTER);
-        previewSendButton.setBackgroundColor(0xffffffff);
+        previewSendButton.setBackgroundColor(ContextCompat.getColor(context, R.color.background));
         previewSendButton.setPadding(AndroidUtilities.dp(29), 0, AndroidUtilities.dp(29), 0);
         previewSendButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         stickerPreviewLayout.addView(previewSendButton, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 48, Gravity.BOTTOM | Gravity.LEFT));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
index e02c21bee..659a0aa90 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DialogsActivity.java
@@ -72,6 +72,7 @@
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.MenuDrawable;
+import org.telegram.ui.Components.FloatingActionButton;
 import org.telegram.ui.Components.PlayerView;
 import org.telegram.ui.Components.EmptyTextProgressView;
 import org.telegram.ui.Components.LayoutHelper;
@@ -654,26 +655,27 @@ public boolean onTouch(View v, MotionEvent event) {
         frameLayout.addView(progressView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
         // TODO fab color
-        floatingButton = new ImageView(context);
+        floatingButton = new FloatingActionButton(context);
         floatingButton.setVisibility(onlySelect ? View.GONE : View.VISIBLE);
-        floatingButton.setScaleType(ImageView.ScaleType.CENTER);
-        floatingButton.setBackgroundResource(R.drawable.floating_states);
+        //floatingButton.setScaleType(ImageView.ScaleType.CENTER);
+        //floatingButton.setBackgroundResource(R.drawable.floating_states);
         floatingButton.setImageResource(R.drawable.floating_pencil);
         floatingButton.getDrawable().setTint(ContextCompat.getColor(context, R.color.fab));
         if (Build.VERSION.SDK_INT >= 21) {
-            StateListAnimator animator = new StateListAnimator();
+            /*StateListAnimator animator = new StateListAnimator();
             animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(floatingButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
             animator.addState(new int[]{}, ObjectAnimator.ofFloat(floatingButton, "translationZ", AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
             floatingButton.setStateListAnimator(animator);
-            floatingButton.setOutlineProvider(new ViewOutlineProvider() {
-                @SuppressLint("NewApi")
-                @Override
-                public void getOutline(View view, Outline outline) {
-                    outline.setOval(0, 0, AndroidUtilities.dp(56), AndroidUtilities.dp(56));
-                }
-            });
+            */
         }
-        frameLayout.addView(floatingButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 14));
+        floatingButton.setOutlineProvider(new ViewOutlineProvider() {
+            @SuppressLint("NewApi")
+            @Override
+            public void getOutline(View view, Outline outline) {
+                outline.setOval(0, 0, AndroidUtilities.dp(56), AndroidUtilities.dp(56));
+            }
+        });
+        frameLayout.addView(floatingButton, LayoutHelper.createFrame(56, 56, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 14));
         floatingButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -1110,7 +1112,7 @@ public boolean isMainDialogList() {
     private void didSelectResult(final long dialog_id, boolean useAlert, final boolean param) {
         if (addToGroupAlertString == null) {
             if ((int) dialog_id < 0 && ChatObject.isChannel(-(int) dialog_id) && (cantSendToChannels || !ChatObject.isCanWriteToChannel(-(int) dialog_id))) {
-                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity(), R.style.Theme_TMessages_Dialog_Alert_Chat);
                 builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
                 builder.setMessage(LocaleController.getString("ChannelCantSendMessage", R.string.ChannelCantSendMessage));
                 builder.setNegativeButton(LocaleController.getString("OK", R.string.OK), null);
@@ -1122,7 +1124,7 @@ private void didSelectResult(final long dialog_id, boolean useAlert, final boole
             if (getParentActivity() == null) {
                 return;
             }
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity(), R.style.Theme_TMessages_Dialog_Alert_Chat);
             builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
             int lower_part = (int) dialog_id;
             int high_id = (int) (dialog_id >> 32);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 821a22f41..8162814aa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -19,6 +19,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.provider.Settings;
+import android.support.v4.content.ContextCompat;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
@@ -176,6 +177,7 @@ public void onItemClick(int id) {
         });
 
         fragmentView = new FrameLayout(context);
+        fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.settings_background));
         FrameLayout frameLayout = (FrameLayout) fragmentView;
 
         listView = new ListView(context);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index 32f1f28d4..848886b40 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -20,6 +20,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.provider.Settings;
+import android.support.v4.content.ContextCompat;
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.View;
@@ -113,6 +114,7 @@ public void onItemClick(int id) {
 
         fragmentView = new FrameLayout(context);
         FrameLayout frameLayout = (FrameLayout) fragmentView;
+        frameLayout.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
 
         listView = new ListView(context);
         listView.setDivider(null);
@@ -515,6 +517,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             if (type == 0) {
                 if (view == null) {
                     view = new TextDetailSettingsCell(mContext);
+                    view.setElevation(0);
                     ((ForegroundFrameLayout) view).setForeground(R.drawable.list_selector);
                 }
 
@@ -594,6 +597,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             } else if (type == 1) {
                 if (view == null) {
                     view = new TextColorCell(mContext);
+                    view.setElevation(0);
                     ((ForegroundFrameLayout) view).setForeground(R.drawable.list_selector);
                 }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 5400f3805..321a152c7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -22,6 +22,8 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
@@ -103,6 +105,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.List;
 import java.util.Locale;
 
 public class SettingsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, PhotoViewer.PhotoViewerProvider {
@@ -154,6 +157,7 @@
     private int nightModeRow;
     private int forceExternalRow;
     private int donateRow;
+    private int feedbackRow;
 
     private int raiseToSpeakRow;
     private int sendByEnterRow;
@@ -291,6 +295,7 @@ public void run() {
         supportSectionRow2 = rowCount++;
         //askQuestionRow = rowCount++;
         donateRow = rowCount++;
+        feedbackRow = rowCount++;
         telegramFaqRow = rowCount++;
         privacyPolicyRow = rowCount++;
         if (BuildVars.DEBUG_VERSION) {
@@ -780,6 +785,19 @@ public void onClick(DialogInterface dialog, int which) {
                     } else {
                         showDialog(mDonateHelper.getDialog(getParentActivity()));
                     }
+                } else if (position == feedbackRow) {
+                    Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts("mailto", "rikkanyaaa+rikkagramFeedback@gmail.com", null));
+                    intent.putExtra(Intent.EXTRA_SUBJECT, "Rikkagram feedback");
+                    intent.putExtra(Intent.EXTRA_TEXT, "");
+
+                    PackageManager packageManager = getParentActivity().getPackageManager();
+                    List<ResolveInfo> activities = packageManager.queryIntentActivities(intent, 0);
+                    if (activities.size() > 0) {
+                        intent = Intent.createChooser(intent, LocaleController.getString("SendFeedbackSendTo", R.string.SendFeedbackSendTo));
+                        getParentActivity().startActivity(intent);
+                    } else {
+                        Toast.makeText(getParentActivity(), LocaleController.getString("SendFeedbackNoMailApp", R.string.SendFeedbackNoMailApp), Toast.LENGTH_SHORT).show();
+                    }
                 }
             }
         });
@@ -1408,6 +1426,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         textCell.setText(LocaleController.getString("ExternalLinks", R.string.ExternalLinks), true);
                     } else if (position == donateRow) {
                         textCell.setText(LocaleController.getString("Donate", R.string.Donate), true);
+                    } else if (position == feedbackRow) {
+                        textCell.setText(LocaleController.getString("SendFeedback", R.string.SendFeedback), true);
                     }
                     break;
                 }
@@ -1535,7 +1555,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         position == mobileDownloadRow || position == clearLogsRow || position == roamingDownloadRow || position == languageRow || position == usernameRow ||
                         position == switchBackendButtonRow || position == telegramFaqRow || position == contactsSortRow || position == contactsReimportRow || position == saveToGalleryRow ||
                         position == stickersRow || position == cacheRow || position == raiseToSpeakRow || position == privacyPolicyRow || position == customTabsRow || position == directShareRow || position == versionRow ||
-                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow || position == forceExternalRow || position == donateRow) {
+                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow || position == forceExternalRow || position == donateRow || position == feedbackRow) {
                     if (holder.itemView instanceof ForegroundFrameLayout) {
                         ForegroundFrameLayout view = (ForegroundFrameLayout) holder.itemView;
                         if (view.getForeground() == null) {
@@ -1614,7 +1634,7 @@ public int getItemViewType(int position) {
                 return 1;
             } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow || position == fakeBoldRow) {
                 return 3;
-            } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow || position == nightModeRow || position == forceExternalRow || position == donateRow) {
+            } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow || position == nightModeRow || position == forceExternalRow || position == donateRow || position == feedbackRow) {
                 return 2;
             } else if (position == versionRow) {
                 return 5;
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 09a0149ae..ccb2e64f3 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index d93ee4a09..c371460a9 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index e52003775..c978775b5 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 2d0f99cb0..e8793d042 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 5dcd25a71..b4e6e8f37 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-night/colors.xml b/TMessagesProj/src/main/res/values-night/colors.xml
index 2348bdfc1..131c1a6bf 100644
--- a/TMessagesProj/src/main/res/values-night/colors.xml
+++ b/TMessagesProj/src/main/res/values-night/colors.xml
@@ -47,7 +47,8 @@
 
     <color name="in_app_player_title">#b1c6d6</color>
 
-    <color name="msg_link_text">#79abd1</color>
+    <!--<color name="msg_link_text">#cea3dcf5</color>-->
+    <color name="msg_link_text">@color/material_light_blue_A100</color>
 
     <color name="drawer_text">@color/primary_text</color>
 
@@ -60,10 +61,23 @@
     <color name="dialog_name">#bcdfff</color>
     <color name="dialog_title_encrypted">@color/material_green_A100</color>
 
+    <color name="message_error">@color/material_red_A100</color>
+    <color name="message_ok">@color/material_green_A100</color>
+
+    <color name="sheet_danger_action">@color/material_red_A100</color>
+
+    <color name="action_button">@color/colorAccent</color>
+
     <color name="avatar_profile_back_red">#8f2e24</color>
     <color name="avatar_profile_back_origin">#a55927</color>
     <color name="avatar_profile_back_purple">#473070</color>
     <color name="avatar_profile_back_green">#3c6c36</color>
     <color name="avatar_profile_back_cyan">#1a7579</color>
     <color name="avatar_profile_back_blue">#3a5c7a</color>
+
+    <color name="name_red">@color/material_red_100</color>
+    <color name="name_origin">@color/material_orange_100</color>
+    <color name="name_green">@color/material_green_100</color>
+    <color name="name_cyan">@color/material_cyan_100</color>
+    <color name="name_blue">@color/material_blue_100</color>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 50511b361..60a047d46 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -1320,7 +1320,7 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
 
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 9337ab6a9..a4edd9fc6 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index db1d6342c..03e820404 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -1320,6 +1320,6 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
index fc34f3203..62caf2770 100644
--- a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
@@ -1323,6 +1323,6 @@
     <string name="DonateThanks">感谢您的支持</string>
 
     <string name="SendFeedback">发送反馈</string>
-    <string name="SendFeedbackSendVia">发送方式</string>
+    <string name="SendFeedbackSendTo">发送至</string>
     <string name="SendFeedbackNoMailApp">没有邮件应用</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/colors.xml b/TMessagesProj/src/main/res/values/colors.xml
index a12269d6e..e5d5f450d 100755
--- a/TMessagesProj/src/main/res/values/colors.xml
+++ b/TMessagesProj/src/main/res/values/colors.xml
@@ -71,6 +71,13 @@
     <color name="dialog_name">#ff4d83b3</color>
     <color name="dialog_title_encrypted">#ff00a60e</color>
 
+    <color name="message_error">#ffcf3030</color>
+    <color name="message_ok">#ff26972c</color>
+
+    <color name="sheet_danger_action">#ffcd5a5a</color>
+
+    <color name="action_button">#ff3a8ccf</color>
+
     <!--<color name="avatar_red"></color>
     <color name="avatar_profile_red"></color>-->
     <color name="avatar_profile_back_red">#ffca6056</color>
@@ -78,5 +85,11 @@
     <color name="avatar_profile_back_purple">#ff7d6ac4</color>
     <color name="avatar_profile_back_green">#ff56a14c</color>
     <color name="avatar_profile_back_cyan">#ff4492ac</color>
-    <color name="avatar_profile_back_blue">#4c84b6</color>
+    <color name="avatar_profile_back_blue">#ff4c84b6</color>
+
+    <color name="name_red">#ffca5650</color>
+    <color name="name_origin">#ffd87b29</color>
+    <color name="name_green">#ff50b232</color>
+    <color name="name_cyan">#ff42b1a8</color>
+    <color name="name_blue">#ff4e92cc</color>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 2c63bc036..0b23b60bb 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1322,7 +1322,7 @@
     <string name="DonateThanks">Thank you for your support</string>
 
     <string name="SendFeedback">Send feedback</string>
-    <string name="SendFeedbackSendVia">Send via</string>
+    <string name="SendFeedbackSendTo">Send to</string>
     <string name="SendFeedbackNoMailApp">No mail app</string>
 
 </resources>
