diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCheckCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCheckCell.java
new file mode 100644
index 000000000..6525eb479
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCheckCell.java
@@ -0,0 +1,118 @@
+/*
+ * This is the source code of Telegram for Android v. 1.7.x.
+ * It is licensed under GNU GPL v. 2 or later.
+ * You should have received a copy of the license in this archive (see LICENSE).
+ *
+ * Copyright Nikolai Kudashov, 2013-2014.
+ */
+
+package org.telegram.ui.Cells;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.os.Build;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.widget.TextView;
+
+import org.telegram.android.AndroidUtilities;
+import org.telegram.android.LocaleController;
+import org.telegram.ui.Components.FrameLayoutFixed;
+import org.telegram.ui.Components.Switch;
+
+public class TextInfoCheckCell extends FrameLayoutFixed {
+
+    private TextView textView;
+    private TextView infoTextView;
+    private Switch checkBox;
+    private static Paint paint;
+    private boolean needDivider;
+
+    public TextInfoCheckCell(Context context) {
+        super(context);
+
+        if (paint == null) {
+            paint = new Paint();
+            paint.setColor(0xffd9d9d9);
+            paint.setStrokeWidth(1);
+        }
+
+        textView = new TextView(context);
+        textView.setTextColor(0xff212121);
+        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+        textView.setLines(1);
+        textView.setMaxLines(1);
+        textView.setSingleLine(true);
+        textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
+        addView(textView);
+        LayoutParams layoutParams = (LayoutParams) textView.getLayoutParams();
+        layoutParams.width = LayoutParams.WRAP_CONTENT;
+        layoutParams.height = LayoutParams.WRAP_CONTENT;
+        layoutParams.topMargin = AndroidUtilities.dp(10);
+        layoutParams.leftMargin = AndroidUtilities.dp(17);
+        layoutParams.rightMargin = AndroidUtilities.dp(17);
+        layoutParams.gravity = LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT;
+        textView.setLayoutParams(layoutParams);
+
+        checkBox = new Switch(context);
+        checkBox.setDuplicateParentStateEnabled(false);
+        checkBox.setFocusable(false);
+        checkBox.setFocusableInTouchMode(false);
+        checkBox.setClickable(false);
+        addView(checkBox);
+        layoutParams = (LayoutParams) checkBox.getLayoutParams();
+        layoutParams.width = LayoutParams.WRAP_CONTENT;
+        layoutParams.height = LayoutParams.WRAP_CONTENT;
+        layoutParams.leftMargin = AndroidUtilities.dp(14);
+        layoutParams.rightMargin = AndroidUtilities.dp(14);
+        layoutParams.gravity = (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.CENTER_VERTICAL;
+        checkBox.setLayoutParams(layoutParams);
+
+        infoTextView = new TextView(context);
+        infoTextView.setTextColor(0xff8a8a8a);
+        infoTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 13);
+        infoTextView.setGravity(LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT);
+        infoTextView.setLines(1);
+        infoTextView.setMaxLines(1);
+        infoTextView.setSingleLine(true);
+        infoTextView.setPadding(0, 0, 0, 0);
+        addView(infoTextView);
+        layoutParams = (LayoutParams) infoTextView.getLayoutParams();
+        layoutParams.width = LayoutParams.WRAP_CONTENT;
+        layoutParams.height = LayoutParams.WRAP_CONTENT;
+        layoutParams.topMargin = AndroidUtilities.dp(35);
+        layoutParams.leftMargin = AndroidUtilities.dp(17);
+        layoutParams.rightMargin = AndroidUtilities.dp(17);
+        layoutParams.gravity = LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT;
+        infoTextView.setLayoutParams(layoutParams);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64) + (needDivider ? 1 : 0), MeasureSpec.EXACTLY));
+    }
+
+    public void setTextInfoAndCheck(String text, String info, boolean checked, boolean divider) {
+        textView.setText(text);
+        infoTextView.setText(info);
+        if (Build.VERSION.SDK_INT < 11) {
+            checkBox.resetLayout();
+            checkBox.requestLayout();
+        }
+        checkBox.setChecked(checked);
+        needDivider = divider;
+        setWillNotDraw(!divider);
+    }
+
+    public void setChecked(boolean checked) {
+        checkBox.setChecked(checked);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        if (needDivider) {
+            canvas.drawLine(getPaddingLeft(), getHeight() - 1, getWidth() - getPaddingRight(), getHeight() - 1, paint);
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
index 2a37d5fab..cbb3b4993 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsUltraFeaturesActivity.java
@@ -30,6 +30,7 @@
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextCheckCell;
 import org.telegram.ui.Cells.TextDetailSettingsCell;
+import org.telegram.ui.Cells.TextInfoCheckCell;
 
 public class SettingsUltraFeaturesActivity extends BaseFragment {
     private ListView listView;
@@ -46,7 +47,9 @@ public boolean onFragmentCreate() {
         enableMarkdownRow = rowCount++;
         PhotoQualityRow = rowCount++;
         showAndroidEmojiRow = rowCount++;
-        disableTabletModeRow = rowCount++;
+        if ( ApplicationLoader.applicationContext.getResources().getBoolean(R.bool.isTablet) ){ // Only enable this option if it is a tablet
+            disableTabletModeRow = rowCount++;
+        }
 
         return super.onFragmentCreate();
     }
@@ -157,6 +160,8 @@ public void onStopTrackingTouch(SeekBar seekBar) {
                     }
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!enabled);
+                    } else if (view instanceof TextInfoCheckCell) {
+                        ((TextInfoCheckCell) view).setChecked(!enabled);
                     }
                 }
             });
@@ -219,8 +224,6 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     checkCell.setTextAndCheck(LocaleController.getString("EnableMarkdown", R.string.EnableMarkdown), preferences.getBoolean("view_markdown", false), true);
                 } else if (i == showAndroidEmojiRow) {
                     checkCell.setTextAndCheck(LocaleController.getString("showAndroidEmoji", R.string.showAndroidEmoji), preferences.getBoolean("showAndroidEmoji", false), true);
-                } else if (i == disableTabletModeRow) {
-                    checkCell.setTextAndCheck(LocaleController.getString("disableTabletMode", R.string.disableTabletMode), preferences.getBoolean("disableTabletMode", false), true);
                 }
             } else if (type == 1) {
                 if (view == null) {
@@ -233,16 +236,27 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     String value = Integer.toString(preferences.getInt("PhotoQuality", 80)) + "%";
                     textCell.setTextAndValue(LocaleController.getString("PhotoQuality", R.string.PhotoQuality), value, true);
                 }
+            } else if (type == 2) {
+                if (view == null) {
+                    view = new TextInfoCheckCell(mContext);
+                }
+                TextInfoCheckCell checkCell = (TextInfoCheckCell) view;
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Ultra", Activity.MODE_PRIVATE);
+                if (i == disableTabletModeRow) {
+                    checkCell.setTextInfoAndCheck(LocaleController.getString("disableTabletMode", R.string.disableTabletMode), LocaleController.getString("disableTabletModeInfo", R.string.disableTabletModeInfo), preferences.getBoolean("disableTabletMode", false), true);
+                }
             }
             return view;
         }
 
         @Override
         public int getItemViewType(int i) {
-            if (i == enableMarkdownRow || i == showAndroidEmojiRow || i == disableTabletModeRow) {
+            if (i == enableMarkdownRow || i == showAndroidEmojiRow) {
                 return 0;
             } else if (i == PhotoQualityRow) {
                 return 1;
+            } else if ( i == disableTabletModeRow) {
+                return 2;
             } else {
                 return 9;
             }
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 149d75003..228286573 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -542,4 +542,5 @@
     <string name="showAndroidEmoji">اعرض فيسات الاندرويد</string>
     <string name="PhotoQualityInfo">القيمة هنا تستخدم مع الصور الجديدة فقط، القيم العالية تعطي جودة اعلى لكن حجم ملف اكبر.\n\n* نسبة 80% عادة تقدم توازن بين الجودة والحجم.</string>
     <string name="disableTabletMode">عطل عرض اللوحي</string>
+    <string name="disableTabletModeInfo">اعد تشغيل البرنامج عند تغيير الخيارِ</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index bf7fcfd95..e47d538fc 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 52fe01588..7ea731c6b 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index a947d170a..5abd7ba55 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 35c54c6be..21b80e570 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index f96628efa..1184bebbe 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 362f19834..441cdfe1e 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index e47356d91..af38c1621 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 479a5e9d4..8de31392d 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -539,4 +539,5 @@
     <string name="showAndroidEmoji">Show Android Emoji</string>
     <string name="PhotoQualityInfo">This setting only applies to new photos, higher value means better quality but also means bigger file size. \n\n* 80% is usually a good balance between size and quality.</string>
     <string name="disableTabletMode">Disable Tablet view</string>
+    <string name="disableTabletModeInfo">Restart the app after changing this option</string>
 </resources>
\ No newline at end of file
