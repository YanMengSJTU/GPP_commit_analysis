diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
index 23b073449..bc0dcc895 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ImageReceiver.java
@@ -1097,7 +1097,7 @@ public int getBitmapWidth() {
             return drawable.getIntrinsicWidth();
         }
         AnimatedFileDrawable animation = getAnimation();
-        if (animation != null) {
+        if (animation != null && animation.hasBitmap()) {
             return imageOrientation % 360 == 0 || imageOrientation % 360 == 180 ? animation.getIntrinsicWidth() : animation.getIntrinsicHeight();
         }
         Bitmap bitmap = getBitmap();
@@ -1116,7 +1116,7 @@ public int getBitmapHeight() {
             return drawable.getIntrinsicHeight();
         }
         AnimatedFileDrawable animation = getAnimation();
-        if (animation != null) {
+        if (animation != null && animation.hasBitmap()) {
             return imageOrientation % 360 == 0 || imageOrientation % 360 == 180 ? animation.getIntrinsicHeight() : animation.getIntrinsicWidth();
         }
         Bitmap bitmap = getBitmap();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 933d6ae5d..5d997b81a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -6353,8 +6353,21 @@ private void setIndexToImage(ImageReceiver imageReceiver, int index) {
                     }
                     return;
                 } else if (currentAnimation != null) {
-                    imageReceiver.setImageBitmap(currentAnimation);
-                    currentAnimation.setSecondParentView(containerView);
+                    if(!currentAnimation.hasBitmap() && messageObject.photoThumbs != null && !messageObject.photoThumbs.isEmpty()){
+                        ImageReceiver.BitmapHolder placeHolder = null;
+                        if (currentThumb != null && imageReceiver == centerImage) {
+                            placeHolder = currentThumb;
+                        }
+                        TLRPC.Document document = messageObject.messageOwner.media.document;
+
+                        TLRPC.PhotoSize thumbLocation = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 100);
+                        ImageLocation mediaLocation= ImageLocation.getForDocument(document);
+
+                        imageReceiver.setImage(mediaLocation, ImageLoader.AUTOPLAY_FILTER, null, null, placeHolder == null ? ImageLocation.getForObject(thumbLocation, messageObject.photoThumbsObject) : null, "b", placeHolder != null ? new BitmapDrawable(placeHolder.bitmap) : null, messageObject.messageOwner.media.document.size, null, messageObject, 0);
+                    }else {
+                        imageReceiver.setImageBitmap(currentAnimation);
+                        currentAnimation.setSecondParentView(containerView);
+                    }
                     return;
                 } else if (sharedMediaType == DataQuery.MEDIA_FILE) {
                     if (messageObject.canPreviewDocument()) {
@@ -7993,7 +8006,7 @@ private void onDraw(Canvas canvas) {
             drawProgress = progressView.getVisibility() != View.VISIBLE && (videoPlayer == null || !videoPlayer.isPlaying());
         } else {
             drawProgress = !drawTextureView && videoPlayerControlFrameLayout.getVisibility() != View.VISIBLE;
-            if (drawProgress && currentAnimation != null && !currentAnimation.isLoadingStream()) {
+            if (drawProgress && currentAnimation != null && currentAnimation.hasBitmap()) {
                 drawProgress = false;
             }
         }
