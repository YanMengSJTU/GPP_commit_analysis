diff --git a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
index ca582c7b8..52b1d6b2c 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/location/LocationManagerHelper.java
@@ -1,6 +1,8 @@
 package org.telegram.android.location;
 
 import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
 import android.location.Address;
 import android.location.Geocoder;
 import android.location.Location;
@@ -10,13 +12,12 @@
 
 import org.telegram.utils.StringUtils;
 
-import ru.aragats.wgo.ApplicationLoader;
-import ru.aragats.wgo.dto.Coordinates;
-
 import java.io.IOException;
 import java.util.List;
 import java.util.Locale;
 
+import ru.aragats.wgo.ApplicationLoader;
+
 /**
  * Created by aragats on 15/09/15.
  */
@@ -49,7 +50,7 @@ public void onLocationChanged(Location location) {
                 //TODO is often ??
                 // Called when a new location is found by the network location provider.
 //                makeUseOfNewLocation(location);
-                Location loc = getLastLocation();
+//                Location loc = getLastLocation();
             }
 
             public void onStatusChanged(String provider, int status, Bundle extras) {
@@ -178,4 +179,14 @@ public String getAddress(Geocoder geocoder, double longitude, double latitude) {
             return "";
         }
     }
+
+
+    public boolean isGoogleMapsInstalled() {
+        try {
+            ApplicationInfo info = ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
+            return true;
+        } catch (PackageManager.NameNotFoundException e) {
+            return false;
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index b817ba5f3..3375e3354 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -72,6 +72,7 @@ public void serializeToStream(AbsSerializedData stream) {
         public String venue_id;
         //TODO-aragats
         public String iconUrl;
+        public boolean isCustomLocation;
 
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 04a2e53df..411305c5f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -9,15 +9,19 @@
 package org.telegram.ui.ActionBar;
 
 import android.app.Activity;
+import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.net.Uri;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
+import org.telegram.android.LocaleController;
+import org.telegram.android.location.LocationManagerHelper;
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 
@@ -209,6 +213,41 @@ public boolean needAddActionBar() {
         return true;
     }
 
+    //TODO generic Dialog for other cases.
+    public Dialog buildInstallGoogleMapsDialog() {
+        if (getParentActivity() == null) {
+            return null;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setMessage("Install Google Maps?");
+        builder.setCancelable(true);
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialogInterface, int i) {
+                try {
+                    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=com.google.android.apps.maps"));
+                    getParentActivity().startActivityForResult(intent, 500);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        });
+        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+        return builder.create();
+    }
+
+    public boolean isGoogleMapsInstalled() {
+        boolean googleInstalled = LocationManagerHelper.getInstance().isGoogleMapsInstalled();
+        if (googleInstalled) {
+            return true;
+        }
+        Dialog dialog = buildInstallGoogleMapsDialog();
+        if (dialog != null) {
+            showDialog(dialog);
+        }
+        return false;
+    }
+
     public Dialog showDialog(Dialog dialog) {
         if (parentLayout == null || parentLayout.animationInProgress || parentLayout.startedTracking || parentLayout.checkTransitionAnimation()) {
             return null;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
index 6eed0286c..761db3cbd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
@@ -30,6 +30,7 @@
 
     private Context mContext;
     private int overScrollHeight;
+    private boolean searchPlacesEnabled;
     private SendLocationCell sendLocationCell;
     private Location gpsLocation;
     private Location customLocation;
@@ -43,6 +44,10 @@ public void setOverScrollHeight(int value) {
         overScrollHeight = value;
     }
 
+    public void setSearchPlacesEnabled(boolean searchPlacesEnabled) {
+        this.searchPlacesEnabled = searchPlacesEnabled;
+    }
+
     public void setGpsLocation(Location location) {
         gpsLocation = location;
         updateCell();
@@ -69,6 +74,9 @@ private void updateCell() {
 
     @Override
     public int getCount() {
+        if (!searchPlacesEnabled) {
+            return 2;
+        }
         if (searching || !searching && places.isEmpty()) {
             return 4;
         }
@@ -165,4 +173,8 @@ public boolean isEnabled(int position) {
     public boolean hasStableIds() {
         return true;
     }
+
+    public boolean isCustomLocation() {
+        return customLocation != null;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
index 2f5d4288b..401b7bf39 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivityAragats.java
@@ -122,12 +122,16 @@
     private final static int map_list_menu_satellite = 3;
     private final static int map_list_menu_hybrid = 4;
 
+
+    private boolean searchPlacesEnable;
+
     public interface LocationActivityDelegate {
         void didSelectLocation(TLRPC.MessageMedia location);
     }
 
     public LocationActivityAragats(Bundle args) {
         super(args);
+        searchPlacesEnable = getArguments().getBoolean(Constants.SEARCH_PLACES_ENABLE_ARG, false);
     }
 
     @Override
@@ -423,6 +427,7 @@ public void onClick(View v) {
 
             listView = new ListView(context);
             listView.setAdapter(adapter = new LocationActivityAdapter(context));
+            adapter.setSearchPlacesEnabled(searchPlacesEnable);
             listView.setVerticalScrollBarEnabled(false);
             listView.setDividerHeight(0);
             listView.setDivider(null);
@@ -454,6 +459,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                             location.geo = new TLRPC.TL_geoPoint();
                             location.geo.lat = userLocation.getLatitude();
                             location.geo._long = userLocation.getLongitude();
+                            location.isCustomLocation = adapter.isCustomLocation();
                             delegate.didSelectLocation(location);
                         }
                         finishFragment();
@@ -461,6 +467,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                         TLRPC.TL_messageMediaVenue object = adapter.getItem(position);
                         if (object != null && delegate != null) {
                             object.geo = convertLocationToGeoPoint(userLocation);
+                            object.isCustomLocation = true;
                             delegate.didSelectLocation(object);
                         }
                         finishFragment();
@@ -620,6 +627,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                     TLRPC.TL_messageMediaVenue object = searchAdapter.getItem(position);
                     if (object != null && delegate != null) {
                         object.geo = convertLocationToGeoPoint(userLocation);
+                        object.isCustomLocation = true;
                         delegate.didSelectLocation(object);
                     }
                     finishFragment();
@@ -654,8 +662,8 @@ public void onMyLocationChange(Location location) {
 
             //TODO in case of myLocation is null. it does not work !!!! Consider it !!!!
             // Circle area restriction.
-            boolean restrictedArea = getArguments().getBoolean("restricted_area", false);
-            final int radius = getArguments().getInt("radius", Constants.RADIUS);
+            boolean restrictedArea = getArguments().getBoolean(Constants.RESTRICTED_AREA, false);
+            final int radius = getArguments().getInt(Constants.RADIUS_ARG, Constants.RADIUS);
             if (restrictedArea) {
                 googleMap.setOnCameraChangeListener(new GoogleMap.OnCameraChangeListener() {
                     @Override
@@ -859,7 +867,9 @@ private void positionMarker(Location location) {
         } else if (googleMap != null) {
             LatLng latLng = new LatLng(location.getLatitude(), location.getLongitude());
             if (adapter != null) {
-                adapter.searchGooglePlacesWithQuery(null, myLocation);
+                if(searchPlacesEnable) {
+                    adapter.searchGooglePlacesWithQuery(null, myLocation);
+                }
                 adapter.setGpsLocation(myLocation);
             }
             if (!userLocationMoved) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 287359d8b..b856b7c79 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -9,14 +9,10 @@
 package org.telegram.ui;
 
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.app.ProgressDialog;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -1072,34 +1068,6 @@ public boolean onBackPressed() {
         return true;
     }
 
-    public boolean isGoogleMapsInstalled() {
-        try {
-            ApplicationInfo info = ApplicationLoader.applicationContext.getPackageManager().getApplicationInfo("com.google.android.apps.maps", 0);
-            return true;
-        } catch (PackageManager.NameNotFoundException e) {
-            if (getParentActivity() == null) {
-                return false;
-            }
-            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-            builder.setMessage("Install Google Maps?");
-            builder.setCancelable(true);
-            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
-                @Override
-                public void onClick(DialogInterface dialogInterface, int i) {
-                    try {
-                        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=com.google.android.apps.maps"));
-                        getParentActivity().startActivityForResult(intent, 500);
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
-                }
-            });
-            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-            showDialog(builder.create());
-            return false;
-        }
-    }
-
     private void updateVisibleRows() {
         if (postListView == null) {
             return;
@@ -1403,6 +1371,7 @@ public void removePost(Post post) {
 //            notifyItemRemoved(posts.size() - (!endReached ? 0 : 1) - index);
             notifyItemRemoved(posts.size() - index);
         }
+
     }
 
 
@@ -1413,6 +1382,7 @@ private void openLocationChooser() {
         Bundle args = new Bundle();
         args.putBoolean(Constants.RESTRICTED_AREA, true);
         args.putInt(Constants.RADIUS_ARG, Constants.RADIUS);
+        args.putBoolean(Constants.SEARCH_PLACES_ENABLE_ARG, true);
         LocationActivityAragats fragment = new LocationActivityAragats(args);
         fragment.setDelegate(new LocationActivityAragats.LocationActivityDelegate() {
             @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
index b38f64e61..fe110505e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostsActivity.java
@@ -19,6 +19,7 @@
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.Outline;
+import android.location.Location;
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
@@ -59,8 +60,10 @@
 
 import org.telegram.messenger.FileLog;
 
+import ru.aragats.wgo.dto.Coordinates;
 import ru.aragats.wgo.dto.Post;
 
+import org.telegram.messenger.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
@@ -77,6 +80,8 @@
 import org.telegram.utils.Constants;
 import org.telegram.utils.StringUtils;
 
+import java.util.Arrays;
+
 //TODO delte it or reuse.
 
 //TODO refresh list https://www.bignerdranch.com/blog/implementing-swipe-to-refresh/
@@ -126,9 +131,14 @@ public void run() {
     };
 
 
-    private final static int list_menu_synchronize = 1;
-    private final static int list_menu_map = 2;
+    private ActionBarMenuItem locationItem;
+    private static int itemId = 1;
 
+    private final static int list_menu_synchronize = itemId++;
+    private final static int list_menu_map = itemId++;
+    private final static int action_bar_menu_search = itemId++;
+    private final static int action_bar_menu_location = itemId++;
+    private final static int action_bar_menu_other = itemId++;
 
     private boolean offlineMode;
 
@@ -292,7 +302,7 @@ public View createView(final Context context, LayoutInflater inflater) {
         ResourceLoader.loadRecources(context);
 
         ActionBarMenu menu = actionBar.createMenu();
-        ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
+        ActionBarMenuItem item = menu.addItem(action_bar_menu_search, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
             @Override
             public void onSearchExpand() {
                 searching = true;
@@ -365,7 +375,9 @@ public void onTextChanged(EditText editText) {
         //TODO-TEMP search invisible
         item.setVisibility(View.INVISIBLE);
 
-        ActionBarMenuItem otherItem = menu.addItem(1, R.drawable.ic_ab_other);
+        locationItem = menu.addItem(action_bar_menu_location, R.drawable.ic_attach_location);
+
+        ActionBarMenuItem otherItem = menu.addItem(action_bar_menu_other, R.drawable.ic_ab_other);
         otherItem.addSubItem(list_menu_synchronize, LocaleController.getString("Synchronize", R.string.Synchronize), 0);
         otherItem.addSubItem(list_menu_map, LocaleController.getString("Map", R.string.Map), 0);
 
@@ -395,6 +407,8 @@ public void onItemClick(int id) {
                     System.out.println();
                 } else if (id == list_menu_map) {
                     System.out.println();
+                } else if (id == action_bar_menu_location) {
+                    openLocationChooser();
                 } else if (id == 1) {
                     System.out.println();
 //                    UserConfig.appLocked = !UserConfig.appLocked;
@@ -1047,4 +1061,52 @@ private void stopRefreshingProgressView() {
             progressView.setVisibility(View.INVISIBLE);
         }
     }
+
+    private void openLocationChooser() {
+        if (!isGoogleMapsInstalled()) {
+            return;
+        }
+        Bundle args = new Bundle();
+//        args.putBoolean(Constants.RESTRICTED_AREA, true);
+//        args.putInt(Constants.RADIUS_ARG, Constants.RADIUS);
+        args.putBoolean(Constants.SEARCH_PLACES_ENABLE_ARG, false);
+        LocationActivityAragats fragment = new LocationActivityAragats(args);
+        fragment.setDelegate(new LocationActivityAragats.LocationActivityDelegate() {
+            @Override
+            public void didSelectLocation(TLRPC.MessageMedia location) {
+                Location lastSavedLocation = LocationManagerHelper.getInstance().getLastSavedLocation();
+                if (location.isCustomLocation) {
+                    locationItem.setIcon(R.drawable.ic_attach_location_white);
+                } else {
+                    locationItem.setIcon(R.drawable.ic_attach_location);
+                }
+                Coordinates coordinates = new Coordinates();
+                coordinates.setCoordinates(Arrays.asList(location.geo._long, location.geo.lat));
+                coordinates.setType("Point");
+//                PostCreateActivity.this.userCoordinates = coordinates;
+//                Venue venue = new Venue();
+//                if (location.geoPlace != null) {
+//                    Coordinates placeCoordinates = new Coordinates();
+//                    placeCoordinates.setCoordinates(Arrays.asList(location.geoPlace._long, location.geoPlace.lat));
+//                    placeCoordinates.setType("Point");
+//                    venue.setCoordinates(placeCoordinates);
+//                } else {
+//                    venue.setCoordinates(coordinates);
+//                }
+//                venue.setFoursquareId(location.venue_id);
+//                if (!StringUtils.isEmpty(location.iconUrl)) {
+//                    Image image = new Image();
+//                    image.setUrl(location.iconUrl);
+//                    venue.setIcon(image);
+//                }
+//                venue.setName(location.title);
+//                venue.setAddress(location.address);
+//
+//                PostCreateActivity.this.venue = venue;
+//
+//                updateVenue();
+            }
+        });
+        presentFragment(fragment);
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
index b9f55dbc0..425ca2cb1 100644
--- a/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
+++ b/TMessagesProj/src/main/java/org/telegram/utils/Constants.java
@@ -25,6 +25,7 @@
 
     public static final String RESTRICTED_AREA = "restricted_area";
     public static final String RADIUS_ARG = "radius";
+    public static final String SEARCH_PLACES_ENABLE_ARG = "search_places_enable";
 
 
     // sizes from VK
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location_white.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location_white.png
new file mode 100644
index 000000000..4a658318a
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_attach_location_white.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location_white.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location_white.png
new file mode 100644
index 000000000..c657f9bb1
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_attach_location_white.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location_white.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location_white.png
new file mode 100644
index 000000000..29091fa39
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_attach_location_white.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location_white.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location_white.png
new file mode 100644
index 000000000..6481f34eb
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_attach_location_white.png differ
