diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
index 2d55257e7..b056d792d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
@@ -22,7 +22,6 @@
 import android.provider.Settings;
 import android.support.v4.internal.view.SupportMenuItem;
 import android.support.v7.app.ActionBar;
-import android.support.v7.widget.SearchView;
 import android.text.Html;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -33,7 +32,6 @@
 import android.widget.AdapterView;
 import android.widget.BaseAdapter;
 import android.widget.ImageButton;
-import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
 
@@ -69,6 +67,18 @@
     private int onlineCount = -1;
     private ArrayList<Integer> sortedUsers = new ArrayList<Integer>();
 
+    private int avatarRow;
+    private int settingsSectionRow;
+    private int settingsNotificationsRow;
+    private int settingsVibrateRow;
+    private int settingsSoundRow;
+    private int sharedMediaSectionRow;
+    private int sharedMediaRow;
+    private int membersSectionRow;
+    private int addMemberRow;
+    private int leaveGroupRow;
+    private int rowCount = 0;
+
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -90,9 +100,36 @@ public void didUploadedPhoto(TLRPC.InputFile file, TLRPC.PhotoSize small, TLRPC.
             }
         };
         avatarUpdater.parentFragment = this;
+
+        updateRowsIds();
+
         return true;
     }
 
+    private void updateRowsIds() {
+        rowCount = 0;
+        avatarRow = rowCount++;
+        settingsSectionRow = rowCount++;
+        settingsNotificationsRow = rowCount++;
+        settingsVibrateRow = rowCount++;
+        settingsSoundRow = rowCount++;
+        sharedMediaSectionRow = rowCount++;
+        sharedMediaRow = rowCount++;
+        if (info != null && !(info instanceof TLRPC.TL_chatParticipantsForbidden)) {
+            membersSectionRow = rowCount++;
+            rowCount += info.participants.size();
+            if (info.participants.size() < 200) {
+                addMemberRow = rowCount++;
+            } else {
+                addMemberRow = -1;
+            }
+        } else {
+            addMemberRow = -1;
+            membersSectionRow = -1;
+        }
+        leaveGroupRow = rowCount++;
+    }
+
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
@@ -119,12 +156,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
                 @Override
                 public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    int size = 0;
-                    if (info != null) {
-                        size += info.participants.size();
-                    }
-                    if (i > 6 && i < size + 7) {
-                        TLRPC.TL_chatParticipant user = info.participants.get(sortedUsers.get(i - 7));
+                    if (i > membersSectionRow && i < addMemberRow) {
+                        TLRPC.TL_chatParticipant user = info.participants.get(sortedUsers.get(i - membersSectionRow - 1));
                         if (user.user_id == UserConfig.clientUserId) {
                             return false;
                         }
@@ -154,19 +187,11 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
-                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i == 2) {
-                        SharedPreferences preferences = parentActivity.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                        String key = "notify_" + (-chat_id);
-                        boolean value = preferences.getBoolean(key, true);
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putBoolean(key, !value);
-                        editor.commit();
-                        listView.invalidateViews();
-                    } else if (i == 3) {
-                        if (parentActivity == null) {
-                            return;
-                        }
+                public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
+                    if (parentActivity == null) {
+                        return;
+                    }
+                    if (i == settingsSoundRow) {
                         try {
                             Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_NOTIFICATION);
@@ -195,38 +220,65 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 5) {
+                    } else if (i == sharedMediaRow) {
                         MediaActivity fragment = new MediaActivity();
                         Bundle bundle = new Bundle();
                         bundle.putLong("dialog_id", -chat_id);
                         fragment.setArguments(bundle);
                         ((LaunchActivity)parentActivity).presentFragment(fragment, "media_chat_" + chat_id, false);
-                    } else {
-                        int size = 0;
-                        if (info != null) {
-                            size += info.participants.size();
+                    } else if (i == addMemberRow) {
+                        openAddMenu();
+                    } else if (i > membersSectionRow && i < addMemberRow) {
+                        int user_id = info.participants.get(sortedUsers.get(i - membersSectionRow - 1)).user_id;
+                        if (user_id == UserConfig.clientUserId) {
+                            return;
                         }
-                        if (i > 6 && i < size + 7) {
-                            int user_id = info.participants.get(sortedUsers.get(i - 7)).user_id;
-                            if (user_id == UserConfig.clientUserId) {
-                                return;
-                            }
-                            UserProfileActivity fragment = new UserProfileActivity();
-                            Bundle args = new Bundle();
-                            args.putInt("user_id", user_id);
-                            fragment.setArguments(args);
-                            ((LaunchActivity)parentActivity).presentFragment(fragment, "user_" + user_id, false);
+                        UserProfileActivity fragment = new UserProfileActivity();
+                        Bundle args = new Bundle();
+                        args.putInt("user_id", user_id);
+                        fragment.setArguments(args);
+                        ((LaunchActivity)parentActivity).presentFragment(fragment, "user_" + user_id, false);
+                    } else if (i == settingsVibrateRow || i == settingsNotificationsRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+
+                        final String key;
+                        if (i == settingsVibrateRow) {
+                            key = "vibrate_" + (-chat_id);
+                        } else if (i == settingsNotificationsRow) {
+                            key = "notify2_" + (-chat_id);
                         } else {
-                            if (size + 7 == i) {
-                                if (info.participants.size() < 200) {
-                                    openAddMenu();
-                                } else {
-                                    kickUser(null);
+                            key = null;
+                        }
+                        int currentValue = preferences.getInt(key, 0);
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
+                        if(i == settingsVibrateRow)
+                            builder.setTitle(LocaleController.getString("Vibrate", R.string.Vibrate));
+                        else
+                            builder.setTitle(LocaleController.getString("Notifications", R.string.Notifications));
+                        builder.setSingleChoiceItems(new CharSequence[] {
+                                LocaleController.getString("Default", R.string.Default),
+                                LocaleController.getString("Enabled", R.string.Enabled),
+                                LocaleController.getString("Disabled", R.string.Disabled)
+                        }, currentValue, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                SharedPreferences.Editor editor = preferences.edit();
+
+                                if(which != 0)
+                                    editor.putInt(key, which);
+                                else
+                                    editor.remove(key);
+                                editor.commit();
+                                if (listView != null) {
+                                    listView.invalidateViews();
                                 }
-                            } else if (size + 7 == i + 1) {
-                                kickUser(null);
+
+                                dialog.dismiss();
                             }
-                        }
+                        });
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
                     }
                 }
             });
@@ -299,6 +351,7 @@ public void didReceivedNotification(int id, Object... args) {
             if (chatId == chat_id) {
                 info = (TLRPC.ChatParticipants)args[1];
                 updateOnlineCount();
+                updateRowsIds();
                 if (listViewAdapter != null) {
                     listViewAdapter.notifyDataSetChanged();
                 }
@@ -515,19 +568,12 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return (i == 2 || i == 3 || i == 5 || i > 6) && i != getCount() - 1;
+            return i == settingsNotificationsRow || i == settingsSoundRow || i == sharedMediaRow || i > membersSectionRow && i <= addMemberRow || i == settingsVibrateRow;
         }
 
         @Override
         public int getCount() {
-            int count = 6;
-            if (info != null && !(info instanceof TLRPC.TL_chatParticipantsForbidden)) {
-                count += info.participants.size() + 2;
-                if (info.participants.size() < 200) {
-                    count++;
-                }
-            }
-            return count;
+            return rowCount;
         }
 
         @Override
@@ -641,35 +687,15 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     view = li.inflate(R.layout.settings_section_layout, viewGroup, false);
                 }
                 TextView textView = (TextView)view.findViewById(R.id.settings_section_text);
-                if (i == 1) {
+                if (i == settingsSectionRow) {
                     textView.setText(LocaleController.getString("SETTINGS", R.string.SETTINGS));
-                } else if (i == 4) {
+                } else if (i == sharedMediaSectionRow) {
                     textView.setText(LocaleController.getString("SHAREDMEDIA", R.string.SHAREDMEDIA));
-                } else if (i == 6) {
+                } else if (i == membersSectionRow) {
                     TLRPC.Chat chat = MessagesController.getInstance().chats.get(chat_id);
                     textView.setText(String.format("%d %s", chat.participants_count, LocaleController.getString("MEMBERS", R.string.MEMBERS)));
                 }
             } else if (type == 2) {
-                if (view == null) {
-                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                    view = li.inflate(R.layout.settings_row_check_layout, viewGroup, false);
-                }
-                TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
-                View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 2) {
-                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                    String key = "notify_" + (-chat_id);
-                    boolean value = preferences.getBoolean(key, true);
-                    ImageView checkButton = (ImageView)view.findViewById(R.id.settings_row_check_button);
-                    if (value) {
-                        checkButton.setImageResource(R.drawable.btn_check_on);
-                    } else {
-                        checkButton.setImageResource(R.drawable.btn_check_off);
-                    }
-                    textView.setText(LocaleController.getString("Notifications", R.string.Notifications));
-                    divider.setVisibility(View.VISIBLE);
-                }
-            } else if (type == 3) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.user_profile_leftright_row_layout, viewGroup, false);
@@ -677,7 +703,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
                 TextView detailTextView = (TextView)view.findViewById(R.id.settings_row_text_detail);
                 View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 5) {
+                if (i == sharedMediaRow) {
                     textView.setText(LocaleController.getString("SharedMedia", R.string.SharedMedia));
                     if (totalMediaCount == -1) {
                         detailTextView.setText(LocaleController.getString("Loading", R.string.Loading));
@@ -685,9 +711,33 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         detailTextView.setText(String.format("%d", totalMediaCount));
                     }
                     divider.setVisibility(View.INVISIBLE);
+                } else if (i == settingsVibrateRow) {
+                    textView.setText(LocaleController.getString("Vibrate", R.string.Vibrate));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int value = preferences.getInt("vibrate_" + (-chat_id), 0);
+                    if (value == 0) {
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+                    } else if (value == 1) {
+                        detailTextView.setText(LocaleController.getString("Enabled", R.string.Enabled));
+                    } else if (value == 2) {
+                        detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
+                    }
+                } else if (i == settingsNotificationsRow) {
+                    textView.setText(LocaleController.getString("Notifications", R.string.Notifications));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int value = preferences.getInt("notify2_" + (-chat_id), 0);
+                    if (value == 0) {
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+                    } else if (value == 1) {
+                        detailTextView.setText(LocaleController.getString("Enabled", R.string.Enabled));
+                    } else if (value == 2) {
+                        detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
+                    }
                 }
-            } else if (type == 4) {
-                TLRPC.TL_chatParticipant part = info.participants.get(sortedUsers.get(i - 7));
+            } else if (type == 3) {
+                TLRPC.TL_chatParticipant part = info.participants.get(sortedUsers.get(i - membersSectionRow - 1));
                 TLRPC.User user = MessagesController.getInstance().users.get(part.user_id);
 
                 if (view == null) {
@@ -703,39 +753,37 @@ public void onClick(DialogInterface dialogInterface, int i) {
 //                } else {
 //
 //                }
-            } else if (type == 5) {
+            } else if (type == 4) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.chat_profile_add_row, viewGroup, false);
                     TextView textView = (TextView)view.findViewById(R.id.messages_list_row_name);
                     textView.setText(LocaleController.getString("AddMember", R.string.AddMember));
                 }
-            } else if (type == 6) {
+            } else if (type == 5) {
                 if (view == null) {
-                    if (view == null) {
-                        LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                        view = li.inflate(R.layout.settings_logout_button, viewGroup, false);
-                        TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
-                        textView.setText(LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
-                        textView.setOnClickListener(new View.OnClickListener() {
-                            @Override
-                            public void onClick(View view) {
-                                AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
-                                builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
-                                builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
-                                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
-                                    @Override
-                                    public void onClick(DialogInterface dialogInterface, int i) {
-                                        kickUser(null);
-                                    }
-                                });
-                                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                                builder.show().setCanceledOnTouchOutside(true);
-                            }
-                        });
-                    }
+                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+                    view = li.inflate(R.layout.settings_logout_button, viewGroup, false);
+                    TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
+                    textView.setText(LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit));
+                    textView.setOnClickListener(new View.OnClickListener() {
+                        @Override
+                        public void onClick(View view) {
+                            AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
+                            builder.setMessage(LocaleController.getString("AreYouSure", R.string.AreYouSure));
+                            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialogInterface, int i) {
+                                    kickUser(null);
+                                }
+                            });
+                            builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                            builder.show().setCanceledOnTouchOutside(true);
+                        }
+                    });
                 }
-            } else if (type == 7) {
+            } else if (type == 6) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.settings_row_detail_layout, viewGroup, false);
@@ -743,7 +791,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
                 TextView detailTextView = (TextView)view.findViewById(R.id.settings_row_text_detail);
                 View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 3) {
+                if (i == settingsSoundRow) {
                     SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                     String name = preferences.getString("sound_chat_" + chat_id, LocaleController.getString("Default", R.string.Default));
                     if (name.equals("NoSound")) {
@@ -760,41 +808,27 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         @Override
         public int getItemViewType(int i) {
-            if (i == 0) {
+            if (i == avatarRow) {
                 return 0;
-            } else if (i == 1 || i == 4 || i == 6) {
+            } else if (i == settingsSectionRow || i == sharedMediaSectionRow || i == membersSectionRow) {
                 return 1;
-            } else if (i == 2) {
+            } else if (i == sharedMediaRow || i == settingsVibrateRow || i == settingsNotificationsRow) {
                 return 2;
-            } else if (i == 5) {
+            } else if (i == settingsSoundRow) {
+                return 6;
+            } else if (i == addMemberRow) {
+                return 4;
+            } else if (i == leaveGroupRow) {
+                return 5;
+            } else if (i > membersSectionRow && i < addMemberRow) {
                 return 3;
-            } else if (i == 3) {
-                return 7;
-            } else if (i > 6) {
-                int size = 0;
-                if (info != null) {
-                    size += info.participants.size();
-                }
-                if (i > 6 && i < size + 7) {
-                    return 4;
-                } else {
-                    if (size + 7 == i) {
-                        if (info != null && info.participants.size() < 200) {
-                            return 5;
-                        } else {
-                            return 6;
-                        }
-                    } else if (size + 8 == i) {
-                        return 6;
-                    }
-                }
             }
             return 0;
         }
 
         @Override
         public int getViewTypeCount() {
-            return 8;
+            return 7;
         }
 
         @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
index 00045c874..209e1dcbb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
@@ -32,7 +32,6 @@
 import android.widget.AdapterView;
 import android.widget.BaseAdapter;
 import android.widget.ImageButton;
-import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
 
@@ -72,6 +71,19 @@
     private final static int edit_contact = 4;
     private final static int delete_contact = 5;
 
+    private int avatarRow;
+    private int phoneSectionRow;
+    private int phoneRow;
+    private int settingsSectionRow;
+    private int settingsTimerRow;
+    private int settingsKeyRow;
+    private int settingsNotificationsRow;
+    private int settingsVibrateRow;
+    private int settingsSoundRow;
+    private int sharedMediaSectionRow;
+    private int sharedMediaRow;
+    private int rowCount = 0;
+
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -85,6 +97,7 @@ public boolean onFragmentCreate() {
         if (dialog_id != 0) {
             currentEncryptedChat = MessagesController.getInstance().encryptedChats.get((int)(dialog_id >> 32));
         }
+        updateRowsIds();
         return MessagesController.getInstance().users.get(user_id) != null;
     }
 
@@ -98,6 +111,26 @@ public void onFragmentDestroy() {
         NotificationCenter.getInstance().removeObserver(this, MessagesController.encryptedChatUpdated);
     }
 
+    private void updateRowsIds() {
+        rowCount = 0;
+        avatarRow = rowCount++;
+        phoneSectionRow = rowCount++;
+        phoneRow = rowCount++;
+        settingsSectionRow = rowCount++;
+        if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
+            settingsTimerRow = rowCount++;
+            settingsKeyRow = rowCount++;
+        } else {
+            settingsTimerRow = -1;
+            settingsKeyRow = -1;
+        }
+        settingsNotificationsRow = rowCount++;
+        settingsVibrateRow = rowCount++;
+        settingsSoundRow = rowCount++;
+        sharedMediaSectionRow = rowCount++;
+        sharedMediaRow = rowCount++;
+    }
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -131,28 +164,60 @@ public void onClick(View view) {
             listView.setAdapter(listAdapter);
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
-                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i == 4 && dialog_id == 0 ||
-                            dialog_id != 0 && (i == 6 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat  ||
-                                    i == 4 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
-                        SharedPreferences preferences = parentActivity.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                        String key;
-                        if (dialog_id == 0) {
-                            key = "notify_" + user_id;
+                public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
+                    if (parentActivity == null) {
+                        return;
+                    }
+                    if (i == settingsVibrateRow || i == settingsNotificationsRow) {
+                        final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+
+                        final String key;
+                        if (i == settingsVibrateRow) {
+                            if (dialog_id == 0) {
+                                key = "vibrate_" + user_id;
+                            } else {
+                                key = "vibrate_" + dialog_id;
+                            }
+                        } else if (i == settingsNotificationsRow) {
+                            if (dialog_id == 0) {
+                                key = "notify2_" + user_id;
+                            } else {
+                                key = "notify2_" + dialog_id;
+                            }
                         } else {
-                            key = "notify_" + dialog_id;
-                        }
-                        boolean value = preferences.getBoolean(key, true);
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putBoolean(key, !value);
-                        editor.commit();
-                        listView.invalidateViews();
-                    } else if (i == 5 && dialog_id == 0 ||
-                            dialog_id != 0 && (i == 7 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                    i == 5 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
-                        if (parentActivity == null) {
-                            return;
+                            key = null;
                         }
+                        int currentValue = preferences.getInt(key, 0);
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
+                        if(i == settingsVibrateRow)
+                            builder.setTitle(LocaleController.getString("Vibrate", R.string.Vibrate));
+                        else
+                            builder.setTitle(LocaleController.getString("Notifications", R.string.Notifications));
+                        builder.setSingleChoiceItems(new CharSequence[] {
+                                LocaleController.getString("Default", R.string.Default),
+                                LocaleController.getString("Enabled", R.string.Enabled),
+                                LocaleController.getString("Disabled", R.string.Disabled)
+                        },currentValue, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                SharedPreferences.Editor editor = preferences.edit();
+
+                                if(which != 0)
+                                    editor.putInt(key, which);
+                                else
+                                    editor.remove(key);
+                                editor.commit();
+                                if (listView != null) {
+                                    listView.invalidateViews();
+                                }
+
+                                dialog.dismiss();
+                            }
+                        });
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.show().setCanceledOnTouchOutside(true);
+                    } else if (i == settingsSoundRow) {
                         try {
                             Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
                             tmpIntent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_NOTIFICATION);
@@ -181,9 +246,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 7 && dialog_id == 0 ||
-                            dialog_id != 0 && (i == 9 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                    i == 7 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                    } else if (i == sharedMediaRow) {
                         MediaActivity fragment = new MediaActivity();
                         Bundle bundle = new Bundle();
                         if (dialog_id != 0) {
@@ -193,13 +256,13 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         }
                         fragment.setArguments(bundle);
                         ((LaunchActivity)parentActivity).presentFragment(fragment, "media_user_" + user_id, false);
-                    } else if (i == 5 && dialog_id != 0 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
+                    } else if (i == settingsKeyRow) {
                         IdenticonActivity fragment = new IdenticonActivity();
                         Bundle bundle = new Bundle();
                         bundle.putInt("chat_id", (int)(dialog_id >> 32));
                         fragment.setArguments(bundle);
                         ((LaunchActivity)parentActivity).presentFragment(fragment, "key_" + dialog_id, false);
-                    } else if (i == 4 && dialog_id != 0 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
+                    } else if (i == settingsTimerRow) {
                         AlertDialog.Builder builder = new AlertDialog.Builder(parentActivity);
                         builder.setTitle(LocaleController.getString("MessageLifetime", R.string.MessageLifetime));
                         builder.setItems(new CharSequence[]{
@@ -335,6 +398,7 @@ public void didReceivedNotification(int id, Object... args) {
             TLRPC.EncryptedChat chat = (TLRPC.EncryptedChat)args[0];
             if (currentEncryptedChat != null && chat.id == currentEncryptedChat.id) {
                 currentEncryptedChat = chat;
+                updateRowsIds();
                 if (listAdapter != null) {
                     listAdapter.notifyDataSetChanged();
                 }
@@ -575,28 +639,12 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            if (dialog_id == 0) {
-                return i == 2 || i == 4 || i == 5 || i == 7;
-            } else {
-                if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
-                    return i == 2 || i == 4 || i == 5 || i == 6 || i == 7 || i == 9;
-                } else {
-                    return i == 2 || i == 4 || i == 5 || i == 9;
-                }
-            }
+            return i == phoneRow || i == settingsTimerRow || i == settingsKeyRow || i == settingsNotificationsRow || i == sharedMediaRow || i == settingsSoundRow || i == settingsVibrateRow;
         }
 
         @Override
         public int getCount() {
-            if (dialog_id == 0) {
-                return 8;
-            } else {
-                if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
-                    return 10;
-                } else {
-                    return 8;
-                }
-            }
+            return rowCount;
         }
 
         @Override
@@ -676,13 +724,11 @@ public void onClick(View view) {
                     view = li.inflate(R.layout.settings_section_layout, viewGroup, false);
                 }
                 TextView textView = (TextView)view.findViewById(R.id.settings_section_text);
-                if (i == 1) {
+                if (i == phoneSectionRow) {
                     textView.setText(LocaleController.getString("PHONE", R.string.PHONE));
-                } else if (i == 3) {
+                } else if (i == settingsSectionRow) {
                     textView.setText(LocaleController.getString("SETTINGS", R.string.SETTINGS));
-                } else if (i == 6 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 8 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 6 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                } else if (i == sharedMediaSectionRow) {
                     textView.setText(LocaleController.getString("SHAREDMEDIA", R.string.SHAREDMEDIA));
                 }
             } else if (type == 2) {
@@ -757,7 +803,7 @@ public void onClick(View view) {
                 TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
                 TextView detailTextView = (TextView)view.findViewById(R.id.settings_row_text_detail);
                 View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 2) {
+                if (i == phoneRow) {
                     if (user.phone != null && user.phone.length() != 0) {
                         textView.setText(PhoneFormat.getInstance().format("+" + user.phone));
                     } else {
@@ -767,33 +813,6 @@ public void onClick(View view) {
                     detailTextView.setText(LocaleController.getString("PhoneMobile", R.string.PhoneMobile));
                 }
             } else if (type == 3) {
-                if (view == null) {
-                    LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-                    view = li.inflate(R.layout.settings_row_check_layout, viewGroup, false);
-                }
-                TextView textView = (TextView)view.findViewById(R.id.settings_row_text);
-                View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 4 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 6 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 4 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
-                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
-                    String key;
-                    if (dialog_id == 0) {
-                        key = "notify_" + user_id;
-                    } else {
-                        key = "notify_" + dialog_id;
-                    }
-                    boolean value = preferences.getBoolean(key, true);
-                    ImageView checkButton = (ImageView)view.findViewById(R.id.settings_row_check_button);
-                    if (value) {
-                        checkButton.setImageResource(R.drawable.btn_check_on);
-                    } else {
-                        checkButton.setImageResource(R.drawable.btn_check_off);
-                    }
-                    textView.setText(LocaleController.getString("Notifications", R.string.Notifications));
-                    divider.setVisibility(View.VISIBLE);
-                }
-            } else if (type == 4) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.user_profile_leftright_row_layout, viewGroup, false);
@@ -802,9 +821,7 @@ public void onClick(View view) {
                 TextView detailTextView = (TextView)view.findViewById(R.id.settings_row_text_detail);
 
                 View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 7 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 9 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 7 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                if (i == sharedMediaRow) {
                     textView.setText(LocaleController.getString("SharedMedia", R.string.SharedMedia));
                     if (totalMediaCount == -1) {
                         detailTextView.setText(LocaleController.getString("Loading", R.string.Loading));
@@ -812,7 +829,7 @@ public void onClick(View view) {
                         detailTextView.setText(String.format("%d", totalMediaCount));
                     }
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 4 && dialog_id != 0) {
+                } else if (i == settingsTimerRow) {
                     TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().encryptedChats.get((int)(dialog_id >> 32));
                     textView.setText(LocaleController.getString("MessageLifetime", R.string.MessageLifetime));
                     divider.setVisibility(View.VISIBLE);
@@ -833,8 +850,46 @@ public void onClick(View view) {
                     } else {
                         detailTextView.setText(String.format("%d", encryptedChat.ttl));
                     }
+                } else if (i == settingsVibrateRow) {
+                    textView.setText(LocaleController.getString("Vibrate", R.string.Vibrate));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+
+                    String key;
+                    if (dialog_id == 0) {
+                        key = "vibrate_" + user_id;
+                    } else {
+                        key = "vibrate_" + dialog_id;
+                    }
+
+                    int value = preferences.getInt(key, 0);
+                    if (value == 0) {
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+                    } else if (value == 1) {
+                        detailTextView.setText(LocaleController.getString("Enabled", R.string.Enabled));
+                    } else if (value == 2) {
+                        detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
+                    }
+                } else if (i == settingsNotificationsRow) {
+                    textView.setText(LocaleController.getString("Notifications", R.string.Notifications));
+                    divider.setVisibility(View.VISIBLE);
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    String key;
+                    if (dialog_id == 0) {
+                        key = "notify2_" + user_id;
+                    } else {
+                        key = "notify2_" + dialog_id;
+                    }
+                    int value = preferences.getInt(key, 0);
+                    if (value == 0) {
+                        detailTextView.setText(LocaleController.getString("Default", R.string.Default));
+                    } else if (value == 1) {
+                        detailTextView.setText(LocaleController.getString("Enabled", R.string.Enabled));
+                    } else if (value == 2) {
+                        detailTextView.setText(LocaleController.getString("Disabled", R.string.Disabled));
+                    }
                 }
-            } else if (type == 5) {
+            } else if (type == 4) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.user_profile_identicon_layout, viewGroup, false);
@@ -846,7 +901,7 @@ public void onClick(View view) {
                 TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().encryptedChats.get((int)(dialog_id >> 32));
                 identiconView.setBytes(encryptedChat.auth_key);
                 textView.setText(LocaleController.getString("EncryptionKey", R.string.EncryptionKey));
-            } else if (type == 6) {
+            } else if (type == 5) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                     view = li.inflate(R.layout.settings_row_detail_layout, viewGroup, false);
@@ -855,9 +910,7 @@ public void onClick(View view) {
                 TextView detailTextView = (TextView)view.findViewById(R.id.settings_row_text_detail);
 
                 View divider = view.findViewById(R.id.settings_row_divider);
-                if (i == 5 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 7 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 5 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                if (i == settingsSoundRow) {
                     SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                     String name = preferences.getString("sound_" + user_id, LocaleController.getString("Default", R.string.Default));
                     if (name.equals("NoSound")) {
@@ -875,59 +928,25 @@ public void onClick(View view) {
 
         @Override
         public int getItemViewType(int i) {
-            if (dialog_id != 0) {
-                if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
-                    if (i == 0) {
-                        return 0;
-                    } else if (i == 1 || i == 3 || i == 8) {
-                        return 1;
-                    } else if (i == 2) {
-                        return 2;
-                    } else if (i == 6) {
-                        return 3;
-                    } else if (i == 9 || i == 4) {
-                        return 4;
-                    } else if (i == 5) {
-                        return 5;
-                    } else if (i == 7) {
-                        return 6;
-                    }
-                } else {
-                    if (i == 0) {
-                        return 0;
-                    } else if (i == 1 || i == 3 || i == 6) {
-                        return 1;
-                    } else if (i == 2) {
-                        return 2;
-                    } else if (i == 4) {
-                        return 3;
-                    } else if (i == 7) {
-                        return 4;
-                    } else if (i == 5) {
-                        return 6;
-                    }
-                }
-            } else {
-                if (i == 0) {
-                    return 0;
-                } else if (i == 1 || i == 3 || i == 6) {
-                    return 1;
-                } else if (i == 2) {
-                    return 2;
-                } else if (i == 4) {
-                    return 3;
-                } else if (i == 7) {
-                    return 4;
-                } else if (i == 5) {
-                    return 6;
-                }
+            if (i == avatarRow) {
+                return 0;
+            } else if (i == phoneSectionRow || i == settingsSectionRow || i == sharedMediaSectionRow) {
+                return 1;
+            } else if (i == phoneRow) {
+                return 2;
+            } else if (i == sharedMediaRow || i == settingsTimerRow || i == settingsNotificationsRow || i == settingsVibrateRow) {
+                return 3;
+            } else if (i == settingsKeyRow) {
+                return 4;
+            } else if (i == settingsSoundRow) {
+                return 5;
             }
             return 0;
         }
 
         @Override
         public int getViewTypeCount() {
-            return 7;
+            return 6;
         }
 
         @Override
