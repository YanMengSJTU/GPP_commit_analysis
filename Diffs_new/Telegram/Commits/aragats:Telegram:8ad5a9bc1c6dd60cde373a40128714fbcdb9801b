diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 32d39df40..299df7224 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -3330,6 +3330,8 @@ public void serializeToStream(AbsSerializedData stream) {
         public String last_name;
         public int user_id;
         public WebPage webpage;
+        //TODO-aragats
+        public String iconUrl;
 
         public static MessageMedia TLdeserialize(AbsSerializedData stream, int constructor, boolean exception) {
             MessageMedia result = null;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
index 2e3789f74..469d87753 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/object/VenueObject.java
@@ -41,7 +41,11 @@ public String getName() {
         return this.venue.getName();
     }
 
-//
+    public Venue getVenue() {
+        return venue;
+    }
+
+    //
 //
 //
 //    public long id;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
index 81d26e865..ce1994792 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
@@ -163,6 +163,7 @@ public void onResponse(JSONObject response) {
 
                                         JSONObject location = object.getJSONObject("location");
                                         TLRPC.TL_messageMediaVenue venue = new TLRPC.TL_messageMediaVenue();
+                                        venue.iconUrl = iconUrl;
                                         venue.geo = new TLRPC.TL_geoPoint();
                                         venue.geo.lat = location.getDouble("lat");
                                         venue.geo._long = location.getDouble("lng");
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index 4b3fbd9a6..6d0cfdbcb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -35,6 +35,7 @@
 import android.view.ViewTreeObserver;
 import android.view.WindowManager;
 import android.widget.FrameLayout;
+import android.widget.ImageView;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -54,9 +55,12 @@
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
+import org.telegram.messenger.dto.Coordinates;
 import org.telegram.messenger.dto.Image;
 import org.telegram.messenger.dto.Post;
+import org.telegram.messenger.dto.Venue;
 import org.telegram.messenger.object.PostObject;
+import org.telegram.messenger.object.VenueObject;
 import org.telegram.messenger.service.mock.PostServiceMock;
 import org.telegram.messenger.service.mock.VenueServiceMock;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -124,6 +128,7 @@
 
 
     protected ArrayList<PostObject> postObjects = new ArrayList<>();
+    protected VenueObject venueObject;
 
     private boolean loading = false;
 
@@ -324,7 +329,6 @@ public void onItemClick(final int id) {
 //
 
 
-
         avatarContainer = new FrameLayoutFixed(context);
         avatarContainer.setBackgroundResource(R.drawable.bar_selector);
         avatarContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
@@ -354,7 +358,7 @@ public void onClick(View v) {
         nameTextView.setGravity(Gravity.LEFT);
         nameTextView.setCompoundDrawablePadding(AndroidUtilities.dp(4));
         nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        nameTextView.setText("Venue Name");
+        nameTextView.setText("Venue name");
         avatarContainer.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM, 54, 0, 0, 22));
 
         onlineTextView = new TextView(context);
@@ -368,7 +372,6 @@ public void onClick(View v) {
         avatarContainer.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM, 54, 0, 0, 4));
 
 
-
         ActionBarMenu menu = actionBar.createMenu();
 
 //        R.drawable.ic_send  - make it white icon then I can use it here. !!
@@ -834,9 +837,13 @@ private void updateTitle() {
         if (nameTextView == null) {
             return;
         }
-//        if (currentChat != null) {
-        nameTextView.setText("My Title");
-//        }
+        String name = "Current location";
+        if (venueObject != null) {
+            if (!StringUtils.isEmpty(venueObject.getName())) {
+                name = venueObject.getName();
+            }
+            nameTextView.setText(name);
+        }
     }
 
     private void updateTitleIcons() {
@@ -845,7 +852,7 @@ private void updateTitleIcons() {
         int rightIcon = 0;
         nameTextView.setCompoundDrawablesWithIntrinsicBounds(leftIcon, 0, rightIcon, 0);
 
-        if(muteItem != null) {
+        if (muteItem != null) {
             if (rightIcon != 0) {
                 muteItem.setText(LocaleController.getString("UnmuteNotifications", R.string.UnmuteNotifications));
             } else {
@@ -858,21 +865,32 @@ private void updateSubtitle() {
         if (onlineTextView == null) {
             return;
         }
-        CharSequence printString = "printing";
-        printString = TextUtils.replace(printString, new String[]{"..."}, new String[]{""});
-        onlineTextView.setText(printString);
+//        CharSequence addressString = "printing";
+        CharSequence addressString = "address";
+        if (venueObject != null && !StringUtils.isEmpty(venueObject.getAddress())) {
+            addressString = venueObject.getAddress();
+        }
+        addressString = TextUtils.replace(addressString, new String[]{"..."}, new String[]{""});
+        onlineTextView.setText(addressString);
     }
 
     private void checkAndUpdateAvatar() {
+//        ImageView imageView = new ImageView(this.getParentActivity());
+//        imageView.setImageResource(R.drawable.pin);
+
 
         if (avatarImageView != null) {
             AvatarDrawable avatarDrawable = new AvatarDrawable();
 //            avatarImageView.setImage(newPhoto, "50_50", avatarDrawable);
 //            avatarImageView.setImage("/storage/emulated/0/Telegram/Telegram Images/730111210_6623.jpg", "50_50", avatarDrawable);
             //TODO probably save venueObject. into field in Activity.
-            if (avatarImageView != null) {
-                avatarImageView.setImage(PostsController.getInstance().getCurrentVenueObject().getVenuePreviewImageUrl(), "50_50", avatarDrawable);
+            if (venueObject != null && !StringUtils.isEmpty(venueObject.getVenuePreviewImageUrl())) {
+                avatarImageView.setImage(venueObject.getVenuePreviewImageUrl(), "50_50", avatarDrawable);
+            } else {
+                avatarImageView.setImageResource(R.drawable.pin);
+//                    avatarImageView.setImage(PostsController.getInstance().getCurrentVenueObject().getVenuePreviewImageUrl(), "50_50", avatarDrawable);
             }
+
         }
     }
 
@@ -1054,7 +1072,7 @@ public void onPause() {
                 SharedPreferences.Editor editor = preferences.edit();
                 //TODO save text before pause.
                 editor.putString("new_post_text", text);
-                if(!postObjects.isEmpty()) {
+                if (!postObjects.isEmpty()) {
                     editor.putString("new_post_photo", postObjects.get(0).getImage().getUrl());
                 }
                 editor.commit();
@@ -1571,13 +1589,31 @@ private void openLocationChooser() {
         fragment.setDelegate(new LocationActivity.LocationActivityDelegate() {
             @Override
             public void didSelectLocation(TLRPC.MessageMedia location) {
-                Toast.makeText(getParentActivity(), location.venue_id + " " + location.geo.lat + " " + location.geo._long, Toast.LENGTH_LONG).show();
+                Venue venue = new Venue();
+                Coordinates coordinates = new Coordinates();
+                coordinates.setCoordinates(Arrays.asList(location.geo._long, location.geo.lat));
+                coordinates.setType("Point");
+                venue.setCoordinates(coordinates);
+                venue.setFoursquareId(location.venue_id);
+                Image image = new Image();
+                image.setUrl(location.iconUrl);
+                venue.setImage(image);
+                venue.setPreviewImage(image);
+                venue.setName(location.title);
+                venue.setAddress(location.address);
+                if (StringUtils.isEmpty(venue.getAddress())) {
+                    venue.setAddress(location.geo._long + ", " + location.geo.lat);
+                }
+                venueObject = new VenueObject(venue);
+//                location.iconUrl;
+//                Toast.makeText(getParentActivity(), location.venue_id + " " + location.geo.lat + " " + location.geo._long, Toast.LENGTH_LONG).show();
 //                            SendMessagesHelper.getInstance().sendMessage(location, dialog_id, replyingMessageObject);
 //                            moveScrollToLastMessage();
 //                            showReplyPanel(false, null, null, null, false, true);
 //                            if (paused) {
 //                                scrollToTopOnResume = true;
 //                            }
+                updateVenue();
             }
         });
         presentFragment(fragment);
@@ -1701,4 +1737,15 @@ private boolean attachPhotoHandle() {
         }
     }
 
+
+    private void updateVenue() {
+        if (venueObject != null) {
+            updateTitle();
+            updateSubtitle();
+            checkAndUpdateAvatar();
+
+        }
+
+    }
+
 }
