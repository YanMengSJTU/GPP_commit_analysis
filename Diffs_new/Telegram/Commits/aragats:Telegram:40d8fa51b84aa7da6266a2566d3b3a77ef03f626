diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
index fcdea8c81..79d8a75cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PostCreateActivity.java
@@ -20,6 +20,8 @@
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
+import android.location.Address;
+import android.location.Geocoder;
 import android.location.Location;
 import android.media.ExifInterface;
 import android.net.Uri;
@@ -76,9 +78,11 @@
 import org.telegram.utils.StringUtils;
 
 import java.io.File;
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Locale;
 
 import ru.aragats.wgo.ApplicationLoader;
 import ru.aragats.wgo.R;
@@ -1415,6 +1419,25 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
                 venue.setAddress(location.address);
                 if (StringUtils.isEmpty(venue.getAddress())) {
                     venue.setAddress(location.geo._long + ", " + location.geo.lat); // TODO better to find concrete address. Google service.
+// TODO temp
+                    Geocoder geocoder;
+                    List<Address> addresses;
+                    geocoder = new Geocoder(getParentActivity(), Locale.getDefault()); //TODO de ?? should be english ? or ?? in real time. Save in ENG, but display in locale in real-time
+
+                    try {
+                        addresses = geocoder.getFromLocation(location.geo.lat, location.geo._long, 1); // Here 1 represent max location result to returned, by documents it recommended 1 to 5
+                        String address = addresses.get(0).getAddressLine(0); // If any additional address line present than only, check with max available address lines by getMaxAddressLineIndex()
+                        String city = addresses.get(0).getLocality();
+                        String state = addresses.get(0).getAdminArea();
+                        String country = addresses.get(0).getCountryName();
+                        String postalCode = addresses.get(0).getPostalCode();
+                        String knownName = addresses.get(0).getFeatureName(); // Only if available else return NULL
+                        venue.setAddress(address);
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+
+///
                 }
                 PostCreateActivity.this.venue = venue;
 
