diff --git a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
index 9facc7547..389defd05 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/PostsController.java
@@ -28,9 +28,10 @@
 import java.util.List;
 import java.util.concurrent.ConcurrentHashMap;
 
-import retrofit.Callback;
-import retrofit.Response;
-import retrofit.Retrofit;
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+import retrofit2.Retrofit;
 import ru.aragats.wgo.ApplicationLoader;
 import ru.aragats.wgo.comparator.PostDateComparator;
 import ru.aragats.wgo.comparator.PostDistanceComparator;
@@ -140,13 +141,13 @@ public void addPost(final Post post) {
 
         RestManager.getInstance().uploadImage(new FileUploadRequest(post.getImage().getUrl(), post.getImage().getType()), new Callback<List<Image>>() {
             @Override
-            public void onResponse(Response<List<Image>> response, Retrofit retrofit) {
+            public void onResponse(Call<List<Image>> call, Response<List<Image>> response) {
                 post.setImages(response.body()); // TODO chek whether images are not empty
                 savePost(post);
             }
 
             @Override
-            public void onFailure(Throwable t) {
+            public void onFailure(Call<List<Image>> call, Throwable t) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.savePostError);
             }
         });
@@ -156,15 +157,16 @@ public void onFailure(Throwable t) {
     private void savePost(final Post post) {
         RestManager.getInstance().savePost(post, new Callback<String>() {
             @Override
-            public void onResponse(Response<String> response, Retrofit retrofit) {
+            public void onResponse(Call<String> call, Response<String> response) {
                 post.setId(response.body());
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.newPostSaved);
             }
 
             @Override
-            public void onFailure(Throwable t) {
+            public void onFailure(Call<String> call, Throwable t) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.savePostError);
             }
+
         });
     }
 
@@ -301,18 +303,19 @@ private void loadPostFromServer(final PostRequest postRequest, final boolean rel
         nextOffset = 0;
         RestManager.getInstance().findNearPosts(postRequest, new Callback<PostResponse>() {
             @Override
-            public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
+            public void onResponse(Call<PostResponse> call, Response<PostResponse> response) {
                 //        after getting response.
                 processLoadedPosts(response.body(), reload);
             }
 
             @Override
-            public void onFailure(Throwable t) {
+            public void onFailure(Call<PostResponse> call, Throwable t) {
 //                loadingPosts = false; // TODO false or true ??? if continue then true otherwise false. False if finish. true if goes to VK
 //                NotificationCenter.getInstance().postNotificationName(NotificationCenter.loadPostsError);
 
                 loadVKPhotos(postRequest, reload);
             }
+
         });
     }
 
@@ -321,7 +324,7 @@ private void loadVKPhotos(final PostRequest postRequest, final boolean reload) {
         loadingPosts = true;
         RestManager.getInstance().findNearVKPhotos(postRequest, new Callback<VKPhotoResponse>() {
             @Override
-            public void onResponse(Response<VKPhotoResponse> response, Retrofit retrofit) {
+            public void onResponse(Call<VKPhotoResponse> call, Response<VKPhotoResponse> response) {
                 //        after getting response.
                 PostResponse postResponse = new PostResponse();
                 postResponse.setPosts(vkPhotoResponseConverter.convert(response.body() != null ?
@@ -336,7 +339,7 @@ public void onResponse(Response<VKPhotoResponse> response, Retrofit retrofit) {
             }
 
             @Override
-            public void onFailure(Throwable t) {
+            public void onFailure(Call<VKPhotoResponse> call, Throwable t) {
                 loadingPosts = false;
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.loadPostsError);
             }
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
index 34005fd4c..7ee4cdc04 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/RestClient.java
@@ -1,7 +1,7 @@
 package ru.aragats.wgo.rest.client;
 
-import retrofit.GsonConverterFactory;
-import retrofit.Retrofit;
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
 import ru.aragats.wgo.rest.service.RestService;
 
 /**
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java
index 16238c740..8f3f47216 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/VKRestClient.java
@@ -1,7 +1,7 @@
 package ru.aragats.wgo.rest.client;
 
-import retrofit.GsonConverterFactory;
-import retrofit.Retrofit;
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
 import ru.aragats.wgo.rest.service.VKService;
 
 /**
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
index 2cad53281..5d1eeb666 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/client/WGOClient.java
@@ -2,13 +2,12 @@
 
 import java.io.IOException;
 
-import retrofit.Call;
-import retrofit.Callback;
-import retrofit.GsonConverterFactory;
-import retrofit.Response;
-import retrofit.Retrofit;
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
 import ru.aragats.wgo.dto.PostResponse;
-import ru.aragats.wgo.dto.Request;
 import ru.aragats.wgo.rest.service.WGOService;
 
 /**
@@ -54,8 +53,8 @@ public String asyncMethod() {
 
         call.enqueue(new Callback<PostResponse>() {
             @Override
-            public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
-                if (response.isSuccess()) {
+            public void onResponse(Call<PostResponse> call, Response<PostResponse> response) {
+                if (response.isSuccessful()) {
                     // tasks available
                     System.out.println("Error =" + response.body().getError() + " Posts = " + response.body().getPosts());
 
@@ -65,11 +64,12 @@ public void onResponse(Response<PostResponse> response, Retrofit retrofit) {
             }
 
             @Override
-            public void onFailure(Throwable t) {
+            public void onFailure(Call<PostResponse> call, Throwable t) {
                 System.out.println("Failure");
                 // something went completely south (like no internet connection)
 //                                 Log.d("Error", t.getMessage());
             }
+
         });
 
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
index a658494a8..b83b27a81 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/manager/RestManager.java
@@ -1,16 +1,13 @@
 package ru.aragats.wgo.rest.manager;
 
-import com.squareup.okhttp.MediaType;
-import com.squareup.okhttp.MultipartBuilder;
-import com.squareup.okhttp.RequestBody;
-
 import java.io.File;
 import java.util.List;
 
-import retrofit.Call;
-import retrofit.Callback;
-import ru.aragats.wgo.rest.client.RestClient;
-import ru.aragats.wgo.rest.client.VKRestClient;
+import okhttp3.MediaType;
+import okhttp3.MultipartBody;
+import okhttp3.RequestBody;
+import retrofit2.Call;
+import retrofit2.Callback;
 import ru.aragats.wgo.dto.FileUploadRequest;
 import ru.aragats.wgo.dto.Image;
 import ru.aragats.wgo.dto.Post;
@@ -18,6 +15,8 @@
 import ru.aragats.wgo.dto.PostResponse;
 import ru.aragats.wgo.dto.VenuePostsRequest;
 import ru.aragats.wgo.dto.vk.VKPhotoResponse;
+import ru.aragats.wgo.rest.client.RestClient;
+import ru.aragats.wgo.rest.client.VKRestClient;
 
 /**
  * Created by aragats on 05/12/15.
@@ -65,13 +64,25 @@ public void uploadImage(FileUploadRequest request, Callback<List<Image>> callbac
         // TODO Validate parameters. After saving could be that parameters will be cleaned.
         // TODO  java.lang.NullPointerException: Attempt to invoke virtual method 'char[] java.lang.String.toCharArray()' on a null object reference
         File file = new File(request.getFilePath());
+        // was
+//        RequestBody fileBody = RequestBody.create(MediaType.parse(request.getContentType()), file);
+////        MultipartBuilder multipartBuilder = new MultipartBuilder("95416089-b2fd-4eab-9a14-166bb9c5788b");
+//        MultipartBuilder multipartBuilder = new MultipartBuilder();
+//        multipartBuilder.addFormDataPart("file", file.getName(), fileBody);
+//        multipartBuilder.addFormDataPart("description", "value");
+//        multipartBuilder.type(MultipartBuilder.FORM);
+//        RequestBody fileRequestBody = multipartBuilder.build();
+        //was
+
+        //new 2.0.2 TODO test Retrofit 2.0.2
         RequestBody fileBody = RequestBody.create(MediaType.parse(request.getContentType()), file);
 //        MultipartBuilder multipartBuilder = new MultipartBuilder("95416089-b2fd-4eab-9a14-166bb9c5788b");
-        MultipartBuilder multipartBuilder = new MultipartBuilder();
+        MultipartBody.Builder multipartBuilder = new MultipartBody.Builder();
         multipartBuilder.addFormDataPart("file", file.getName(), fileBody);
         multipartBuilder.addFormDataPart("description", "value");
-        multipartBuilder.type(MultipartBuilder.FORM);
+        multipartBuilder.setType(MultipartBody.FORM);
         RequestBody fileRequestBody = multipartBuilder.build();
+
         return restClient.getRestService().uploadImage(fileRequestBody);
     }
 
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
index 044848d60..72945247f 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/RestService.java
@@ -1,15 +1,15 @@
 package ru.aragats.wgo.rest.service;
 
-import com.squareup.okhttp.RequestBody;
 
 import java.util.List;
 
-import retrofit.Call;
-import retrofit.http.Body;
-import retrofit.http.GET;
-import retrofit.http.POST;
-import retrofit.http.Path;
-import retrofit.http.Query;
+import okhttp3.RequestBody;
+import retrofit2.Call;
+import retrofit2.http.Body;
+import retrofit2.http.GET;
+import retrofit2.http.POST;
+import retrofit2.http.Path;
+import retrofit2.http.Query;
 import ru.aragats.wgo.dto.Image;
 import ru.aragats.wgo.dto.Post;
 import ru.aragats.wgo.dto.PostResponse;
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
index a80b43b96..f93e850bd 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/VKService.java
@@ -1,8 +1,8 @@
 package ru.aragats.wgo.rest.service;
 
-import retrofit.Call;
-import retrofit.http.GET;
-import retrofit.http.Query;
+import retrofit2.Call;
+import retrofit2.http.GET;
+import retrofit2.http.Query;
 import ru.aragats.wgo.dto.vk.VKPhotoResponse;
 
 /**
diff --git a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
index 996b12e3f..751c63faa 100644
--- a/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
+++ b/TMessagesProj/src/main/java/ru/aragats/wgo/rest/service/WGOService.java
@@ -1,9 +1,8 @@
 package ru.aragats.wgo.rest.service;
 
-import retrofit.Call;
-import retrofit.http.GET;
+import retrofit2.Call;
+import retrofit2.http.GET;
 import ru.aragats.wgo.dto.PostResponse;
-import ru.aragats.wgo.dto.Request;
 
 /**
  * Created by aragats on 05/12/15.
