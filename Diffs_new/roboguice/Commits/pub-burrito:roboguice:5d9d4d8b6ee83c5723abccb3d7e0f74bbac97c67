diff --git a/roboguice/src/main/java/roboguice/base/inject/ResourceListener.java b/roboguice/src/main/java/roboguice/base/inject/ResourceListener.java
index 50ed9a9a9..35b517558 100644
--- a/roboguice/src/main/java/roboguice/base/inject/ResourceListener.java
+++ b/roboguice/src/main/java/roboguice/base/inject/ResourceListener.java
@@ -3,7 +3,6 @@
 import java.lang.reflect.Field;
 import java.lang.reflect.Modifier;
 
-
 import com.google.inject.MembersInjector;
 import com.google.inject.TypeLiteral;
 import com.google.inject.spi.TypeEncounter;
@@ -56,7 +55,6 @@ public void injectMembers( T instance ) {
             Object value = null;
 
             try {
-
                 value = getValue();
                 
                 if (value == null && Nullable.notNullable(field) ) {
@@ -65,8 +63,32 @@ public void injectMembers( T instance ) {
                 }
 
                 field.setAccessible(true);
-                field.set(instance, value);
-
+                
+                if ( field.getType().equals(boolean.class) || field.getType().equals(Boolean.class))
+                {
+                    field.set(instance, (Boolean.valueOf((String) value)));
+                }
+                else if ( field.getType().equals(int.class) || field.getType().equals(Integer.class))
+                {
+                    field.set(instance, (Integer.valueOf((String) value)));
+                }
+                else if ( field.getType().equals(long.class) || field.getType().equals(Long.class))
+                {
+                    field.set(instance, (Long.valueOf((String) value)));
+                }
+                else if ( field.getType().equals(float.class) || field.getType().equals(Float.class))
+                {
+                    field.set(instance, (Float.valueOf((String) value)));
+                }
+                else if ( field.getType().equals(double.class) || field.getType().equals(Double.class))
+                {
+                    field.set(instance, (Double.valueOf((String) value)));
+                }
+                else 
+                {
+                    field.set(instance, value);
+                }
+              
             } catch (IllegalAccessException e) {
                 throw new RuntimeException(e);
 
diff --git a/roboguice/src/main/java/roboguice/java/util/ResourceManager.java b/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
index ee168b594..a0e14b4b8 100644
--- a/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
+++ b/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
@@ -70,9 +70,9 @@ public ResourceManager removeAllPaths()
          return this;
      }
      
-     public Object getValue( String name )
+     public String getValue( String name )
      {
-         Object val = null;
+         String val = null;
          //Check cache first
          for ( String resourcePath : properties.keySet() )
          {//for every resource path
@@ -94,7 +94,7 @@ public Object getValue( String name )
          {
                  Properties prop = ResourceManager.instance().loadProperty(resourcePath);
                  
-                 val = prop.get( name );
+                 val = prop.getProperty( name );
                  
                  if ( val != null )
                  {
