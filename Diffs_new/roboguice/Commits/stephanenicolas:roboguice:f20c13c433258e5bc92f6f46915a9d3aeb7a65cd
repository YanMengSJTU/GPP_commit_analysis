diff --git a/.project b/.project
new file mode 100644
index 000000000..0555e28ef
--- /dev/null
+++ b/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>roboguice-aggregator</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.m2e.core.maven2Builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.m2e.core.maven2Nature</nature>
+	</natures>
+</projectDescription>
diff --git a/.settings/org.eclipse.core.resources.prefs b/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 000000000..99f26c020
--- /dev/null
+++ b/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+encoding/<project>=UTF-8
diff --git a/.settings/org.eclipse.m2e.core.prefs b/.settings/org.eclipse.m2e.core.prefs
new file mode 100644
index 000000000..f897a7f1c
--- /dev/null
+++ b/.settings/org.eclipse.m2e.core.prefs
@@ -0,0 +1,4 @@
+activeProfiles=
+eclipse.preferences.version=1
+resolveWorkspaceProjects=true
+version=1
diff --git a/astroboy/.classpath b/astroboy/.classpath
new file mode 100644
index 000000000..ea1eb77a1
--- /dev/null
+++ b/astroboy/.classpath
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
+	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
+	<classpathentry kind="src" path="gen"/>
+	<classpathentry kind="src" output="bin/classes" path="src/main/java">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry exported="true" kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="output" path="bin/classes"/>
+</classpath>
diff --git a/astroboy/.project b/astroboy/.project
new file mode 100644
index 000000000..aaa5e95b1
--- /dev/null
+++ b/astroboy/.project
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>astroboy</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.m2e.core.maven2Builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.m2e.core.maven2Nature</nature>
+	</natures>
+</projectDescription>
diff --git a/astroboy/.settings/org.eclipse.core.resources.prefs b/astroboy/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 000000000..f9fe34593
--- /dev/null
+++ b/astroboy/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,4 @@
+eclipse.preferences.version=1
+encoding//src/main/java=UTF-8
+encoding//src/test/java=UTF-8
+encoding/<project>=UTF-8
diff --git a/astroboy/.settings/org.eclipse.jdt.core.prefs b/astroboy/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 000000000..abec6ca38
--- /dev/null
+++ b/astroboy/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,5 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.source=1.5
diff --git a/astroboy/.settings/org.eclipse.m2e.core.prefs b/astroboy/.settings/org.eclipse.m2e.core.prefs
new file mode 100644
index 000000000..f897a7f1c
--- /dev/null
+++ b/astroboy/.settings/org.eclipse.m2e.core.prefs
@@ -0,0 +1,4 @@
+activeProfiles=
+eclipse.preferences.version=1
+resolveWorkspaceProjects=true
+version=1
diff --git a/astroboy/pom.xml b/astroboy/pom.xml
index ec00a6a5e..1c6edc56e 100644
--- a/astroboy/pom.xml
+++ b/astroboy/pom.xml
@@ -1,121 +1,125 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>org.roboguice</groupId>
-    <artifactId>astroboy</artifactId>
-    <version>2.1-SNAPSHOT</version>
-    <packaging>apk</packaging>
-    <name>astroboy</name>
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>org.roboguice</groupId>
+	<artifactId>astroboy</artifactId>
+	<version>2.1-SNAPSHOT</version>
+	<packaging>apk</packaging>
+	<name>astroboy</name>
 
-    <dependencies>
+	<dependencies>
 
-        <!-- REGULAR DEPENDENCIES -->
-        
-        <dependency>
-            <groupId>org.roboguice</groupId>
-            <artifactId>roboguice</artifactId>
-            <version>2.1-SNAPSHOT</version>
-        </dependency>
-        <dependency>
-            <groupId>com.google.inject</groupId>
-            <artifactId>guice</artifactId>
-            <version>3.0</version>
-            <classifier>no_aop</classifier>
-        </dependency>
+		<!-- REGULAR DEPENDENCIES -->
 
+		<dependency>
+			<groupId>org.roboguice</groupId>
+			<artifactId>roboguice</artifactId>
+			<version>2.1-SNAPSHOT</version>
+		</dependency>
+		<dependency>
+			<groupId>com.google.inject</groupId>
+			<artifactId>guice</artifactId>
+			<version>3.0</version>
+			<classifier>no_aop</classifier>
+		</dependency>
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>support-v4</artifactId>
+			<version>r7</version>
+		</dependency>
+		
 
-        <!-- TEST DEPENDENCIES -->
+		<!-- TEST DEPENDENCIES -->
 
-        <dependency>
-            <groupId>com.pivotallabs</groupId>
-            <artifactId>robolectric</artifactId>
-            <version>1.0-RC1</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-            <version>1.9.0</version>
-            <scope>test</scope>
-        </dependency>
+		<dependency>
+			<groupId>com.pivotallabs</groupId>
+			<artifactId>robolectric</artifactId>
+			<version>1.0-RC1</version>
+			<scope>test</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.mockito</groupId>
+			<artifactId>mockito-core</artifactId>
+			<version>1.9.0</version>
+			<scope>test</scope>
+		</dependency>
 
+		<!-- PROVIDED DEPENDENCIES -->
 
-        <!-- PROVIDED DEPENDENCIES -->
+		<dependency>
+			<groupId>com.google.android</groupId>
+			<artifactId>android</artifactId>
+			<version>2.1.2</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>
+			<groupId>junit</groupId>
+			<artifactId>junit</artifactId>
+			<version>4.8.2</version>
+			<scope>provided</scope>
+		</dependency>
+		<dependency>  <!-- needed to prevent warnings in robolectric tests -->
+			<groupId>com.google.android.maps</groupId>
+			<artifactId>maps</artifactId>
+			<version>7_r1</version>
+			<scope>provided</scope>
+			<optional>true</optional>
+		</dependency>
+	</dependencies>
 
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>2.1.2</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.8.2</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>  <!-- needed to prevent warnings in robolectric tests -->
-            <groupId>com.google.android.maps</groupId>
-            <artifactId>maps</artifactId>
-            <version>7_r1</version>
-            <scope>provided</scope>
-            <optional>true</optional>
-        </dependency>
-    </dependencies>
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>com.jayway.maven.plugins.android.generation2</groupId>
+				<artifactId>android-maven-plugin</artifactId>
+				<version>3.2.0</version>
+				<configuration>
+					<androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
+					<assetsDirectory>${project.basedir}/assets</assetsDirectory>
+					<resourceDirectory>${project.basedir}/res</resourceDirectory>
+					<nativeLibrariesDirectory>${project.basedir}/src/main/native</nativeLibrariesDirectory>
+					<sdk>
+						<platform>9</platform>
+					</sdk>
+					<undeployBeforeDeploy>true</undeployBeforeDeploy>
+				</configuration>
+				<extensions>true</extensions>
+			</plugin>
 
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>3.2.0</version>
-                <configuration>
-                    <androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
-                    <assetsDirectory>${project.basedir}/assets</assetsDirectory>
-                    <resourceDirectory>${project.basedir}/res</resourceDirectory>
-                    <nativeLibrariesDirectory>${project.basedir}/src/main/native</nativeLibrariesDirectory>
-                    <sdk>
-                        <platform>9</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
+			<plugin>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<version>2.5.1</version>
+				<configuration>
+					<source>1.5</source>
+					<target>1.5</target>
+				</configuration>
+			</plugin>
 
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.5.1</version>
-                <configuration>
-                    <source>1.5</source>
-                    <target>1.5</target>
-                </configuration>
-            </plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-gpg-plugin</artifactId>
+				<version>1.4</version>
+				<configuration>
+					<useAgent>true</useAgent>
+					<executable>gpg2</executable>
+				</configuration>
+			</plugin>
 
-            <plugin>
-              <groupId>org.apache.maven.plugins</groupId>
-              <artifactId>maven-gpg-plugin</artifactId>
-              <version>1.4</version>
-              <configuration>
-                <useAgent>true</useAgent>
-                <executable>gpg2</executable>
-              </configuration>
-            </plugin>
+		</plugins>
+	</build>
 
-        </plugins>
-    </build>
+	<parent>
+		<groupId>org.sonatype.oss</groupId>
+		<artifactId>oss-parent</artifactId>
+		<version>6</version>
+	</parent>
 
-    <parent>
-        <groupId>org.sonatype.oss</groupId>
-        <artifactId>oss-parent</artifactId>
-        <version>6</version>
-    </parent>
-
-    <repositories>
-        <repository>
-            <id>third.party.closed.source.repo</id>
-            <url>file://${basedir}/../maven_repo_3rd_party</url>
-        </repository>
-    </repositories>
+	<repositories>
+		<repository>
+			<id>third.party.closed.source.repo</id>
+			<url>file://${basedir}/../maven_repo_3rd_party</url>
+		</repository>
+	</repositories>
 
 </project>
diff --git a/astroboy/res/layout/activity_fight_evil.xml b/astroboy/res/layout/activity_fight_evil.xml
new file mode 100644
index 000000000..b6dd9fa0c
--- /dev/null
+++ b/astroboy/res/layout/activity_fight_evil.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical" >
+
+    <fragment
+        android:id="@+id/fragment_fight_evil"
+        android:name="org.roboguice.astroboy.fragment.FightForcesOfEvilFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/astroboy/res/layout/fight_evil.xml b/astroboy/res/layout/fragment_fight_evil.xml
similarity index 100%
rename from astroboy/res/layout/fight_evil.xml
rename to astroboy/res/layout/fragment_fight_evil.xml
diff --git a/astroboy/src/main/java/org/roboguice/astroboy/activity/FightForcesOfEvilActivity.java b/astroboy/src/main/java/org/roboguice/astroboy/activity/FightForcesOfEvilActivity.java
index c9833f4d7..d802c453e 100644
--- a/astroboy/src/main/java/org/roboguice/astroboy/activity/FightForcesOfEvilActivity.java
+++ b/astroboy/src/main/java/org/roboguice/astroboy/activity/FightForcesOfEvilActivity.java
@@ -1,79 +1,20 @@
 package org.roboguice.astroboy.activity;
 
 import org.roboguice.astroboy.R;
-import org.roboguice.astroboy.controller.Astroboy;
-import roboguice.activity.RoboActivity;
-import roboguice.inject.InjectResource;
-import roboguice.inject.InjectView;
-import roboguice.util.RoboAsyncTask;
 
-import android.content.Context;
+import roboguice.activity.RoboFragmentActivity;
 import android.os.Bundle;
-import android.view.animation.Animation;
-import android.widget.TextView;
-
-import javax.inject.Inject;
-import java.util.Random;
 
 /**
- * Things you'll learn in this class:
- *     - How to inject Resources
- *     - How to use RoboAsyncTask to do background tasks with injection
- *     - What it means to be a @Singleton
+ * Things you'll learn in this class: - How to inject Resources - How to use RoboAsyncTask to do
+ * background tasks with injection - What it means to be a @Singleton
  */
-public class FightForcesOfEvilActivity extends RoboActivity {
-
-    @InjectView(R.id.expletive) TextView expletiveText;
-
-    // You can also inject resources such as Strings, Drawables, and Animations
-    @InjectResource(R.anim.expletive_animation) Animation expletiveAnimation;
-
-    // AstroboyRemoteControl is annotated as @ContextSingleton, so the instance
-    // we get in FightForcesOfEvilActivity will be a different instance than
-    // the one we got in AstroboyMasterConsole
-    //@Inject AstroboyRemoteControl remoteControl;
+public class FightForcesOfEvilActivity extends RoboFragmentActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.fight_evil);
-
-        expletiveText.setAnimation(expletiveAnimation);
-        expletiveAnimation.start();
-
-        // Throw some punches
-        for( int i=0; i<10; ++i )
-            new AsyncPunch(this) {
-                @Override
-                protected void onSuccess(String expletive) throws Exception {
-                    expletiveText.setText(expletive);
-                }
-
-                // We could also override onException() and onFinally() if we wanted
-                
-            }.execute();
-
+        setContentView(R.layout.activity_fight_evil);
     }
 
-
-
-    // This class will call Astroboy.punch() in the background
-    public static class AsyncPunch extends RoboAsyncTask<String> {
-
-        // Because Astroboy is a @Singleton, this will be the same
-        // instance that we inject elsewhere in our app.
-        // Random of course will be a new instance of java.util.Random, since
-        // we haven't specified any special binding instructions anywhere
-        @Inject Astroboy astroboy;
-        @Inject Random random;
-
-        public AsyncPunch(Context context) {
-            super(context);
-        }
-
-        public String call() throws Exception {
-            Thread.sleep(random.nextInt(5*1000));
-            return astroboy.punch();
-        }
-    }
 }
diff --git a/astroboy/src/main/java/org/roboguice/astroboy/fragment/FightForcesOfEvilFragment.java b/astroboy/src/main/java/org/roboguice/astroboy/fragment/FightForcesOfEvilFragment.java
new file mode 100644
index 000000000..18d599264
--- /dev/null
+++ b/astroboy/src/main/java/org/roboguice/astroboy/fragment/FightForcesOfEvilFragment.java
@@ -0,0 +1,87 @@
+package org.roboguice.astroboy.fragment;
+
+import java.util.Random;
+
+import javax.inject.Inject;
+
+import org.roboguice.astroboy.R;
+import org.roboguice.astroboy.controller.Astroboy;
+
+import roboguice.fragment.RoboFragment;
+import roboguice.inject.InjectResource;
+import roboguice.inject.InjectView;
+import roboguice.util.RoboAsyncTask;
+import android.content.Context;
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.widget.TextView;
+
+/**
+ * Things you'll learn in this class: - How to inject Resources - How to use RoboAsyncTask to do
+ * background tasks with injection - What it means to be a @Singleton
+ */
+public class FightForcesOfEvilFragment extends RoboFragment {
+
+    @InjectView(R.id.expletive)
+    TextView expletiveText;
+
+    // You can also inject resources such as Strings, Drawables, and Animations
+    @InjectResource(R.anim.expletive_animation)
+    Animation expletiveAnimation;
+
+    // AstroboyRemoteControl is annotated as @ContextSingleton, so the instance
+    // we get in FightForcesOfEvilFragment will be a different instance than
+    // the one we got in AstroboyMasterConsole
+    // @Inject AstroboyRemoteControl remoteControl;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_fight_evil, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+        expletiveText.setAnimation(expletiveAnimation);
+        expletiveAnimation.start();
+
+        // Throw some punches
+        for (int i = 0; i < 10; ++i) {
+            new AsyncPunch(getActivity()) {
+                @Override
+                protected void onSuccess(String expletive) throws Exception {
+                    expletiveText.setText(expletive);
+                }
+
+                // We could also override onException() and onFinally() if we wanted
+
+            }.execute();
+        }
+
+    }
+
+    // This class will call Astroboy.punch() in the background
+    public static class AsyncPunch extends RoboAsyncTask<String> {
+
+        // Because Astroboy is a @Singleton, this will be the same
+        // instance that we inject elsewhere in our app.
+        // Random of course will be a new instance of java.util.Random, since
+        // we haven't specified any special binding instructions anywhere
+        @Inject
+        Astroboy astroboy;
+        @Inject
+        Random random;
+
+        public AsyncPunch(Context context) {
+            super(context);
+        }
+
+        public String call() throws Exception {
+            Thread.sleep(random.nextInt(5 * 1000));
+            return astroboy.punch();
+        }
+    }
+}
diff --git a/roboguice/.classpath b/roboguice/.classpath
new file mode 100644
index 000000000..fd7ad7fbd
--- /dev/null
+++ b/roboguice/.classpath
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" output="target/classes" path="src/main/java">
+		<attributes>
+			<attribute name="optional" value="true"/>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="src" output="target/test-classes" path="src/test/java">
+		<attributes>
+			<attribute name="optional" value="true"/>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="con" path="org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER">
+		<attributes>
+			<attribute name="maven.pomderived" value="true"/>
+		</attributes>
+	</classpathentry>
+	<classpathentry kind="output" path="target/classes"/>
+</classpath>
diff --git a/roboguice/.project b/roboguice/.project
new file mode 100644
index 000000000..3b1e3b343
--- /dev/null
+++ b/roboguice/.project
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>roboguice</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.m2e.core.maven2Builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.m2e.core.maven2Nature</nature>
+	</natures>
+</projectDescription>
diff --git a/roboguice/.settings/org.eclipse.core.resources.prefs b/roboguice/.settings/org.eclipse.core.resources.prefs
new file mode 100644
index 000000000..f9fe34593
--- /dev/null
+++ b/roboguice/.settings/org.eclipse.core.resources.prefs
@@ -0,0 +1,4 @@
+eclipse.preferences.version=1
+encoding//src/main/java=UTF-8
+encoding//src/test/java=UTF-8
+encoding/<project>=UTF-8
diff --git a/roboguice/.settings/org.eclipse.m2e.core.prefs b/roboguice/.settings/org.eclipse.m2e.core.prefs
new file mode 100644
index 000000000..f897a7f1c
--- /dev/null
+++ b/roboguice/.settings/org.eclipse.m2e.core.prefs
@@ -0,0 +1,4 @@
+activeProfiles=
+eclipse.preferences.version=1
+resolveWorkspaceProjects=true
+version=1
