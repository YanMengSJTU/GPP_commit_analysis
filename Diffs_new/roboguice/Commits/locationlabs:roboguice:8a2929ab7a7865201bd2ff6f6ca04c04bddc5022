diff --git a/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java b/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
index 075ff049f..d14cd2f3d 100644
--- a/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
+++ b/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
@@ -269,7 +269,6 @@ public void injectViewMembers(View view) {
         synchronized (ContextScope.class) {
             scope.enter(context);
             try {
-               Log.d("XXX", "injectViewMembers(View view)");
                 ViewMembersInjector.injectViews(view);
             } finally {
                 scope.exit(context);
diff --git a/roboguice/src/main/java/roboguice/inject/ViewListener.java b/roboguice/src/main/java/roboguice/inject/ViewListener.java
index 958b0b703..5f4b6e1ef 100644
--- a/roboguice/src/main/java/roboguice/inject/ViewListener.java
+++ b/roboguice/src/main/java/roboguice/inject/ViewListener.java
@@ -114,7 +114,6 @@ public ViewMembersInjector(Field field, Annotation annotation, TypeEncounter<T>
          * @param instance the instance being injected by guice
          */
         public void injectMembers(T instance) {
-           Log.d("XXX", "injectMembers "+instance.getClass().getName());
             synchronized (ViewMembersInjector.class) {
                 final Activity activity = activityProvider.get();
                 Object key = null;
@@ -126,10 +125,8 @@ else if(instance instanceof roboguice.util.RoboContext)
                    key = activity;
 
                 if( key==null ) {
-                   Log.d("XXX", "key is null");
                     return;
                 } 
-                Log.d("XXX", "key is "+key);
 
                 // Add a view injector for the key
                 ArrayList<ViewMembersInjector<?>> injectors = viewMembersInjectors.get(key);
@@ -144,7 +141,6 @@ else if(instance instanceof roboguice.util.RoboContext)
         }
         
         public void reallyInjectMembers( Object activityOrFragment ) {
-           Log.d("XXX", "reallyInjectMembers");
             if( annotation instanceof InjectView )
                 reallyInjectMemberViews(activityOrFragment);
             else
@@ -168,7 +164,6 @@ protected void reallyInjectMemberViews(Object activityOrFragment) {
 
 
             final T instance = fragmentClass!=null && fragmentClass.isInstance(activityOrFragment) ? (T)activityOrFragment : instanceRef.get();
-            Log.d("XXX", "INSTANCE is "+instance);
             if( instance==null )
                 return;
 
@@ -181,16 +176,11 @@ protected void reallyInjectMemberViews(Object activityOrFragment) {
                 final InjectView injectView = (InjectView) annotation;
 
                 if(fragmentClass!=null && fragmentClass.isInstance(activityOrFragment)) {
-                   Log.d("XXX", "FRAGMENT");
                    view = getViewFromFragment(activityOrFragment, injectView);
                 } else if(activityOrFragment instanceof Activity) {
-                   Log.d("XXX", "ACTIVITY");
                    view = getViewFromActivity((Activity)activityOrFragment, injectView);
                 } else if(activityOrFragment instanceof View) {
-                   Log.d("XXX", "VIEW");
                    view = getViewFromView((View)activityOrFragment, injectView);
-                } else {
-                   Log.d("XXX", "FELL OFF END");
                 }
                    
                 if (view == null && Nullable.notNullable(field))
@@ -230,7 +220,6 @@ else if(!id_string.equals("") )
        }
 
        protected View getViewFromView(View view, InjectView injectView) throws ClassNotFoundException, IllegalAccessException {
-          Log.d("XXX", "getViewFromView");
           View ret = null;
           final int id = injectView.value();
           final String id_string = injectView.id();
@@ -243,8 +232,6 @@ else if(!id_string.equals(""))
           else 
              ret = view.findViewWithTag(injectView.tag());
 
-          Log.d("XXX", "getViewFromView returning "+ret);
-
           return ret;
        }
 
@@ -325,22 +312,14 @@ protected void reallyInjectMemberFragments(Object activityOrFragment) {
 
         
         protected static void injectViews(Object activityOrFragment) {
-           Log.d("XXX", "injectViews");
             synchronized ( ViewMembersInjector.class ) {
 
                 final ArrayList<ViewMembersInjector<?>> injectors = viewMembersInjectors.get(activityOrFragment);
                 if(injectors!=null) {
-                Log.d("XXX", "we have "+injectors.size()+" injectors");
                     for(ViewMembersInjector<?> viewMembersInjector : injectors)
                         viewMembersInjector.reallyInjectMembers(activityOrFragment);
-                } else
-                   Log.d("XXX", "injectors are null");
+                } 
             }
         }
-
-
-
-
     }
-
 }
diff --git a/roboguice/src/main/java/roboguice/view/RoboLinearLayout.java b/roboguice/src/main/java/roboguice/view/RoboLinearLayout.java
index b6ba3474d..89a8034d3 100644
--- a/roboguice/src/main/java/roboguice/view/RoboLinearLayout.java
+++ b/roboguice/src/main/java/roboguice/view/RoboLinearLayout.java
@@ -74,7 +74,6 @@ public RoboLinearLayout (Context context, AttributeSet attrs, int defStyle) {
    }
    */
    private void init(Context context) {
-      Log.d("XXX", "RoboLinearLayout init");
       final RoboInjector injector = RoboGuice.getInjector(getContext());
       eventManager = injector.getInstance(EventManager.class);
       injector.injectMembersWithoutViews(this);
@@ -84,7 +83,6 @@ private void init(Context context) {
    @Override
    protected void onFinishInflate() {
       super.onFinishInflate();
-      Log.d("XXX", "onFinishInflate");
       RoboGuice.getInjector(getContext()).injectViewMembers(this);
       //eventManager.fire(new OnContentChangedEvent());
    }
diff --git a/roboguice/src/main/java/roboguice/view/RoboRelativeLayout.java b/roboguice/src/main/java/roboguice/view/RoboRelativeLayout.java
index 76acdbeeb..758d1897c 100644
--- a/roboguice/src/main/java/roboguice/view/RoboRelativeLayout.java
+++ b/roboguice/src/main/java/roboguice/view/RoboRelativeLayout.java
@@ -74,7 +74,6 @@ public RoboRelativeLayout (Context context, AttributeSet attrs, int defStyle) {
    }
    */
    private void init(Context context) {
-      Log.d("XXX", "RoboRelativeLayout init");
       final RoboInjector injector = RoboGuice.getInjector(getContext());
       eventManager = injector.getInstance(EventManager.class);
       injector.injectMembersWithoutViews(this);
@@ -84,7 +83,6 @@ private void init(Context context) {
    @Override
    protected void onFinishInflate() {
       super.onFinishInflate();
-      Log.d("XXX", "onFinishInflate");
       RoboGuice.getInjector(getContext()).injectViewMembers(this);
       //eventManager.fire(new OnContentChangedEvent());
    }
diff --git a/roboguice/src/main/java/roboguice/view/RoboScrollView.java b/roboguice/src/main/java/roboguice/view/RoboScrollView.java
index aff5b8eda..07cc34378 100644
--- a/roboguice/src/main/java/roboguice/view/RoboScrollView.java
+++ b/roboguice/src/main/java/roboguice/view/RoboScrollView.java
@@ -77,7 +77,6 @@ public RoboScrollView (Context context, AttributeSet attrs, int defStyle) {
    }
 
    private void init(Context context) {
-      Log.d("XXX", "RoboScrollView init");
       final RoboInjector injector = RoboGuice.getInjector(getContext());
       eventManager = injector.getInstance(EventManager.class);
       injector.injectMembersWithoutViews(this);
@@ -87,7 +86,6 @@ private void init(Context context) {
    @Override
    protected void onFinishInflate() {
       super.onFinishInflate();
-      Log.d("XXX", "onFinishInlfate");
       RoboGuice.getInjector(getContext()).injectViewMembers(this);
       eventManager.fire(new OnContentChangedEvent());
    }
diff --git a/roboguice/src/main/java/roboguice/view/RoboView.java b/roboguice/src/main/java/roboguice/view/RoboView.java
index bc203790a..e0dde2102 100644
--- a/roboguice/src/main/java/roboguice/view/RoboView.java
+++ b/roboguice/src/main/java/roboguice/view/RoboView.java
@@ -76,7 +76,6 @@ public RoboView (Context context, AttributeSet attrs, int defStyle) {
    }
 
    private void init(Context context) {
-      Log.d("XXX", "RoboView init");
       final RoboInjector injector = RoboGuice.getInjector(getContext());
       eventManager = injector.getInstance(EventManager.class);
       injector.injectMembersWithoutViews(this);
@@ -86,7 +85,6 @@ private void init(Context context) {
    @Override
    protected void onFinishInflate() {
       super.onFinishInflate();
-      Log.d("XXX", "onFinishInlfate");
       RoboGuice.getInjector(getContext()).injectViewMembers(this);
       eventManager.fire(new OnContentChangedEvent());
    }
