diff --git a/roboguice-plugin/build.gradle b/roboguice-plugin/build.gradle
index b8e4554ee..e9cc1b25a 100644
--- a/roboguice-plugin/build.gradle
+++ b/roboguice-plugin/build.gradle
@@ -49,6 +49,11 @@ dependencies {
   compile gradleApi()
   compile localGroovy()
 
+  compile ("com.github.stephanenicolas.injectextra:injectextra-plugin:1.+")
+  compile ("com.github.stephanenicolas.injectresource:injectresource-plugin:1.+")
+  compile ("com.github.stephanenicolas.injectview:injectview-plugin:1.+")
+
+
   compile "org.projectlombok:lombok:1.14.2"
   compile "com.google.android:android:${ANDROID_VERSION}"
 
diff --git a/roboguice-plugin/src/main/groovy/org/roboguice/RoboGuicePlugin.groovy b/roboguice-plugin/src/main/groovy/org/roboguice/RoboGuicePlugin.groovy
index cb5faf80c..58eba2104 100644
--- a/roboguice-plugin/src/main/groovy/org/roboguice/RoboGuicePlugin.groovy
+++ b/roboguice-plugin/src/main/groovy/org/roboguice/RoboGuicePlugin.groovy
@@ -15,9 +15,6 @@ public class RoboGuicePlugin implements Plugin<Project> {
   public void apply(Project project) {
     def hasApp = project.plugins.withType(AppPlugin)
     def hasLib = project.plugins.withType(LibraryPlugin)
-    if (!hasApp && !hasLib) {
-      throw new IllegalStateException("'android' or 'android-library' plugin required.")
-    }
 
     def extension = getExtension()
     def pluginExtension = getPluginExtension()
@@ -28,6 +25,12 @@ public class RoboGuicePlugin implements Plugin<Project> {
     final def log = project.logger
     final String LOG_TAG = this.getClass().getName()
 
+    configure(project)
+    log.debug(LOG_TAG, "Project variant configured for RoboGuice.")
+
+    if(!hasApp || !hasLib) {
+      log.debug(LOG_TAG, "Project is not android lib or app project. Roboguice plugin can't be applied.")
+    }
     final def variants
     if (hasApp) {
       variants = project.android.applicationVariants
@@ -35,26 +38,34 @@ public class RoboGuicePlugin implements Plugin<Project> {
       variants = project.android.libraryVariants
     }
 
-    configure(project)
+
+
 
     variants.all { variant ->
       if (skipVariant(variant)) {
         return;
       }
-      log.debug(LOG_TAG, "Transforming classes in variant '${variant.name}'.")
+
+      variant.javaCompile.options.compilerArgs += [
+          '-s', project.file('build/generated')
+      ]
 
       JavaCompile javaCompile = variant.javaCompile
       FileCollection classpathFileCollection = project.files(project.android.bootClasspath)
       classpathFileCollection += javaCompile.classpath
 
-      println "Classpath " + javaCompile.classpath.asPath
+      println "Classpath " + classpathFileCollection
     }
   }
 
   protected void configure(Project project) {
-    project.plugins.
-        project.dependencies {
-      provided 'com.github.stephanenicolas.injectview:injectview-annotations:1.+'
+    project.plugins.apply('com.github.stephanenicolas.injectview')
+    project.plugins.apply('com.github.stephanenicolas.injectresource')
+    project.plugins.apply('com.github.stephanenicolas.injectextra')
+
+    project.dependencies {
+      provided 'org.roboguice:roboblender:4.0.0-SNAPSHOT'
+      compile 'org.roboguice:roboguice:4.0.0-SNAPSHOT'
     }
   }
 
