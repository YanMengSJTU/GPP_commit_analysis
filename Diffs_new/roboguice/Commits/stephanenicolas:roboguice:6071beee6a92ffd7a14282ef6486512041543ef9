diff --git a/afterburner/src/main/java/afterburner/PostProcessor.java b/afterburner/src/main/java/afterburner/PostProcessor.java
index aa5f7545a..bd8178cf7 100644
--- a/afterburner/src/main/java/afterburner/PostProcessor.java
+++ b/afterburner/src/main/java/afterburner/PostProcessor.java
@@ -23,21 +23,20 @@
 
 public class PostProcessor extends ClassTransformer {
 
-    @Override
-    protected void applyTransformations(final CtClass classToTransform) throws Exception {
-        // Actually you must test if it exists, but it's just an example...
-        getLogger().debug("Analysing "+classToTransform);
-        injectStuffInClass(classToTransform);
-    }
-
     @Override
     protected boolean filter(CtClass candidateClass) throws Exception {
         boolean isActivity = candidateClass.subclassOf(ClassPool.getDefault().get(Activity.class.getName()));
         boolean hasAfterBurner = checkIfAfterBurnerAlreadyActive(candidateClass);
-
         return isActivity && !hasAfterBurner;
     }    
 
+    @Override
+    protected void applyTransformations(final CtClass classToTransform) throws Exception {
+        // Actually you must test if it exists, but it's just an example...
+        getLogger().debug("Analysing "+classToTransform);
+        injectStuffInClass(classToTransform);
+    }
+
     private void injectStuffInClass(final CtClass classToTransform) throws NotFoundException, ClassNotFoundException, CannotCompileException {
         int layoutId = getLayoutId(classToTransform);
         final List<CtField> views = getAllInjectedFieldsForAnnotation(classToTransform, InjectView.class);
@@ -47,10 +46,13 @@ private void injectStuffInClass(final CtClass classToTransform) throws NotFoundE
         }
         CtMethod onCreateMethod = extractOnCreateMethod(classToTransform);
         if( onCreateMethod != null ) {
-            DetectMethodCallEditor dectedSetContentViewEditor = new DetectMethodCallEditor(classToTransform, "setContentView");
-            onCreateMethod.instrument(dectedSetContentViewEditor);
-            boolean isCallingSetContentView = dectedSetContentViewEditor.isCallingMethod();
-            InjectorEditor injectorEditor = new InjectorEditor(classToTransform, fragments, views, layoutId, isCallingSetContentView);
+            boolean isCallingSetContentView = checkIfMethodIsInvoked(classToTransform, onCreateMethod, "setContentView");
+            String insertionMethod = "onCreate";
+            if( isCallingSetContentView ) {
+                layoutId = -1;
+                insertionMethod = "setContentView";
+            }
+            InjectorEditor injectorEditor = new InjectorEditor(classToTransform, fragments, views, layoutId, insertionMethod);
             onCreateMethod.instrument( injectorEditor);
         } else {
             classToTransform.addMethod( CtNewMethod.make(createOnCreateBody(classToTransform, views, fragments, layoutId)
@@ -60,10 +62,17 @@ private void injectStuffInClass(final CtClass classToTransform) throws NotFoundE
         injectStuffInClass( classToTransform.getSuperclass() );
     }
 
-    private String createOnCreateBody(CtClass classToTransform, List<CtField> views, List<CtField> fragments, int layoutId) throws ClassNotFoundException, NotFoundException {
+    private boolean checkIfMethodIsInvoked(final CtClass clazz, CtMethod withinMethod, String invokedMEthod) throws CannotCompileException {
+        DetectMethodCallEditor dectectSetContentViewEditor = new DetectMethodCallEditor(clazz, invokedMEthod);
+        withinMethod.instrument(dectectSetContentViewEditor);
+        boolean isCallingSetContentView = dectectSetContentViewEditor.isCallingMethod();
+        return isCallingSetContentView;
+    }
+
+    private String createOnCreateBody(CtClass clazz, List<CtField> views, List<CtField> fragments, int layoutId) throws ClassNotFoundException, NotFoundException {
         return "public void onCreate(android.os.Bundle bundle) { \n"
                 + "super.onCreate(bundle);\n"
-                + createInjectedBody(classToTransform, views, fragments, layoutId, false)
+                + createInjectedBody(clazz, views, fragments, layoutId)
                 + "}";
 
     }
@@ -155,12 +164,12 @@ private String injectViewStatements(List<CtField> views) throws ClassNotFoundExc
         return result;
     }
 
-    private String createInjectedBody(CtClass classToTransform, List<CtField> views, List<CtField> fragments, int layoutId, boolean isCallingSetContentView) throws ClassNotFoundException, NotFoundException {
+    private String createInjectedBody(CtClass classToTransform, List<CtField> views, List<CtField> fragments, int layoutId) throws ClassNotFoundException, NotFoundException {
         StringBuffer buffer = new StringBuffer();
         String message = String.format("Class %s has been enhanced.", classToTransform.getName());
         buffer.append("android.util.Log.d(\"RoboGuice post-processor\",\""+message+"\");\n");
 
-        if( layoutId != -1 && !isCallingSetContentView ) { 
+        if( layoutId != -1 ) { 
             buffer.append(injectContentView(layoutId));
         }
         if( !views.isEmpty() ) {
@@ -179,26 +188,25 @@ private String createInjectedBody(CtClass classToTransform, List<CtField> views,
         private final List<CtField> fragments;
         private final List<CtField> views;
         private final int layoutId;
-        private boolean isCallingSetContentView;
+        private String insertionMethod;
 
-        private InjectorEditor(CtClass classToTransform, List<CtField> fragments, List<CtField> views, int layoutId, boolean isCallingSetContentView) {
+        private InjectorEditor(CtClass classToTransform, List<CtField> fragments, List<CtField> views, int layoutId, String insertionMethod) {
             this.classToTransform = classToTransform;
             this.fragments = fragments;
             this.views = views;
             this.layoutId = layoutId;
-            this.isCallingSetContentView = isCallingSetContentView;
+            this.insertionMethod = insertionMethod;
         }
 
         @Override
         public void edit(MethodCall m) throws CannotCompileException {
             try {
                 getLogger().debug("method call "+m.getMethodName());
-                String insertionMethod = isCallingSetContentView ? "setContentView" : "onCreate";
                 if( m.getMethodName().equals(insertionMethod) ) {
                     getLogger().debug("insertion method "+m.getMethodName());
 
                     String string;
-                    string = "$_ = $proceed($$);\n"+createInjectedBody(m.getEnclosingClass(), views, fragments, layoutId, isCallingSetContentView );
+                    string = "$_ = $proceed($$);\n"+createInjectedBody(m.getEnclosingClass(), views, fragments, layoutId );
                     getLogger().debug("Injected : " + string);
 
                     m.replace(string );
