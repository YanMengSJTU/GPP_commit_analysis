diff --git a/roboguice/src/main/java/roboguice/config/DefaultRoboModule.java b/roboguice/src/main/java/roboguice/config/DefaultRoboModule.java
index 8117a7c55..9cfb01c1e 100644
--- a/roboguice/src/main/java/roboguice/config/DefaultRoboModule.java
+++ b/roboguice/src/main/java/roboguice/config/DefaultRoboModule.java
@@ -33,8 +33,8 @@
 import roboguice.event.EventManager;
 import roboguice.event.ObservesTypeListener;
 import roboguice.event.eventListener.factory.EventListenerThreadingDecorator;
+import roboguice.fragment.FragmentUtil;
 import roboguice.inject.*;
-import roboguice.provided.fragment.FragmentUtil;
 import roboguice.service.RoboService;
 import roboguice.util.Ln;
 import roboguice.util.Strings;
diff --git a/roboguice/src/main/java/roboguice/provided/fragment/FragmentUtil.java b/roboguice/src/main/java/roboguice/fragment/FragmentUtil.java
similarity index 82%
rename from roboguice/src/main/java/roboguice/provided/fragment/FragmentUtil.java
rename to roboguice/src/main/java/roboguice/fragment/FragmentUtil.java
index 7eb278b2a..d3e2276f5 100644
--- a/roboguice/src/main/java/roboguice/provided/fragment/FragmentUtil.java
+++ b/roboguice/src/main/java/roboguice/fragment/FragmentUtil.java
@@ -1,4 +1,4 @@
-package roboguice.provided.fragment;
+package roboguice.fragment;
 
 import com.google.inject.Provider;
 
@@ -26,12 +26,12 @@
     
     static {
         try {
-            nativeFrag = (f) Class.forName("roboguice.provided.fragment.NativeFragmentUtil").newInstance();
+            nativeFrag = (f) Class.forName("roboguice.fragment.provided.NativeFragmentUtil").newInstance();
             hasNative = nativeFrag != null;
         } catch (Throwable e) {}
         
         try {
-            supportFrag = (f) Class.forName("roboguice.support.fragment.SupportFragmentUtil").newInstance();
+            supportFrag = (f) Class.forName("roboguice.fragment.support.SupportFragmentUtil").newInstance();
             supportActivity = Class.forName(SUPPORT_PACKAGE+"FragmentActivity");
             hasSupport = supportFrag != null && supportActivity != null;
         } catch (Throwable e) {}
diff --git a/roboguice/src/main/java/roboguice/provided/fragment/NativeFragmentUtil.java b/roboguice/src/main/java/roboguice/fragment/provided/NativeFragmentUtil.java
similarity index 64%
rename from roboguice/src/main/java/roboguice/provided/fragment/NativeFragmentUtil.java
rename to roboguice/src/main/java/roboguice/fragment/provided/NativeFragmentUtil.java
index baef867a1..19119f21c 100644
--- a/roboguice/src/main/java/roboguice/provided/fragment/NativeFragmentUtil.java
+++ b/roboguice/src/main/java/roboguice/fragment/provided/NativeFragmentUtil.java
@@ -1,23 +1,26 @@
-package roboguice.provided.fragment;
+package roboguice.fragment.provided;
 
-import roboguice.provided.fragment.FragmentUtil.f;
+import com.google.inject.Inject;
+import com.google.inject.Provider;
+
+import roboguice.fragment.FragmentUtil.f;
+import roboguice.inject.ContextSingleton;
 
 import android.annotation.TargetApi;
+import android.app.Activity;
 import android.app.Fragment;
 import android.app.FragmentManager;
 import android.view.View;
 @TargetApi(13)
+@SuppressWarnings("unchecked") //No point in seeing warnings when you're being ambiguous on purpose
 public class NativeFragmentUtil implements f<Fragment,FragmentManager> {
 	//Incredible hack required to ensure that classes are loaded at construction time
 	//I.E. so that it fails fast if they're not found. TODO fix this
 	
 	//I thought about just depending on the API level, but that broke Robolectric.
-	private final Class frag;
-	private final Class fragM;
-	
 	public NativeFragmentUtil() throws ClassNotFoundException {
-		frag = Class.forName(Fragment.class.getName());
-		fragM = Class.forName(FragmentManager.class.getName());
+		Class.forName(Fragment.class.getName());
+		Class.forName(FragmentManager.class.getName());
 	}
 	
     @Override
@@ -49,5 +52,15 @@ public Fragment findFragmentByTag(FragmentManager fm, String tag) {
 	public Class fragmentManagerProviderType() {
 		return FragmentManagerProvider.class;
 	}
+	
+	@ContextSingleton
+	public static class FragmentManagerProvider implements Provider<FragmentManager> {
+	    @Inject protected Activity activity;
+
+	    @Override
+	    public FragmentManager get() {
+	        return activity.getFragmentManager();
+	    }
+	}
 
 }
diff --git a/roboguice/src/main/java/roboguice/fragment/RoboNativeDialogFragment.java b/roboguice/src/main/java/roboguice/fragment/provided/RoboDialogFragment.java
similarity index 86%
rename from roboguice/src/main/java/roboguice/fragment/RoboNativeDialogFragment.java
rename to roboguice/src/main/java/roboguice/fragment/provided/RoboDialogFragment.java
index 7351545e8..07cef36fd 100644
--- a/roboguice/src/main/java/roboguice/fragment/RoboNativeDialogFragment.java
+++ b/roboguice/src/main/java/roboguice/fragment/provided/RoboDialogFragment.java
@@ -1,4 +1,4 @@
-package roboguice.fragment;
+package roboguice.fragment.provided;
 
 import roboguice.RoboGuice;
 
@@ -9,7 +9,7 @@
 import android.view.View;
 
 @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2)
-public abstract class RoboNativeDialogFragment extends DialogFragment {
+public abstract class RoboDialogFragment extends DialogFragment {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
diff --git a/roboguice/src/main/java/roboguice/fragment/RoboNativeFragment.java b/roboguice/src/main/java/roboguice/fragment/provided/RoboFragment.java
similarity index 87%
rename from roboguice/src/main/java/roboguice/fragment/RoboNativeFragment.java
rename to roboguice/src/main/java/roboguice/fragment/provided/RoboFragment.java
index 3b070c349..bfa8a2aa2 100644
--- a/roboguice/src/main/java/roboguice/fragment/RoboNativeFragment.java
+++ b/roboguice/src/main/java/roboguice/fragment/provided/RoboFragment.java
@@ -1,4 +1,4 @@
-package roboguice.fragment;
+package roboguice.fragment.provided;
 
 import roboguice.RoboGuice;
 
@@ -9,7 +9,7 @@
 import android.view.View;
 
 @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2) 
-public abstract class RoboNativeFragment extends Fragment {
+public abstract class RoboFragment extends Fragment {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
diff --git a/roboguice/src/main/java/roboguice/fragment/RoboNativeListFragment.java b/roboguice/src/main/java/roboguice/fragment/provided/RoboListFragment.java
similarity index 86%
rename from roboguice/src/main/java/roboguice/fragment/RoboNativeListFragment.java
rename to roboguice/src/main/java/roboguice/fragment/provided/RoboListFragment.java
index 1bb1a6a34..d9039fbc0 100644
--- a/roboguice/src/main/java/roboguice/fragment/RoboNativeListFragment.java
+++ b/roboguice/src/main/java/roboguice/fragment/provided/RoboListFragment.java
@@ -1,4 +1,4 @@
-package roboguice.fragment;
+package roboguice.fragment.provided;
 
 import roboguice.RoboGuice;
 
@@ -9,7 +9,7 @@
 import android.view.View;
 
 @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2) 
-public abstract class RoboNativeListFragment extends ListFragment {
+public abstract class RoboListFragment extends ListFragment {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
diff --git a/roboguice/src/main/java/roboguice/support/fragment/SupportFragmentUtil.java b/roboguice/src/main/java/roboguice/fragment/support/SupportFragmentUtil.java
similarity index 60%
rename from roboguice/src/main/java/roboguice/support/fragment/SupportFragmentUtil.java
rename to roboguice/src/main/java/roboguice/fragment/support/SupportFragmentUtil.java
index 49ba5769e..c0a353bff 100644
--- a/roboguice/src/main/java/roboguice/support/fragment/SupportFragmentUtil.java
+++ b/roboguice/src/main/java/roboguice/fragment/support/SupportFragmentUtil.java
@@ -1,20 +1,24 @@
-package roboguice.support.fragment;
+package roboguice.fragment.support;
 
-import roboguice.provided.fragment.FragmentUtil.f;
+import com.google.inject.Inject;
+import com.google.inject.Provider;
 
+import roboguice.fragment.FragmentUtil.f;
+import roboguice.inject.ContextSingleton;
+
+import android.app.Activity;
 import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.view.View;
 
+@SuppressWarnings("unchecked") //we're being ambiguous on purpose
 public class SupportFragmentUtil implements f<Fragment, FragmentManager>{
 	// Incredible hack required to ensure that classes are loaded at construction time
 	// I.E. so that it fails fast if they're not found. TODO fix this
-	private final Class frag;
-	private final Class fragM;
-
 	public SupportFragmentUtil() throws ClassNotFoundException {
-		frag = Class.forName(Fragment.class.getName());
-		fragM = Class.forName(FragmentManager.class.getName());
+		Class.forName(Fragment.class.getName());
+		Class.forName(FragmentManager.class.getName());
 	}
 	
     @Override
@@ -47,4 +51,14 @@ public Class fragmentManagerProviderType() {
 		return FragmentManagerProvider.class;
 	}
 
+	@ContextSingleton
+	public static class FragmentManagerProvider implements Provider<FragmentManager> {
+	    @Inject protected Activity activity;
+
+	    @Override
+	    public FragmentManager get() {
+	        return ((FragmentActivity)activity).getSupportFragmentManager();
+	    }
+	}
+
 }
diff --git a/roboguice/src/main/java/roboguice/inject/ViewListener.java b/roboguice/src/main/java/roboguice/inject/ViewListener.java
index e89d4b9e1..704dd0a37 100644
--- a/roboguice/src/main/java/roboguice/inject/ViewListener.java
+++ b/roboguice/src/main/java/roboguice/inject/ViewListener.java
@@ -18,8 +18,9 @@
 import android.app.Activity;
 import android.content.Context;
 import android.view.View;
-import roboguice.provided.fragment.FragmentUtil;
-import roboguice.provided.fragment.FragmentUtil.f;
+
+import roboguice.fragment.FragmentUtil;
+import roboguice.fragment.FragmentUtil.f;
 
 import com.google.inject.MembersInjector;
 import com.google.inject.Provider;
diff --git a/roboguice/src/main/java/roboguice/provided/fragment/FragmentManagerProvider.java b/roboguice/src/main/java/roboguice/provided/fragment/FragmentManagerProvider.java
deleted file mode 100644
index bda620254..000000000
--- a/roboguice/src/main/java/roboguice/provided/fragment/FragmentManagerProvider.java
+++ /dev/null
@@ -1,19 +0,0 @@
-package roboguice.provided.fragment;
-
-import roboguice.inject.ContextSingleton;
-
-import android.app.Activity;
-import android.app.FragmentManager;
-
-import com.google.inject.Inject;
-import com.google.inject.Provider;
-
-@ContextSingleton
-public class FragmentManagerProvider implements Provider<FragmentManager> {
-    @Inject protected Activity activity;
-
-    @Override
-    public FragmentManager get() {
-        return activity.getFragmentManager();
-    }
-}
diff --git a/roboguice/src/main/java/roboguice/support/fragment/FragmentManagerProvider.java b/roboguice/src/main/java/roboguice/support/fragment/FragmentManagerProvider.java
deleted file mode 100644
index 13502895c..000000000
--- a/roboguice/src/main/java/roboguice/support/fragment/FragmentManagerProvider.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package roboguice.support.fragment;
-
-import roboguice.inject.ContextSingleton;
-
-import android.app.Activity;
-import android.support.v4.app.FragmentActivity;
-import android.support.v4.app.FragmentManager;
-
-import com.google.inject.Inject;
-import com.google.inject.Provider;
-
-@ContextSingleton
-public class FragmentManagerProvider implements Provider<FragmentManager> {
-    @Inject protected Activity activity;
-
-    @Override
-    public FragmentManager get() {
-        return ((FragmentActivity)activity).getSupportFragmentManager();
-    }
-}
