diff --git a/pom.xml b/pom.xml
index f6575a46f..1d9177d88 100644
--- a/pom.xml
+++ b/pom.xml
@@ -51,7 +51,7 @@
 		<android-platform.version>4.1.1.4</android-platform.version>
 		<android-map.version>7_r1</android-map.version>
 		<android-build.version>19</android-build.version>
-		<guice.version>4.0-SNAPSHOT</guice.version>
+		<guice.version>3.0-SNAPSHOT</guice.version>
 
 		<!--LIBRARIES -->
 		<android-map.version>7_r1</android-map.version>
diff --git a/roboguice/pom.xml b/roboguice/pom.xml
index 9232397a7..280bce9d2 100644
--- a/roboguice/pom.xml
+++ b/roboguice/pom.xml
@@ -241,6 +241,14 @@
 							<goal>shade</goal>
 						</goals>
 						<configuration>
+						    <filters>
+							  <filter>
+							    <artifact>com.google.inject:guice</artifact>
+							    <includes>
+							      <include>com/google/inject/**</include>
+							    </includes>
+							  </filter>
+							</filters>
 							<minimizeJar>true</minimizeJar>
 						</configuration>
 					</execution>
diff --git a/roboguice/src/main/java/roboguice/RoboGuice.java b/roboguice/src/main/java/roboguice/RoboGuice.java
index 7a06055dd..938fd5b36 100644
--- a/roboguice/src/main/java/roboguice/RoboGuice.java
+++ b/roboguice/src/main/java/roboguice/RoboGuice.java
@@ -24,7 +24,6 @@
 import com.google.inject.HierarchyTraversalFilter;
 import com.google.inject.HierarchyTraversalFilterFactory;
 import com.google.inject.Module;
-import com.google.inject.internal.util.Stopwatch;
 import com.google.inject.util.Modules;
 
 import android.app.Application;
@@ -109,10 +108,9 @@ public static Injector getOrCreateBaseApplicationInjector(Application applicatio
      * <b>One of RoboGuice's entry points</b>.
      */
     public static Injector getOrCreateBaseApplicationInjector(final Application application, Stage stage, Module... modules ) {
-        final Stopwatch stopwatch = new Stopwatch();
         synchronized (RoboGuice.class) {
             initializeAnnotationDatabaseFinderAndHierarchyTraversalFilterFactory(application);
-            return createGuiceInjector(application, stage, stopwatch, modules);
+            return createGuiceInjector(application, stage, modules);
         }
     }
 
@@ -144,12 +142,11 @@ public static Injector overrideApplicationInjector(final Application application
      * <b>One of RoboGuice's entry points</b>.
      */
     public static Injector getOrCreateBaseApplicationInjector(Application application, Stage stage) {
-        final Stopwatch stopwatch = new Stopwatch();
 
         synchronized (RoboGuice.class) {
             initializeAnnotationDatabaseFinderAndHierarchyTraversalFilterFactory(application);
             final List<Module> modules = extractModulesFromManifest(application);
-            return createGuiceInjector(application, stage, stopwatch, modules.toArray(new Module[modules.size()]));
+            return createGuiceInjector(application, stage, modules.toArray(new Module[modules.size()]));
         }
     }
 
@@ -181,15 +178,11 @@ public static Injector getOrCreateBaseApplicationInjector(Application applicatio
         }  
     }
 
-    private static Injector createGuiceInjector(final Application application, Stage stage, final Stopwatch stopwatch, Module... modules) {
-        try {
-            synchronized (RoboGuice.class) {
-                final Injector rtrn = Guice.createInjector(stage, modules);
-                injectors.put(application,rtrn);
-                return rtrn;
-            }
-        } finally {
-            stopwatch.resetAndLog("BaseApplicationInjector creation");
+    private static Injector createGuiceInjector(final Application application, Stage stage, Module... modules) {
+        synchronized (RoboGuice.class) {
+            final Injector rtrn = Guice.createInjector(stage, modules);
+            injectors.put(application,rtrn);
+            return rtrn;
         }
     }
 
diff --git a/roboguice/src/main/java/roboguice/activity/RoboActivity.java b/roboguice/src/main/java/roboguice/activity/RoboActivity.java
index 84d73947a..6fd1a755d 100644
--- a/roboguice/src/main/java/roboguice/activity/RoboActivity.java
+++ b/roboguice/src/main/java/roboguice/activity/RoboActivity.java
@@ -39,7 +39,6 @@
 
 import com.google.inject.Inject;
 import com.google.inject.Key;
-import com.google.inject.internal.util.Stopwatch;
 
 import android.annotation.TargetApi;
 import android.app.Activity;
@@ -82,21 +81,14 @@
     protected HashMap<Key<?>,Object> scopedObjects = new HashMap<Key<?>, Object>();
 
     @Inject ContentViewListener ignored; // BUG find a better place to put this
-    private Stopwatch stopwatch;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        stopwatch = new Stopwatch();
         final RoboInjector injector = RoboGuice.getInjector(this);
-        stopwatch.resetAndLog("RoboActivity creation of injector");
         eventManager = injector.getInstance(EventManager.class);
-        stopwatch.resetAndLog("RoboActivity creation of eventmanager");
         injector.injectMembersWithoutViews(this);
-        stopwatch.resetAndLog("RoboActivity inject members without views");
         super.onCreate(savedInstanceState);
-        stopwatch.resetAndLog("RoboActivity super onCreate");
         eventManager.fire(new OnCreateEvent<Activity>(this,savedInstanceState));
-        stopwatch.resetAndLog("RoboActivity fire event");
     }
 
     @Override
