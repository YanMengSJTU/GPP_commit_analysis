diff --git a/astroboy/res/layout/fragment_fight_evil.xml b/astroboy/res/layout/fragment_fight_evil.xml
index a44ecce67..905ea6d52 100644
--- a/astroboy/res/layout/fragment_fight_evil.xml
+++ b/astroboy/res/layout/fragment_fight_evil.xml
@@ -9,6 +9,7 @@
         android:id="@+id/expletive"
         android:layout_width="fill_parent"
         android:layout_height="fill_parent"
+        android:textIsSelectable="false"
         android:gravity="center"
         />
 
diff --git a/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java b/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
index 3e49b9b42..b91315e95 100644
--- a/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
+++ b/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
@@ -42,6 +42,9 @@
 
     protected static final String FIGHT_FORCES_OF_EVIL_FRAGMENT_TAG = "FIGHT_FORCES_OF_EVIL_FRAGMENT_TAG";
 
+    // Whether or not to use the annotation system or a producer for events sent by the activity.
+    private boolean useEventProducer;
+
     // Various views that we inject into the activity.
     // Equivalent to calling findViewById() in your onCreate(), except more succinct
     @InjectView(R.id.self_destruct)
@@ -79,6 +82,7 @@ public void onCreate(Bundle savedInstanceState) {
         // happens during super.onCreate()
 
         sayText.setOnEditorActionListener(new OnEditorActionListener() {
+
             public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
 
                 // Have the remoteControl tell Astroboy to say something
@@ -88,8 +92,12 @@ public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
 
                 AstroSpeechEvent event = new AstroSpeechEvent(message);
                 eventManager.fire(event);
-                // eventManager.registerProducer(AstroSpeechEvent.class, new
-                // AstroSpeechEventProducer(event));
+
+                if (useEventProducer) {
+                    // don't use annotation system, use a producer
+                    eventManager.clearStickyEvents(AstroSpeechEvent.class);
+                    eventManager.registerProducer(AstroSpeechEvent.class, new AstroSpeechEventProducer(event));
+                }
                 return true;
             }
         });
