diff --git a/roboguice/src/main/java/roboguice/java/JavaGuice.java b/roboguice/src/main/java/roboguice/java/JavaGuice.java
index 0912d5c43..a67b3a180 100644
--- a/roboguice/src/main/java/roboguice/java/JavaGuice.java
+++ b/roboguice/src/main/java/roboguice/java/JavaGuice.java
@@ -19,12 +19,12 @@ private JavaGuice() {
     }
     
     @Override
-    protected List<Module> baseModules(String scopeObject) 
+    protected List<Module> baseModules(String scopedObject) 
     {
         Properties property = new Properties();
         
         //scoped object should the directory to property file
-        InputStream in = JavaResourceListener.class.getClassLoader().getResourceAsStream( scopeObject );
+        InputStream in = JavaResourceListener.class.getClassLoader().getResourceAsStream( scopedObject );
         try
         {//and load the property file 
             if ( in != null )
@@ -33,12 +33,12 @@ private JavaGuice() {
             } 
             else
             {
-                Ln.w( "Could not find [%s] resource - can not inject any resources in specified file.", scopeObject );
+                Ln.w( "Could not find [%s] resource - can not inject any resources in specified file.", scopedObject );
             }
         }
         catch ( Exception e )
         {
-            Ln.e( e, "Error loading property file [%s]", scopeObject );
+            Ln.e( e, "Error loading property file [%s]", scopedObject );
         }
         finally
         {
@@ -56,7 +56,7 @@ private JavaGuice() {
         final String[] moduleNames = custom_modules != null ? custom_modules.split( "," ) : new String[]{};
         
         final ArrayList<Module> modules = new ArrayList<Module>();
-        final JavaDefaultRoboModule defaultRoboModule = newDefaultRoboModule( scopeObject );
+        final JavaDefaultRoboModule defaultRoboModule = newDefaultRoboModule( scopedObject );
 
         modules.add(defaultRoboModule);
 
@@ -74,13 +74,13 @@ private JavaGuice() {
     }
 
     @Override
-    public Injector getInjector(String context) {
-        return getScopedInjector( context );
+    public Injector getInjector(String scopedObject) {
+        return getScopedInjector( scopedObject );
     }
     
     @Override
-    public JavaDefaultRoboModule newDefaultRoboModule( String scopeObject ) {
-        return new JavaDefaultRoboModule( getResourceListener(scopeObject) );
+    public JavaDefaultRoboModule newDefaultRoboModule( String scopedObject ) {
+        return new JavaDefaultRoboModule( getResourceListener(scopedObject) );
     }
 
     public JavaGuice addResourcePath( String scopedObject, String... paths )
