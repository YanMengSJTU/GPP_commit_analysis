diff --git a/astroboy/pom.xml b/astroboy/pom.xml
index fcacc3221..feef5e738 100644
--- a/astroboy/pom.xml
+++ b/astroboy/pom.xml
@@ -86,7 +86,7 @@
 					<resourceDirectory>${project.basedir}/res</resourceDirectory>
 					<nativeLibrariesDirectory>${project.basedir}/src/main/native</nativeLibrariesDirectory>
 					<sdk>
-						<platform>9</platform>
+						<platform>7</platform>
 					</sdk>
 					<undeployBeforeDeploy>true</undeployBeforeDeploy>
 				</configuration>
diff --git a/astroboy/res/layout/activity_fight_evil.xml b/astroboy/res/layout/activity_fight_evil.xml
index b6dd9fa0c..0c86922d2 100644
--- a/astroboy/res/layout/activity_fight_evil.xml
+++ b/astroboy/res/layout/activity_fight_evil.xml
@@ -7,7 +7,7 @@
     <fragment
         android:id="@+id/fragment_fight_evil"
         android:name="org.roboguice.astroboy.fragment.FightForcesOfEvilFragment"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent" />
 
 </LinearLayout>
\ No newline at end of file
diff --git a/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java b/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
index bffbd6750..3e49b9b42 100644
--- a/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
+++ b/astroboy/src/main/java/org/roboguice/astroboy/activity/AstroboyMasterConsole.java
@@ -140,7 +140,6 @@ private void detachFightForcesOfEvilFragment() {
         Fragment fightForcesOfEvilFragment = getSupportFragmentManager().findFragmentByTag(FIGHT_FORCES_OF_EVIL_FRAGMENT_TAG);
         if (fightForcesOfEvilFragment != null) {
             FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
-            ft.hide(fightForcesOfEvilFragment);
             ft.remove(fightForcesOfEvilFragment);
             ft.commit();
         }
diff --git a/roboguice/pom.xml b/roboguice/pom.xml
index 1ee0ee837..f9bc6ecd4 100644
--- a/roboguice/pom.xml
+++ b/roboguice/pom.xml
@@ -106,13 +106,13 @@
         <dependency>
             <groupId>com.google.android</groupId>
             <artifactId>android</artifactId>
-            <version>2.1.2</version>
+            <version>4.1.1.4</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
             <artifactId>android-test</artifactId>
-            <version>2.1.2</version>
+            <version>4.1.1.4</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
@@ -143,7 +143,7 @@
         <dependency>
             <groupId>com.pivotallabs</groupId>
             <artifactId>robolectric</artifactId>
-            <version>1.0-RC1</version>
+            <version>1.2</version>
             <optional>true</optional>
         </dependency>
         <dependency>
diff --git a/roboguice/src/test/java/roboguice/application/ApplicationInjectionTest.java b/roboguice/src/test/java/roboguice/application/ApplicationInjectionTest.java
index 2b39f43e5..424731325 100644
--- a/roboguice/src/test/java/roboguice/application/ApplicationInjectionTest.java
+++ b/roboguice/src/test/java/roboguice/application/ApplicationInjectionTest.java
@@ -1,49 +1,61 @@
 package roboguice.application;
 
-import com.xtremelabs.robolectric.Robolectric;
+import static org.hamcrest.CoreMatchers.equalTo;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertThat;
+
+import java.util.Random;
+
 import org.junit.Test;
 import org.junit.runner.RunWith;
+
 import roboguice.RoboGuice;
-import roboguice.test.RobolectricRoboTestRunner;
 
-import android.app.Application;
-import android.content.Context;
+import com.xtremelabs.robolectric.Robolectric;
+import com.xtremelabs.robolectric.res.RobolectricPackageManager;
+import com.xtremelabs.robolectric.shadows.ShadowContextWrapper;
 
 import com.google.inject.Inject;
+import com.google.inject.Stage;
 
-import java.util.Random;
-
-import static org.hamcrest.CoreMatchers.equalTo;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertThat;
+import android.app.Application;
+import android.content.Context;
 
-@RunWith(RobolectricRoboTestRunner.class)
+@RunWith(CustomRoboTestRunner.class)
 public class ApplicationInjectionTest {
 
+    private void setUp() {
+        ShadowContextWrapper shadowApp = Robolectric.shadowOf(Robolectric.application);
+        shadowApp.setPackageName("com.mycompany.myapp");
+        shadowApp.setPackageManager(new RobolectricPackageManager(Robolectric.application, null));
+        RoboGuice
+                .setBaseApplicationInjector(Robolectric.application, Stage.DEVELOPMENT, RoboGuice.newDefaultRoboModule(Robolectric.application), new ModuleA());
+    }
+
     @Test
     public void shouldBeAbleToInjectIntoApplication() {
+
         Robolectric.application = new AppA();
+        setUp();
         Robolectric.application.onCreate();
 
-        final AppA a = (AppA)Robolectric.application;
+        final AppA a = (AppA) Robolectric.application;
         assertNotNull(a.random);
     }
 
-
     @Test
     public void shouldBeAbleToInjectContextScopedItemsIntoApplication() {
         Robolectric.application = new AppB();
+        setUp();
         Robolectric.application.onCreate();
 
-        final AppB a = (AppB)Robolectric.application;
-        assertThat( a.context, equalTo((Context)a) );
+        final AppB a = (AppB) Robolectric.application;
+        assertThat(a.context, equalTo((Context) a));
     }
 
-
-
-
     public static class AppA extends Application {
-        @Inject Random random;
+        @Inject
+        Random random;
 
         @Override
         public void onCreate() {
@@ -53,7 +65,8 @@ public void onCreate() {
     }
 
     public static class AppB extends Application {
-        @Inject Context context;
+        @Inject
+        Context context;
 
         @Override
         public void onCreate() {
@@ -62,5 +75,11 @@ public void onCreate() {
         }
     }
 
+    public static class ModuleA extends com.google.inject.AbstractModule {
+        @Override
+        protected void configure() {
+        }
+
+    }
 
 }
diff --git a/roboguice/src/test/java/roboguice/application/CustomRoboTestRunner.java b/roboguice/src/test/java/roboguice/application/CustomRoboTestRunner.java
new file mode 100644
index 000000000..0126cd5c6
--- /dev/null
+++ b/roboguice/src/test/java/roboguice/application/CustomRoboTestRunner.java
@@ -0,0 +1,40 @@
+package roboguice.application;
+
+import java.io.File;
+
+import org.junit.runners.model.InitializationError;
+
+import roboguice.test.RobolectricRoboTestRunner;
+
+import com.xtremelabs.robolectric.RobolectricConfig;
+import com.xtremelabs.robolectric.bytecode.ClassHandler;
+import com.xtremelabs.robolectric.bytecode.RobolectricClassLoader;
+
+public class CustomRoboTestRunner extends RobolectricRoboTestRunner {
+
+    public CustomRoboTestRunner(Class<?> testClass, ClassHandler classHandler, RobolectricClassLoader classLoader, RobolectricConfig robolectricConfig)
+            throws InitializationError {
+        super(testClass, classHandler, classLoader, robolectricConfig);
+    }
+
+    public CustomRoboTestRunner(Class<?> testClass, ClassHandler classHandler, RobolectricConfig robolectricConfig) throws InitializationError {
+        super(testClass, classHandler, robolectricConfig);
+    }
+
+    public CustomRoboTestRunner(Class<?> testClass, File androidManifestPath, File resourceDirectory) throws InitializationError {
+        super(testClass, androidManifestPath, resourceDirectory);
+    }
+
+    public CustomRoboTestRunner(Class<?> testClass, File androidProjectRoot) throws InitializationError {
+        super(testClass, androidProjectRoot);
+    }
+
+    public CustomRoboTestRunner(Class<?> testClass, RobolectricConfig robolectricConfig) throws InitializationError {
+        super(testClass, robolectricConfig);
+    }
+
+    public CustomRoboTestRunner(Class<?> testClass) throws InitializationError {
+        super(testClass);
+    }
+
+}
