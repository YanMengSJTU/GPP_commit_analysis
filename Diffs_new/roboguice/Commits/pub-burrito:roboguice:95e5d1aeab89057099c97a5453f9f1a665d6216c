diff --git a/roboguice/src/main/java/roboguice/android/DroidGuice.java b/roboguice/src/main/java/roboguice/android/DroidGuice.java
index a09f1992b..f3c7a30e7 100644
--- a/roboguice/src/main/java/roboguice/android/DroidGuice.java
+++ b/roboguice/src/main/java/roboguice/android/DroidGuice.java
@@ -4,7 +4,7 @@
 import java.util.List;
 import java.util.WeakHashMap;
 
-import roboguice.android.config.DefaultRoboModule;
+import roboguice.android.config.AndroidDefaultRoboModule;
 import roboguice.android.inject.AndroidResourceListener;
 import roboguice.android.inject.ContextScope;
 import roboguice.android.inject.ContextScopedRoboInjector;
@@ -30,7 +30,7 @@
  * BUG hashmap should also key off of stage and modules list
  */
 
-public class DroidGuice extends RoboGuice<Application, Context, DefaultRoboModule, AndroidResourceListener> {
+public class DroidGuice extends RoboGuice<Application, Context, AndroidDefaultRoboModule, AndroidResourceListener> {
     
     protected static WeakHashMap<Application,ViewListener> viewListeners = new WeakHashMap<Application, ViewListener>();
     protected static int modulesResourceId = 0;
@@ -67,7 +67,7 @@ public void setModulesResourceId(int modulesResourceId) {
 
         final String[] moduleNames = id>0 ? application.getResources().getStringArray(id) : new String[]{};
         final ArrayList<Module> modules = new ArrayList<Module>();
-        final DefaultRoboModule defaultRoboModule = newDefaultRoboModule(application);
+        final AndroidDefaultRoboModule defaultRoboModule = newDefaultRoboModule(application);
 
         modules.add(defaultRoboModule);
 
@@ -110,8 +110,8 @@ protected AndroidResourceListener getResourceListener(Application application) {
     }
 
     @Override
-    public DefaultRoboModule newDefaultRoboModule( Application application ) {
-        return new DefaultRoboModule(application, new ContextScope(application), getViewListener(application), getResourceListener(application));
+    public AndroidDefaultRoboModule newDefaultRoboModule( Application application ) {
+        return new AndroidDefaultRoboModule(application, new ContextScope(application), getViewListener(application), getResourceListener(application));
     }
 
     protected ViewListener getViewListener( final Application application ) {
diff --git a/roboguice/src/main/java/roboguice/android/config/DefaultRoboModule.java b/roboguice/src/main/java/roboguice/android/config/AndroidDefaultRoboModule.java
similarity index 95%
rename from roboguice/src/main/java/roboguice/android/config/DefaultRoboModule.java
rename to roboguice/src/main/java/roboguice/android/config/AndroidDefaultRoboModule.java
index f46a057e7..24d30da5c 100644
--- a/roboguice/src/main/java/roboguice/android/config/DefaultRoboModule.java
+++ b/roboguice/src/main/java/roboguice/android/config/AndroidDefaultRoboModule.java
@@ -57,7 +57,7 @@
  *
  * @author Mike Burton
  */
-public class DefaultRoboModule extends AbstractModule {
+public class AndroidDefaultRoboModule extends AbstractModule {
     protected static final Class fragmentManagerClass;
     protected static final Class accountManagerClass;
 
@@ -84,7 +84,7 @@
     protected ViewListener viewListener;
 
 
-    public DefaultRoboModule(final Application application, ContextScope contextScope, ViewListener viewListener, AndroidResourceListener resourceListener) {
+    public AndroidDefaultRoboModule(final Application application, ContextScope contextScope, ViewListener viewListener, AndroidResourceListener resourceListener) {
 
 
         this.application = application;
diff --git a/roboguice/src/main/java/roboguice/base/RoboGuice.java b/roboguice/src/main/java/roboguice/base/RoboGuice.java
index 69507717a..ccd595a29 100644
--- a/roboguice/src/main/java/roboguice/base/RoboGuice.java
+++ b/roboguice/src/main/java/roboguice/base/RoboGuice.java
@@ -3,7 +3,7 @@
 import java.util.List;
 import java.util.WeakHashMap;
 
-import roboguice.android.config.DefaultRoboModule;
+import roboguice.android.config.AndroidDefaultRoboModule;
 import roboguice.base.event.EventManager;
 import roboguice.base.inject.ResourceListener;
 
@@ -25,10 +25,10 @@
  * 
  * @param <S> Object which a main {@link Injector} is scoped to
  * @param <O> Object which multiple {@link Injector}s are scoped bye
- * @param <R> Specific {@link DefaultRoboModule} impl
+ * @param <R> Specific {@link AndroidDefaultRoboModule} impl
  * @param <L> Specific {@link ResourceListener} impl
  */
-public abstract class RoboGuice<S, O, R extends DefaultRoboModule, L extends ResourceListener>{
+public abstract class RoboGuice<S, O, R extends AndroidDefaultRoboModule, L extends ResourceListener>{
     public static Stage DEFAULT_STAGE = Stage.PRODUCTION;
     
     protected WeakHashMap<S,Injector> injectors = new WeakHashMap<S,Injector>();
@@ -128,7 +128,7 @@ public Injector getInjector( O context )
         return Guice.createInjector(DEFAULT_STAGE);
     }
     
-    public abstract DefaultRoboModule newDefaultRoboModule( S app );
+    public abstract AndroidDefaultRoboModule newDefaultRoboModule( S app );
     
     protected abstract L getResourceListener( S scopedObject );
 }
