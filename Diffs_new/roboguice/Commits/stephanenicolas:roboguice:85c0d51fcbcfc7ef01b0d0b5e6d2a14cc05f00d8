diff --git a/astroboy/res/layout/main.xml b/astroboy/res/layout/main.xml
index c608c7abd..11142cc4a 100644
--- a/astroboy/res/layout/main.xml
+++ b/astroboy/res/layout/main.xml
@@ -48,4 +48,8 @@
         android:layout_gravity="center"
         android:text="Self Destruct"/>
     
+    <org.roboguice.astroboy.view.CustomView 
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"/>"
+    
 </LinearLayout>
diff --git a/astroboy/res/layout/view_custom.xml b/astroboy/res/layout/view_custom.xml
new file mode 100644
index 000000000..e1a89324d
--- /dev/null
+++ b/astroboy/res/layout/view_custom.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="horizontal" >
+
+    <TextView
+        android:id="@+id/tv_status"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:text="TV is open" />
+
+    <Button
+        android:id="@+id/close_tv"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Close TV" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/astroboy/src/main/java/org/roboguice/astroboy/view/CustomView.java b/astroboy/src/main/java/org/roboguice/astroboy/view/CustomView.java
new file mode 100644
index 000000000..c87296e9d
--- /dev/null
+++ b/astroboy/src/main/java/org/roboguice/astroboy/view/CustomView.java
@@ -0,0 +1,56 @@
+package org.roboguice.astroboy.view;
+
+import org.roboguice.astroboy.R;
+
+import roboguice.inject.InjectView;
+import android.content.Context;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+public class CustomView extends LinearLayout {
+
+    @InjectView(R.id.close_tv)
+    private Button buttonCloseTv;
+    @InjectView(R.id.tv_status)
+    private TextView textviewStatus;
+
+    private CustomView(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        initializeView(context);
+    }
+
+    public CustomView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        initializeView(context);
+    }
+
+    public CustomView(Context context) {
+        super(context);
+        initializeView(context);
+    }
+
+    public void initializeView(Context context) {
+        LayoutInflater.from(context).inflate(R.layout.view_custom, this, true);
+    }
+
+    @Override
+    protected void onAttachedToWindow() {
+        super.onAttachedToWindow();
+        buttonCloseTv.setOnClickListener(new OnClickListener() {
+
+            public void onClick(View v) {
+                textviewStatus.setText("Closed");
+            }
+        });
+        textviewStatus.setOnClickListener(new OnClickListener() {
+
+            public void onClick(View v) {
+                textviewStatus.setText("Open");
+            }
+        });
+    }
+}
diff --git a/roboguice/src/main/java/roboguice/activity/RoboActivity.java b/roboguice/src/main/java/roboguice/activity/RoboActivity.java
index 5c5e1dd1c..88613070a 100644
--- a/roboguice/src/main/java/roboguice/activity/RoboActivity.java
+++ b/roboguice/src/main/java/roboguice/activity/RoboActivity.java
@@ -15,24 +15,38 @@
  */
 package roboguice.activity;
 
+import java.lang.reflect.Constructor;
+import java.util.HashMap;
+import java.util.Map;
+
 import roboguice.RoboGuice;
-import roboguice.activity.event.*;
+import roboguice.activity.event.OnActivityResultEvent;
+import roboguice.activity.event.OnConfigurationChangedEvent;
+import roboguice.activity.event.OnContentChangedEvent;
+import roboguice.activity.event.OnCreateEvent;
+import roboguice.activity.event.OnDestroyEvent;
+import roboguice.activity.event.OnNewIntentEvent;
+import roboguice.activity.event.OnPauseEvent;
+import roboguice.activity.event.OnRestartEvent;
+import roboguice.activity.event.OnResumeEvent;
+import roboguice.activity.event.OnStartEvent;
+import roboguice.activity.event.OnStopEvent;
 import roboguice.event.EventManager;
 import roboguice.inject.ContentViewListener;
 import roboguice.inject.RoboInjector;
 import roboguice.util.RoboContext;
 
-import android.app.Activity;
-import android.content.Intent;
-import android.content.res.Configuration;
-import android.os.Bundle;
-
 import com.google.inject.Inject;
 import com.google.inject.Injector;
 import com.google.inject.Key;
 
-import java.util.HashMap;
-import java.util.Map;
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.os.Bundle;
+import android.util.AttributeSet;
+import android.view.View;
 
 /**
  * A {@link RoboActivity} extends from {@link Activity} to provide dynamic
@@ -67,9 +81,10 @@
  */
 public class RoboActivity extends Activity implements RoboContext {
     protected EventManager eventManager;
-    protected HashMap<Key<?>,Object> scopedObjects = new HashMap<Key<?>, Object>();
+    protected HashMap<Key<?>, Object> scopedObjects = new HashMap<Key<?>, Object>();
 
-    @Inject ContentViewListener ignored; // BUG find a better place to put this
+    @Inject
+    ContentViewListener ignored; // BUG find a better place to put this
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -105,7 +120,7 @@ protected void onPause() {
     }
 
     @Override
-    protected void onNewIntent( Intent intent ) {
+    protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
         eventManager.fire(new OnNewIntentEvent());
     }
@@ -156,4 +171,20 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     public Map<Key<?>, Object> getScopedObjectMap() {
         return scopedObjects;
     }
+
+    @Override
+    public View onCreateView(String name, Context context, AttributeSet attrs) {
+        final View view = super.onCreateView(name,context,attrs);
+        if( name.indexOf('.') != -1 ) // only do injection on custom views
+            RoboGuice.injectMembers(this,view);
+        return view;
+    }
+
+    @Override
+    public View onCreateView(View parent, String name, Context context, AttributeSet attrs) {
+        final View view = super.onCreateView(parent, name,context,attrs);
+        if( name.indexOf('.') != -1 ) // only do injection on custom views
+            RoboGuice.injectMembers(this,view);
+        return view;
+    }
 }
