diff --git a/afterburner/src/main/java/afterburner/PostProcessor.java b/afterburner/src/main/java/afterburner/PostProcessor.java
index fae7ee6aa..aee673c71 100644
--- a/afterburner/src/main/java/afterburner/PostProcessor.java
+++ b/afterburner/src/main/java/afterburner/PostProcessor.java
@@ -46,6 +46,11 @@
  *       <li>onFinishInflate must be called manually in constructors of views with a single context
  * argument. You should invoke it after inflating your layout manually.
  *     </ul>
+ *   <li>for other classes (namely MVP presenters and view holder design patterns) :
+ *     <ul>
+ *       <li>right before any constructor with a single argument of type Activity, Fragment, or View
+ *       <li>static inner classes can only be processed if static
+ *     </ul>
  * </ul>
  * </pre>
  * @author SNI
@@ -118,7 +123,7 @@ private void injectStuffInFragment(final CtClass classToTransform) throws NotFou
         }
         // create or complete onViewCreated
         CtMethod onViewCreatedMethod = extractExistingMethod(classToTransform, "onViewCreated");
-        System.out.println("onViewCreatedMethod : " + onViewCreatedMethod);
+        getLogger().debug("onViewCreatedMethod : " + onViewCreatedMethod);
         if (onViewCreatedMethod != null) {
             InjectorEditor injectorEditor = new InjectorEditor(classToTransform, fragments, views, -1, "onViewCreated");
             onViewCreatedMethod.instrument(injectorEditor);
@@ -127,7 +132,7 @@ private void injectStuffInFragment(final CtClass classToTransform) throws NotFou
         }
         // create or complete onDestroyView
         CtMethod onDestroyViewMethod = extractExistingMethod(classToTransform, "onDestroyView");
-        System.out.println("onDestroyView : " + onDestroyViewMethod);
+        getLogger().debug("onDestroyView : " + onDestroyViewMethod);
         if (onDestroyViewMethod != null) {
             InjectorEditor injectorEditor = new InjectorEditor(classToTransform, fragments, views, -1, "onDestroyView");
             onDestroyViewMethod.instrument(injectorEditor);
@@ -144,7 +149,7 @@ private void injectStuffInView(final CtClass classToTransform) throws NotFoundEx
             return;
         }
         CtMethod onFinishInflate = extractExistingMethod(classToTransform, "onFinishInflate");
-        System.out.println("onFinishInflateMethod : " + onFinishInflate);
+        getLogger().debug("onFinishInflateMethod : " + onFinishInflate);
         if (onFinishInflate != null) {
             InjectorEditor injectorEditor = new InjectorEditor(classToTransform, new ArrayList<CtField>(), views, -1, "onFinishInflate");
             onFinishInflate.instrument(injectorEditor);
@@ -163,7 +168,7 @@ private void injectStuffInClass(final CtClass clazz) throws NotFoundException, C
         }
         // create or complete onViewCreated
         List<CtConstructor> constructorList = extractExistingConstructors(clazz);
-        System.out.println("constructor : " + constructorList.toString());
+        getLogger().debug("constructor : " + constructorList.toString());
         if ( !constructorList.isEmpty() ) {
             for (CtConstructor constructor : constructorList) {
                 constructor.insertBeforeBody(createInjectedBodyWithParam(clazz, constructor.getParameterTypes()[0],views, fragments, -1));
