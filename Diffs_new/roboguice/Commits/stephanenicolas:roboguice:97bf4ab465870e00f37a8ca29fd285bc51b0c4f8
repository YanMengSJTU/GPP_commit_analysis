diff --git a/afterburner/src/main/java/afterburner/PostProcessor.java b/afterburner/src/main/java/afterburner/PostProcessor.java
index 08eba221e..c086a5914 100644
--- a/afterburner/src/main/java/afterburner/PostProcessor.java
+++ b/afterburner/src/main/java/afterburner/PostProcessor.java
@@ -102,7 +102,8 @@ private String createOnCreateBody(CtClass clazz, List<CtField> views, List<CtFie
     }
 
     private String createOnViewCreatedBody(CtClass clazz, List<CtField> views, List<CtField> fragments) throws ClassNotFoundException, NotFoundException {
-        return "public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) { \n" + "super.onViewCreated(view, savedInstanceState);\n" + createInjectedBody(clazz, views, fragments, -1) + "}";
+        return "public void onViewCreated(android.view.View view, android.os.Bundle savedInstanceState) { \n" + "super.onViewCreated(view, savedInstanceState);\n"
+                + createInjectedBody(clazz, views, fragments, -1) + "}";
     }
 
     private CtMethod extractExistingMethod(final CtClass classToTransform, String methodName) {
@@ -138,7 +139,7 @@ private String injectContentView(int layoutId) {
         return "setContentView(" + layoutId + ");\n";
     }
 
-    private String injectFragmentStatements(CtClass classToTransform, List<CtField> fragments) throws ClassNotFoundException, NotFoundException {
+    private String injectFragmentStatements(CtClass classToTransform, List<CtField> fragments, String root, boolean useChildFragmentManager) throws ClassNotFoundException, NotFoundException {
         StringBuffer buffer = new StringBuffer();
         for (CtField field : fragments) {
             int id = ((InjectFragment) field.getAnnotation(InjectFragment.class)).value();
@@ -151,9 +152,15 @@ private String injectFragmentStatements(CtClass classToTransform, List<CtField>
             buffer.append(fragmentType.getName());
             buffer.append(')');
             boolean isUsingSupport = !fragmentType.subclassOf(ClassPool.getDefault().get(Fragment.class.getName()));
-            String getFragmentManagerString = isUsingSupport ? "getSupportFragmentManager()" : "getFragmentManager()";
+            String getFragmentManagerString;
+            if (useChildFragmentManager) {
+                getFragmentManagerString = "getChildFragmentManager()";
+            } else if (isUsingSupport)
+                getFragmentManagerString = "getSupportFragmentManager()";
+            else
+                getFragmentManagerString = "getFragmentManager()";
             String getFragmentString = isUsingId ? ".findFragmentById(" + id + ")" : ".findFragmentByTag(" + tag + ")";
-            buffer.append(getFragmentManagerString + getFragmentString + ";\n");
+            buffer.append(root + "." + getFragmentManagerString + getFragmentString + ";\n");
         }
         return buffer.toString();
     }
@@ -203,15 +210,17 @@ private String createInjectedBody(CtClass clazz, List<CtField> views, List<CtFie
             buffer.append(injectContentView(layoutId));
         }
         if (!views.isEmpty()) {
-            if( isActivity ) {
+            if (isActivity) {
                 buffer.append(injectViewStatements(clazz, views, "this"));
-            } else if( isFragment || isSupportFragment ){
+            } else if (isFragment || isSupportFragment) {
                 buffer.append(injectViewStatements(clazz, views, "$1"));
             }
         }
         if (!fragments.isEmpty()) {
-            if( isActivity ) {
-                buffer.append(injectFragmentStatements(clazz, fragments));
+            if (isActivity) {
+                buffer.append(injectFragmentStatements(clazz, fragments, "this", false));
+            } else if (isFragment || isSupportFragment) {
+                buffer.append(injectFragmentStatements(clazz, fragments, "this", true));
             }
         }
         String string = buffer.toString();
