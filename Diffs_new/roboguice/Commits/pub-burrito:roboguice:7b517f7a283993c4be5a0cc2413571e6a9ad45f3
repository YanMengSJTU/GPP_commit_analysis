diff --git a/roboguice/src/main/java/roboguice/base/util/PropertyLoader.java b/roboguice/src/main/java/roboguice/base/util/PropertyLoader.java
index e832091f1..0f083956b 100644
--- a/roboguice/src/main/java/roboguice/base/util/PropertyLoader.java
+++ b/roboguice/src/main/java/roboguice/base/util/PropertyLoader.java
@@ -1,7 +1,12 @@
 package roboguice.base.util;
 
+import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.Enumeration;
+import java.util.List;
 import java.util.Properties;
 
 import roboguice.base.util.logging.Ln;
@@ -15,38 +20,58 @@
      * @param property ( Optional ) If set, the propertyFile will be loaded into this property
      * @return The {@link Properties} that was loaded, {@code null} if there was an error loading the property
      */
-    public static Properties loadProperty( String propertyFile, Properties property )
+    public static Properties loadProperty( String propertyFile, Properties property, Comparator<URL> comparator )
     {
         boolean set = false;
         Properties tmp = property == null ? new Properties() : property;
 
-        InputStream in = PropertyLoader.class.getResourceAsStream(propertyFile);
         try 
-        {// and load the property file
-            if ( in != null ) 
-            {
-                tmp.load( in );
-                set = true;
-            } 
-            else 
-            {
-                Ln.w( "Could not find [%s] resource - can not inject any resources in specified file.", propertyFile );
-            }
-        } 
-        catch (Exception e) 
         {
-            Ln.e( e, "Error loading property file [%s]", propertyFile );
-        } 
-        finally 
-        {
-            try 
-            {
-                in.close();
-            } catch (Exception ex) 
+            Enumeration<URL> urls = PropertyLoader.class.getClassLoader().getResources( propertyFile );
+            List<URL> allUrls = Collections.list(urls);
+            if ( comparator != null )
             {
-                // ignore
+                Collections.sort(allUrls, comparator);
+            }
+        
+            for( URL url : allUrls)
+            {//for each url
+                
+                InputStream in = null;
+                try 
+                {//and load the property file
+                    in = url.openStream();
+                    
+                    if ( in != null )
+                    {
+                        tmp.load( in );
+                        set = true;
+                    } 
+                    else 
+                    {
+                        Ln.w( "Could not find [%s] resource - can not inject any resources in specified file.", propertyFile );
+                    }
+                } 
+                catch (Exception e) 
+                {
+                    Ln.e( e, "Error loading property file [%s]", propertyFile );
+                } 
+                finally 
+                {
+                    try 
+                    {
+                        in.close();
+                    } catch (Exception ex) 
+                    {
+                        // ignore
+                    }
+                }
             }
         }
+        catch ( IOException e1 ) 
+        {
+            Ln.e(e1);
+        }
             
         return set ? tmp : null;
     }
diff --git a/roboguice/src/main/java/roboguice/java/util/ResourceManager.java b/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
index 70d49d070..6d4357601 100644
--- a/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
+++ b/roboguice/src/main/java/roboguice/java/util/ResourceManager.java
@@ -1,12 +1,10 @@
 package roboguice.java.util;
 
-import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Comparator;
-import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
@@ -15,7 +13,6 @@
 import java.util.Set;
 
 import roboguice.base.util.PropertyLoader;
-import roboguice.java.inject.JavaResourceListener;
 
 import com.google.common.collect.Lists;
 
@@ -133,28 +130,11 @@ Properties loadProperty(String propertyFile) {
 
         Properties property = new Properties();
 
-        try 
+        if ( PropertyLoader.loadProperty(propertyFile, property, comparator) != null )
         {
-            Enumeration<URL> urls = JavaResourceListener.class.getClassLoader().getResources( propertyFile );
-            List<URL> allUrls = Collections.list(urls);
-            if ( comparator != null )
-            {
-                Collections.sort(allUrls, comparator);
-            }
-            
-            for( URL url : allUrls)
-            {//for each url
-                
-                if ( PropertyLoader.loadProperty(url, property) != null )
-                {
-                    properties.put(propertyFile, property);
-                }
-            }
-        } 
-        catch ( IOException e1 ) 
-        {
-            e1.printStackTrace();
+            properties.put(propertyFile, property);
         }
+
         return property;
     }
      
