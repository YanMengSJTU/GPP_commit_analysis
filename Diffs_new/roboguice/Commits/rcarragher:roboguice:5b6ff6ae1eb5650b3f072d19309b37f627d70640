diff --git a/roboguice/pom.xml b/roboguice/pom.xml
index f160d11bf..93939ed65 100644
--- a/roboguice/pom.xml
+++ b/roboguice/pom.xml
@@ -3,7 +3,7 @@
     <groupId>org.roboguice</groupId>
     <artifactId>roboguice</artifactId>
     <name>RoboGuice</name>
-    <version>2.0</version>
+    <version>2.0-amplify</version>
     <description>A framework for using Google Guice dependency injection in Android.</description>
 
     <licenses>
diff --git a/roboguice/src/main/java/roboguice/RoboGuice.java b/roboguice/src/main/java/roboguice/RoboGuice.java
index 569369ae3..f36a6bf1d 100644
--- a/roboguice/src/main/java/roboguice/RoboGuice.java
+++ b/roboguice/src/main/java/roboguice/RoboGuice.java
@@ -1,20 +1,14 @@
 package roboguice;
 
-import roboguice.config.DefaultRoboModule;
-import roboguice.event.EventManager;
-import roboguice.inject.*;
-
 import android.app.Application;
 import android.content.Context;
-
 import com.google.inject.Guice;
 import com.google.inject.Injector;
 import com.google.inject.Module;
 import com.google.inject.Stage;
-import com.google.inject.spi.DefaultElementVisitor;
-import com.google.inject.spi.Element;
-import com.google.inject.spi.Elements;
-import com.google.inject.spi.StaticInjectionRequest;
+import roboguice.config.DefaultRoboModule;
+import roboguice.event.EventManager;
+import roboguice.inject.*;
 
 import java.util.ArrayList;
 import java.util.WeakHashMap;
@@ -40,7 +34,7 @@
     protected static WeakHashMap<Application,ViewListener> viewListeners = new WeakHashMap<Application, ViewListener>();
     protected static int modulesResourceId = 0;
     
-    private RoboGuice() {
+    protected RoboGuice() {
     }
 
     /**
@@ -78,18 +72,6 @@ public static Injector getBaseApplicationInjector(Application application) {
      */
     public static Injector setBaseApplicationInjector(final Application application, Stage stage, Module... modules) {
 
-        // Do a little rewriting on the modules first to
-        // add static resource injection
-        for(Element element : Elements.getElements(modules)) {
-            element.acceptVisitor(new DefaultElementVisitor<Void>() {
-                @Override
-                public Void visit(StaticInjectionRequest element) {
-                    getResourceListener(application).requestStaticInjection(element.getType());
-                    return null;
-                }
-            });
-        }
-
         synchronized (RoboGuice.class) {
             final Injector rtrn = Guice.createInjector(stage, modules);
             injectors.put(application,rtrn);
