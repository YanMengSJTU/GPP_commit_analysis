diff --git a/roboguice/src/main/java/roboguice/inject/ContentViewListener.java b/roboguice/src/main/java/roboguice/inject/ContentViewListener.java
index fce6403be..30508a6e8 100644
--- a/roboguice/src/main/java/roboguice/inject/ContentViewListener.java
+++ b/roboguice/src/main/java/roboguice/inject/ContentViewListener.java
@@ -8,12 +8,11 @@
 import android.app.Activity;
 import android.content.Context;
 
-@SuppressWarnings("UnusedParameters")
 @ContextSingleton
 public class ContentViewListener {
     @Inject protected Activity activity;
 
-    public void optionallySetContentView( @Observes OnCreateEvent ignored ) {
+    public void optionallySetContentView( @Observes OnCreateEvent<?> ignored ) {
         Class<?> c = activity.getClass();
         while( c != Context.class ) {
             final ContentView annotation = c.getAnnotation(ContentView.class);
diff --git a/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java b/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
index ccf865229..938a5927b 100644
--- a/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
+++ b/roboguice/src/main/java/roboguice/inject/ContextScopedRoboInjector.java
@@ -17,7 +17,6 @@
 import com.google.inject.TypeLiteral;
 import com.google.inject.spi.TypeConverterBinding;
 
-import android.app.Activity;
 import android.content.Context;
 
 public class ContextScopedRoboInjector implements RoboInjector {
@@ -252,35 +251,11 @@ public void injectMembersWithoutViews( Object instance ) {
     }
 
     @Override
-    public void injectViewMembers(Activity activity) {
+    public void injectViewMembers(Object instance) {
         synchronized (ContextScope.class) {
             scope.enter(context);
             try {
-                if( context!=activity )
-                    throw new UnsupportedOperationException("internal error, how did you get here?");
-
-                ViewMembersInjector.injectViews(activity);
-            } finally {
-                scope.exit(context);
-            }
-        }
-    }
-
-    @Override
-    public void injectViewMembers(android.support.v4.app.Fragment fragment) {
-        injectViews(fragment);
-    }
-
-    @Override
-    public void injectViewMembers(android.app.Fragment fragment) {
-        injectViews(fragment);
-    }
-
-    private void injectViews(Object fragment) {
-        synchronized (ContextScope.class) {
-            scope.enter(context);
-            try {
-                ViewMembersInjector.injectViews(fragment);
+                ViewMembersInjector.injectViews(instance);
             } finally {
                 scope.exit(context);
             }
diff --git a/roboguice/src/main/java/roboguice/inject/RoboInjector.java b/roboguice/src/main/java/roboguice/inject/RoboInjector.java
index d2845993a..4199c7d8e 100644
--- a/roboguice/src/main/java/roboguice/inject/RoboInjector.java
+++ b/roboguice/src/main/java/roboguice/inject/RoboInjector.java
@@ -2,11 +2,30 @@
 
 import com.google.inject.Injector;
 
-import android.app.Activity;
-
+/**
+ * Describes an enriched interface for RoboGuice injections.
+ * Note to maintainers : this class should compile and be accessible to projects 
+ * that use support or not.
+ * @author Michael Burton
+ */
 public interface RoboInjector extends Injector {
-    void injectViewMembers(Activity activity);
-    void injectViewMembers(android.support.v4.app.Fragment fragment);
+    
+    /**
+     * Inject view members inside a given instance according to following rules.
+     * <ul>
+     *  <li> If the instance is a Context, it must be an Activity.
+     *  <li> it can also be a Fragment (support or native)
+     *  <li> it can also be a View (with nesting views)
+     * </ul>
+     * Note that this method must be loosly typed in order to accomodate apps built without the support-library.
+     * @param instance the Activity, Fragment or View.
+     * @see {@link InjectView}.
+     */
+    void injectViewMembers(Object instance);
+
+    /**
+     * Inject members, except views, in any kind of Ojbect.
+     * @param instance a Java object that will receive RoboGuice injections.
+     */
     void injectMembersWithoutViews(Object instance);
-    void injectViewMembers(android.app.Fragment fragment);
 }
