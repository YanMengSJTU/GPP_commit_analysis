diff --git a/src/com/activeandroid/sebbia/ModelInfo.java b/src/com/activeandroid/sebbia/ModelInfo.java
index f7a5004c..85e2d921 100644
--- a/src/com/activeandroid/sebbia/ModelInfo.java
+++ b/src/com/activeandroid/sebbia/ModelInfo.java
@@ -65,7 +65,7 @@ public ModelInfo(Configuration configuration) {
 			try {
 				scanForModel(configuration.getContext());
 			}
-			catch (IOException e) {
+			catch (Exception e) {
 				Log.e("Couldn't open source path.", e);
 			}
 		}
@@ -124,38 +124,9 @@ private boolean loadModelFromMetaData(Configuration configuration) {
 		return true;
 	}
 
-	private void scanForModel(Context context) throws IOException {
+	private void scanForModel(Context context) throws Exception {
 		String packageName = context.getPackageName();
-		String sourcePath = context.getApplicationInfo().sourceDir;
-		List<String> paths;
-
-		try {
-			paths = MultiDexHelper.getAllClasses(context);
-		} catch (Exception ex) {
-			paths = new ArrayList<String>();
-		}
-
-		if (sourcePath != null && !(new File(sourcePath).isDirectory())) {
-			DexFile dexfile = new DexFile(sourcePath);
-			Enumeration<String> entries = dexfile.entries();
-
-			while (entries.hasMoreElements()) {
-				paths.add(entries.nextElement());
-			}
-		}
-		// Robolectric fallback
-		else {
-			ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
-			Enumeration<URL> resources = classLoader.getResources("");
-
-			while (resources.hasMoreElements()) {
-				String path = resources.nextElement().getFile();
-				if (path.contains("bin") || path.contains("classes")) {
-					paths.add(path);
-				}
-			}
-		}
-
+		List<String> paths = MultiDexHelper.getAllClasses(context);
 		for (String path : paths) {
 			File file = new File(path);
 			scanForModelClasses(file, packageName, context.getClassLoader());
