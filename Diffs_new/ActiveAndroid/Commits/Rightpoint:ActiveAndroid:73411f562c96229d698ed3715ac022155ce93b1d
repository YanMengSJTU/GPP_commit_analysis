diff --git a/src/main/java/com/activeandroid/Cache.java b/src/main/java/com/activeandroid/Cache.java
index d84390d4..f57e521d 100644
--- a/src/main/java/com/activeandroid/Cache.java
+++ b/src/main/java/com/activeandroid/Cache.java
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
 import android.database.sqlite.SQLiteStatement;
 import android.support.v4.util.LruCache;
 
@@ -104,14 +105,18 @@ public static synchronized void dispose() {
 	}
 
     public static boolean checkDbIntegrity() {
+        return checkDbIntegrity(sDatabaseHelper);
+    }
+
+    public static boolean checkDbIntegrity(DatabaseHelper helper) {
         boolean ok = true;
         String sql = "Pragma quick_check(1)";
-        SQLiteStatement statement = sDatabaseHelper.getWritableDatabase().compileStatement(sql);
+        SQLiteStatement statement = helper.getWritableDatabase().compileStatement(sql);
 
         try {
             String result = statement.simpleQueryForString();
             if (!result.equalsIgnoreCase("ok")) {
-                sDatabaseHelper.restoreBackUp(sContext);
+                helper.restoreBackUp(sContext);
                 ok = false;
             }
         } finally {
diff --git a/src/main/java/com/activeandroid/DatabaseHelper.java b/src/main/java/com/activeandroid/DatabaseHelper.java
index 6d682476..58765948 100644
--- a/src/main/java/com/activeandroid/DatabaseHelper.java
+++ b/src/main/java/com/activeandroid/DatabaseHelper.java
@@ -164,7 +164,8 @@ public void restoreDatabase(Context context, String databaseName, String prepack
             // check existing and use that as backup
             File existingDb = context.getDatabasePath(getDatabaseName());
             InputStream inputStream;
-            if(existingDb.exists()) {
+            // if it exists and the integrity is ok
+            if(existingDb.exists() && Cache.checkDbIntegrity(this)) {
                 inputStream = new FileInputStream(existingDb);
             } else {
                 inputStream = context.getAssets().open(prepackagedName);
