diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index 6495e379..019f4b28 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -96,6 +96,10 @@ public static synchronized void dispose() {
 		Log.v("ActiveAndroid disposed. Call initialize to use library.");
 	}
 
+	public static int getPreviousDBVersion() {
+		return sDatabaseHelper.getPreviousDBVersion();
+	}
+
 	// Database access
 	
 	public static boolean isInitialized() {
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 7158c5bb..038a37c9 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -50,6 +50,7 @@
     //////////////////////////////////////////////////////////////////////////////////////
 
     private final String mSqlParser;
+	private final int mPreviousDBVersion;
 
 	//////////////////////////////////////////////////////////////////////////////////////
 	// CONSTRUCTORS
@@ -61,6 +62,9 @@ public DatabaseHelper(Configuration configuration) {
 		mSqlParser = configuration.getSqlParser();
 	}
 
+	public int getPreviousDBVersion() {
+		return mPreviousDBVersion;
+	}
 	//////////////////////////////////////////////////////////////////////////////////////
 	// OVERRIDEN METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -76,6 +80,7 @@ public void onCreate(SQLiteDatabase db) {
 		executeCreate(db);
 		executeMigrations(db, -1, db.getVersion());
 		executeCreateIndex(db);
+		mPreviousDBVersion = -1;
 	}
 
 	@Override
@@ -83,6 +88,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		executePragmas(db);
 		executeCreate(db);
 		executeMigrations(db, oldVersion, newVersion);
+		mPreviousDBVersion = oldVersion;
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -195,6 +201,9 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
 			Log.e("Failed to execute migrations.", e);
 		}
 
+		if (mPostMigrationRunnable != null) {
+			mPostMigrationRunnable.onPostMigration(oldVersion, newVersion);
+		}
 		return migrationExecuted;
 	}
 
