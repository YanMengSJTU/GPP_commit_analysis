diff --git a/src/com/activeandroid/ActiveAndroid.java b/src/com/activeandroid/ActiveAndroid.java
index 7bf2578c..207d85a3 100644
--- a/src/com/activeandroid/ActiveAndroid.java
+++ b/src/com/activeandroid/ActiveAndroid.java
@@ -19,7 +19,7 @@
 import android.app.Application;
 import android.database.sqlite.SQLiteDatabase;
 
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 
 public final class ActiveAndroid {
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -44,7 +44,7 @@ public static void dispose() {
 	}
 
 	public static void setLoggingEnabled(boolean enabled) {
-		Log.setEnabled(enabled);
+		LogUtil.setEnabled(enabled);
 	}
 
 	public synchronized static SQLiteDatabase getDatabase() {
diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index b9061d12..55c5ee77 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -25,7 +25,7 @@
 import android.database.sqlite.SQLiteDatabase;
 
 import com.activeandroid.serializer.TypeSerializer;
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 
 public final class Cache {
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -54,7 +54,7 @@ private Cache() {
 
 	public static synchronized void initialize(Application application) {
 		if (sIsInitialized) {
-			Log.v("ActiveAndroid already initialized.");
+			LogUtil.v("ActiveAndroid already initialized.");
 			return;
 		}
 
@@ -69,12 +69,12 @@ public static synchronized void initialize(Application application) {
 
 		sIsInitialized = true;
 
-		Log.v("ActiveAndroid initialized succesfully.");
+		LogUtil.v("ActiveAndroid initialized succesfully.");
 	}
 
 	public static synchronized void clear() {
 		sEntities = new HashSet<Model>();
-		Log.v("Cache cleared.");
+		LogUtil.v("Cache cleared.");
 	}
 
 	public static synchronized void dispose() {
@@ -86,7 +86,7 @@ public static synchronized void dispose() {
 
 		sIsInitialized = false;
 
-		Log.v("ActiveAndroid disposed. Call initialize to use library.");
+		LogUtil.v("ActiveAndroid disposed. Call initialize to use library.");
 	}
 
 	// Database access
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 1941da1a..1e25b78a 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -31,7 +31,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 import com.activeandroid.util.NaturalOrderComparator;
 import com.activeandroid.util.ReflectionUtils;
 import com.activeandroid.util.SQLiteUtils;
@@ -63,7 +63,7 @@ public DatabaseHelper(Context context) {
 	public void onCreate(SQLiteDatabase db) {
 		if (SQLiteUtils.FOREIGN_KEYS_SUPPORTED) {
 			db.execSQL("PRAGMA foreign_keys=ON;");
-			Log.i("Foreign Keys supported. Enabling foreign key features.");
+			LogUtil.i("Foreign Keys supported. Enabling foreign key features.");
 		}
 
 		db.beginTransaction();
@@ -82,11 +82,11 @@ public void onCreate(SQLiteDatabase db) {
 	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		if (SQLiteUtils.FOREIGN_KEYS_SUPPORTED) {
 			db.execSQL("PRAGMA foreign_keys=ON;");
-			Log.i("Foreign Keys supported. Enabling foreign key features.");
+			LogUtil.i("Foreign Keys supported. Enabling foreign key features.");
 		}
 
 		if (!executeMigrations(db, oldVersion, newVersion)) {
-			Log.i("No migrations found. Calling onCreate.");
+			LogUtil.i("No migrations found. Calling onCreate.");
 			onCreate(db);
 		}
 	}
@@ -124,7 +124,7 @@ public void copyAttachedDatabase(Context context) {
 			inputStream.close();
 		}
 		catch (IOException e) {
-			Log.e("Failed to open file", e);
+			LogUtil.e("Failed to open file", e);
 		}
 	}
 
@@ -148,11 +148,11 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
 						executeSqlScript(db, file);
 						migrationExecuted = true;
 
-						Log.i(file + " executed succesfully.");
+						LogUtil.i(file + " executed succesfully.");
 					}
 				}
 				catch (NumberFormatException e) {
-					Log.w("Skipping invalidly named file: " + file, e);
+					LogUtil.w("Skipping invalidly named file: " + file, e);
 				}
 			}
 
@@ -160,7 +160,7 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
 			db.endTransaction();
 		}
 		catch (IOException e) {
-			Log.e("Failed to execute migrations.", e);
+			LogUtil.e("Failed to execute migrations.", e);
 		}
 
 		return migrationExecuted;
@@ -177,7 +177,7 @@ private void executeSqlScript(SQLiteDatabase db, String file) {
 			}
 		}
 		catch (IOException e) {
-			Log.e("Failed to execute " + file, e);
+			LogUtil.e("Failed to execute " + file, e);
 		}
 	}
 
diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 5bcec118..d7788361 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -27,7 +27,7 @@
 import com.activeandroid.query.Delete;
 import com.activeandroid.query.Select;
 import com.activeandroid.serializer.TypeSerializer;
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 import com.activeandroid.util.ReflectionUtils;
 
 @SuppressWarnings("unchecked")
@@ -86,7 +86,7 @@ public final void save() {
 							fieldType = value.getClass();
 							// check that the serializer returned what it promised
 							if (!fieldType.equals(typeSerializer.getSerializedType())) {
-								Log.w(String.format("TypeSerializer returned wrong type: expected a %s but got a %s",
+								LogUtil.w(String.format("TypeSerializer returned wrong type: expected a %s but got a %s",
 										typeSerializer.getSerializedType(), fieldType));
 							}
 						}
@@ -136,10 +136,10 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)){
 				}
 			}
 			catch (IllegalArgumentException e) {
-				Log.e(e.getClass().getName(), e);
+				LogUtil.e(e.getClass().getName(), e);
 			}
 			catch (IllegalAccessException e) {
-				Log.e(e.getClass().getName(), e);
+				LogUtil.e(e.getClass().getName(), e);
 			}
 		}
 
@@ -247,13 +247,13 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)){
 				}
 			}
 			catch (IllegalArgumentException e) {
-				Log.e(e.getMessage());
+				LogUtil.e(e.getMessage());
 			}
 			catch (IllegalAccessException e) {
-				Log.e(e.getMessage());
+				LogUtil.e(e.getMessage());
 			}
 			catch (SecurityException e) {
-				Log.e(e.getMessage());
+				LogUtil.e(e.getMessage());
 			}
 		}
 	}
diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java
index 07900736..1f700ac5 100644
--- a/src/com/activeandroid/ModelInfo.java
+++ b/src/com/activeandroid/ModelInfo.java
@@ -29,7 +29,7 @@
 import android.app.Application;
 
 import com.activeandroid.serializer.TypeSerializer;
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 import com.activeandroid.util.ReflectionUtils;
 
 import dalvik.system.DexFile;
@@ -54,10 +54,10 @@ public ModelInfo(Application application) {
 			scanForModel(application);
 		}
 		catch (IOException e) {
-			Log.e("Couln't open source path.", e);
+			LogUtil.e("Couln't open source path.", e);
 		}
 
-		Log.i("ModelInfo loaded.");
+		LogUtil.i("ModelInfo loaded.");
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -160,13 +160,13 @@ else if (ReflectionUtils.isTypeSerializer(discoveredClass)) {
 				}
 			}
 			catch (ClassNotFoundException e) {
-				Log.e("Couldn't create class.", e);
+				LogUtil.e("Couldn't create class.", e);
 			}
 			catch (InstantiationException e) {
-				Log.e("Couldn't instantiate TypeSerializer.", e);
+				LogUtil.e("Couldn't instantiate TypeSerializer.", e);
 			}
 			catch (IllegalAccessException e) {
-				Log.e("IllegalAccessException", e);
+				LogUtil.e("IllegalAccessException", e);
 			}
 		}
 	}
diff --git a/src/com/activeandroid/TableInfo.java b/src/com/activeandroid/TableInfo.java
index 225a838d..d3b09c59 100644
--- a/src/com/activeandroid/TableInfo.java
+++ b/src/com/activeandroid/TableInfo.java
@@ -26,7 +26,7 @@
 
 import com.activeandroid.annotation.Column;
 import com.activeandroid.annotation.Table;
-import com.activeandroid.util.Log;
+import com.activeandroid.util.LogUtil;
 
 public final class TableInfo {
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -94,7 +94,7 @@ private Field getIdField(Class<?> type) {
 				return type.getDeclaredField("mId");
 			}
 			catch (NoSuchFieldException e) {
-				Log.e("Impossible!", e);
+				LogUtil.e("Impossible!", e);
 			}
 		}
 		else if (type.getSuperclass() != null) {
diff --git a/src/com/activeandroid/serializer/CalendarSerializer.java b/src/com/activeandroid/serializer/CalendarSerializer.java
index 55509bd0..b473fdba 100644
--- a/src/com/activeandroid/serializer/CalendarSerializer.java
+++ b/src/com/activeandroid/serializer/CalendarSerializer.java
@@ -24,7 +24,7 @@
 	}
 
 	public Class<?> getSerializedType() {
-		return long.class;
+		return Long.class;
 	}
 
 	public Long serialize(Object data) {
diff --git a/src/com/activeandroid/serializer/SqlDateSerializer.java b/src/com/activeandroid/serializer/SqlDateSerializer.java
index 530d1249..b30152fd 100644
--- a/src/com/activeandroid/serializer/SqlDateSerializer.java
+++ b/src/com/activeandroid/serializer/SqlDateSerializer.java
@@ -24,7 +24,7 @@
 	}
 
 	public Class<?> getSerializedType() {
-		return long.class;
+		return Long.class;
 	}
 
 	public Long serialize(Object data) {
diff --git a/src/com/activeandroid/serializer/UtilDateSerializer.java b/src/com/activeandroid/serializer/UtilDateSerializer.java
index a82c7ef1..cf0db488 100644
--- a/src/com/activeandroid/serializer/UtilDateSerializer.java
+++ b/src/com/activeandroid/serializer/UtilDateSerializer.java
@@ -24,7 +24,7 @@
 	}
 
 	public Class<?> getSerializedType() {
-		return long.class;
+		return Long.class;
 	}
 
 	public Long serialize(Object data) {
diff --git a/src/com/activeandroid/util/Log.java b/src/com/activeandroid/util/LogUtil.java
similarity index 94%
rename from src/com/activeandroid/util/Log.java
rename to src/com/activeandroid/util/LogUtil.java
index 13a23bf8..5fb91a98 100644
--- a/src/com/activeandroid/util/Log.java
+++ b/src/com/activeandroid/util/LogUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-public final class Log {
+public final class LogUtil {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE MEMBERS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -28,7 +28,7 @@
 	// CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	private Log() {
+	private LogUtil() {
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
diff --git a/src/com/activeandroid/util/ReflectionUtils.java b/src/com/activeandroid/util/ReflectionUtils.java
index 2728ddd3..3f8b773c 100644
--- a/src/com/activeandroid/util/ReflectionUtils.java
+++ b/src/com/activeandroid/util/ReflectionUtils.java
@@ -49,7 +49,7 @@ public static boolean isTypeSerializer(Class<?> type) {
 			}
 		}
 		catch (Exception e) {
-			Log.w("Couldn't find meta-data: " + name);
+			LogUtil.w("Couldn't find meta-data: " + name);
 		}
 
 		return null;
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 8ab6348a..547d21e1 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -168,7 +168,7 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 			}
 		}
 		else {
-			Log.e("No type mapping for: " + type.toString());
+			LogUtil.e("No type mapping for: " + type.toString());
 		}
 
 		return definition;
@@ -193,7 +193,7 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 
 		}
 		catch (Exception e) {
-			Log.e("Failed to process cursor.", e);
+			LogUtil.e("Failed to process cursor.", e);
 		}
 
 		return entities;
