diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index 8a7170b7..76ab218c 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -24,6 +24,7 @@
 
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.Log;
+import com.activeandroid.util.SQLiteUtils;
 
 public final class Cache {
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -114,8 +115,8 @@ public static Context getContext() {
 
 	// Entity cache
 
-	public static String getIdentifier(Class<? extends Model> type, String id) {
-		return getTableName(type) + "@" + id;
+	public static String getIdentifier(Class<? extends Model> type, String entityId) {
+		return getTableName(type) + "@" + entityId;
 	}
 
 	public static String getIdentifier(Model entity) {
@@ -126,8 +127,8 @@ public static synchronized void addEntity(Model entity) {
 		sEntities.put(getIdentifier(entity), entity);
 	}
 
-	public static synchronized Model getEntity(Class<? extends Model> type, String id) {
-		return sEntities.get(getIdentifier(type, id));
+	public static synchronized Model getEntity(Class<? extends Model> type, String entityId) {
+		return sEntities.get(getIdentifier(type, entityId));
 	}
 
 	public static synchronized void removeEntity(Model entity) {
diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index f68c7363..862c3cf7 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -55,7 +55,8 @@ public Model() {
 	//////////////////////////////////////////////////////////////////////////////////////
 
     /**
-     * Use This method to return the values of your primary key
+     * Use This method to return the values of your primary key, must be separated by comma delimiter in order of declaration
+     * Also each object thats instance of {@link java.lang.Number} must be DataBaseUtils.sqlEscapeString(object.toString)
      * @return
      */
 	public abstract String getId();
@@ -253,6 +254,17 @@ else if (fieldType.equals(String.class)) {
 				else if (fieldType.equals(Byte[].class) || fieldType.equals(byte[].class)) {
 					value = cursor.getBlob(columnIndex);
 				}
+				else if (ReflectionUtils.isModel(fieldType)) {
+					final String entityId = cursor.getString(columnIndex);
+					final Class<? extends Model> entityType = (Class<? extends Model>) fieldType;
+
+					Model entity = Cache.getEntity(entityType, entityId);
+					if (entity == null) {
+						entity = new Select().from(entityType).where(SQLiteUtils.getWhereFromEntityId(entityType, entityId)).executeSingle();
+					}
+
+					value = entity;
+				}
 				else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 					@SuppressWarnings("rawtypes")
 					final Class<? extends Enum> enumType = (Class<? extends Enum>) fieldType;
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 138da339..a96b39ca 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -318,4 +318,13 @@ public static String getWhereStatement(Model model, TableInfo tableInfo){
         return sql;
     }
 
+    public static String getWhereFromEntityId(Class<? extends Model> model, String entityId){
+        String[] primaries = entityId.split(",");
+        String whereString = getWhereStatement(model, Cache.getTableInfo(model));
+        for(String primary: primaries){
+            whereString = whereString.replaceFirst("\\?", primary);
+        }
+        return whereString;
+    }
+
 }
