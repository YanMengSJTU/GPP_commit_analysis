diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index cc3bebec..c4b14d2b 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -157,6 +157,7 @@ private void executeCreate(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
 			for (TableInfo tableInfo : Cache.getTableInfos()) {
+				if(tableInfo.isView()) continue;
 				db.execSQL(SQLiteUtils.createTableDefinition(tableInfo));
 			}
 			db.setTransactionSuccessful();
diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 276b10c9..7b9fb087 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -63,11 +63,11 @@ public Model() {
 	// PUBLIC METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	public final Long getId() {
+	public Long getId() {
 		return mId;
 	}
 
-	public final void delete() {
+	public void delete() {
 		Cache.openDatabase().delete(mTableInfo.getTableName(), idName+"=?", new String[] { getId().toString() });
 		Cache.removeEntity(this);
 
@@ -75,7 +75,7 @@ public final void delete() {
 				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
 	}
 
-	public final Long save() {
+	public Long save() {
 		final SQLiteDatabase db = Cache.openDatabase();
 		
 		ContentValues values = new ContentValues();
diff --git a/src/com/activeandroid/TableInfo.java b/src/com/activeandroid/TableInfo.java
index e55b63ea..846d498a 100644
--- a/src/com/activeandroid/TableInfo.java
+++ b/src/com/activeandroid/TableInfo.java
@@ -39,6 +39,7 @@
 	private Class<? extends Model> mType;
 	private String mTableName;
 	private String mIdName = Table.DEFAULT_ID_NAME;
+    private boolean mView;
 
 	private Map<Field, String> mColumnNames = new LinkedHashMap<Field, String>();
 
@@ -54,9 +55,11 @@ public TableInfo(Class<? extends Model> type) {
         if (tableAnnotation != null) {
 			mTableName = tableAnnotation.name();
 			mIdName = tableAnnotation.id();
+            mView = tableAnnotation.view();
 		}
 		else {
 			mTableName = type.getSimpleName();
+            mView = View.class.isAssignableFrom(type);
         }
 
         // Manually add the id column since it is not declared like the other columns.
@@ -95,7 +98,11 @@ public String getIdName() {
 		return mIdName;
 	}
 
-	public Collection<Field> getFields() {
+    public boolean isView() {
+        return mView;
+    }
+
+    public Collection<Field> getFields() {
 		return mColumnNames.keySet();
 	}
 
diff --git a/src/com/activeandroid/View.java b/src/com/activeandroid/View.java
new file mode 100644
index 00000000..b91267cb
--- /dev/null
+++ b/src/com/activeandroid/View.java
@@ -0,0 +1,30 @@
+package com.activeandroid;
+
+import com.activeandroid.util.SQLiteUtils;
+
+import java.util.List;
+
+public abstract class View extends Model {
+    public abstract String getQuery();
+
+    @Override
+    public void delete() {
+        throw new RuntimeException("Cannot delete view row");
+    }
+
+    @Override
+    public Long save() {
+        throw new RuntimeException("Cannot save view row");
+    }
+
+    @SuppressWarnings("UnusedDeclaration")
+    public static <E extends View> List<E> getRows(Class<E> viewClass, String... params) {
+        String query;
+        try {
+            query = viewClass.newInstance().getQuery();
+            return SQLiteUtils.rawQuery(viewClass, query, params);
+        } catch (Exception e) {
+            throw new RuntimeException("Cannot create view row.", e);
+        }
+    }
+}
diff --git a/src/com/activeandroid/annotation/Table.java b/src/com/activeandroid/annotation/Table.java
index 541dfbe9..efefdc07 100644
--- a/src/com/activeandroid/annotation/Table.java
+++ b/src/com/activeandroid/annotation/Table.java
@@ -28,4 +28,5 @@
 	public static final String DEFAULT_ID_NAME = "Id";
 	public String name();
 	public String id() default DEFAULT_ID_NAME;
+	boolean view() default false;
 }
