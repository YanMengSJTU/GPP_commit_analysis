diff --git a/src/main/java/com/activeandroid/manager/DBManagerRuntime.java b/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
index 24cab250..d28ca87a 100644
--- a/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
+++ b/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
@@ -30,8 +30,8 @@ public static void quit() {
         for (SingleDBManager manager : dbManagers) {
             if (manager.hasOwnQueue()) {
                 manager.getQueue().quit();
-                manager.disposeQueue();
             }
+            manager.disposeQueue();
         }
         DBBatchSaveQueue.getSharedSaveQueue().quit();
         DBBatchSaveQueue.disposeSharedQueue();
diff --git a/src/main/java/com/activeandroid/manager/SingleDBManager.java b/src/main/java/com/activeandroid/manager/SingleDBManager.java
index 9a2d8ad5..af629e26 100644
--- a/src/main/java/com/activeandroid/manager/SingleDBManager.java
+++ b/src/main/java/com/activeandroid/manager/SingleDBManager.java
@@ -49,8 +49,8 @@ public SingleDBManager(String name, boolean createNewQueue) {
         mName = name;
         hasOwnQueue = createNewQueue;
         checkThread();
-        DBManagerRuntime.addManager(this);
-        createNewQueue();
+        DBManagerRuntime.getManagers().add(this);
+        checkQueue();
     }
 
     /**
@@ -67,34 +67,14 @@ public static SingleDBManager getSharedInstance() {
     }
 
     void checkQueue() {
-        final DBRequestQueue dbRequestQueue = getQueue();
-        if (!dbRequestQueue.isAlive()) {
-            dbRequestQueue.start();
+        if (!getQueue().isAlive()) {
+            getQueue().start();
         }
-        final DBBatchSaveQueue saveQueue = getSaveQueue();
-        if (!saveQueue.isAlive()) {
-            saveQueue.start();
+        if (!getSaveQueue().isAlive()) {
+            getSaveQueue().start();
         }
     }
 
-    void restart() {
-        final DBRequestQueue dbRequestQueue = getQueue();
-        if (dbRequestQueue.isAlive() && !dbRequestQueue.isInterrupted()) {
-            dbRequestQueue.quit();
-        }
-        createNewQueue();
-        mQueue.start();
-    }
-
-    private DBRequestQueue createNewQueue() {
-        if (hasOwnQueue) {
-            mQueue = new DBRequestQueue(mName);
-        } else {
-            mQueue = SingleDBManager.getSharedInstance().createNewQueue();
-        }
-        return mQueue;
-    }
-
     public boolean hasOwnQueue() {
         return hasOwnQueue;
     }
@@ -108,7 +88,11 @@ void disposeQueue() {
 
     public DBRequestQueue getQueue() {
         if (mQueue == null) {
-            createNewQueue();
+            if (hasOwnQueue) {
+                mQueue = new DBRequestQueue(mName);
+            } else {
+                mQueue = SingleDBManager.getSharedInstance().getQueue();
+            }
         }
         return mQueue;
     }
