diff --git a/tests/src/com/activeandroid/test/CacheTest.java b/tests/src/com/activeandroid/test/CacheTest.java
index 35557b5c..5d6139fc 100644
--- a/tests/src/com/activeandroid/test/CacheTest.java
+++ b/tests/src/com/activeandroid/test/CacheTest.java
@@ -1,5 +1,7 @@
 package com.activeandroid.test;
 
+import android.test.AndroidTestCase;
+
 import com.activeandroid.ActiveAndroid;
 import com.activeandroid.Cache;
 import com.activeandroid.Configuration;
@@ -7,8 +9,6 @@
 import com.activeandroid.TableInfo;
 import com.activeandroid.annotation.Table;
 
-import android.test.AndroidTestCase;
-
 import java.util.Collection;
 
 public class CacheTest extends AndroidTestCase {
diff --git a/tests/src/com/activeandroid/test/ModelTest.java b/tests/src/com/activeandroid/test/ModelTest.java
index f8703c15..2fe89373 100644
--- a/tests/src/com/activeandroid/test/ModelTest.java
+++ b/tests/src/com/activeandroid/test/ModelTest.java
@@ -18,10 +18,9 @@
 
 import com.activeandroid.Model;
 import com.activeandroid.annotation.Table;
+
 import java.util.HashSet;
 import java.util.Set;
-import static junit.framework.Assert.assertEquals;
-import static junit.framework.Assert.assertFalse;
 
 /**
  * Simple test now covering equals and hashcode methods.
@@ -58,7 +57,7 @@ public void testEqualsOnNew() {
 
 		assertFalse(model1.equals(model2));
 		assertFalse(model2.equals(model1));
-		assertTrue(model1.equals(model1));//equal only to itself
+		assertTrue(model1.equals(model1));  //equal only to itself
 	}
 
 	/**
@@ -73,10 +72,15 @@ public void testEqualsDifferentRows() {
 		model2.save();
 		model3 = Model.load(MockModel.class, model1.getId());
 
+        // Not equal to each other.
 		assertFalse(model1.equals(model2));
 		assertFalse(model2.equals(model1));
+
+        // Equal to each other when loaded.
 		assertTrue(model1.equals(model3));
 		assertTrue(model1.equals(model3));
+
+        // Loaded model is not equal to a different model.
 		assertFalse(model3.equals(model2));
 		assertFalse(model2.equals(model3));
 	}
