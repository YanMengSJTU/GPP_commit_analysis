diff --git a/src/main/java/com/activeandroid/manager/DBManager.java b/src/main/java/com/activeandroid/manager/DBManager.java
index 5cb97db9..1c525112 100644
--- a/src/main/java/com/activeandroid/manager/DBManager.java
+++ b/src/main/java/com/activeandroid/manager/DBManager.java
@@ -21,12 +21,26 @@
 
     protected Class<OBJECT_CLASS> mObjectClass;
 
+
+    /**
+     * Constructs a new instance while keeping an instance of the class for its objects.
+     * <br>
+     * Shares the same queue with the {@link com.activeandroid.manager.SingleDBManager}
+     * @param mObjectClass
+     */
+    public DBManager(Class<OBJECT_CLASS> mObjectClass) {
+        super(mObjectClass.getSimpleName(), false);
+        this.mObjectClass = mObjectClass;
+    }
+
     /**
      * Constructs a new instance while keeping an instance of the class for its objects
      * @param classClass
+     * @param hasOwnQueue - set this flag to true to create its own request queue
+     *                    (useful for many DB operations, however each may use up a chunk  of memory)
      */
-    public DBManager(Class<OBJECT_CLASS> classClass){
-        super(classClass.getSimpleName());
+    public DBManager(Class<OBJECT_CLASS> classClass, boolean hasOwnQueue){
+        super(classClass.getSimpleName(), hasOwnQueue);
         mObjectClass = classClass;
     }
 
diff --git a/src/main/java/com/activeandroid/manager/DBManagerRuntime.java b/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
index 6213e8a5..c71406da 100644
--- a/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
+++ b/src/main/java/com/activeandroid/manager/DBManagerRuntime.java
@@ -27,8 +27,10 @@
      */
     public static void quit(){
         for(SingleDBManager manager: getManagers()){
-            manager.getQueue().quit();
-            manager.disposeQueue();
+            if(manager.hasOwnQueue()) {
+                manager.getQueue().quit();
+                manager.disposeQueue();
+            }
         }
         DBBatchSaveQueue.getSharedSaveQueue().quit();
         DBBatchSaveQueue.disposeSharedQueue();
diff --git a/src/main/java/com/activeandroid/manager/SingleDBManager.java b/src/main/java/com/activeandroid/manager/SingleDBManager.java
index a5f293b0..790a8c0a 100644
--- a/src/main/java/com/activeandroid/manager/SingleDBManager.java
+++ b/src/main/java/com/activeandroid/manager/SingleDBManager.java
@@ -40,12 +40,15 @@
 
     private String mName;
 
+    private  final boolean hasOwnQueue;
+
     /**
      * Creates the SingleDBManager while starting its own request queue
      * @param name
      */
-    public SingleDBManager(String name){
+    public SingleDBManager(String name, boolean createNewQueue){
         mName = name;
+        hasOwnQueue = createNewQueue;
         checkThread();
         DBManagerRuntime.getManagers().add(this);
         checkQueue();
@@ -58,7 +61,7 @@ public SingleDBManager(String name){
      */
     public static SingleDBManager getSharedInstance(){
         if(manager==null){
-           manager = new SingleDBManager("SingleDBManager");
+           manager = new SingleDBManager("SingleDBManager", true);
         }
         return manager;
     }
@@ -72,6 +75,10 @@ void checkQueue() {
         }
     }
 
+    public boolean hasOwnQueue() {
+        return hasOwnQueue;
+    }
+
     /**
      * Destroys the running queue
      */
@@ -81,7 +88,11 @@ void disposeQueue() {
 
     public DBRequestQueue getQueue(){
         if(mQueue==null){
-            mQueue = new DBRequestQueue(mName);
+            if(hasOwnQueue) {
+                mQueue = new DBRequestQueue(mName);
+            } else{
+                mQueue = SingleDBManager.getSharedInstance().mQueue;
+            }
         }
         return mQueue;
     }
