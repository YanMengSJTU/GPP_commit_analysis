diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 14465cf5..2d618e97 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -38,7 +38,7 @@
 	// PRIVATE MEMBERS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	@Column(name = "_id")
+	@Column(name = "id")
 	private Long mId = null;
 
 	private TableInfo mTableInfo;
@@ -68,14 +68,14 @@ public final void setId(Long id) {
     }
 
 	public final void delete() {
-		Cache.openDatabase().delete(mTableInfo.getTableName(), "_id=?", new String[] { getId().toString() });
+		Cache.openDatabase().delete(mTableInfo.getTableName(), "id=?", new String[] { getId().toString() });
 		Cache.removeEntity(this);
 
 		Cache.getContext().getContentResolver()
 				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
 	}
 
-	public final void save() {
+	public void save() {
 		final SQLiteDatabase db = Cache.openDatabase();
 		final ContentValues values = new ContentValues();
 
@@ -165,7 +165,7 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
                 db.insertOrThrow(mTableInfo.getTableName(), null, values);
         }
         catch(SQLiteConstraintException e) {
-            db.update(mTableInfo.getTableName(), values, "_id="+mId, null);
+            db.update(mTableInfo.getTableName(), values, "id="+mId, null);
         }
 
 		Cache.getContext().getContentResolver()
@@ -175,11 +175,11 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 	// Convenience methods
 
 	public static void delete(Class<? extends Model> type, long id) {
-		new Delete().from(type).where("_id=?", id).execute();
+		new Delete().from(type).where("id=?", id).execute();
 	}
 
 	public static <T extends Model> T load(Class<T> type, long id) {
-		return new Select().from(type).where("_id=?", id).executeSingle();
+		return new Select().from(type).where("id=?", id).executeSingle();
 	}
 
 	// Model population
@@ -246,7 +246,7 @@ else if (ReflectionUtils.isModel(fieldType)) {
 
 					Model entity = Cache.getEntity(entityType, entityId);
 					if (entity == null) {
-						entity = new Select().from(entityType).where("_id=?", entityId).executeSingle();
+						entity = new Select().from(entityType).where("id=?", entityId).executeSingle();
 					}
 
 					value = entity;
diff --git a/src/com/activeandroid/TableInfo.java b/src/com/activeandroid/TableInfo.java
index 42a3457e..20c52be6 100644
--- a/src/com/activeandroid/TableInfo.java
+++ b/src/com/activeandroid/TableInfo.java
@@ -96,7 +96,7 @@ public boolean isRestrictForManualUpdate(Field field){
 	private Field getIdField(Class<?> type) {
 		if (type.equals(Model.class)) {
 			try {
-				return type.getDeclaredField("_id");
+				return type.getDeclaredField("mId");
 			}
 			catch (NoSuchFieldException e) {
 				Log.e("Impossible!", e);
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 005d50fd..a6a374a6 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -45,7 +45,8 @@
 	// PUBLIC CONSTANTS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	public static final boolean FOREIGN_KEYS_SUPPORTED = Build.VERSION.SDK_INT >= Build.VERSION_CODES.FROYO;
+//	public static final boolean FOREIGN_KEYS_SUPPORTED = Build.VERSION.SDK_INT >= Build.VERSION_CODES.FROYO;
+    public static final boolean FOREIGN_KEYS_SUPPORTED = false;
 
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE CONTSANTS
@@ -158,7 +159,7 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 				definition.append(")");
 			}
 
-			if (name.equals("_id")) {
+			if (name.equals("id")) {
 				definition.append(" PRIMARY KEY ");
 			}
 
@@ -179,7 +180,7 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 			if (FOREIGN_KEYS_SUPPORTED && ReflectionUtils.isModel(type)) {
 				definition.append(" REFERENCES ");
 				definition.append(Cache.getTableInfo((Class<? extends Model>) type).getTableName());
-				definition.append("(_id)");
+				definition.append("(id)");
 				definition.append(" ON DELETE ");
 				definition.append(column.onDelete().toString().replace("_", " "));
 				definition.append(" ON UPDATE ");
@@ -202,7 +203,7 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 
 			if (cursor.moveToFirst()) {
 				do {
-					Model entity = Cache.getEntity(type, cursor.getLong(cursor.getColumnIndex("_id")));
+					Model entity = Cache.getEntity(type, cursor.getLong(cursor.getColumnIndex("id")));
 					if (entity == null) {
 						entity = (T) entityConstructor.newInstance();
 					}
