diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 8c0fb64a..13372aef 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index d0c38cab..122a0dca 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,4 +1,4 @@
-#Thu Jan 21 00:12:11 CST 2016
+#Mon Dec 28 10:00:20 PST 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
diff --git a/gradlew b/gradlew
index 91a7e269..9d82f789 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Cache.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Cache.java
index c8894104..3a5dd182 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Cache.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Cache.java
@@ -39,9 +39,9 @@
 	private static Context sContext;
 
 	private static ModelInfo sModelInfo;
-	private static com.proactiveandroid.DatabaseHelper sDatabaseHelper;
+	private static DatabaseHelper sDatabaseHelper;
 
-	private static LruCache<String, com.proactiveandroid.Model> sEntities;
+	private static LruCache<String, Model> sEntities;
 
 	private static boolean sIsInitialized = false;
 
@@ -64,13 +64,13 @@ public static synchronized void initialize(Configuration configuration) {
 
 		sContext = configuration.getContext();
 		sModelInfo = new ModelInfo(configuration);
-		sDatabaseHelper = new com.proactiveandroid.DatabaseHelper(configuration);
+		sDatabaseHelper = new DatabaseHelper(configuration);
 
 		// TODO: It would be nice to override sizeOf here and calculate the memory
 		// actually used, however at this point it seems like the reflection
 		// required would be too costly to be of any benefit. We'll just set a max
 		// object size instead.
-		sEntities = new LruCache<String, com.proactiveandroid.Model>(configuration.getCacheSize());
+		sEntities = new LruCache<String, Model>(configuration.getCacheSize());
 
 		openDatabase();
 
@@ -118,33 +118,33 @@ public static Context getContext() {
 
 	// Entity cache
 
-	public static String getIdentifier(Class<? extends com.proactiveandroid.Model> type, Long id) {
+	public static String getIdentifier(Class<? extends Model> type, Long id) {
 		return getTableName(type) + "@" + id;
 	}
 
-	public static String getIdentifier(com.proactiveandroid.Model entity) {
+	public static String getIdentifier(Model entity) {
 		return getIdentifier(entity.getClass(), entity.getId());
 	}
 
-	public static synchronized void addEntity(com.proactiveandroid.Model entity) {
+	public static synchronized void addEntity(Model entity) {
 		sEntities.put(getIdentifier(entity), entity);
 	}
 
-	public static synchronized com.proactiveandroid.Model getEntity(Class<? extends com.proactiveandroid.Model> type, long id) {
+	public static synchronized Model getEntity(Class<? extends Model> type, long id) {
 		return sEntities.get(getIdentifier(type, id));
 	}
 
-	public static synchronized void removeEntity(com.proactiveandroid.Model entity) {
+	public static synchronized void removeEntity(Model entity) {
 		sEntities.remove(getIdentifier(entity));
 	}
 
 	// Model cache
 
-	public static synchronized Collection<com.proactiveandroid.TableInfo> getTableInfos() {
+	public static synchronized Collection<TableInfo> getTableInfos() {
 		return sModelInfo.getTableInfos();
 	}
 
-	public static synchronized com.proactiveandroid.TableInfo getTableInfo(Class<? extends com.proactiveandroid.Model> type) {
+	public static synchronized TableInfo getTableInfo(Class<? extends Model> type) {
 		return sModelInfo.getTableInfo(type);
 	}
 
@@ -152,7 +152,7 @@ public static synchronized TypeSerializer getParserForType(Class<?> type) {
 		return sModelInfo.getTypeSerializer(type);
 	}
 
-	public static synchronized String getTableName(Class<? extends com.proactiveandroid.Model> type) {
+	public static synchronized String getTableName(Class<? extends Model> type) {
 		return sModelInfo.getTableInfo(type).getTableName();
 	}
 }
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Configuration.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Configuration.java
index def32afd..bdc2fb7e 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Configuration.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Configuration.java
@@ -39,7 +39,7 @@
 	private String mDatabaseName;
 	private int mDatabaseVersion;
 	private String mSqlParser;
-	private List<Class<? extends com.proactiveandroid.Model>> mModelClasses;
+	private List<Class<? extends Model>> mModelClasses;
 	private List<Class<? extends TypeSerializer>> mTypeSerializers;
 	private int mCacheSize;
 
@@ -71,7 +71,7 @@ public String getSqlParser() {
 	    return mSqlParser;
 	}
 
-	public List<Class<? extends com.proactiveandroid.Model>> getModelClasses() {
+	public List<Class<? extends Model>> getModelClasses() {
 		return mModelClasses;
 	}
 
@@ -116,7 +116,7 @@ public boolean isValid() {
 		private String mDatabaseName;
 		private Integer mDatabaseVersion;
 		private String mSqlParser;
-		private List<Class<? extends com.proactiveandroid.Model>> mModelClasses;
+		private List<Class<? extends Model>> mModelClasses;
 		private List<Class<? extends TypeSerializer>> mTypeSerializers;
 
 		//////////////////////////////////////////////////////////////////////////////////////
@@ -152,25 +152,25 @@ public Builder setSqlParser(String sqlParser) {
 		    return this;
 		}
 
-		public Builder addModelClass(Class<? extends com.proactiveandroid.Model> modelClass) {
+		public Builder addModelClass(Class<? extends Model> modelClass) {
 			if (mModelClasses == null) {
-				mModelClasses = new ArrayList<Class<? extends com.proactiveandroid.Model>>();
+				mModelClasses = new ArrayList<Class<? extends Model>>();
 			}
 
 			mModelClasses.add(modelClass);
 			return this;
 		}
 
-		public Builder addModelClasses(Class<? extends com.proactiveandroid.Model>... modelClasses) {
+		public Builder addModelClasses(Class<? extends Model>... modelClasses) {
 			if (mModelClasses == null) {
-				mModelClasses = new ArrayList<Class<? extends com.proactiveandroid.Model>>();
+				mModelClasses = new ArrayList<Class<? extends Model>>();
 			}
 
 			mModelClasses.addAll(Arrays.asList(modelClasses));
 			return this;
 		}
 
-		public Builder setModelClasses(Class<? extends com.proactiveandroid.Model>... modelClasses) {
+		public Builder setModelClasses(Class<? extends Model>... modelClasses) {
 			mModelClasses = Arrays.asList(modelClasses);
 			return this;
 		}
@@ -278,8 +278,8 @@ private String getMetaDataSqlParserOrDefault() {
 		    return mode;
 		}
 
-		private List<Class<? extends com.proactiveandroid.Model>> loadModelList(String[] models) {
-			final List<Class<? extends com.proactiveandroid.Model>> modelClasses = new ArrayList<Class<? extends com.proactiveandroid.Model>>();
+		private List<Class<? extends Model>> loadModelList(String[] models) {
+			final List<Class<? extends Model>> modelClasses = new ArrayList<Class<? extends Model>>();
 			final ClassLoader classLoader = mContext.getClass().getClassLoader();
 			for (String model : models) {
 				try {
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/DatabaseHelper.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/DatabaseHelper.java
index 0eed46ff..92cb79d8 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/DatabaseHelper.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/DatabaseHelper.java
@@ -135,7 +135,7 @@ private void executePragmas(SQLiteDatabase db) {
 	private void executeCreateIndex(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
-			for (com.proactiveandroid.TableInfo tableInfo : Cache.getTableInfos()) {
+			for (TableInfo tableInfo : Cache.getTableInfos()) {
 				String[] definitions = SQLiteUtils.createIndexDefinition(tableInfo);
 
 				for (String definition : definitions) {
@@ -152,7 +152,7 @@ private void executeCreateIndex(SQLiteDatabase db) {
 	private void executeCreate(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
-			for (com.proactiveandroid.TableInfo tableInfo : Cache.getTableInfos()) {
+			for (TableInfo tableInfo : Cache.getTableInfos()) {
 				db.execSQL(SQLiteUtils.createTableDefinition(tableInfo));
 			}
 			db.setTransactionSuccessful();
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Model.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Model.java
index 61e58942..c97ba2c0 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Model.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/Model.java
@@ -44,7 +44,7 @@
 
 	private Long mId = null;
 
-	private final com.proactiveandroid.TableInfo mTableInfo;
+	private final TableInfo mTableInfo;
 	private final String idName;
 	//////////////////////////////////////////////////////////////////////////////////////
 	// CONSTRUCTORS
@@ -166,12 +166,12 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 	// Convenience methods
 
 	public static void delete(Class<? extends Model> type, long id) {
-		com.proactiveandroid.TableInfo tableInfo = Cache.getTableInfo(type);
+		TableInfo tableInfo = Cache.getTableInfo(type);
 		new Delete().from(type).where(tableInfo.getIdName()+"=?", id).execute();
 	}
 
 	public static <T extends Model> T load(Class<T> type, long id) {
-		com.proactiveandroid.TableInfo tableInfo = Cache.getTableInfo(type);
+		TableInfo tableInfo = Cache.getTableInfo(type);
 		return (T) new Select().from(type).where(tableInfo.getIdName()+"=?", id).executeSingle();
 	}
 
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/ModelInfo.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/ModelInfo.java
index b17fd859..05b50825 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/ModelInfo.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/ModelInfo.java
@@ -44,7 +44,7 @@
 	// PRIVATE METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	private Map<Class<? extends Model>, com.proactiveandroid.TableInfo> mTableInfos = new HashMap<Class<? extends Model>, com.proactiveandroid.TableInfo>();
+	private Map<Class<? extends Model>, TableInfo> mTableInfos = new HashMap<Class<? extends Model>, TableInfo>();
 	private Map<Class<?>, TypeSerializer> mTypeSerializers = new HashMap<Class<?>, TypeSerializer>() {
 		{
 			put(Calendar.class, new CalendarSerializer());
@@ -75,11 +75,11 @@ public ModelInfo(Configuration configuration) {
 	// PUBLIC METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	public Collection<com.proactiveandroid.TableInfo> getTableInfos() {
+	public Collection<TableInfo> getTableInfos() {
 		return mTableInfos.values();
 	}
 
-	public com.proactiveandroid.TableInfo getTableInfo(Class<? extends Model> type) {
+	public TableInfo getTableInfo(Class<? extends Model> type) {
 		return mTableInfos.get(type);
 	}
 
@@ -99,7 +99,7 @@ private boolean loadModelFromMetaData(Configuration configuration) {
 		final List<Class<? extends Model>> models = configuration.getModelClasses();
 		if (models != null) {
 			for (Class<? extends Model> model : models) {
-				mTableInfos.put(model, new com.proactiveandroid.TableInfo(model));
+				mTableInfos.put(model, new TableInfo(model));
 			}
 		}
 
@@ -189,7 +189,7 @@ private void scanForModelClasses(File path, String packageName, ClassLoader clas
 				if (ReflectionUtils.isModel(discoveredClass)) {
 					@SuppressWarnings("unchecked")
 					Class<? extends Model> modelClass = (Class<? extends Model>) discoveredClass;
-					mTableInfos.put(modelClass, new com.proactiveandroid.TableInfo(modelClass));
+					mTableInfos.put(modelClass, new TableInfo(modelClass));
 				}
 				else if (ReflectionUtils.isTypeSerializer(discoveredClass)) {
 					TypeSerializer instance = (TypeSerializer) discoveredClass.newInstance();
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/content/ContentProvider.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/content/ContentProvider.java
index 5efefdcb..d1fafe87 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/content/ContentProvider.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/content/ContentProvider.java
@@ -1,20 +1,20 @@
 package com.SearingMedia.proactiveandroid.content;
 
-import java.util.ArrayList;
-import java.util.List;
-
 import android.content.ContentValues;
 import android.content.UriMatcher;
 import android.database.Cursor;
 import android.net.Uri;
 import android.util.SparseArray;
 
-import com.SearingMedia.proactiveandroid.ProactiveAndroid;
 import com.SearingMedia.proactiveandroid.Cache;
 import com.SearingMedia.proactiveandroid.Configuration;
 import com.SearingMedia.proactiveandroid.Model;
+import com.SearingMedia.proactiveandroid.ProactiveAndroid;
 import com.SearingMedia.proactiveandroid.TableInfo;
 
+import java.util.ArrayList;
+import java.util.List;
+
 public class ContentProvider extends android.content.ContentProvider {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE CONSTANTS
@@ -39,7 +39,7 @@ public boolean onCreate() {
 		ProactiveAndroid.initialize(getConfiguration());
 		sAuthority = getAuthority();
 
-		final List<TableInfo> tableInfos = new ArrayList<TableInfo>(Cache.getTableInfos());
+		final List<TableInfo> tableInfos = new ArrayList<TableInfo>();
 		final int size = tableInfos.size();
 		for (int i = 0; i < size; i++) {
 			final TableInfo tableInfo = tableInfos.get(i);
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Delete.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Delete.java
index 285d85c3..5d504579 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Delete.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Delete.java
@@ -18,12 +18,12 @@
 
 import com.SearingMedia.proactiveandroid.Model;
 
-public final class Delete implements com.proactiveandroid.query.Sqlable {
+public final class Delete implements Sqlable {
 	public Delete() {
 	}
 
-	public com.proactiveandroid.query.From from(Class<? extends Model> table) {
-		return new com.proactiveandroid.query.From(table, this);
+	public From from(Class<? extends Model> table) {
+		return new From(table, this);
 	}
 
 	@Override
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/From.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/From.java
index 3dd94cf2..5fdbda20 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/From.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/From.java
@@ -28,8 +28,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public final class From implements com.proactiveandroid.query.Sqlable {
-	private com.proactiveandroid.query.Sqlable mQueryBase;
+public final class From implements Sqlable {
+	private Sqlable mQueryBase;
 
 	private Class<? extends Model> mType;
 	private String mAlias;
@@ -43,7 +43,7 @@
 
 	private List<Object> mArguments;
 
-	public From(Class<? extends Model> table, com.proactiveandroid.query.Sqlable queryBase) {
+	public From(Class<? extends Model> table, Sqlable queryBase) {
 		mType = table;
 		mJoins = new ArrayList<Join>();
 		mQueryBase = queryBase;
@@ -294,7 +294,7 @@ public String toCountSql() {
     }
 
 	public <T extends Model> List<T> execute() {
-		if (mQueryBase instanceof com.proactiveandroid.query.Select) {
+		if (mQueryBase instanceof Select) {
 			return SQLiteUtils.rawQuery(mType, toSql(), getArguments());
 			
 		} else {
@@ -306,7 +306,7 @@ public String toCountSql() {
 	}
 
 	public <T extends Model> T executeSingle() {
-		if (mQueryBase instanceof com.proactiveandroid.query.Select) {
+		if (mQueryBase instanceof Select) {
 			limit(1);
 			return (T) SQLiteUtils.rawQuerySingle(mType, toSql(), getArguments());
 			
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Join.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Join.java
index ead6a598..be8ef0a5 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Join.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Join.java
@@ -21,7 +21,7 @@
 import com.SearingMedia.proactiveandroid.Cache;
 import com.SearingMedia.proactiveandroid.Model;
 
-public final class Join implements com.proactiveandroid.query.Sqlable {
+public final class Join implements Sqlable {
 	static enum JoinType {
 		LEFT, OUTER, INNER, CROSS
 	}
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Select.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Select.java
index 025cd32d..9136c01a 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Select.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Select.java
@@ -20,7 +20,7 @@
 
 import com.SearingMedia.proactiveandroid.Model;
 
-public final class Select implements com.proactiveandroid.query.Sqlable {
+public final class Select implements Sqlable {
 	private String[] mColumns;
 	private boolean mDistinct = false;
 	private boolean mAll = false;
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Set.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Set.java
index 25025faf..e1be3a13 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Set.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/query/Set.java
@@ -22,8 +22,8 @@
 import java.util.Arrays;
 import java.util.List;
 
-public final class Set implements com.proactiveandroid.query.Sqlable {
-	private com.proactiveandroid.query.Update mUpdate;
+public final class Set implements Sqlable {
+	private Update mUpdate;
 
 	private String mSet;
 	private String mWhere;
@@ -31,7 +31,7 @@
 	private List<Object> mSetArguments;
 	private List<Object> mWhereArguments;
 
-	public Set(com.proactiveandroid.query.Update queryBase, String set) {
+	public Set(Update queryBase, String set) {
 		mUpdate = queryBase;
 		mSet = set;
 
@@ -39,7 +39,7 @@ public Set(com.proactiveandroid.query.Update queryBase, String set) {
 		mWhereArguments = new ArrayList<Object>();
 	}
 
-	public Set(com.proactiveandroid.query.Update queryBase, String set, Object... args) {
+	public Set(Update queryBase, String set, Object... args) {
 		mUpdate = queryBase;
 		mSet = set;
 
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/BigDecimalSerializer.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/BigDecimalSerializer.java
index 29b26b6a..77b5fce8 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/BigDecimalSerializer.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/BigDecimalSerializer.java
@@ -2,7 +2,7 @@
 
 import java.math.BigDecimal;
 
-public final class BigDecimalSerializer extends com.proactiveandroid.serializer.TypeSerializer {
+public final class BigDecimalSerializer extends TypeSerializer {
 	public Class<?> getDeserializedType() {
 		return BigDecimal.class;
 	}
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/CalendarSerializer.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/CalendarSerializer.java
index e7ce9477..8a4d3d2d 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/CalendarSerializer.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/CalendarSerializer.java
@@ -18,7 +18,7 @@
 
 import java.util.Calendar;
 
-public final class CalendarSerializer extends com.proactiveandroid.serializer.TypeSerializer {
+public final class CalendarSerializer extends TypeSerializer {
 	public Class<?> getDeserializedType() {
 		return Calendar.class;
 	}
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/FileSerializer.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/FileSerializer.java
index 3d68b171..d8559c7b 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/FileSerializer.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/serializer/FileSerializer.java
@@ -19,7 +19,7 @@
  */
 
 
-public final class FileSerializer extends com.proactiveandroid.serializer.TypeSerializer {
+public final class FileSerializer extends TypeSerializer {
 	public Class<?> getDeserializedType() {
 		return File.class;
 	}
