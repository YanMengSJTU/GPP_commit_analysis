diff --git a/src/com/activeandroid/query/From.java b/src/com/activeandroid/query/From.java
index 1dfb53e0..f39c435b 100644
--- a/src/com/activeandroid/query/From.java
+++ b/src/com/activeandroid/query/From.java
@@ -174,18 +174,18 @@ public From or(String clause, Object... args) {
 
 	// -- In / Not In
 
-	public From in(String columnName, Object... values)
+	public From in(String columnName, Object[] values)
 	{
-		where(columnName+" IN ").placeholder(values).addArguments(values);
+		where(columnName+" IN ").placeholder(values.length).addArguments(values);
 		return this;
 	}
 
 	public From in(String columnName, List<Object> values)
 	{
-		return in(columnName, (Object[])values.toArray());
+		return in(columnName, values.toArray());
 	}
 
-	public From andIn(String columnName, Object... values)
+	public From andIn(String columnName, Object[] values)
 	{
 		return in(columnName, values);
 	}
@@ -195,31 +195,31 @@ public From andIn(String columnName, List<Object> values)
 		return in(columnName, values);
 	}
 
-	public From orIn(String columnName, Object... values)
+	public From orIn(String columnName, Object[] values)
 	{
-		or(columnName+" IN ").placeholder(values).addArguments(values);
+		or(columnName+" IN ").placeholder(values.length).addArguments(values);
 		return this;
 	}
 
 	public From orIn(String columnName, List<Object> values)
 	{
-		return orIn(columnName, (Object[])values.toArray());
+		return orIn(columnName, values.toArray());
 	}
 
 	// --
 
-	public From notIn(String columnName, Object... values)
+	public From notIn(String columnName, Object[] values)
 	{
-		where(columnName+" NOT IN ").placeholder(values).addArguments(values);
+		where(columnName+" NOT IN ").placeholder(values.length).addArguments(values);
 		return this;
 	}
 
 	public From notIn(String columnName, List<Object> values)
 	{
-		return in(columnName, (Object[])values.toArray());
+		return in(columnName, values.toArray());
 	}
 
-	public From andNotIn(String columnName, Object... values)
+	public From andNotIn(String columnName, Object[] values)
 	{
 		return in(columnName, values);
 	}
@@ -229,15 +229,15 @@ public From andNotIn(String columnName, List<Object> values)
 		return in(columnName, values);
 	}
 
-	public From orNotIn(String columnName, Object... values)
+	public From orNotIn(String columnName, Object[] values)
 	{
-		or(columnName+" NOT IN ").placeholder(values).addArguments(values);
+		or(columnName+" NOT IN ").placeholder(values.length).addArguments(values);
 		return this;
 	}
 
 	public From orNotIn(String columnName, List<Object> values)
 	{
-		return orIn(columnName, (Object[])values.toArray());
+		return orIn(columnName, values.toArray());
 	}
 
 	// -- Group
@@ -285,14 +285,6 @@ public From offset(String offset) {
 
 	void addArguments(Object[] args) {
 		for(Object arg : args) {
-			if (arg instanceof Object[]) {
-				addArguments((Object[])arg);
-				continue;
-			}
-			if (arg instanceof List) {
-				addArguments(((List<?>)arg).toArray());
-				continue;
-			}
 			if (arg.getClass() == boolean.class || arg.getClass() == Boolean.class) {
 				arg = (arg.equals(true) ? 1 : 0);
 			}
@@ -300,25 +292,14 @@ void addArguments(Object[] args) {
 		}
 	}
 
-	private From placeholder(Object[] args)
+	private From placeholder(int length)
 	{
 		mWhere.append("(");
-		innerPlaceholderGroup(args);
-		mWhere.append(")");
-		return this;
-	}
-
-	private From innerPlaceholderGroup(Object[] args)
-	{
-		for(int i=0; i<args.length; i++) {
+		for(int i=0; i<length; i++) {
 			if (i > 0) mWhere.append(",");
-			if (args[i] instanceof Object[])
-				innerPlaceholderGroup((Object[])args[i]);
-			else if (args[i] instanceof List)
-				innerPlaceholderGroup(((List<?>)args[i]).toArray());
-			else
-				mWhere.append("?");
+			mWhere.append("?");
 		}
+		mWhere.append(")");
 		return this;
 	}
 
