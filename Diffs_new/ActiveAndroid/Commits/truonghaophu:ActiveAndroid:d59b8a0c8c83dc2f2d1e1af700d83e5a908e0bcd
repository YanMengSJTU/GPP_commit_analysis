diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index 94afea74..aada1cca 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -103,7 +103,7 @@ public static boolean isInitialized() {
 	}
 
 	public static synchronized SQLiteDatabase openDatabase() {
-		return sDatabaseHelper.getWritableDatabase("abc123");
+		return sDatabaseHelper.getWritableDatabase("6864bc3806");
 	}
 
 	public static synchronized void closeDatabase() {
diff --git a/src/com/activeandroid/Configuration.java b/src/com/activeandroid/Configuration.java
index b197d223..b486452d 100644
--- a/src/com/activeandroid/Configuration.java
+++ b/src/com/activeandroid/Configuration.java
@@ -37,6 +37,7 @@
 
 	private Context mContext;
 	private String mDatabaseName;
+	private String mKey;
 	private int mDatabaseVersion;
 	private String mSqlParser;
 	private List<Class<? extends Model>> mModelClasses;
@@ -63,6 +64,10 @@ public String getDatabaseName() {
 		return mDatabaseName;
 	}
 
+	public String getKey() {
+		return mKey;
+	}
+
 	public int getDatabaseVersion() {
 		return mDatabaseVersion;
 	}
@@ -99,6 +104,7 @@ public boolean isValid() {
 		private static final String AA_DB_NAME = "AA_DB_NAME";
 		private static final String AA_DB_VERSION = "AA_DB_VERSION";
 		private final static String AA_MODELS = "AA_MODELS";
+		private final static String AA_KEY = "AA_KEY";
 		private final static String AA_SERIALIZERS = "AA_SERIALIZERS";
 		private final static String AA_SQL_PARSER = "AA_SQL_PARSER";
 
@@ -209,6 +215,13 @@ public Configuration create() {
 				configuration.mDatabaseName = getMetaDataDatabaseNameOrDefault();
 			}
 
+			// Get database key from meta-data
+			if (mKey != null) {
+				configuration.mKey = mKey;
+			} else {
+				configuration.mKey = getMetaDataDatabaseKeyOrDefault();
+			}
+
 			// Get database version from meta-data
 			if (mDatabaseVersion != null) {
 				configuration.mDatabaseVersion = mDatabaseVersion;
@@ -261,6 +274,15 @@ private String getMetaDataDatabaseNameOrDefault() {
 			return aaName;
 		}
 
+		private String getMetaDataDatabaseKeyOrDefault() {
+			String aaKey = ReflectionUtils.getMetaData(mContext, AA_KEY);
+			if (aaKey == null) {
+				aaKey = "";
+			}
+
+			return aaKey;
+		}
+
 		private int getMetaDataDatabaseVersionOrDefault() {
 			Integer aaVersion = ReflectionUtils.getMetaData(mContext, AA_DB_VERSION);
 			if (aaVersion == null || aaVersion == 0) {
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 26bc887a..314fe6b4 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -28,6 +28,7 @@
 import java.util.List;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import net.sqlcipher.database.SQLiteDatabase;
 import net.sqlcipher.database.SQLiteOpenHelper;
 import android.text.TextUtils;
@@ -51,6 +52,10 @@
 
     private final String mSqlParser;
 
+    private final String dbKey;
+
+    private final String appKey
+
 	//////////////////////////////////////////////////////////////////////////////////////
 	// CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -59,6 +64,10 @@ public DatabaseHelper(Configuration configuration) {
 		super(configuration.getContext(), configuration.getDatabaseName(), null, configuration.getDatabaseVersion());
 		copyAttachedDatabase(configuration.getContext(), configuration.getDatabaseName());
 		mSqlParser = configuration.getSqlParser();
+		dbKey = configuration.getKey();
+
+		SharedPreferences settings = configuration.getContext().getSharedPreferences("data", Context.MODE_PRIVATE);
+        appKey = settings.getString("key", "");
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -80,6 +89,12 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		executeMigrations(db, oldVersion, newVersion);
 	}
 
+	@Override
+	public void getWritableDatabase(String aaKey){
+		String key = aaKey + dbKey + appKey;
+		super.getWritableDatabase(key);
+	}
+
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PUBLIC METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
