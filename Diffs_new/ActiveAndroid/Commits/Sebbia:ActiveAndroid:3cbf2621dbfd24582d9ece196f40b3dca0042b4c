diff --git a/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java b/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
index 1a4fab55..0be4a99f 100644
--- a/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
+++ b/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
@@ -129,12 +129,12 @@ private void generate(TypeElement tableElement, Set<VariableElement> columns) {
 			writer.write(getFillContentValuesCode(columns));
 			writer.write("  }\n");
 			
-			writer.write("  public void bindStatement(com.activeandroid.sebbia.Model genericModel, SQLiteStatement " + STATEMENT + ", Map<String, Integer> " + COLUMNS + ") {\n");
-			writer.write("    if (superModelFiller != null)\n");
-			writer.write("       superModelFiller.bindStatement(genericModel, " + STATEMENT + ", " + COLUMNS + ");\n");
-			writer.write("    " + className + " " + MODEL + " = (" + className + ") genericModel;\n");
-			writer.write(getBindStatementCode(columns));
-			writer.write("  }\n");
+//			writer.write("  public void bindStatement(com.activeandroid.sebbia.Model genericModel, SQLiteStatement " + STATEMENT + ", Map<String, Integer> " + COLUMNS + ") {\n");
+//			writer.write("    if (superModelFiller != null)\n");
+//			writer.write("       superModelFiller.bindStatement(genericModel, " + STATEMENT + ", " + COLUMNS + ");\n");
+//			writer.write("    " + className + " " + MODEL + " = (" + className + ") genericModel;\n");
+//			writer.write(getBindStatementCode(columns));
+//			writer.write("  }\n");
 
 			writer.write("}");
 			writer.flush();
@@ -182,6 +182,7 @@ else if (isTypeOf(typeMirror, String.class))
 			else if (isTypeOf(typeMirror, Byte[].class) || isTypeOf(typeMirror, byte[].class))
 				stringBuilder.append(setValue + ".getBlob(" + getColumnIndex + ");\n");
 			else {
+				processingEnv.getMessager().printMessage(Kind.NOTE, "Guessing what type is at " + typeMirror.toString(), null);
 				stringBuilder.append("    if (ModelHelper.isSerializable(" + type + ")) {\n");
 				stringBuilder.append("      " + MODEL + "." + column.getSimpleName() + " = (" + typeMirror.toString() + ") ModelHelper.getSerializable(cursor, " + type + ", " + getColumnIndex + ");\n");
 				stringBuilder.append("    } else {\n");
@@ -337,7 +338,7 @@ else if (isEnum)
 	}
 
 	private boolean isTypeOf(TypeMirror typeMirror, Class<?> type) {
-		if (type.getName().equals(typeMirror.toString()))
+		if (type.getCanonicalName().equals(typeMirror.toString()))
 			return true;
 
 		if (typeMirror instanceof DeclaredType == false)
diff --git a/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java b/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
index 695ac5a1..4b152a3e 100644
--- a/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
+++ b/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
@@ -22,9 +22,9 @@ public void fillContentValues(Model model, ContentValues contentValues) {
 			superModelFiller.fillContentValues(model, contentValues);
 	}
 
-	@Override
-	public void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns) {
-		if (superModelFiller != null)
-			superModelFiller.bindStatement(model, statement, columns);
-	}
+//	@Override
+//	public void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns) {
+//		if (superModelFiller != null)
+//			superModelFiller.bindStatement(model, statement, columns);
+//	}
 }
diff --git a/src/com/activeandroid/sebbia/internal/ModelFiller.java b/src/com/activeandroid/sebbia/internal/ModelFiller.java
index 147beae4..4bf5f553 100644
--- a/src/com/activeandroid/sebbia/internal/ModelFiller.java
+++ b/src/com/activeandroid/sebbia/internal/ModelFiller.java
@@ -1,13 +1,10 @@
 package com.activeandroid.sebbia.internal;
 
-import java.util.Map;
+import android.content.ContentValues;
+import android.database.Cursor;
 
 import com.activeandroid.sebbia.Model;
 
-import android.database.Cursor;
-import android.database.sqlite.SQLiteStatement;
-import android.content.ContentValues;
-
 
 public abstract class ModelFiller {
 	public static final String SUFFIX = "$$ActiveAndroidModelFiller";
@@ -15,5 +12,5 @@
 	
 	public abstract void loadFromCursor(Model model, Cursor cursor);
 	public abstract void fillContentValues(Model model, ContentValues contentValues);
-	public abstract void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns);
+//	public abstract void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns);
 }
