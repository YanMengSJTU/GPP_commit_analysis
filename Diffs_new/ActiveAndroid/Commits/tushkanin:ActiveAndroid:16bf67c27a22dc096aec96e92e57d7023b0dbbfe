diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index b9061d12..9d31d720 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -16,132 +16,144 @@
  * limitations under the License.
  */
 
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Set;
-
 import android.app.Application;
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
-
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.Log;
 
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
 public final class Cache {
-	//////////////////////////////////////////////////////////////////////////////////////
-	// PRIVATE MEMBERS
-	//////////////////////////////////////////////////////////////////////////////////////
+    //////////////////////////////////////////////////////////////////////////////////////
+    // PRIVATE MEMBERS
+    //////////////////////////////////////////////////////////////////////////////////////
+
+    private static Context sContext;
+
+    private static ModelInfo sModelInfo;
+    private static DatabaseHelper sDatabaseHelper;
+
+    private static Set<Model> sEntities;
 
-	private static Context sContext;
+    private static boolean sIsInitialized = false;
+    private static boolean sEnabled = false;
 
-	private static ModelInfo sModelInfo;
-	private static DatabaseHelper sDatabaseHelper;
+    public static boolean isEnabled() {
+        return sEnabled;
+    }
 
-	private static Set<Model> sEntities;
+    public static void setEnabled(boolean enabled) {
+        sEnabled = enabled;
+    }
 
-	private static boolean sIsInitialized = false;
+    //////////////////////////////////////////////////////////////////////////////////////
+    // CONSTRUCTORS
+    //////////////////////////////////////////////////////////////////////////////////////
 
-	//////////////////////////////////////////////////////////////////////////////////////
-	// CONSTRUCTORS
-	//////////////////////////////////////////////////////////////////////////////////////
+    private Cache() {
+    }
 
-	private Cache() {
-	}
+    //////////////////////////////////////////////////////////////////////////////////////
+    // PUBLIC METHODS
+    //////////////////////////////////////////////////////////////////////////////////////
 
-	//////////////////////////////////////////////////////////////////////////////////////
-	// PUBLIC METHODS
-	//////////////////////////////////////////////////////////////////////////////////////
+    public static synchronized void initialize(Application application) {
+        if (sIsInitialized) {
+            Log.v("ActiveAndroid already initialized.");
+            return;
+        }
 
-	public static synchronized void initialize(Application application) {
-		if (sIsInitialized) {
-			Log.v("ActiveAndroid already initialized.");
-			return;
-		}
+        sContext = application;
 
-		sContext = application;
+        sModelInfo = new ModelInfo(application);
+        sDatabaseHelper = new DatabaseHelper(sContext);
 
-		sModelInfo = new ModelInfo(application);
-		sDatabaseHelper = new DatabaseHelper(sContext);
+        sEntities = new HashSet<Model>();
 
-		sEntities = new HashSet<Model>();
+        openDatabase();
 
-		openDatabase();
+        sIsInitialized = true;
 
-		sIsInitialized = true;
+        Log.v("ActiveAndroid initialized succesfully.");
+    }
 
-		Log.v("ActiveAndroid initialized succesfully.");
-	}
+    public static synchronized void clear() {
+        sEntities = new HashSet<Model>();
+        Log.v("Cache cleared.");
+    }
 
-	public static synchronized void clear() {
-		sEntities = new HashSet<Model>();
-		Log.v("Cache cleared.");
-	}
+    public static synchronized void dispose() {
+        closeDatabase();
 
-	public static synchronized void dispose() {
-		closeDatabase();
-		
-		sEntities = null;
-		sModelInfo = null;
-		sDatabaseHelper = null;
+        sEntities = null;
+        sModelInfo = null;
+        sDatabaseHelper = null;
 
-		sIsInitialized = false;
+        sIsInitialized = false;
 
-		Log.v("ActiveAndroid disposed. Call initialize to use library.");
-	}
+        Log.v("ActiveAndroid disposed. Call initialize to use library.");
+    }
 
-	// Database access
+    // Database access
 
-	public static synchronized SQLiteDatabase openDatabase() {
-		return sDatabaseHelper.getWritableDatabase();
-	}
+    public static synchronized SQLiteDatabase openDatabase() {
+        return sDatabaseHelper.getWritableDatabase();
+    }
 
-	public static synchronized void closeDatabase() {
-		sDatabaseHelper.close();
-	}
+    public static synchronized void closeDatabase() {
+        sDatabaseHelper.close();
+    }
 
-	// Context access
+    // Context access
 
-	public static Context getContext() {
-		return sContext;
-	}
+    public static Context getContext() {
+        return sContext;
+    }
 
-	// Entity cache
+    // Entity cache
 
-	public static synchronized void addEntity(Model entity) {
-		sEntities.add(entity);
-	}
+    public static synchronized void addEntity(Model entity) {
+        if (sEnabled) {
+            sEntities.add(entity);
+        }
+    }
 
-	public static synchronized Model getEntity(Class<? extends Model> type, long id) {
-		for (Model entity : sEntities) {
-			if (entity != null && entity.getClass() != null && entity.getClass() == type && entity.getId() != null
-					&& entity.getId() == id) {
+    public static synchronized Model getEntity(Class<? extends Model> type, long id) {
+        for (Model entity : sEntities) {
+            if (entity != null && entity.getClass() != null && entity.getClass() == type && entity.getId() != null
+                    && entity.getId() == id) {
 
-				return entity;
-			}
-		}
+                return entity;
+            }
+        }
 
-		return null;
-	}
+        return null;
+    }
 
-	public static synchronized void removeEntity(Model entity) {
-		sEntities.remove(entity);
-	}
+    public static synchronized void removeEntity(Model entity) {
+        if (sEnabled) {
+            sEntities.remove(entity);
+        }
+    }
 
-	// Model cache
+    // Model cache
 
-	public static synchronized Collection<TableInfo> getTableInfos() {
-		return sModelInfo.getTableInfos();
-	}
+    public static synchronized Collection<TableInfo> getTableInfos() {
+        return sModelInfo.getTableInfos();
+    }
 
-	public static synchronized TableInfo getTableInfo(Class<? extends Model> type) {
-		return sModelInfo.getTableInfo(type);
-	}
+    public static synchronized TableInfo getTableInfo(Class<? extends Model> type) {
+        return sModelInfo.getTableInfo(type);
+    }
 
-	public static synchronized TypeSerializer getParserForType(Class<?> type) {
-		return sModelInfo.getTypeSerializer(type);
-	}
+    public static synchronized TypeSerializer getParserForType(Class<?> type) {
+        return sModelInfo.getTypeSerializer(type);
+    }
 
-	public static synchronized String getTableName(Class<? extends Model> type) {
-		return sModelInfo.getTableInfo(type).getTableName();
-	}
+    public static synchronized String getTableName(Class<? extends Model> type) {
+        return sModelInfo.getTableInfo(type).getTableName();
+    }
 }
\ No newline at end of file
