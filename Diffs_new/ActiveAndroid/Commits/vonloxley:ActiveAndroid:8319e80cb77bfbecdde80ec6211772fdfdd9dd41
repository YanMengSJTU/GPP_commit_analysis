diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 7ec557de..dc147a74 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -16,12 +16,10 @@
  * limitations under the License.
  */
 
-import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.io.InputStreamReader;
 import java.io.OutputStream;
 import java.util.Arrays;
 import java.util.Collections;
@@ -152,7 +150,7 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
 						final int version = Integer.valueOf(file.replace(".sql", ""));
 
 						if (version > oldVersion && version <= newVersion) {
-							executeSqlScript(db, file);
+							SQLiteUtils.executeSqlScript(db, Cache.getContext().getAssets().open(MIGRATION_PATH + "/" + file));
 							migrationExecuted = true;
 
 							Log.i(file + " executed succesfully.");
@@ -175,29 +173,7 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
 		return migrationExecuted;
 	}
 
-	private void executeSqlScript(SQLiteDatabase db, String file) {
-		try {
-			final InputStream input = Cache.getContext().getAssets().open(MIGRATION_PATH + "/" + file);
-			final BufferedReader reader = new BufferedReader(new InputStreamReader(input));
-
-			StringBuilder sb = new StringBuilder(255);
-			String line = null;
-
-			while ((line = reader.readLine()) != null) {
-				sb.append(line).append('\n');
-			}
-
-			for (String s : SQLiteUtils.lexSqlScript(sb.toString())) {
-				if (!"\n".equals(s)) {
-					db.execSQL(s);
-				}
-			}
-
-		}
-		catch (IOException e) {
-			Log.e("Failed to execute " + file, e);
-		}
-	}
+	
 
 	// Meta-data methods
 
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index a559381f..b9d0a0f3 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -16,6 +16,10 @@
  * limitations under the License.
  */
 
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Field;
 import java.util.ArrayList;
@@ -23,6 +27,7 @@
 import java.util.List;
 
 import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
 import android.text.TextUtils;
 
@@ -230,4 +235,27 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 
 		return sl;
 	}
+
+	public static void executeSqlScript(SQLiteDatabase db, InputStream is) {
+		try {
+			final BufferedReader reader = new BufferedReader(new InputStreamReader(is));
+
+			StringBuilder sb = new StringBuilder(255);
+			String line = null;
+
+			while ((line = reader.readLine()) != null) {
+				sb.append(line).append('\n');
+			}
+
+			for (String s : lexSqlScript(sb.toString())) {
+				if (!"\n".equals(s)) {
+					db.execSQL(s);
+				}
+			}
+
+		}
+		catch (IOException e) {
+			Log.e("Failed to execute " + is, e);
+		}
+	}
 }
