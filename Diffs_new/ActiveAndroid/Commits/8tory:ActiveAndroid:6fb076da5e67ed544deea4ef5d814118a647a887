diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 37d29dea..ee164977 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -67,6 +67,7 @@ public void onCreate(SQLiteDatabase db) {
 		executeMigrations(db, -1, db.getVersion());
 		executeCreate(db); // Maybe droped tables after mirgation
 		executeCreateIndex(db);
+		executeCreateVirtualTable(db);
 	}
 
 	@Override
@@ -76,6 +77,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 		executeMigrations(db, oldVersion, newVersion);
 		executeCreate(db);
 		executeCreateIndex(db);
+		executeCreateVirtualTable(db);
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -151,6 +153,7 @@ private void executeCreate(SQLiteDatabase db) {
 			for (TableInfo tableInfo : Cache.getTableInfos()) {
 				String toSql = SQLiteUtils.createTableDefinition(tableInfo);
 				tableInfo.setSchema(toSql);
+				if (android.text.TextUtils.isEmpty(toSql)) continue;
 				alterColumnsIfNeed(tableInfo);
 				/*
 				 * TODO
@@ -166,6 +169,21 @@ private void executeCreate(SQLiteDatabase db) {
 		}
 	}
 
+	private void executeCreateVirtualTable(SQLiteDatabase db) {
+		db.beginTransaction();
+		try {
+			for (TableInfo tableInfo : Cache.getTableInfos()) {
+				String toSql = SQLiteUtils.createVirtualTableDefinition(tableInfo);
+				if (android.text.TextUtils.isEmpty(toSql)) continue;
+				db.execSQL(toSql);
+			}
+			db.setTransactionSuccessful();
+		}
+		finally {
+			db.endTransaction();
+		}
+	}
+
 	private void executeDrop(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
diff --git a/src/com/activeandroid/TableInfo.java b/src/com/activeandroid/TableInfo.java
index ec33c684..d6f869c2 100644
--- a/src/com/activeandroid/TableInfo.java
+++ b/src/com/activeandroid/TableInfo.java
@@ -35,6 +35,7 @@
 
 	private Class<? extends Model> mType;
 	private String mTableName;
+	private String mModule;
 	private String mSchema;
 
 	private Map<Field, String> mColumnNames = new HashMap<Field, String>();
@@ -51,6 +52,7 @@ public TableInfo(Class<? extends Model> type) {
 		final Table tableAnnotation = type.getAnnotation(Table.class);
 		if (tableAnnotation != null) {
 			mTableName = tableAnnotation.name();
+			mModule = tableAnnotation.module();
 		}
 		else {
 			mTableName = type.getSimpleName();
@@ -100,6 +102,10 @@ public String getTableName() {
 		return mTableName;
 	}
 
+	public String getModule() {
+		return mModule;
+	}
+
 	public Collection<Field> getFields() {
 		return mColumnNames.keySet();
 	}
diff --git a/src/com/activeandroid/query/From.java b/src/com/activeandroid/query/From.java
index fc0e54fc..aca5a8e6 100644
--- a/src/com/activeandroid/query/From.java
+++ b/src/com/activeandroid/query/From.java
@@ -108,7 +108,11 @@ public Join crossJoin(Class<? extends Model> table) {
 	}
 
 	public From where() {
-		return where(null);
+		return where((String) null);
+	}
+
+	public From where(Class<? extends Model> table) {
+		return where(Cache.getTableName(table));
 	}
 
 	public From where(String where) {
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index d6e1f916..94e24caf 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -401,6 +401,8 @@ public static void createUniqueColumnDefinition(TableInfo tableInfo, Field field
 	}
 
 	public static String createTableDefinition(TableInfo tableInfo) {
+		if (!TextUtils.isEmpty(tableInfo.getModule())) return null;
+
 		final ArrayList<String> definitions = new ArrayList<String>();
 
 		for (Field field : tableInfo.getFields()) {
@@ -417,9 +419,7 @@ public static String createTableDefinition(TableInfo tableInfo) {
 	}
 
 	public static String createVirtualTableDefinition(TableInfo tableInfo) {
-		Table table = tableInfo.getType().getAnnotation(Table.class);
-		String module = table.module();
-		if (TextUtils.isEmpty(module)) return "";
+		if (TextUtils.isEmpty(tableInfo.getModule())) return null;
 
 		final ArrayList<String> definitions = new ArrayList<String>();
 		for (Field field : tableInfo.getFields()) {
@@ -432,7 +432,7 @@ public static String createVirtualTableDefinition(TableInfo tableInfo) {
 		definitions.addAll(createUniqueDefinition(tableInfo));
 
 		return String.format("CREATE VIRTUAL TABLE IF NOT EXISTS %s USING %s(%s);", tableInfo.getTableName(),
-				module, TextUtils.join(", ", definitions));
+				tableInfo.getModule(), TextUtils.join(", ", definitions));
 	}
 
 	@SuppressWarnings("unchecked")
