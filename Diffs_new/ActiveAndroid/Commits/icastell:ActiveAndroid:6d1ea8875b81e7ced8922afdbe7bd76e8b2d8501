diff --git a/README.md b/README.md
index 2e7c9e4d..836959cd 100644
--- a/README.md
+++ b/README.md
@@ -1,28 +1,21 @@
 [![Build Status](https://travis-ci.org/pardom/ActiveAndroid.png?branch=master)](https://travis-ci.org/pardom/ActiveAndroid) [![Stories in Ready](https://badge.waffle.io/pardom/ActiveAndroid.png)](http://waffle.io/pardom/ActiveAndroid)  
-# ActiveAndroid
+# ActiveAndroidRx
 
-ActiveAndroid is an active record style ORM ([object relational mapper](http://en.wikipedia.org/wiki/Object-relational_mapping)). What does that mean exactly? Well, ActiveAndroid allows you to save and retrieve SQLite database records without ever writing a single SQL statement. Each database record is wrapped neatly into a class with methods like _save()_ and _delete()_.
+ActiveAndroid fork witch includes SQLBrite from Square (https://github.com/square/sqlbrite) to get reactive queries.
 
-ActiveAndroid does so much more than this though. Accessing the database is a hassle, to say the least, in Android. ActiveAndroid takes care of all the setup and messy stuff, and all with just a few simple steps of configuration.
+## Usage
 
+    RxSelect.from(MyEntity.class).where(...).execute().subscribe(myEntitiesList -> ...);
+    
 ## Download
 
-Grab via Maven:
-```xml
-<dependency>
-  <groupId>com.michaelpardo</groupId>
-  <artifactId>activeandroid</artifactId>
-  <version>3.1.0-SNAPSHOT</version>
-</dependency>
-```
-or Gradle:
+Grab via Gradle:
 ```groovy
 repositories {
     mavenCentral()
-    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
 }
 
-compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
+compile 'com.github.vicpinm:activeandroidrx:3.1.1'
 ```
 
 ## Documentation
