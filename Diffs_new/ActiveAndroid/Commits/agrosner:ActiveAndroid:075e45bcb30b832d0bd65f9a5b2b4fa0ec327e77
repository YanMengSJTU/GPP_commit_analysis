diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java
index 6aaefe09..e16dd332 100644
--- a/src/com/activeandroid/ModelInfo.java
+++ b/src/com/activeandroid/ModelInfo.java
@@ -29,6 +29,7 @@
 
 import android.content.Context;
 
+import com.activeandroid.annotation.Ignore;
 import com.activeandroid.serializer.CalendarSerializer;
 import com.activeandroid.serializer.SqlDateSerializer;
 import com.activeandroid.serializer.TypeSerializer;
@@ -183,12 +184,12 @@ private void scanForModelClasses(File path, String packageName, ClassLoader clas
 
 			try {
 				Class<?> discoveredClass = Class.forName(className, false, classLoader);
-				if (ReflectionUtils.isModel(discoveredClass)) {
+				if (ReflectionUtils.isModel(discoveredClass) && !discoveredClass.isAnnotationPresent(Ignore.class)) {
 					@SuppressWarnings("unchecked")
 					Class<? extends Model> modelClass = (Class<? extends Model>) discoveredClass;
 					mTableInfos.put(modelClass, new TableInfo(modelClass));
 				}
-				else if (ReflectionUtils.isTypeSerializer(discoveredClass)) {
+				else if (ReflectionUtils.isTypeSerializer(discoveredClass) && !discoveredClass.isAnnotationPresent(Ignore.class)) {
 					TypeSerializer instance = (TypeSerializer) discoveredClass.newInstance();
 					mTypeSerializers.put(instance.getDeserializedType(), instance);
 				}
diff --git a/src/com/activeandroid/annotation/Ignore.java b/src/com/activeandroid/annotation/Ignore.java
new file mode 100644
index 00000000..8e8932df
--- /dev/null
+++ b/src/com/activeandroid/annotation/Ignore.java
@@ -0,0 +1,17 @@
+package com.activeandroid.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * Created by andrewgrosner
+ * Date: 12/9/13
+ * Contributors:
+ * Description: tells ActiveAndroid that we want to ignore this class as a table
+ */
+@Target(ElementType.TYPE)
+@Retention(RetentionPolicy.RUNTIME)
+public @interface Ignore {
+}
