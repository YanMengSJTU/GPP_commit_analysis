diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index e69c03bf..208fd183 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -23,11 +23,14 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.OutputStream;
+import java.lang.reflect.Field;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 
 import android.content.Context;
+import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
@@ -150,7 +153,10 @@ private void executeCreate(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
 			for (TableInfo tableInfo : Cache.getTableInfos()) {
-				db.execSQL(SQLiteUtils.createTableDefinition(tableInfo));
+                if(!updateTable(db, tableInfo)){
+                    // try to create table
+				    db.execSQL(SQLiteUtils.createTableDefinition(tableInfo));
+                }
 			}
 			db.setTransactionSuccessful();
 		}
@@ -159,7 +165,44 @@ private void executeCreate(SQLiteDatabase db) {
 		}
 	}
 
-	private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVersion) {
+    /**
+     * Tries to update database tables. If the table does not exist false is returned and
+     * a new table can be created. If the table already exists return true and check if there
+     * are any new columns are missing and alters the existing table accordingly.
+     * @param db
+     * @param tableInfo
+     * @return
+     */
+    private boolean updateTable(SQLiteDatabase db, TableInfo tableInfo) {
+        boolean result = false;
+        // load old table schema
+        Cursor c = db.rawQuery("PRAGMA table_info(" + tableInfo.getTableName() + ")", null);
+        List<String> currentTableColumnNames = new ArrayList<String>();
+        if (c.moveToFirst()) {
+            // if table already exists, load its current columns
+            do {
+                String name = c.getString(1);
+            } while (c.moveToNext());
+
+            for (Field field : tableInfo.getFields()) {
+                String columnName = tableInfo.getColumnName(field);
+
+                // check if new column is present in old schema
+                if(!currentTableColumnNames.contains(columnName)){
+                    String definition = SQLiteUtils.createColumnDefinition(tableInfo, field);
+                    String alterTable = String.format("ALTER TABLE %s ADD COLUMN %s;", tableInfo.getTableName(), definition);
+                    db.execSQL(alterTable);
+                }
+            }
+            // return true if table already exists
+            result = true;
+        }
+        c.close();
+
+        return result;
+    }
+
+    private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVersion) {
 		boolean migrationExecuted = false;
 		try {
 			final List<String> files = Arrays.asList(Cache.getContext().getAssets().list(MIGRATION_PATH));
