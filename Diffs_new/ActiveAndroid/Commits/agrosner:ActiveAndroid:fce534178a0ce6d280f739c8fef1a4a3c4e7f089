diff --git a/src/com/activeandroid/manager/SingleDBManager.java b/src/com/activeandroid/manager/SingleDBManager.java
index a15901b3..7a8c8fcb 100644
--- a/src/com/activeandroid/manager/SingleDBManager.java
+++ b/src/com/activeandroid/manager/SingleDBManager.java
@@ -64,13 +64,6 @@ protected synchronized void processOnForeground(Runnable runnable){
      * @param inObject - object of the class defined by the manager
      */
     public <OBJECT_CLASS extends Model> OBJECT_CLASS add(OBJECT_CLASS inObject){
-        try{
-            if(inObject.exists()){
-                inObject.delete();
-            }
-        }catch (NullPointerException n){
-
-        }
         inObject.save();
         return inObject;
     }
@@ -353,4 +346,12 @@ public void run() {
        return fetchObject(obClazz, null, objectReceiver, uid);
     }
 
+    /**
+     * Deletes an object from the db
+     * @param favoriteObject
+     * @param <OBJECT_CLASS>
+     */
+    public <OBJECT_CLASS extends Model> void delete(OBJECT_CLASS favoriteObject) {
+        favoriteObject.delete();
+    }
 }
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index ebfa5246..3e9085ef 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -226,6 +226,9 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 		try {
 			Constructor<?> entityConstructor = type.getConstructor();
 
+            //enable private constructors
+            entityConstructor.setAccessible(true);
+
 			if (cursor.moveToFirst()) {
 				do {
 					Model entity = (T) entityConstructor.newInstance();
@@ -236,7 +239,9 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 			}
 
 		}
-		catch (Exception e) {
+        catch (IllegalArgumentException i){
+            throw new RuntimeException("Default constructor for: " + type.getName() + " was not found.");
+        } catch (Exception e) {
 			Log.e("Failed to process cursor.", e);
 		}
 
