diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index a33610da..24ff28d8 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -62,10 +62,6 @@ public final void setId(Long id) {
         this.mId = id;
     }
 
-    protected boolean valid() {
-        return true;
-    };
-
 	public final void delete() {
 		Cache.openDatabase().delete(mTableInfo.getTableName(), "Id=?", new String[] { getId().toString() });
 		Cache.removeEntity(this);
@@ -77,10 +73,16 @@ public final void delete() {
 	public boolean save() {
         boolean modelSaved = false;
 
+        // Validation
+        beforeValidation();
         if (!valid()) {
             return modelSaved;
         }
+        afterValidation();
 
+        beforeSave();
+
+        // Saving
 		final SQLiteDatabase db = Cache.openDatabase();
 		final ContentValues values = new ContentValues();
 
@@ -173,8 +175,7 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
             }
 		}
 
-		Cache.getContext().getContentResolver()
-				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
+		afterSave();
 
         return modelSaved;
 	}
@@ -294,6 +295,20 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 	// PROTECTED METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
+    // Save/update related callbacks
+    protected boolean valid() {
+        return true;
+    };
+
+    protected void beforeValidation() {}
+    protected void afterValidation() {}
+
+    protected void beforeSave() {}
+    protected void afterSave() {
+        Cache.getContext().getContentResolver()
+                .notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
+    }
+
 	protected final <T extends Model> List<T> getMany(Class<T> type, String foreignKey) {
 		return new Select().from(type).where(Cache.getTableName(type) + "." + foreignKey + "=?", getId()).execute();
 	}
