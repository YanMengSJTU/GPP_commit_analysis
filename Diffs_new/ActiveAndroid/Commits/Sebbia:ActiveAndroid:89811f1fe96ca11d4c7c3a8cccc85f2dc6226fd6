diff --git a/src/com/activeandroid/sebbia/Model.java b/src/com/activeandroid/sebbia/Model.java
index 31a9fb88..fee2d03a 100644
--- a/src/com/activeandroid/sebbia/Model.java
+++ b/src/com/activeandroid/sebbia/Model.java
@@ -24,7 +24,6 @@
 import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteStatement;
 
 import com.activeandroid.sebbia.content.ContentProvider;
 import com.activeandroid.sebbia.internal.ModelFiller;
@@ -110,46 +109,12 @@ public static void saveMultiple(List<? extends Model> entities) {
 		final ContentValues values = new ContentValues();
 		for (Model entity : entities) {
 			values.clear();
-//			if (entity.mId == null && (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?>)) {
-//				entity.fillContentValuesReflective(values);
-//				db.insert(entity.mTableInfo.getTableName(), null, values);
-//			} else if (entity.mId == null) {
+			fillContentValues(entity, values);
 			if (entity.mId == null) {
-				ModelFiller filler = Cache.getFiller(entity.getClass());
-				SQLiteStatement statement = entity.mTableInfo.getInsertOrReplaceStatement();
-				statement.clearBindings();
-				filler.bindStatement(entity, statement, entity.mTableInfo.getColumnIndexes());
-				entity.mId = statement.executeInsert();
+				entity.mId = db.insertWithOnConflict(entity.mTableInfo.getTableName(), null, values, SQLiteDatabase.CONFLICT_REPLACE);
 			} else {
-				fillContentValues(entity, values);
 				db.update(entity.mTableInfo.getTableName(), values, "Id=" + entity.mId, null);
 			}
-//			values.clear();
-//			fillContentValues(entity, values);
-//			if (entity.mId == null) {
-//				SQLiteStatement statement = entity.mTableInfo.getInsertOrReplaceStatement();
-//				statement.clearBindings();
-//				int columnIndex = 0;
-//				for (String column : entity.mTableInfo.getColumnNames()) {
-//					columnIndex++;
-//					Object value = values.get(column);
-//					if (value == null)
-//						continue;
-//					if (value instanceof Integer || value instanceof Long || value instanceof Short) 
-//						statement.bindLong(columnIndex, (Long) value);
-//					else if (value instanceof String)
-//						statement.bindString(columnIndex, (String) value);
-//					else if (value instanceof Boolean)
-//						statement.bindLong(columnIndex, ((Boolean) value) ? 1L : 0L);
-//					else if (value instanceof byte[] || value instanceof Byte[])
-//						statement.bindBlob(columnIndex, (byte[]) value);
-//					else if (value instanceof Float || value instanceof Double)
-//						statement.bindDouble(columnIndex, (Double) value);
-//				}
-//				entity.mId = statement.executeInsert();
-//			} else {
-//				db.update(entity.mTableInfo.getTableName(), values, "Id=" + entity.mId, null);
-//			}
 		}
 	}
 	// Model population
