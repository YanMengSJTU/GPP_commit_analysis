diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 735f8fb4..d7773bf1 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -17,6 +17,7 @@
  */
 
 import java.lang.reflect.Field;
+import java.util.ArrayList;
 import java.util.List;
 
 import android.content.ContentValues;
@@ -29,6 +30,7 @@
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.Log;
 import com.activeandroid.util.ReflectionUtils;
+import com.threesquared.axawellbeing.DatabaseChangeListener;
 
 @SuppressWarnings("unchecked")
 public abstract class Model {
@@ -41,6 +43,8 @@
 
 	private TableInfo mTableInfo;
 
+	private static List<DatabaseChangeListener> sListeners = new ArrayList<DatabaseChangeListener>();
+
 	//////////////////////////////////////////////////////////////////////////////////////
 	// CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -61,8 +65,15 @@ public final Long getId() {
 	public final void delete() {
 		Cache.openDatabase().delete(mTableInfo.getTableName(), "Id=?", new String[] { getId().toString() });
 		Cache.removeEntity(this);
+		notifyListeners();
 	}
 
+	private void notifyListeners() {
+		for (DatabaseChangeListener dbListener : Model.sListeners) {
+	    	dbListener.onChange(this.getClass());
+	    }
+	}
+	
 	public final void save() {
 		final SQLiteDatabase db = Cache.openDatabase();
 		final ContentValues values = new ContentValues();
@@ -134,14 +145,25 @@ else if (ReflectionUtils.isModel(fieldType)) {
 
 		if (mId == null) {
 			mId = db.insert(mTableInfo.getTableName(), null, values);
+			notifyListeners();
 		}
 		else {
 			db.update(mTableInfo.getTableName(), values, "Id=" + mId, null);
+			notifyListeners();
 		}
 	}
 
 	// Convenience methods
-
+	
+	public static void setChangeListener(DatabaseChangeListener changeListener) {
+		Model.sListeners.add(changeListener);
+	}
+	
+	public static void removeChangeListener(DatabaseChangeListener changeListener) {
+		Model.sListeners.remove(changeListener);
+	}
+	
+	
 	public static void delete(Class<? extends Model> type, long id) {
 		new Delete().from(type).where("Id=?", id).execute();
 	}
diff --git a/src/com/activeandroid/ModelResponseHandler.java b/src/com/activeandroid/ModelResponseHandler.java
new file mode 100644
index 00000000..02be798d
--- /dev/null
+++ b/src/com/activeandroid/ModelResponseHandler.java
@@ -0,0 +1,45 @@
+package com.activeandroid;
+
+import java.util.List;
+
+import com.activeandroid.util.Log;
+
+/**
+ * The Class ModelResponseHandler.
+ */
+public abstract class ModelResponseHandler<T extends Model> {
+
+	/**
+	 * On error.
+	 * 
+	 * @param errorMessage
+	 *            the error message
+	 * @param throwable
+	 *            the throwable
+	 */
+	public void onError(String errorMessage, Throwable throwable) {
+		Log.e("ModelResponseHandler onError: "
+				+ errorMessage, throwable);
+	}
+
+	/**
+	 * On success with multiple models.
+	 * 
+	 * @param models
+	 *            the models
+	 */
+	public void onSuccess(List<T> models) {
+		Log.v("ModelResponseHandler onSuccess: " + models.toString());
+	}
+
+	/**
+	 * On success.
+	 * 
+	 * @param model
+	 *            the model
+	 */
+	public void onSuccess(T model) {
+		Log.v("ModelResponseHandler onSuccess: " + model.toString());
+	}
+
+}
\ No newline at end of file
