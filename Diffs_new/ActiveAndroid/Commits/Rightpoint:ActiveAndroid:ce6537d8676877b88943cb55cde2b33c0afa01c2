diff --git a/src/main/java/com/activeandroid/ActiveAndroid.java b/src/main/java/com/activeandroid/ActiveAndroid.java
index 77c901aa..2ae4eb7c 100644
--- a/src/main/java/com/activeandroid/ActiveAndroid.java
+++ b/src/main/java/com/activeandroid/ActiveAndroid.java
@@ -106,4 +106,8 @@ public static void execSQL(String sql) {
 	public static void execSQL(String sql, Object[] bindArgs) {
 		Cache.openDatabase().execSQL(sql, bindArgs);
 	}
+
+    public static void checkDbIntegrity() {
+        Cache.checkDbIntegrity();
+    }
 }
diff --git a/src/main/java/com/activeandroid/Cache.java b/src/main/java/com/activeandroid/Cache.java
index f077885c..6e439383 100644
--- a/src/main/java/com/activeandroid/Cache.java
+++ b/src/main/java/com/activeandroid/Cache.java
@@ -16,8 +16,6 @@
  * limitations under the License.
  */
 
-import java.util.Collection;
-
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.support.v4.util.LruCache;
@@ -25,6 +23,8 @@
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.AALog;
 
+import java.util.Collection;
+
 public final class Cache {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PUBLIC CONSTANTS
@@ -102,6 +102,12 @@ public static synchronized void dispose() {
 		AALog.v("ActiveAndroid disposed. Call initialize to use library.");
 	}
 
+    public static void checkDbIntegrity() {
+        if (!sDatabaseHelper.getWritableDatabase().isDatabaseIntegrityOk()) {
+            sDatabaseHelper.copyAttachedDatabase(sContext, sDatabaseConfiguration.getDatabaseName());
+        }
+    }
+
 	// Database access
 
 	public static synchronized SQLiteDatabase openDatabase() {
