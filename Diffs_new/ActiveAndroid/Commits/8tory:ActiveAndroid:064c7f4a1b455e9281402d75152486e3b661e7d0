diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 8ad17ee0..0113797b 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -37,7 +37,7 @@
 import java.lang.reflect.Field;
 
 @SuppressWarnings("unchecked")
-public abstract class Model {
+public abstract class Model <T extends Model<T>> implements com.novoda.notils.cursor.SimpleCursorList.MarshallerListener<T> {
 	public static final String FIELD_ID = "Id";
 	public static final String ID = FIELD_ID;
 
@@ -475,4 +475,14 @@ public boolean equals(Object obj) {
 		return this.mId != null && (this.mTableInfo.getTableName().equals(other.mTableInfo.getTableName()))
 				&& (this.mId.equals(other.mId));
 	}
+
+	@Override
+	public boolean onMarshall() {
+		return false;
+	}
+
+	@Override
+	public boolean onMarshall(T entity) {
+		return false;
+	}
 }
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 56c55e04..28f3c621 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -34,6 +34,7 @@
 import com.activeandroid.util.Log;
 import com.novoda.notils.cursor.CursorList;
 import com.novoda.notils.cursor.SimpleCursorList;
+import com.novoda.notils.cursor.SimpleCursorList.*;
 import com.novoda.notils.cursor.SmartCursorWrapper;
 
 import java.lang.reflect.Field;
@@ -616,7 +617,30 @@ public void onCloseFinished() {
 				ActiveAndroid.endReleaseTransaction();
 			}
 		});
-		return new SimpleCursorList<T>(cursorWrapper, new ModelCursorMarshaller<T>(type));
+		SimpleCursorList<T> list = new SimpleCursorList<T>(cursorWrapper, new ModelCursorMarshaller<T>(type));
+		/*
+		list.setMarshallerListener(new MarshallerListener<T>() {
+			@Override
+			public boolean onMarshall() {
+				return false;
+			}
+			@Override
+			public boolean onMarshall(T entity) {
+				if (!entity.onMarshall(entity)) {
+					entity.onMarshall();
+				}
+				return false;
+			}
+		});
+		*/
+		list.setMarshallerListener(new SimpleMarshallerListener<T>() {
+			@Override
+			public boolean onMarshall(T entity) {
+				//entity.onMarshall();
+				return entity.onMarshall(entity);
+			}
+		});
+		return list;
 	}
 
 	public static void showException(boolean show) {
