diff --git a/activeandroid/.gitignore b/activeandroid/.gitignore
new file mode 100644
index 00000000..796b96d1
--- /dev/null
+++ b/activeandroid/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/activeandroid/build.gradle b/activeandroid/build.gradle
new file mode 100644
index 00000000..81b2306d
--- /dev/null
+++ b/activeandroid/build.gradle
@@ -0,0 +1,39 @@
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 26
+    buildToolsVersion "26.0.2"
+
+    defaultConfig {
+        minSdkVersion 15
+        targetSdkVersion 26
+        versionCode 311
+        versionName "3.1.1"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+        project.version = versionName
+
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+task makeAndExportReleaseJar(type: Copy,dependsOn: 'assembleRelease') {
+    from('build/intermediates/bundles/default/')
+    into('output/')
+    include('classes.jar')
+    rename('classes.jar', "activeAndroid-${version}.jar")
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:26.+'
+    testCompile 'junit:junit:4.12'
+}
diff --git a/activeandroid/proguard-rules.pro b/activeandroid/proguard-rules.pro
new file mode 100644
index 00000000..9fe722a4
--- /dev/null
+++ b/activeandroid/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Users/orishema/Library/Android/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/activeandroid/src/androidTest/java/com/activeandroid/ExampleInstrumentedTest.java b/activeandroid/src/androidTest/java/com/activeandroid/ExampleInstrumentedTest.java
new file mode 100644
index 00000000..14f06caf
--- /dev/null
+++ b/activeandroid/src/androidTest/java/com/activeandroid/ExampleInstrumentedTest.java
@@ -0,0 +1,28 @@
+package com.activeandroid;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+
+	@Test
+	public void useAppContext() throws
+			Exception {
+		// Context of the app under test.
+		Context appContext = InstrumentationRegistry.getTargetContext();
+
+		assertEquals("com.activeandroid.test", appContext.getPackageName());
+	}
+}
diff --git a/activeandroid/src/main/AndroidManifest.xml b/activeandroid/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..d8989b45
--- /dev/null
+++ b/activeandroid/src/main/AndroidManifest.xml
@@ -0,0 +1,14 @@
+<manifest package="com.activeandroid"
+
+          xmlns:android="http://schemas.android.com/apk/res/android"
+    >
+
+    <application
+        android:allowBackup="true"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        >
+
+    </application>
+
+</manifest>
diff --git a/src/com/activeandroid/ActiveAndroid.java b/activeandroid/src/main/java/com/activeandroid/ActiveAndroid.java
similarity index 100%
rename from src/com/activeandroid/ActiveAndroid.java
rename to activeandroid/src/main/java/com/activeandroid/ActiveAndroid.java
diff --git a/src/com/activeandroid/Cache.java b/activeandroid/src/main/java/com/activeandroid/Cache.java
similarity index 100%
rename from src/com/activeandroid/Cache.java
rename to activeandroid/src/main/java/com/activeandroid/Cache.java
diff --git a/src/com/activeandroid/Configuration.java b/activeandroid/src/main/java/com/activeandroid/Configuration.java
similarity index 98%
rename from src/com/activeandroid/Configuration.java
rename to activeandroid/src/main/java/com/activeandroid/Configuration.java
index b197d223..d57ebd0a 100644
--- a/src/com/activeandroid/Configuration.java
+++ b/activeandroid/src/main/java/com/activeandroid/Configuration.java
@@ -21,9 +21,10 @@
 import java.util.List;
 
 import android.content.Context;
+import android.util.Log;
 
 import com.activeandroid.serializer.TypeSerializer;
-import com.activeandroid.util.Log;
+
 import com.activeandroid.util.ReflectionUtils;
 
 public class Configuration {
@@ -289,7 +290,7 @@ private String getMetaDataSqlParserOrDefault() {
 					}
 				}
 				catch (ClassNotFoundException e) {
-					Log.e("Couldn't create class.", e);
+					Log.e("ORI","Couldn't create class.");
 				}
 			}
 
@@ -298,7 +299,7 @@ private String getMetaDataSqlParserOrDefault() {
 
 		private List<Class<? extends TypeSerializer>> loadSerializerList(String[] serializers) {
 			final List<Class<? extends TypeSerializer>> typeSerializers = new ArrayList<Class<? extends TypeSerializer>>();
-			final ClassLoader classLoader = mContext.getClass().getClassLoader();
+			final ClassLoader classLoader = mContext.getClassLoader();
 			for (String serializer : serializers) {
 				try {
 					Class serializerClass = Class.forName(serializer.trim(), false, classLoader);
@@ -307,7 +308,7 @@ private String getMetaDataSqlParserOrDefault() {
 					}
 				}
 				catch (ClassNotFoundException e) {
-					Log.e("Couldn't create class.", e);
+					Log.e("ORI","Couldn't create class.");
 				}
 			}
 
diff --git a/src/com/activeandroid/DatabaseHelper.java b/activeandroid/src/main/java/com/activeandroid/DatabaseHelper.java
similarity index 100%
rename from src/com/activeandroid/DatabaseHelper.java
rename to activeandroid/src/main/java/com/activeandroid/DatabaseHelper.java
diff --git a/src/com/activeandroid/Model.java b/activeandroid/src/main/java/com/activeandroid/Model.java
similarity index 100%
rename from src/com/activeandroid/Model.java
rename to activeandroid/src/main/java/com/activeandroid/Model.java
diff --git a/src/com/activeandroid/ModelInfo.java b/activeandroid/src/main/java/com/activeandroid/ModelInfo.java
similarity index 99%
rename from src/com/activeandroid/ModelInfo.java
rename to activeandroid/src/main/java/com/activeandroid/ModelInfo.java
index 09e79117..ce167079 100644
--- a/src/com/activeandroid/ModelInfo.java
+++ b/activeandroid/src/main/java/com/activeandroid/ModelInfo.java
@@ -49,7 +49,7 @@
 			put(Calendar.class, new CalendarSerializer());
 			put(java.sql.Date.class, new SqlDateSerializer());
 			put(java.util.Date.class, new UtilDateSerializer());
-			put(java.io.File.class, new FileSerializer());
+			put(File.class, new FileSerializer());
 		}
 	};
 
diff --git a/src/com/activeandroid/TableInfo.java b/activeandroid/src/main/java/com/activeandroid/TableInfo.java
similarity index 100%
rename from src/com/activeandroid/TableInfo.java
rename to activeandroid/src/main/java/com/activeandroid/TableInfo.java
diff --git a/src/com/activeandroid/annotation/Column.java b/activeandroid/src/main/java/com/activeandroid/annotation/Column.java
similarity index 100%
rename from src/com/activeandroid/annotation/Column.java
rename to activeandroid/src/main/java/com/activeandroid/annotation/Column.java
diff --git a/src/com/activeandroid/annotation/Table.java b/activeandroid/src/main/java/com/activeandroid/annotation/Table.java
similarity index 100%
rename from src/com/activeandroid/annotation/Table.java
rename to activeandroid/src/main/java/com/activeandroid/annotation/Table.java
diff --git a/src/com/activeandroid/app/Application.java b/activeandroid/src/main/java/com/activeandroid/app/Application.java
similarity index 100%
rename from src/com/activeandroid/app/Application.java
rename to activeandroid/src/main/java/com/activeandroid/app/Application.java
diff --git a/src/com/activeandroid/content/ContentProvider.java b/activeandroid/src/main/java/com/activeandroid/content/ContentProvider.java
similarity index 68%
rename from src/com/activeandroid/content/ContentProvider.java
rename to activeandroid/src/main/java/com/activeandroid/content/ContentProvider.java
index b4a841d6..ddc18b27 100644
--- a/src/com/activeandroid/content/ContentProvider.java
+++ b/activeandroid/src/main/java/com/activeandroid/content/ContentProvider.java
@@ -5,8 +5,13 @@
 
 import android.content.ContentValues;
 import android.content.UriMatcher;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ProviderInfo;
 import android.database.Cursor;
 import android.net.Uri;
+import android.util.Log;
 import android.util.SparseArray;
 
 import com.activeandroid.ActiveAndroid;
@@ -15,13 +20,15 @@
 import com.activeandroid.Model;
 import com.activeandroid.TableInfo;
 
-public class ContentProvider extends android.content.ContentProvider {
+public class ContentProvider
+		extends android.content.ContentProvider {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE CONSTANTS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	private static final UriMatcher URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);
-	private static final SparseArray<Class<? extends Model>> TYPE_CODES = new SparseArray<Class<? extends Model>>();
+	private static final UriMatcher                          URI_MATCHER = new UriMatcher(UriMatcher.NO_MATCH);
+	private static final SparseArray<Class<? extends Model>> TYPE_CODES  = new SparseArray<Class<? extends Model>>();
+	private static final String                              TAG         = "ActiveAndroid";
 
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE MEMBERS
@@ -41,17 +48,19 @@ public boolean onCreate() {
 
 		final List<TableInfo> tableInfos = new ArrayList<TableInfo>(Cache.getTableInfos());
 		final int size = tableInfos.size();
-		for (int i = 0; i < size; i++) {
+		for (int i = 0 ; i < size ; i++) {
 			final TableInfo tableInfo = tableInfos.get(i);
 			final int tableKey = (i * 2) + 1;
 			final int itemKey = (i * 2) + 2;
 
 			// content://<authority>/<table>
-			URI_MATCHER.addURI(sAuthority, tableInfo.getTableName().toLowerCase(), tableKey);
+			URI_MATCHER.addURI(sAuthority, tableInfo.getTableName()
+			                                        .toLowerCase(), tableKey);
 			TYPE_CODES.put(tableKey, tableInfo.getType());
 
 			// content://<authority>/<table>/<id>
-			URI_MATCHER.addURI(sAuthority, tableInfo.getTableName().toLowerCase() + "/#", itemKey);
+			URI_MATCHER.addURI(sAuthority, tableInfo.getTableName()
+			                                        .toLowerCase() + "/#", itemKey);
 			TYPE_CODES.put(itemKey, tableInfo.getType());
 		}
 
@@ -93,7 +102,8 @@ public String getType(Uri uri) {
 	@Override
 	public Uri insert(Uri uri, ContentValues values) {
 		final Class<? extends Model> type = getModelType(uri);
-		final Long id = Cache.openDatabase().insert(Cache.getTableName(type), null, values);
+		final Long id = Cache.openDatabase()
+		                     .insert(Cache.getTableName(type), null, values);
 
 		if (id != null && id > 0) {
 			Uri retUri = createUri(type, id);
@@ -108,7 +118,8 @@ public Uri insert(Uri uri, ContentValues values) {
 	@Override
 	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) {
 		final Class<? extends Model> type = getModelType(uri);
-		final int count = Cache.openDatabase().update(Cache.getTableName(type), values, selection, selectionArgs);
+		final int count = Cache.openDatabase()
+		                       .update(Cache.getTableName(type), values, selection, selectionArgs);
 
 		notifyChange(uri);
 
@@ -118,7 +129,8 @@ public int update(Uri uri, ContentValues values, String selection, String[] sele
 	@Override
 	public int delete(Uri uri, String selection, String[] selectionArgs) {
 		final Class<? extends Model> type = getModelType(uri);
-		final int count = Cache.openDatabase().delete(Cache.getTableName(type), selection, selectionArgs);
+		final int count = Cache.openDatabase()
+		                       .delete(Cache.getTableName(type), selection, selectionArgs);
 
 		notifyChange(uri);
 
@@ -128,14 +140,8 @@ public int delete(Uri uri, String selection, String[] selectionArgs) {
 	@Override
 	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
 		final Class<? extends Model> type = getModelType(uri);
-		final Cursor cursor = Cache.openDatabase().query(
-				Cache.getTableName(type),
-				projection,
-				selection,
-				selectionArgs,
-				null,
-				null,
-				sortOrder);
+		final Cursor cursor = Cache.openDatabase()
+		                           .query(Cache.getTableName(type), projection, selection, selectionArgs, null, null, sortOrder);
 
 		cursor.setNotificationUri(getContext().getContentResolver(), uri);
 
@@ -151,7 +157,8 @@ public static Uri createUri(Class<? extends Model> type, Long id) {
 		uri.append("content://");
 		uri.append(sAuthority);
 		uri.append("/");
-		uri.append(Cache.getTableName(type).toLowerCase());
+		uri.append(Cache.getTableName(type)
+		                .toLowerCase());
 
 		if (id != null) {
 			uri.append("/");
@@ -166,6 +173,24 @@ public static Uri createUri(Class<? extends Model> type, Long id) {
 	//////////////////////////////////////////////////////////////////////////////////////
 
 	protected String getAuthority() {
+		try {
+			final PackageInfo info = getContext().getPackageManager()
+			                                     .getPackageInfo(getContext().getPackageName(), PackageManager.GET_PROVIDERS);
+			ProviderInfo[] providers = info.providers;
+			if (providers != null) {
+				for (ProviderInfo pi : providers) {
+					if (pi.name != null && pi.name.equals(ContentProvider.class.getName())) {
+						return pi.authority;
+					}
+				}
+			}
+			else {
+				Log.e(TAG, "Please add the <provider> with 'android:name=\"com.activeandroid.content.ContentProvider\"' attribute to the <application> tag in the manifest");
+			}
+		} catch (PackageManager.NameNotFoundException e) {
+			e.printStackTrace();
+		}
+		Log.e(TAG, "Returning the default authority");
 		return getContext().getPackageName();
 	}
 
@@ -187,6 +212,7 @@ protected Configuration getConfiguration() {
 	}
 
 	private void notifyChange(Uri uri) {
-		getContext().getContentResolver().notifyChange(uri, null);
+		getContext().getContentResolver()
+		            .notifyChange(uri, null);
 	}
 }
diff --git a/src/com/activeandroid/query/Delete.java b/activeandroid/src/main/java/com/activeandroid/query/Delete.java
similarity index 100%
rename from src/com/activeandroid/query/Delete.java
rename to activeandroid/src/main/java/com/activeandroid/query/Delete.java
diff --git a/src/com/activeandroid/query/From.java b/activeandroid/src/main/java/com/activeandroid/query/From.java
similarity index 100%
rename from src/com/activeandroid/query/From.java
rename to activeandroid/src/main/java/com/activeandroid/query/From.java
diff --git a/src/com/activeandroid/query/Join.java b/activeandroid/src/main/java/com/activeandroid/query/Join.java
similarity index 100%
rename from src/com/activeandroid/query/Join.java
rename to activeandroid/src/main/java/com/activeandroid/query/Join.java
diff --git a/src/com/activeandroid/query/Select.java b/activeandroid/src/main/java/com/activeandroid/query/Select.java
similarity index 100%
rename from src/com/activeandroid/query/Select.java
rename to activeandroid/src/main/java/com/activeandroid/query/Select.java
diff --git a/src/com/activeandroid/query/Set.java b/activeandroid/src/main/java/com/activeandroid/query/Set.java
similarity index 100%
rename from src/com/activeandroid/query/Set.java
rename to activeandroid/src/main/java/com/activeandroid/query/Set.java
diff --git a/src/com/activeandroid/query/Sqlable.java b/activeandroid/src/main/java/com/activeandroid/query/Sqlable.java
similarity index 100%
rename from src/com/activeandroid/query/Sqlable.java
rename to activeandroid/src/main/java/com/activeandroid/query/Sqlable.java
diff --git a/src/com/activeandroid/query/Update.java b/activeandroid/src/main/java/com/activeandroid/query/Update.java
similarity index 100%
rename from src/com/activeandroid/query/Update.java
rename to activeandroid/src/main/java/com/activeandroid/query/Update.java
diff --git a/src/com/activeandroid/serializer/BigDecimalSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/BigDecimalSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/BigDecimalSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/BigDecimalSerializer.java
diff --git a/src/com/activeandroid/serializer/CalendarSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/CalendarSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/CalendarSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/CalendarSerializer.java
diff --git a/src/com/activeandroid/serializer/FileSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/FileSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/FileSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/FileSerializer.java
diff --git a/src/com/activeandroid/serializer/SqlDateSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/SqlDateSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/SqlDateSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/SqlDateSerializer.java
diff --git a/src/com/activeandroid/serializer/TypeSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/TypeSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/TypeSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/TypeSerializer.java
diff --git a/src/com/activeandroid/serializer/UUIDSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/UUIDSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/UUIDSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/UUIDSerializer.java
diff --git a/src/com/activeandroid/serializer/UtilDateSerializer.java b/activeandroid/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/UtilDateSerializer.java
rename to activeandroid/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
diff --git a/src/com/activeandroid/util/IOUtils.java b/activeandroid/src/main/java/com/activeandroid/util/IOUtils.java
similarity index 100%
rename from src/com/activeandroid/util/IOUtils.java
rename to activeandroid/src/main/java/com/activeandroid/util/IOUtils.java
diff --git a/src/com/activeandroid/util/Log.java b/activeandroid/src/main/java/com/activeandroid/util/Log.java
similarity index 100%
rename from src/com/activeandroid/util/Log.java
rename to activeandroid/src/main/java/com/activeandroid/util/Log.java
diff --git a/src/com/activeandroid/util/NaturalOrderComparator.java b/activeandroid/src/main/java/com/activeandroid/util/NaturalOrderComparator.java
similarity index 100%
rename from src/com/activeandroid/util/NaturalOrderComparator.java
rename to activeandroid/src/main/java/com/activeandroid/util/NaturalOrderComparator.java
diff --git a/src/com/activeandroid/util/ReflectionUtils.java b/activeandroid/src/main/java/com/activeandroid/util/ReflectionUtils.java
similarity index 100%
rename from src/com/activeandroid/util/ReflectionUtils.java
rename to activeandroid/src/main/java/com/activeandroid/util/ReflectionUtils.java
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/activeandroid/src/main/java/com/activeandroid/util/SQLiteUtils.java
similarity index 100%
rename from src/com/activeandroid/util/SQLiteUtils.java
rename to activeandroid/src/main/java/com/activeandroid/util/SQLiteUtils.java
diff --git a/src/com/activeandroid/util/SqlParser.java b/activeandroid/src/main/java/com/activeandroid/util/SqlParser.java
similarity index 100%
rename from src/com/activeandroid/util/SqlParser.java
rename to activeandroid/src/main/java/com/activeandroid/util/SqlParser.java
diff --git a/src/com/activeandroid/util/Tokenizer.java b/activeandroid/src/main/java/com/activeandroid/util/Tokenizer.java
similarity index 100%
rename from src/com/activeandroid/util/Tokenizer.java
rename to activeandroid/src/main/java/com/activeandroid/util/Tokenizer.java
diff --git a/src/com/activeandroid/widget/ModelAdapter.java b/activeandroid/src/main/java/com/activeandroid/widget/ModelAdapter.java
similarity index 100%
rename from src/com/activeandroid/widget/ModelAdapter.java
rename to activeandroid/src/main/java/com/activeandroid/widget/ModelAdapter.java
diff --git a/activeandroid/src/main/res/values/strings.xml b/activeandroid/src/main/res/values/strings.xml
new file mode 100644
index 00000000..77b2f45a
--- /dev/null
+++ b/activeandroid/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">ActiveAndroid</string>
+</resources>
diff --git a/activeandroid/src/test/java/com/activeandroid/ExampleUnitTest.java b/activeandroid/src/test/java/com/activeandroid/ExampleUnitTest.java
new file mode 100644
index 00000000..db069e5b
--- /dev/null
+++ b/activeandroid/src/test/java/com/activeandroid/ExampleUnitTest.java
@@ -0,0 +1,19 @@
+package com.activeandroid;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+
+	@Test
+	public void addition_isCorrect() throws
+			Exception {
+		assertEquals(4, 2 + 2);
+	}
+}
\ No newline at end of file
diff --git a/app/.gitignore b/app/.gitignore
new file mode 100644
index 00000000..796b96d1
--- /dev/null
+++ b/app/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/app/build.gradle b/app/build.gradle
new file mode 100644
index 00000000..5009a555
--- /dev/null
+++ b/app/build.gradle
@@ -0,0 +1,31 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "26.0.2"
+    defaultConfig {
+        applicationId "com.activeandroidtest"
+        minSdkVersion 15
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile project (":activeandroid")
+    compile 'com.android.support:appcompat-v7:25.+'
+    compile 'com.android.support.constraint:constraint-layout:1.0.2'
+    testCompile 'junit:junit:4.12'
+}
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
index 00000000..9fe722a4
--- /dev/null
+++ b/app/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Users/orishema/Library/Android/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/app/src/androidTest/java/com/activeandroidtest/ExampleInstrumentedTest.java b/app/src/androidTest/java/com/activeandroidtest/ExampleInstrumentedTest.java
new file mode 100644
index 00000000..9ed30498
--- /dev/null
+++ b/app/src/androidTest/java/com/activeandroidtest/ExampleInstrumentedTest.java
@@ -0,0 +1,28 @@
+package com.activeandroidtest;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+
+	@Test
+	public void useAppContext() throws
+			Exception {
+		// Context of the app under test.
+		Context appContext = InstrumentationRegistry.getTargetContext();
+
+		assertEquals("com.activeandroidtest", appContext.getPackageName());
+	}
+}
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..cd71238b
--- /dev/null
+++ b/app/src/main/AndroidManifest.xml
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest package="com.activeandroidtest"
+          xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+        </activity>
+
+        <provider
+            android:name="com.activeandroid.content.ContentProvider"
+            android:authorities="com.activeandroidtest"
+            android:enabled="true"
+            android:exported="false">
+        </provider>
+
+        <meta-data android:name="AA_DB_NAME" android:value="xxx.db" />
+        <meta-data
+            android:name="AA_MODELS"
+            android:value="com.activeandroidtest.Item, com.activeandroidtest.Category" />
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/app/src/main/java/com/activeandroidtest/Category.java b/app/src/main/java/com/activeandroidtest/Category.java
new file mode 100644
index 00000000..ab97dcd4
--- /dev/null
+++ b/app/src/main/java/com/activeandroidtest/Category.java
@@ -0,0 +1,20 @@
+package com.activeandroidtest;
+
+import com.activeandroid.Model;
+import com.activeandroid.annotation.Column;
+import com.activeandroid.annotation.Table;
+import com.activeandroid.query.Select;
+
+/**
+ * Created by orishema on 09/10/2017.
+ */
+
+@Table(name = "Categories")
+public class Category extends Model {
+	@Column(name = "Name")
+	public String name;
+
+	public static Category getRandom(){
+		return new Select().from(Category.class).where("name = ?").executeSingle();
+	}
+}
\ No newline at end of file
diff --git a/app/src/main/java/com/activeandroidtest/Item.java b/app/src/main/java/com/activeandroidtest/Item.java
new file mode 100644
index 00000000..04fd0d16
--- /dev/null
+++ b/app/src/main/java/com/activeandroidtest/Item.java
@@ -0,0 +1,18 @@
+package com.activeandroidtest;
+
+import com.activeandroid.Model;
+import com.activeandroid.annotation.Column;
+import com.activeandroid.annotation.Table;
+
+/**
+ * Created by orishema on 09/10/2017.
+ */
+
+@Table(name = "Items")
+public class Item extends Model {
+	@Column(name = "Name")
+	public String name;
+
+	@Column(name = "Category")
+	public Category category;
+}
diff --git a/app/src/main/java/com/activeandroidtest/MainActivity.java b/app/src/main/java/com/activeandroidtest/MainActivity.java
new file mode 100644
index 00000000..7562de94
--- /dev/null
+++ b/app/src/main/java/com/activeandroidtest/MainActivity.java
@@ -0,0 +1,27 @@
+package com.activeandroidtest;
+
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.activeandroid.ActiveAndroid;
+import com.activeandroid.Configuration;
+
+
+public class MainActivity
+		extends AppCompatActivity {
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		Log.v("ORI","MainActivity.OnCreate");
+//		setContentView(R.layout.activity_main);
+//		Configuration dbConfiguration = new Configuration.Builder(this).setDatabaseName("xxx.db").addModelClass(Item.class).addModelClass(Category.class).create();
+//		ActiveAndroid.initialize(dbConfiguration);
+//		Category a = new Category();
+//		a.name = "asdasd";
+//		a.save();
+//		Category.getRandom();
+	}
+}
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
index 00000000..7db31ce4
--- /dev/null
+++ b/app/src/main/res/layout/activity_main.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.activeandroidtest.MainActivity">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Hello World!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"/>
+
+</android.support.constraint.ConstraintLayout>
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.png b/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 00000000..cde69bcc
Binary files /dev/null and b/app/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 00000000..9a078e3e
Binary files /dev/null and b/app/src/main/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.png b/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 00000000..c133a0cb
Binary files /dev/null and b/app/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 00000000..efc028a6
Binary files /dev/null and b/app/src/main/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 00000000..bfa42f0e
Binary files /dev/null and b/app/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 00000000..3af2608a
Binary files /dev/null and b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 00000000..324e72cd
Binary files /dev/null and b/app/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 00000000..9bec2e62
Binary files /dev/null and b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 00000000..aee44e13
Binary files /dev/null and b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 00000000..34947cd6
Binary files /dev/null and b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
new file mode 100644
index 00000000..3ab3e9cb
--- /dev/null
+++ b/app/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
new file mode 100644
index 00000000..0abeede0
--- /dev/null
+++ b/app/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">activeAndroidTest</string>
+</resources>
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
new file mode 100644
index 00000000..5885930d
--- /dev/null
+++ b/app/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/app/src/test/java/com/activeandroidtest/ExampleUnitTest.java b/app/src/test/java/com/activeandroidtest/ExampleUnitTest.java
new file mode 100644
index 00000000..70a15174
--- /dev/null
+++ b/app/src/test/java/com/activeandroidtest/ExampleUnitTest.java
@@ -0,0 +1,19 @@
+package com.activeandroidtest;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+
+	@Test
+	public void addition_isCorrect() throws
+			Exception {
+		assertEquals(4, 2 + 2);
+	}
+}
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 5594e43b..d0aa7043 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,17 +1,23 @@
-apply plugin: 'java'
-apply from: 'gradle-mvn-push.gradle'
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
 
-targetCompatibility = '1.6'
-sourceCompatibility = '1.6'
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:2.3.2'
 
-sourceSets {
-	main {
-		java {
-			srcDir 'src'
-		}
-	}
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
 }
 
-dependencies {
-	compile fileTree(dir: 'libs', include: '*.jar')
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
 }
diff --git a/build.xml b/build.xml
deleted file mode 100644
index b2b7bfa6..00000000
--- a/build.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0"?>
-<project name="ActiveAndroid" default="dist" basedir=".">
-
-	<property name="dist.dir"  value="dist" />
-    <property name="src.dir"   value="src" />
-	<property name="build.dir" value="bin" />
-	<property name="lib.dir"   value="libs"/>
-	
-	<target name="dist" depends="clean, package" />
-
-	<target name="clean">
-		<delete dir="${build.dir}" />
-		<delete dir="${dist.dir}" />
-	</target>
-
-	<target name="init">
-		<mkdir dir="${build.dir}"/>
-		<mkdir dir="${dist.dir}" />
-	</target>
-
-	<path id="classpath">
-        <fileset dir="${lib.dir}" includes="**/*.jar"/>
-    </path>
-    
-	<target name="compile">
-    	<javac srcdir="${src.dir}" destdir="${build.dir}" source="1.5" target="1.5" classpathref="classpath" debug="off" />
-	</target>
-		
-	<target name="package" depends="init, compile">
-		<jar destfile="${dist.dir}/ActiveAndroid.jar" basedir="${build.dir}"/>
-	</target>
-</project>
diff --git a/gradle-mvn-push.gradle b/gradle-mvn-push.gradle
deleted file mode 100644
index 8b88acd9..00000000
--- a/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- * Copyright 2014 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-	return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-	return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-			: "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-	return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-			: "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-	return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-	return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-	uploadArchives {
-		repositories {
-			mavenDeployer {
-				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-				pom.groupId = GROUP
-				pom.artifactId = POM_ARTIFACT_ID
-				pom.version = VERSION_NAME
-
-				repository(url: getReleaseRepositoryUrl()) {
-					authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-				}
-				snapshotRepository(url: getSnapshotRepositoryUrl()) {
-					authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-				}
-
-				pom.project {
-					name POM_NAME
-					packaging POM_PACKAGING
-					description POM_DESCRIPTION
-					url POM_URL
-
-					scm {
-						url POM_SCM_URL
-						connection POM_SCM_CONNECTION
-						developerConnection POM_SCM_DEV_CONNECTION
-					}
-
-					licenses {
-						license {
-							name POM_LICENCE_NAME
-							url POM_LICENCE_URL
-							distribution POM_LICENCE_DIST
-						}
-					}
-
-					developers {
-						developer {
-							id POM_DEVELOPER_ID
-							name POM_DEVELOPER_NAME
-						}
-					}
-				}
-			}
-		}
-	}
-
-	signing {
-		required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-		sign configurations.archives
-	}
-
-	task javadocs(type: Javadoc) {
-		source = sourceSets.main.allJava
-		classpath = configurations.compile
-	}
-
-	task javadocsJar(type: Jar, dependsOn: javadocs) {
-		classifier = 'javadoc'
-		from javadocs.destinationDir
-	}
-
-	task sourcesJar(type: Jar) {
-		classifier = 'sources'
-		from sourceSets.main.allJava
-	}
-
-	artifacts {
-		archives sourcesJar
-		archives javadocsJar
-	}
-}
diff --git a/gradle.properties b/gradle.properties
index 424d885a..aac7c9b4 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,18 +1,17 @@
-VERSION_NAME=3.1.0-SNAPSHOT
-VERSION_CODE=1
-GROUP=com.michaelpardo
+# Project-wide Gradle settings.
 
-POM_DESCRIPTION=Active record style SQLite persistence for Android.
-POM_URL=https://github.com/pardom/ActiveAndroid
-POM_SCM_URL=https://github.com/pardom/ActiveAndroid
-POM_SCM_CONNECTION=scm:git@github.com:pardom/ActiveAndroid.git
-POM_SCM_DEV_CONNECTION=scm:git@github.com:pardom/ActiveAndroid.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=michaelpardo
-POM_DEVELOPER_NAME=Michael Pardo
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
 
-POM_NAME=ActiveAndroid
-POM_ARTIFACT_ID=activeandroid
-POM_PACKAGING=jar
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx1536m
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 667288ad..13372aef 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 330a2c9f..ee64703a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Nov 29 09:06:20 EST 2013
+#Mon Oct 09 16:05:08 IDT 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.8-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/gradlew b/gradlew
index 91a7e269..9d82f789 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/libs/android-support-v4.jar b/libs/android-support-v4.jar
deleted file mode 100644
index 428bdbc0..00000000
Binary files a/libs/android-support-v4.jar and /dev/null differ
diff --git a/libs/android.jar b/libs/android.jar
deleted file mode 100644
index 4274d2b0..00000000
Binary files a/libs/android.jar and /dev/null differ
diff --git a/output/activeAndroid-3.1.1.jar b/output/activeAndroid-3.1.1.jar
new file mode 100644
index 00000000..2ff2f201
Binary files /dev/null and b/output/activeAndroid-3.1.1.jar differ
diff --git a/pom-child.xml b/pom-child.xml
deleted file mode 100644
index 4f0c72df..00000000
--- a/pom-child.xml
+++ /dev/null
@@ -1,93 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project
-    xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.activeandroid</groupId>
-    <artifactId>activeandroid</artifactId>
-    <version>3.1-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>ActiveAndroid</name>
-
-    <licenses>
-        <license>
-            <name>The Apache Software License, Version 2.0</name>
-            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
-            <distribution>repo</distribution>
-        </license>
-    </licenses>
-
-  <parent>
-    <groupId>com.activeandroid</groupId>
-    <artifactId>activeandroid-parent</artifactId>
-    <version>3.1-SNAPSHOT</version>
-    <relativePath>./pom.xml</relativePath>
-  </parent>
-
-    <scm>
-        <connection>scm:git:git@github.com:pardom/ActiveAndroid.git</connection>
-        <developerConnection>scm:git:git@github.com:pardom/ActiveAndroid.git</developerConnection>
-        <url>git@github.com:pardom/ActiveAndroid.git</url>
-    </scm>
-
-    <properties>
-        <java.version>1.6</java.version>
-        <platform.sdk>16</platform.sdk>
-        <platform.version>4.1.1.4</platform.version>
-        <platform.support-version>r7</platform.support-version>
-    </properties>
-
-    <dependencies>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>${platform.version}</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android-test</artifactId>
-            <version>${platform.version}</version>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>support-v4</artifactId>
-            <version>${platform.support-version}</version>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <sourceDirectory>src</sourceDirectory>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.14.1</version>
-            </plugin>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>3.1</version>
-                <configuration>
-                    <source>${java.version}</source>
-                    <target>${java.version}</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>3.8.2</version>
-                <configuration>
-                    <sdk>
-                        <path>${env.ANDROID_HOME}</path>
-                        <platform>${platform.sdk}</platform>
-                    </sdk>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
diff --git a/pom.xml b/pom.xml
deleted file mode 100644
index eafb111c..00000000
--- a/pom.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.activeandroid</groupId>
-  <artifactId>activeandroid-parent</artifactId>
-  <version>3.1-SNAPSHOT</version>
-  <packaging>pom</packaging>
-  <name>ActiveAndroid - Parent</name>
-
-  <modules>
-    <module>pom-child.xml</module>
-    <module>tests</module>
-  </modules>
-
-    <properties>
-        <java.version>1.6</java.version>
-        <platform.sdk>16</platform.sdk>
-        <platform.version>4.1.1.4</platform.version>
-        <platform.support-version>r7</platform.support-version>
-    </properties>
-
-  <build>
-    <pluginManagement>
-      <plugins>
-        <plugin>
-          <groupId>com.jayway.maven.plugins.android.generation2</groupId>
-          <artifactId>android-maven-plugin</artifactId>
-          <version>3.8.2</version>
-        </plugin>
-        <plugin>
-          <artifactId>maven-compiler-plugin</artifactId>
-          <version>3.1</version>
-        </plugin>
-      </plugins>
-    </pluginManagement>
-  </build>
-</project>
diff --git a/settings.gradle b/settings.gradle
new file mode 100644
index 00000000..da855dac
--- /dev/null
+++ b/settings.gradle
@@ -0,0 +1 @@
+include ':app', ':activeandroid'
diff --git a/tests/.gitignore b/tests/.gitignore
deleted file mode 100644
index 6d0dc1c1..00000000
--- a/tests/.gitignore
+++ /dev/null
@@ -1,34 +0,0 @@
-#Android generated
-bin
-gen
-lint.xml
-
-#Eclipse
-.project
-.classpath
-.settings
-.checkstyle
-
-#IntelliJ IDEA
-.idea
-*.iml
-*.ipr
-*.iws
-classes
-gen-external-apklibs
-
-#Maven
-target
-release.properties
-pom.xml.*
-
-#Ant
-build.xml
-ant.properties
-local.properties
-proguard.cfg
-proguard-project.txt
-
-#Other
-.DS_Store
-tmp
diff --git a/tests/AndroidManifest.xml b/tests/AndroidManifest.xml
deleted file mode 100644
index 925693a9..00000000
--- a/tests/AndroidManifest.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.activeandroid.test"
-    android:versionCode="1"
-    android:versionName="1.0" >
-
-    <uses-sdk android:minSdkVersion="4" />
-
-    <instrumentation
-        android:name="android.test.InstrumentationTestRunner"
-        android:targetPackage="com.activeandroid.test" />
-
-    <application
-        android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name" >
-        <uses-library android:name="android.test.runner" />
-    </application>
-
-</manifest>
\ No newline at end of file
diff --git a/tests/assets/migrations/2.sql b/tests/assets/migrations/2.sql
deleted file mode 100644
index 9281dd77..00000000
--- a/tests/assets/migrations/2.sql
+++ /dev/null
@@ -1,18 +0,0 @@
-CREATE TABLE IF NOT EXISTS MockMigration
-(
-	Id INTEGER AUTO_INCREMENT PRIMARY KEY,
-	Column TEXT NOT NULL
-);
-
-INSERT INTO MockMigration
-(
-	Id,
-	Column
-)
-VALUES
-(
-	1,
-	'text'
-);
-
-DROP TABLE IF EXISTS MockMigration;
diff --git a/tests/pom.xml b/tests/pom.xml
deleted file mode 100644
index 6db50e11..00000000
--- a/tests/pom.xml
+++ /dev/null
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project
-  xmlns="http://maven.apache.org/POM/4.0.0"
-  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  
-  <modelVersion>4.0.0</modelVersion>
-
-  <parent>
-    <groupId>com.activeandroid</groupId>
-    <artifactId>activeandroid-parent</artifactId>
-    <version>3.1-SNAPSHOT</version>
-  </parent>
-
-  <groupId>com.activeandroid</groupId>
-  <artifactId>activeandroid-tests</artifactId>
-  <version>3.1-SNAPSHOT</version>
-  <packaging>apk</packaging>
-  <name>ActiveAndroid - Tests</name>
-
-    <properties>
-        <java.version>1.6</java.version>
-        <platform.sdk>16</platform.sdk>
-        <platform.version>4.1.1.4</platform.version>
-        <platform.support-version>r7</platform.support-version>
-    </properties>
-
-  <dependencies>
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android-test</artifactId>
-      <version>${platform.version}</version>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.activeandroid</groupId>
-      <artifactId>activeandroid</artifactId>
-      <type>jar</type>
-      <version>3.1-SNAPSHOT</version>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>4.10</version>
-      <scope>provided</scope>
-    </dependency>
-  </dependencies>
-  <build>
-    <sourceDirectory>src</sourceDirectory>
-    <plugins>
-      <plugin>
-        <groupId>com.jayway.maven.plugins.android.generation2</groupId>
-        <artifactId>android-maven-plugin</artifactId>
-        <version>3.8.2</version>
-        <configuration>
-          <androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
-          <assetsDirectory>${project.basedir}/assets</assetsDirectory>
-          <resourceDirectory>${project.basedir}/res</resourceDirectory>
-          <sdk>
-            <platform>${platform.sdk}</platform>
-          </sdk>
-          <undeployBeforeDeploy>true</undeployBeforeDeploy>
-          <test>
-            <createReport>true</createReport>
-          </test>
-        </configuration>
-        <extensions>true</extensions>
-      </plugin>
-      <plugin>
-        <artifactId>maven-compiler-plugin</artifactId>
-        <version>3.1</version>
-        <configuration>
-          <source>${java.version}</source>
-          <target>${java.version}</target>
-        </configuration>
-      </plugin>
-    </plugins>
-  </build>
-</project>
diff --git a/tests/project.properties b/tests/project.properties
deleted file mode 100644
index a3ee5ab6..00000000
--- a/tests/project.properties
+++ /dev/null
@@ -1,14 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system edit
-# "ant.properties", and override values to adapt the script to your
-# project structure.
-#
-# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
-#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
-
-# Project target.
-target=android-17
diff --git a/tests/res/drawable-hdpi/ic_launcher.png b/tests/res/drawable-hdpi/ic_launcher.png
deleted file mode 100644
index 96a442e5..00000000
Binary files a/tests/res/drawable-hdpi/ic_launcher.png and /dev/null differ
diff --git a/tests/res/drawable-ldpi/ic_launcher.png b/tests/res/drawable-ldpi/ic_launcher.png
deleted file mode 100644
index 99238729..00000000
Binary files a/tests/res/drawable-ldpi/ic_launcher.png and /dev/null differ
diff --git a/tests/res/drawable-mdpi/ic_launcher.png b/tests/res/drawable-mdpi/ic_launcher.png
deleted file mode 100644
index 359047df..00000000
Binary files a/tests/res/drawable-mdpi/ic_launcher.png and /dev/null differ
diff --git a/tests/res/drawable-xhdpi/ic_launcher.png b/tests/res/drawable-xhdpi/ic_launcher.png
deleted file mode 100644
index 71c6d760..00000000
Binary files a/tests/res/drawable-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/tests/res/raw/block_comment.sql b/tests/res/raw/block_comment.sql
deleted file mode 100644
index 081e5e72..00000000
--- a/tests/res/raw/block_comment.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER /* This is a block comment and should be ignored */
-)
diff --git a/tests/res/raw/block_comment_with_semicolon.sql b/tests/res/raw/block_comment_with_semicolon.sql
deleted file mode 100644
index ba88da24..00000000
--- a/tests/res/raw/block_comment_with_semicolon.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, /* block comment ; with semicolon */
-	Column1 INTEGER
-)
diff --git a/tests/res/raw/block_comment_with_string.sql b/tests/res/raw/block_comment_with_string.sql
deleted file mode 100644
index 982bacf3..00000000
--- a/tests/res/raw/block_comment_with_string.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER /* This is a block comment 'with a string that doesn't matter' */
-)
diff --git a/tests/res/raw/block_with_line_comment.sql b/tests/res/raw/block_with_line_comment.sql
deleted file mode 100644
index 7279803a..00000000
--- a/tests/res/raw/block_with_line_comment.sql
+++ /dev/null
@@ -1,4 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, /* This is a block comment -- not a line comment */ Column1 INTEGER 
-)
diff --git a/tests/res/raw/complex.sql b/tests/res/raw/complex.sql
deleted file mode 100644
index 611ad37a..00000000
--- a/tests/res/raw/complex.sql
+++ /dev/null
@@ -1,38 +0,0 @@
--- Create table for migration
-CREATE TABLE Entity2
-(
-    Id INTEGER AUTO_INCREMENT PRIMARY KEY,
-    Column TEXT NOT NULL,
-    Column2 INTEGER NULL /* this column is new */
-);
-
--- Migrate data
-INSERT INTO Entity2
-(
-    Id,
-    Column, /* --> ; <-- */
-    Column2
-)
-SELECT  Id,
-        Column,
-        0 -- there's no such value in the old table
-        FROM Entity;
-
--- Rename Entity2 to Entity
-DROP TABLE Entity;
-ALTER TABLE Entity2 RENAME TO Entity;
-
-/* Add some --sample-- data */
-INSERT INTO Entity2
-(
-    Id, --;'/*;*/--
-    Col/*not sure if anyone would ever be insane enough to do this*/umn,
-    Column2--,
-)
-VALUES
-(
-	9001 /* not -- really */, -- almost forgot that comma
-	42,--23, /* I don't know who messed this up
-	'string /* string */ -- string'--,
-	-- 'test' whoops we don't have that many columns
-)
\ No newline at end of file
diff --git a/tests/res/raw/invalid_block_comment.sql b/tests/res/raw/invalid_block_comment.sql
deleted file mode 100644
index 07dfd474..00000000
--- a/tests/res/raw/invalid_block_comment.sql
+++ /dev/null
@@ -1,6 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	 /* /* /* This is an invalid block comment */ */
-	Column1 INTEGER
-)
diff --git a/tests/res/raw/line_comment.sql b/tests/res/raw/line_comment.sql
deleted file mode 100644
index d7e91e05..00000000
--- a/tests/res/raw/line_comment.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER -- This is a line comment and should be ignored
-)
diff --git a/tests/res/raw/line_comment_and_block_end.sql b/tests/res/raw/line_comment_and_block_end.sql
deleted file mode 100644
index f555f40a..00000000
--- a/tests/res/raw/line_comment_and_block_end.sql
+++ /dev/null
@@ -1,6 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	-- This is a line comment and should be ignored */ NonColumn STRING,
-	Column1 INTEGER
-)
diff --git a/tests/res/raw/line_comment_with_semicolon.sql b/tests/res/raw/line_comment_with_semicolon.sql
deleted file mode 100644
index a2d0c421..00000000
--- a/tests/res/raw/line_comment_with_semicolon.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, -- line comment ; with semicolon
-	Column1 INTEGER
-)
diff --git a/tests/res/raw/line_comment_with_string.sql b/tests/res/raw/line_comment_with_string.sql
deleted file mode 100644
index 6c05cb99..00000000
--- a/tests/res/raw/line_comment_with_string.sql
+++ /dev/null
@@ -1,5 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER -- This is a line comment 'with a string that doesn't matter'
-)
diff --git a/tests/res/raw/string_with_block_comment.sql b/tests/res/raw/string_with_block_comment.sql
deleted file mode 100644
index 04e89364..00000000
--- a/tests/res/raw/string_with_block_comment.sql
+++ /dev/null
@@ -1,12 +0,0 @@
-INSERT INTO Entity
-(
-	Id,
-	Column1,
-	Column2
-)
-VALUES
-(
-	1,
-	'/* some text',
-	'some text */'
-);
\ No newline at end of file
diff --git a/tests/res/raw/string_with_line_comment.sql b/tests/res/raw/string_with_line_comment.sql
deleted file mode 100644
index 4ba8fb7b..00000000
--- a/tests/res/raw/string_with_line_comment.sql
+++ /dev/null
@@ -1,12 +0,0 @@
-INSERT INTO Entity
-(
-	Id,
-	Column1,
-	Column2
-)
-VALUES
-(
-	1,
-	'-- some text',
-	'some text'
-);
\ No newline at end of file
diff --git a/tests/res/raw/string_with_semicolon.sql b/tests/res/raw/string_with_semicolon.sql
deleted file mode 100644
index 47bcb840..00000000
--- a/tests/res/raw/string_with_semicolon.sql
+++ /dev/null
@@ -1,12 +0,0 @@
-INSERT INTO Entity
-(
-	Id,
-	Column1,
-	Column2
-)
-VALUES
-(
-	1,
-	'some ; text',
-	'some ; text'
-);
\ No newline at end of file
diff --git a/tests/res/raw/string_with_whitespace.sql b/tests/res/raw/string_with_whitespace.sql
deleted file mode 100644
index 2ba29ac3..00000000
--- a/tests/res/raw/string_with_whitespace.sql
+++ /dev/null
@@ -1,12 +0,0 @@
-INSERT INTO Entity
-(
-	Id,
-	Column1,
-	Column2
-)
-VALUES
-(
-	1,
-	'some			text',
-	'some    text'
-);
\ No newline at end of file
diff --git a/tests/res/raw/two_statements.sql b/tests/res/raw/two_statements.sql
deleted file mode 100644
index ad87c403..00000000
--- a/tests/res/raw/two_statements.sql
+++ /dev/null
@@ -1,11 +0,0 @@
-CREATE TABLE Entity1
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER
-);
-
-CREATE TABLE Entity2
-(
-	Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL,
-	Column1 INTEGER
-)
diff --git a/tests/res/raw/whitespace.sql b/tests/res/raw/whitespace.sql
deleted file mode 100644
index 97eb6f2a..00000000
--- a/tests/res/raw/whitespace.sql
+++ /dev/null
@@ -1,36 +0,0 @@
-CREATE TABLE Entity1
-
-
-(
-
-
-
-
-
-
-
-
-
-
-
-
-	Id INTEGER AUTOINCREMENT                         PRIMARY KEY NOT NULL,
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	
-	Column1					INTEGER
-);
\ No newline at end of file
diff --git a/tests/res/values/strings.xml b/tests/res/values/strings.xml
deleted file mode 100644
index 2d1ce35a..00000000
--- a/tests/res/values/strings.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <string name="app_name">TestsTest</string>
-
-</resources>
\ No newline at end of file
diff --git a/tests/src/com/activeandroid/test/ActiveAndroidTestCase.java b/tests/src/com/activeandroid/test/ActiveAndroidTestCase.java
deleted file mode 100644
index 3b5fab1f..00000000
--- a/tests/src/com/activeandroid/test/ActiveAndroidTestCase.java
+++ /dev/null
@@ -1,44 +0,0 @@
-package com.activeandroid.test;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import android.test.ApplicationTestCase;
-
-import com.activeandroid.app.Application;
-
-public abstract class ActiveAndroidTestCase extends ApplicationTestCase<Application> {
-	public ActiveAndroidTestCase() {
-		super(Application.class);
-	}
-
-	protected void setUp() throws Exception {
-		super.setUp();
-		createApplication();
-	}
-
-	protected void tearDown() throws Exception {
-		super.tearDown();
-	}
-
-	public static <T> void assertArrayEquals(T[] actual, T... expected) {
-		assertEquals(expected.length, actual.length);
-		
-		for (int i = 0; i < expected.length; i++) {
-			assertEquals(expected[i], actual[i]);
-		}
-	}
-}
diff --git a/tests/src/com/activeandroid/test/CacheTest.java b/tests/src/com/activeandroid/test/CacheTest.java
deleted file mode 100644
index c8ca401a..00000000
--- a/tests/src/com/activeandroid/test/CacheTest.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package com.activeandroid.test;
-
-import android.test.AndroidTestCase;
-
-import com.activeandroid.ActiveAndroid;
-import com.activeandroid.Cache;
-import com.activeandroid.Configuration;
-import com.activeandroid.Model;
-import com.activeandroid.TableInfo;
-import com.activeandroid.annotation.Table;
-
-import java.util.Collection;
-
-public class CacheTest extends AndroidTestCase {
-
-    @Override
-    protected void setUp() {
-        Configuration conf = new Configuration.Builder(getContext())
-                .setDatabaseName("CacheTest")
-                .addModelClasses(CacheTestModel.class, CacheTestModel2.class)
-                .create();
-        ActiveAndroid.initialize(conf, true);
-    }
-
-    public void testGetTableInfos() {
-        assertNotNull(Cache.getContext());
-        Collection<TableInfo> tableInfos = Cache.getTableInfos();
-        assertEquals(2, tableInfos.size());
-
-        {
-            TableInfo tableInfo = Cache.getTableInfo(CacheTestModel.class);
-            assertNotNull(tableInfo);
-            assertEquals("CacheTestModel", tableInfo.getTableName());
-        }
-
-        {
-            TableInfo tableInfo = Cache.getTableInfo(CacheTestModel2.class);
-            assertNotNull(tableInfo);
-            assertEquals("CacheTestModel2", tableInfo.getTableName());
-        }
-    }
-
-    @Table(name = "CacheTestModel")
-    private static class CacheTestModel extends Model {
-    }
-
-    @Table(name = "CacheTestModel2")
-    private static class CacheTestModel2 extends Model {
-    }
-}
diff --git a/tests/src/com/activeandroid/test/ConfigurationTest.java b/tests/src/com/activeandroid/test/ConfigurationTest.java
deleted file mode 100644
index 12ca4a72..00000000
--- a/tests/src/com/activeandroid/test/ConfigurationTest.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.activeandroid.test;
-
-import com.activeandroid.Configuration;
-import com.activeandroid.Model;
-import com.activeandroid.annotation.Table;
-
-import android.test.AndroidTestCase;
-
-import java.io.IOException;
-import java.util.List;
-
-public class ConfigurationTest extends AndroidTestCase {
-
-    public void testDefaultValue() throws IOException, ClassNotFoundException {
-        Configuration conf = new Configuration.Builder(getContext()).create();
-        assertNotNull(conf.getContext());
-        assertEquals(1024, conf.getCacheSize());
-        assertEquals("Application.db", conf.getDatabaseName());
-        assertEquals(1, conf.getDatabaseVersion());
-        assertNull(conf.getModelClasses());
-        assertFalse(conf.isValid());
-        assertNull(conf.getTypeSerializers());
-        assertEquals(Configuration.SQL_PARSER_LEGACY, conf.getSqlParser());
-    }
-
-    public void testCreateConfigurationWithMockModel() {
-        Configuration conf = new Configuration.Builder(getContext())
-                .addModelClass(ConfigurationTestModel.class)
-                .create();
-        List<Class<? extends Model>> modelClasses = conf.getModelClasses();
-        assertEquals(1, modelClasses.size());
-        assertTrue(conf.isValid());
-    }
-
-    @Table(name = "ConfigurationTestModel")
-    private static class ConfigurationTestModel extends Model {
-    }
-}
diff --git a/tests/src/com/activeandroid/test/MockModel.java b/tests/src/com/activeandroid/test/MockModel.java
deleted file mode 100644
index ff61dde3..00000000
--- a/tests/src/com/activeandroid/test/MockModel.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package com.activeandroid.test;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.Model;
-import com.activeandroid.annotation.Column;
-import com.activeandroid.annotation.Table;
-
-import java.util.Date;
-
-@Table(name = "MockModel")
-public class MockModel extends Model {
-    @Column
-    public Date dateField;
-
-    @Column
-    public double doubleField;
-
-    @Column
-    public int intField;
-
-    @Column
-    public boolean booleanField;
-}
diff --git a/tests/src/com/activeandroid/test/ModelTest.java b/tests/src/com/activeandroid/test/ModelTest.java
deleted file mode 100644
index e66690d8..00000000
--- a/tests/src/com/activeandroid/test/ModelTest.java
+++ /dev/null
@@ -1,267 +0,0 @@
-/*
- * Copyright (C) 2013 Vojtech Sigler.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.activeandroid.test;
-
-import com.activeandroid.Cache;
-import com.activeandroid.Model;
-import com.activeandroid.TableInfo;
-import com.activeandroid.annotation.Column;
-import com.activeandroid.annotation.Table;
-import com.activeandroid.query.Select;
-
-import java.lang.reflect.Field;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
-/**
- * Simple test now covering equals and hashcode methods.
- */
-public class ModelTest extends ActiveAndroidTestCase {
-
-	/**
-	 * Equals should be type-safe.
-	 */	
-	public void testEqualsNonModel() {
-		MockModel model = new MockModel();
-
-		assertFalse(model.equals("Dummy"));
-		assertFalse(model.equals(null));
-	}
-
-	/**
-	 * Equals should not be true for different model classes.
-	 */	
-	public void testEqualsDifferentModel() {
-		Model model1 = new MockModel();
-		Model model2 = new AnotherMockModel();
-
-		assertFalse(model1.equals(model2));
-	}
-
-	/**
-	 * A new object does not have PK assigned yet,
-	 * therefore by default it is equal only to itself.
-	 */	
-	public void testEqualsOnNew() {
-		MockModel model1 = new MockModel();
-		MockModel model2 = new MockModel();
-
-		assertFalse(model1.equals(model2));
-		assertFalse(model2.equals(model1));
-		assertTrue(model1.equals(model1));  //equal only to itself
-	}
-
-	/**
-	 * Two different rows in a table should not be equal (different ids).
-	 */	
-	public void testEqualsDifferentRows() {
-		MockModel model1 = new MockModel();
-		MockModel model2 = new MockModel();
-		MockModel model3;
-
-		model1.save();
-		model2.save();
-		model3 = Model.load(MockModel.class, model1.getId());
-
-        // Not equal to each other.
-		assertFalse(model1.equals(model2));
-		assertFalse(model2.equals(model1));
-
-        // Equal to each other when loaded.
-		assertTrue(model1.equals(model3));
-		assertTrue(model1.equals(model3));
-
-        // Loaded model is not equal to a different model.
-		assertFalse(model3.equals(model2));
-		assertFalse(model2.equals(model3));
-	}
-
-	/**
-	 * Tests hashcode for new instances.
-	 */	
-	public void testHashCode() {
-		Set<Model> set = new HashSet<Model>();
-		Model m1 = new MockModel();
-		Model m2 = new MockModel();
-		Model m3 = new AnotherMockModel();
-
-		assertFalse(m1.hashCode() == m2.hashCode()); // hashes for unsaved models must not match
-		set.add(m1);
-		set.add(m2);
-		assertEquals(2, set.size()); //try in a set
-
-		assertFalse(m1.hashCode() == m3.hashCode());
-		set.add(m3);
-		assertEquals(3, set.size());
-	}
-
-	/**
-	 * Two rows in a table should have different hashcodes.
-	 */
-	public void testHashCodeDifferentRows() {
-		Set<Model> set = new HashSet<Model>();
-		Model m1 = new MockModel();
-		Model m2 = new MockModel();
-		Model m3;
-
-		m1.save();
-		m2.save();
-		m3 = Model.load(MockModel.class, m1.getId());
-
-		assertEquals(m1.hashCode(), m3.hashCode());
-		assertFalse(m1.hashCode() == m2.hashCode());
-		set.add(m1);
-		set.add(m2);
-		set.add(m3);
-		assertEquals(2, set.size());
-	}
-
-    /**
-     * Column names should default to the field name.
-     */
-    public void testColumnNamesDefaulToFieldNames() {
-        TableInfo tableInfo = Cache.getTableInfo(MockModel.class);
-
-        for ( Field field : tableInfo.getFields() ) {
-            // Id column is a special case, we'll ignore that one.
-            if ( field.getName().equals("mId") ) continue;
-
-            assertEquals(field.getName(), tableInfo.getColumnName(field));
-        }
-    }
-
-    /**
-     * Boolean should handle integer (0/1) and boolean (false/true) values.
-     */
-    public void testBooleanColumnType() {
-        MockModel mockModel = new MockModel();
-        mockModel.booleanField = false;
-        Long id = mockModel.save();
-
-        boolean databaseBooleanValue = MockModel.load( MockModel.class, id ).booleanField;
-
-        assertEquals( false, databaseBooleanValue );
-
-        // Test passing both a integer and a boolean into the where conditional.
-        assertEquals(
-                mockModel,
-                new Select().from(MockModel.class).where("booleanField = ?", 0).executeSingle() );
-
-        assertEquals(
-                mockModel,
-                new Select().from(MockModel.class).where("booleanField = ?", false).executeSingle() );
-
-        assertNull( new Select().from(MockModel.class).where("booleanField = ?", 1).executeSingle() );
-
-        assertNull( new Select().from(MockModel.class).where("booleanField = ?", true).executeSingle() );
-    }
-
-	/**
-     * Test to check the join of two (or more) tables with some fields in common when not use a projection on select.
-     * Test the issue #106 (https://github.com/pardom/ActiveAndroid/issues/106)
-     */
-    public void testJoinWithSameNames(){
-        //create a parent entity and store
-        ParentJoinMockModel parent = new ParentJoinMockModel();
-        parent.booleanField = true;
-        parent.dateField = new Date();
-        parent.doubleField = 2.0;
-        parent.intField = 1;
-        parent.save();
-
-        //the values to assign to child
-        Date dateValue = new Date();
-        double doubleValue = 30.0;
-        int intValue = 3;
-
-        //create two child entities, relate with parent and save
-        ChildMockModel child1 = new ChildMockModel();
-        child1.booleanField = false;
-        child1.dateField = dateValue;
-        child1.doubleField = doubleValue;
-        child1.intField = intValue;
-        child1.parent = parent;
-        child1.save();
-
-        ChildMockModel child2 = new ChildMockModel();
-        child2.booleanField = false;
-        child2.dateField = dateValue;
-        child2.doubleField = doubleValue;
-        child2.intField = intValue;
-        child2.parent = parent;
-        child2.save();
-
-        //Store the ids assigned to child entities when persists
-        List<Long> ids = new ArrayList<Long>();
-        ids.add(child1.getId());
-        ids.add(child2.getId());
-
-        //make the query with a join
-        List<ChildMockModel> result = new Select().from(ChildMockModel.class).
-                join(ParentJoinMockModel.class).on("ParentJoinMockModel.Id = ChildMockModel.parent").execute();
-
-        //check result
-        assertNotNull(result);
-        assertEquals(result.size(), 2);
-        for(ChildMockModel currentModel : result){
-            assertFalse(currentModel.booleanField);
-            assertEquals(currentModel.intField, intValue);
-            assertEquals(currentModel.doubleField, doubleValue);
-            assertTrue(ids.contains(currentModel.getId()));
-        }
-
-    }
-
-	/**
-	 * Mock model as we need 2 different model classes.
-	 */
-	@Table(name = "AnotherMockTable")
-	public static class AnotherMockModel extends Model {}
-
-    /**
-     * Mock model to test joins with same names.
-     * It's a copy from MockModel.
-     */
-    @Table(name = "ParentJoinMockModel")
-    public static class ParentJoinMockModel extends Model {
-        @Column
-        public Date dateField;
-
-        @Column
-        public double doubleField;
-
-        @Column
-        public int intField;
-
-        @Column
-        public boolean booleanField;
-    }
-
-    /**
-     * Mock model to test joins with same names.
-     * Extends from ParentJoinMockModel to have the same columns.
-     * Have a relationship with ParentJoinMockModel to make te join query.
-     */
-    @Table(name = "ChildMockModel")
-    public static class ChildMockModel extends ParentJoinMockModel {
-        @Column
-        ParentJoinMockModel parent;
-    }
-}
diff --git a/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java b/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java
deleted file mode 100644
index 971b8a89..00000000
--- a/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java
+++ /dev/null
@@ -1,54 +0,0 @@
-
-package com.activeandroid.test.parser;
-
-import android.database.SQLException;
-import android.database.sqlite.SQLiteDatabase;
-
-import com.activeandroid.Configuration;
-import com.activeandroid.DatabaseHelper;
-import com.activeandroid.test.ActiveAndroidTestCase;
-
-
-public class ParserConfigurationTest extends ActiveAndroidTestCase {
-
-    /**
-     * Should try to use the legacy parser by default, which is be unable to handle the SQL script.
-     */
-    public void testLegacyMigration() {
-
-        try {
-            Configuration configuration = new Configuration.Builder(getContext())
-                    .setDatabaseName("migration.db")
-                    .setDatabaseVersion(2)
-                    .create();
-
-            DatabaseHelper helper = new DatabaseHelper(configuration);
-            SQLiteDatabase db = helper.getWritableDatabase();
-            helper.onUpgrade(db, 1, 2);
-
-            fail("Should not be able to parse the SQL script.");
-
-        } catch (SQLException e) {
-            final String message = e.getMessage();
-
-            assertNotNull(message);
-            assertTrue(message.contains("syntax error"));
-            assertTrue(message.contains("near \"MockMigration\""));
-        }
-    }
-
-    /**
-     * Should use the new parser if configured to do so.
-     */
-    public void testDelimitedMigration() {
-        Configuration configuration = new Configuration.Builder(getContext())
-                .setSqlParser(Configuration.SQL_PARSER_DELIMITED)
-                .setDatabaseName("migration.db")
-                .setDatabaseVersion(2)
-                .create();
-
-        DatabaseHelper helper = new DatabaseHelper(configuration);
-        SQLiteDatabase db = helper.getWritableDatabase();
-        helper.onUpgrade(db, 1, 2);
-    }
-}
diff --git a/tests/src/com/activeandroid/test/parser/ParserTest.java b/tests/src/com/activeandroid/test/parser/ParserTest.java
deleted file mode 100644
index 164376b3..00000000
--- a/tests/src/com/activeandroid/test/parser/ParserTest.java
+++ /dev/null
@@ -1,247 +0,0 @@
-
-package com.activeandroid.test.parser;
-
-import com.activeandroid.test.ActiveAndroidTestCase;
-import com.activeandroid.test.R;
-import com.activeandroid.util.SqlParser;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.List;
-
-
-public class ParserTest extends ActiveAndroidTestCase {
-
-    private final String sql1    = "CREATE TABLE Entity1 ( Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, Column1 INTEGER )";
-    private final String sql2    = "CREATE TABLE Entity2 ( Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, Column1 INTEGER )";
-
-    private final String invalid = "CREATE TABLE Entity1 ( Id INTEGER AUTOINCREMENT PRIMARY KEY NOT NULL, */ Column1 INTEGER )";
-
-    private InputStream getStream(int id) {
-        return this.getContext().getResources().openRawResource(id);
-    }
-
-    /**
-     * Should be able to parse a script with two multi-line statments, even if the last statement
-     * is not terminated by a semicolon.
-     * @throws IOException
-     */
-    public void testTwoStatements() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.two_statements);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(2, commands.size());
-        assertEquals(sql1, commands.get(0));
-        assertEquals(sql2, commands.get(1));
-    }
-
-    /**
-     * Should reduce unnecessary whitespace.
-     * @throws IOException
-     */
-    public void testWhitespace() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.whitespace);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to parse a multi-line statement that has an embedded line comment.
-     * @throws IOException
-     */
-    public void testLineComment() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.line_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a line comment that contains string tokens.
-     * @throws IOException
-     */
-    public void testLineCommentWithString() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.line_comment_with_string);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a line comment that contains a semicolon.
-     * @throws IOException
-     */
-    public void testLineCommentWithSemicolon() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.line_comment_with_semicolon);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should ignore a block comment end token inside a line comment.
-     * @throws IOException
-     */
-    public void testLineAndBlockEndComment() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.line_comment_and_block_end);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a block comment.
-     * @throws IOException
-     */
-    public void testBlockComment() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.block_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a block comment that contains string tokens.
-     * @throws IOException
-     */
-    public void testBlockCommentWithString() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.block_comment_with_string);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a block comment that contains a semicolon.
-     * @throws IOException
-     */
-    public void testBlockCommentWithSemicolon() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.block_comment_with_semicolon);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should ignore a line comment token inside a block comment.
-     * @throws IOException
-     */
-    public void testBlockAndLineComment() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.block_with_line_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql1, commands.get(0));
-    }
-
-    /**
-     * Should be able to parse a script that incorrectly closes a block comment twice. The
-     * resulting script is not expected to run, but the parser shouldn't choke on it.
-     * @throws IOException
-     */
-    public void testInvalidBlockComment() throws IOException {
-
-        final InputStream stream = this.getStream(R.raw.invalid_block_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(invalid, commands.get(0));
-    }
-
-    /**
-     * Should ignore a line comment token inside a string.
-     * @throws IOException
-     */
-    public void testStringWithLineComment() throws IOException {
-        final String sql = "INSERT INTO Entity ( Id, Column1, Column2 ) VALUES ( 1, '-- some text', 'some text' )";
-
-        final InputStream stream = this.getStream(R.raw.string_with_line_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql, commands.get(0));
-    }
-
-    /**
-     * Should ignore block comment tokens inside strings.
-     * @throws IOException
-     */
-    public void testStringWithBlockComment() throws IOException {
-        final String sql = "INSERT INTO Entity ( Id, Column1, Column2 ) VALUES ( 1, '/* some text', 'some text */' )";
-
-        final InputStream stream = this.getStream(R.raw.string_with_block_comment);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql, commands.get(0));
-    }
-
-    /**
-     * Should ignore semicolons inside strings.
-     * @throws IOException
-     */
-    public void testStringWithSemicolon() throws IOException {
-        final String sql = "INSERT INTO Entity ( Id, Column1, Column2 ) VALUES ( 1, 'some ; text', 'some ; text' )";
-
-        final InputStream stream = this.getStream(R.raw.string_with_semicolon);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql, commands.get(0));
-    }
-
-    /**
-     * Should not clobber whitespace in strings.
-     * @throws IOException
-     */
-    public void testStringWithWhitespace() throws IOException {
-        final String sql = "INSERT INTO Entity ( Id, Column1, Column2 ) VALUES ( 1, 'some\t\t\ttext', 'some    text' )";
-
-        final InputStream stream = this.getStream(R.raw.string_with_whitespace);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(1, commands.size());
-        assertEquals(sql, commands.get(0));
-    }
-
-    /**
-     * Should be able to handle a script that contains anything nasty I can thing of right now.
-     * @throws IOException 
-     */
-    public void testComplex() throws IOException {
-        final String sql1 = "CREATE TABLE Entity2 ( Id INTEGER AUTO_INCREMENT PRIMARY KEY, Column TEXT NOT NULL, Column2 INTEGER NULL )";
-        final String sql2 = "INSERT INTO Entity2 ( Id, Column, Column2 ) SELECT Id, Column, 0 FROM Entity";
-        final String sql3 = "DROP TABLE Entity";
-        final String sql4 = "ALTER TABLE Entity2 RENAME TO Entity";
-        final String sql5 = "INSERT INTO Entity2 ( Id, Column, Column2) VALUES ( 9001 , 42, 'string /* string */ -- string' )";
-
-        final InputStream stream = this.getStream(R.raw.complex);
-        List<String> commands = SqlParser.parse(stream);
-
-        assertEquals(5, commands.size());
-        assertEquals(sql1, commands.get(0));
-        assertEquals(sql2, commands.get(1));
-        assertEquals(sql3, commands.get(2));
-        assertEquals(sql4, commands.get(3));
-        assertEquals(sql5, commands.get(4));
-    }
-}
diff --git a/tests/src/com/activeandroid/test/query/CountTest.java b/tests/src/com/activeandroid/test/query/CountTest.java
deleted file mode 100644
index f0617ce1..00000000
--- a/tests/src/com/activeandroid/test/query/CountTest.java
+++ /dev/null
@@ -1,169 +0,0 @@
-
-package com.activeandroid.test.query;
-
-import com.activeandroid.query.Delete;
-import com.activeandroid.query.From;
-import com.activeandroid.query.Select;
-import com.activeandroid.test.MockModel;
-
-import java.util.List;
-
-
-public class CountTest extends SqlableTestCase {
-
-    private void cleanTable() {
-        new Delete().from(MockModel.class).execute();
-    }
-
-    private void populateTable() {
-        MockModel m1 = new MockModel();
-        MockModel m2 = new MockModel();
-        MockModel m3 = new MockModel();
-
-        m1.intField = 1;
-        m2.intField = 1;
-        m3.intField = 2;
-
-        m1.save();
-        m2.save();
-        m3.save();
-    }
-
-    /**
-     * Should be a simple count for the entire table.
-     */
-    public void testCountTableSql() {
-        final String expected = "SELECT COUNT(*) FROM MockModel";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .toCountSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Should be a count with the specified where-clause.
-     */
-    public void testCountWhereClauseSql() {
-        final String expected = "SELECT COUNT(*) FROM MockModel WHERE intField = ?";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1)
-                .toCountSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Shouldn't include <i>order by</i> as it has no influence on the result of <i>count</i> and
-     * should improve performance.
-     */
-    public void testCountOrderBySql() {
-        final String expected = "SELECT COUNT(*) FROM MockModel WHERE intField <> ? GROUP BY intField";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .where("intField <> ?", 0)
-                .orderBy("intField")
-                .groupBy("intField")
-                .toCountSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Should return the same count as there are entries in the result set/table.
-     */
-    public void testCountTable() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class);
-
-        final List<MockModel> list = from.execute();
-        final int count = from.count();
-
-        assertEquals(3, count);
-        assertEquals(list.size(), count);
-    }
-
-    /**
-     * Should return the same count as there are entries in the result set if the where-clause
-     * matches several entries.
-     */
-    public void testCountWhereClause() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1);
-
-        final List<MockModel> list = from.execute();
-        final int count = from.count();
-
-        assertEquals(2, count);
-        assertEquals(list.size(), count);
-    }
-
-    /**
-     * Should return the same count as there are entries in the result set if the where-clause
-     * matches zero entries.
-     */
-    public void testCountEmptyResult() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 3);
-
-        final List<MockModel> list = from.execute();
-        final int count = from.count();
-
-        assertEquals(0, count);
-        assertEquals(list.size(), count);
-    }
-
-    /**
-     * Should not change the result if order by is used.
-     */
-    public void testCountOrderBy() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1)
-                .orderBy("intField ASC");
-
-        final List<MockModel> list = from.execute();
-        final int count = from.count();
-
-        assertEquals(2, count);
-        assertEquals(list.size(), count);
-    }
-
-    /**
-     * Should return the total number of rows, even if the rows are grouped. May seem weird, just
-     * test it in an SQL explorer.
-     */
-    public void testCountGroupBy() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .groupBy("intField")
-                .having("intField = 1");
-
-        final List<MockModel> list = from.execute();
-        final int count = from.count();
-
-        assertEquals(2, count);
-        assertEquals(1, list.size());
-    }
-}
diff --git a/tests/src/com/activeandroid/test/query/DeleteTest.java b/tests/src/com/activeandroid/test/query/DeleteTest.java
deleted file mode 100644
index 3d9a1d71..00000000
--- a/tests/src/com/activeandroid/test/query/DeleteTest.java
+++ /dev/null
@@ -1,31 +0,0 @@
-package com.activeandroid.test.query;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.query.Delete;
-import com.activeandroid.test.MockModel;
-
-public class DeleteTest extends SqlableTestCase {
-	public void testDelete() {
-		assertSqlEquals("DELETE ", new Delete());
-	}
-
-	public void testFrom() {
-		assertSqlEquals("DELETE FROM MockModel",
-				new Delete().from(MockModel.class));
-	}
-}
diff --git a/tests/src/com/activeandroid/test/query/ExistsTest.java b/tests/src/com/activeandroid/test/query/ExistsTest.java
deleted file mode 100644
index e67d609a..00000000
--- a/tests/src/com/activeandroid/test/query/ExistsTest.java
+++ /dev/null
@@ -1,187 +0,0 @@
-
-package com.activeandroid.test.query;
-
-import com.activeandroid.query.Delete;
-import com.activeandroid.query.From;
-import com.activeandroid.query.Select;
-import com.activeandroid.test.MockModel;
-
-import java.util.List;
-
-
-public class ExistsTest extends SqlableTestCase {
-
-    private void cleanTable() {
-        new Delete().from(MockModel.class).execute();
-    }
-
-    private void populateTable() {
-        MockModel m1 = new MockModel();
-        MockModel m2 = new MockModel();
-        MockModel m3 = new MockModel();
-
-        m1.intField = 1;
-        m2.intField = 1;
-        m3.intField = 2;
-
-        m1.save();
-        m2.save();
-        m3.save();
-    }
-
-    /**
-     * Should return {@code true} since the result set/table isn't empty.
-     */
-    public void testExistsTable() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class);
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertTrue(exists);
-        assertTrue(list.size() > 0);
-    }
-
-    /**
-     * Should be a simple exists for the entire table.
-     */
-    public void testCountTableSql() {
-        final String expected = "SELECT EXISTS(SELECT 1 FROM MockModel )";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .toExistsSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Should be an exists with the specified where-clause.
-     */
-    public void testCountWhereClauseSql() {
-        final String expected = "SELECT EXISTS(SELECT 1 FROM MockModel WHERE intField = ? )";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1)
-                .toExistsSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Shouldn't include <i>order by</i> as it has no influence on the result of <i>exists</i> and
-     * should improve performance.
-     */
-    public void testCountOrderBySql() {
-        final String expected = "SELECT EXISTS(SELECT 1 FROM MockModel WHERE intField <> ? GROUP BY intField )";
-
-        String actual = new Select()
-                .from(MockModel.class)
-                .groupBy("intField")
-                .orderBy("intField")
-                .where("intField <> ?", 0)
-                .toExistsSql();
-
-        assertEquals(expected, actual);
-    }
-
-    /**
-     * Should return {@code true} since the where-clause matches rows and thus the result set isn't
-     * empty.
-     */
-    public void testExistsWhereClause() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1);
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertTrue(exists);
-        assertTrue(list.size() > 0);
-    }
-
-    /**
-     * Should return {@code false} since the where-clause matches zero rows and thus the result set
-     * is empty.
-     */
-    public void testExistsEmptyResult() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 3);
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertFalse(exists);
-        assertFalse(list.size() > 0);
-    }
-
-    /**
-     * Should not change the result if order by is used.
-     */
-    public void testCountOrderBy() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .where("intField = ?", 1)
-                .orderBy("intField ASC");
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertTrue(exists);
-        assertTrue(list.size() > 0);
-    }
-
-    /**
-     * Should not change the result if group by is used.
-     */
-    public void testCountGroupBy() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .groupBy("intField")
-                .having("intField = 1");
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertTrue(exists);
-        assertTrue(list.size() > 0);
-    }
-
-    /**
-     * Should not exist if group by eliminates all rows.
-     */
-    public void testCountGroupByEmpty() {
-        cleanTable();
-        populateTable();
-
-        From from = new Select()
-                .from(MockModel.class)
-                .groupBy("intField")
-                .having("intField = 3");
-
-        final List<MockModel> list = from.execute();
-        final boolean exists = from.exists();
-
-        assertFalse(exists);
-        assertFalse(list.size() > 0);
-    }
-}
diff --git a/tests/src/com/activeandroid/test/query/FromTest.java b/tests/src/com/activeandroid/test/query/FromTest.java
deleted file mode 100644
index 8e500b0d..00000000
--- a/tests/src/com/activeandroid/test/query/FromTest.java
+++ /dev/null
@@ -1,237 +0,0 @@
-package com.activeandroid.test.query;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.Model;
-import com.activeandroid.annotation.Table;
-import com.activeandroid.query.From;
-import com.activeandroid.query.Select;
-import com.activeandroid.test.MockModel;
-
-public class FromTest extends SqlableTestCase {
-	private static final String SELECT_PREFIX = "SELECT ALL * FROM MockModel ";
-	
-	public void testLimit() {
-		assertSqlEquals(SELECT_PREFIX + "LIMIT 10",
-				from().limit(10));
-		assertSqlEquals(SELECT_PREFIX + "LIMIT 10",
-				from().limit("10"));
-	}
-	
-	public void testOffset() {
-		assertSqlEquals(SELECT_PREFIX + "OFFSET 10",
-				from().offset(10));
-		assertSqlEquals(SELECT_PREFIX + "OFFSET 10",
-				from().offset("10"));
-	}
-	
-	public void testLimitOffset() {
-		assertSqlEquals(SELECT_PREFIX + "LIMIT 10 OFFSET 20",
-				from().offset(20).limit(10));
-		assertSqlEquals(SELECT_PREFIX + "LIMIT 10 OFFSET 20",
-				from().limit(10).offset(20));
-	}
-	
-	public void testAs() {
-		assertSqlEquals(SELECT_PREFIX + "AS a",
-				from().as("a"));
-	}
-	
-	public void testOrderBy() {
-		assertSqlEquals(SELECT_PREFIX + "ORDER BY Id DESC",
-				from().orderBy("Id DESC"));
-	}
-	
-	public void testWhereNoArguments() {
-		assertSqlEquals(SELECT_PREFIX + "WHERE Id = 5",
-				from().where("Id = 5"));
-		
-		assertSqlEquals(SELECT_PREFIX + "WHERE Id = 1 AND Id = 2 AND Id = 5",
-				from().where("Id = 1").where("Id = 2").where("Id = 5"));
-	}
-	
-	public void testWhereWithArguments() {
-		From query = from().where("Id = ?", 5);
-		assertArrayEquals(query.getArguments(), "5");
-		assertSqlEquals(SELECT_PREFIX + "WHERE Id = ?",
-				query);
-		
-		query = from().where("Id > ? AND Id < ?", 5, 10);
-		assertArrayEquals(query.getArguments(), "5", "10");
-		assertSqlEquals(SELECT_PREFIX + "WHERE Id > ? AND Id < ?",
-				query);
-		
-        // Chained
-		query = from()
-				.where("Id != ?", 10)
-				.where("Id IN (?, ?, ?)", 5, 10, 15)
-				.where("Id > ? AND Id < ?", 5, 10);
-		assertArrayEquals(query.getArguments(), "10", "5", "10", "15", "5", "10");
-		assertSqlEquals(SELECT_PREFIX + "WHERE Id != ? AND Id IN (?, ?, ?) AND Id > ? AND Id < ?",
-				query);
-	}
-
-	public void testWhereChaining() {
-	    
-	    From expected = from()
-	            .where("a = ? AND b = ?", 1, 2);
-	    
-	    From actual = from()
-	            .where("a = ?", 1, 2)
-	            .where("b = ?", 1, 2);
-	    
-	    assertSqlEquals(expected, actual);
-	}
-	
-   public void testWhereAndChaining() {
-
-       From expected = from()
-               .where("a = ? AND b = ?", 1, 2);
-
-       From actual = from()
-               .where("a = ?", 1)
-               .and("b = ?", 2);
-
-       assertSqlEquals(expected, actual);
-   }
-
-   public void testWhereOrChaining() {
-
-       From expected = from()
-               .where("a = ? OR b = ?", 1, 2);
-
-       From actual = from()
-               .where("a = ?", 1)
-               .or("b = ?", 2);
-
-       assertSqlEquals(expected, actual);
-   }
-
-   public void testWhereAndOrChaining() {
-
-       From expected = from()
-               .where("a = ? OR (b = ? AND c = ?)", 1, 2, 3);
-
-       From actual = from()
-               .where("a = ?", 1)
-               .or("(b = ? AND c = ?)", 2, 3);
-
-       assertSqlEquals(expected, actual);
-   }
-
-   public void testWhereAlternateAndOrChaining() {
-
-       From expected = from()
-               .where("a = ? OR (b = ? AND c = ?)", 1, 2, 3);
-
-       From actual = from()
-               .where("a = ?", 1)
-               .or("(b = ?", 2)
-               .and("c = ?)", 3);
-
-       assertSqlEquals(expected, actual);
-   }
-
-    // Test with 'no arguments' and 'with arguments' chained together.
-    public void testWhereWithNoArgumentsAndWithArguments() {
-        From query = from().where("Id = 5");
-        query.where("Id > ?", 4);
-        assertArrayEquals(query.getArguments(), "4");
-        assertSqlEquals(SELECT_PREFIX + "WHERE Id = 5 AND Id > ?",
-                query);
-    }
-	
-	public void testSingleJoin() {
-		assertSqlEquals(SELECT_PREFIX + "JOIN JoinModel ON MockModel.Id = JoinModel.Id",
-				from().join(JoinModel.class).on("MockModel.Id = JoinModel.Id"));
-		
-		assertSqlEquals(SELECT_PREFIX + "AS a JOIN JoinModel AS b ON a.Id = b.Id",
-				from().as("a").join(JoinModel.class).as("b").on("a.Id = b.Id"));
-		
-		assertSqlEquals(SELECT_PREFIX + "JOIN JoinModel USING (Id, other)",
-				from().join(JoinModel.class).using("Id", "other"));
-	}
-	
-	public void testJoins() {
-		assertSqlEquals(SELECT_PREFIX + "JOIN JoinModel ON Id JOIN JoinModel2 ON Id",
-				from().join(JoinModel.class).on("Id")
-				.join(JoinModel2.class).on("Id"));
-	}
-	
-	public void testJoinTypes() {
-		assertSqlEquals(SELECT_PREFIX + "INNER JOIN JoinModel ON",
-				from().innerJoin(JoinModel.class).on(""));
-		assertSqlEquals(SELECT_PREFIX + "OUTER JOIN JoinModel ON",
-				from().outerJoin(JoinModel.class).on(""));
-		assertSqlEquals(SELECT_PREFIX + "CROSS JOIN JoinModel ON",
-				from().crossJoin(JoinModel.class).on(""));
-	}
-	
-	public void testGroupByHaving() {
-		assertSqlEquals(SELECT_PREFIX + "GROUP BY Id",
-				from().groupBy("Id"));
-		assertSqlEquals(SELECT_PREFIX + "GROUP BY Id HAVING Id = 1",
-				from().groupBy("Id").having("Id = 1"));
-		assertSqlEquals(SELECT_PREFIX + "GROUP BY Id HAVING Id = 1",
-				from().having("Id = 1").groupBy("Id"));
-	}
-	
-	public void testAll() {
-		final String expectedSql = SELECT_PREFIX + "AS a JOIN JoinModel USING (Id) WHERE Id > 5 GROUP BY Id HAVING Id < 10 LIMIT 5 OFFSET 10";
-		
-		// Try a few different orderings, shouldn't change the output
-		assertSqlEquals(expectedSql,
-				from()
-					.as("a")
-					.where("Id > 5")
-					.join(JoinModel.class).using("Id")
-					.groupBy("Id")
-					.having("Id < 10")
-					.limit(5)
-					.offset(10));
-		assertSqlEquals(expectedSql,
-				from()
-					.offset(10)
-					.having("Id < 10")
-					.join(JoinModel.class).using("Id")
-					.limit(5)
-					.as("a")
-					.where("Id > 5")
-					.groupBy("Id"));
-		assertSqlEquals(expectedSql,
-				from()
-					.join(JoinModel.class).using("Id")
-					.offset(10)
-					.having("Id < 10")
-					.where("Id > 5")
-					.groupBy("Id")
-					.limit(5)
-					.as("a"));
-	}
-	
-	private From from() {
-		return new Select().all().from(MockModel.class);
-	}
-	
-	@Table(name = "JoinModel")
-	private static class JoinModel extends Model {
-	}
-	
-	@Table(name = "JoinModel2")
-	private static class JoinModel2 extends Model {
-	}
-}
diff --git a/tests/src/com/activeandroid/test/query/SelectTest.java b/tests/src/com/activeandroid/test/query/SelectTest.java
deleted file mode 100644
index 73bfe73d..00000000
--- a/tests/src/com/activeandroid/test/query/SelectTest.java
+++ /dev/null
@@ -1,50 +0,0 @@
-package com.activeandroid.test.query;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.query.Select;
-import com.activeandroid.test.MockModel;
-
-public class SelectTest extends SqlableTestCase {
-	public void testSelectEmpty() {
-		assertSqlEquals("SELECT * ", new Select());
-	}
-
-	public void testSelectAll() {
-		assertSqlEquals("SELECT ALL * ", new Select().all());
-		assertSqlEquals("SELECT ALL * ", new Select().distinct().all());
-	}
-
-	public void testSelectDistinct() {
-		assertSqlEquals("SELECT DISTINCT * ", new Select().distinct());
-		assertSqlEquals("SELECT DISTINCT * ", new Select().all().distinct());
-	}
-
-	public void testSelectStringColumns() {
-		assertSqlEquals("SELECT a, b, c ", new Select("a", "b", "c"));
-	}
-
-	public void testSelectDistinctColumns() {
-		assertSqlEquals("SELECT DISTINCT a, b, c ",
-				new Select("a", "b", "c").distinct());
-	}
-
-	public void testFrom() {
-		assertSqlEquals("SELECT ALL * FROM MockModel",
-				new Select().all().from(MockModel.class));
-	}
-}
diff --git a/tests/src/com/activeandroid/test/query/SqlableTestCase.java b/tests/src/com/activeandroid/test/query/SqlableTestCase.java
deleted file mode 100644
index 36137600..00000000
--- a/tests/src/com/activeandroid/test/query/SqlableTestCase.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package com.activeandroid.test.query;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.query.Sqlable;
-import com.activeandroid.test.ActiveAndroidTestCase;
-
-public abstract class SqlableTestCase extends ActiveAndroidTestCase {
-	public static void assertSqlEquals(String expected, Sqlable actual) {
-		assertEquals(expected, actual.toSql());
-	}
-	
-	public static void assertSqlEquals(Sqlable expected, Sqlable actual) {
-	    assertEquals(expected.toSql(), actual.toSql());
-	}
-}
diff --git a/tests/src/com/activeandroid/test/query/UpdateTest.java b/tests/src/com/activeandroid/test/query/UpdateTest.java
deleted file mode 100644
index 814d34f7..00000000
--- a/tests/src/com/activeandroid/test/query/UpdateTest.java
+++ /dev/null
@@ -1,62 +0,0 @@
-package com.activeandroid.test.query;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-import com.activeandroid.query.Set;
-import com.activeandroid.query.Update;
-import com.activeandroid.test.MockModel;
-
-public class UpdateTest extends SqlableTestCase {
-	private static final String UPDATE_PREFIX = "UPDATE MockModel ";
-	
-	public void testUpdate() {
-		assertSqlEquals(UPDATE_PREFIX, update());
-	}
-	
-	public void testUpdateSet() {
-		assertSqlEquals(UPDATE_PREFIX + "SET Id = 5 ",
-				update().set("Id = 5"));
-	}
-	
-	public void testUpdateWhereNoArguments() {
-		assertSqlEquals(UPDATE_PREFIX + "SET Id = 5 WHERE Id = 1 ",
-				update()
-					.set("Id = 5")
-					.where("Id = 1"));
-	}
-	
-	public void testUpdateWhereWithArguments() {
-		Set set = update()
-				.set("Id = 5")
-				.where("Id = ?", 1);
-		assertArrayEquals(set.getArguments(), "1");
-		assertSqlEquals(UPDATE_PREFIX + "SET Id = 5 WHERE Id = ? ",
-				set);
-		
-		set = update()
-				.set("Id = 5")
-				.where("Id = ?", 1)
-				.where("Id IN (?, ?, ?)", 5, 4, 3);
-		assertArrayEquals(set.getArguments(), "5", "4", "3");
-		assertSqlEquals(UPDATE_PREFIX + "SET Id = 5 WHERE Id IN (?, ?, ?) ",
-				set);
-	}
-	
-	private Update update() {
-		return new Update(MockModel.class);
-	}
-}
diff --git a/wait_for_emulator b/wait_for_emulator
deleted file mode 100644
index b30bc35c..00000000
--- a/wait_for_emulator
+++ /dev/null
@@ -1,18 +0,0 @@
-#!/bin/bash
-
-bootanim=""
-failcounter=0
-until [[ "$bootanim" =~ "stopped" ]]; do
-  bootanim=`adb -e shell getprop init.svc.bootanim 2>&1`
-  echo "$bootanim"
-  if [[ "$bootanim" =~ "not found" ]]; then
-    let "failcounter += 1"
-    if [[ $failcounter -gt 3 ]]; then
-      echo "Failed to start emulator"
-      exit 1
-    fi
-  fi
-  sleep 1
-done
-
-echo "Done"
