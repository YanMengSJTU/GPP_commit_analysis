diff --git a/ReadMe_New.md b/ReadMe_New.md
new file mode 100644
index 00000000..8aab0f9b
--- /dev/null
+++ b/ReadMe_New.md
@@ -0,0 +1,54 @@
+##ActiveAndroid的好处
+1.  首先就是ORM的好处：定义一个表结构无需写大量的sql语句，从sql里面的值解析
+为model对象的时候，不需要自己编写太多转换代码。
+
+2.  查询的接口设计的比较友好（链式操作）
+
+3.  通过assets里面存放sql文件来执行数据迁移的方法比之前把sql写到代码里面会
+好一些
+
+4.  对于一些序列化的数据，提供了序列化和反序列化接口，能够比较方便的完成这
+些操作。
+
+5.  选择的时候可以设置需要选择的列（之前以为不行，后来看代码可以）
+
+6.  支持外键（需要SDK 8以上）
+
+7.  支持对象的缓存
+
+##缺点
+
+1.  使用了反射，性能上会打一些折扣
+
+2.  使用的人还不够多，可能会有一些坑，但是由于代码量不多，所以基本上可以控制。
+
+
+##为什么需要修改
+
+1.  默认只能采用一个数据库，而我们的项目打算支持多用户，为了减少用户这一层的差异
+打算每个用户独立的数据使用一个数据库来存，这样切换用户的时候成本会比较小。所以
+修改的主要原因是因为需要让它支持一个APP多个数据库的情况，我想可能会有很多应用有
+这样的需求。
+
+2.  因为上面那个原因而做的修改，修改主要的内容是把之前写死的几个参数（DBName，
+    DBVersion，Modles等等）做成一个接口，然后通过运行时传入这个接口获得，主要
+    修改内容如下
+
+    +   之前的model的寻找是直接的从ClassLoader里面去查找类是否有某个annotation
+        标记的，换成现在的有一个接口来获取
+    +   DBName和DBVersion之前是在application里面配置，修改成通过一个接口获取
+    +   由于之前升级是通过一个固定的目录下面的sql文件升级的，这里修改通过我们的
+        接口获取升级的sql文件
+    +   把之前的一个静态的类（一个数据库一个的实例）修改为非静态的了
+
+3.  除此之外，由于可能会踩一些坑，还可能会需要一些修改，所以就fork了一份。
+
+
+##如何使用
+1.  实例化一个DBMeta的实例。
+
+2.  通过DBMeta实例和Application Context来实例化一个DataBaseHelper即可。
+
+3.  接下来就可以通过Select，update之类的直接来查询，或者直接通过一个model来
+    保存来inert数据到数据库了。
+
