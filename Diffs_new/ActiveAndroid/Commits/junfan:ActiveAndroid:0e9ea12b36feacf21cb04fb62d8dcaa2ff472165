diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 4507e10d..a68332ef 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -44,6 +44,7 @@
 	//private final static String AA_DB_NAME = "AA_DB_NAME";
 	//private final static String AA_DB_VERSION = "AA_DB_VERSION";
 
+    //asset/migrations/<db>/*.sql
 	private final static String MIGRATION_PATH = "migrations";
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -142,10 +143,19 @@ public void copyAttachedDatabase(Context context) {
 	// PRIVATE METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
+    /**
+     * 迁移使用<version>.sql来定义迁移sql
+     * 比如newVersion = 2 ，old Version = 1，那我们就需要一个2.sql，来执行1-2的迁移
+     * 这里迁移的顺序需要从低版本到高版本，目前是有一个NaturalOrderComparator
+     * @param db
+     * @param oldVersion
+     * @param newVersion
+     * @return
+     */
 	private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVersion) {
 		boolean migrationExecuted = false;
 		try {
-			final List<String> files = Arrays.asList(mAppContext.getAssets().list(MIGRATION_PATH));
+			final List<String> files = Arrays.asList(mAppContext.getAssets().list(MIGRATION_PATH+File.separator+mDbMeta.getMigrationPath()));
 			Collections.sort(files, new NaturalOrderComparator());
 
 			db.beginTransaction();
diff --git a/src/com/activeandroid/DbCache.java b/src/com/activeandroid/DbCache.java
index b5e9c7dd..db21e46d 100644
--- a/src/com/activeandroid/DbCache.java
+++ b/src/com/activeandroid/DbCache.java
@@ -27,6 +27,9 @@
 import com.activeandroid.util.Log;
 import com.activeandroid.util.SQLiteUtils;
 
+/**
+ * This class is a cache for single db, if it can be use for all db, we can use static function
+ */
 public final class DbCache {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PRIVATE MEMBERS
@@ -35,6 +38,7 @@
 	private  Context sContext;
 
 	private  ModelInfo sModelInfo;
+
 	private  DatabaseHelper sDatabaseHelper;
 
 	private  Set<Model> sEntities;
@@ -77,7 +81,7 @@ public  synchronized void initialize(Application application,DbMeta dbMeta) {
 
 		sContext = application;
 
-		sModelInfo = new ModelInfo(application);
+		sModelInfo = new ModelInfo(dbMeta);
 		//sDatabaseHelper = new DatabaseHelper(sContext);
 
 		sEntities = new HashSet<Model>();
diff --git a/src/com/activeandroid/DbMeta.java b/src/com/activeandroid/DbMeta.java
index 8df46aae..34f9b456 100644
--- a/src/com/activeandroid/DbMeta.java
+++ b/src/com/activeandroid/DbMeta.java
@@ -12,13 +12,19 @@
     //获取当前db的版本号
     abstract public int getDbVersion();
 
-    //获取当前db的名字
+    //获取当前db的名字文件的
     abstract public String getDbName();
 
-    //获取所有生成db的sql
-    abstract public String[] getCreateDbSql();
 
-    //获取更新sql语句
-    abstract public String[] getUpgradeSqls();
+    /**
+     * 获取当前Db里面包含了哪些Modles
+     * @return
+     */
+    public abstract Class<Model>[] getModels();
 
+    /**
+     * 获取迁移版本的时候的sql代码存放的目录
+     * @return
+     */
+    public abstract String getMigrationPath();
 }
diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java
index 6a686348..e074c09f 100644
--- a/src/com/activeandroid/ModelInfo.java
+++ b/src/com/activeandroid/ModelInfo.java
@@ -46,16 +46,26 @@
 	// CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-	public ModelInfo(Application application) {
+    /**
+     * 从DbMeta里面获取这个DB里面含有哪些Model
+     */
+    private void getModelsFromMeta(DbMeta dbMeta){
+        Class<? extends Model>[] modelClass=dbMeta.getModels();
+        for(int i=0;i<modelClass.length;i++){
+            mTableInfos.put(modelClass[i], new TableInfo(modelClass[i]));
+        }
+    }
+
+	public ModelInfo(DbMeta meta) {
 		mTableInfos = new HashMap<Class<? extends Model>, TableInfo>();
 		mTypeSerializers = new HashMap<Class<?>, TypeSerializer>();
 
-		try {
-			scanForModel(application);
-		}
-		catch (IOException e) {
-			Log.e("Couln't open source path.", e);
-		}
+
+		//scanForModel(application);
+        getModelsFromMeta(meta);
+
+
+
 
 		Log.i("ModelInfo loaded.");
 	}
diff --git a/src/com/activeandroid/content/ContentProvider.java b/src/com/activeandroid/content/ContentProvider.java
index 630d2630..ab1954dd 100644
--- a/src/com/activeandroid/content/ContentProvider.java
+++ b/src/com/activeandroid/content/ContentProvider.java
@@ -17,7 +17,7 @@
 import com.activeandroid.TableInfo;
 
 /**
- *  after
+ *  暂且不用
  */
 public class ContentProvider extends android.content.ContentProvider {
 	//////////////////////////////////////////////////////////////////////////////////////
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 3a0d6b3e..c3671dcb 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -81,9 +81,6 @@
 	// PUBLIC METHODS
 	//////////////////////////////////////////////////////////////////////////////////////
 
-
-
-
 	// Database creation
 
 	public static String createTableDefinition(TableInfo tableInfo) {
