diff --git a/src/com/activeandroid/ActiveAndroid.java b/src/com/activeandroid/ActiveAndroid.java
index f709d060..22d39461 100644
--- a/src/com/activeandroid/ActiveAndroid.java
+++ b/src/com/activeandroid/ActiveAndroid.java
@@ -69,9 +69,11 @@ public static SQLiteDatabase getDatabase() {
 
 	public static void beginTransaction() {
 		Cache.openDatabase().beginTransaction();
+		Cache.beginTransaction();
 	}
 
 	public static void endTransaction() {
+		Cache.endTransaction();
 		Cache.openDatabase().endTransaction();
 	}
 
diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index 536cb2fe..978a998a 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -43,7 +43,8 @@
 	private static boolean sIsInitialized = false;
 
 	private static Object yieldTransactionLock = new Object();
-	private static List<Integer> yieldTransaction = new ArrayList<Integer>();
+	private static int sYieldTransactionCount;
+	private static int sTransactionTid;
 
 	private static Configuration sConfiguration;
 	private static String sDatabaseName;
@@ -214,32 +215,47 @@ public static synchronized String getTableName(Class<? extends Model> type) {
 		return sModelInfo.getTableInfo(type).getTableName();
 	}
 
-	public static void beginReleaseTransaction() {
+	public static Object getLock() {
+		return yieldTransactionLock;
+	}
+
+	public static void beginTransaction() {
 		synchronized (yieldTransactionLock) {
 			final int tid = android.os.Process.myTid();
-			if (yieldTransaction.contains(tid))
+			if (tid == sTransactionTid)
 				return;
-			yieldTransaction.add(tid);
+			sTransactionTid = tid;
 		}
 	}
 
-	public static void endReleaseTransaction() {
+	public static void endTransaction() {
 		synchronized (yieldTransactionLock) {
 			final int tid = android.os.Process.myTid();
-			if (!yieldTransaction.remove(Integer.valueOf(tid)))
+			if (tid != sTransactionTid)
 				return;
-			if (yieldTransaction.isEmpty())
-				yieldTransactionLock.notifyAll();
+			sTransactionTid = 0;
 		}
 	}
 
-	public static void yieldTransaction() {
+	public static void beginReleaseTransaction() {
+		synchronized (yieldTransactionLock) {
+			sYieldTransactionCount++;
+		}
+	}
+
+	public static void endReleaseTransaction() {
 		synchronized (yieldTransactionLock) {
-			if (yieldTransaction.isEmpty())
+			sYieldTransactionCount--;
+			if (sYieldTransactionCount > 0)
 				return;
+			sYieldTransactionCount = 0;
+			yieldTransactionLock.notifyAll();
+		}
+	}
 
-			final int tid = android.os.Process.myTid();
-			if (yieldTransaction.contains(tid))
+	public static void yieldTransaction() {
+		synchronized (yieldTransactionLock) {
+			if (sYieldTransactionCount <= 0)
 				return;
 
 			final SQLiteDatabase db = sDatabaseHelper.getWritableDatabase();
@@ -249,6 +265,7 @@ public static void yieldTransaction() {
 			try {
 				db.setTransactionSuccessful();
 			} finally {
+				sTransactionTid = 0;
 				db.endTransaction();
 			}
 
@@ -258,6 +275,9 @@ public static void yieldTransaction() {
 			}
 
 			db.beginTransaction();
+
+			final int tid = android.os.Process.myTid();
+			sTransactionTid = tid;
 		}
 	}
 }
