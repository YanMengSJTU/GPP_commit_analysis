diff --git a/src/com/activeandroid/query/From.java b/src/com/activeandroid/query/From.java
index ab3837a9..e80bc7f2 100644
--- a/src/com/activeandroid/query/From.java
+++ b/src/com/activeandroid/query/From.java
@@ -293,6 +293,21 @@ public String toCountSql() {
         return sqlString(sql);
     }
 
+    public String toSumSql(String column) {
+        final StringBuilder sql = new StringBuilder();
+        sql.append("SELECT SUM(" + column + ") ");
+
+        addFrom(sql);
+        addJoins(sql);
+        addWhere(sql);
+        addGroupBy(sql);
+        addHaving(sql);
+        addLimit(sql);
+        addOffset(sql);
+
+        return sqlString(sql);
+    }
+
 	public <T extends Model> List<T> execute() {
 		if (mQueryBase instanceof Select) {
 			return SQLiteUtils.rawQuery(mType, toSql(), getArguments());
@@ -332,6 +347,13 @@ public boolean exists() {
     public int count() {
         return SQLiteUtils.intQuery(toCountSql(), getArguments());
     }
+    /**
+     * Gets sum of selected row
+     * @return
+     */
+    public double sum(String column) {
+        return SQLiteUtils.doubleQuery(toSumSql(column), getArguments());
+    }
 
 	public String[] getArguments() {
 		final int size = mArguments.size();
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index cbf41eae..232cb47e 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -118,6 +118,14 @@ public static int intQuery(final String sql, final String[] selectionArgs) {
         return number;
 	}
 
+    public static double doubleQuery(final String sql, final String[] selectionArgs) {
+        final Cursor cursor = Cache.openDatabase().rawQuery(sql, selectionArgs);
+        final double number = processDoubleCursor(cursor);
+        cursor.close();
+
+        return number;
+    }
+
 	public static <T extends Model> T rawQuerySingle(Class<? extends Model> type, String sql, String[] selectionArgs) {
 		List<T> entities = rawQuery(type, sql, selectionArgs);
 
@@ -372,6 +380,13 @@ private static int processIntCursor(final Cursor cursor) {
         return 0;
     }
 
+    private static double processDoubleCursor(final Cursor cursor) {
+        if (cursor.moveToFirst()) {
+            return cursor.getDouble(0);
+        }
+        return 0;
+    }
+
 	public static List<String> lexSqlScript(String sqlScript) {
 		ArrayList<String> sl = new ArrayList<String>();
 		boolean inString = false, quoteNext = false;
