diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 47254374..5cf51780 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -326,9 +326,29 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
 		String idName = tableInfo.getIdName();
 		final List<T> entities = new ArrayList<T>();
 
+		Constructor<?> parameterizedConstructor = null;
+		Constructor<?> simpleConstructor = null;
+
 		try {
-			Constructor<?> entityConstructor = type.getConstructor(Cache.class);
+			parameterizedConstructor = type.getConstructor(Cache.class);
+		} catch (NoSuchMethodException e) {
+			try {
+				simpleConstructor = type.getConstructor();
+			} catch (NoSuchMethodException e1) {
+
+				throw new RuntimeException(
+						"Your model " + type.getName() + " does not define a default " +
+								"constructor. Or a constructor with a Cache as a parameter. " +
+								"Either of these contructors is required for " +
+								"now in ActiveAndroid models, as the process to " +
+								"populate the ORM model is : " +
+								"1. instantiate the model with the given or the default Cache object" +
+								"2. populate fields"
+				);
+			}
+		}
 
+		try {
 			if (cursor.moveToFirst()) {
                 /**
                  * Obtain the columns ordered to fix issue #106 (https://github.com/pardom/ActiveAndroid/issues/106)
@@ -336,25 +356,21 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
                  */
                 List<String> columnsOrdered = new ArrayList<String>(Arrays.asList(cursor.getColumnNames()));
 				do {
-					Model entity = (T) entityConstructor.newInstance(cache);
+
+					Model entity = null;
+					if(parameterizedConstructor != null) {
+						entity = (T) parameterizedConstructor.newInstance(cache);
+					} else {
+						entity = (T) simpleConstructor.newInstance();
+					}
+
 					entity.loadFromCursor(cursor);
 					entities.add((T) entity);
 				}
 				while (cursor.moveToNext());
 			}
 
-		}
-		catch (NoSuchMethodException e) {
-			throw new RuntimeException(
-                "Your model " + type.getName() + " does not define a default " +
-                "constructor. The default constructor is required for " +
-                "now in ActiveAndroid models, as the process to " +
-                "populate the ORM model is : " +
-                "1. instantiate default model " +
-                "2. populate fields"
-            );
-		}
-		catch (Exception e) {
+		} catch (Exception e) {
 			Log.e("Failed to process cursor.", e);
 		}
 
