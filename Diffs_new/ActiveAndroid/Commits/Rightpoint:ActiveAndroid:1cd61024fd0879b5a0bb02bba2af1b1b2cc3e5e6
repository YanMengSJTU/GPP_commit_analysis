diff --git a/src/main/java/com/activeandroid/util/SQLiteUtils.java b/src/main/java/com/activeandroid/util/SQLiteUtils.java
index 839de533..380cbcdb 100644
--- a/src/main/java/com/activeandroid/util/SQLiteUtils.java
+++ b/src/main/java/com/activeandroid/util/SQLiteUtils.java
@@ -326,12 +326,29 @@ public static String getWhereStatement(IModel IModel, TableInfo tableInfo){
                 Object object = field.get(IModel);
                 if(object==null){
                     throw new PrimaryKeyCannotBeNullException("The primary key: " + field.getName() + "from " + tableInfo.getTableName() + " cannot be null.");
-                } else if(object instanceof Number){
-                    sql = sql.replaceFirst("\\?", object.toString());
                 } else {
-                    String escaped = DatabaseUtils.sqlEscapeString(object.toString());
+                    final TypeSerializer typeSerializer = Cache.getParserForType(field.getType());
+                    if (typeSerializer != null) {
+                        // serialize data
+                        object = typeSerializer.serialize(object);
+                        // set new object type
+                        if (object != null) {
+                            Class fieldType = object.getClass();
+                            // check that the serializer returned what it promised
+                            if (!fieldType.equals(typeSerializer.getSerializedType())) {
+                                AALog.w(String.format("TypeSerializer returned wrong type: expected a %s but got a %s",
+                                        typeSerializer.getSerializedType(), fieldType));
+                            }
+                        }
+                    }
+
+                    if (object instanceof Number) {
+                        sql = sql.replaceFirst("\\?", object.toString());
+                    } else {
+                        String escaped = DatabaseUtils.sqlEscapeString(object.toString());
 
-                    sql = sql.replaceFirst("\\?", escaped);
+                        sql = sql.replaceFirst("\\?", escaped);
+                    }
                 }
             } catch (Throwable e) {
                 throw new RuntimeException(e);
