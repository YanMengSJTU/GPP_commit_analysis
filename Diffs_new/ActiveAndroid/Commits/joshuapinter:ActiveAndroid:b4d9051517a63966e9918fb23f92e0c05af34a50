diff --git a/build.gradle b/build.gradle
index 5594e43b..261bc8da 100644
--- a/build.gradle
+++ b/build.gradle
@@ -14,4 +14,5 @@ sourceSets {
 
 dependencies {
 	compile fileTree(dir: 'libs', include: '*.jar')
+	compile 'joda-time:joda-time:2.3'
 }
diff --git a/src/com/activeandroid/ModelInfo.java b/src/com/activeandroid/ModelInfo.java
index 09e79117..0979f70d 100644
--- a/src/com/activeandroid/ModelInfo.java
+++ b/src/com/activeandroid/ModelInfo.java
@@ -29,14 +29,11 @@
 
 import android.content.Context;
 
-import com.activeandroid.serializer.CalendarSerializer;
-import com.activeandroid.serializer.SqlDateSerializer;
-import com.activeandroid.serializer.TypeSerializer;
-import com.activeandroid.serializer.UtilDateSerializer;
-import com.activeandroid.serializer.FileSerializer;
+import com.activeandroid.serializer.*;
 import com.activeandroid.util.Log;
 import com.activeandroid.util.ReflectionUtils;
 import dalvik.system.DexFile;
+import org.joda.time.DateTime;
 
 final class ModelInfo {
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -47,6 +44,7 @@
 	private Map<Class<?>, TypeSerializer> mTypeSerializers = new HashMap<Class<?>, TypeSerializer>() {
 		{
 			put(Calendar.class, new CalendarSerializer());
+			put(DateTime.class, new JodaDateTimeSerializer());
 			put(java.sql.Date.class, new SqlDateSerializer());
 			put(java.util.Date.class, new UtilDateSerializer());
 			put(java.io.File.class, new FileSerializer());
diff --git a/src/com/activeandroid/serializer/JodaDateTimeSerializer.java b/src/com/activeandroid/serializer/JodaDateTimeSerializer.java
new file mode 100644
index 00000000..2256a700
--- /dev/null
+++ b/src/com/activeandroid/serializer/JodaDateTimeSerializer.java
@@ -0,0 +1,29 @@
+package com.activeandroid.serializer;
+
+import org.joda.time.DateTime;
+
+public final class JodaDateTimeSerializer extends TypeSerializer {
+	public Class<?> getDeserializedType() {
+		return DateTime.class;
+	}
+
+	public Class<?> getSerializedType() {
+		return long.class;
+	}
+
+	public Long serialize(Object data) {
+		if (data == null) {
+			return null;
+		}
+
+		return ((DateTime) data).getMillis();
+	}
+
+	public DateTime deserialize(Object data) {
+		if (data == null) {
+			return null;
+		}
+
+		return new DateTime().withMillis((Long)data);
+	}
+}
\ No newline at end of file
