diff --git a/src/com/activeandroid/Many.java b/src/com/activeandroid/Many.java
index 92a6a6aa..4f13347b 100644
--- a/src/com/activeandroid/Many.java
+++ b/src/com/activeandroid/Many.java
@@ -31,6 +31,7 @@
 
     public Many() {
         super();
+        cacheable = false;
 
         Type type = getClass().getGenericSuperclass();
         if (type instanceof ParameterizedType) {
@@ -59,12 +60,14 @@ public void afterLoad() {
 
     public Many(Class<T> clazz) {
         super();
+        cacheable = false;
         initWith(clazz);
         reload();
     }
 
     protected Many(Parcel in) {
         super(in);
+        cacheable = false;
         this.ids = in.readString();
         this.class_name = in.readString();
         initClass();
@@ -88,6 +91,7 @@ private void initClass() {
 
     public Many(Many many) {
         super(many.getId());
+        cacheable = false;
         this.ids = many.ids;
         this.clazz = many.clazz;
         this.class_name = many.class_name;
diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 10387779..60bce4b6 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -45,9 +45,10 @@
 	private final String idName;
 	private static Map<String, List<Integer>> columnIndexesCache = new HashMap<String, List<Integer>>();
 	private static Map<String, List<Class>> fieldTypesCache = new HashMap<String, List<Class>>();
+    protected boolean cacheable = true;
 
-	//////////////////////////////////////////////////////////////////////////////////////
-	// CONSTRUCTORS
+    //////////////////////////////////////////////////////////////////////////////////////
+    // CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
 
 	public Model() {
@@ -271,6 +272,9 @@ else if (ReflectionUtils.isModel(fieldType)) {
 					if (entity == null) {
 						entity = new Select().from(entityType).where(idName+"=?", entityId).executeSingle();
 					}
+                    if (entity instanceof ExtendedModel) {
+                        ((ExtendedModel) entity).afterLoad();
+                    }
 
 					value = entity;
 				}
@@ -303,8 +307,8 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 			}
 		}
 
-		if (mId != null) {
-			Cache.addEntity(this);
+        if (mId != null && cacheable) {
+            Cache.addEntity(this);
 		}
 	}
 
