diff --git a/build.gradle b/build.gradle
index d8f05358..57b477f1 100644
--- a/build.gradle
+++ b/build.gradle
@@ -10,7 +10,7 @@ buildscript {
 	}
 
 	dependencies {
-		classpath "com.android.tools.build:gradle:2.0.0-alpha2"
+		classpath 'com.android.tools.build:gradle:2.1.0-alpha1'
 		classpath 'com.mobilesolutionworks:works-bintray-publish:1.0.0'
 		classpath 'com.mobilesolutionworks:works-jenkins-android-builder:1.0.0'
 		classpath 'com.mobilesolutionworks:works-autoconfig:1.0.0'
diff --git a/library/src/main/java/com/activeandroid/sebbia/Configuration.java b/library/src/main/java/com/activeandroid/sebbia/Configuration.java
index 7dad5d0e..1aa4c750 100644
--- a/library/src/main/java/com/activeandroid/sebbia/Configuration.java
+++ b/library/src/main/java/com/activeandroid/sebbia/Configuration.java
@@ -262,17 +262,29 @@ public Configuration create()
             // Get model classes from meta-data
             if (mModelClasses != null)
             {
-                configuration.mModelClasses = mModelClasses;
+                configuration.mModelClasses = new ArrayList<>(mModelClasses);
             }
             else
             {
                 final String modelList = ReflectionUtils.getMetaData(mContext, AA_MODELS);
                 if (modelList != null)
                 {
-                    configuration.mModelClasses = loadModelList(modelList.split(","));
+                    configuration.mModelClasses = new ArrayList<>(loadModelList(modelList.split(",")));
                 }
             }
 
+
+            try {
+                Class<? extends ModelLoader> modelLoaderClass = (Class<? extends ModelLoader>) Class.forName("com.activeandroid.sebbia.ModelLoaderImpl");
+                ModelLoader modelLoader = modelLoaderClass.newInstance();
+                String[] models = modelLoader.getModels();
+
+                if (configuration.mModelClasses == null) configuration.mModelClasses = new ArrayList<>();
+                configuration.mModelClasses.addAll(loadModelList(models));
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+
             // Get type serializer classes from meta-data
             if (mTypeSerializers != null)
             {
diff --git a/library/src/main/java/com/activeandroid/sebbia/ModelLoader.java b/library/src/main/java/com/activeandroid/sebbia/ModelLoader.java
new file mode 100644
index 00000000..8b568b58
--- /dev/null
+++ b/library/src/main/java/com/activeandroid/sebbia/ModelLoader.java
@@ -0,0 +1,9 @@
+package com.activeandroid.sebbia;
+
+/**
+ * Created by yunarta on 16/3/16.
+ */
+public interface ModelLoader {
+
+    String[] getModels();
+}
diff --git a/library/src/main/java/com/activeandroid/sebbia/query/From.java b/library/src/main/java/com/activeandroid/sebbia/query/From.java
index 5739dc34..3792e232 100644
--- a/library/src/main/java/com/activeandroid/sebbia/query/From.java
+++ b/library/src/main/java/com/activeandroid/sebbia/query/From.java
@@ -345,7 +345,7 @@ public Cursor query(String database)
     {
         if (mQueryBase instanceof Select)
         {
-            Cursor cursor = Cache.openDatabase(database).rawQuery(toSql(), getArguments());
+                Cursor cursor = Cache.openDatabase(database).rawQuery(toSql(), getArguments());
             return cursor;
         }
 
diff --git a/processor/build.gradle b/processor/build.gradle
index 67e80eac..b4dff247 100644
--- a/processor/build.gradle
+++ b/processor/build.gradle
@@ -16,7 +16,7 @@ dependencies {
 worksPublish {
     bintray {
         repo = 'maven'
-        name = group + ':ActiveAndroid'
+        name = group + ':ActiveAndroidProcessor'
     }
 
     developer {
diff --git a/processor/src/main/java/com/activeandroid/sebbia/internal/AnnotationProcessor.java b/processor/src/main/java/com/activeandroid/sebbia/internal/AnnotationProcessor.java
index 7394b5c0..6488052b 100644
--- a/processor/src/main/java/com/activeandroid/sebbia/internal/AnnotationProcessor.java
+++ b/processor/src/main/java/com/activeandroid/sebbia/internal/AnnotationProcessor.java
@@ -6,6 +6,7 @@
 
 import java.io.IOException;
 import java.io.Writer;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -107,9 +108,33 @@ private void parseColumns()
 
         }
 
+        ArrayList<String> classNames = new ArrayList<>();
         for (TypeElement table : tables.keySet())
         {
             generate(table, tables.get(table));
+            classNames.add(table.getQualifiedName().toString());
+        }
+
+        try {
+            StringBuilder sb = new StringBuilder();
+            for (String className : classNames) {
+                sb.append("\"").append(className).append("\",");
+            }
+            String models = sb.toString();
+
+            JavaFileObject jfo = processingEnv.getFiler().createSourceFile("com.activeandroid.sebbia.ModelLoaderImpl", null);
+            Writer writer = jfo.openWriter();
+            writer.write("//Generated by ActiveAndroid. Do not modify\n");
+            writer.write("package com.activeandroid.sebbia;\n\n");
+            writer.write("class ModelLoaderImpl implements ModelLoader {");
+            writer.write("  public String[] getModels() {");
+            writer.write("      return new String[]{" + models + "};");
+            writer.write("  }");
+            writer.write("}");
+            writer.flush();
+            writer.close();
+        } catch (IOException e) {
+            e.printStackTrace();
         }
     }
 
