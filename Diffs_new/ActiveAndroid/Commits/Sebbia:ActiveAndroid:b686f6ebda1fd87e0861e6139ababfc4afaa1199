diff --git a/src/com/activeandroid/sebbia/Model.java b/src/com/activeandroid/sebbia/Model.java
index fee2d03a..19277f47 100644
--- a/src/com/activeandroid/sebbia/Model.java
+++ b/src/com/activeandroid/sebbia/Model.java
@@ -24,6 +24,7 @@
 import android.content.ContentValues;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteStatement;
 
 import com.activeandroid.sebbia.content.ContentProvider;
 import com.activeandroid.sebbia.internal.ModelFiller;
@@ -109,10 +110,17 @@ public static void saveMultiple(List<? extends Model> entities) {
 		final ContentValues values = new ContentValues();
 		for (Model entity : entities) {
 			values.clear();
-			fillContentValues(entity, values);
-			if (entity.mId == null) {
-				entity.mId = db.insertWithOnConflict(entity.mTableInfo.getTableName(), null, values, SQLiteDatabase.CONFLICT_REPLACE);
+			if (entity.mId == null && (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?>)) {
+				entity.fillContentValuesReflective(values);
+				db.insert(entity.mTableInfo.getTableName(), null, values);
+			} else if (entity.mId == null) {
+				ModelFiller filler = Cache.getFiller(entity.getClass());
+				SQLiteStatement statement = entity.mTableInfo.getInsertOrReplaceStatement();
+				statement.clearBindings();
+				filler.bindStatement(entity, statement, entity.mTableInfo.getColumnIndexes());
+				entity.mId = statement.executeInsert();
 			} else {
+				fillContentValues(entity, values);
 				db.update(entity.mTableInfo.getTableName(), values, "Id=" + entity.mId, null);
 			}
 		}
diff --git a/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java b/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
index 0be4a99f..34a6f4c7 100644
--- a/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
+++ b/src/com/activeandroid/sebbia/internal/AnnotationProcessor.java
@@ -129,12 +129,12 @@ private void generate(TypeElement tableElement, Set<VariableElement> columns) {
 			writer.write(getFillContentValuesCode(columns));
 			writer.write("  }\n");
 			
-//			writer.write("  public void bindStatement(com.activeandroid.sebbia.Model genericModel, SQLiteStatement " + STATEMENT + ", Map<String, Integer> " + COLUMNS + ") {\n");
-//			writer.write("    if (superModelFiller != null)\n");
-//			writer.write("       superModelFiller.bindStatement(genericModel, " + STATEMENT + ", " + COLUMNS + ");\n");
-//			writer.write("    " + className + " " + MODEL + " = (" + className + ") genericModel;\n");
-//			writer.write(getBindStatementCode(columns));
-//			writer.write("  }\n");
+			writer.write("  public void bindStatement(com.activeandroid.sebbia.Model genericModel, SQLiteStatement " + STATEMENT + ", Map<String, Integer> " + COLUMNS + ") {\n");
+			writer.write("    if (superModelFiller != null)\n");
+			writer.write("       superModelFiller.bindStatement(genericModel, " + STATEMENT + ", " + COLUMNS + ");\n");
+			writer.write("    " + className + " " + MODEL + " = (" + className + ") genericModel;\n");
+			writer.write(getBindStatementCode(columns));
+			writer.write("  }\n");
 
 			writer.write("}");
 			writer.flush();
diff --git a/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java b/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
index 4b152a3e..695ac5a1 100644
--- a/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
+++ b/src/com/activeandroid/sebbia/internal/EmptyModelFiller.java
@@ -22,9 +22,9 @@ public void fillContentValues(Model model, ContentValues contentValues) {
 			superModelFiller.fillContentValues(model, contentValues);
 	}
 
-//	@Override
-//	public void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns) {
-//		if (superModelFiller != null)
-//			superModelFiller.bindStatement(model, statement, columns);
-//	}
+	@Override
+	public void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns) {
+		if (superModelFiller != null)
+			superModelFiller.bindStatement(model, statement, columns);
+	}
 }
diff --git a/src/com/activeandroid/sebbia/internal/ModelFiller.java b/src/com/activeandroid/sebbia/internal/ModelFiller.java
index 4bf5f553..dd8af96b 100644
--- a/src/com/activeandroid/sebbia/internal/ModelFiller.java
+++ b/src/com/activeandroid/sebbia/internal/ModelFiller.java
@@ -1,16 +1,20 @@
 package com.activeandroid.sebbia.internal;
 
+import java.util.Map;
+
 import android.content.ContentValues;
 import android.database.Cursor;
+import android.database.sqlite.SQLiteStatement;
 
 import com.activeandroid.sebbia.Model;
 
-
 public abstract class ModelFiller {
 	public static final String SUFFIX = "$$ActiveAndroidModelFiller";
 	public ModelFiller superModelFiller;
-	
+
 	public abstract void loadFromCursor(Model model, Cursor cursor);
+
 	public abstract void fillContentValues(Model model, ContentValues contentValues);
-//	public abstract void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns);
+
+	public abstract void bindStatement(Model model, SQLiteStatement statement, Map<String, Integer> columns);
 }
diff --git a/tests/src/com/activeandroid/test/parser/ParserTest.java b/tests/src/com/activeandroid/test/parser/ParserTest.java
index 4f109dfb..759e785d 100644
--- a/tests/src/com/activeandroid/test/parser/ParserTest.java
+++ b/tests/src/com/activeandroid/test/parser/ParserTest.java
@@ -232,7 +232,7 @@ public void testComplex() throws IOException {
         final String sql2 = "INSERT INTO Entity2 ( Id, Column, Column2 ) SELECT Id, Column, 0 FROM Entity";
         final String sql3 = "DROP TABLE Entity";
         final String sql4 = "ALTER TABLE Entity2 RENAME TO Entity";
-        final String sql5 = "INSERT INTO Entity2 ( Id, Column, Column2) VALUES ( 9001 , 42, 'string /* string */ -- string' )";
+        final String sql5 = "INSERT INTO Entity2 ( Id, Column, Column2 ) VALUES ( 9001 , 42, 'string /* string */ -- string' )";
 
         final InputStream stream = this.getStream(R.raw.complex);
         List<String> commands = SqlParser.parse(stream);
