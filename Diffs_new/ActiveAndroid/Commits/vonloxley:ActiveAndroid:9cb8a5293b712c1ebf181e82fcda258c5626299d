diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index 57a35062..2ab29882 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -17,12 +17,11 @@
  */
 
 import java.util.Collection;
-import java.util.HashSet;
-import java.util.Set;
 
 import android.app.Application;
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.support.v4.util.LruCache;
 
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.Log;
@@ -37,7 +36,8 @@
 	private static ModelInfo sModelInfo;
 	private static DatabaseHelper sDatabaseHelper;
 
-	private static Set<Model> sEntities;
+	private static LruCache<String, Model> sEntities;
+	private final static int CACHESIZE = 1024; // Arbitrary cachsize
 
 	private static boolean sIsInitialized = false;
 
@@ -63,7 +63,7 @@ public static synchronized void initialize(Application application) {
 		sModelInfo = new ModelInfo(application);
 		sDatabaseHelper = new DatabaseHelper(sContext);
 
-		sEntities = new HashSet<Model>();
+		sEntities = new LruCache<String, Model>(CACHESIZE);
 
 		sIsInitialized = true;
 
@@ -73,7 +73,7 @@ public static synchronized void initialize(Application application) {
 	}
 
 	public static synchronized void clear() {
-		sEntities = new HashSet<Model>();
+		sEntities.evictAll();
 		Log.v("Cache cleared.");
 	}
 
@@ -115,25 +115,23 @@ public static Context getContext() {
 
 	public static synchronized void addEntity(Model entity) {
 		checkInitialization();
-		sEntities.add(entity);
+
+		if (entity.getId() != null) {
+			sEntities.put(entity.getClass().toString().replaceAll("^class ", "")+'|'+entity.getId(), entity);
+		}
 	}
 
 	public static synchronized Model getEntity(Class<? extends Model> type, long id) {
 		checkInitialization();
-		for (Model entity : sEntities) {
-			if (entity != null && entity.getClass() != null && entity.getClass() == type && entity.getId() != null
-					&& entity.getId() == id) {
 
-				return entity;
-			}
-		}
+		Model entity=sEntities.get(type.getName()+'|'+id);
 
-		return null;
+		return entity;
 	}
 
 	public static synchronized void removeEntity(Model entity) {
 		checkInitialization();
-		sEntities.remove(entity);
+		sEntities.remove(entity.getClass().toString().replaceAll("^class ", "")+'|'+entity.getId());
 	}
 
 	// Model cache
