diff --git a/src/main/java/com/activeandroid/DatabaseHelper.java b/src/main/java/com/activeandroid/DatabaseHelper.java
index e30ec257..6d682476 100644
--- a/src/main/java/com/activeandroid/DatabaseHelper.java
+++ b/src/main/java/com/activeandroid/DatabaseHelper.java
@@ -85,7 +85,7 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
             }
         };
         // see if we need to make this mirror the prepackaged
-        copyAttachedDatabase(configuration.getContext(), TEMP_DB_NAME + configuration.getDatabaseName(), configuration.getDatabaseName());
+        restoreDatabase(configuration.getContext(), TEMP_DB_NAME + configuration.getDatabaseName(), configuration.getDatabaseName());
         mTempDatabase.getWritableDatabase();
 	}
 
@@ -148,6 +148,33 @@ public void copyAttachedDatabase(Context context, String databaseName, String pr
         }
     }
 
+    public void restoreDatabase(Context context, String databaseName, String prepackagedName) {
+        final File dbPath = context.getDatabasePath(databaseName);
+
+        // If the database already exists, return
+        if (dbPath.exists()) {
+            return;
+        }
+
+        // Make sure we have a path to the file
+        dbPath.getParentFile().mkdirs();
+
+        // Try to copy database file
+        try {
+            // check existing and use that as backup
+            File existingDb = context.getDatabasePath(getDatabaseName());
+            InputStream inputStream;
+            if(existingDb.exists()) {
+                inputStream = new FileInputStream(existingDb);
+            } else {
+                inputStream = context.getAssets().open(prepackagedName);
+            }
+            writeDB(dbPath, inputStream);
+        } catch (IOException e) {
+            AALog.e(e.getMessage());
+        }
+    }
+
     private void writeDB(File dbPath, InputStream existingDB) {
         try {
             final OutputStream output = new FileOutputStream(dbPath);
