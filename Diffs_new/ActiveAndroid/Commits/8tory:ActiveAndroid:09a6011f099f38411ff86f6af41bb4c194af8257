diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 130a2941..4cc83af7 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -28,6 +28,7 @@
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.Log;
 import com.activeandroid.util.ReflectionUtils;
+import com.activeandroid.util.SQLiteUtils;
 import com.novoda.notils.cursor.CursorList;
 
 import android.database.ContentObserver;
@@ -94,6 +95,16 @@ public final void delete() {
 				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
 	}
 
+	/** @deprecated */
+	public final <T extends Model> CursorList<T> rawQuery(String sql, String[] selectionArgs) {
+		return rawQuery(mTableInfo.getType(), sql, selectionArgs);
+	}
+
+	/** @deprecated */
+	public final <T extends Model> T rawQuerySingle(String sql, String[] selectionArgs) {
+		return rawQuerySingle(mTableInfo.getType(), sql, selectionArgs);
+	}
+
 	@SuppressLint("NewApi")
 	public ContentValues toContentValues() {
 		final ContentValues values = new ContentValues();
@@ -238,6 +249,16 @@ public static void delete(Class<? extends Model> type, long id) {
 		new Delete().from(type).where("Id=?", id).execute();
 	}
 
+	/** @deprecated */
+	public static <T extends Model> CursorList<T> rawQuery(Class<? extends Model> type, String sql, String[] selectionArgs) {
+		return SQLiteUtils.rawQuery(type, sql, selectionArgs);
+	}
+
+	/** @deprecated */
+	public static <T extends Model> T rawQuerySingle(Class<? extends Model> type, String sql, String[] selectionArgs) {
+		return SQLiteUtils.rawQuerySingle(type, sql, selectionArgs);
+	}
+
 	public static <T extends Model> T loadByActiveAndroid(Class<T> type, long id) {
 		return (T) new Select().from(type).where("Id=?", id).executeSingle();
 	}
