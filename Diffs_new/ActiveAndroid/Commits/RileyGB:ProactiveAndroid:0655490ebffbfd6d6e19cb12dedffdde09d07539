diff --git a/proactiveandroid/build.gradle b/proactiveandroid/build.gradle
index f5908fb5..0da26b53 100644
--- a/proactiveandroid/build.gradle
+++ b/proactiveandroid/build.gradle
@@ -14,7 +14,7 @@ ext {
     siteUrl = 'https://github.com/RileyGB/ProactiveAndroid'
     gitUrl = 'https://github.com/RileyGB/ProactiveAndroid.git'
 
-    libraryVersion = '0.2.1'
+    libraryVersion = '0.2.2'
 
     developerId = 'rackerman'
     developerName = 'Riley Ackerman'
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/TableInfo.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/TableInfo.java
index 345ce8b8..52267276 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/TableInfo.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/TableInfo.java
@@ -108,7 +108,7 @@ public String getColumnName(Field field) {
     private Field getIdField(Class<?> type) {
         if (type.equals(Model.class)) {
             try {
-                return type.getDeclaredField("mId");
+                return type.getDeclaredField("id");
             }
             catch (NoSuchFieldException e) {
                 Log.e("Impossible!", e.toString());
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
index 66e5c296..58ecc0b3 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
@@ -27,12 +27,10 @@
 import com.SearingMedia.proactiveandroid.annotation.Column.ConflictAction;
 import com.SearingMedia.proactiveandroid.serializer.TypeSerializer;
 
-import java.lang.Long;
-import java.lang.String;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Field;
-import java.util.Arrays;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -159,8 +157,8 @@ public static void createUniqueColumnDefinition(TableInfo tableInfo, Field field
 		final String name = tableInfo.getColumnName(field);
 		final Column column = field.getAnnotation(Column.class);
 
-        if (field.getName().equals("mId")) {
-            return;
+		if (field.getName().equals("id")) {
+			return;
         }
 
 		String[] groups = column.uniqueGroups();
@@ -211,8 +209,8 @@ public static void createIndexColumnDefinition(TableInfo tableInfo, Field field)
 		final String name = tableInfo.getColumnName(field);
 		final Column column = field.getAnnotation(Column.class);
 
-        if (field.getName().equals("mId")) {
-            return;
+		if (field.getName().equals("id")) {
+			return;
         }
 
 		if (column.index()) {
