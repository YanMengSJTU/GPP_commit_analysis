diff --git a/tests/assets/migrations/2.sql b/tests/assets/migrations/2.sql
new file mode 100644
index 00000000..9281dd77
--- /dev/null
+++ b/tests/assets/migrations/2.sql
@@ -0,0 +1,18 @@
+CREATE TABLE IF NOT EXISTS MockMigration
+(
+	Id INTEGER AUTO_INCREMENT PRIMARY KEY,
+	Column TEXT NOT NULL
+);
+
+INSERT INTO MockMigration
+(
+	Id,
+	Column
+)
+VALUES
+(
+	1,
+	'text'
+);
+
+DROP TABLE IF EXISTS MockMigration;
diff --git a/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java b/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java
new file mode 100644
index 00000000..971b8a89
--- /dev/null
+++ b/tests/src/com/activeandroid/test/parser/ParserConfigurationTest.java
@@ -0,0 +1,54 @@
+
+package com.activeandroid.test.parser;
+
+import android.database.SQLException;
+import android.database.sqlite.SQLiteDatabase;
+
+import com.activeandroid.Configuration;
+import com.activeandroid.DatabaseHelper;
+import com.activeandroid.test.ActiveAndroidTestCase;
+
+
+public class ParserConfigurationTest extends ActiveAndroidTestCase {
+
+    /**
+     * Should try to use the legacy parser by default, which is be unable to handle the SQL script.
+     */
+    public void testLegacyMigration() {
+
+        try {
+            Configuration configuration = new Configuration.Builder(getContext())
+                    .setDatabaseName("migration.db")
+                    .setDatabaseVersion(2)
+                    .create();
+
+            DatabaseHelper helper = new DatabaseHelper(configuration);
+            SQLiteDatabase db = helper.getWritableDatabase();
+            helper.onUpgrade(db, 1, 2);
+
+            fail("Should not be able to parse the SQL script.");
+
+        } catch (SQLException e) {
+            final String message = e.getMessage();
+
+            assertNotNull(message);
+            assertTrue(message.contains("syntax error"));
+            assertTrue(message.contains("near \"MockMigration\""));
+        }
+    }
+
+    /**
+     * Should use the new parser if configured to do so.
+     */
+    public void testDelimitedMigration() {
+        Configuration configuration = new Configuration.Builder(getContext())
+                .setSqlParser(Configuration.SQL_PARSER_DELIMITED)
+                .setDatabaseName("migration.db")
+                .setDatabaseVersion(2)
+                .create();
+
+        DatabaseHelper helper = new DatabaseHelper(configuration);
+        SQLiteDatabase db = helper.getWritableDatabase();
+        helper.onUpgrade(db, 1, 2);
+    }
+}
