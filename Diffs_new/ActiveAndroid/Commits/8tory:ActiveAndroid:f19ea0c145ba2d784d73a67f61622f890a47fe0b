diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
old mode 100644
new mode 100755
index ee164977..8eba397b
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -30,6 +30,8 @@
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.database.sqlite.SQLiteStatement;
+import android.os.Build;
 
 import com.activeandroid.util.Log;
 import com.activeandroid.util.NaturalOrderComparator;
@@ -173,6 +175,9 @@ private void executeCreateVirtualTable(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
 			for (TableInfo tableInfo : Cache.getTableInfos()) {
+				if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.FROYO) {
+					if (existVirtualTable(db, tableInfo)) continue;
+				}
 				String toSql = SQLiteUtils.createVirtualTableDefinition(tableInfo);
 				if (android.text.TextUtils.isEmpty(toSql)) continue;
 				db.execSQL(toSql);
@@ -184,6 +189,19 @@ private void executeCreateVirtualTable(SQLiteDatabase db) {
 		}
 	}
 
+	private boolean existVirtualTable(SQLiteDatabase db, TableInfo tableInfo) {
+		String tableName = tableInfo.getTableName();
+		SQLiteStatement statement = db.compileStatement(
+					"SELECT DISTINCT tbl_name from sqlite_master where tbl_name = '" + tableName + "'");
+		String result = statement.simpleQueryForString();
+		if (!tableName.equals(result)) {
+			statement = db.compileStatement(
+					"SELECT DISTINCT tablename from sqlite_master where tablename = '" + tableName + "'");
+			result = statement.simpleQueryForString();
+		}
+		return tableName.equals(result);
+	}
+
 	private void executeDrop(SQLiteDatabase db) {
 		db.beginTransaction();
 		try {
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 94e24caf..fbdb50df 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -431,8 +431,13 @@ public static String createVirtualTableDefinition(TableInfo tableInfo) {
 
 		definitions.addAll(createUniqueDefinition(tableInfo));
 
-		return String.format("CREATE VIRTUAL TABLE IF NOT EXISTS %s USING %s(%s);", tableInfo.getTableName(),
-				tableInfo.getModule(), TextUtils.join(", ", definitions));
+		if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.FROYO) {
+			return String.format("CREATE VIRTUAL TABLE %s USING %s(%s);", tableInfo.getTableName(),
+					tableInfo.getModule(), TextUtils.join(", ", definitions));
+		} else {
+			return String.format("CREATE VIRTUAL TABLE IF NOT EXISTS %s USING %s(%s);", tableInfo.getTableName(),
+					tableInfo.getModule(), TextUtils.join(", ", definitions));
+		}
 	}
 
 	@SuppressWarnings("unchecked")
