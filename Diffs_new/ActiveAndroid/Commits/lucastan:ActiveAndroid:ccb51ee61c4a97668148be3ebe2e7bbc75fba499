diff --git a/src/com/activeandroid/TableInfo.java b/src/com/activeandroid/TableInfo.java
index c52ea899..b9616c75 100644
--- a/src/com/activeandroid/TableInfo.java
+++ b/src/com/activeandroid/TableInfo.java
@@ -92,6 +92,7 @@ public TableInfo(Class<? extends Model> type) {
 
         // Manually add the id column since it is not declared like the other columns.
         mColumnNames.put(idField, mIdName);
+        fields.add(idField);
         mFields = Collections.unmodifiableList(fields);
     }
 
@@ -120,7 +121,8 @@ public Field getIdField() {
     }
 
     /**
-     * Get all fields with the {@link Column} annotation.
+     * Get all fields with the {@link Column} annotation, except for the ID field
+     * which has no such annotation.
      */
     public Collection<Field> getFields() {
         return mFields;
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 42902c2a..08e23d57 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -244,7 +244,7 @@ public static int intQuery(final String sql, final String[] selectionArgs) {
 
         for (Field field : tableInfo.getFields()){
             Column column = field.getAnnotation(Column.class);
-            if (!column.unique() || field.getName().equals("mId"))
+            if (column == null || !column.unique() || field.getName().equals("mId"))
                 continue;
             String columnName = tableInfo.getColumnName(field);
             definitions.add(
@@ -277,7 +277,7 @@ public static int intQuery(final String sql, final String[] selectionArgs) {
 
         for (Field field : tableInfo.getFields()){
             Column column = field.getAnnotation(Column.class);
-            if (!column.index() || field.getName().equals("mId"))
+            if (column == null || !column.index() || field.getName().equals("mId"))
                 continue;
             String columnName = tableInfo.getColumnName(field);
             definitions.add(String.format("CREATE INDEX IF NOT EXISTS index_%s_%s on %s(%s);",
@@ -306,13 +306,8 @@ public static int intQuery(final String sql, final String[] selectionArgs) {
     public static String createTableDefinition(TableInfo tableInfo) {
         final ArrayList<String> definitions = new ArrayList<String>();
 
-        String definition = createColumnDefinition(tableInfo, tableInfo.getIdField());
-        if (!TextUtils.isEmpty(definition)) {
-            definitions.add(definition);
-        }
-
         for (Field field : tableInfo.getFields()) {
-            definition = createColumnDefinition(tableInfo, field);
+            String definition = createColumnDefinition(tableInfo, field);
             if (!TextUtils.isEmpty(definition)) {
                 definitions.add(definition);
             }
