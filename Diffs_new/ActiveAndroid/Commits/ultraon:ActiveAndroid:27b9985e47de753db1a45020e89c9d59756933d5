diff --git a/src/com/activeandroid/sebbia/Model.java b/src/com/activeandroid/sebbia/Model.java
index 77ffa4de..d166cd03 100644
--- a/src/com/activeandroid/sebbia/Model.java
+++ b/src/com/activeandroid/sebbia/Model.java
@@ -68,12 +68,16 @@ public final Long getId() {
 		return mId;
 	}
 
-	public final void delete() {
-		Cache.openDatabase().delete(mTableInfo.getTableName(), idName + "=?", new String[] { getId().toString() });
-		Cache.removeEntity(this);
+	public final int delete() {
+        if (null == mId || null == mTableInfo.getTableName() || null == idName) return 0;
+        final int deleted = Cache.openDatabase().delete(mTableInfo.getTableName(), idName + "=?", new String[]{getId().toString()});
+        Log.i("Item Deleted with id " + idName + (deleted > 0 ? " success" : " failed"));
+        Cache.removeEntity(this);
 
 		Cache.getContext().getContentResolver()
 				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
+        this.mId = null;
+        return deleted;
 	}
 
 	public final Long save() {
@@ -85,8 +89,15 @@ public final Long save() {
 			mId = db.insert(mTableInfo.getTableName(), null, values);
 		}
 		else {
-			db.update(mTableInfo.getTableName(), values, idName + "=" + mId, null);
-		}
+            synchronized (this) {
+                final int updated = db.update(mTableInfo.getTableName(), values, idName + "=" + mId, null);
+                if (updated <= 0) {
+                    Log.w(String.format("Can't update model %s with id %d", getClass().getSimpleName(), getId()));
+                    Log.w("Try to insert new model " + getClass().getSimpleName());
+                    mId = db.insert(mTableInfo.getTableName(), null, values);
+                }
+            }
+        }
 
 		Cache.getContext().getContentResolver()
 				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
@@ -96,7 +107,9 @@ public final Long save() {
 	// Convenience methods
 
 	public static void delete(Class<? extends Model> type, long id) {
-		TableInfo tableInfo = Cache.getTableInfo(type);
+        if (null == type) return;
+        TableInfo tableInfo = Cache.getTableInfo(type);
+        if (null == tableInfo || tableInfo.getIdName() == null) return;
 		new Delete().from(type).where(tableInfo.getIdName() + "=?", id).execute();
 	}
 
@@ -129,8 +142,15 @@ public static void saveMultiple(List<? extends Model> entities) {
 				}
 			} else {
 				fillContentValues(entity, values);
-				db.update(entity.mTableInfo.getTableName(), values, entity.mTableInfo.getIdName() + " = " + entity.mId, null);
-			}
+                synchronized (entity) {
+                    final int updated = db.update(entity.mTableInfo.getTableName(), values, entity.mTableInfo.getIdName() + " = " + entity.mId, null);
+                    if (updated <= 0) {
+                        Log.w(String.format("Can't update model %s with id %d", entity.getClass().getSimpleName(), entity.getId()));
+                        Log.w("Try to insert new model " + entity.getClass().getSimpleName());
+                        entity.mId = db.insert(entity.mTableInfo.getTableName(), null, values);
+                    }
+                }
+            }
 		}
 	}
 
