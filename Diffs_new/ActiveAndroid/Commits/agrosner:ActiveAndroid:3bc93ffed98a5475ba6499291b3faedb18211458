diff --git a/src/main/java/com/activeandroid/runtime/DBBatchSaveQueue.java b/src/main/java/com/activeandroid/runtime/DBBatchSaveQueue.java
index 1fb2d5ba..d88326d7 100644
--- a/src/main/java/com/activeandroid/runtime/DBBatchSaveQueue.java
+++ b/src/main/java/com/activeandroid/runtime/DBBatchSaveQueue.java
@@ -25,6 +25,11 @@
      */
     private static final int sMODEL_SAVE_SIZE = 50;
 
+    /**
+     * Tells how many items to save at a time. This can be set using {@link #setModelSaveSize(int)}
+     */
+    private int mModelSaveSize = sMODEL_SAVE_SIZE;
+
     private boolean mQuit = false;
 
     public static DBBatchSaveQueue getSharedSaveQueue(){
@@ -46,6 +51,16 @@ public DBBatchSaveQueue(){
         mModels = new ArrayList<IModel>();
     }
 
+    /**
+     * Sets how many models to save at a time in this queue.
+     * Increase it for larger batches, but slower recovery time.
+     * Smaller the batch, the more time it takes to save overall.
+     * @param mModelSaveSize
+     */
+    public void setModelSaveSize(int mModelSaveSize) {
+        this.mModelSaveSize = mModelSaveSize;
+    }
+
     @Override
     public void run() {
         super.run();
@@ -97,7 +112,7 @@ public void add(final IModel IModel){
         synchronized (mModels){
             mModels.add(IModel);
 
-            if(mModels.size()>sMODEL_SAVE_SIZE){
+            if(mModels.size()>mModelSaveSize){
                 interrupt();
             }
         }
@@ -107,7 +122,7 @@ public void add(final IModel IModel){
         synchronized (mModels){
             mModels.addAll(list);
 
-            if(mModels.size()>sMODEL_SAVE_SIZE){
+            if(mModels.size()>mModelSaveSize){
                 interrupt();
             }
         }
diff --git a/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java b/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
index 6a5232c0..6608bf67 100644
--- a/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
+++ b/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
@@ -24,7 +24,7 @@
 	}
 
 	public Class<?> getSerializedType() {
-		return long.class;
+		return Long.class;
 	}
 
     @Override
