diff --git a/src/main/java/com/activeandroid/ActiveAndroid.java b/src/main/java/com/activeandroid/ActiveAndroid.java
index 2ae4eb7c..bf3bf518 100644
--- a/src/main/java/com/activeandroid/ActiveAndroid.java
+++ b/src/main/java/com/activeandroid/ActiveAndroid.java
@@ -107,7 +107,7 @@ public static void execSQL(String sql, Object[] bindArgs) {
 		Cache.openDatabase().execSQL(sql, bindArgs);
 	}
 
-    public static void checkDbIntegrity() {
-        Cache.checkDbIntegrity();
+    public static boolean checkDbIntegrity() {
+        return Cache.checkDbIntegrity();
     }
 }
diff --git a/src/main/java/com/activeandroid/Cache.java b/src/main/java/com/activeandroid/Cache.java
index 6e439383..e3e7a307 100644
--- a/src/main/java/com/activeandroid/Cache.java
+++ b/src/main/java/com/activeandroid/Cache.java
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteStatement;
 import android.support.v4.util.LruCache;
 
 import com.activeandroid.serializer.TypeSerializer;
@@ -102,10 +103,24 @@ public static synchronized void dispose() {
 		AALog.v("ActiveAndroid disposed. Call initialize to use library.");
 	}
 
-    public static void checkDbIntegrity() {
-        if (!sDatabaseHelper.getWritableDatabase().isDatabaseIntegrityOk()) {
-            sDatabaseHelper.copyAttachedDatabase(sContext, sDatabaseConfiguration.getDatabaseName());
+    public static boolean checkDbIntegrity() {
+        boolean ok = true;
+        String sql = "Pragma " + sDatabaseHelper.getWritableDatabase().getAttachedDbs().get(0).first + ".quick_check(1)";
+        SQLiteStatement statement = sDatabaseHelper.getWritableDatabase().compileStatement(sql);
+
+        try {
+            String result = statement.simpleQueryForString();
+            if (!result.equalsIgnoreCase("ok")) {
+                sDatabaseHelper.copyAttachedDatabase(sContext, sDatabaseConfiguration.getDatabaseName());
+                ok = false;
+            }
+        } finally {
+            if (statement != null) {
+                statement.close();
+            }
         }
+
+        return ok;
     }
 
 	// Database access
