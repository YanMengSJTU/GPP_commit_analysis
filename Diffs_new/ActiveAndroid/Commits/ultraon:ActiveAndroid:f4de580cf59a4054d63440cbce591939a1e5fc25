diff --git a/src/com/activeandroid/sebbia/DeepModel.java b/src/com/activeandroid/sebbia/DeepModel.java
index c0cf581a..dfdcc797 100644
--- a/src/com/activeandroid/sebbia/DeepModel.java
+++ b/src/com/activeandroid/sebbia/DeepModel.java
@@ -61,18 +61,18 @@ public final Long saveDeep(final boolean force, final IDeepActionHandler deepAct
                     if (ex != null) {
                         if (!accessible) field.setAccessible(false);
                         if (force) {
-                            Log.e(String.format("Can't save field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep), ex);
+                            Log.e(String.format("Can't save field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep), ex);
                         } else {
-                            final String errMsg = String.format("Can't save field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep);
+                            final String errMsg = String.format("Can't save field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep);
                             Log.e(errMsg);
                             throw new RuntimeException(errMsg, ex);
                         }
                     } else if (-1l == id) {
                         if (!accessible) field.setAccessible(false);
                         if (force) {
-                            Log.e(String.format("Can't save field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep));
+                            Log.e(String.format("Can't save field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep));
                         } else {
-                            final String errMsg = String.format("Can't save field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep);
+                            final String errMsg = String.format("Can't save field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep);
                             Log.e(errMsg);
                             throw new RuntimeException(errMsg);
                         }
@@ -140,9 +140,9 @@ public final int deleteDeep(final boolean force, final IDeepActionHandler deepAc
                         }
                     } catch (Exception e) {
                         if (force) {
-                            Log.e(String.format("Can't delete field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep), e);
+                            Log.e(String.format("Can't delete field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep), e);
                         } else {
-                            final String errMsg = String.format("Can't delete field %s.%s in DB, deep: %b", field.getClass().getSimpleName(), field.getName(), deep);
+                            final String errMsg = String.format("Can't delete field %s.%s in DB, deep: %b", field.getType().getSimpleName(), field.getName(), deep);
                             Log.e(errMsg, e);
                             throw new RuntimeException(errMsg, e);
                         }
