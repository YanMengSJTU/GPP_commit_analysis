diff --git a/pom.xml b/pom.xml
index eafb111c..e04aaec5 100644
--- a/pom.xml
+++ b/pom.xml
@@ -26,7 +26,7 @@
         <plugin>
           <groupId>com.jayway.maven.plugins.android.generation2</groupId>
           <artifactId>android-maven-plugin</artifactId>
-          <version>3.8.2</version>
+          <version>3.9.0.rc.3</version>
         </plugin>
         <plugin>
           <artifactId>maven-compiler-plugin</artifactId>
diff --git a/src/com/activeandroid/query/From.java b/src/com/activeandroid/query/From.java
index ab3837a9..358c3036 100644
--- a/src/com/activeandroid/query/From.java
+++ b/src/com/activeandroid/query/From.java
@@ -156,12 +156,7 @@ public From offset(String offset) {
 	}
 
 	void addArguments(Object[] args) {
-        for(Object arg : args) {
-            if (arg.getClass() == boolean.class || arg.getClass() == Boolean.class) {
-                arg = (arg.equals(true) ? 1 : 0);
-            }
-            mArguments.add(arg);
-        }
+    SQLiteUtils.addArguments(mArguments, args);
 	}
 
     private void addFrom(final StringBuilder sql) {
diff --git a/src/com/activeandroid/query/Set.java b/src/com/activeandroid/query/Set.java
index 183d99f0..43c27611 100644
--- a/src/com/activeandroid/query/Set.java
+++ b/src/com/activeandroid/query/Set.java
@@ -19,7 +19,6 @@
 import com.activeandroid.util.SQLiteUtils;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 public final class Set implements Sqlable {
@@ -46,7 +45,7 @@ public Set(Update queryBase, String set, Object... args) {
 		mSetArguments = new ArrayList<Object>();
 		mWhereArguments = new ArrayList<Object>();
 
-		mSetArguments.addAll(Arrays.asList(args));
+    SQLiteUtils.addArguments(mSetArguments, args);
 	}
 
 	public Set where(String where) {
@@ -59,7 +58,7 @@ public Set where(String where) {
 	public Set where(String where, Object... args) {
 		mWhere = where;
 		mWhereArguments.clear();
-		mWhereArguments.addAll(Arrays.asList(args));
+    SQLiteUtils.addArguments(mWhereArguments, args);
 
 		return this;
 	}
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index cbf41eae..8b5e3802 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -27,12 +27,11 @@
 import com.activeandroid.annotation.Column.ConflictAction;
 import com.activeandroid.serializer.TypeSerializer;
 
-import java.lang.Long;
-import java.lang.String;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Field;
-import java.util.Arrays;
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -403,4 +402,13 @@ private static int processIntCursor(final Cursor cursor) {
 
 		return sl;
 	}
+
+  public static void addArguments(Collection<Object> argumentList, Object[] newArguments) {
+    for (Object arg : newArguments) {
+        if (arg.getClass() == boolean.class || arg.getClass() == Boolean.class) {
+            arg = (arg.equals(true) ? 1 : 0);
+        }
+        argumentList.add(arg);
+    }
+  }
 }
diff --git a/tests/src/com/activeandroid/test/query/SqlableTestCase.java b/tests/src/com/activeandroid/test/query/SqlableTestCase.java
index 36137600..0a0c4b07 100644
--- a/tests/src/com/activeandroid/test/query/SqlableTestCase.java
+++ b/tests/src/com/activeandroid/test/query/SqlableTestCase.java
@@ -21,10 +21,10 @@
 
 public abstract class SqlableTestCase extends ActiveAndroidTestCase {
 	public static void assertSqlEquals(String expected, Sqlable actual) {
-		assertEquals(expected, actual.toSql());
+		assertEquals(expected.trim(), actual.toSql().trim());
 	}
 	
 	public static void assertSqlEquals(Sqlable expected, Sqlable actual) {
-	    assertEquals(expected.toSql(), actual.toSql());
+	    assertSqlEquals(expected.toSql(), actual);
 	}
 }
diff --git a/tests/src/com/activeandroid/test/query/UpdateTest.java b/tests/src/com/activeandroid/test/query/UpdateTest.java
index 814d34f7..aa731a8d 100644
--- a/tests/src/com/activeandroid/test/query/UpdateTest.java
+++ b/tests/src/com/activeandroid/test/query/UpdateTest.java
@@ -55,6 +55,18 @@ public void testUpdateWhereWithArguments() {
 		assertSqlEquals(UPDATE_PREFIX + "SET Id = 5 WHERE Id IN (?, ?, ?) ",
 				set);
 	}
+
+  public void performTestUpdateBoolean(boolean condition) {
+    Set set = update().set("booleanField = ?", condition);
+    assertArrayEquals(set.getArguments(), condition ? "1" : "0");
+    assertSqlEquals(UPDATE_PREFIX + "SET booleanField = ?",
+        set);
+  }
+
+  public void testUpdateBoolean() {
+    performTestUpdateBoolean(true);
+    performTestUpdateBoolean(false);
+  }
 	
 	private Update update() {
 		return new Update(MockModel.class);
