diff --git a/src/main/java/com/activeandroid/annotation/IndexedKey.java b/src/main/java/com/activeandroid/annotation/IndexedKey.java
new file mode 100644
index 00000000..30dcf18b
--- /dev/null
+++ b/src/main/java/com/activeandroid/annotation/IndexedKey.java
@@ -0,0 +1,14 @@
+package com.activeandroid.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * Created by premnirmal on 9/25/14.
+ */
+@Target(ElementType.FIELD)
+@Retention(RetentionPolicy.RUNTIME)
+public @interface IndexedKey {
+}
diff --git a/src/main/java/com/activeandroid/util/SQLiteUtils.java b/src/main/java/com/activeandroid/util/SQLiteUtils.java
index 58dc1918..fd478156 100644
--- a/src/main/java/com/activeandroid/util/SQLiteUtils.java
+++ b/src/main/java/com/activeandroid/util/SQLiteUtils.java
@@ -28,6 +28,7 @@
 import com.activeandroid.TableInfo;
 import com.activeandroid.annotation.Column;
 import com.activeandroid.annotation.ForeignKey;
+import com.activeandroid.annotation.IndexedKey;
 import com.activeandroid.annotation.PrimaryKey;
 import com.activeandroid.content.ContentProvider;
 import com.activeandroid.exception.PrimaryKeyCannotBeNullException;
@@ -268,7 +269,9 @@ public static String getWhereStatement(Class<? extends IModel> modelClass, Table
         fields = ReflectionUtils.getAllFields(fields, modelClass);
 
         for(Field field : fields){
-            if(field.isAnnotationPresent(PrimaryKey.class)){
+            if(field.isAnnotationPresent(PrimaryKey.class)
+                    && !field.isAnnotationPresent(IndexedKey.class)
+                    ){
                 primaryColumn.add(field);
             }
         }
@@ -295,7 +298,9 @@ public static String getWhereStatement(Class<? extends IModel> modelClass, Table
         fields = ReflectionUtils.getAllFields(fields, modelClass);
 
         for(Field field : fields){
-            if(field.isAnnotationPresent(PrimaryKey.class)){
+            if(field.isAnnotationPresent(PrimaryKey.class)
+                    && !field.isAnnotationPresent(IndexedKey.class)
+                    ){
                 primaryColumns.add(tableInfo.getColumnName(field));
             }
         }
@@ -334,7 +339,9 @@ public static String getWhereStatement(IModel IModel, TableInfo tableInfo){
         fields = ReflectionUtils.getAllFields(fields, IModel.getClass());
 
         for(Field field : fields){
-            if(field.isAnnotationPresent(PrimaryKey.class)){
+            if(field.isAnnotationPresent(PrimaryKey.class)
+                    && !field.isAnnotationPresent(IndexedKey.class)
+                    ){
                 primaryColumn.add(field);
             }
         }
