diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 0726b5ce..f0e21b1e 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -101,6 +101,10 @@ public ContentValues toContentValues() {
 		for (Field field : mTableInfo.getFields()) {
 			final String fieldName = mTableInfo.getColumnName(field);
 			Class<?> fieldType = field.getType();
+			final Column column = field.getAnnotation(Column.class);
+
+			if (column.readOnly())
+				continue;
 
 			field.setAccessible(true);
 
diff --git a/src/com/activeandroid/annotation/Column.java b/src/com/activeandroid/annotation/Column.java
index 2334aa6e..86b1e852 100644
--- a/src/com/activeandroid/annotation/Column.java
+++ b/src/com/activeandroid/annotation/Column.java
@@ -107,4 +107,6 @@
 	 * Execute CREATE INDEX index_table_name_group2 on table_name(member2, member3)
 	 */
 	public String[] indexGroups() default {};
+
+    public boolean readOnly() default false;
 }
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index 3d36546e..b80ddd84 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -246,6 +246,9 @@ public static String createColumnDefinition(TableInfo tableInfo, Field field) {
 		final TypeSerializer typeSerializer = Cache.getParserForType(field.getType());
 		final Column column = field.getAnnotation(Column.class);
 
+		if (column.readOnly())
+			return definition.toString();
+
 		if (typeSerializer != null) {
 			type = typeSerializer.getSerializedType();
 		}
