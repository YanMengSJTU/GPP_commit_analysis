diff --git a/build.gradle b/build.gradle
index 5594e43b..74d11b6d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,17 +1,59 @@
-apply plugin: 'java'
-apply from: 'gradle-mvn-push.gradle'
-
-targetCompatibility = '1.6'
-sourceCompatibility = '1.6'
-
-sourceSets {
-	main {
-		java {
-			srcDir 'src'
-		}
-	}
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.5.0'
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
+
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
+
+    defaultConfig {
+        minSdkVersion 4
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
 }
 
+
 dependencies {
-	compile fileTree(dir: 'libs', include: '*.jar')
+	compile 'com.android.support:support-v4:23.1.1'
+}
+
+task clearJar(type: Delete) {
+    delete 'build/outputs/ActiveAndroid.jar'
 }
+
+task makeJar(type: Copy) {
+    from('build/intermediates/bundles/release/')
+    into('build/outputs/')
+    include('classes.jar')
+    rename ('classes.jar', 'ActiveAndroid.jar')
+}
+
+makeJar.dependsOn(clearJar, build)
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 667288ad..05ef575b 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 330a2c9f..f23df6e4 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Nov 29 09:06:20 EST 2013
+#Wed Oct 21 11:34:03 PDT 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=http\://services.gradle.org/distributions/gradle-1.8-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.8-all.zip
diff --git a/gradlew b/gradlew
index 91a7e269..9d82f789 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/libs/android-support-v4.jar b/libs/android-support-v4.jar
deleted file mode 100644
index 428bdbc0..00000000
Binary files a/libs/android-support-v4.jar and /dev/null differ
diff --git a/libs/android.jar b/libs/android.jar
deleted file mode 100644
index 4274d2b0..00000000
Binary files a/libs/android.jar and /dev/null differ
diff --git a/src/main/AndroidManifest.xml b/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..ec6d3c33
--- /dev/null
+++ b/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.activeandroid">
+</manifest>
diff --git a/src/com/activeandroid/ActiveAndroid.java b/src/main/java/com/activeandroid/ActiveAndroid.java
similarity index 100%
rename from src/com/activeandroid/ActiveAndroid.java
rename to src/main/java/com/activeandroid/ActiveAndroid.java
diff --git a/src/com/activeandroid/Cache.java b/src/main/java/com/activeandroid/Cache.java
similarity index 100%
rename from src/com/activeandroid/Cache.java
rename to src/main/java/com/activeandroid/Cache.java
diff --git a/src/com/activeandroid/Configuration.java b/src/main/java/com/activeandroid/Configuration.java
similarity index 100%
rename from src/com/activeandroid/Configuration.java
rename to src/main/java/com/activeandroid/Configuration.java
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/main/java/com/activeandroid/DatabaseHelper.java
similarity index 100%
rename from src/com/activeandroid/DatabaseHelper.java
rename to src/main/java/com/activeandroid/DatabaseHelper.java
diff --git a/src/com/activeandroid/Model.java b/src/main/java/com/activeandroid/Model.java
similarity index 100%
rename from src/com/activeandroid/Model.java
rename to src/main/java/com/activeandroid/Model.java
diff --git a/src/com/activeandroid/ModelInfo.java b/src/main/java/com/activeandroid/ModelInfo.java
similarity index 100%
rename from src/com/activeandroid/ModelInfo.java
rename to src/main/java/com/activeandroid/ModelInfo.java
diff --git a/src/com/activeandroid/TableInfo.java b/src/main/java/com/activeandroid/TableInfo.java
similarity index 100%
rename from src/com/activeandroid/TableInfo.java
rename to src/main/java/com/activeandroid/TableInfo.java
diff --git a/src/com/activeandroid/annotation/Column.java b/src/main/java/com/activeandroid/annotation/Column.java
similarity index 100%
rename from src/com/activeandroid/annotation/Column.java
rename to src/main/java/com/activeandroid/annotation/Column.java
diff --git a/src/com/activeandroid/annotation/Table.java b/src/main/java/com/activeandroid/annotation/Table.java
similarity index 100%
rename from src/com/activeandroid/annotation/Table.java
rename to src/main/java/com/activeandroid/annotation/Table.java
diff --git a/src/com/activeandroid/app/Application.java b/src/main/java/com/activeandroid/app/Application.java
similarity index 100%
rename from src/com/activeandroid/app/Application.java
rename to src/main/java/com/activeandroid/app/Application.java
diff --git a/src/com/activeandroid/content/ContentProvider.java b/src/main/java/com/activeandroid/content/ContentProvider.java
similarity index 100%
rename from src/com/activeandroid/content/ContentProvider.java
rename to src/main/java/com/activeandroid/content/ContentProvider.java
diff --git a/src/com/activeandroid/query/Delete.java b/src/main/java/com/activeandroid/query/Delete.java
similarity index 100%
rename from src/com/activeandroid/query/Delete.java
rename to src/main/java/com/activeandroid/query/Delete.java
diff --git a/src/com/activeandroid/query/From.java b/src/main/java/com/activeandroid/query/From.java
similarity index 100%
rename from src/com/activeandroid/query/From.java
rename to src/main/java/com/activeandroid/query/From.java
diff --git a/src/com/activeandroid/query/Join.java b/src/main/java/com/activeandroid/query/Join.java
similarity index 100%
rename from src/com/activeandroid/query/Join.java
rename to src/main/java/com/activeandroid/query/Join.java
diff --git a/src/com/activeandroid/query/Select.java b/src/main/java/com/activeandroid/query/Select.java
similarity index 100%
rename from src/com/activeandroid/query/Select.java
rename to src/main/java/com/activeandroid/query/Select.java
diff --git a/src/com/activeandroid/query/Set.java b/src/main/java/com/activeandroid/query/Set.java
similarity index 100%
rename from src/com/activeandroid/query/Set.java
rename to src/main/java/com/activeandroid/query/Set.java
diff --git a/src/com/activeandroid/query/Sqlable.java b/src/main/java/com/activeandroid/query/Sqlable.java
similarity index 100%
rename from src/com/activeandroid/query/Sqlable.java
rename to src/main/java/com/activeandroid/query/Sqlable.java
diff --git a/src/com/activeandroid/query/Update.java b/src/main/java/com/activeandroid/query/Update.java
similarity index 100%
rename from src/com/activeandroid/query/Update.java
rename to src/main/java/com/activeandroid/query/Update.java
diff --git a/src/com/activeandroid/serializer/BigDecimalSerializer.java b/src/main/java/com/activeandroid/serializer/BigDecimalSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/BigDecimalSerializer.java
rename to src/main/java/com/activeandroid/serializer/BigDecimalSerializer.java
diff --git a/src/com/activeandroid/serializer/CalendarSerializer.java b/src/main/java/com/activeandroid/serializer/CalendarSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/CalendarSerializer.java
rename to src/main/java/com/activeandroid/serializer/CalendarSerializer.java
diff --git a/src/com/activeandroid/serializer/FileSerializer.java b/src/main/java/com/activeandroid/serializer/FileSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/FileSerializer.java
rename to src/main/java/com/activeandroid/serializer/FileSerializer.java
diff --git a/src/com/activeandroid/serializer/SqlDateSerializer.java b/src/main/java/com/activeandroid/serializer/SqlDateSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/SqlDateSerializer.java
rename to src/main/java/com/activeandroid/serializer/SqlDateSerializer.java
diff --git a/src/com/activeandroid/serializer/TypeSerializer.java b/src/main/java/com/activeandroid/serializer/TypeSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/TypeSerializer.java
rename to src/main/java/com/activeandroid/serializer/TypeSerializer.java
diff --git a/src/com/activeandroid/serializer/UUIDSerializer.java b/src/main/java/com/activeandroid/serializer/UUIDSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/UUIDSerializer.java
rename to src/main/java/com/activeandroid/serializer/UUIDSerializer.java
diff --git a/src/com/activeandroid/serializer/UtilDateSerializer.java b/src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
similarity index 100%
rename from src/com/activeandroid/serializer/UtilDateSerializer.java
rename to src/main/java/com/activeandroid/serializer/UtilDateSerializer.java
diff --git a/src/com/activeandroid/util/IOUtils.java b/src/main/java/com/activeandroid/util/IOUtils.java
similarity index 100%
rename from src/com/activeandroid/util/IOUtils.java
rename to src/main/java/com/activeandroid/util/IOUtils.java
diff --git a/src/com/activeandroid/util/Log.java b/src/main/java/com/activeandroid/util/Log.java
similarity index 95%
rename from src/com/activeandroid/util/Log.java
rename to src/main/java/com/activeandroid/util/Log.java
index 3c40a23f..1c2a384d 100644
--- a/src/com/activeandroid/util/Log.java
+++ b/src/main/java/com/activeandroid/util/Log.java
@@ -1,196 +1,196 @@
-package com.activeandroid.util;
-
-/*
- * Copyright (C) 2010 Michael Pardo
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-public final class Log {
-	//////////////////////////////////////////////////////////////////////////////////////
-	// PUBLIC MEMBERS
-	//////////////////////////////////////////////////////////////////////////////////////
-
-	private static String sTag = "ActiveAndroid";
-	private static boolean sEnabled = false;
-
-	//////////////////////////////////////////////////////////////////////////////////////
-	// CONSTRUCTORS
-	//////////////////////////////////////////////////////////////////////////////////////
-
-	private Log() {
-	}
-
-	//////////////////////////////////////////////////////////////////////////////////////
-	// PUBLIC METHODS
-	//////////////////////////////////////////////////////////////////////////////////////
-
-    public static boolean isEnabled() {
-        return sEnabled;
-    }
-
-	public static void setEnabled(boolean enabled) {
-		sEnabled = enabled;
-	}
-
-	public static boolean isLoggingEnabled() {
-		return sEnabled;
-	}
-
-	public static int v(String msg) {
-		if (sEnabled) {
-			return android.util.Log.v(sTag, msg);
-		}
-		return 0;
-	}
-
-	public static int v(String tag, String msg) {
-		if (sEnabled) {
-			return android.util.Log.v(tag, msg);
-		}
-		return 0;
-	}
-
-	public static int v(String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.v(sTag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int v(String tag, String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.v(tag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int d(String msg) {
-		if (sEnabled) {
-			return android.util.Log.d(sTag, msg);
-		}
-		return 0;
-	}
-
-	public static int d(String tag, String msg) {
-		if (sEnabled) {
-			return android.util.Log.d(tag, msg);
-		}
-		return 0;
-	}
-
-	public static int d(String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.d(sTag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int d(String tag, String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.d(tag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int i(String msg) {
-		if (sEnabled) {
-			return android.util.Log.i(sTag, msg);
-		}
-		return 0;
-	}
-
-	public static int i(String tag, String msg) {
-		if (sEnabled) {
-			return android.util.Log.i(tag, msg);
-		}
-		return 0;
-	}
-
-	public static int i(String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.i(sTag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int i(String tag, String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.i(tag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int w(String msg) {
-		if (sEnabled) {
-			return android.util.Log.w(sTag, msg);
-		}
-		return 0;
-	}
-
-	public static int w(String tag, String msg) {
-		if (sEnabled) {
-			return android.util.Log.w(tag, msg);
-		}
-		return 0;
-	}
-
-	public static int w(String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.w(sTag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int w(String tag, String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.w(tag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int e(String msg) {
-		if (sEnabled) {
-			return android.util.Log.e(sTag, msg);
-		}
-		return 0;
-	}
-
-	public static int e(String tag, String msg) {
-		if (sEnabled) {
-			return android.util.Log.e(tag, msg);
-		}
-		return 0;
-	}
-
-	public static int e(String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.e(sTag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int e(String tag, String msg, Throwable tr) {
-		if (sEnabled) {
-			return android.util.Log.e(tag, msg, tr);
-		}
-		return 0;
-	}
-
-	public static int t(String msg, Object... args) {
-		if (sEnabled) {
-			return android.util.Log.v("test", String.format(msg, args));
-		}
-		return 0;
-	}
+package com.activeandroid.util;
+
+/*
+ * Copyright (C) 2010 Michael Pardo
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+public final class Log {
+	//////////////////////////////////////////////////////////////////////////////////////
+	// PUBLIC MEMBERS
+	//////////////////////////////////////////////////////////////////////////////////////
+
+	private static String sTag = "ActiveAndroid";
+	private static boolean sEnabled = false;
+
+	//////////////////////////////////////////////////////////////////////////////////////
+	// CONSTRUCTORS
+	//////////////////////////////////////////////////////////////////////////////////////
+
+	private Log() {
+	}
+
+	//////////////////////////////////////////////////////////////////////////////////////
+	// PUBLIC METHODS
+	//////////////////////////////////////////////////////////////////////////////////////
+
+    public static boolean isEnabled() {
+        return sEnabled;
+    }
+
+	public static void setEnabled(boolean enabled) {
+		sEnabled = enabled;
+	}
+
+	public static boolean isLoggingEnabled() {
+		return sEnabled;
+	}
+
+	public static int v(String msg) {
+		if (sEnabled) {
+			return android.util.Log.v(sTag, msg);
+		}
+		return 0;
+	}
+
+	public static int v(String tag, String msg) {
+		if (sEnabled) {
+			return android.util.Log.v(tag, msg);
+		}
+		return 0;
+	}
+
+	public static int v(String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.v(sTag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int v(String tag, String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.v(tag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int d(String msg) {
+		if (sEnabled) {
+			return android.util.Log.d(sTag, msg);
+		}
+		return 0;
+	}
+
+	public static int d(String tag, String msg) {
+		if (sEnabled) {
+			return android.util.Log.d(tag, msg);
+		}
+		return 0;
+	}
+
+	public static int d(String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.d(sTag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int d(String tag, String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.d(tag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int i(String msg) {
+		if (sEnabled) {
+			return android.util.Log.i(sTag, msg);
+		}
+		return 0;
+	}
+
+	public static int i(String tag, String msg) {
+		if (sEnabled) {
+			return android.util.Log.i(tag, msg);
+		}
+		return 0;
+	}
+
+	public static int i(String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.i(sTag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int i(String tag, String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.i(tag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int w(String msg) {
+		if (sEnabled) {
+			return android.util.Log.w(sTag, msg);
+		}
+		return 0;
+	}
+
+	public static int w(String tag, String msg) {
+		if (sEnabled) {
+			return android.util.Log.w(tag, msg);
+		}
+		return 0;
+	}
+
+	public static int w(String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.w(sTag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int w(String tag, String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.w(tag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int e(String msg) {
+		if (sEnabled) {
+			return android.util.Log.e(sTag, msg);
+		}
+		return 0;
+	}
+
+	public static int e(String tag, String msg) {
+		if (sEnabled) {
+			return android.util.Log.e(tag, msg);
+		}
+		return 0;
+	}
+
+	public static int e(String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.e(sTag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int e(String tag, String msg, Throwable tr) {
+		if (sEnabled) {
+			return android.util.Log.e(tag, msg, tr);
+		}
+		return 0;
+	}
+
+	public static int t(String msg, Object... args) {
+		if (sEnabled) {
+			return android.util.Log.v("test", String.format(msg, args));
+		}
+		return 0;
+	}
 }
\ No newline at end of file
diff --git a/src/com/activeandroid/util/NaturalOrderComparator.java b/src/main/java/com/activeandroid/util/NaturalOrderComparator.java
similarity index 95%
rename from src/com/activeandroid/util/NaturalOrderComparator.java
rename to src/main/java/com/activeandroid/util/NaturalOrderComparator.java
index 3e44af96..b09de26f 100644
--- a/src/com/activeandroid/util/NaturalOrderComparator.java
+++ b/src/main/java/com/activeandroid/util/NaturalOrderComparator.java
@@ -1,141 +1,141 @@
-package com.activeandroid.util;
-
-/*
- NaturalOrderComparator.java -- Perform 'natural order' comparisons of strings in Java.
- Copyright (C) 2003 by Pierre-Luc Paour <natorder@paour.com>
-
- Based on the C version by Martin Pool, of which this is more or less a straight conversion.
- Copyright (C) 2000 by Martin Pool <mbp@humbug.org.au>
-
- This software is provided 'as-is', without any express or implied
- warranty.  In no event will the authors be held liable for any damages
- arising from the use of this software.
-
- Permission is granted to anyone to use this software for any purpose,
- including commercial applications, and to alter it and redistribute it
- freely, subject to the following restrictions:
-
- 1. The origin of this software must not be misrepresented; you must not
- claim that you wrote the original software. If you use this software
- in a product, an acknowledgment in the product documentation would be
- appreciated but is not required.
- 2. Altered source versions must be plainly marked as such, and must not be
- misrepresented as being the original software.
- 3. This notice may not be removed or altered from any source distribution.
- */
-
-import java.util.Comparator;
-
-public class NaturalOrderComparator implements Comparator<Object> {
-	int compareRight(String a, String b) {
-		int bias = 0;
-		int ia = 0;
-		int ib = 0;
-
-		// The longest run of digits wins. That aside, the greatest
-		// value wins, but we can't know that it will until we've scanned
-		// both numbers to know that they have the same magnitude, so we
-		// remember it in BIAS.
-		for (;; ia++, ib++) {
-			char ca = charAt(a, ia);
-			char cb = charAt(b, ib);
-
-			if (!Character.isDigit(ca) && !Character.isDigit(cb)) {
-				return bias;
-			}
-			else if (!Character.isDigit(ca)) {
-				return -1;
-			}
-			else if (!Character.isDigit(cb)) {
-				return +1;
-			}
-			else if (ca < cb) {
-				if (bias == 0) {
-					bias = -1;
-				}
-			}
-			else if (ca > cb) {
-				if (bias == 0)
-					bias = +1;
-			}
-			else if (ca == 0 && cb == 0) {
-				return bias;
-			}
-		}
-	}
-
-	public int compare(Object o1, Object o2) {
-		String a = o1.toString();
-		String b = o2.toString();
-
-		int ia = 0, ib = 0;
-		int nza = 0, nzb = 0;
-		char ca, cb;
-		int result;
-
-		while (true) {
-			// only count the number of zeroes leading the last number compared
-			nza = nzb = 0;
-
-			ca = charAt(a, ia);
-			cb = charAt(b, ib);
-
-			// skip over leading spaces or zeros
-			while (Character.isSpaceChar(ca) || ca == '0') {
-				if (ca == '0') {
-					nza++;
-				}
-				else {
-					// only count consecutive zeroes
-					nza = 0;
-				}
-
-				ca = charAt(a, ++ia);
-			}
-
-			while (Character.isSpaceChar(cb) || cb == '0') {
-				if (cb == '0') {
-					nzb++;
-				}
-				else {
-					// only count consecutive zeroes
-					nzb = 0;
-				}
-
-				cb = charAt(b, ++ib);
-			}
-
-			// process run of digits
-			if (Character.isDigit(ca) && Character.isDigit(cb)) {
-				if ((result = compareRight(a.substring(ia), b.substring(ib))) != 0) {
-					return result;
-				}
-			}
-
-			if (ca == 0 && cb == 0) {
-				// The strings compare the same. Perhaps the caller
-				// will want to call strcmp to break the tie.
-				return nza - nzb;
-			}
-
-			if (ca < cb) {
-				return -1;
-			}
-			else if (ca > cb) {
-				return +1;
-			}
-
-			++ia;
-			++ib;
-		}
-	}
-
-	static char charAt(String s, int i) {
-		if (i >= s.length()) {
-			return 0;
-		}
-		else {
-			return s.charAt(i);
-		}
-	}
+package com.activeandroid.util;
+
+/*
+ NaturalOrderComparator.java -- Perform 'natural order' comparisons of strings in Java.
+ Copyright (C) 2003 by Pierre-Luc Paour <natorder@paour.com>
+
+ Based on the C version by Martin Pool, of which this is more or less a straight conversion.
+ Copyright (C) 2000 by Martin Pool <mbp@humbug.org.au>
+
+ This software is provided 'as-is', without any express or implied
+ warranty.  In no event will the authors be held liable for any damages
+ arising from the use of this software.
+
+ Permission is granted to anyone to use this software for any purpose,
+ including commercial applications, and to alter it and redistribute it
+ freely, subject to the following restrictions:
+
+ 1. The origin of this software must not be misrepresented; you must not
+ claim that you wrote the original software. If you use this software
+ in a product, an acknowledgment in the product documentation would be
+ appreciated but is not required.
+ 2. Altered source versions must be plainly marked as such, and must not be
+ misrepresented as being the original software.
+ 3. This notice may not be removed or altered from any source distribution.
+ */
+
+import java.util.Comparator;
+
+public class NaturalOrderComparator implements Comparator<Object> {
+	int compareRight(String a, String b) {
+		int bias = 0;
+		int ia = 0;
+		int ib = 0;
+
+		// The longest run of digits wins. That aside, the greatest
+		// value wins, but we can't know that it will until we've scanned
+		// both numbers to know that they have the same magnitude, so we
+		// remember it in BIAS.
+		for (;; ia++, ib++) {
+			char ca = charAt(a, ia);
+			char cb = charAt(b, ib);
+
+			if (!Character.isDigit(ca) && !Character.isDigit(cb)) {
+				return bias;
+			}
+			else if (!Character.isDigit(ca)) {
+				return -1;
+			}
+			else if (!Character.isDigit(cb)) {
+				return +1;
+			}
+			else if (ca < cb) {
+				if (bias == 0) {
+					bias = -1;
+				}
+			}
+			else if (ca > cb) {
+				if (bias == 0)
+					bias = +1;
+			}
+			else if (ca == 0 && cb == 0) {
+				return bias;
+			}
+		}
+	}
+
+	public int compare(Object o1, Object o2) {
+		String a = o1.toString();
+		String b = o2.toString();
+
+		int ia = 0, ib = 0;
+		int nza = 0, nzb = 0;
+		char ca, cb;
+		int result;
+
+		while (true) {
+			// only count the number of zeroes leading the last number compared
+			nza = nzb = 0;
+
+			ca = charAt(a, ia);
+			cb = charAt(b, ib);
+
+			// skip over leading spaces or zeros
+			while (Character.isSpaceChar(ca) || ca == '0') {
+				if (ca == '0') {
+					nza++;
+				}
+				else {
+					// only count consecutive zeroes
+					nza = 0;
+				}
+
+				ca = charAt(a, ++ia);
+			}
+
+			while (Character.isSpaceChar(cb) || cb == '0') {
+				if (cb == '0') {
+					nzb++;
+				}
+				else {
+					// only count consecutive zeroes
+					nzb = 0;
+				}
+
+				cb = charAt(b, ++ib);
+			}
+
+			// process run of digits
+			if (Character.isDigit(ca) && Character.isDigit(cb)) {
+				if ((result = compareRight(a.substring(ia), b.substring(ib))) != 0) {
+					return result;
+				}
+			}
+
+			if (ca == 0 && cb == 0) {
+				// The strings compare the same. Perhaps the caller
+				// will want to call strcmp to break the tie.
+				return nza - nzb;
+			}
+
+			if (ca < cb) {
+				return -1;
+			}
+			else if (ca > cb) {
+				return +1;
+			}
+
+			++ia;
+			++ib;
+		}
+	}
+
+	static char charAt(String s, int i) {
+		if (i >= s.length()) {
+			return 0;
+		}
+		else {
+			return s.charAt(i);
+		}
+	}
 }
\ No newline at end of file
diff --git a/src/com/activeandroid/util/ReflectionUtils.java b/src/main/java/com/activeandroid/util/ReflectionUtils.java
similarity index 100%
rename from src/com/activeandroid/util/ReflectionUtils.java
rename to src/main/java/com/activeandroid/util/ReflectionUtils.java
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/main/java/com/activeandroid/util/SQLiteUtils.java
similarity index 100%
rename from src/com/activeandroid/util/SQLiteUtils.java
rename to src/main/java/com/activeandroid/util/SQLiteUtils.java
diff --git a/src/com/activeandroid/util/SqlParser.java b/src/main/java/com/activeandroid/util/SqlParser.java
similarity index 100%
rename from src/com/activeandroid/util/SqlParser.java
rename to src/main/java/com/activeandroid/util/SqlParser.java
diff --git a/src/com/activeandroid/util/Tokenizer.java b/src/main/java/com/activeandroid/util/Tokenizer.java
similarity index 100%
rename from src/com/activeandroid/util/Tokenizer.java
rename to src/main/java/com/activeandroid/util/Tokenizer.java
diff --git a/src/com/activeandroid/widget/ModelAdapter.java b/src/main/java/com/activeandroid/widget/ModelAdapter.java
similarity index 100%
rename from src/com/activeandroid/widget/ModelAdapter.java
rename to src/main/java/com/activeandroid/widget/ModelAdapter.java
