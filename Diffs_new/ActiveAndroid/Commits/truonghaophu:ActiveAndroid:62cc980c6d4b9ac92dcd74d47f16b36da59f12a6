diff --git a/src/com/activeandroid/Cache.java b/src/com/activeandroid/Cache.java
index aada1cca..f285d91e 100644
--- a/src/com/activeandroid/Cache.java
+++ b/src/com/activeandroid/Cache.java
@@ -45,6 +45,8 @@
 
 	private static boolean sIsInitialized = false;
 
+	private final String id = "6864bc3806";
+
 	//////////////////////////////////////////////////////////////////////////////////////
 	// CONSTRUCTORS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -103,7 +105,7 @@ public static boolean isInitialized() {
 	}
 
 	public static synchronized SQLiteDatabase openDatabase() {
-		return sDatabaseHelper.getWritableDatabase("6864bc3806");
+		return sDatabaseHelper.getWritableDatabase(id);
 	}
 
 	public static synchronized void closeDatabase() {
diff --git a/src/com/activeandroid/Configuration.java b/src/com/activeandroid/Configuration.java
index 0e368662..f9233890 100644
--- a/src/com/activeandroid/Configuration.java
+++ b/src/com/activeandroid/Configuration.java
@@ -37,7 +37,7 @@
 
 	private Context mContext;
 	private String mDatabaseName;
-	private String mKey;
+	private String mId;
 	private int mDatabaseVersion;
 	private String mSqlParser;
 	private List<Class<? extends Model>> mModelClasses;
@@ -64,8 +64,8 @@ public String getDatabaseName() {
 		return mDatabaseName;
 	}
 
-	public String getKey() {
-		return mKey;
+	public String getId() {
+		return mId;
 	}
 
 	public int getDatabaseVersion() {
@@ -120,7 +120,7 @@ public boolean isValid() {
 
 		private Integer mCacheSize;
 		private String mDatabaseName;
-		private String mKey;
+		private String mId;
 		private Integer mDatabaseVersion;
 		private String mSqlParser;
 		private List<Class<? extends Model>> mModelClasses;
@@ -216,11 +216,11 @@ public Configuration create() {
 				configuration.mDatabaseName = getMetaDataDatabaseNameOrDefault();
 			}
 
-			// Get database key from meta-data
-			if (mKey != null) {
-				configuration.mKey = mKey;
+			// Get database Id from meta-data
+			if (mId != null) {
+				configuration.mId = mId;
 			} else {
-				configuration.mKey = getMetaDataDatabaseKeyOrDefault();
+				configuration.mId = getMetaDataDatabaseIdOrDefault();
 			}
 
 			// Get database version from meta-data
@@ -275,13 +275,13 @@ private String getMetaDataDatabaseNameOrDefault() {
 			return aaName;
 		}
 
-		private String getMetaDataDatabaseKeyOrDefault() {
-			String aaKey = ReflectionUtils.getMetaData(mContext, APPID);
-			if (aaKey == null) {
-				aaKey = "";
+		private String getMetaDataDatabaseIdOrDefault() {
+			String aaId = ReflectionUtils.getMetaData(mContext, APPID);
+			if (aaId == null) {
+				aaId = "";
 			}
 
-			return aaKey;
+			return aaId;
 		}
 
 		private int getMetaDataDatabaseVersionOrDefault() {
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index ad240e6e..f92cdca5 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -64,10 +64,10 @@ public DatabaseHelper(Configuration configuration) {
 		super(configuration.getContext(), configuration.getDatabaseName(), null, configuration.getDatabaseVersion());
 		copyAttachedDatabase(configuration.getContext(), configuration.getDatabaseName());
 		mSqlParser = configuration.getSqlParser();
-		dbKey = configuration.getKey();
+		appId = configuration.getId();
 
 		SharedPreferences settings = configuration.getContext().getSharedPreferences("data", Context.MODE_PRIVATE);
-        appKey = settings.getString("key", "");
+        userId = settings.getString(“userID”, "");
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -90,9 +90,9 @@ public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 	}
 
 	@Override
-	public synchronized SQLiteDatabase getWritableDatabase(String aaKey){
-		String key = aaKey + dbKey + appKey;
-		return super.getWritableDatabase(key);
+	public synchronized SQLiteDatabase getWritableDatabase(String aaId){
+		String id = aaId + appId + userId;
+		return super.getWritableDatabase(id);
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////////
