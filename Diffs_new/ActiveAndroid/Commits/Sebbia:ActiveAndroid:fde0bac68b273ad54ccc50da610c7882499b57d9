diff --git a/src/com/activeandroid/sebbia/Model.java b/src/com/activeandroid/sebbia/Model.java
index 19277f47..5d27b404 100644
--- a/src/com/activeandroid/sebbia/Model.java
+++ b/src/com/activeandroid/sebbia/Model.java
@@ -110,7 +110,7 @@ public static void saveMultiple(List<? extends Model> entities) {
 		final ContentValues values = new ContentValues();
 		for (Model entity : entities) {
 			values.clear();
-			if (entity.mId == null && (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?>)) {
+			if (entity.mId == null && (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?, ?>)) {
 				entity.fillContentValuesReflective(values);
 				db.insert(entity.mTableInfo.getTableName(), null, values);
 			} else if (entity.mId == null) {
@@ -137,7 +137,7 @@ public final void loadFromCursor(Cursor cursor) {
 	}
 	
 	private static void fillContentValues(Model entity, ContentValues values) {
-		if (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?>) {
+		if (entity instanceof ManyToManyRelation<?, ?> || entity instanceof OneToManyRelation<?, ?>) {
 			entity.fillContentValuesReflective(values);
 			return;
 		}
diff --git a/src/com/activeandroid/sebbia/model/OneToManyRelation.java b/src/com/activeandroid/sebbia/model/OneToManyRelation.java
index 77304bed..fd1d6a92 100644
--- a/src/com/activeandroid/sebbia/model/OneToManyRelation.java
+++ b/src/com/activeandroid/sebbia/model/OneToManyRelation.java
@@ -12,7 +12,7 @@
 import com.activeandroid.sebbia.query.Delete;
 import com.activeandroid.sebbia.util.Log;
 
-public abstract class OneToManyRelation<T1 extends Model> extends Model {
+public abstract class OneToManyRelation<T1 extends Model, T2 extends Model> extends Model {
 
 	@Column (name = "entity1")
 	private T1 entity1;
@@ -21,19 +21,19 @@
 	@Column (name = "entity2")
 	private Model entity2;
 
-	public static <T1 extends Model> void setRelations(Class<? extends OneToManyRelation<T1>> relation, T1 entity1, List<Model> entities2) {
+	public static <T1 extends Model, T2 extends Model> void setRelations(Class<? extends OneToManyRelation<T1, T2>> relation, T1 entity1, List<T2> entities2) {
 		if (entity1.getId() == null)
 			throw new IllegalArgumentException(entity1.getClass().getSimpleName() + " is not saved to database yet, aborting");
-		for (Model entity2 : entities2) {
+		for (T2 entity2 : entities2) {
 			if (entity2.getId() == null)
 				throw new IllegalArgumentException(entity2.getClass().getSimpleName() + " is not saved to database yet, aborting");
 		}
 
 		new Delete().from(relation).where("entity1 = ?", entity1.getId()).execute();
 		try {
-			ArrayList<OneToManyRelation<T1>> connections = new ArrayList<OneToManyRelation<T1>>();
-			for (Model entity2 : entities2) {
-				OneToManyRelation<T1> connection = relation.newInstance();
+			List<OneToManyRelation<T1, T2>> connections = new ArrayList<OneToManyRelation<T1, T2>>();
+			for (T2 entity2 : entities2) {
+				OneToManyRelation<T1, T2> connection = relation.newInstance();
 				connection.entity1 = entity1;
 				connection.entity2Type = entity2.getClass().getCanonicalName();
 				connection.entity2 = entity2;
@@ -46,20 +46,20 @@
 		}
 	}
 
-	public static <T1 extends Model> List<Model> getRelations(Class<? extends OneToManyRelation<T1>> relation, T1 entity) {
+	@SuppressWarnings("unchecked")
+	public static <T1 extends Model, T2 extends Model> List<T2> getRelations(Class<? extends OneToManyRelation<T1, T2>> relation, T1 entity) {
 		if (entity.getId() == null)
 			throw new IllegalArgumentException(entity.getClass().getSimpleName() + " is not saved to database yet, aborting");
 
 		TableInfo crossTableInfo = Cache.getTableInfo(relation);
 		Cursor cursor = Cache.openDatabase().rawQuery("SELECT entity2Type, entity2 FROM " + crossTableInfo.getTableName() + " WHERE entity1 = ?", new String[] {entity.getId().toString()});
-		final List<Model> entities = new ArrayList<Model>();
+		final List<T2> entities = new ArrayList<T2>();
 		try {
 			if (cursor.moveToFirst()) {
 				do {
 					String typeName = cursor.getString(0);
-					@SuppressWarnings("unchecked")
 					Class<? extends Model> entity2Class = (Class<? extends Model>) Class.forName(typeName);
-					entities.add(Model.load(entity2Class, cursor.getLong(1)));
+					entities.add((T2) Model.load(entity2Class, cursor.getLong(1)));
 				}
 				while (cursor.moveToNext());
 			}
diff --git a/tests/src/com/activeandroid/test/model/OneToManyTest.java b/tests/src/com/activeandroid/test/model/OneToManyTest.java
index 189ca17e..9319b13e 100644
--- a/tests/src/com/activeandroid/test/model/OneToManyTest.java
+++ b/tests/src/com/activeandroid/test/model/OneToManyTest.java
@@ -9,7 +9,7 @@
 
 public class OneToManyTest extends ModelTestCase {
 	
-	public static class MockOneToManyRelation extends OneToManyRelation<MockModel> {
+	public static class MockOneToManyRelation extends OneToManyRelation<MockModel, Model> {
 		public MockOneToManyRelation() {
 			super();
 		}
