diff --git a/src/main/java/com/activeandroid/Cache.java b/src/main/java/com/activeandroid/Cache.java
index e6d8b5c6..0de8a375 100644
--- a/src/main/java/com/activeandroid/Cache.java
+++ b/src/main/java/com/activeandroid/Cache.java
@@ -16,15 +16,16 @@
  * limitations under the License.
  */
 
-import java.util.Collection;
-
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.support.v4.util.LruCache;
 
+import com.activeandroid.app.AAApplication;
 import com.activeandroid.serializer.TypeSerializer;
 import com.activeandroid.util.AALog;
 
+import java.util.Collection;
+
 public final class Cache {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PUBLIC CONSTANTS
@@ -112,6 +113,11 @@ public static Context getContext() {
 		return sContext;
 	}
 
+    // AAApplication access
+    public static AAApplication getAAApplication() {
+        return (AAApplication) sContext;
+    }
+
 	// Entity cache
 
 	public static String getIdentifier(Class<? extends Model> type, String entityId) {
diff --git a/src/main/java/com/activeandroid/DatabaseHelper.java b/src/main/java/com/activeandroid/DatabaseHelper.java
index 8cd3113e..a6be84bf 100644
--- a/src/main/java/com/activeandroid/DatabaseHelper.java
+++ b/src/main/java/com/activeandroid/DatabaseHelper.java
@@ -165,6 +165,10 @@ private boolean executeMigrations(SQLiteDatabase db, int oldVersion, int newVers
             AALog.e("Failed to execute migrations.", e);
         }
 
+        if(migrationExecuted) {
+            Cache.getAAApplication().onMigrationSuccessful();
+        }
+
         return migrationExecuted;
     }
 
diff --git a/src/main/java/com/activeandroid/app/AAApplication.java b/src/main/java/com/activeandroid/app/AAApplication.java
index d4a0b759..e9812c9c 100644
--- a/src/main/java/com/activeandroid/app/AAApplication.java
+++ b/src/main/java/com/activeandroid/app/AAApplication.java
@@ -18,32 +18,38 @@
 
 import com.activeandroid.ActiveAndroid;
 import com.activeandroid.manager.DBManagerRuntime;
-import com.activeandroid.runtime.DBRequestQueue;
 
 public class AAApplication extends android.app.Application {
 
     private static boolean mDebug = false;
 
-	@Override
-	public void onCreate() {
-		super.onCreate();
-		ActiveAndroid.initialize(this);
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        ActiveAndroid.initialize(this);
 
         DBManagerRuntime.restartManagers();
-	}
+    }
 
-    public static void setDebugLogEnabled(boolean enabled){
+    public static void setDebugLogEnabled(boolean enabled) {
         mDebug = enabled;
     }
 
-    public static boolean isDebugEnabled(){
+    public static boolean isDebugEnabled() {
         return mDebug;
     }
-	
-	@Override
-	public void onTerminate() {
-		super.onTerminate();
 
-		ActiveAndroid.dispose();
-	}
+    @Override
+    public void onTerminate() {
+        super.onTerminate();
+
+        ActiveAndroid.dispose();
+    }
+
+    /**
+     * override this method to perform any special operations when a migration takes place
+     */
+    public void onMigrationSuccessful() {
+
+    }
 }
\ No newline at end of file
