diff --git a/build.gradle b/build.gradle
index f104d261..231ff3da 100644
--- a/build.gradle
+++ b/build.gradle
@@ -2,7 +2,7 @@ apply plugin: 'java'
 apply from: 'gradle-mvn-push.gradle'
 
 group = 'com.github.vicpinm'
-version = '3.1.1'
+version = '3.1.5'
 
 sourceCompatibility = 1.7
 targetCompatibility = 1.7
diff --git a/gradle.properties b/gradle.properties
index e87e89bf..a7e7e4c4 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,5 +1,5 @@
-VERSION_NAME=3.1.1
-VERSION_CODE=1
+VERSION_NAME=3.1.5
+VERSION_CODE=2
 GROUP=com.github.vicpinm
 
 POM_DESCRIPTION=ActiveAndroid fork with reactive extensions.
diff --git a/src/com/activeandroid/DatabaseHelper.java b/src/com/activeandroid/DatabaseHelper.java
index 7158c5bb..4954037b 100644
--- a/src/com/activeandroid/DatabaseHelper.java
+++ b/src/com/activeandroid/DatabaseHelper.java
@@ -16,17 +16,6 @@
  * limitations under the License.
  */
 
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.OutputStream;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
@@ -38,6 +27,17 @@
 import com.activeandroid.util.SQLiteUtils;
 import com.activeandroid.util.SqlParser;
 
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
 public final class DatabaseHelper extends SQLiteOpenHelper {
 	//////////////////////////////////////////////////////////////////////////////////////
 	// PUBLIC CONSTANTS
@@ -227,7 +227,11 @@ private void executeDelimitedSqlScript(SQLiteDatabase db, InputStream stream) th
 	    List<String> commands = SqlParser.parse(stream);
 
 	    for(String command : commands) {
-	        db.execSQL(command);
+			try {
+				db.execSQL(command);
+			} catch(Exception ex){
+				ex.printStackTrace();
+			}
 	    }
 	}
 
@@ -244,7 +248,11 @@ private void executeLegacySqlScript(SQLiteDatabase db, InputStream stream) throw
             while ((line = buffer.readLine()) != null) {
                 line = line.replace(";", "").trim();
                 if (!TextUtils.isEmpty(line)) {
-                    db.execSQL(line);
+					try {
+						db.execSQL(line);
+					} catch(Exception ex){
+						ex.printStackTrace();
+					}
                 }
             }
 
