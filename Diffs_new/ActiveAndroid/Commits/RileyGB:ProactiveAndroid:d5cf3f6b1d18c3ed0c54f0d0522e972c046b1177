diff --git a/proactiveandroid/build.gradle b/proactiveandroid/build.gradle
index 00af8ec9..d02a7b4b 100644
--- a/proactiveandroid/build.gradle
+++ b/proactiveandroid/build.gradle
@@ -14,7 +14,7 @@ ext {
     siteUrl = 'https://github.com/RileyGB/ProactiveAndroid'
     gitUrl = 'https://github.com/RileyGB/ProactiveAndroid.git'
 
-    libraryVersion = '0.2.9'
+    libraryVersion = '0.3.0'
 
     developerId = 'rackerman'
     developerName = 'Riley Ackerman'
diff --git a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
index 31221e6e..a81426dc 100644
--- a/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
+++ b/proactiveandroid/src/main/java/com/SearingMedia/proactiveandroid/util/SQLiteUtils.java
@@ -17,12 +17,9 @@
  */
 
 import android.database.Cursor;
-import android.database.sqlite.SQLiteException;
 import android.os.Build;
 import android.text.TextUtils;
-import android.util.Log;
 
-import com.SearingMedia.proactiveandroid.BuildConfig;
 import com.SearingMedia.proactiveandroid.Cache;
 import com.SearingMedia.proactiveandroid.Model;
 import com.SearingMedia.proactiveandroid.TableInfo;
@@ -40,8 +37,6 @@
 import java.util.Set;
 
 public final class SQLiteUtils {
-    public static final String TAG = "SQLiteUtils";
-
 	//////////////////////////////////////////////////////////////////////////////////////
 	// ENUMERATIONS
 	//////////////////////////////////////////////////////////////////////////////////////
@@ -106,21 +101,14 @@ public static void execSql(String sql, Object[] bindArgs) {
 	}
 
 	public static <T extends Model> List<T> rawQuery(Class<? extends Model> type, String sql, String[] selectionArgs) {
-        try {
-            Cursor cursor = Cache.openDatabase().rawQuery(sql, selectionArgs);
-            List<T> entities = processCursor(type, cursor);
-            cursor.close();
-
-            return entities;
-        } catch (SQLiteException e) {
-            if (BuildConfig.DEBUG) {
-                Log.e(TAG, "Encountered SQL Lite Exception, returning null", e);
-            }
-            return null;
-        }
+        Cursor cursor = Cache.openDatabase().rawQuery(sql, selectionArgs);
+        List<T> entities = processCursor(type, cursor);
+        cursor.close();
+
+        return entities;
     }
-	  
-	public static int intQuery(final String sql, final String[] selectionArgs) {
+
+    public static int intQuery(final String sql, final String[] selectionArgs) {
         final Cursor cursor = Cache.openDatabase().rawQuery(sql, selectionArgs);
         final int number = processIntCursor(cursor);
         cursor.close();
