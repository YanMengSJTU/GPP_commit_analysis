diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index 421426ea..ee615493 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -63,12 +63,16 @@ public final Long getId() {
 		return mId;
 	}
 
+	protected final void setId(Long id) {
+		this.mId = id;
+	}
+
 	public final void delete() {
 		Cache.openDatabase().delete(mTableInfo.getTableName(), idName+"=?", new String[] { getId().toString() });
 		Cache.removeEntity(this);
 
 		Cache.getContext().getContentResolver()
-				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
+				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), getId()), null);
 	}
 
 	public final Long save() {
@@ -151,16 +155,16 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 			}
 		}
 
-		if (mId == null) {
-			mId = db.insert(mTableInfo.getTableName(), null, values);
+		if (getId() == null) {
+			setId(db.insert(mTableInfo.getTableName(), null, values));
 		}
 		else {
-			db.update(mTableInfo.getTableName(), values, idName+"=" + mId, null);
+			db.update(mTableInfo.getTableName(), values, idName+"=" + getId(), null);
 		}
 
 		Cache.getContext().getContentResolver()
-				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), mId), null);
-		return mId;
+				.notifyChange(ContentProvider.createUri(mTableInfo.getType(), getId()), null);
+		return getId();
 	}
 
 	// Convenience methods
@@ -219,6 +223,9 @@ else if (fieldType.equals(Integer.class) || fieldType.equals(int.class)) {
 				}
 				else if (fieldType.equals(Long.class) || fieldType.equals(long.class)) {
 					value = cursor.getLong(columnIndex);
+					if(fieldName == mTableInfo.getIdName() ){
+						setId((Long) value);
+					}
 				}
 				else if (fieldType.equals(Float.class) || fieldType.equals(float.class)) {
 					value = cursor.getFloat(columnIndex);
@@ -276,7 +283,7 @@ else if (ReflectionUtils.isSubclassOf(fieldType, Enum.class)) {
 			}
 		}
 
-		if (mId != null) {
+		if (getId() != null) {
 			Cache.addEntity(this);
 		}
 	}
@@ -300,10 +307,10 @@ public String toString() {
 
 	@Override
 	public boolean equals(Object obj) {
-		if (obj instanceof Model && this.mId != null) {
+		if (obj instanceof Model && this.getId() != null) {
 			final Model other = (Model) obj;
 
-			return this.mId.equals(other.mId)							
+			return this.getId().equals(other.getId())
 							&& (this.mTableInfo.getTableName().equals(other.mTableInfo.getTableName()));
 		} else {
 			return this == obj;
@@ -313,7 +320,7 @@ public boolean equals(Object obj) {
 	@Override
 	public int hashCode() {
 		int hash = HASH_PRIME;
-		hash += HASH_PRIME * (mId == null ? super.hashCode() : mId.hashCode()); //if id is null, use Object.hashCode()
+		hash += HASH_PRIME * (getId()== null ? super.hashCode() : getId().hashCode()); //if id is null, use Object.hashCode()
 		hash += HASH_PRIME * mTableInfo.getTableName().hashCode();
 		return hash; //To change body of generated methods, choose Tools | Templates.
 	}
diff --git a/src/com/activeandroid/util/SQLiteUtils.java b/src/com/activeandroid/util/SQLiteUtils.java
index cbf41eae..0941e7aa 100644
--- a/src/com/activeandroid/util/SQLiteUtils.java
+++ b/src/com/activeandroid/util/SQLiteUtils.java
@@ -336,7 +336,11 @@ else if (ReflectionUtils.isSubclassOf(type, Enum.class)) {
                  */
                 List<String> columnsOrdered = new ArrayList<String>(Arrays.asList(cursor.getColumnNames()));
 				do {
-					Model entity = Cache.getEntity(type, cursor.getLong(columnsOrdered.indexOf(idName)));
+					int idColumnIndex = columnsOrdered.indexOf(idName);
+					Model entity = null;
+					if(idColumnIndex != -1) {
+						entity = Cache.getEntity(type, cursor.getLong(idColumnIndex));
+					}
 					if (entity == null) {
 						entity = (T) entityConstructor.newInstance();
 					}
