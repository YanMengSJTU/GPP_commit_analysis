diff --git a/.gitignore b/.gitignore
index 6d0dc1c1..fdd95d78 100644
--- a/.gitignore
+++ b/.gitignore
@@ -32,3 +32,4 @@ proguard-project.txt
 #Other
 .DS_Store
 tmp
+.svn
diff --git a/AndroidManifest.xml b/AndroidManifest.xml
new file mode 100644
index 00000000..925693a9
--- /dev/null
+++ b/AndroidManifest.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.activeandroid.test"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk android:minSdkVersion="4" />
+
+    <instrumentation
+        android:name="android.test.InstrumentationTestRunner"
+        android:targetPackage="com.activeandroid.test" />
+
+    <application
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name" >
+        <uses-library android:name="android.test.runner" />
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/project.properties b/project.properties
new file mode 100644
index 00000000..484dab07
--- /dev/null
+++ b/project.properties
@@ -0,0 +1,15 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-17
+android.library=true
diff --git a/src/com/activeandroid/ActiveAndroid.java b/src/com/activeandroid/ActiveAndroid.java
index fd73ec25..a1625222 100644
--- a/src/com/activeandroid/ActiveAndroid.java
+++ b/src/com/activeandroid/ActiveAndroid.java
@@ -47,6 +47,10 @@ public static void dispose() {
         Cache.dispose();
     }
 
+    public static void closeDatabase(Class<?> type) {
+        Cache.closeDatabase(type);
+    }
+
     public static void setLoggingEnabled(boolean enabled) {
         Log.setEnabled(enabled);
     }
diff --git a/src/com/activeandroid/Model.java b/src/com/activeandroid/Model.java
index a60cb07b..7c82b1f1 100644
--- a/src/com/activeandroid/Model.java
+++ b/src/com/activeandroid/Model.java
@@ -36,7 +36,9 @@
     // PRIVATE MEMBERS
     //////////////////////////////////////////////////////////////////////////////////////
 
-    @Column(name = "Id")
+    public static final String COLUMN_ID ="Id";
+
+    @Column(name = COLUMN_ID)
     private Long mId = null;
 
     private TableInfo mTableInfo;
@@ -58,6 +60,10 @@ public final Long getId() {
         return mId;
     }
 
+    public void setId(Long id) {
+        mId = id;
+    }
+
     public final void delete() {
         Cache.openDatabase(ReflectionUtils.getDbMetaDataClass(getClass())).delete(
                 mTableInfo.getTableName(), "Id=?", new String[] { getId().toString() });
diff --git a/src/com/activeandroid/query/From.java b/src/com/activeandroid/query/From.java
index cb78956a..9845af4c 100644
--- a/src/com/activeandroid/query/From.java
+++ b/src/com/activeandroid/query/From.java
@@ -37,6 +37,7 @@
     private String mOrderBy;
     private String mLimit;
     private String mOffset;
+    private boolean mDesc = false;
 
     private List<Object> mArguments;
 
@@ -110,7 +111,12 @@ public From having(String having) {
     }
 
     public From orderBy(String orderBy) {
+        return orderBy(orderBy, false);
+    }
+
+    public From orderBy(String orderBy, boolean desc){
         mOrderBy = orderBy;
+        mDesc = desc;
         return this;
     }
 
@@ -165,6 +171,7 @@ public String toSql() {
 
         if (mOrderBy != null) {
             sql += "ORDER BY " + mOrderBy + " ";
+            if (mDesc) sql += " DESC ";
         }
 
         if (mLimit != null) {
