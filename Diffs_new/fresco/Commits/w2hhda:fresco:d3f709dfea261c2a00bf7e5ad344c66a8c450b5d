diff --git a/demo/.gitignore b/demo/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/demo/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/demo/build.gradle b/demo/build.gradle
new file mode 100644
index 000000000..2ef94e5ff
--- /dev/null
+++ b/demo/build.gradle
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.1"
+
+    defaultConfig {
+        applicationId "com.example.demo"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.4.0'
+    compile project(':imagepipeline-backends:imagepipeline-okhttp3')
+    compile project(':drawee-backends:drawee-pipeline')
+}
diff --git a/demo/proguard-rules.pro b/demo/proguard-rules.pro
new file mode 100644
index 000000000..3ee656beb
--- /dev/null
+++ b/demo/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /home/huanghongda/developPlace/developTool/androidSdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/demo/src/androidTest/java/com/example/demo/ApplicationTest.java b/demo/src/androidTest/java/com/example/demo/ApplicationTest.java
new file mode 100644
index 000000000..49f74a350
--- /dev/null
+++ b/demo/src/androidTest/java/com/example/demo/ApplicationTest.java
@@ -0,0 +1,13 @@
+package com.example.demo;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
diff --git a/demo/src/main/AndroidManifest.xml b/demo/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..88c5eff82
--- /dev/null
+++ b/demo/src/main/AndroidManifest.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.demo">
+    <uses-permission android:name="android.permission.INTERNET" />
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:name=".App"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/demo/src/main/java/com/example/demo/App.java b/demo/src/main/java/com/example/demo/App.java
new file mode 100644
index 000000000..7d06cef20
--- /dev/null
+++ b/demo/src/main/java/com/example/demo/App.java
@@ -0,0 +1,16 @@
+package com.example.demo;
+
+import android.app.Application;
+
+import com.facebook.drawee.backends.pipeline.Fresco;
+
+/**
+ * Created by huanghongda on 16-10-20.
+ */
+public class App extends Application {
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        Fresco.initialize(this);
+    }
+}
diff --git a/demo/src/main/java/com/example/demo/MainActivity.java b/demo/src/main/java/com/example/demo/MainActivity.java
new file mode 100644
index 000000000..297674940
--- /dev/null
+++ b/demo/src/main/java/com/example/demo/MainActivity.java
@@ -0,0 +1,103 @@
+package com.example.demo;
+
+import android.content.pm.PackageManager;
+import android.content.res.AssetFileDescriptor;
+import android.content.res.Resources;
+import android.graphics.BitmapFactory;
+import android.net.Uri;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.widget.ImageView;
+
+import com.facebook.drawee.view.SimpleDraweeView;
+import com.facebook.imagepipeline.request.ImageRequest;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.List;
+
+public class MainActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        Uri uri = Uri.parse("android.resource://com.meizu.yellowpage/drawable/mz_avastar_person_06");
+        SimpleDraweeView draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view);
+        draweeView.setImageURI(uri);
+
+        ImageView imageView = (ImageView) findViewById(R.id.imageView);
+
+        try {
+            Resources resources = getResources(uri);
+            int id = getResourceId(resources, uri);
+            Log.d("hhda", "=== " + id + " ===> " + getLength(uri));
+            InputStream inputStream = resources.openRawResource(id);
+            imageView.setImageBitmap(BitmapFactory.decodeStream(inputStream));
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+        }
+
+    }
+
+
+    private int getLength(Uri imageRequest) {
+        AssetFileDescriptor fd = null;
+        try {
+            Resources resources = getResources(imageRequest);
+            fd = resources.openRawResourceFd(getResourceId(resources, imageRequest));
+            return (int) fd.getLength();
+        } catch (Resources.NotFoundException e) {
+            return -1;
+        } catch (FileNotFoundException e) {
+            return -1;
+        } finally {
+            try {
+                if (fd != null) {
+                    fd.close();
+                }
+            } catch (IOException ignored) {
+                // There's nothing we can do with the exception when closing descriptor.
+            }
+        }
+    }
+
+    static int getResourceId(Resources resources, Uri data) throws FileNotFoundException {
+
+        String pkg = data.getAuthority();
+        if (pkg == null) throw new FileNotFoundException("No package provided: " + data);
+
+        int id;
+        List<String> segments = data.getPathSegments();
+        if (segments == null || segments.isEmpty()) {
+            throw new FileNotFoundException("No path segments: " + data);
+        } else if (segments.size() == 1) {
+            try {
+                id = Integer.parseInt(segments.get(0));
+            } catch (NumberFormatException e) {
+                throw new FileNotFoundException("Last path segment is not a resource ID: " + data);
+            }
+        } else if (segments.size() == 2) {
+            String type = segments.get(0);
+            String name = segments.get(1);
+
+            id = resources.getIdentifier(name, type, pkg);
+        } else {
+            throw new FileNotFoundException("More than two path segments: " + data);
+        }
+        return id;
+    }
+
+    Resources getResources(Uri data) throws FileNotFoundException {
+
+        String pkg = data.getAuthority();
+        if (pkg == null) throw new FileNotFoundException("No package provided: " + data);
+        try {
+            return getPackageManager().getResourcesForApplication(pkg);
+        } catch (PackageManager.NameNotFoundException e) {
+            throw new FileNotFoundException("Unable to obtain resources for package: " + data);
+        }
+    }
+}
diff --git a/demo/src/main/res/layout/activity_main.xml b/demo/src/main/res/layout/activity_main.xml
new file mode 100644
index 000000000..8af70c517
--- /dev/null
+++ b/demo/src/main/res/layout/activity_main.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:fresco="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.demo.MainActivity">
+
+
+    <com.facebook.drawee.view.SimpleDraweeView
+        android:id="@+id/my_image_view"
+        android:layout_width="130dp"
+        android:layout_height="130dp"
+        fresco:placeholderImage="@mipmap/ic_launcher"
+        />
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/imageView"
+        android:src="@mipmap/ic_launcher"
+        android:layout_below="@+id/my_image_view"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_marginTop="117dp" />
+</RelativeLayout>
diff --git a/demo/src/main/res/mipmap-hdpi/ic_launcher.png b/demo/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 000000000..cde69bccc
Binary files /dev/null and b/demo/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/demo/src/main/res/mipmap-mdpi/ic_launcher.png b/demo/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 000000000..c133a0cbd
Binary files /dev/null and b/demo/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/demo/src/main/res/mipmap-xhdpi/ic_launcher.png b/demo/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 000000000..bfa42f0e7
Binary files /dev/null and b/demo/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png b/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 000000000..324e72cdd
Binary files /dev/null and b/demo/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/demo/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/demo/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 000000000..aee44e138
Binary files /dev/null and b/demo/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/demo/src/main/res/values-w820dp/dimens.xml b/demo/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 000000000..63fc81644
--- /dev/null
+++ b/demo/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/demo/src/main/res/values/colors.xml b/demo/src/main/res/values/colors.xml
new file mode 100644
index 000000000..3ab3e9cbc
--- /dev/null
+++ b/demo/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/demo/src/main/res/values/dimens.xml b/demo/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..47c822467
--- /dev/null
+++ b/demo/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/demo/src/main/res/values/strings.xml b/demo/src/main/res/values/strings.xml
new file mode 100644
index 000000000..ad12620a2
--- /dev/null
+++ b/demo/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">demo</string>
+</resources>
diff --git a/demo/src/main/res/values/styles.xml b/demo/src/main/res/values/styles.xml
new file mode 100644
index 000000000..5885930df
--- /dev/null
+++ b/demo/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/demo/src/test/java/com/example/demo/ExampleUnitTest.java b/demo/src/test/java/com/example/demo/ExampleUnitTest.java
new file mode 100644
index 000000000..e6ae3784d
--- /dev/null
+++ b/demo/src/test/java/com/example/demo/ExampleUnitTest.java
@@ -0,0 +1,15 @@
+package com.example.demo;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/drawee-backends/drawee-pipeline/build.gradle b/drawee-backends/drawee-pipeline/build.gradle
index 1561b84e0..76c99c1a9 100644
--- a/drawee-backends/drawee-pipeline/build.gradle
+++ b/drawee-backends/drawee-pipeline/build.gradle
@@ -6,9 +6,10 @@ version = VERSION_NAME
 
 dependencies {
     provided "com.google.code.findbugs:jsr305:${JSR_305_VERSION}"
-    compile "com.meizu.netcontactservice.fresco:fbcore:1.2"
-    compile "com.meizu.netcontactservice.fresco:drawee:1.2"
-    compile "com.meizu.netcontactservice.fresco:imagepipeline:1.2"
+    compile "com.meizu.netcontactservice.fresco.ex:drawee:${CMNF_VERSION2}"
+    compile "com.meizu.netcontactservice.fresco.ex:fbcore:${CMNF_VERSION2}"
+    compile "com.meizu.netcontactservice.fresco.ex:imagepipeline:${CMNF_VERSION2}"
+    //compile "com.meizu.netcontactservice.fresco:imagepipeline:1.2"
     //compile project(':drawee')
     //compile project(':fbcore')
     //compile project(':imagepipeline')
diff --git a/drawee-backends/drawee-pipeline/gradle.properties b/drawee-backends/drawee-pipeline/gradle.properties
index c195f2815..85305c330 100644
--- a/drawee-backends/drawee-pipeline/gradle.properties
+++ b/drawee-backends/drawee-pipeline/gradle.properties
@@ -3,6 +3,6 @@ POM_DESCRIPTION=A system to load and display images and manage their memory on A
 POM_ARTIFACT_ID=fresco
 POM_PACKAGING=aar
 
-meizu.libGroup=com.meizu.netcontactservice.fresco
-meizu.libId=fresco-ext
-meizu.libVersion=1.2
\ No newline at end of file
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
+meizu.libId=fresco
+meizu.libVersion=1.0
\ No newline at end of file
diff --git a/drawee/build.gradle b/drawee/build.gradle
index 908e83aa6..938296926 100644
--- a/drawee/build.gradle
+++ b/drawee/build.gradle
@@ -11,7 +11,7 @@ dependencies {
     provided "javax.annotation:javax.annotation-api:${ANNOTATION_API_VERSION}"
 
     //compile project(':fbcore')
-    compile "com.meizu.netcontactservice.fresco:fbcore:1.2"
+    compile "com.meizu.netcontactservice.fresco.ex:fbcore:${CMNF_VERSION2}"
 
     testCompile "junit:junit:${JUNIT_VERSION}"
     testCompile "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
diff --git a/drawee/gradle.properties b/drawee/gradle.properties
index 04b47ee68..0828a3b30 100644
--- a/drawee/gradle.properties
+++ b/drawee/gradle.properties
@@ -3,6 +3,6 @@ POM_DESCRIPTION=A fast, feature-rich image display library for Android
 POM_ARTIFACT_ID=drawee
 POM_PACKAGING=aar
 
-meizu.libGroup=com.meizu.netcontactservice.fresco
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
 meizu.libId=drawee
-meizu.libVersion=1.2
\ No newline at end of file
+meizu.libVersion=1.0
\ No newline at end of file
diff --git a/fbcore/gradle.properties b/fbcore/gradle.properties
index 50f03f80b..898baabac 100644
--- a/fbcore/gradle.properties
+++ b/fbcore/gradle.properties
@@ -3,6 +3,6 @@ POM_DESCRIPTION=A general-purpose Android utility library
 POM_ARTIFACT_ID=fbcore
 POM_PACKAGING=aar
 
-meizu.libGroup=com.meizu.netcontactservice.fresco
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
 meizu.libId=fbcore
-meizu.libVersion=1.2
\ No newline at end of file
+meizu.libVersion=1.3
\ No newline at end of file
diff --git a/gradle.properties b/gradle.properties
index d8d391e4c..4bfdca35d 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -59,3 +59,8 @@ STETHO_VERSION=1.3.1
 GRADLE_BINTRAY_PLUGIN_VERSION=1.6
 ANDROID_MAVEN_GRADLE_PLUGIN_VERSION=1.3
 
+#com.meizu.netcontactservice.fresco version
+CMNF_VERSION=1.4
+CMNF_VERSION2=1.0
+CMNF_VERSION3=1.3.2
+
diff --git a/imagepipeline-backends/imagepipeline-okhttp3/build.gradle b/imagepipeline-backends/imagepipeline-okhttp3/build.gradle
index 19f78dfaf..745ff919e 100644
--- a/imagepipeline-backends/imagepipeline-okhttp3/build.gradle
+++ b/imagepipeline-backends/imagepipeline-okhttp3/build.gradle
@@ -1,13 +1,15 @@
 apply plugin: 'com.android.library'
+apply plugin: 'com.meizu.configer'
 
 project.group = GROUP
 version = VERSION_NAME
 
 dependencies {
   compile "com.squareup.okhttp3:okhttp:${OKHTTP3_VERSION}"
-
-  compile project(':fbcore')
-  compile project(':imagepipeline')
+  compile "com.meizu.netcontactservice.fresco.ex:fbcore:${CMNF_VERSION2}"
+  compile "com.meizu.netcontactservice.fresco.ex:imagepipeline:${CMNF_VERSION3}"
+  //compile project(':fbcore')
+  //compile project(':imagepipeline')
 }
 apply from: rootProject.file('release.gradle')
 
diff --git a/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties b/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
index 5c2644a0d..3f5115e99 100644
--- a/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
+++ b/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
@@ -3,3 +3,7 @@ POM_DESCRIPTION=An integration library to use OkHttp 3 as the networking layer i
 POM_ARTIFACT_ID=imagepipeline-okhttp3
 POM_PACKAGING=aar
 
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
+meizu.libId=imagepipeline-okhttp3
+meizu.libVersion=1.2
+
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar
deleted file mode 100644
index 9b722ee51..000000000
Binary files a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar and /dev/null differ
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.md5 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.md5
deleted file mode 100644
index 9a829663c..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.md5
+++ /dev/null
@@ -1 +0,0 @@
-c1cc6090751cf747a157cd8cf589df97
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.sha1 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.sha1
deleted file mode 100644
index e0723a0a4..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-javadoc.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-bb482f48e0dfd39230ce8c31a38e9e2d002f5992
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar
deleted file mode 100644
index 3344093d7..000000000
Binary files a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar and /dev/null differ
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.md5 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.md5
deleted file mode 100644
index 2e40a421f..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.md5
+++ /dev/null
@@ -1 +0,0 @@
-0efb013714d4cab71fe7cafe3ad16677
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.sha1 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.sha1
deleted file mode 100644
index 75894b0ac..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0-sources.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-9dae1b2b8301f4196f18f23c6e498523c3c26263
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar
deleted file mode 100644
index 76962e740..000000000
Binary files a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar and /dev/null differ
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.md5 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.md5
deleted file mode 100644
index d4f8f16dd..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.md5
+++ /dev/null
@@ -1 +0,0 @@
-f3c77603de44c17ad8edb1608e30fc62
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.sha1 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.sha1
deleted file mode 100644
index 8eee339e6..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.aar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-af8dd9080e8802956dc6a01cbfb9f790c3169c6b
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom
deleted file mode 100644
index 94c81362f..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom
+++ /dev/null
@@ -1,62 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.facebook.fresco</groupId>
-  <artifactId>imagepipeline-base-test</artifactId>
-  <version>0.10.0</version>
-  <packaging>aar</packaging>
-  <name>ImagePipelineBaseTest</name>
-  <description>Contains utility classes for test in imagepipeline base</description>
-  <url>https://github.com/facebook/fresco</url>
-  <licenses>
-    <license>
-      <name>BSD License</name>
-      <url>https://github.com/facebook/fresco/blob/master/LICENSE</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <developers>
-    <developer>
-      <id>facebook</id>
-      <name>Facebook</name>
-    </developer>
-  </developers>
-  <scm>
-    <connection>scm:git:https://github.com/facebook/fresco.git</connection>
-    <developerConnection>scm:git:git@github.com:facebook/fresco.git</developerConnection>
-    <url>https://github.com/facebook/fresco.git</url>
-  </scm>
-  <dependencies>
-    <dependency>
-      <groupId>com.android.support</groupId>
-      <artifactId>support-v4</artifactId>
-      <version>23.2.1</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.nineoldandroids</groupId>
-      <artifactId>library</artifactId>
-      <version>2.4.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.facebook.fresco</groupId>
-      <artifactId>fbcore</artifactId>
-      <version>0.10.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.parse.bolts</groupId>
-      <artifactId>bolts-tasks</artifactId>
-      <version>1.4.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.facebook.fresco</groupId>
-      <artifactId>imagepipeline-base</artifactId>
-      <version>0.10.0</version>
-      <scope>compile</scope>
-    </dependency>
-  </dependencies>
-</project>
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.md5 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.md5
deleted file mode 100644
index b1e591ab4..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.md5
+++ /dev/null
@@ -1 +0,0 @@
-5aeae48bf4568945d28beee7e1d41fa7
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.sha1 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.sha1
deleted file mode 100644
index 6368ebf2b..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/0.10.0/imagepipeline-base-test-0.10.0.pom.sha1
+++ /dev/null
@@ -1 +0,0 @@
-04d5804472453db471a5c40c41d42d22aaad7289
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml
deleted file mode 100644
index 37a662a10..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<metadata>
-  <groupId>com.facebook.fresco</groupId>
-  <artifactId>imagepipeline-base-test</artifactId>
-  <versioning>
-    <release>0.10.0</release>
-    <versions>
-      <version>0.10.0</version>
-    </versions>
-    <lastUpdated>20160606125144</lastUpdated>
-  </versioning>
-</metadata>
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.md5 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.md5
deleted file mode 100644
index 472a3d908..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.md5
+++ /dev/null
@@ -1 +0,0 @@
-6f2f605676f2187af4de8c1a58baa8fb
\ No newline at end of file
diff --git a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.sha1 b/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.sha1
deleted file mode 100644
index c4b901d74..000000000
--- a/imagepipeline-base-test/fresco/com/facebook/fresco/imagepipeline-base-test/maven-metadata.xml.sha1
+++ /dev/null
@@ -1 +0,0 @@
-5f86bda2de13faa4a180165b44411e134d69a76b
\ No newline at end of file
diff --git a/imagepipeline-base/build.gradle b/imagepipeline-base/build.gradle
index 17132a55c..63e152529 100644
--- a/imagepipeline-base/build.gradle
+++ b/imagepipeline-base/build.gradle
@@ -12,7 +12,8 @@ dependencies {
     compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
     provided "javax.annotation:javax.annotation-api:${ANNOTATION_API_VERSION}"
     //compile project(':fbcore')
-    compile "com.meizu.netcontactservice.fresco:fbcore:1.2"
+    //compile "com.meizu.netcontactservice.fresco:fbcore:${CMNF_VERSION}"
+    compile "com.meizu.netcontactservice.fresco.ex:fbcore:${CMNF_VERSION2}"
 
     testCompile "junit:junit:${JUNIT_VERSION}"
     testCompile "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
diff --git a/imagepipeline-base/gradle.properties b/imagepipeline-base/gradle.properties
index ab61553b6..b534bab90 100644
--- a/imagepipeline-base/gradle.properties
+++ b/imagepipeline-base/gradle.properties
@@ -3,6 +3,6 @@ POM_DESCRIPTION=The library with common code between imagepipeline modules
 POM_ARTIFACT_ID=imagepipeline-base
 POM_PACKAGING=aar
 
-meizu.libGroup=com.meizu.netcontactservice.fresco
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
 meizu.libId=imagepipeline-base
-meizu.libVersion=1.2
\ No newline at end of file
+meizu.libVersion=1.0
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar
deleted file mode 100644
index 9b722ee51..000000000
Binary files a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar and /dev/null differ
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.md5 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.md5
deleted file mode 100644
index 9a829663c..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.md5
+++ /dev/null
@@ -1 +0,0 @@
-c1cc6090751cf747a157cd8cf589df97
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.sha1 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.sha1
deleted file mode 100644
index e0723a0a4..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-javadoc.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-bb482f48e0dfd39230ce8c31a38e9e2d002f5992
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar
deleted file mode 100644
index 19fdf99ff..000000000
Binary files a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar and /dev/null differ
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.md5 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.md5
deleted file mode 100644
index 55dec5043..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.md5
+++ /dev/null
@@ -1 +0,0 @@
-ce618681c78d7b768825f05584dfc5d7
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.sha1 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.sha1
deleted file mode 100644
index d529463f4..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0-sources.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-54a17408513ed4fe15ed3a8a453767180704392a
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar
deleted file mode 100644
index e72e790b3..000000000
Binary files a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar and /dev/null differ
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.md5 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.md5
deleted file mode 100644
index 10a311dfd..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.md5
+++ /dev/null
@@ -1 +0,0 @@
-447c641b84adc222ac14fdc3be4d683c
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.sha1 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.sha1
deleted file mode 100644
index 390e7072c..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.aar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-ab009e340b4801b22c8562767cdc56c1a0063f0b
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom
deleted file mode 100644
index 85c118a32..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom
+++ /dev/null
@@ -1,114 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.facebook.fresco</groupId>
-  <artifactId>imagepipeline-test</artifactId>
-  <version>0.10.0</version>
-  <packaging>aar</packaging>
-  <name>ImagePipelineTest</name>
-  <description>The library which contains utility classes for tests</description>
-  <url>https://github.com/facebook/fresco</url>
-  <licenses>
-    <license>
-      <name>BSD License</name>
-      <url>https://github.com/facebook/fresco/blob/master/LICENSE</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-  <developers>
-    <developer>
-      <id>facebook</id>
-      <name>Facebook</name>
-    </developer>
-  </developers>
-  <scm>
-    <connection>scm:git:https://github.com/facebook/fresco.git</connection>
-    <developerConnection>scm:git:git@github.com:facebook/fresco.git</developerConnection>
-    <url>https://github.com/facebook/fresco.git</url>
-  </scm>
-  <dependencies>
-    <dependency>
-      <groupId>org.powermock</groupId>
-      <artifactId>powermock-api-mockito</artifactId>
-      <version>1.6.4</version>
-      <scope>compile</scope>
-      <exclusions>
-        <exclusion>
-          <artifactId>mockito-all</artifactId>
-          <groupId>org.mockito</groupId>
-        </exclusion>
-      </exclusions>
-    </dependency>
-    <dependency>
-      <groupId>com.android.support</groupId>
-      <artifactId>support-v4</artifactId>
-      <version>23.2.1</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.nineoldandroids</groupId>
-      <artifactId>library</artifactId>
-      <version>2.4.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.mockito</groupId>
-      <artifactId>mockito-core</artifactId>
-      <version>1.10.19</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.facebook.fresco</groupId>
-      <artifactId>fbcore</artifactId>
-      <version>0.10.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.robolectric</groupId>
-      <artifactId>robolectric</artifactId>
-      <version>3.0</version>
-      <scope>compile</scope>
-      <exclusions>
-        <exclusion>
-          <artifactId>httpclient</artifactId>
-          <groupId>org.apache.httpcomponents</groupId>
-        </exclusion>
-        <exclusion>
-          <artifactId>commons-logging</artifactId>
-          <groupId>commons-logging</groupId>
-        </exclusion>
-      </exclusions>
-    </dependency>
-    <dependency>
-      <groupId>com.parse.bolts</groupId>
-      <artifactId>bolts-tasks</artifactId>
-      <version>1.4.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>junit</groupId>
-      <artifactId>junit</artifactId>
-      <version>4.12</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.facebook.fresco</groupId>
-      <artifactId>imagepipeline-base</artifactId>
-      <version>0.10.0</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.powermock</groupId>
-      <artifactId>powermock-classloading-xstream</artifactId>
-      <version>1.6.4</version>
-      <scope>compile</scope>
-    </dependency>
-    <dependency>
-      <groupId>org.powermock</groupId>
-      <artifactId>powermock-module-junit4-rule</artifactId>
-      <version>1.6.4</version>
-      <scope>compile</scope>
-    </dependency>
-  </dependencies>
-</project>
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.md5 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.md5
deleted file mode 100644
index 8a04ffaac..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.md5
+++ /dev/null
@@ -1 +0,0 @@
-9d3d1643dc1eb7d16b7f2788fc6fd90c
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.sha1 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.sha1
deleted file mode 100644
index b3743ab44..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/0.10.0/imagepipeline-test-0.10.0.pom.sha1
+++ /dev/null
@@ -1 +0,0 @@
-132f8962be898320bad5ebe87e444c38d8befcfa
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml
deleted file mode 100644
index 5a04c2f7c..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<metadata>
-  <groupId>com.facebook.fresco</groupId>
-  <artifactId>imagepipeline-test</artifactId>
-  <versioning>
-    <release>0.10.0</release>
-    <versions>
-      <version>0.10.0</version>
-    </versions>
-    <lastUpdated>20160606125145</lastUpdated>
-  </versioning>
-</metadata>
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.md5 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.md5
deleted file mode 100644
index 978970ae3..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.md5
+++ /dev/null
@@ -1 +0,0 @@
-05dc5861212feee4b997392d841f6420
\ No newline at end of file
diff --git a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.sha1 b/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.sha1
deleted file mode 100644
index 47a415cf6..000000000
--- a/imagepipeline-test/fresco/com/facebook/fresco/imagepipeline-test/maven-metadata.xml.sha1
+++ /dev/null
@@ -1 +0,0 @@
-47ba61aaff21fbe17030e22d61355a409950583c
\ No newline at end of file
diff --git a/imagepipeline/build.gradle b/imagepipeline/build.gradle
index f3c3c6f59..b07c83e9b 100644
--- a/imagepipeline/build.gradle
+++ b/imagepipeline/build.gradle
@@ -18,11 +18,11 @@ dependencies {
     provided "javax.annotation:javax.annotation-api:${ANNOTATION_API_VERSION}"
     //compile project(':fbcore')
     //compile project(':imagepipeline-base')
-    compile "com.meizu.netcontactservice.fresco:fbcore:1.2"
-    compile "com.meizu.netcontactservice.fresco:imagepipeline-base:1.2"
+    compile "com.meizu.netcontactservice.fresco.ex:fbcore:${CMNF_VERSION2}"
+    compile "com.meizu.netcontactservice.fresco.ex:imagepipeline-base:${CMNF_VERSION2}"
 
-    testCompile project(':imagepipeline-test')
-    testCompile project(':imagepipeline-base-test')
+    //testCompile project(':imagepipeline-test')
+    //testCompile project(':imagepipeline-base-test')
     testCompile "junit:junit:${JUNIT_VERSION}"
     testCompile "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
     testCompile("org.powermock:powermock-api-mockito:${POWERMOCK_VERSION}") {
diff --git a/imagepipeline/gradle.properties b/imagepipeline/gradle.properties
index c846750cd..767786f1a 100644
--- a/imagepipeline/gradle.properties
+++ b/imagepipeline/gradle.properties
@@ -3,6 +3,6 @@ POM_DESCRIPTION=The underlying image loading mechanism of the Fresco library
 POM_ARTIFACT_ID=imagepipeline
 POM_PACKAGING=aar
 
-meizu.libGroup=com.meizu.netcontactservice.fresco
+meizu.libGroup=com.meizu.netcontactservice.fresco.ex
 meizu.libId=imagepipeline
-meizu.libVersion=1.2
\ No newline at end of file
+meizu.libVersion=1.3.2
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerFactory.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerFactory.java
index 9075aa785..a25527061 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerFactory.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerFactory.java
@@ -11,6 +11,7 @@
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.pm.PackageManager;
 import android.content.res.AssetManager;
 import android.content.res.Resources;
 
@@ -37,6 +38,7 @@
 import com.facebook.imagepipeline.producers.DiskCacheProducer;
 import com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer;
 import com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer;
+import com.facebook.imagepipeline.producers.LocalAndroidResourceFetchProducer;
 import com.facebook.imagepipeline.producers.LocalAssetFetchProducer;
 import com.facebook.imagepipeline.producers.LocalContentUriFetchProducer;
 import com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer;
@@ -64,6 +66,7 @@
   private ContentResolver mContentResolver;
   private Resources mResources;
   private AssetManager mAssetManager;
+  private PackageManager mPackageManager;
 
   // Decode dependencies
   private final ByteArrayPool mByteArrayPool;
@@ -109,6 +112,7 @@ public ProducerFactory(
     mContentResolver = context.getContentResolver();
     mResources = context.getResources();
     mAssetManager = context.getAssets();
+    mPackageManager = context.getPackageManager();
 
     mByteArrayPool = byteArrayPool;
     mImageDecoder = imageDecoder;
@@ -247,6 +251,14 @@ public LocalResourceFetchProducer newLocalResourceFetchProducer() {
         mDecodeFileDescriptorEnabled);
   }
 
+  public LocalAndroidResourceFetchProducer newLocalAndroidResourceFetchProducer() {
+    return new LocalAndroidResourceFetchProducer(
+            mExecutorSupplier.forLocalStorageRead(),
+            mPooledByteBufferFactory,
+            mPackageManager,
+            mDecodeFileDescriptorEnabled);
+  }
+
   public LocalVideoThumbnailProducer newLocalVideoThumbnailProducer() {
     return new LocalVideoThumbnailProducer(mExecutorSupplier.forLocalStorageRead());
   }
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerSequenceFactory.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerSequenceFactory.java
index 1d1c0c9b8..f78681b47 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerSequenceFactory.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ProducerSequenceFactory.java
@@ -27,6 +27,7 @@
 import com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer;
 import com.facebook.imagepipeline.producers.DecodeProducer;
 import com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer;
+import com.facebook.imagepipeline.producers.LocalAndroidResourceFetchProducer;
 import com.facebook.imagepipeline.producers.LocalAssetFetchProducer;
 import com.facebook.imagepipeline.producers.LocalContentUriFetchProducer;
 import com.facebook.imagepipeline.producers.LocalFileFetchProducer;
@@ -45,6 +46,8 @@
 import com.facebook.imagepipeline.producers.ThumbnailProducer;
 import com.facebook.imagepipeline.request.ImageRequest;
 
+import static android.content.ContentResolver.SCHEME_ANDROID_RESOURCE;
+
 public class ProducerSequenceFactory {
   private static final int MAX_SIMULTANEOUS_FILE_FETCH_AND_RESIZE = 5;
 
@@ -65,6 +68,7 @@
   @VisibleForTesting Producer<CloseableReference<CloseableImage>> mLocalVideoFileFetchSequence;
   @VisibleForTesting Producer<CloseableReference<CloseableImage>> mLocalContentUriFetchSequence;
   @VisibleForTesting Producer<CloseableReference<CloseableImage>> mLocalResourceFetchSequence;
+  @VisibleForTesting Producer<CloseableReference<CloseableImage>> mLocalAndroidResourceFetchSequence;
   @VisibleForTesting Producer<CloseableReference<CloseableImage>> mLocalAssetFetchSequence;
   @VisibleForTesting Producer<CloseableReference<CloseableImage>> mDataFetchSequence;
   @VisibleForTesting Map<
@@ -181,6 +185,8 @@ private static void validateEncodedImageRequest(ImageRequest imageRequest) {
       return getLocalResourceFetchSequence();
     } else if (UriUtil.isDataUri(uri)) {
       return getDataFetchSequence();
+    } else if (SCHEME_ANDROID_RESOURCE.equals(uri.getScheme())){
+      return getLocalAndroidResourceFetchSequence();
     } else {
       String uriString = uri.toString();
       if (uriString.length() > 30) {
@@ -332,6 +338,25 @@ private static void validateEncodedImageRequest(ImageRequest imageRequest) {
     return mLocalResourceFetchSequence;
   }
 
+  /**
+   * bitmap cache get ->
+   * background thread hand-off -> multiplex -> bitmap cache -> decode ->
+   * branch on separate images
+   *   -> exif resize and rotate -> exif thumbnail creation
+   *   -> local image resize and rotate -> add meta data producer -> multiplex -> encoded cache ->
+   *   (webp transcode) -> local resource fetch.
+   */
+  private synchronized Producer<CloseableReference<CloseableImage>>
+  getLocalAndroidResourceFetchSequence() {
+    if (mLocalAndroidResourceFetchSequence == null) {
+      LocalAndroidResourceFetchProducer localAndroidResourceFetchProducer =
+              mProducerFactory.newLocalAndroidResourceFetchProducer();
+      mLocalAndroidResourceFetchSequence =
+              newBitmapCacheGetToLocalTransformSequence(localAndroidResourceFetchProducer);
+    }
+    return mLocalAndroidResourceFetchSequence;
+  }
+
   /**
    * bitmap cache get ->
    * background thread hand-off -> multiplex -> bitmap cache -> decode ->
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalAndroidResourceFetchProducer.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalAndroidResourceFetchProducer.java
new file mode 100644
index 000000000..24a5f8b66
--- /dev/null
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/LocalAndroidResourceFetchProducer.java
@@ -0,0 +1,116 @@
+/*
+ * Copyright (c) 2015-present, Facebook, Inc.
+ * All rights reserved.
+ *
+ * This source code is licensed under the BSD-style license found in the
+ * LICENSE file in the root directory of this source tree. An additional grant
+ * of patent rights can be found in the PATENTS file in the same directory.
+ */
+
+package com.facebook.imagepipeline.producers;
+
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.content.res.AssetFileDescriptor;
+import android.content.res.Resources;
+import android.util.Log;
+
+import com.facebook.common.internal.VisibleForTesting;
+import com.facebook.imagepipeline.image.EncodedImage;
+import com.facebook.imagepipeline.memory.PooledByteBufferFactory;
+import com.facebook.imagepipeline.request.ImageRequest;
+
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.util.List;
+import java.util.concurrent.Executor;
+
+/**
+ * Executes a local fetch from a resource.
+ */
+public class LocalAndroidResourceFetchProducer extends LocalFetchProducer {
+  @VisibleForTesting static final String PRODUCER_NAME = "LocalAndroidResourceFetchProducer";
+
+  private final PackageManager mPackageManager;
+
+  public LocalAndroidResourceFetchProducer(
+      Executor executor,
+      PooledByteBufferFactory pooledByteBufferFactory,
+      PackageManager packageManager,
+      boolean decodeFileDescriptorEnabled) {
+    super(executor, pooledByteBufferFactory, decodeFileDescriptorEnabled);
+    mPackageManager = packageManager;
+  }
+
+  @Override
+  protected EncodedImage getEncodedImage(ImageRequest imageRequest) throws IOException {
+    Resources resources = getResources(imageRequest);
+    return getEncodedImage(
+            resources.openRawResource(getResourceId(resources, imageRequest)),
+        getLength(imageRequest));
+  }
+
+  private int getLength(ImageRequest imageRequest) {
+    AssetFileDescriptor fd = null;
+    try {
+      Resources resources = getResources(imageRequest);
+      fd = resources.openRawResourceFd(getResourceId(resources, imageRequest));
+      return (int) fd.getLength();
+    } catch (Resources.NotFoundException e) {
+      return -1;
+    } catch (FileNotFoundException e) {
+      return -1;
+    } finally {
+      try {
+        if (fd != null) {
+          fd.close();
+        }
+      } catch (IOException ignored) {
+        // There's nothing we can do with the exception when closing descriptor.
+      }
+    }
+  }
+
+  @Override
+  protected String getProducerName() {
+    return PRODUCER_NAME;
+  }
+
+  static int getResourceId(Resources resources, ImageRequest data) throws FileNotFoundException {
+
+    String pkg = data.getSourceUri().getAuthority();
+    if (pkg == null) throw new FileNotFoundException("No package provided: " + data.getSourceUri());
+
+    int id;
+    List<String> segments = data.getSourceUri().getPathSegments();
+    if (segments == null || segments.isEmpty()) {
+      throw new FileNotFoundException("No path segments: " + data.getSourceUri());
+    } else if (segments.size() == 1) {
+      try {
+        id = Integer.parseInt(segments.get(0));
+      } catch (NumberFormatException e) {
+        throw new FileNotFoundException("Last path segment is not a resource ID: " + data.getSourceUri());
+      }
+    } else if (segments.size() == 2) {
+      String type = segments.get(0);
+      String name = segments.get(1);
+
+      id = resources.getIdentifier(name, type, pkg);
+    } else {
+      throw new FileNotFoundException("More than two path segments: " + data.getSourceUri());
+    }
+    return id;
+  }
+
+  Resources getResources(ImageRequest data) throws FileNotFoundException {
+
+    String pkg = data.getSourceUri().getAuthority();
+    if (pkg == null) throw new FileNotFoundException("No package provided: " + data.getSourceUri());
+    try {
+      return mPackageManager.getResourcesForApplication(pkg);
+    } catch (PackageManager.NameNotFoundException e) {
+      throw new FileNotFoundException("Unable to obtain resources for package: " + data.getSourceUri());
+    }
+  }
+
+}
diff --git a/settings.gradle b/settings.gradle
index 657d0f996..da0bddecd 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,6 +1,6 @@
-include ':drawee'
+include ':drawee', ':demo'
 include ':drawee-backends:drawee-pipeline'
-include ':drawee-backends:drawee-volley'
+//include ':drawee-backends:drawee-volley'
 include ':fbcore'
 include ':imagepipeline'
 /*include ':samples:animation'
@@ -13,16 +13,17 @@ include ':samples:zoomable'
 include ':samples:zoomableapp'
 include ':samples:transition'
 include ':tools:stetho'*/
-include ':imagepipeline-backends:imagepipeline-okhttp'
 include ':imagepipeline-backends:imagepipeline-okhttp3'
+/*include ':imagepipeline-backends:imagepipeline-okhttp'
 include ':imagepipeline-backends:imagepipeline-volley'
-include ':static-webp'
+include ':static-webp'*/
 include ':imagepipeline-base'
-include ':imagepipeline-base-test'
-include ':imagepipeline-test'
+//include ':imagepipeline-base-test'
+//include ':imagepipeline-test'
+/*
 include ':animated-base'
 include ':animated-base-support'
 include ':animated-base-test'
 include ':animated-webp'
 include ':animated-gif'
-include ':samples:scrollperf'
\ No newline at end of file
+include ':samples:scrollperf'*/
