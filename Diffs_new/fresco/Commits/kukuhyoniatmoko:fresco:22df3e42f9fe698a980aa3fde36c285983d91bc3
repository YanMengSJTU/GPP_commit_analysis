diff --git a/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java b/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
index 0bccc2535..2c26d9980 100644
--- a/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
+++ b/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
@@ -54,7 +54,7 @@ public OkHttpNetworkFetchState(
   private static final String TOTAL_TIME = "total_time";
   private static final String IMAGE_SIZE = "image_size";
 
-  private final OkHttpClient mOkHttpClient;
+  private final Call.Factory mCallFactory;
 
   private Executor mCancellationExecutor;
 
@@ -62,10 +62,18 @@ public OkHttpNetworkFetchState(
    * @param okHttpClient client to use
    */
   public OkHttpNetworkFetcher(OkHttpClient okHttpClient) {
-    mOkHttpClient = okHttpClient;
+    mCallFactory = okHttpClient;
     mCancellationExecutor = okHttpClient.dispatcher().executorService();
   }
 
+  /**
+   * @param callFactory client to use
+   */
+  public OkHttpNetworkFetcher(Call.Factory callFactory, Executor cancellationExecutor) {
+    mCallFactory = callFactory;
+    mCancellationExecutor = cancellationExecutor;
+  }
+
   @Override
   public OkHttpNetworkFetchState createFetchState(
       Consumer<EncodedImage> consumer,
@@ -104,7 +112,7 @@ protected void fetchWithRequest(
       final OkHttpNetworkFetchState fetchState,
       final Callback callback,
       final Request request) {
-    final Call call = mOkHttpClient.newCall(request);
+    final Call call = mCallFactory.newCall(request);
 
     fetchState.getContext().addCallbacks(
         new BaseProducerContextCallbacks() {
