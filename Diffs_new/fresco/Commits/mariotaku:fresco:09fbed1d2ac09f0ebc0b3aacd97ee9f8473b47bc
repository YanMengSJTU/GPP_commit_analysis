diff --git a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBuffer.java b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBuffer.java
index 3a2c83bb3..8d617428a 100644
--- a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBuffer.java
+++ b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBuffer.java
@@ -37,7 +37,7 @@
    * @param length number of bytes to copy
    * @return number of bytes copied
    */
-  void read(int offset, byte[] buffer, int bufferOffset, int length);
+  int read(int offset, byte[] buffer, int bufferOffset, int length);
 
   /**
    * @return pointer to native memory backing this buffer
diff --git a/imagepipeline-base-test/src/main/java/com/facebook/imagepipeline/testing/TrivialPooledByteBuffer.java b/imagepipeline-base-test/src/main/java/com/facebook/imagepipeline/testing/TrivialPooledByteBuffer.java
index e0fddc6d2..bebf02a26 100644
--- a/imagepipeline-base-test/src/main/java/com/facebook/imagepipeline/testing/TrivialPooledByteBuffer.java
+++ b/imagepipeline-base-test/src/main/java/com/facebook/imagepipeline/testing/TrivialPooledByteBuffer.java
@@ -36,8 +36,9 @@ public byte read(int offset) {
   }
 
   @Override
-  public void read(int offset, byte[] buffer, int bufferOffset, int length) {
+  public int read(int offset, byte[] buffer, int bufferOffset, int length) {
     System.arraycopy(mBuf, offset, buffer, bufferOffset, length);
+    return length;
   }
 
   @Override
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/NativePooledByteBuffer.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/NativePooledByteBuffer.java
index 422e322d9..a72a19877 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/NativePooledByteBuffer.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/NativePooledByteBuffer.java
@@ -54,12 +54,12 @@ public synchronized byte read(int offset) {
   }
 
   @Override
-  public synchronized void read(int offset, byte[] buffer, int bufferOffset, int length) {
+  public synchronized int read(int offset, byte[] buffer, int bufferOffset, int length) {
     ensureValid();
     // We need to make sure that PooledByteBuffer's length is preserved.
     // Al the other bounds checks will be performed by NativeMemoryChunk.read method.
     Preconditions.checkArgument(offset + length <= mSize);
-    mBufRef.get().read(offset, buffer, bufferOffset, length);
+    return mBufRef.get().read(offset, buffer, bufferOffset, length);
   }
 
   @Override
