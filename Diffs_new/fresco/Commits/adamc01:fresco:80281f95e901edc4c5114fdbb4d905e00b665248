diff --git a/docs/_docs/01-rounded-corners-and-circles.md b/docs/_docs/01-rounded-corners-and-circles.md
index ecfe48573..62d8ba83a 100644
--- a/docs/_docs/01-rounded-corners-and-circles.md
+++ b/docs/_docs/01-rounded-corners-and-circles.md
@@ -31,8 +31,8 @@ The `SimpleDraweeView` class will forward several attributes over to `RoundingPa
 <com.facebook.drawee.view.SimpleDraweeView
   ...
   fresco:roundedCornerRadius="5dp"
-  fresco:roundBottomLeft="false"
-  fresco:roundBottomRight="false"
+  fresco:roundBottomStart="false"
+  fresco:roundBottomEnd="false"
   fresco:roundWithOverlayColor="@color/blue"
   fresco:roundingBorderWidth="1dp"
   fresco:roundingBorderColor="@color/red"
diff --git a/docs/_docs/01-using-simpledraweeview.md b/docs/_docs/01-using-simpledraweeview.md
index 7df749cfb..76c95a853 100644
--- a/docs/_docs/01-using-simpledraweeview.md
+++ b/docs/_docs/01-using-simpledraweeview.md
@@ -68,6 +68,10 @@ That's it, you are now displaying images with Fresco!
   fresco:roundTopRight="false"
   fresco:roundBottomLeft="false"
   fresco:roundBottomRight="true"
+  fresco:roundTopStart="false"
+  fresco:roundTopEnd="false"
+  fresco:roundBottomStart="false"
+  fresco:roundBottomEnd="false"
   fresco:roundWithOverlayColor="@color/corner_color"
   fresco:roundingBorderWidth="2dp"
   fresco:roundingBorderColor="@color/border_color"
diff --git a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyInflater.java b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyInflater.java
index 574402f4e..8fb7a6f61 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyInflater.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyInflater.java
@@ -12,10 +12,12 @@
 import static com.facebook.drawee.drawable.ScalingUtils.ScaleType;
 
 import android.content.Context;
+import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.graphics.drawable.Drawable;
 import android.util.AttributeSet;
+import android.view.View;
 import com.facebook.drawee.R;
 import com.facebook.drawee.drawable.AutoRotateDrawable;
 import com.facebook.infer.annotation.ReturnsOwnership;
@@ -49,6 +51,10 @@
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundTopRight
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundBottomRight
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundBottomLeft
+ * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundTopStart
+ * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundTopEnd
+ * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundBottomStart
+ * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundBottomEnd
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundWithOverlayColor
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundingBorderWidth
  * @attr ref com.facebook.R.styleable#GenericDraweeHierarchy_roundingBorderColor
@@ -99,6 +105,10 @@ public static GenericDraweeHierarchyBuilder updateBuilder(
     boolean roundTopRight = true;
     boolean roundBottomLeft = true;
     boolean roundBottomRight = true;
+    boolean roundTopStart = true;
+    boolean roundTopEnd = true;
+    boolean roundBottomStart = true;
+    boolean roundBottomEnd = true;
 
     if (attrs != null) {
       TypedArray gdhAttrs = context.obtainStyledAttributes(
@@ -174,6 +184,18 @@ public static GenericDraweeHierarchyBuilder updateBuilder(
           } else if (attr == R.styleable.GenericDraweeHierarchy_roundBottomRight) {
             roundBottomRight = gdhAttrs.getBoolean(attr, roundBottomRight);
 
+          } else if (attr == R.styleable.GenericDraweeHierarchy_roundTopStart) {
+            roundTopStart = gdhAttrs.getBoolean(attr, roundTopStart);
+
+          } else if (attr == R.styleable.GenericDraweeHierarchy_roundTopEnd) {
+            roundTopEnd = gdhAttrs.getBoolean(attr, roundTopEnd);
+
+          } else if (attr == R.styleable.GenericDraweeHierarchy_roundBottomStart) {
+            roundBottomStart = gdhAttrs.getBoolean(attr, roundBottomStart);
+
+          } else if (attr == R.styleable.GenericDraweeHierarchy_roundBottomEnd) {
+            roundBottomEnd = gdhAttrs.getBoolean(attr, roundBottomEnd);
+
           } else if (attr == R.styleable.GenericDraweeHierarchy_roundWithOverlayColor) {
             getRoundingParams(builder).setOverlayColor(gdhAttrs.getColor(attr, 0));
 
@@ -190,6 +212,20 @@ public static GenericDraweeHierarchyBuilder updateBuilder(
         }
       } finally {
         gdhAttrs.recycle();
+
+        if (android.os.Build.VERSION.SDK_INT >= 17 && context.getResources().getConfiguration()
+            .getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) {
+          roundTopLeft = roundTopLeft && roundTopEnd;
+          roundTopRight = roundTopRight && roundTopStart;
+          roundBottomRight = roundBottomRight && roundBottomStart;
+          roundBottomLeft = roundBottomLeft && roundBottomEnd;
+        } else {
+          roundTopLeft = roundTopLeft && roundTopStart;
+          roundTopRight = roundTopRight && roundTopEnd;
+          roundBottomRight = roundBottomRight && roundBottomEnd;
+          roundBottomLeft = roundBottomLeft && roundBottomStart;
+        }
+
       }
     }
 
diff --git a/drawee/src/main/res/values/attrs.xml b/drawee/src/main/res/values/attrs.xml
index ce67bb587..7c9c62bc4 100644
--- a/drawee/src/main/res/values/attrs.xml
+++ b/drawee/src/main/res/values/attrs.xml
@@ -121,6 +121,14 @@
     <attr name="roundBottomRight" format="boolean"/>
     <!-- Round the bottom-left corner. Ignored if roundAsCircle is used. -->
     <attr name="roundBottomLeft" format="boolean"/>
+    <!-- Round the top-start edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundTopStart" format="boolean"/>
+    <!-- Round the top-end edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundTopEnd" format="boolean"/>
+    <!-- Round the bottom-start edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundBottomStart" format="boolean"/>
+    <!-- Round the bottom-end edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundBottomEnd" format="boolean"/>
     <!-- Round by overlying color. -->
     <attr name="roundWithOverlayColor" format="color"/>
     <!-- Rounding border width-->
@@ -205,6 +213,14 @@
     <attr name="roundBottomRight" />
     <!-- Round the bottom-left corner. Ignored if roundAsCircle is used. -->
     <attr name="roundBottomLeft" />
+    <!-- Round the top-start edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundTopStart" />
+    <!-- Round the top-end edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundTopEnd" />
+    <!-- Round the bottom-start edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundBottomStart" />
+    <!-- Round the bottom-end edge. Ignored if roundAsCircle is used. -->
+    <attr name="roundBottomEnd" />
     <!-- Round by overlying color. -->
     <attr name="roundWithOverlayColor" />
     <!-- Rounding border width-->
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeRoundedCornersFragment.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeRoundedCornersFragment.java
index de12023a4..b53ab7a53 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeRoundedCornersFragment.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/DraweeRoundedCornersFragment.java
@@ -56,6 +56,7 @@
   private SimpleDraweeView mDraweeRound;
   private SimpleDraweeView mDraweeRadius;
   private SimpleDraweeView mDraweeSome;
+  private SimpleDraweeView mDraweeSomeRtl;
   private SimpleDraweeView mDraweeFancy;
 
   public DraweeRoundedCornersFragment() {
@@ -86,6 +87,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
     mDraweeRound.setImageURI(imageUriProvider.createSampleUri(ImageSize.L));
     mDraweeRadius.setImageURI(imageUriProvider.createSampleUri(ImageSize.L));
     mDraweeSome.setImageURI(imageUriProvider.createSampleUri(ImageSize.L));
+    mDraweeSomeRtl.setImageURI(imageUriProvider.createSampleUri(ImageSize.L));
     mDraweeFancy.setImageURI(imageUriProvider.createSampleUri(ImageSize.L));
 
     final Spinner scaleType = (Spinner) view.findViewById(R.id.scaleType);
@@ -101,6 +103,7 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
         changeDraweeViewScaleType(mDraweeRound, scaleType, spinnerEntry.focusPoint);
         changeDraweeViewScaleType(mDraweeRadius, scaleType, spinnerEntry.focusPoint);
         changeDraweeViewScaleType(mDraweeSome, scaleType, spinnerEntry.focusPoint);
+        changeDraweeViewScaleType(mDraweeSomeRtl, scaleType, spinnerEntry.focusPoint);
         changeDraweeViewScaleType(mDraweeFancy, scaleType, spinnerEntry.focusPoint);
 
         if (BITMAP_ONLY_SCALETYPES.contains(scaleType) &&
@@ -131,6 +134,7 @@ public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
         setShowBorder(mDraweeRound, isChecked);
         setShowBorder(mDraweeRadius, isChecked);
         setShowBorder(mDraweeSome, isChecked);
+        setShowBorder(mDraweeSomeRtl, isChecked);
         setShowBorder(mDraweeFancy, isChecked);
       }
     });
@@ -150,6 +154,7 @@ private void findDrawees(View view) {
     mDraweeRound = (SimpleDraweeView) view.findViewById(R.id.drawee_round);
     mDraweeRadius = (SimpleDraweeView) view.findViewById(R.id.drawee_radius);
     mDraweeSome = (SimpleDraweeView) view.findViewById(R.id.drawee_some);
+    mDraweeSomeRtl = (SimpleDraweeView) view.findViewById(R.id.drawee_some_rtl);
     mDraweeFancy = (SimpleDraweeView) view.findViewById(R.id.drawee_fancy);
   }
 
diff --git a/samples/showcase/src/main/res/layout/fragment_drawee_rounded_corners.xml b/samples/showcase/src/main/res/layout/fragment_drawee_rounded_corners.xml
index beb0d3d5f..9cf9b55ed 100644
--- a/samples/showcase/src/main/res/layout/fragment_drawee_rounded_corners.xml
+++ b/samples/showcase/src/main/res/layout/fragment_drawee_rounded_corners.xml
@@ -56,6 +56,20 @@
           app:roundTopRight="false"
           />
 
+      <TextView
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+          android:textAppearance="@style/TextAppearance.AppCompat.Subhead"
+          android:text="@string/drawee_rounded_corners_some_rtl"
+          />
+      <com.facebook.drawee.view.SimpleDraweeView
+          android:id="@+id/drawee_some_rtl"
+          style="@style/DraweeRoundedCorners.Drawee"
+          app:roundedCornerRadius="16dp"
+          app:roundTopStart="false"
+          app:roundBottomStart="false"
+          />
+
       <TextView
           android:layout_width="match_parent"
           android:layout_height="wrap_content"
diff --git a/samples/showcase/src/main/res/values/strings.xml b/samples/showcase/src/main/res/values/strings.xml
index 80e93d5dd..3b794cc9f 100644
--- a/samples/showcase/src/main/res/values/strings.xml
+++ b/samples/showcase/src/main/res/values/strings.xml
@@ -202,6 +202,7 @@
   <string name="drawee_rounded_corners_as_circle">Using roundAsCircle</string>
   <string name="drawee_rounded_corners_radius">16dp corner radius</string>
   <string name="drawee_rounded_corners_some">Only rounding some corners</string>
+  <string name="drawee_rounded_corners_some_rtl">Only rounding some corners (RTL supported)</string>
   <string name="drawee_rounded_corners_fancy">Fancy (different radii)</string>
   <string name="drawee_rounded_corners_borders">Borders</string>
   <string name="drawee_rounded_corners_bitmap_only_toast">Switched to BITMAP_ONLY rounding method</string>
