diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
index 4b1c48f67..f80c2a25d 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
@@ -9,6 +9,7 @@
 import java.util.concurrent.Executor;
 
 import android.content.Context;
+import android.graphics.drawable.Animatable;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 
@@ -21,12 +22,14 @@
 import com.facebook.imagepipeline.image.CloseableStaticBitmap;
 import com.facebook.imagepipeline.image.EncodedImage;
 
+import com.hippo.fresco.large.drawable.AnimatableStandardizedTransformedDrawable;
+import com.hippo.fresco.large.drawable.AnimatableTransformedDrawable;
 import com.hippo.fresco.large.drawable.StandardizedTransformedDrawable;
 import com.hippo.fresco.large.drawable.Transformed;
 import com.hippo.fresco.large.drawable.TransformedDrawable;
 import com.hippo.fresco.large.drawable.SubsamplingDrawable;
 
-public class LargeDrawableFactory implements DrawableFactory {
+class LargeDrawableFactory implements DrawableFactory {
 
   private final Context context;
 
@@ -86,13 +89,19 @@ public final Drawable createDrawable(CloseableImage image) {
           getDecodeExecutor());
     } else {
       drawable = createNormalDrawable(image);
-      if (drawable != null) {
+      if (drawable instanceof Animatable) {
+        drawable = new AnimatableTransformedDrawable(drawable);
+      } else if (drawable != null) {
         drawable = new TransformedDrawable(drawable);
       }
     }
 
     if (drawable instanceof Transformed) {
-      drawable = new StandardizedTransformedDrawable(context, drawable);
+      if (drawable instanceof Animatable) {
+        drawable = new AnimatableStandardizedTransformedDrawable(context, drawable);
+      } else {
+        drawable = new StandardizedTransformedDrawable(context, drawable);
+      }
     }
 
     return drawable;
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableStandardizedTransformedDrawable.java b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableStandardizedTransformedDrawable.java
new file mode 100644
index 000000000..74d7f53cd
--- /dev/null
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableStandardizedTransformedDrawable.java
@@ -0,0 +1,45 @@
+package com.hippo.fresco.large.drawable;
+
+/*
+ * Created by Hippo on 6/3/2017.
+ */
+
+import android.content.Context;
+import android.graphics.drawable.Animatable;
+import android.graphics.drawable.Drawable;
+
+public class AnimatableStandardizedTransformedDrawable extends StandardizedTransformedDrawable
+    implements Animatable {
+
+  public AnimatableStandardizedTransformedDrawable(
+      Context context,
+      Drawable drawable) {
+    super(context, drawable);
+  }
+
+  @Override
+  public void start() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      ((Animatable) drawable).start();
+    }
+  }
+
+  @Override
+  public void stop() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      ((Animatable) drawable).stop();
+    }
+  }
+
+  @Override
+  public boolean isRunning() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      return ((Animatable) drawable).isRunning();
+    } else {
+      return false;
+    }
+  }
+}
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableTransformedDrawable.java b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableTransformedDrawable.java
new file mode 100644
index 000000000..e86e01c78
--- /dev/null
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/AnimatableTransformedDrawable.java
@@ -0,0 +1,41 @@
+package com.hippo.fresco.large.drawable;
+
+/*
+ * Created by Hippo on 6/3/2017.
+ */
+
+import android.graphics.drawable.Animatable;
+import android.graphics.drawable.Drawable;
+
+public class AnimatableTransformedDrawable extends TransformedDrawable implements Animatable {
+
+  public AnimatableTransformedDrawable(Drawable drawable) {
+    super(drawable);
+  }
+
+  @Override
+  public void start() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      ((Animatable) drawable).start();
+    }
+  }
+
+  @Override
+  public void stop() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      ((Animatable) drawable).stop();
+    }
+  }
+
+  @Override
+  public boolean isRunning() {
+    Drawable drawable = getCurrent();
+    if (drawable instanceof Animatable) {
+      return ((Animatable) drawable).isRunning();
+    } else {
+      return false;
+    }
+  }
+}
