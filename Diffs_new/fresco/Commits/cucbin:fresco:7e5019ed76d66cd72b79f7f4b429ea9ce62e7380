diff --git a/imagepipeline/src/test/java/com/facebook/imagepipeline/core/ImagePipelineTest.java b/imagepipeline/src/test/java/com/facebook/imagepipeline/core/ImagePipelineTest.java
index 641fb831e..041e88cce 100644
--- a/imagepipeline/src/test/java/com/facebook/imagepipeline/core/ImagePipelineTest.java
+++ b/imagepipeline/src/test/java/com/facebook/imagepipeline/core/ImagePipelineTest.java
@@ -89,19 +89,18 @@ public void setUp() throws Exception {
     mMainDiskStorageCache = mock(BufferedDiskCache.class);
     mSmallImageDiskStorageCache = mock(BufferedDiskCache.class);
     mThreadHandoffProducerQueue= mock(ThreadHandoffProducerQueue.class);
-    mImagePipeline =
-        new ImagePipeline(
-            mProducerSequenceFactory,
-            Sets.newHashSet(mRequestListener1, mRequestListener2),
-            mPrefetchEnabledSupplier,
-            mBitmapMemoryCache,
-            mEncodedMemoryCache,
-            mMainDiskStorageCache,
-            mSmallImageDiskStorageCache,
-            mCacheKeyFactory,
-            mThreadHandoffProducerQueue,
-            mSuppressBitmapPrefetchingSupplier,
-            mLazyDataSourceSupplier);
+    mImagePipeline = new ImagePipeline(
+        mProducerSequenceFactory,
+        Sets.newHashSet(mRequestListener1, mRequestListener2),
+        mPrefetchEnabledSupplier,
+        mBitmapMemoryCache,
+        mEncodedMemoryCache,
+        mMainDiskStorageCache,
+        mSmallImageDiskStorageCache,
+        mCacheKeyFactory,
+        mThreadHandoffProducerQueue,
+        mSuppressBitmapPrefetchingSupplier,
+        mLazyDataSourceSupplier);
 
     when(mImageRequest.getProgressiveRenderingEnabled()).thenReturn(true);
     when(mImageRequest.getPriority()).thenReturn(Priority.HIGH);
