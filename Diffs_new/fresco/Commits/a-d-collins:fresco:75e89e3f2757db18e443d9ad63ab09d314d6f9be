diff --git a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
index 1d3e0a614..946c9b1c7 100644
--- a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
+++ b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
@@ -32,9 +32,6 @@
   @VisibleForTesting
   int mMark; // position of 'mark' if any
 
-  // TODO: determine better name for this
-  public static int byteOffset;
-
   /**
    * Creates a new inputstream instance over the specific buffer.
    * @param pooledByteBuffer the buffer to read from
@@ -43,7 +40,7 @@ public PooledByteBufferInputStream(PooledByteBuffer pooledByteBuffer) {
     super();
     Preconditions.checkArgument(!pooledByteBuffer.isClosed());
     mPooledByteBuffer = Preconditions.checkNotNull(pooledByteBuffer);
-    mOffset = byteOffset;
+    mOffset = 0;
     mMark = 0;
   }
 
diff --git a/imagepipeline-base/src/main/java/com/facebook/imageformat/DefaultImageFormatChecker.java b/imagepipeline-base/src/main/java/com/facebook/imageformat/DefaultImageFormatChecker.java
index 69e512285..2e6cdd43d 100644
--- a/imagepipeline-base/src/main/java/com/facebook/imageformat/DefaultImageFormatChecker.java
+++ b/imagepipeline-base/src/main/java/com/facebook/imageformat/DefaultImageFormatChecker.java
@@ -10,7 +10,6 @@
 
 import javax.annotation.Nullable;
 
-import java.io.IOException;
 import java.io.InputStream;
 
 import com.facebook.common.internal.Ints;
@@ -52,8 +51,7 @@ public int getHeaderSize() {
    */
   @Nullable
   @Override
-  public final ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStream is)
-      throws IOException {
+  public final ImageFormat determineFormat(byte[] headerBytes, int headerSize) {
     Preconditions.checkNotNull(headerBytes);
 
     if (WebpSupportStatus.isWebpHeader(headerBytes, 0, headerSize)) {
diff --git a/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormat.java b/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormat.java
index f9f16bfa0..76363ba4d 100644
--- a/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormat.java
+++ b/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormat.java
@@ -11,9 +11,6 @@
 
 import javax.annotation.Nullable;
 
-import java.io.IOException;
-import java.io.InputStream;
-
 /**
  * Class representing all used image formats.
  */
@@ -35,8 +32,7 @@
      * @return the image format or null if unknown
      */
     @Nullable
-    ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStream is)
-      throws IOException;
+    ImageFormat determineFormat(byte[] headerBytes, int headerSize);
   }
 
   // Unknown image format
diff --git a/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormatChecker.java b/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormatChecker.java
index a04d89f9e..d114af0e3 100644
--- a/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormatChecker.java
+++ b/imagepipeline-base/src/main/java/com/facebook/imageformat/ImageFormatChecker.java
@@ -52,13 +52,13 @@ public ImageFormat determineImageFormat(final InputStream is) throws IOException
 
     if (mCustomImageFormatCheckers != null) {
       for (ImageFormat.FormatChecker formatChecker : mCustomImageFormatCheckers) {
-        ImageFormat format = formatChecker.determineFormat(imageHeaderBytes, headerSize, is);
+        ImageFormat format = formatChecker.determineFormat(imageHeaderBytes, headerSize);
         if (format != null && format != ImageFormat.UNKNOWN) {
           return format;
         }
       }
     }
-    ImageFormat format = mDefaultFormatChecker.determineFormat(imageHeaderBytes, headerSize, is);
+    ImageFormat format = mDefaultFormatChecker.determineFormat(imageHeaderBytes, headerSize);
     if (format == null) {
       format = ImageFormat.UNKNOWN;
     }
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/color/ColorImageExample.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/color/ColorImageExample.java
index 146a392fb..6973e605c 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/color/ColorImageExample.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/color/ColorImageExample.java
@@ -14,7 +14,6 @@
 import javax.annotation.Nullable;
 
 import java.io.IOException;
-import java.io.InputStream;
 
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
@@ -84,8 +83,7 @@ public int getHeaderSize() {
 
     @Nullable
     @Override
-    public ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStream is)
-        throws IOException {
+    public ImageFormat determineFormat(byte[] headerBytes, int headerSize) {
       if (headerSize < getHeaderSize()) {
         return null;
       }
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/keyframes/KeyframesDecoderExample.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/keyframes/KeyframesDecoderExample.java
index 824e8f262..6ae5a7726 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/keyframes/KeyframesDecoderExample.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/keyframes/KeyframesDecoderExample.java
@@ -67,8 +67,7 @@ public int getHeaderSize() {
      */
     @Nullable
     @Override
-    public ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStream is)
-        throws IOException {
+    public ImageFormat determineFormat(byte[] headerBytes, int headerSize) {
       // JSON files must start with a opening curly brace
       if (!ImageFormatCheckerUtils.startsWithPattern(
           headerBytes,
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
index 210298432..93f0a34ee 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
@@ -20,8 +20,6 @@
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.PictureDrawable;
 
-import com.facebook.common.internal.ByteStreams;
-import com.facebook.common.memory.PooledByteBufferInputStream;
 import com.facebook.imagepipeline.drawable.DrawableFactory;
 import com.facebook.imageformat.ImageFormat;
 import com.facebook.imageformat.ImageFormatCheckerUtils;
@@ -55,23 +53,13 @@ public int getHeaderSize() {
 
     @Nullable
     @Override
-    public ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStream is)
-        throws IOException {
+    public ImageFormat determineFormat(byte[] headerBytes, int headerSize) {
       if (headerSize < getHeaderSize()) {
         return null;
       }
       if (ImageFormatCheckerUtils.startsWithPattern(headerBytes, HEADER)) {
         return SVG_FORMAT;
       }
-
-      // TODO: (1) Determine if passing the InputStream to this method is the best way to achieve this result.
-      // TODO: (2) Determine if searching the whole array of bytes in the stream is best practice, according to the repository authors.
-      int indexOfPattern = ImageFormatCheckerUtils.containsPattern(ByteStreams.toByteArray(is), HEADER);
-      if (indexOfPattern != -1) {
-        PooledByteBufferInputStream.byteOffset = indexOfPattern;
-        return SVG_FORMAT;
-      }
-
       return null;
     }
   }
