diff --git a/animated-base-support/gradle.properties b/animated-base-support/gradle.properties
index 92710bb06..72f5d8040 100644
--- a/animated-base-support/gradle.properties
+++ b/animated-base-support/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/animated-base/gradle.properties b/animated-base/gradle.properties
index b0347b4a2..ceb7fa08e 100644
--- a/animated-base/gradle.properties
+++ b/animated-base/gradle.properties
@@ -5,7 +5,7 @@ POM_ARTIFACT_ID=fresco-animated-base
 POM_PACKAGING=aar
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/animated-base/src/main/java/com/facebook/imagepipeline/animated/impl/AnimatedDrawableBackendImpl.java b/animated-base/src/main/java/com/facebook/imagepipeline/animated/impl/AnimatedDrawableBackendImpl.java
index 1a52db0e6..e602d7175 100644
--- a/animated-base/src/main/java/com/facebook/imagepipeline/animated/impl/AnimatedDrawableBackendImpl.java
+++ b/animated-base/src/main/java/com/facebook/imagepipeline/animated/impl/AnimatedDrawableBackendImpl.java
@@ -9,13 +9,10 @@
 
 package com.facebook.imagepipeline.animated.impl;
 
-import javax.annotation.concurrent.GuardedBy;
-
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Rect;
-
 import com.facebook.common.internal.Preconditions;
 import com.facebook.common.references.CloseableReference;
 import com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend;
@@ -24,6 +21,7 @@
 import com.facebook.imagepipeline.animated.base.AnimatedImageFrame;
 import com.facebook.imagepipeline.animated.base.AnimatedImageResult;
 import com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil;
+import javax.annotation.concurrent.GuardedBy;
 
 /**
  * An {@link AnimatedDrawableBackend} that renders {@link AnimatedImage}.
@@ -39,14 +37,16 @@
   private final int[] mFrameTimestampsMs;
   private final int mDurationMs;
   private final AnimatedDrawableFrameInfo[] mFrameInfos;
+  private final Rect mRenderSrcRect = new Rect();
+  private final Rect mRenderDstRect = new Rect();
 
   @GuardedBy("this")
   private Bitmap mTempBitmap;
 
   public AnimatedDrawableBackendImpl(
-      AnimatedDrawableUtil animatedDrawableUtil,
-      AnimatedImageResult animatedImageResult,
-      Rect bounds) {
+          AnimatedDrawableUtil animatedDrawableUtil,
+          AnimatedImageResult animatedImageResult,
+          Rect bounds) {
     mAnimatedDrawableUtil = animatedDrawableUtil;
     mAnimatedImageResult = animatedImageResult;
     mAnimatedImage = animatedImageResult.getImage();
@@ -66,10 +66,10 @@ private static Rect getBoundsToUse(AnimatedImage image, Rect targetBounds) {
       return new Rect(0, 0, image.getWidth(), image.getHeight());
     }
     return new Rect(
-        0,
-        0,
-        Math.min(targetBounds.width(), image.getWidth()),
-        Math.min(targetBounds.height(), image.getHeight()));
+            0,
+            0,
+            Math.min(targetBounds.width(), image.getWidth()),
+            Math.min(targetBounds.height(), image.getHeight()));
   }
 
   @Override
@@ -146,9 +146,9 @@ public AnimatedDrawableBackend forNewBounds(Rect bounds) {
       return this;
     }
     return new AnimatedDrawableBackendImpl(
-        mAnimatedDrawableUtil,
-        mAnimatedImageResult,
-        bounds);
+            mAnimatedDrawableUtil,
+            mAnimatedImageResult,
+            bounds);
   }
 
   @Override
@@ -185,6 +185,19 @@ public void renderFrame(int frameNumber, Canvas canvas) {
     }
   }
 
+  private void prepareTempBitmapForThisSize(int width, int height) {
+    // Different gif frames can be different size,
+    // So we need to ensure we can fit next frame to temporary bitmap
+    if (mTempBitmap != null
+            && (mTempBitmap.getWidth() < width || mTempBitmap.getHeight() < height)) {
+      dropCaches();
+    }
+    if (mTempBitmap == null) {
+      mTempBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
+    }
+    mTempBitmap.eraseColor(Color.TRANSPARENT);
+  }
+
   private void renderImageSupportsScaling(Canvas canvas, AnimatedImageFrame frame) {
     double xScale = (double) mRenderedBounds.width() / (double) mAnimatedImage.getWidth();
     double yScale = (double) mRenderedBounds.height() / (double) mAnimatedImage.getHeight();
@@ -195,39 +208,36 @@ private void renderImageSupportsScaling(Canvas canvas, AnimatedImageFrame frame)
     int yOffset = (int) (frame.getYOffset() * yScale);
 
     synchronized (this) {
-      if (mTempBitmap == null) {
-        mTempBitmap = Bitmap.createBitmap(
-            mRenderedBounds.width(),
-            mRenderedBounds.height(),
-            Bitmap.Config.ARGB_8888);
-      }
-      mTempBitmap.eraseColor(Color.TRANSPARENT);
+      prepareTempBitmapForThisSize(mRenderedBounds.width(), mRenderedBounds.height());
       frame.renderFrame(frameWidth, frameHeight, mTempBitmap);
-      canvas.drawBitmap(mTempBitmap, xOffset, yOffset, null);
+
+      // Temporary bitmap can be bigger than frame, so we should draw only rendered area of bitmap
+      mRenderSrcRect.set(0, 0, mRenderedBounds.width(), mRenderedBounds.height());
+      mRenderDstRect.set(xOffset, yOffset, mRenderedBounds.width(), mRenderedBounds.height());
+
+      canvas.drawBitmap(mTempBitmap, mRenderSrcRect, mRenderDstRect, null);
     }
   }
 
-  public void renderImageDoesNotSupportScaling(Canvas canvas, AnimatedImageFrame frame) {
+  private void renderImageDoesNotSupportScaling(Canvas canvas, AnimatedImageFrame frame) {
     int frameWidth = frame.getWidth();
     int frameHeight = frame.getHeight();
     int xOffset = frame.getXOffset();
     int yOffset = frame.getYOffset();
     synchronized (this) {
-      if (mTempBitmap == null) {
-        mTempBitmap = Bitmap.createBitmap(
-            mAnimatedImage.getWidth(),
-            mAnimatedImage.getHeight(),
-            Bitmap.Config.ARGB_8888);
-      }
-      mTempBitmap.eraseColor(Color.TRANSPARENT);
+      prepareTempBitmapForThisSize(frameWidth, frameHeight);
       frame.renderFrame(frameWidth, frameHeight, mTempBitmap);
 
+      // Temporary bitmap can be bigger than frame, so we should draw only rendered area of bitmap
+      mRenderSrcRect.set(0, 0, frameWidth, frameHeight);
+      mRenderDstRect.set(0, 0, frameWidth, frameHeight);
+
       float xScale = (float) mRenderedBounds.width() / (float) mAnimatedImage.getWidth();
       float yScale = (float) mRenderedBounds.height() / (float) mAnimatedImage.getHeight();
       canvas.save();
       canvas.scale(xScale, yScale);
       canvas.translate(xOffset, yOffset);
-      canvas.drawBitmap(mTempBitmap, 0, 0, null);
+      canvas.drawBitmap(mTempBitmap, mRenderSrcRect, mRenderDstRect, null);
       canvas.restore();
     }
   }
diff --git a/animated-drawable/gradle.properties b/animated-drawable/gradle.properties
index 607876e0f..90951b8ce 100644
--- a/animated-drawable/gradle.properties
+++ b/animated-drawable/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/animated-gif/gradle.properties b/animated-gif/gradle.properties
index 3a0a7b04b..28ec33cdb 100644
--- a/animated-gif/gradle.properties
+++ b/animated-gif/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/animated-gif/src/main/jni/gifimage/gif.cpp b/animated-gif/src/main/jni/gifimage/gif.cpp
index ea2aab034..222d9392b 100644
--- a/animated-gif/src/main/jni/gifimage/gif.cpp
+++ b/animated-gif/src/main/jni/gifimage/gif.cpp
@@ -70,8 +70,9 @@ class GifWrapper {
       std::unique_ptr<GifFileType, decltype(&DGifCloseFile2)>&& pGifFile,
       std::shared_ptr<DataWrapper>& pData) :
           m_spGifFile(std::move(pGifFile)),
-          m_spData(pData) {
-    m_rasterBits.reserve(m_spGifFile->SWidth * m_spGifFile->SHeight);
+          m_spData(pData),
+          m_reservedBufferSize(m_spGifFile->SWidth * m_spGifFile->SHeight) {
+    m_rasterBits.reserve(m_reservedBufferSize);
   }
 
   virtual ~GifWrapper() {
@@ -110,6 +111,13 @@ class GifWrapper {
     return m_rasterBits.size();
   }
 
+  void reserveRasterBuffer(size_t bufferSize) {
+    if (m_reservedBufferSize < bufferSize) {
+      m_rasterBits.reserve(bufferSize);
+      m_reservedBufferSize = bufferSize;
+    }
+  }
+
   std::mutex& getRasterMutex() {
     return m_rasterMutex;
   }
@@ -125,6 +133,7 @@ class GifWrapper {
   std::vector<int> m_vectorFrameByteOffsets;
   std::vector<uint8_t> m_rasterBits;
   std::mutex m_rasterMutex;
+  size_t m_reservedBufferSize;
 };
 
 /**
@@ -278,14 +287,15 @@ static ColorMapObject* genDefColorMap(void) {
 ////////////////////////////////////////////////////////////////
 
 bool getGraphicsControlBlockForImage(SavedImage* pSavedImage, GraphicsControlBlock* pGcp) {
+  int resultCode = GIF_ERROR;
+  // If a GIF has multiple graphic control extension blocks, we use the last one
   for (int i = 0; i < pSavedImage->ExtensionBlockCount; i++) {
     ExtensionBlock* pExtensionBlock = &pSavedImage->ExtensionBlocks[i];
     if (pExtensionBlock->Function == GRAPHICS_EXT_FUNC_CODE) {
-      DGifExtensionToGCB(pExtensionBlock->ByteCount, pExtensionBlock->Bytes, pGcp);
-      return true;
+      resultCode = DGifExtensionToGCB(pExtensionBlock->ByteCount, pExtensionBlock->Bytes, pGcp);
     }
   }
-  return false;
+  return resultCode == GIF_OK;
 }
 
 /**
@@ -296,36 +306,44 @@ bool getGraphicsControlBlockForImage(SavedImage* pSavedImage, GraphicsControlBlo
  * written to the SavedImage structure. This is the key to how we avoid caching all the decoded
  * frame pixels in memory.
  *
- * @param pGifFile the gif data structure to read to and write to
- * @param pRasterBits the buffer to write the decoded frame pixels to. If null, the data is
- *    not actually decoded and instead just skipped.
- * @param doNotAddToSavedImages if set to true, will not add an additional SavedImage to
+ * @param pGifWrapper the gif wrapper containing the giflib struct and additional data
+ * @param decodeFrame if set to true, next frame will be decoded to pGifWrapper bits buffer,
+       otherwise it will only decode frame data and skip it
+ * @param addToSavedImages if set to true, will add an additional SavedImage to
  *     pGifFile->SavedImages
  * @return a gif error code
  */
 int readSingleFrame(
-    GifFileType* pGifFile,
-    uint8_t* pRasterBits,
-    bool doNotAddToSavedImages) {
+    GifWrapper* pGifWrapper,
+    bool decodeFramePixels,
+    bool addToSavedImages) {
+
+  GifFileType *pGifFile = pGifWrapper->get();
+
   if (DGifGetImageDesc(pGifFile) == GIF_ERROR) {
     return GIF_ERROR;
   }
   SavedImage* pSavedImage = &pGifFile->SavedImages[pGifFile->ImageCount - 1];
 
-  // Check size of image.
-  if (pSavedImage->ImageDesc.Width <= 0 &&
-      pSavedImage->ImageDesc.Height <= 0 &&
-      pSavedImage->ImageDesc.Width > (INT_MAX / pSavedImage->ImageDesc.Height)) {
+  // Check size of image. Note: Frames with 0 width or height should be allowed.
+  if (pSavedImage->ImageDesc.Width < 0 || pSavedImage->ImageDesc.Height < 0) {
     return GIF_ERROR;
   }
 
-  size_t imageSize = pSavedImage->ImageDesc.Width * pSavedImage->ImageDesc.Height;
-  if (imageSize > (unsigned)(pGifFile->SWidth * pGifFile->SHeight)) {
+  // Check for image size overflow.
+  if (pSavedImage->ImageDesc.Width > 0 &&
+      pSavedImage->ImageDesc.Height > 0 &&
+      pSavedImage->ImageDesc.Width > (INT_MAX / pSavedImage->ImageDesc.Height)) {
     return GIF_ERROR;
   }
 
-  if (pRasterBits != nullptr) {
-    // We're were asked to decode and write the results to pRasterBits.
+  if (decodeFramePixels) {
+    // Reserve larger raster bits buffer if needed
+    size_t imageSize = pSavedImage->ImageDesc.Width * pSavedImage->ImageDesc.Height;
+    pGifWrapper->reserveRasterBuffer(imageSize);
+
+    // Decode frame image and save it to temporary raster bits buffer
+    uint8_t* pRasterBits = pGifWrapper->getRasterBits();
     if (pSavedImage->ImageDesc.Interlace) {
       // The way an interlaced image should be read - offsets and jumps...
       int interlacedOffset[] = { 0, 4, 2, 1 };
@@ -369,7 +387,7 @@ int readSingleFrame(
     pGifFile->ExtensionBlockCount = 0;
   }
 
-  if (doNotAddToSavedImages) {
+  if (!addToSavedImages) {
     // giflib wasn't designed to work with decoding arbitrary frames on the fly. By default, it will
     // keep adding more images to the SavedImages array. To avoid that, we just decrement the image
     // count. It basically means the array remains larger by one GifFileType. We decrement it so
@@ -496,9 +514,10 @@ int modifiedDGifSlurp(GifWrapper* pGifWrapper) {
         pGifWrapper->addFrameByteOffset(pGifWrapper->getData()->getPosition());
 
         if (readSingleFrame(
-              pGifWrapper->get(),
-              nullptr,
-              false) == GIF_ERROR) {
+              pGifWrapper,
+              false, // Don't decode frame pixels
+              true  // Add to saved images
+              ) == GIF_ERROR) {
           isStop = true;
         }
         break;
@@ -1103,7 +1122,14 @@ void GifFrame_nativeRenderFrame(
   pGifWrapper->getData()->setPosition(byteOffset);
 
   // Now we kick off the decoding process.
-  readSingleFrame(pGifWrapper->get(), pGifWrapper->getRasterBits(), true);
+  int readRes = readSingleFrame(pGifWrapper,
+                                true, // Decode frame pixels
+                                false // Don't add frame to saved images
+                                );
+  if (readRes != GIF_OK) {
+    // Probably, broken canvas, and we can ignore it
+    return;
+  }
 
   // Get the right color table to use.
   ColorMapObject* pColorMap = spNativeContext->spGifWrapper->get()->SColorMap;
diff --git a/animated-webp/gradle.properties b/animated-webp/gradle.properties
index 76b0d5dbf..7663e80e8 100644
--- a/animated-webp/gradle.properties
+++ b/animated-webp/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/drawee-backends/drawee-pipeline/gradle.properties b/drawee-backends/drawee-pipeline/gradle.properties
index 521402697..3daf5805a 100644
--- a/drawee-backends/drawee-pipeline/gradle.properties
+++ b/drawee-backends/drawee-pipeline/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/drawee-span/gradle.properties b/drawee-span/gradle.properties
index d18b7c835..8ce58e390 100644
--- a/drawee-span/gradle.properties
+++ b/drawee-span/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/drawee/gradle.properties b/drawee/gradle.properties
index 70d44cc10..aa98afad6 100644
--- a/drawee/gradle.properties
+++ b/drawee/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/fbcore/gradle.properties b/fbcore/gradle.properties
index d6c47bbfc..01adc7ff0 100644
--- a/fbcore/gradle.properties
+++ b/fbcore/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/frescopainter/gradle.properties b/frescopainter/gradle.properties
index 9058a68fd..a138303ee 100644
--- a/frescopainter/gradle.properties
+++ b/frescopainter/gradle.properties
@@ -20,7 +20,7 @@ systemProp.file.encoding=utf-8
 
 POM_ARTIFACT_ID=fresco-frescopainter
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties b/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
index 01a18d973..f19407832 100644
--- a/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
+++ b/imagepipeline-backends/imagepipeline-okhttp3/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/imagepipeline-base/gradle.properties b/imagepipeline-base/gradle.properties
index 63133377f..02636602a 100644
--- a/imagepipeline-base/gradle.properties
+++ b/imagepipeline-base/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/imagepipeline/gradle.properties b/imagepipeline/gradle.properties
index faf70543a..ff67aa8ea 100644
--- a/imagepipeline/gradle.properties
+++ b/imagepipeline/gradle.properties
@@ -2,7 +2,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
diff --git a/static-webp/gradle.properties b/static-webp/gradle.properties
index fbeadbfbb..2086691de 100644
--- a/static-webp/gradle.properties
+++ b/static-webp/gradle.properties
@@ -1,7 +1,7 @@
 systemProp.file.encoding=utf-8
 
 GROUP_ID=com.meiyou.fresco
-DEPLOY_VERSION=0.9.0-linhonghong-SNAPSHOT
+DEPLOY_VERSION=0.9.1-linhonghong-SNAPSHOT
 
 deployToUrl=http\://192.168.10.230\:8081/nexus/content/repositories/snapshots/
 deployUserName=admin
