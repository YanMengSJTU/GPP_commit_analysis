diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
index 00e7190eb..da195865b 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
@@ -245,11 +245,11 @@ public void draw(Canvas canvas) {
   }
 
   /**
-   * If both the radii and border width are zero, there is nothing to round.
+   * If both the radii and border width are zero or bitmap is null, there is nothing to round.
    */
   @VisibleForTesting
   boolean shouldRound() {
-    return mIsCircle || mRadiiNonZero || mBorderWidth > 0;
+    return (mIsCircle || mRadiiNonZero || mBorderWidth > 0) && getBitmap() != null;
   }
 
   private void updateTransform() {
diff --git a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
index 2060d10ac..8ebe89348 100644
--- a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
+++ b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
@@ -34,6 +34,8 @@
   private DisplayMetrics mDisplayMetrics;
 
   RoundedBitmapDrawable mRoundedBitmapDrawable;
+  RoundedBitmapDrawable mRoundedBitmapDrawableWithNullBitmap;
+
   private final Drawable.Callback mCallback = mock(Drawable.Callback.class);
 
   @Before
@@ -44,6 +46,9 @@ public void setUp() {
     when(mResources.getDisplayMetrics()).thenReturn(mDisplayMetrics);
     mRoundedBitmapDrawable = new RoundedBitmapDrawable(mResources, mBitmap);
     mRoundedBitmapDrawable.setCallback(mCallback);
+
+    mRoundedBitmapDrawableWithNullBitmap = new RoundedBitmapDrawable(mResources, null);
+    mRoundedBitmapDrawable.setCallback(mCallback);
   }
 
   @Test
@@ -88,6 +93,7 @@ public void testSetPadding() {
   @Test
   public void testShouldRoundDefault() {
     assertFalse(mRoundedBitmapDrawable.shouldRound());
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
   }
 
   @Test
@@ -96,6 +102,11 @@ public void testShouldRoundRadius() {
     assertTrue(mRoundedBitmapDrawable.shouldRound());
     mRoundedBitmapDrawable.setRadius(0);
     assertFalse(mRoundedBitmapDrawable.shouldRound());
+
+    mRoundedBitmapDrawableWithNullBitmap.setRadius(5);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
+    mRoundedBitmapDrawableWithNullBitmap.setRadius(0);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
   }
 
   @Test
@@ -104,6 +115,11 @@ public void testShouldRoundRadii() {
     assertTrue(mRoundedBitmapDrawable.shouldRound());
     mRoundedBitmapDrawable.setRadii(new float[]{0, 0, 0, 0, 0, 0, 0, 0});
     assertFalse(mRoundedBitmapDrawable.shouldRound());
+
+    mRoundedBitmapDrawableWithNullBitmap.setRadii(new float[]{0, 0, 0, 0, 0, 0, 0, 1});
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
+    mRoundedBitmapDrawableWithNullBitmap.setRadii(new float[]{0, 0, 0, 0, 0, 0, 0, 0});
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
   }
 
   @Test
@@ -112,6 +128,11 @@ public void testShouldRoundCircle() {
     assertTrue(mRoundedBitmapDrawable.shouldRound());
     mRoundedBitmapDrawable.setCircle(false);
     assertFalse(mRoundedBitmapDrawable.shouldRound());
+
+    mRoundedBitmapDrawableWithNullBitmap.setCircle(true);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
+    mRoundedBitmapDrawableWithNullBitmap.setCircle(false);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
   }
 
   @Test
@@ -120,6 +141,11 @@ public void testShouldRoundBorder() {
     assertTrue(mRoundedBitmapDrawable.shouldRound());
     mRoundedBitmapDrawable.setBorder(0x00000000, 0);
     assertFalse(mRoundedBitmapDrawable.shouldRound());
+
+    mRoundedBitmapDrawableWithNullBitmap.setBorder(0xFFFFFFFF, 1);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
+    mRoundedBitmapDrawableWithNullBitmap.setBorder(0x00000000, 0);
+    assertFalse(mRoundedBitmapDrawableWithNullBitmap.shouldRound());
   }
 
   @Test
