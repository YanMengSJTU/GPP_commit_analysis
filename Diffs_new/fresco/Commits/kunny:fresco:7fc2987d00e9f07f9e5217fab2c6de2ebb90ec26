diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducer.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducer.java
index 37d151634..863d1d905 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducer.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducer.java
@@ -243,11 +243,7 @@ private static TriState shouldTransform(
     return ratio;
   }
 
-  @VisibleForTesting static int roundNumerator(float maxRatio) {
-    return roundNumerator(maxRatio, ResizeOptions.DEFAULT_ROUNDUP_FRACTION);
-  }
-
-  static int roundNumerator(float maxRatio, float roundUpFraction) {
+  @VisibleForTesting static int roundNumerator(float maxRatio, float roundUpFraction) {
     return (int) (roundUpFraction + maxRatio * JpegTranscoder.SCALE_DENOMINATOR);
   }
 
diff --git a/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducerTest.java b/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducerTest.java
index a9007b915..2302e1dee 100644
--- a/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducerTest.java
+++ b/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/ResizeAndRotateProducerTest.java
@@ -297,12 +297,18 @@ public void testDoesNothingWhenNotAskedToDoAnything() {
 
   @Test
   public void testRoundNumerator() {
-    assertEquals(1, ResizeAndRotateProducer.roundNumerator(1.0f/8));
-    assertEquals(1, ResizeAndRotateProducer.roundNumerator(5.0f/32));
-    assertEquals(1, ResizeAndRotateProducer.roundNumerator(1.0f/6 - 0.01f));
-    assertEquals(2, ResizeAndRotateProducer.roundNumerator(1.0f/6));
-    assertEquals(2, ResizeAndRotateProducer.roundNumerator(3.0f/16));
-    assertEquals(2, ResizeAndRotateProducer.roundNumerator(2.0f/8));
+    assertEquals(1, ResizeAndRotateProducer.roundNumerator(
+        1.0f/8, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
+    assertEquals(1, ResizeAndRotateProducer.roundNumerator(
+        5.0f/32, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
+    assertEquals(1, ResizeAndRotateProducer.roundNumerator(
+        1.0f/6 - 0.01f, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
+    assertEquals(2, ResizeAndRotateProducer.roundNumerator(
+        1.0f/6, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
+    assertEquals(2, ResizeAndRotateProducer.roundNumerator(
+        3.0f/16, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
+    assertEquals(2, ResizeAndRotateProducer.roundNumerator(
+        2.0f/8, ResizeOptions.DEFAULT_ROUNDUP_FRACTION));
   }
 
   @Test
