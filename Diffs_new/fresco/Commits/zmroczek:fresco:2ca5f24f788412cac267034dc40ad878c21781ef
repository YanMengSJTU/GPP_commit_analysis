diff --git a/circle.yml b/circle.yml
index 8a5367795..09dabacfa 100644
--- a/circle.yml
+++ b/circle.yml
@@ -18,6 +18,21 @@ dependencies:
 test:
   override:
     - ./gradlew test assembleDebug -PdisablePreDex
+    # start the emulator
+    - emulator -avd circleci-android22 -no-audio -no-window:
+        background: true
+        parallel: true
+    # wait for it to have booted
+    - circle-android wait-for-boot
+    # unlock the emulator screen
+    - sleep 30
+    - adb shell input keyevent 82
+    # run tests  against the emulator.
+    - ./gradlew :samples:showcase:connectedMainDebugAndroidTest -PdisablePreDex
+    # copy the build outputs to artifacts
+    - cp -r app/build/outputs $CIRCLE_ARTIFACTS
+    # copy the test results to the test results directory.
+    - cp -r app/build/outputs/androidTest-results/* $CIRCLE_TEST_REPORTS
   post:
     # copy test report for Circle CI to display
     - mkdir -p $CIRCLE_TEST_REPORTS/junit/
diff --git a/samples/showcase/build.gradle b/samples/showcase/build.gradle
index 712a3d0c0..22a7e9f8d 100644
--- a/samples/showcase/build.gradle
+++ b/samples/showcase/build.gradle
@@ -77,4 +77,9 @@ dependencies {
 
     // Only used for the custom SVG decoder
     implementation 'com.caverock:androidsvg:1.2.1'
+
+    // Testing-only dependencies
+    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
+    androidTestImplementation 'com.android.support.test:runner:1.0.1'
+    androidTestImplementation "junit:junit:${JUNIT_VERSION}"
 }
diff --git a/samples/showcase/src/androidTest/java/com/facebook/fresco/samples/showcase/ShowcaseRunTest.java b/samples/showcase/src/androidTest/java/com/facebook/fresco/samples/showcase/ShowcaseRunTest.java
new file mode 100644
index 000000000..61c5698de
--- /dev/null
+++ b/samples/showcase/src/androidTest/java/com/facebook/fresco/samples/showcase/ShowcaseRunTest.java
@@ -0,0 +1,45 @@
+/*
+ * This file provided by Facebook is for non-commercial testing and evaluation
+ * purposes only.  Facebook reserves all rights not expressly granted.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+ * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+package com.facebook.fresco.samples.showcase;
+
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.assertion.ViewAssertions.matches;
+import static android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom;
+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
+import static android.support.test.espresso.matcher.ViewMatchers.withParent;
+import static android.support.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.CoreMatchers.allOf;
+
+import android.support.test.filters.LargeTest;
+import android.support.test.rule.ActivityTestRule;
+import android.support.test.runner.AndroidJUnit4;
+import android.widget.TextView;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+@RunWith(AndroidJUnit4.class)
+@LargeTest
+public class ShowcaseRunTest {
+
+  @Rule
+  public ActivityTestRule<MainActivity> mActivityRule = new ActivityTestRule(MainActivity.class);
+
+  @Test
+  public void testRunTheShowcaseApp() {
+    onView(withId(R.id.content_main)).check(matches(isDisplayed()));
+    onView(withId(R.id.toolbar)).check(matches(isDisplayed()));
+    onView(allOf(isAssignableFrom(TextView.class), withParent(withId(R.id.toolbar))))
+        .check(matches(withText(R.string.welcome_title)));
+  }
+}
