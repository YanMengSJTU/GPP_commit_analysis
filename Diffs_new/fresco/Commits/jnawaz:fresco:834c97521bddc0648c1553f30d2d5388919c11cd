diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcher.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcher.java
index f60df61cc..7f6ab83e3 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcher.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcher.java
@@ -134,7 +134,7 @@ private HttpURLConnection downloadFrom(Uri uri, int maxRedirects) throws IOExcep
   @VisibleForTesting
   static HttpURLConnection openConnectionTo(Uri uri) throws IOException {
     URL url = UriUtil.uriToUrl(uri);
-    return (HttpURLConnection) url.openConnection().setConnectTimeout();
+    return (HttpURLConnection) url.openConnection();
   }
 
   private static boolean isHttpSuccess(int responseCode) {
diff --git a/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcherTest.java b/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcherTest.java
index 41a58feda..58e5f6566 100644
--- a/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcherTest.java
+++ b/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/HttpUrlConnectionNetworkFetcherTest.java
@@ -195,6 +195,12 @@ public void testFetchSendsErrorToCallbackAfterTooManyRedirects() throws IOExcept
     verifyNoMoreInteractions(mMockCallback);
   }
 
+  @Test
+  public void testHttpUrlConnectionTimeout() throws IOException {
+      HttpURLConnection mockRequest = mock(HttpURLConnection.class);
+      assert(mockRequest.getConnectTimeout() == HttpUrlConnectionNetworkFetcher.HTTP_DEFAULT_TIMEOUT);
+  }
+
   private HttpURLConnection mockSuccess() throws IOException {
     return mockSuccessWithStream(mock(InputStream.class));
   }
@@ -209,6 +215,14 @@ private HttpURLConnection mockSuccessWithStream(InputStream is) throws IOExcepti
     return mockResponse;
   }
 
+  private HttpURLConnection mockTimeout() throws IOException {
+    HttpURLConnection mockResponse = mock(HttpURLConnection.class);
+    when(mockResponse.getResponseCode()).thenReturn(408);
+
+    queueConnection(mockResponse);
+    return mockResponse;
+  }
+
   private HttpURLConnection mockFailure() throws IOException {
     HttpURLConnection mockResponse = mock(HttpURLConnection.class);
     when(mockResponse.getResponseCode()).thenReturn(404);
