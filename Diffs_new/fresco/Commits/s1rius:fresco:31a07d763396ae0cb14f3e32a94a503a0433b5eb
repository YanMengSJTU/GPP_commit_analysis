diff --git a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
index 50473cce5..c91f80ee7 100644
--- a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
+++ b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
@@ -23,6 +23,7 @@
 import com.facebook.drawee.backends.pipeline.info.ImageOrigin;
 import com.facebook.drawee.backends.pipeline.info.ImageOriginListener;
 import com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener;
+import com.facebook.drawee.backends.pipeline.info.ImageOriginUtils;
 import com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener;
 import com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor;
 import com.facebook.drawee.components.DeferredReleaser;
@@ -85,6 +86,7 @@
   @GuardedBy("this")
   @Nullable
   private ImageOriginListener mImageOriginListener;
+  private int mImageOrigin = ImageOrigin.UNKNOWN;
 
   public PipelineDraweeController(
       Resources resources,
@@ -121,6 +123,7 @@ public void initialize(
     mCacheKey = cacheKey;
     setCustomDrawableFactories(customDrawableFactories);
     clearImageOriginListeners();
+    maybeUpdateDebugOverlay(null);
     addImageOriginListener(imageOriginListener);
   }
 
@@ -290,13 +293,24 @@ private void maybeUpdateDebugOverlay(@Nullable CloseableImage image) {
     }
 
     if (getControllerOverlay() == null) {
-      DebugControllerOverlayDrawable controllerOverlay = new DebugControllerOverlayDrawable();
+      final DebugControllerOverlayDrawable controllerOverlay = new DebugControllerOverlayDrawable();
       ImageLoadingTimeControllerListener overlayImageLoadListener =
           new ImageLoadingTimeControllerListener(controllerOverlay);
       addControllerListener(overlayImageLoadListener);
       setControllerOverlay(controllerOverlay);
     }
 
+    if (mImageOriginListener == null) {
+      ImageOriginListener overlayImageOriginListener = new ImageOriginListener() {
+        @Override
+        public void onImageLoaded(String controllerId, int imageOrigin, boolean successful) {
+          mImageOrigin = imageOrigin;
+
+        }
+      };
+      addImageOriginListener(overlayImageOriginListener);
+    }
+
     if (getControllerOverlay() instanceof DebugControllerOverlayDrawable) {
       DebugControllerOverlayDrawable debugOverlay =
           (DebugControllerOverlayDrawable) getControllerOverlay();
@@ -310,6 +324,7 @@ private void maybeUpdateDebugOverlay(@Nullable CloseableImage image) {
         scaleType = scaleTypeDrawable != null ? scaleTypeDrawable.getScaleType() : null;
       }
       debugOverlay.setScaleType(scaleType);
+      debugOverlay.setOrigin(ImageOriginUtils.toString(mImageOrigin));
       if (image != null) {
         debugOverlay.setDimensions(image.getWidth(), image.getHeight());
         debugOverlay.setImageSize(image.getSizeInBytes());
diff --git a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
index e3fd5bdbf..dcfa69c6b 100644
--- a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
+++ b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
@@ -40,10 +40,12 @@ public synchronized void onImageLoaded(String controllerId, int imageOrigin, boo
     final int numberOfListeners = mImageOriginListeners.size();
     for (int i = 0; i < numberOfListeners; i++) {
       ImageOriginListener listener = mImageOriginListeners.get(i);
-      try {
-        listener.onImageLoaded(controllerId, imageOrigin, successful);
-      } catch (Exception e) {
-        FLog.e(TAG, "InternalListener exception in onImageLoaded", e);
+      if (listener != null) {
+        try {
+          listener.onImageLoaded(controllerId, imageOrigin, successful);
+        } catch (Exception e) {
+          FLog.e(TAG, "InternalListener exception in onImageLoaded", e);
+        }
       }
     }
   }
diff --git a/drawee/src/main/java/com/facebook/drawee/debug/DebugControllerOverlayDrawable.java b/drawee/src/main/java/com/facebook/drawee/debug/DebugControllerOverlayDrawable.java
index 25a905b5b..98ab99f31 100644
--- a/drawee/src/main/java/com/facebook/drawee/debug/DebugControllerOverlayDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/debug/DebugControllerOverlayDrawable.java
@@ -45,13 +45,13 @@
   private static final int TEXT_COLOR = 0xFFFFFFFF;
   private static final int OUTLINE_STROKE_WIDTH_PX = 2;
   private static final int MAX_TEXT_SIZE_PX = 40;
-  private static final int MIN_TEXT_SIZE_PX = 12;
+  private static final int MIN_TEXT_SIZE_PX = 10;
   private static final int TEXT_LINE_SPACING_PX = 8;
   private static final int TEXT_PADDING_PX = 10;
 
   // Debug-text dependent parameters
-  private static final int MAX_NUMBER_OF_LINES = 7;
-  private static final int MAX_LINE_WIDTH_EM = 7;
+  private static final int MAX_NUMBER_OF_LINES = 9;
+  private static final int MAX_LINE_WIDTH_EM = 8;
 
   // General information
   private String mControllerId;
@@ -82,6 +82,7 @@
   private int mCurrentTextYPx;
 
   private long mFinalImageTimeMs;
+  private String mOrigin;
 
   public DebugControllerOverlayDrawable() {
     reset();
@@ -96,6 +97,7 @@ public void reset() {
     mImageFormat = null;
     setControllerId(null);
     mFinalImageTimeMs = -1;
+    mOrigin = null;
     invalidateSelf();
   }
 
@@ -133,6 +135,11 @@ public void setAnimationInfo(int frameCount, int loopCount) {
     invalidateSelf();
   }
 
+  public void setOrigin(String s) {
+    mOrigin = s;
+    invalidateSelf();
+  }
+
   /**
    *
    * @param imageSizeBytes the image size in bytes
@@ -202,6 +209,9 @@ public void draw(Canvas canvas) {
     if (mFinalImageTimeMs >= 0) {
       addDebugText(canvas, "t: %d ms", mFinalImageTimeMs);
     }
+    if (mOrigin != null) {
+      addDebugText(canvas, "origin: %s", mOrigin);
+    }
   }
 
   @Override
