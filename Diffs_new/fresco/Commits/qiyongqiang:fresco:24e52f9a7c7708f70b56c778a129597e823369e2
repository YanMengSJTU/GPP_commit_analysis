diff --git a/drawee-backends/drawee-pipeline/build.gradle b/drawee-backends/drawee-pipeline/build.gradle
index 03efb2124..f29aa5299 100644
--- a/drawee-backends/drawee-pipeline/build.gradle
+++ b/drawee-backends/drawee-pipeline/build.gradle
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.library'
+apply plugin: 'upaar'
 
 project.group = GROUP
 version = VERSION_NAME
@@ -9,7 +10,7 @@ dependencies {
     compile project(':fbcore')
     compile project(':imagepipeline')
 }
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 android {
     buildToolsVersion rootProject.ext.buildToolsVersion
@@ -29,4 +30,31 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
+
+
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'fresco'
+    version '0.9.1'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/drawee/build.gradle b/drawee/build.gradle
index a3735cdbe..6f28fcb0f 100644
--- a/drawee/build.gradle
+++ b/drawee/build.gradle
@@ -1,5 +1,6 @@
 apply plugin: 'com.android.library'
-apply plugin: 'maven'
+//apply plugin: 'maven'
+apply plugin: 'upaar'
 
 project.group = GROUP
 version = VERSION_NAME
@@ -19,7 +20,7 @@ dependencies {
     }
 }
 
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 android {
     buildToolsVersion rootProject.ext.buildToolsVersion
@@ -40,4 +41,30 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
+
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'drawee'
+    version '0.9.1'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/fbcore/build.gradle b/fbcore/build.gradle
index fcac62447..3ddc28688 100644
--- a/fbcore/build.gradle
+++ b/fbcore/build.gradle
@@ -1,5 +1,6 @@
 apply plugin: 'com.android.library'
 apply plugin: 'maven'
+apply plugin: 'upaar'
 
 project.group = GROUP
 version = VERSION_NAME
@@ -21,7 +22,7 @@ dependencies {
     }
 }
 
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 
 android {
@@ -44,4 +45,30 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
+
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'fbcore'
+    version '0.9.1'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/imagepipeline-backends/imagepipeline-okhttp/build.gradle b/imagepipeline-backends/imagepipeline-okhttp/build.gradle
index 0b98ecc86..a099f7634 100644
--- a/imagepipeline-backends/imagepipeline-okhttp/build.gradle
+++ b/imagepipeline-backends/imagepipeline-okhttp/build.gradle
@@ -1,5 +1,5 @@
 apply plugin: 'com.android.library'
-
+apply plugin: 'upaar'
 project.group = GROUP
 version = VERSION_NAME
 
@@ -9,7 +9,7 @@ dependencies {
   compile project(':fbcore')
   compile project(':imagepipeline')
 }
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 android {
     buildToolsVersion rootProject.ext.buildToolsVersion
@@ -32,5 +32,30 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
 
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'imagepipeline-okhttp'
+    version '0.9.1'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/imagepipeline-base/build.gradle b/imagepipeline-base/build.gradle
index a5d637a4f..1b7f340fa 100644
--- a/imagepipeline-base/build.gradle
+++ b/imagepipeline-base/build.gradle
@@ -1,5 +1,6 @@
 apply plugin: 'com.android.library'
 apply plugin: 'maven'
+apply plugin: 'upaar'
 
 project.group = GROUP
 version = VERSION_NAME
@@ -24,7 +25,7 @@ dependencies {
         exclude group: 'org.apache.httpcomponents', module: 'httpclient'
     }
 }
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 android {
 
@@ -37,4 +38,30 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
+
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'imagepipeline-base'
+    version '0.9.1'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/imagepipeline/build.gradle b/imagepipeline/build.gradle
index 95fcfd238..c5e92ff9f 100644
--- a/imagepipeline/build.gradle
+++ b/imagepipeline/build.gradle
@@ -1,5 +1,6 @@
 apply plugin: 'com.android.library'
 apply plugin: 'maven'
+apply plugin: 'upaar'
 
 project.group = GROUP
 version = VERSION_NAME
@@ -30,7 +31,7 @@ dependencies {
         exclude group: 'org.apache.httpcomponents', module: 'httpclient'
     }
 }
-apply from: rootProject.file('release.gradle')
+//apply from: rootProject.file('release.gradle')
 
 // We download various C++ open-source dependencies from SourceForge into nativedeps/downloads.
 // We then copy both downloaded code and our custom makefiles and headers into nativedeps/merge.
@@ -197,4 +198,31 @@ task sourcesJar(type: Jar) {
     from android.sourceSets.main.java.srcDirs
     classifier = 'sources'
 }
-artifacts.add('archives', sourcesJar)
+//artifacts.add('archives', sourcesJar)
+
+
+upinfo {
+    groupId 'com.facebook.fresco'
+    artifactId 'imagepipeline'
+    version '0.9.2-SNAPSHOT'
+}
+buildscript {
+    repositories {
+        jcenter()
+        maven { url 'http://download.crashlytics.com/maven' }
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.3'
+        classpath 'com.mogujie.gradle:upaar:1.0'
+    }
+}
+
+allprojects {
+    repositories {
+        maven { url 'http://maven.mogujie.org/nexus/content/groups/mitpublic/' }
+        mavenLocal()
+        jcenter { url 'https://bintray.com/artifact/download/bintray/jcenter'}
+    }
+}
\ No newline at end of file
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounter.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounter.java
index f353cc0ec..defdb45be 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounter.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounter.java
@@ -9,11 +9,6 @@
 
 package com.facebook.imagepipeline.memory;
 
-import javax.annotation.concurrent.GuardedBy;
-
-import java.util.ArrayList;
-import java.util.List;
-
 import android.graphics.Bitmap;
 import android.os.Build;
 
@@ -25,6 +20,11 @@
 import com.facebook.imagepipeline.nativecode.Bitmaps;
 import com.facebook.imageutils.BitmapUtil;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import javax.annotation.concurrent.GuardedBy;
+
 /**
  * Counts bitmaps - keeps track of both, count and total size in bytes.
  */
@@ -51,7 +51,7 @@ public void release(Bitmap value) {
         try {
           decrease(value);
         } finally {
-          value.recycle();
+//          value.recycle();//android 4.0开始,内存回收交给java层
         }
       }
     };
@@ -143,7 +143,7 @@ public synchronized long getSize() {
           if (countedBitmaps-- > 0) {
             decrease(bitmap);
           }
-          bitmap.recycle();
+//          bitmap.recycle();
         }
       }
       throw Throwables.propagate(exception);
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounterProvider.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounterProvider.java
index a99c8259e..e4a3b8adf 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounterProvider.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BitmapCounterProvider.java
@@ -21,7 +21,7 @@
    * background process to be killed.
    */
   public static final int MAX_BITMAP_TOTAL_SIZE = getMaxSizeHardCap();
-  public static final int MAX_BITMAP_COUNT = 384;
+  public static final int MAX_BITMAP_COUNT = 1000;
 
   private static BitmapCounter sBitmapCounter;
 
diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode/ImagePipelineNativeLoader.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode/ImagePipelineNativeLoader.java
index ff9f1a3df..58ce1d167 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode/ImagePipelineNativeLoader.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/nativecode/ImagePipelineNativeLoader.java
@@ -9,12 +9,12 @@
 
 package com.facebook.imagepipeline.nativecode;
 
+import com.facebook.common.soloader.SoLoaderShim;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
-import com.facebook.common.soloader.SoLoaderShim;
-
 /**
  * Single place responsible for loading libimagepipeline.so and its dependencies.
  *
@@ -40,6 +40,7 @@
   }
 
   public static void load() {
+    SoLoaderShim.loadLibrary("webp");
     SoLoaderShim.loadLibrary("imagepipeline");
   }
 }
diff --git a/samples/comparison/src/main/java/com/facebook/samples/comparison/configs/ConfigConstants.java b/samples/comparison/src/main/java/com/facebook/samples/comparison/configs/ConfigConstants.java
index 83c586f67..f7609f56d 100644
--- a/samples/comparison/src/main/java/com/facebook/samples/comparison/configs/ConfigConstants.java
+++ b/samples/comparison/src/main/java/com/facebook/samples/comparison/configs/ConfigConstants.java
@@ -18,5 +18,5 @@
   private static final int MAX_HEAP_SIZE = (int) Runtime.getRuntime().maxMemory();
 
   public static final int MAX_DISK_CACHE_SIZE = 40 * ByteConstants.MB;
-  public static final int MAX_MEMORY_CACHE_SIZE = MAX_HEAP_SIZE / 4;
+  public static final int MAX_MEMORY_CACHE_SIZE = MAX_HEAP_SIZE / 7;//默认1/4 改为 1/7
 }
