diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
deleted file mode 100644
index 2950ed79d..000000000
--- a/.idea/codeStyleSettings.xml
+++ /dev/null
@@ -1,307 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectCodeStyleSettingsManager">
-    <option name="PER_PROJECT_SETTINGS">
-      <value>
-        <option name="OTHER_INDENT_OPTIONS">
-          <value>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-            <option name="USE_TAB_CHARACTER" value="false" />
-            <option name="SMART_TABS" value="false" />
-            <option name="LABEL_INDENT_SIZE" value="0" />
-            <option name="LABEL_INDENT_ABSOLUTE" value="false" />
-            <option name="USE_RELATIVE_INDENTS" value="false" />
-          </value>
-        </option>
-        <option name="FIELD_NAME_PREFIX" value="m" />
-        <option name="STATIC_FIELD_NAME_PREFIX" value="s" />
-        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10000" />
-        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="10000" />
-        <option name="IMPORT_LAYOUT_TABLE">
-          <value>
-            <package name="javax" withSubpackages="true" static="false" />
-            <emptyLine />
-            <package name="java" withSubpackages="true" static="false" />
-            <emptyLine />
-            <package name="android" withSubpackages="true" static="false" />
-            <emptyLine />
-            <package name="com.facebook" withSubpackages="true" static="false" />
-            <emptyLine />
-            <package name="" withSubpackages="true" static="false" />
-            <emptyLine />
-            <package name="" withSubpackages="true" static="true" />
-          </value>
-        </option>
-        <option name="RIGHT_MARGIN" value="100" />
-        <option name="JD_ALIGN_PARAM_COMMENTS" value="false" />
-        <option name="JD_ALIGN_EXCEPTION_COMMENTS" value="false" />
-        <option name="JD_P_AT_EMPTY_LINES" value="false" />
-        <option name="FORMATTER_TAGS_ENABLED" value="true" />
-        <option name="WRAP_COMMENTS" value="true" />
-        <AndroidXmlCodeStyleSettings>
-          <option name="USE_CUSTOM_SETTINGS" value="true" />
-          <option name="LAYOUT_SETTINGS">
-            <value>
-              <option name="INSERT_LINE_BREAK_AFTER_LAST_ATTRIBUTE" value="true" />
-            </value>
-          </option>
-          <option name="VALUE_RESOURCE_FILE_SETTINGS">
-            <value>
-              <option name="WRAP_ATTRIBUTES" value="2" />
-            </value>
-          </option>
-        </AndroidXmlCodeStyleSettings>
-        <MarkdownNavigatorCodeStyleSettings>
-          <option name="RIGHT_MARGIN" value="72" />
-        </MarkdownNavigatorCodeStyleSettings>
-        <Objective-C-extensions>
-          <option name="GENERATE_INSTANCE_VARIABLES_FOR_PROPERTIES" value="ASK" />
-          <option name="RELEASE_STYLE" value="IVAR" />
-          <option name="TYPE_QUALIFIERS_PLACEMENT" value="BEFORE" />
-          <file>
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
-          </file>
-          <class>
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
-            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
-          </class>
-          <extensions>
-            <pair source="cpp" header="h" />
-            <pair source="c" header="h" />
-          </extensions>
-        </Objective-C-extensions>
-        <XML>
-          <option name="XML_TEXT_WRAP" value="0" />
-          <option name="XML_KEEP_BLANK_LINES" value="1" />
-          <option name="XML_ALIGN_ATTRIBUTES" value="false" />
-          <option name="XML_SPACE_INSIDE_EMPTY_TAG" value="true" />
-          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
-        </XML>
-        <codeStyleSettings language="JAVA">
-          <option name="KEEP_BLANK_LINES_IN_DECLARATIONS" value="1" />
-          <option name="KEEP_BLANK_LINES_IN_CODE" value="1" />
-          <option name="KEEP_BLANK_LINES_BEFORE_RBRACE" value="1" />
-          <option name="BLANK_LINES_AFTER_CLASS_HEADER" value="1" />
-          <option name="ALIGN_MULTILINE_PARAMETERS" value="false" />
-          <option name="CALL_PARAMETERS_WRAP" value="5" />
-          <option name="CALL_PARAMETERS_LPAREN_ON_NEXT_LINE" value="true" />
-          <option name="METHOD_PARAMETERS_WRAP" value="5" />
-          <option name="METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE" value="true" />
-          <option name="RESOURCE_LIST_WRAP" value="5" />
-          <option name="RESOURCE_LIST_LPAREN_ON_NEXT_LINE" value="true" />
-          <option name="EXTENDS_LIST_WRAP" value="1" />
-          <option name="THROWS_LIST_WRAP" value="1" />
-          <option name="EXTENDS_KEYWORD_WRAP" value="1" />
-          <option name="THROWS_KEYWORD_WRAP" value="1" />
-          <option name="METHOD_CALL_CHAIN_WRAP" value="1" />
-          <option name="BINARY_OPERATION_WRAP" value="1" />
-          <option name="TERNARY_OPERATION_WRAP" value="1" />
-          <option name="FOR_STATEMENT_WRAP" value="5" />
-          <option name="FOR_STATEMENT_LPAREN_ON_NEXT_LINE" value="true" />
-          <option name="ARRAY_INITIALIZER_WRAP" value="1" />
-          <option name="ASSIGNMENT_WRAP" value="1" />
-          <option name="ASSERT_STATEMENT_WRAP" value="1" />
-          <option name="FIELD_ANNOTATION_WRAP" value="1" />
-          <option name="PARAMETER_ANNOTATION_WRAP" value="1" />
-          <option name="VARIABLE_ANNOTATION_WRAP" value="1" />
-          <option name="ENUM_CONSTANTS_WRAP" value="1" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="JavaScript">
-          <option name="WRAP_COMMENTS" value="true" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-        </codeStyleSettings>
-        <codeStyleSettings language="Python">
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-        </codeStyleSettings>
-        <codeStyleSettings language="TypeScript">
-          <option name="WRAP_COMMENTS" value="true" />
-          <option name="PARENT_SETTINGS_INSTALLED" value="true" />
-        </codeStyleSettings>
-        <codeStyleSettings language="XML">
-          <option name="FORCE_REARRANGE_MODE" value="1" />
-          <indentOptions>
-            <option name="INDENT_SIZE" value="2" />
-            <option name="CONTINUATION_INDENT_SIZE" value="4" />
-            <option name="TAB_SIZE" value="2" />
-          </indentOptions>
-          <arrangement>
-            <rules>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:android</NAME>
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>xmlns:.*</NAME>
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:id</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:name</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>name</NAME>
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>style</NAME>
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>^$</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_width</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_height</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:layout_.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:width</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*:height</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-              <section>
-                <rule>
-                  <match>
-                    <AND>
-                      <NAME>.*</NAME>
-                      <XML_NAMESPACE>.*</XML_NAMESPACE>
-                    </AND>
-                  </match>
-                  <order>BY_NAME</order>
-                </rule>
-              </section>
-            </rules>
-          </arrangement>
-        </codeStyleSettings>
-      </value>
-    </option>
-    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
-    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
-  </component>
-</project>
diff --git a/samples/demo/build.gradle b/samples/demo/build.gradle
index b62c9285f..3d9226c4b 100644
--- a/samples/demo/build.gradle
+++ b/samples/demo/build.gradle
@@ -30,9 +30,14 @@ android {
 
     buildTypes {
         release {
+            debuggable true
             minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../../proguard-fresco.pro'
         }
+
+//        debug {
+//            debuggable true
+//        }
     }
 
     lintOptions {
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/DemoApplication.java b/samples/demo/src/main/java/com/facebook/samples/demo/DemoApplication.java
index 674778f15..83ae10c49 100644
--- a/samples/demo/src/main/java/com/facebook/samples/demo/DemoApplication.java
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/DemoApplication.java
@@ -11,8 +11,6 @@
  */
 package com.facebook.samples.demo;
 
-import android.app.Application;
-
 import com.facebook.common.logging.FLog;
 import com.facebook.drawee.backends.pipeline.DraweeConfig;
 import com.facebook.drawee.backends.pipeline.Fresco;
@@ -20,6 +18,8 @@
 import com.facebook.imagepipeline.listener.RequestListener;
 import com.facebook.imagepipeline.listener.RequestLoggingListener;
 
+import android.app.Application;
+
 import java.util.HashSet;
 import java.util.Set;
 
@@ -35,11 +35,12 @@ public void onCreate() {
         Set<RequestListener> listeners = new HashSet<>();
         listeners.add(new RequestLoggingListener());
         ImagePipelineConfig config = ImagePipelineConfig.newBuilder(this)
+//                .setImageDecoderConfig(KpgCustomImageFormatConfigurator.createImageDecoderConfig(this))   // use this syntax to add kpg capability
                 .setRequestListeners(listeners)
                 .build();
         DraweeConfig draweeConfig = DraweeConfig.newBuilder()
-            .setDrawDebugOverlay(DebugOverlayHelper.isDebugOverlayEnabled(this))
-            .build();
+                .setDrawDebugOverlay(DebugOverlayHelper.isDebugOverlayEnabled(this))
+                .build();
         Fresco.initialize(this, config, draweeConfig);
     }
 }
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/ImageActivity.java b/samples/demo/src/main/java/com/facebook/samples/demo/ImageActivity.java
index 00cfcba1d..4a5bf1607 100644
--- a/samples/demo/src/main/java/com/facebook/samples/demo/ImageActivity.java
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/ImageActivity.java
@@ -4,6 +4,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Environment;
+import android.util.Log;
 import android.widget.ListView;
 
 import java.io.File;
@@ -23,6 +24,11 @@ protected void onCreate(Bundle savedInstanceState) {
             Uri uri = Uri.fromFile(file);
             datas.add(uri.toString());
         }
+        Log.d("external", Environment.getExternalStorageDirectory().getPath() + "/kpgtest/");
+
+        File file = new File(Environment.getExternalStorageDirectory().getPath() + "/watermark.png");
+        boolean ex = file.exists();
+        datas.add(Uri.fromFile(file).toString());
 
 
         ListView listViewleft = (ListView) this.findViewById(R.id.list_left);
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgCustomImageFormatConfigurator.java b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgCustomImageFormatConfigurator.java
new file mode 100644
index 000000000..722c462c2
--- /dev/null
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgCustomImageFormatConfigurator.java
@@ -0,0 +1,24 @@
+package com.facebook.samples.demo.kpg;
+
+import com.facebook.imagepipeline.decoder.ImageDecoderConfig;
+
+import android.content.Context;
+import android.support.annotation.Nullable;
+
+/**
+ * 参考fresco demo showcase:CustomImageFormatConfigurator.java
+ * Created by shuailongcheng on 22/05/2017.
+ */
+
+public class KpgCustomImageFormatConfigurator {
+
+    @Nullable
+    public static ImageDecoderConfig createImageDecoderConfig(Context context) {
+        ImageDecoderConfig.Builder config = ImageDecoderConfig.newBuilder();
+        config.addDecodingCapability(
+                KpgImageFormat.KPG,
+                new KpgImageFormatChecker(),
+                new KpgImageDecoder());
+        return config.build();
+    }
+}
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageDecoder.java b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageDecoder.java
new file mode 100644
index 000000000..0ebe8acf1
--- /dev/null
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageDecoder.java
@@ -0,0 +1,60 @@
+package com.facebook.samples.demo.kpg;
+
+import com.facebook.imagepipeline.common.ImageDecodeOptions;
+import com.facebook.imagepipeline.decoder.ImageDecoder;
+import com.facebook.imagepipeline.image.CloseableImage;
+import com.facebook.imagepipeline.image.CloseableStaticBitmap;
+import com.facebook.imagepipeline.image.EncodedImage;
+import com.facebook.imagepipeline.image.QualityInfo;
+import com.facebook.imageutils.KpgUtil;
+
+import android.util.Pair;
+
+/**
+ * Created by shuailongcheng on 22/05/2017.
+ */
+
+public class KpgImageDecoder implements ImageDecoder {
+
+    @Override
+    public CloseableImage decode(EncodedImage encodedImage, int length, QualityInfo qualityInfo,
+            ImageDecodeOptions options) {
+        parseMetadata(encodedImage);
+        return decodeKpgStaticImage(encodedImage, options);
+    }
+
+
+    public CloseableStaticBitmap decodeKpgStaticImage(
+            final EncodedImage encodedImage,
+            ImageDecodeOptions options) {
+        // TODO: 22/05/2017 puth mPlatformDecoder related implemention here
+//        CloseableReference<Bitmap> bitmapReference =
+//                mPlatformDecoder.decodeKpgFromEncodedImage(encodedImage, options.bitmapConfig);
+//        try {
+//            return new CloseableStaticBitmap(
+//                    bitmapReference,
+//                    ImmutableQualityInfo.FULL_QUALITY,
+//                    encodedImage.getRotationAngle());
+//        } finally {
+//            bitmapReference.close();
+//        }
+        return null;
+    }
+
+    private static void parseMetadata(EncodedImage encodedImage) {
+        readKpgImageSize(encodedImage);
+    }
+
+    private static Pair<Integer, Integer> readKpgImageSize(EncodedImage encodedImage) {
+        if (encodedImage == null) {
+            return null;
+        }
+        final Pair<Integer, Integer> dimensions = KpgUtil.getSize(encodedImage.getInputStream());
+        if (dimensions != null) {
+            encodedImage.setWidth(dimensions.first);
+            encodedImage.setHeight(dimensions.second);
+        }
+        return dimensions;
+    }
+
+}
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormat.java b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormat.java
new file mode 100644
index 000000000..b97c6c017
--- /dev/null
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormat.java
@@ -0,0 +1,16 @@
+package com.facebook.samples.demo.kpg;
+
+import com.facebook.imageformat.ImageFormat;
+
+/**
+ * Created by shuailongcheng on 22/05/2017.
+ */
+
+public final class KpgImageFormat {
+    public static final ImageFormat KPG = new ImageFormat("KPG", "kpg");
+
+    public static boolean isKpgFormat(ImageFormat imageFormat) {
+        return imageFormat == KPG;
+    }
+}
+
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormatChecker.java b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormatChecker.java
new file mode 100644
index 000000000..faf13b1a2
--- /dev/null
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgImageFormatChecker.java
@@ -0,0 +1,68 @@
+package com.facebook.samples.demo.kpg;
+
+import com.facebook.imageformat.ImageFormat;
+
+import android.support.annotation.Nullable;
+
+import static com.facebook.imageformat.ImageFormatCheckerUtils.asciiBytes;
+
+/**
+ * Created by shuailongcheng on 22/05/2017.
+ */
+
+public class KpgImageFormatChecker implements ImageFormat.FormatChecker {
+
+    /**
+     * KPG Start Code Determine
+     */
+    private static final int KPG_HEADER_LENGTH = 12;
+
+    private static boolean matchBytePattern(
+            final byte[] byteArray,
+            final int offset,
+            final byte[] pattern) {
+        if (pattern == null || byteArray == null) {
+            return false;
+        }
+        if (pattern.length + offset > byteArray.length) {
+            return false;
+        }
+
+        for (int i = 0; i < pattern.length; ++i) {
+            if (byteArray[i + offset] != pattern[i]) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    /**
+     * Checks if first headerSize bytes of imageHeaderBytes constitute a valid header for a KPG
+     * image.
+     * Details on KPG header can be found <a href="http://wiki.corp.kuaishou.com/pages/viewpage.action?pageId=13357265">
+     * </a>
+     *
+     * @return true if imageHeaderBytes is a valid header for a kpg image
+     */
+    private static boolean isKpgHeader(final byte[] imageHeaderBytes, final int headerSize) {
+        return headerSize >= KPG_HEADER_LENGTH &&
+                matchBytePattern(imageHeaderBytes, 0, asciiBytes("RIFF")) &&
+                matchBytePattern(imageHeaderBytes, 8, asciiBytes("KPGB"));
+    }
+
+    @Override
+    public int getHeaderSize() {
+        return KPG_HEADER_LENGTH;
+    }
+
+    @Nullable
+    @Override
+    public ImageFormat determineFormat(byte[] headerBytes, int headerSize) {
+        if (isKpgHeader(headerBytes, headerSize)) {
+            return KpgImageFormat.KPG;
+        } else {
+            return null;
+        }
+    }
+}
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgUtil.java b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgUtil.java
new file mode 100644
index 000000000..63fecc560
--- /dev/null
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/kpg/KpgUtil.java
@@ -0,0 +1,234 @@
+package com.facebook.samples.demo.kpg;
+
+import com.facebook.imagepipeline.image.EncodedImage;
+
+import android.annotation.TargetApi;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Rect;
+import android.os.Build;
+import android.util.Pair;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+
+import javax.annotation.Nullable;
+
+/**
+ * Created by fengweilun on 02/05/2017.
+ */
+// TODO: 22/05/2017 use this kpgutil ,rename related native jni methods
+public class KpgUtil
+{
+    static{
+        System.loadLibrary("avutil");
+        System.loadLibrary("avcodec");
+        System.loadLibrary("swresample");
+        System.loadLibrary("swscale");
+        System.loadLibrary("kpg");
+    }
+
+    private native static int[] nativedecode(byte[] bs, int len, int pic_width, int pic_height);
+
+    @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+    public static Bitmap decodeStream(InputStream is, Rect outPadding, BitmapFactory.Options opts, int filesize)
+    {
+        Bitmap bitmap;
+        try {
+            byte[] stream = new byte[filesize];
+            is.read(stream);
+            int[] argb = nativedecode(stream, filesize, opts.outWidth, opts.outHeight);
+            bitmap = opts.inBitmap;
+            bitmap.setHeight(opts.outHeight);
+            bitmap.setWidth(opts.outWidth);
+            bitmap.setPixels(argb, 0, opts.outWidth, 0, 0, opts.outWidth, opts.outHeight);
+        }catch(IOException io)
+        {
+            return null;
+        }
+        return bitmap;
+    }
+
+    public static BitmapFactory.Options getOptions(
+            EncodedImage encodedImage,
+            Bitmap.Config bitmapConfig,
+            int[] filesize)
+    {
+        final BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inSampleSize = encodedImage.getSampleSize();
+        ArrayList<Integer> arr = getSizeandDim(encodedImage.getInputStream());
+        filesize[0] = arr.get(0);
+        options.outWidth = arr.get(1);
+        options.outHeight = arr.get(2);
+        if (options.outWidth == -1 || options.outHeight == -1) {
+            throw new IllegalArgumentException();
+        }
+        options.inPreferredConfig = bitmapConfig;
+        return options;
+    }
+
+
+    @Nullable
+    public static ArrayList<Integer> getSizeandDim(InputStream is)
+    {
+        Pair<Integer, Integer> result = null;
+        byte[] headerBuffer = new byte[4];
+        try {
+            //MUST be RIFF
+            is.read(headerBuffer);
+            if(!compare(headerBuffer, "RIFF"))
+                return null;
+
+            //File Size
+            int filesize = getInt(is);
+
+            // Next the KPGB header
+            is.read(headerBuffer);
+            if (!compare(headerBuffer, "KPGB")) {
+                return null;
+            }
+
+            // Next the KWVC header
+            is.read(headerBuffer);
+            if (!compare(headerBuffer, "KWVC")) {
+                return null;
+            }
+
+            //Chunk Size
+            getInt(is);
+
+            //width, height
+            int width = getInt(is);
+            int height = getInt(is);
+
+            ArrayList<Integer> ret = new ArrayList<Integer>();
+            ret.add(filesize);
+            ret.add(width);
+            ret.add(height);
+            return ret;
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            if (is != null) {
+                try {
+                    is.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        return null;
+    }
+
+
+
+    @Nullable
+    public static Pair<Integer, Integer> getSize(InputStream is)
+    {
+        Pair<Integer, Integer> result = null;
+        byte[] headerBuffer = new byte[4];
+        try {
+            //MUST be RIFF
+            is.read(headerBuffer);
+            if(!compare(headerBuffer, "RIFF"))
+                return null;
+
+            //File Size
+            getInt(is);
+
+            // Next the KPGB header
+            is.read(headerBuffer);
+            if (!compare(headerBuffer, "KPGB")) {
+                return null;
+            }
+
+            // Next the KWVC header
+            is.read(headerBuffer);
+            if (!compare(headerBuffer, "KWVC")) {
+                return null;
+            }
+
+            //Chunk Size
+            getInt(is);
+
+            //width, height
+            return new Pair<>(getInt(is),  getInt(is));
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            if (is != null) {
+                try {
+                    is.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+        return null;
+    }
+    /**
+     * Compares some bytes with the text we're expecting
+     *
+     * @param what The bytes to compare
+     * @param with The string those bytes should contains
+     * @return True if they match and false otherwise
+     */
+    private static boolean compare(byte[] what, String with) {
+        if (what.length != with.length()) {
+            return false;
+        }
+        for (int i = 0; i < what.length; i++) {
+            if (with.charAt(i) != what[i]) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private static String getHeader(byte[] header) {
+        StringBuilder str = new StringBuilder();
+        for (int i = 0; i < header.length; i++) {
+            str.append((char) header[i]);
+        }
+        return str.toString();
+    }
+
+    private static int getInt(InputStream is) throws IOException {
+        byte byte1 = (byte) is.read();
+        byte byte2 = (byte) is.read();
+        byte byte3 = (byte) is.read();
+        byte byte4 = (byte) is.read();
+        return (byte4 << 24) & 0xFF000000 |
+                (byte3 << 16) & 0xFF0000 |
+                (byte2 << 8) & 0xFF00 |
+                (byte1) & 0xFF;
+    }
+
+    public static int get2BytesAsInt(InputStream is) throws IOException {
+        byte byte1 = (byte) is.read();
+        byte byte2 = (byte) is.read();
+        return (byte2 << 8 & 0xFF00) | (byte1 & 0xFF);
+    }
+
+    private static int read3Bytes(InputStream is) throws IOException {
+        byte byte1 = getByte(is);
+        byte byte2 = getByte(is);
+        byte byte3 = getByte(is);
+        return (((int) byte3) << 16 & 0xFF0000) |
+                (((int) byte2) << 8 & 0xFF00) |
+                (((int) byte1) & 0xFF);
+    }
+
+    private static short getShort(InputStream is) throws IOException {
+        return (short) (is.read() & 0xFF);
+    }
+
+    private static byte getByte(InputStream is) throws IOException {
+        return (byte) (is.read() & 0xFF);
+    }
+
+    private static boolean isBitOne(byte input, int bitIndex) {
+        return ((input >> (bitIndex % 8)) & 1) == 1;
+    }
+}
