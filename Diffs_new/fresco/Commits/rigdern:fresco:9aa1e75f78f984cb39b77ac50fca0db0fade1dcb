diff --git a/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java b/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
index 845ab5e58..59d79c827 100644
--- a/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
+++ b/imagepipeline-backends/imagepipeline-okhttp3/src/main/java/com/facebook/imagepipeline/backends/okhttp3/OkHttpNetworkFetcher.java
@@ -73,15 +73,8 @@ public OkHttpNetworkFetchState createFetchState(
     return new OkHttpNetworkFetchState(consumer, context);
   }
 
-  @Override
-  public void fetch(final OkHttpNetworkFetchState fetchState, final Callback callback) {
-    fetchState.submitTime = SystemClock.elapsedRealtime();
-    final Uri uri = fetchState.getUri();
-    final Request request = new Request.Builder()
-        .cacheControl(new CacheControl.Builder().noStore().build())
-        .url(uri.toString())
-        .get()
-        .build();
+  protected void fetchWithRequest(final OkHttpNetworkFetchState fetchState, final Callback callback,
+      final Request request) {
     final Call call = mOkHttpClient.newCall(request);
 
     fetchState.getContext().addCallbacks(
@@ -109,9 +102,9 @@ public void onResponse(Call call, Response response) throws IOException {
             try {
               if (!response.isSuccessful()) {
                 handleException(
-                        call,
-                        new IOException("Unexpected HTTP code " + response),
-                        callback);
+                    call,
+                    new IOException("Unexpected HTTP code " + response),
+                    callback);
                 return;
               }
 
@@ -138,6 +131,18 @@ public void onFailure(Call call, IOException e) {
         });
   }
 
+  @Override
+  public void fetch(final OkHttpNetworkFetchState fetchState, final Callback callback) {
+    fetchState.submitTime = SystemClock.elapsedRealtime();
+    final Uri uri = fetchState.getUri();
+    final Request request = new Request.Builder()
+        .cacheControl(new CacheControl.Builder().noStore().build())
+        .url(uri.toString())
+        .get()
+        .build();
+    fetchWithRequest(fetchState, callback, request);
+  }
+
   @Override
   public void onFetchCompletion(OkHttpNetworkFetchState fetchState, int byteSize) {
     fetchState.fetchCompleteTime = SystemClock.elapsedRealtime();
