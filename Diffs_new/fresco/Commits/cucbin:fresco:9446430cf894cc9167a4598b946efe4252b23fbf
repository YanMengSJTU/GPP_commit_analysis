diff --git a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
index 6616a5812..4a3f74cb8 100644
--- a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
+++ b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
@@ -193,14 +193,27 @@ public synchronized void removeRequestListener(RequestListener requestListener)
     mRequestListeners.remove(requestListener);
   }
 
-  public void addImageOriginListener(@Nullable ImageOriginListener imageOriginListener) {
-    synchronized (this) {
-      if (mImageOriginListener != null) {
-        mImageOriginListener =
-            new ForwardingImageOriginListener(mImageOriginListener, imageOriginListener);
-      } else {
-        mImageOriginListener = imageOriginListener;
-      }
+  public synchronized void addImageOriginListener(ImageOriginListener imageOriginListener) {
+    if (mImageOriginListener instanceof ForwardingImageOriginListener) {
+      ((ForwardingImageOriginListener) mImageOriginListener)
+          .addImageOriginListener(imageOriginListener);
+    } else if (mImageOriginListener != null) {
+      mImageOriginListener =
+          new ForwardingImageOriginListener(mImageOriginListener, imageOriginListener);
+    } else {
+      mImageOriginListener = imageOriginListener;
+    }
+  }
+
+  public synchronized void removeImageOriginListener(ImageOriginListener imageOriginListener) {
+    if (mImageOriginListener instanceof ForwardingImageOriginListener) {
+      ((ForwardingImageOriginListener) mImageOriginListener)
+          .removeImageOriginListener(imageOriginListener);
+    } else if (mImageOriginListener != null) {
+      mImageOriginListener =
+          new ForwardingImageOriginListener(mImageOriginListener, imageOriginListener);
+    } else {
+      mImageOriginListener = imageOriginListener;
     }
   }
 
diff --git a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
index b0c807bba..e3fd5bdbf 100644
--- a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
+++ b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/info/ForwardingImageOriginListener.java
@@ -8,6 +8,7 @@
 
 import com.facebook.common.logging.FLog;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import java.util.Set;
 
@@ -17,26 +18,25 @@
 
   private final List<ImageOriginListener> mImageOriginListeners;
 
-  public ForwardingImageOriginListener(Set<ImageOriginListener> requestListeners) {
-    mImageOriginListeners = new ArrayList<>(requestListeners.size());
-    for (ImageOriginListener requestListener : requestListeners) {
-      if (requestListener != null) {
-        mImageOriginListeners.add(requestListener);
-      }
-    }
+  public ForwardingImageOriginListener(Set<ImageOriginListener> imageOriginListeners) {
+    mImageOriginListeners = new ArrayList<>(imageOriginListeners);
   }
 
-  public ForwardingImageOriginListener(ImageOriginListener... requestListeners) {
-    mImageOriginListeners = new ArrayList<>(requestListeners.length);
-    for (ImageOriginListener requestListener : requestListeners) {
-      if (requestListener != null) {
-        mImageOriginListeners.add(requestListener);
-      }
-    }
+  public ForwardingImageOriginListener(ImageOriginListener... imageOriginListeners) {
+    mImageOriginListeners = new ArrayList<>(imageOriginListeners.length);
+    Collections.addAll(mImageOriginListeners, imageOriginListeners);
+  }
+
+  public synchronized void addImageOriginListener(ImageOriginListener listener) {
+    mImageOriginListeners.add(listener);
+  }
+
+  public synchronized void removeImageOriginListener(ImageOriginListener listener) {
+    mImageOriginListeners.remove(listener);
   }
 
   @Override
-  public void onImageLoaded(String controllerId, int imageOrigin, boolean successful) {
+  public synchronized void onImageLoaded(String controllerId, int imageOrigin, boolean successful) {
     final int numberOfListeners = mImageOriginListeners.size();
     for (int i = 0; i < numberOfListeners; i++) {
       ImageOriginListener listener = mImageOriginListeners.get(i);
