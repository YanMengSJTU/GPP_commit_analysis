diff --git a/samples/audioapp/.gitignore b/samples/audioapp/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/samples/audioapp/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/samples/audioapp/build.gradle b/samples/audioapp/build.gradle
new file mode 100644
index 000000000..e7ecc15df
--- /dev/null
+++ b/samples/audioapp/build.gradle
@@ -0,0 +1,56 @@
+apply plugin: 'com.android.application'
+
+android {
+    buildToolsVersion rootProject.ext.buildToolsVersion
+    compileSdkVersion rootProject.ext.compileSdkVersion
+
+    defaultConfig {
+        applicationId "com.facebook.samples.audioapp"
+        minSdkVersion rootProject.ext.samplesMinSdkVersion
+        targetSdkVersion rootProject.ext.targetSdkVersion
+        versionCode 1
+        versionName "${VERSION_NAME}"
+
+        testApplicationId "com.facebook.samples.audioapp.test"
+        testInstrumentationRunner "android.test.InstrumentationTestRunner"
+    }
+
+    flavorDimensions "main"
+
+    productFlavors {
+        internal
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
+        }
+    }
+
+    lintOptions {
+        warning 'InvalidPackage'
+        abortOnError false
+    }
+
+    splits {
+        abi {
+            enable true
+            reset()
+            include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a', 'armeabi'
+            universalApk false
+        }
+    }
+}
+
+configurations {
+    internalCompile
+}
+
+dependencies {
+    compileOnly "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
+    implementation "com.android.support:support-core-ui:${SUPPORT_LIB_VERSION}"
+    implementation "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
+
+    internalImplementation project(':drawee-backends:drawee-pipeline')
+}
diff --git a/samples/audioapp/src/main/AndroidManifest.xml b/samples/audioapp/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..cf64f1ae6
--- /dev/null
+++ b/samples/audioapp/src/main/AndroidManifest.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+  package="com.facebook.samples.audioapp">
+
+  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+
+  <uses-sdk
+    android:minSdkVersion="14"
+    android:targetSdkVersion="21" />
+
+  <application
+    android:name=".AudioApplication"
+    android:allowBackup="true"
+    android:icon="@mipmap/ic_launcher"
+    android:label="@string/app_name">
+    <activity
+      android:name=".MainActivity"
+      android:label="@string/app_name">
+      <intent-filter>
+        <action android:name="android.intent.action.MAIN" />
+        <category android:name="android.intent.category.LAUNCHER" />
+      </intent-filter>
+    </activity>
+  </application>
+
+</manifest>
diff --git a/samples/audioapp/src/main/java/com/facebook/samples/audioapp/AudioApplication.java b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/AudioApplication.java
new file mode 100644
index 000000000..797850be2
--- /dev/null
+++ b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/AudioApplication.java
@@ -0,0 +1,38 @@
+/*
+ * This file provided by Facebook is for non-commercial testing and evaluation
+ * purposes only. Facebook reserves all rights not expressly granted.
+ *
+ * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) 2018-present, Pablo Delgado Kraemer
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+package com.facebook.samples.audioapp;
+
+import android.app.Application;
+
+import com.facebook.common.logging.FLog;
+import com.facebook.drawee.backends.pipeline.Fresco;
+import com.facebook.imagepipeline.core.ImagePipelineConfig;
+import com.facebook.imagepipeline.listener.RequestListener;
+import com.facebook.imagepipeline.listener.RequestLoggingListener;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Audio Application implementation where we set up Fresco.
+ */
+public class AudioApplication extends Application {
+  @Override
+  public void onCreate() {
+    super.onCreate();
+    FLog.setMinimumLoggingLevel(FLog.VERBOSE);
+    Set<RequestListener> listeners = new HashSet<>();
+    listeners.add(new RequestLoggingListener());
+    ImagePipelineConfig config = ImagePipelineConfig.newBuilder(this)
+      .setRequestListeners(listeners).build();
+    Fresco.initialize(this, config);
+  }
+}
diff --git a/samples/audioapp/src/main/java/com/facebook/samples/audioapp/DraweeRecyclerViewAdapter.java b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/DraweeRecyclerViewAdapter.java
new file mode 100644
index 000000000..f638c3426
--- /dev/null
+++ b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/DraweeRecyclerViewAdapter.java
@@ -0,0 +1,95 @@
+/*
+ * This file provided by Facebook is for non-commercial testing and evaluation
+ * purposes only. Facebook reserves all rights not expressly granted.
+ *
+ * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) 2018-present, Pablo Delgado Kraemer
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+package com.facebook.samples.audioapp;
+
+import android.content.Context;
+import android.database.Cursor;
+import android.graphics.drawable.Drawable;
+import android.provider.MediaStore;
+import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+
+import com.facebook.drawee.backends.pipeline.Fresco;
+import com.facebook.drawee.generic.GenericDraweeHierarchy;
+import com.facebook.drawee.interfaces.DraweeController;
+import com.facebook.drawee.view.SimpleDraweeView;
+
+public class DraweeRecyclerViewAdapter extends
+  RecyclerView.Adapter<DraweeRecyclerViewAdapter.DraweeViewHolder> {
+
+  private static final String LOCAL_FILE_URI_PREFIX = "file://";
+
+  public static class DraweeViewHolder extends RecyclerView.ViewHolder {
+    public SimpleDraweeView mDraweeView;
+
+    public DraweeViewHolder(SquareRelativeLayout layout) {
+      super(layout);
+      mDraweeView = layout.findViewById(R.id.drawee);
+    }
+  }
+
+  private String[] mAudioIds;
+
+  public DraweeRecyclerViewAdapter(Context context) {
+    final String sqlSelection = MediaStore.Audio.Media.IS_MUSIC + " != 0";
+    final String[] sqlProjection = {MediaStore.Audio.Media.DATA};
+    final String sqlSortString = "RANDOM()";
+
+    Cursor cursor = context.getContentResolver().query(MediaStore.Audio.Media
+      .EXTERNAL_CONTENT_URI, sqlProjection, sqlSelection, null, sqlSortString);
+    if (cursor == null) {
+      mAudioIds = new String[0];
+    } else {
+      if (!cursor.moveToFirst()) {
+        mAudioIds = new String[0];
+      } else {
+        mAudioIds = new String[cursor.getCount()];
+        int i = 0;
+        do {
+          mAudioIds[i] = cursor.getString(0);
+          i++;
+        } while (cursor.moveToNext());
+      }
+      cursor.close();
+    }
+  }
+
+  @NonNull
+  @Override
+  public DraweeViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+    SquareRelativeLayout layout = (SquareRelativeLayout) LayoutInflater.from(parent.getContext())
+      .inflate(R.layout.recyclerview_item, parent, false);
+    DraweeViewHolder viewHolder = new DraweeViewHolder(layout);
+    return viewHolder;
+  }
+
+  @Override
+  public void onBindViewHolder(@NonNull DraweeViewHolder holder, int position) {
+    Context context = holder.mDraweeView.getContext();
+    final Drawable placeholder = ContextCompat.getDrawable(context,
+      R.drawable.ic_loading_failed_24px);
+    final String audioPath = LOCAL_FILE_URI_PREFIX + mAudioIds[position];
+    DraweeController controller = Fresco.newDraweeControllerBuilder()
+      .setUri(audioPath)
+      .setCallerContext("AudioApp-DraweeRecyclerViewAdapter").build();
+    holder.mDraweeView.setController(controller);
+    GenericDraweeHierarchy hierarchy = holder.mDraweeView.getHierarchy();
+    hierarchy.setFailureImage(placeholder);
+  }
+
+  @Override
+  public int getItemCount() {
+    return mAudioIds.length;
+  }
+}
diff --git a/samples/audioapp/src/main/java/com/facebook/samples/audioapp/MainActivity.java b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/MainActivity.java
new file mode 100644
index 000000000..f4373000e
--- /dev/null
+++ b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/MainActivity.java
@@ -0,0 +1,70 @@
+/*
+ * This file provided by Facebook is for non-commercial testing and evaluation
+ * purposes only. Facebook reserves all rights not expressly granted.
+ *
+ * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) 2018-present, Pablo Delgado Kraemer
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+package com.facebook.samples.audioapp;
+
+import android.Manifest;
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+
+public class MainActivity extends Activity {
+
+  private static final int PERMISSION_RESULT_READ_EXTERNAL_STORAGE = 1;
+  private static final int COLUMN_COUNT = 3;
+
+  private DraweeRecyclerViewAdapter mAdapter;
+
+  @Override
+  protected void onCreate(Bundle savedInstanceState) {
+    super.onCreate(savedInstanceState);
+    setContentView(R.layout.activity_main);
+
+    // Reading audio files requires the READ_EXTERNAL_STORAGE permission.
+    if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)
+        != PackageManager.PERMISSION_GRANTED) {
+      ActivityCompat.requestPermissions(this,
+        new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},
+        PERMISSION_RESULT_READ_EXTERNAL_STORAGE);
+    } else {
+      setupViews();
+    }
+  }
+
+  @Override
+  public void onRequestPermissionsResult(int requestCode, @NonNull String permissions[],
+      @NonNull int[] grantResults) {
+    switch (requestCode) {
+      case PERMISSION_RESULT_READ_EXTERNAL_STORAGE: {
+        if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+          setupViews();
+        } else {
+          finish();
+        }
+      }
+    }
+  }
+
+  private void setupViews() {
+    Context context = getApplicationContext();
+    RecyclerView recyclerView = findViewById(R.id.recycler);
+    RecyclerView.LayoutManager layoutManager = new GridLayoutManager(this, COLUMN_COUNT);
+
+    mAdapter = new DraweeRecyclerViewAdapter(context);
+    recyclerView.setLayoutManager(layoutManager);
+    recyclerView.setAdapter(mAdapter);
+  }
+}
diff --git a/samples/audioapp/src/main/java/com/facebook/samples/audioapp/SquareRelativeLayout.java b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/SquareRelativeLayout.java
new file mode 100644
index 000000000..cf4158f81
--- /dev/null
+++ b/samples/audioapp/src/main/java/com/facebook/samples/audioapp/SquareRelativeLayout.java
@@ -0,0 +1,43 @@
+/*
+ * This file provided by Facebook is for non-commercial testing and evaluation
+ * purposes only. Facebook reserves all rights not expressly granted.
+ *
+ * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) 2018-present, Pablo Delgado Kraemer
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+package com.facebook.samples.audioapp;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.os.Build;
+import android.util.AttributeSet;
+import android.widget.RelativeLayout;
+
+public class SquareRelativeLayout extends RelativeLayout {
+
+  public SquareRelativeLayout(Context context) {
+    super(context);
+  }
+
+  public SquareRelativeLayout(Context context, AttributeSet attrs) {
+    super(context, attrs);
+  }
+
+  public SquareRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr) {
+    super(context, attrs, defStyleAttr);
+  }
+
+  @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+  public SquareRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr,
+      int defStyleRes) {
+    super(context, attrs, defStyleAttr, defStyleRes);
+  }
+
+  @Override
+  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+    super.onMeasure(widthMeasureSpec, widthMeasureSpec);
+  }
+}
diff --git a/samples/audioapp/src/main/res/drawable/ic_loading_failed_24px.xml b/samples/audioapp/src/main/res/drawable/ic_loading_failed_24px.xml
new file mode 100644
index 000000000..9d346c250
--- /dev/null
+++ b/samples/audioapp/src/main/res/drawable/ic_loading_failed_24px.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  ~ Copyright 2018 Google, Inc.
+  ~
+  ~ Licensed under the Apache License, Version 2.0 (the "License");
+  ~ you may not use this file except in compliance with the License.
+  ~ You may obtain a copy of the License at
+  ~ http://www.apache.org/licenses/LICENSE-2.0
+  ~
+  ~ Unless required by applicable law or agreed to in writing, software
+  ~ distributed under the License is distributed on an "AS IS" BASIS,
+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  ~ See the License for the specific language governing permissions and
+  ~ limitations under the License.
+  -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+  android:viewportWidth="24"
+  android:viewportHeight="24"
+  android:width="24dp"
+  android:height="24dp">
+  <path
+    android:pathData="M12 2C6.48 2 2 6.48 2 12 2 17.52 6.48 22 12 22 17.52 22 22 17.52 22 12 22 6.48 17.52 2 12 2Zm0 18C7.58 20 4 16.42 4 12 4 10.15 4.63 8.45 5.69 7.1L16.9 18.31C15.55 19.37 13.85 20 12 20ZM18.31 16.9L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85 -0.63 3.55 -1.69 4.9z"
+    android:fillColor="#CCCCCC" />
+</vector>
diff --git a/samples/audioapp/src/main/res/layout/activity_main.xml b/samples/audioapp/src/main/res/layout/activity_main.xml
new file mode 100644
index 000000000..640bed862
--- /dev/null
+++ b/samples/audioapp/src/main/res/layout/activity_main.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  android:baselineAligned="false"
+  android:orientation="horizontal"
+  tools:context="com.facebook.samples.audioapp.MainActivity">
+
+  <android.support.v7.widget.RecyclerView
+    android:id="@+id/recycler"
+    android:scrollbars="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"/>
+
+</LinearLayout>
diff --git a/samples/audioapp/src/main/res/layout/recyclerview_item.xml b/samples/audioapp/src/main/res/layout/recyclerview_item.xml
new file mode 100644
index 000000000..2efecf0e5
--- /dev/null
+++ b/samples/audioapp/src/main/res/layout/recyclerview_item.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.facebook.samples.audioapp.SquareRelativeLayout
+  xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:tools="http://schemas.android.com/tools"
+  android:layout_width="match_parent"
+  android:layout_height="match_parent"
+  tools:context="com.facebook.samples.audioapp.MainActivity">
+
+  <com.facebook.drawee.view.SimpleDraweeView
+    android:id="@+id/drawee"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    style="@style/drawee" />
+
+</com.facebook.samples.audioapp.SquareRelativeLayout>
diff --git a/samples/audioapp/src/main/res/mipmap-hdpi/ic_launcher.png b/samples/audioapp/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 000000000..b3fd7c9c0
Binary files /dev/null and b/samples/audioapp/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/samples/audioapp/src/main/res/mipmap-mdpi/ic_launcher.png b/samples/audioapp/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 000000000..f97029d7a
Binary files /dev/null and b/samples/audioapp/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/samples/audioapp/src/main/res/mipmap-xhdpi/ic_launcher.png b/samples/audioapp/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 000000000..69f968ef4
Binary files /dev/null and b/samples/audioapp/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/samples/audioapp/src/main/res/mipmap-xxhdpi/ic_launcher.png b/samples/audioapp/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 000000000..f0f72126f
Binary files /dev/null and b/samples/audioapp/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/samples/audioapp/src/main/res/values/colors.xml b/samples/audioapp/src/main/res/values/colors.xml
new file mode 100644
index 000000000..d45ed666c
--- /dev/null
+++ b/samples/audioapp/src/main/res/values/colors.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <color name="failure">#ffffffff</color>
+</resources>
diff --git a/samples/audioapp/src/main/res/values/strings.xml b/samples/audioapp/src/main/res/values/strings.xml
new file mode 100644
index 000000000..c102d8762
--- /dev/null
+++ b/samples/audioapp/src/main/res/values/strings.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <string name="app_name">Fresco Audio Example</string>
+</resources>
diff --git a/samples/audioapp/src/main/res/values/styles.xml b/samples/audioapp/src/main/res/values/styles.xml
new file mode 100644
index 000000000..f5a516a5c
--- /dev/null
+++ b/samples/audioapp/src/main/res/values/styles.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <style name="drawee">
+    <item name="android:layout_width">match_parent</item>
+    <item name="android:layout_height">match_parent</item>
+    <item name="actualImageScaleType">fitCenter</item>
+    <item name="failureImage">@color/failure</item>
+  </style>
+</resources>
diff --git a/settings.gradle b/settings.gradle
index c623306ba..3dea0a3a5 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -16,6 +16,7 @@ include ':imagepipeline-base'
 include ':imagepipeline-base-test'
 include ':imagepipeline-test'
 include ':samples:animation2'
+include ':samples:audioapp'
 include ':samples:comparison'
 include ':samples:gestures'
 include ':samples:kotlin'
