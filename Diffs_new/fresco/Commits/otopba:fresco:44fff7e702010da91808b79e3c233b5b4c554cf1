diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/Rounded.java b/drawee/src/main/java/com/facebook/drawee/drawable/Rounded.java
index d59016c58..37c5ea2ba 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/Rounded.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/Rounded.java
@@ -27,4 +27,7 @@
 
   void setScaleDownInsideBorders(boolean scaleDownInsideBorders);
   boolean getScaleDownInsideBorders();
+
+  void setPaintFilterBitmap(boolean paintFilterBitmap);
+  boolean getPaintFilterBitmap();
 }
diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
index 322525e65..4fef4cfc3 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedBitmapDrawable.java
@@ -33,7 +33,7 @@ public RoundedBitmapDrawable(Resources res, @Nullable Bitmap bitmap, @Nullable P
       mPaint.set(paint);
     }
 
-    mPaint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.FILTER_BITMAP_FLAG);
+    mPaint.setFlags(Paint.ANTI_ALIAS_FLAG);
     mBorderPaint.setStyle(Paint.Style.STROKE);
   }
 
@@ -80,6 +80,7 @@ private void updatePaint() {
       mPaint.getShader().setLocalMatrix(mTransform);
       mIsShaderTransformDirty = false;
     }
+    mPaint.setFilterBitmap(getPaintFilterBitmap());
   }
 
   /**
diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedColorDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedColorDrawable.java
index ef9ab25a7..9df84ec35 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedColorDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedColorDrawable.java
@@ -33,6 +33,7 @@
   private float mPadding = 0;
   private int mBorderColor = Color.TRANSPARENT;
   private boolean mScaleDownInsideBorders = false;
+  private boolean mPaintFilterBitmap = false;
   @VisibleForTesting final Path mPath = new Path();
   @VisibleForTesting final Path mBorderPath = new Path();
   private int mColor = Color.TRANSPARENT;
@@ -91,6 +92,7 @@ protected void onBoundsChange(Rect bounds) {
   public void draw(Canvas canvas) {
     mPaint.setColor(DrawableUtils.multiplyColorAlpha(mColor, mAlpha));
     mPaint.setStyle(Paint.Style.FILL);
+    mPaint.setFilterBitmap(getPaintFilterBitmap());
     canvas.drawPath(mPath, mPaint);
     if (mBorderWidth != 0) {
       mPaint.setColor(DrawableUtils.multiplyColorAlpha(mBorderColor, mAlpha));
@@ -240,6 +242,29 @@ public boolean getScaleDownInsideBorders() {
     return mScaleDownInsideBorders;
   }
 
+  /**
+   * Sets FILTER_BITMAP_FLAG flag to Paint. {@link android.graphics.Paint#FILTER_BITMAP_FLAG}
+   *
+   * <p>This should generally be on when drawing bitmaps, unless performance-bound (rendering to software
+   * canvas) or preferring pixelation artifacts to blurriness when scaling
+   * significantly.
+   *
+   * @param paintFilterBitmap whether to set FILTER_BITMAP_FLAG flag to Paint.
+   */
+  @Override
+  public void setPaintFilterBitmap(boolean paintFilterBitmap) {
+    if (mPaintFilterBitmap != paintFilterBitmap) {
+      mPaintFilterBitmap = paintFilterBitmap;
+      invalidateSelf();
+    }
+  }
+
+  /** Gets whether to set FILTER_BITMAP_FLAG flag to Paint. */
+  @Override
+  public boolean getPaintFilterBitmap() {
+    return mPaintFilterBitmap;
+  }
+
   /**
    * Sets the drawable's alpha value.
    *
diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedCornersDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedCornersDrawable.java
index 6628029ea..ce11a8825 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedCornersDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedCornersDrawable.java
@@ -53,6 +53,7 @@
   private int mOverlayColor = Color.TRANSPARENT;
   private float mPadding = 0;
   private boolean mScaleDownInsideBorders = false;
+  private boolean mPaintFilterBitmap = false;
   private final Path mPath = new Path();
   private final Path mBorderPath = new Path();
   private final RectF mTempRectangle = new RectF();
@@ -202,6 +203,30 @@ public boolean getScaleDownInsideBorders() {
     return mScaleDownInsideBorders;
   }
 
+
+  /**
+   * Sets FILTER_BITMAP_FLAG flag to Paint. {@link android.graphics.Paint#FILTER_BITMAP_FLAG}
+   *
+   * <p>This should generally be on when drawing bitmaps, unless performance-bound (rendering to software
+   * canvas) or preferring pixelation artifacts to blurriness when scaling
+   * significantly.
+   *
+   * @param paintFilterBitmap whether to set FILTER_BITMAP_FLAG flag to Paint.
+   */
+  @Override
+  public void setPaintFilterBitmap(boolean paintFilterBitmap) {
+    if (mPaintFilterBitmap != paintFilterBitmap) {
+      mPaintFilterBitmap = paintFilterBitmap;
+      invalidateSelf();
+    }
+  }
+
+  /** Gets whether to set FILTER_BITMAP_FLAG flag to Paint. */
+  @Override
+  public boolean getPaintFilterBitmap() {
+    return mPaintFilterBitmap;
+  }
+
   @Override
   protected void onBoundsChange(Rect bounds) {
     super.onBoundsChange(bounds);
@@ -276,6 +301,7 @@ public void draw(Canvas canvas) {
         mPaint.setStyle(Paint.Style.FILL);
         mPaint.setColor(mOverlayColor);
         mPaint.setStrokeWidth(0f);
+        mPaint.setFilterBitmap(getPaintFilterBitmap());
         mPath.setFillType(Path.FillType.EVEN_ODD);
         canvas.drawPath(mPath, mPaint);
 
diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedDrawable.java
index 1e701b54d..ff515cde8 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/RoundedDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/RoundedDrawable.java
@@ -69,6 +69,7 @@
   @VisibleForTesting final Matrix mTransform = new Matrix();
   private float mPadding = 0;
   private boolean mScaleDownInsideBorders = false;
+  private boolean mPaintFilterBitmap = false;
 
   private boolean mIsPathDirty = true;
 
@@ -201,6 +202,29 @@ public boolean getScaleDownInsideBorders() {
     return mScaleDownInsideBorders;
   }
 
+  /**
+   * Sets FILTER_BITMAP_FLAG flag to Paint. {@link android.graphics.Paint#FILTER_BITMAP_FLAG}
+   *
+   * <p>This should generally be on when drawing bitmaps, unless performance-bound (rendering to software
+   * canvas) or preferring pixelation artifacts to blurriness when scaling
+   * significantly.
+   *
+   * @param paintFilterBitmap whether to set FILTER_BITMAP_FLAG flag to Paint.
+   */
+  @Override
+  public void setPaintFilterBitmap(boolean paintFilterBitmap) {
+    if (mPaintFilterBitmap != paintFilterBitmap) {
+      mPaintFilterBitmap = paintFilterBitmap;
+      invalidateSelf();
+    }
+  }
+
+  /** Gets whether to set FILTER_BITMAP_FLAG flag to Paint. */
+  @Override
+  public boolean getPaintFilterBitmap() {
+    return mPaintFilterBitmap;
+  }
+
   /** TransformAwareDrawable method */
   @Override
   public void setTransformCallback(@Nullable TransformCallback transformCallback) {
diff --git a/drawee/src/main/java/com/facebook/drawee/generic/RoundingParams.java b/drawee/src/main/java/com/facebook/drawee/generic/RoundingParams.java
index ac9971478..44280ed0b 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/RoundingParams.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/RoundingParams.java
@@ -51,6 +51,7 @@
   private int mBorderColor = Color.TRANSPARENT;
   private float mPadding = 0;
   private boolean mScaleDownInsideBorders = false;
+  private boolean mPaintFilterBitmap = false;
 
   /**
    *  Sets whether to round as circle.
@@ -262,6 +263,26 @@ public boolean getScaleDownInsideBorders() {
     return mScaleDownInsideBorders;
   }
 
+  /**
+   * Sets FILTER_BITMAP_FLAG flag to Paint. {@link android.graphics.Paint#FILTER_BITMAP_FLAG}
+   *
+   * <p>This should generally be on when drawing bitmaps, unless performance-bound (rendering to software
+   * canvas) or preferring pixelation artifacts to blurriness when scaling
+   * significantly.
+   *
+   * @param paintFilterBitmap whether to set FILTER_BITMAP_FLAG flag to Paint.
+   * @return modified instance
+   */
+  public RoundingParams setPaintFilterBitmap(boolean paintFilterBitmap) {
+    mPaintFilterBitmap = paintFilterBitmap;
+    return this;
+  }
+
+  /** Gets whether to set FILTER_BITMAP_FLAG flag to Paint. */
+  public boolean getPaintFilterBitmap() {
+    return mPaintFilterBitmap;
+  }
+
   @Override
   public boolean equals(@Nullable Object o) {
     if (this == o) {
@@ -301,6 +322,10 @@ public boolean equals(@Nullable Object o) {
       return false;
     }
 
+    if (mPaintFilterBitmap != that.mPaintFilterBitmap) {
+      return false;
+    }
+
     return Arrays.equals(mCornersRadii, that.mCornersRadii);
   }
 
@@ -314,6 +339,7 @@ public int hashCode() {
     result = 31 * result + mBorderColor;
     result = 31 * result + (mPadding != +0.0f ? Float.floatToIntBits(mPadding) : 0);
     result = 31 * result + (mScaleDownInsideBorders ? 1 : 0);
+    result = 31 * result + (mPaintFilterBitmap ? 1 : 0);
 
     return result;
   }
diff --git a/drawee/src/main/java/com/facebook/drawee/generic/WrappingUtils.java b/drawee/src/main/java/com/facebook/drawee/generic/WrappingUtils.java
index db9a2eaf2..0b86e18c7 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/WrappingUtils.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/WrappingUtils.java
@@ -332,6 +332,7 @@ static void applyRoundingParams(Rounded rounded, RoundingParams roundingParams)
     rounded.setBorder(roundingParams.getBorderColor(), roundingParams.getBorderWidth());
     rounded.setPadding(roundingParams.getPadding());
     rounded.setScaleDownInsideBorders(roundingParams.getScaleDownInsideBorders());
+    rounded.setPaintFilterBitmap(roundingParams.getPaintFilterBitmap());
   }
 
   /**
@@ -343,6 +344,7 @@ static void resetRoundingParams(Rounded rounded) {
     rounded.setBorder(Color.TRANSPARENT, 0);
     rounded.setPadding(0);
     rounded.setScaleDownInsideBorders(false);
+    rounded.setPaintFilterBitmap(false);
   }
 
   /**
diff --git a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
index ef458430e..ec01d5a31 100644
--- a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
+++ b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedBitmapDrawableTest.java
@@ -92,6 +92,13 @@ public void testSetScaleDownInsideBorders() {
     assertTrue(mRoundedBitmapDrawable.getScaleDownInsideBorders());
   }
 
+  @Test
+  public void testSetPaintFilterBitmap() {
+    mRoundedBitmapDrawable.setPaintFilterBitmap(true);
+    verify(mCallback).invalidateDrawable(mRoundedBitmapDrawable);
+    assertTrue(mRoundedBitmapDrawable.getPaintFilterBitmap());
+  }
+
   @Test
   public void testShouldRoundDefault() {
     assertFalse(mRoundedBitmapDrawable.shouldRound());
diff --git a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedColorDrawableTest.java b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedColorDrawableTest.java
index e9bdecbe4..6f3c88387 100644
--- a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedColorDrawableTest.java
+++ b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedColorDrawableTest.java
@@ -112,6 +112,13 @@ public void testSetScaleDownInsideBorders() {
     assertTrue(mRoundedColorDrawable.getScaleDownInsideBorders());
   }
 
+  @Test
+  public void testSetPaintFilterBitmap() {
+    mRoundedColorDrawable.setPaintFilterBitmap(true);
+    verify(mCallback).invalidateDrawable(mRoundedColorDrawable);
+    assertTrue(mRoundedColorDrawable.getPaintFilterBitmap());
+  }
+
   @Test
   public void testDrawWithoutBorder() {
     int internalColor = 0xC0223456;
diff --git a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedCornersDrawableTest.java b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedCornersDrawableTest.java
index e0729ec21..da1e07074 100644
--- a/drawee/src/test/java/com/facebook/drawee/drawable/RoundedCornersDrawableTest.java
+++ b/drawee/src/test/java/com/facebook/drawee/drawable/RoundedCornersDrawableTest.java
@@ -101,4 +101,11 @@ public void testSetScaleDownInsideBorders() {
     verify(mCallback).invalidateDrawable(mRoundedCornersDrawable);
     assertTrue(mRoundedCornersDrawable.getScaleDownInsideBorders());
   }
+
+  @Test
+  public void testSetPaintFilterBitmap() {
+    mRoundedCornersDrawable.setPaintFilterBitmap(true);
+    verify(mCallback).invalidateDrawable(mRoundedCornersDrawable);
+    assertTrue(mRoundedCornersDrawable.getPaintFilterBitmap());
+  }
 }
diff --git a/drawee/src/test/java/com/facebook/drawee/generic/RoundingParamsTest.java b/drawee/src/test/java/com/facebook/drawee/generic/RoundingParamsTest.java
index 841aa396e..0ab37684a 100644
--- a/drawee/src/test/java/com/facebook/drawee/generic/RoundingParamsTest.java
+++ b/drawee/src/test/java/com/facebook/drawee/generic/RoundingParamsTest.java
@@ -32,6 +32,7 @@ public void testDefaults() {
     assertNull(mRoundingParams.getCornersRadii());
     assertEquals(0, mRoundingParams.getOverlayColor());
     assertFalse(mRoundingParams.getScaleDownInsideBorders());
+    assertFalse(mRoundingParams.getPaintFilterBitmap());
   }
 
   @Test
@@ -87,6 +88,14 @@ public void testSetScaleDownInsideBorders() {
     assertFalse(mRoundingParams.getScaleDownInsideBorders());
   }
 
+  @Test
+  public void testSetPaintFilterBitmap() {
+    assertSame(mRoundingParams, mRoundingParams.setPaintFilterBitmap(true));
+    assertTrue(mRoundingParams.getPaintFilterBitmap());
+    assertSame(mRoundingParams, mRoundingParams.setPaintFilterBitmap(false));
+    assertFalse(mRoundingParams.getPaintFilterBitmap());
+  }
+
   @Test
   public void testFactoryMethods() {
     RoundingParams params1 = RoundingParams.asCircle();
