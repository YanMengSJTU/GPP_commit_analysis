diff --git a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
index 4c1a1a76e..1d3e0a614 100644
--- a/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
+++ b/fbcore/src/main/java/com/facebook/common/memory/PooledByteBufferInputStream.java
@@ -29,12 +29,12 @@
   @VisibleForTesting
   int mOffset; // current offset in the chunk
 
-  // TODO: determine better name for this
-  public static int byteOffset = -1;
-
   @VisibleForTesting
   int mMark; // position of 'mark' if any
 
+  // TODO: determine better name for this
+  public static int byteOffset;
+
   /**
    * Creates a new inputstream instance over the specific buffer.
    * @param pooledByteBuffer the buffer to read from
@@ -43,7 +43,7 @@ public PooledByteBufferInputStream(PooledByteBuffer pooledByteBuffer) {
     super();
     Preconditions.checkArgument(!pooledByteBuffer.isClosed());
     mPooledByteBuffer = Preconditions.checkNotNull(pooledByteBuffer);
-    mOffset = byteOffset != -1 ? byteOffset : 0;
+    mOffset = byteOffset;
     mMark = 0;
   }
 
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
index 3caeb89e4..210298432 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java
@@ -64,10 +64,11 @@ public ImageFormat determineFormat(byte[] headerBytes, int headerSize, InputStre
         return SVG_FORMAT;
       }
 
-      // TODO: is passing the InputStream to this method the best way to achieve this result?
-      int index = ImageFormatCheckerUtils.containsPattern(ByteStreams.toByteArray(is), HEADER);
-      if (index != -1) {
-        PooledByteBufferInputStream.byteOffset = index;
+      // TODO: (1) Determine if passing the InputStream to this method is the best way to achieve this result.
+      // TODO: (2) Determine if searching the whole array of bytes in the stream is best practice, according to the repository authors.
+      int indexOfPattern = ImageFormatCheckerUtils.containsPattern(ByteStreams.toByteArray(is), HEADER);
+      if (indexOfPattern != -1) {
+        PooledByteBufferInputStream.byteOffset = indexOfPattern;
         return SVG_FORMAT;
       }
 
