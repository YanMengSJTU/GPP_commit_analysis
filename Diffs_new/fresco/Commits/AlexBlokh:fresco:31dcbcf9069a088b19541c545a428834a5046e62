diff --git a/drawee/src/main/java/com/facebook/drawee/drawable/FadeDrawable.java b/drawee/src/main/java/com/facebook/drawee/drawable/FadeDrawable.java
index d07af3360..00dc39c5c 100644
--- a/drawee/src/main/java/com/facebook/drawee/drawable/FadeDrawable.java
+++ b/drawee/src/main/java/com/facebook/drawee/drawable/FadeDrawable.java
@@ -9,8 +9,6 @@
 
 package com.facebook.drawee.drawable;
 
-import java.util.Arrays;
-
 import android.graphics.Canvas;
 import android.graphics.drawable.Drawable;
 import android.os.SystemClock;
@@ -18,6 +16,8 @@
 import com.facebook.common.internal.Preconditions;
 import com.facebook.common.internal.VisibleForTesting;
 
+import java.util.Arrays;
+
 /**
  * A drawable that fades to the specific layer.
  *
@@ -65,6 +65,7 @@
   @VisibleForTesting int[] mStartAlphas;
   @VisibleForTesting int[] mAlphas;
   @VisibleForTesting int mAlpha;
+  @VisibleForTesting boolean mCrossFade;
 
   /**
    * Determines whether to fade-out a layer to zero opacity (false) or to fade-in to
@@ -91,6 +92,7 @@ public FadeDrawable(Drawable[] layers) {
     mAlpha = 255;
     mIsLayerOn = new boolean[layers.length];
     mPreventInvalidateCount = 0;
+    mCrossFade = true;
     resetInternal();
   }
 
@@ -135,6 +137,22 @@ public int getTransitionDuration() {
     return mDurationMs;
   }
 
+  /**
+   * Whether layer drawable should crossFade on transition
+   */
+  public void setCrossFadeEnabled(boolean crossFadeEnabled) {
+    mCrossFade = crossFadeEnabled;
+  }
+
+  /**
+   * Whether layer drawable should crossFade on transition
+   *
+   * @return crossFade enabled flag
+   */
+  public boolean isCrossFadeEnabled() {
+    return mCrossFade;
+  }
+
   /**
    * Resets internal state to the initial state.
    */
@@ -231,15 +249,15 @@ public void finishTransitionImmediately() {
 
   /**
    * Updates the current alphas based on the ratio of the elapsed time and duration.
-   * @param ratio
+   * @param fraction
    * @return whether the all layers have reached their target opacity
    */
-  private boolean updateAlphas(float ratio) {
+  private boolean updateAlphas(float fraction) {
     boolean done = true;
     for (int i = 0; i < mLayers.length; i++) {
-      int dir = mIsLayerOn[i] ? +1 : -1;
+      int dir = mIsLayerOn[i] ? +1 : mCrossFade ? -1 : 0;
       // determines alpha value and clamps it to [0, 255]
-      mAlphas[i] = (int) (mStartAlphas[i] + dir * 255 * ratio);
+      mAlphas[i] = (int) (mStartAlphas[i] + dir * 255 * fraction);
       if (mAlphas[i] < 0) {
         mAlphas[i] = 0;
       }
@@ -250,9 +268,13 @@ private boolean updateAlphas(float ratio) {
       if (mIsLayerOn[i] && mAlphas[i] < 255) {
         done = false;
       }
-      if (!mIsLayerOn[i] && mAlphas[i] > 0) {
+      if (mCrossFade && !mIsLayerOn[i] && mAlphas[i] > 0 || fraction < 1) {
         done = false;
       }
+
+      if (done && !mIsLayerOn[i] && !mCrossFade) {
+        mAlphas[i] = 0;
+      }
     }
     return done;
   }
diff --git a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
index 51407a880..92d79da06 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
@@ -9,8 +9,6 @@
 
 package com.facebook.drawee.generic;
 
-import javax.annotation.Nullable;
-
 import android.content.res.Resources;
 import android.graphics.Color;
 import android.graphics.ColorFilter;
@@ -29,6 +27,8 @@
 import com.facebook.drawee.drawable.ScaleTypeDrawable;
 import com.facebook.drawee.interfaces.SettableDraweeHierarchy;
 
+import javax.annotation.Nullable;
+
 import static com.facebook.drawee.drawable.ScalingUtils.ScaleType;
 
 /**
@@ -163,6 +163,7 @@
     // fade drawable composed of layers
     mFadeDrawable = new FadeDrawable(layers);
     mFadeDrawable.setTransitionDuration(builder.getFadeDuration());
+    mFadeDrawable.setCrossFadeEnabled(builder.getCrossFadeEnabled());
 
     // rounded corners drawable (optional)
     Drawable maybeRoundedDrawable =
@@ -470,6 +471,10 @@ public void setRoundingParams(RoundingParams roundingParams) {
     }
   }
 
+  public void setCrossFadeEnabled(boolean crossFadeEnabled){
+    mFadeDrawable.setCrossFadeEnabled(crossFadeEnabled);
+  }
+
   /** Gets the rounding params. */
   public RoundingParams getRoundingParams() {
     return mRoundingParams;
diff --git a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyBuilder.java b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyBuilder.java
index 7fefe09d3..0ac4067f2 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyBuilder.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchyBuilder.java
@@ -9,11 +9,6 @@
 
 package com.facebook.drawee.generic;
 
-import javax.annotation.Nullable;
-
-import java.util.Arrays;
-import java.util.List;
-
 import android.content.res.Resources;
 import android.graphics.ColorFilter;
 import android.graphics.Matrix;
@@ -23,6 +18,11 @@
 
 import com.facebook.common.internal.Preconditions;
 
+import java.util.Collections;
+import java.util.List;
+
+import javax.annotation.Nullable;
+
 import static com.facebook.drawee.drawable.ScalingUtils.ScaleType;
 
 /**
@@ -63,6 +63,7 @@
   private Drawable mPressedStateOverlay;
 
   private RoundingParams mRoundingParams;
+  private boolean mCrossFadeEnabled;
 
   public GenericDraweeHierarchyBuilder(Resources resources) {
     mResources = resources;
@@ -78,6 +79,7 @@ public static GenericDraweeHierarchyBuilder newInstance(Resources resources) {
    */
   private void init() {
     mFadeDuration = DEFAULT_FADE_DURATION;
+    mCrossFadeEnabled = true;
 
     mPlaceholderImage = null;
     mPlaceholderImageScaleType = null;
@@ -347,7 +349,7 @@ public GenericDraweeHierarchyBuilder setBackgrounds(List<Drawable> backgrounds)
    * @return modified instance of this builder
    */
   public GenericDraweeHierarchyBuilder setBackground(Drawable background) {
-    mBackgrounds = Arrays.asList(background);
+    mBackgrounds = Collections.singletonList(background);
     return this;
   }
 
@@ -373,7 +375,7 @@ public GenericDraweeHierarchyBuilder setOverlays(List<Drawable> overlays) {
    * @return modified instance of this builder
    */
   public GenericDraweeHierarchyBuilder setOverlay(Drawable overlay) {
-    mOverlays = Arrays.asList(overlay);
+    mOverlays = Collections.singletonList(overlay);
     return this;
   }
 
@@ -412,6 +414,14 @@ public RoundingParams getRoundingParams() {
     return mRoundingParams;
   }
 
+  public boolean getCrossFadeEnabled() {
+    return mCrossFadeEnabled;
+  }
+
+  public void setCrossFadeEnabled(boolean crossFadeEnabled) {
+    mCrossFadeEnabled = crossFadeEnabled;
+  }
+
   private void validate() {
     if (mOverlays != null) {
       for (Drawable overlay : mOverlays) {
diff --git a/imagepipeline/src/main/jni/Application.mk b/imagepipeline/src/main/jni/Application.mk
index 1b8034d0d..bc5f03f2e 100644
--- a/imagepipeline/src/main/jni/Application.mk
+++ b/imagepipeline/src/main/jni/Application.mk
@@ -12,7 +12,7 @@ APP_STL := gnustl_static
 # Make sure every shared lib includes a .note.gnu.build-id header
 APP_LDFLAGS := -Wl,--build-id
 
-NDK_TOOLCHAIN_VERSION := 4.8
+NDK_TOOLCHAIN_VERSION := 4.9
 
 
 # We link our libs with static stl implementation. Because of that we need to
diff --git a/samples/demo/src/main/java/com/facebook/samples/demo/MainActivity.java b/samples/demo/src/main/java/com/facebook/samples/demo/MainActivity.java
index 2a09650e7..6e9bfcf38 100644
--- a/samples/demo/src/main/java/com/facebook/samples/demo/MainActivity.java
+++ b/samples/demo/src/main/java/com/facebook/samples/demo/MainActivity.java
@@ -12,9 +12,6 @@
 
 package com.facebook.samples.demo;
 
-import java.util.HashSet;
-import java.util.Set;
-
 import android.app.Activity;
 import android.graphics.Bitmap;
 import android.net.Uri;
@@ -31,6 +28,9 @@
 import com.facebook.imagepipeline.request.ImageRequest;
 import com.facebook.imagepipeline.request.ImageRequestBuilder;
 
+import java.util.HashSet;
+import java.util.Set;
+
 public class MainActivity extends Activity {
 
   private ImageView mBaselineJpegView;
diff --git a/settings.gradle b/settings.gradle
index a1a223cf0..a3e38d302 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -10,6 +10,7 @@ include ':samples:round'
 include ':samples:uriapp'
 include ':samples:zoomable'
 include ':samples:transition'
+include ':samples:crossfade'
 include ':tools:stetho'
 include ':imagepipeline-backends:imagepipeline-okhttp'
 include ':static-webp'
diff --git a/static-webp/src/main/jni/Application.mk b/static-webp/src/main/jni/Application.mk
index 1b8034d0d..bc5f03f2e 100644
--- a/static-webp/src/main/jni/Application.mk
+++ b/static-webp/src/main/jni/Application.mk
@@ -12,7 +12,7 @@ APP_STL := gnustl_static
 # Make sure every shared lib includes a .note.gnu.build-id header
 APP_LDFLAGS := -Wl,--build-id
 
-NDK_TOOLCHAIN_VERSION := 4.8
+NDK_TOOLCHAIN_VERSION := 4.9
 
 
 # We link our libs with static stl implementation. Because of that we need to
