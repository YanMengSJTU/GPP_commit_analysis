diff --git a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
index ea0511e19..a53b48a21 100644
--- a/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
+++ b/drawee/src/main/java/com/facebook/drawee/generic/GenericDraweeHierarchy.java
@@ -362,24 +362,6 @@ private void setChildDrawableAtIndex(int index, @Nullable Drawable drawable) {
     getParentDrawableAtIndex(index).setDrawable(drawable);
   }
 
-  /**
-   * Sets the drawable at the specified index while keeping the old scale type and rounding.
-   * In case the given drawable is null, scale type gets cleared too.
-   */
-  private void setChildDrawableAtIndex(int index, @Nullable Drawable drawable, boolean borderValid) {
-    if (drawable == null) {
-      mFadeDrawable.setDrawable(index, null);
-      return;
-    }
-    if (!borderValid) {
-      RoundingParams roundingParams = mRoundingParams;
-      roundingParams.setBorder(Color.TRANSPARENT, 0);
-      drawable = WrappingUtils.maybeApplyLeafRounding(drawable, roundingParams, mResources);
-    }
-    drawable = WrappingUtils.maybeApplyLeafRounding(drawable, mRoundingParams, mResources);
-    getParentDrawableAtIndex(index).setDrawable(drawable);
-  }
-
   /**
    * Gets the ScaleTypeDrawable at the specified index.
    * In case there is no child at the specified index, a NullPointerException is thrown.
@@ -455,11 +437,6 @@ public void setPlaceholderImage(Drawable drawable, ScalingUtils.ScaleType scaleT
     getScaleTypeDrawableAtIndex(PLACEHOLDER_IMAGE_INDEX).setScaleType(scaleType);
   }
 
-  public void setPlaceholderImage(Drawable drawable, boolean borderValid) {
-    setChildDrawableAtIndex(PLACEHOLDER_IMAGE_INDEX, drawable, borderValid);
-  }
-
-
   /**
    * @return true if there is a placeholder image set.
    */
@@ -627,5 +604,4 @@ public RoundingParams getRoundingParams() {
   public boolean hasImage() {
     return mActualImageWrapper.getDrawable() != mEmptyActualImageDrawable;
   }
-
 }
