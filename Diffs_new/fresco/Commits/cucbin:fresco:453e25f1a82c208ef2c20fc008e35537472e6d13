diff --git a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ImagePipeline.java b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ImagePipeline.java
index 4bcdfa846..74a3b6868 100644
--- a/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ImagePipeline.java
+++ b/imagepipeline/src/main/java/com/facebook/imagepipeline/core/ImagePipeline.java
@@ -95,7 +95,7 @@ public ImagePipeline(
    *
    * @return unique id
    */
-  private String generateUniqueFutureId() {
+  public String generateUniqueFutureId() {
     return String.valueOf(mIdCounter.getAndIncrement());
   }
 
@@ -700,6 +700,29 @@ public CacheKey getCacheKey(ImageRequest imageRequest, Object callerContext) {
     }
   }
 
+  public <T> DataSource<CloseableReference<T>> submitFetchRequest(
+      Producer<CloseableReference<T>> producerSequence,
+      SettableProducerContext settableProducerContext,
+      RequestListener requestListener) {
+    if (FrescoSystrace.isTracing()) {
+      FrescoSystrace.beginSection("ImagePipeline#submitFetchRequest");
+    }
+    try {
+      return CloseableProducerToDataSourceAdapter.create(
+          producerSequence, settableProducerContext, requestListener);
+    } catch (Exception exception) {
+      return DataSources.immediateFailedDataSource(exception);
+    } finally {
+      if (FrescoSystrace.isTracing()) {
+        FrescoSystrace.endSection();
+      }
+    }
+  }
+
+  public ProducerSequenceFactory getProducerSequenceFactory() {
+    return mProducerSequenceFactory;
+  }
+
   private DataSource<Void> submitPrefetchRequest(
       Producer<Void> producerSequence,
       ImageRequest imageRequest,
@@ -731,7 +754,7 @@ public CacheKey getCacheKey(ImageRequest imageRequest, Object callerContext) {
     }
   }
 
-  private RequestListener getRequestListenerForRequest(
+  public RequestListener getRequestListenerForRequest(
       ImageRequest imageRequest, @Nullable RequestListener requestListener) {
     if (requestListener == null) {
       if (imageRequest.getRequestListener() == null) {
