diff --git a/build.gradle b/build.gradle
index 78a00d987..553ef095e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -8,7 +8,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath "com.android.tools.build:gradle:${ANDROID_GRADLE_PLUGIN_VERSION}"
+        classpath 'com.android.tools.build:gradle:3.0.0-alpha3'
         classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${GRADLE_BINTRAY_PLUGIN_VERSION}"
         classpath "com.github.dcendents:android-maven-gradle-plugin:${ANDROID_MAVEN_GRADLE_PLUGIN_VERSION}"
 
diff --git a/gradle/bintray.gradle b/gradle/bintray.gradle
index 12180e79b..8f112fa24 100644
--- a/gradle/bintray.gradle
+++ b/gradle/bintray.gradle
@@ -29,35 +29,35 @@ def dryRunOnly() {
     return hasProperty('dryRun') ? property('dryRun').toBoolean() : false
 }
 
-bintray {
-    user = getBintrayUsername()
-    key = getBintrayApiKey()
-    configurations = ['archives']
-    pkg {
-        repo = bintrayRepo
-        userOrg =  bintrayUserOrg
-        name = bintrayName
-        desc = bintrayDescription
-        websiteUrl = projectUrl
-        issueTrackerUrl = issuesUrl
-        vcsUrl = scmUrl
-        licenses = projectLicenses
-        dryRun = dryRunOnly()
-        override = true
-        publish = true
-        publicDownloadNumbers = true
-        version {
-            desc = bintrayDescription
-            gpg {
-                sign = true
-                passphrase = getBintrayGpgPassword()
-            }
-            mavenCentralSync {
-                sync = shouldSyncWithMavenCentral()
-                user = getMavenCentralUsername()
-                password = getMavenCentralPassword()
-                close = '1' // If set to 0, you have to manually click release
-            }
-        }
-    }
-}
+//bintray {
+//    user = getBintrayUsername()
+//    key = getBintrayApiKey()
+//    configurations = ['archives']
+//    pkg {
+//        repo = bintrayRepo
+//        userOrg =  bintrayUserOrg
+//        name = bintrayName
+//        desc = bintrayDescription
+//        websiteUrl = projectUrl
+//        issueTrackerUrl = issuesUrl
+//        vcsUrl = scmUrl
+//        licenses = projectLicenses
+//        dryRun = dryRunOnly()
+//        override = true
+//        publish = true
+//        publicDownloadNumbers = true
+//        version {
+//            desc = bintrayDescription
+//            gpg {
+//                sign = true
+//                passphrase = getBintrayGpgPassword()
+//            }
+//            mavenCentralSync {
+//                sync = shouldSyncWithMavenCentral()
+//                user = getMavenCentralUsername()
+//                password = getMavenCentralPassword()
+//                close = '1' // If set to 0, you have to manually click release
+//            }
+//        }
+//    }
+//}
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index b1b378be7..9358c210a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Mar 03 11:40:45 GMT 2017
+#Tue Jun 13 10:36:26 CST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.0-milestone-1-all.zip
diff --git a/release-sonatype.gradle b/release-sonatype.gradle
index 6296730dc..b8fc772a9 100644
--- a/release-sonatype.gradle
+++ b/release-sonatype.gradle
@@ -36,57 +36,57 @@ if (hasProperty('askForPasswords')) {
     ext.'signing.password' = getPassword('signing password');
 }
 
-afterEvaluate { project ->
-    version = VERSION_NAME
-    group = GROUP
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    uploadArchives {
-        configuration = configurations.archives
-        repositories.mavenDeployer {
-            beforeDeployment {
-                MavenDeployment deployment -> signing.signPom(deployment)
-            }
-
-            repository(url: getRepositoryUrl()) {
-                authentication(
-                        userName: getRepositoryUsername(),
-                        password: getRepositoryPassword())
-
-            }
-
-            pom.project {
-                name POM_NAME
-                artifactId POM_ARTIFACT_ID
-                packaging POM_PACKAGING
-                description POM_DESCRIPTION
-                url 'https://github.com/facebook/fresco'
-
-                scm {
-                    url 'https://github.com/facebook/fresco.git'
-                    connection 'scm:git:https://github.com/facebook/fresco.git'
-                    developerConnection 'scm:git:git@github.com:facebook/fresco.git'
-                }
-
-                licenses {
-                    license {
-                        name 'BSD License'
-                        url 'https://github.com/facebook/fresco/blob/master/LICENSE'
-                        distribution 'repo'
-                    }
-                }
-
-                developers {
-                    developer {
-                        id 'facebook'
-                        name 'Facebook'
-                    }
-                }
-            }
-        }
-    }
-}
+//afterEvaluate { project ->
+//    version = VERSION_NAME
+//    group = GROUP
+//
+//    signing {
+//        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
+//        sign configurations.archives
+//    }
+//
+//    uploadArchives {
+//        configuration = configurations.archives
+//        repositories.mavenDeployer {
+//            beforeDeployment {
+//                MavenDeployment deployment -> signing.signPom(deployment)
+//            }
+//
+//            repository(url: getRepositoryUrl()) {
+//                authentication(
+//                        userName: getRepositoryUsername(),
+//                        password: getRepositoryPassword())
+//
+//            }
+//
+//            pom.project {
+//                name POM_NAME
+//                artifactId POM_ARTIFACT_ID
+//                packaging POM_PACKAGING
+//                description POM_DESCRIPTION
+//                url 'https://github.com/facebook/fresco'
+//
+//                scm {
+//                    url 'https://github.com/facebook/fresco.git'
+//                    connection 'scm:git:https://github.com/facebook/fresco.git'
+//                    developerConnection 'scm:git:git@github.com:facebook/fresco.git'
+//                }
+//
+//                licenses {
+//                    license {
+//                        name 'BSD License'
+//                        url 'https://github.com/facebook/fresco/blob/master/LICENSE'
+//                        distribution 'repo'
+//                    }
+//                }
+//
+//                developers {
+//                    developer {
+//                        id 'facebook'
+//                        name 'Facebook'
+//                    }
+//                }
+//            }
+//        }
+//    }
+//}
diff --git a/samples/demo/build.gradle b/samples/demo/build.gradle
index a4b6fda90..b1e346391 100644
--- a/samples/demo/build.gradle
+++ b/samples/demo/build.gradle
@@ -15,12 +15,16 @@ android {
         testInstrumentationRunner "android.test.InstrumentationTestRunner"
     }
 
+    flavorDimensions "color"
+
     productFlavors {
         // TO TEST THE REMOTE MODULES DURING A RELEASE, COMMENT OUT THE "internal" FLAVOR AND
         // UNCOMMENT THE REST OTHERWISE A CLASH OCCURS DUE TO THEM TRYING TO CREATE TASKS OF THE
         // SAME NAME
 
-        internal
+        internal {
+            dimension 'color'
+        }
 //        mavenBasic
 //        mavenWithWebp
 //        mavenWithAnimatedWebp
diff --git a/samples/zoomableapp/build.gradle b/samples/zoomableapp/build.gradle
index da6c60437..154b1aef7 100644
--- a/samples/zoomableapp/build.gradle
+++ b/samples/zoomableapp/build.gradle
@@ -15,8 +15,12 @@ android {
         testInstrumentationRunner "android.test.InstrumentationTestRunner"
     }
 
+    flavorDimensions "color"
+
     productFlavors {
-        internal
+        internal {
+            dimension 'color'
+        }
     }
 
     buildTypes {
