diff --git a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
index a81ff168a..55486e429 100644
--- a/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
+++ b/drawee-backends/drawee-pipeline/src/main/java/com/facebook/drawee/backends/pipeline/PipelineDraweeController.java
@@ -20,6 +20,7 @@
 import com.facebook.common.references.CloseableReference;
 import com.facebook.datasource.DataSource;
 import com.facebook.drawable.base.DrawableWithCaches;
+import com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener;
 import com.facebook.drawee.backends.pipeline.info.ImageOrigin;
 import com.facebook.drawee.backends.pipeline.info.ImageOriginListener;
 import com.facebook.drawee.components.DeferredReleaser;
@@ -156,7 +157,8 @@ public void initialize(
     init(dataSourceSupplier);
     mCacheKey = cacheKey;
     setCustomDrawableFactories(customDrawableFactories);
-    setImageOriginListener(imageOriginListener);
+    clearImageOriginListeners();
+    addImageOriginListener(imageOriginListener);
   }
 
   public void setDrawDebugOverlay(boolean drawDebugOverlay) {
@@ -168,9 +170,20 @@ public void setCustomDrawableFactories(
     mCustomDrawableFactories = customDrawableFactories;
   }
 
-  public void setImageOriginListener(@Nullable ImageOriginListener imageOriginListener) {
+  public void addImageOriginListener(@Nullable ImageOriginListener imageOriginListener) {
     synchronized (this) {
-      mImageOriginListener = imageOriginListener;
+      if (mImageOriginListener != null) {
+        mImageOriginListener =
+            new ForwardingImageOriginListener(mImageOriginListener, imageOriginListener);
+      } else {
+        mImageOriginListener = imageOriginListener;
+      }
+    }
+  }
+
+  protected void clearImageOriginListeners() {
+    synchronized (this) {
+      mImageOriginListener = null;
     }
   }
 
