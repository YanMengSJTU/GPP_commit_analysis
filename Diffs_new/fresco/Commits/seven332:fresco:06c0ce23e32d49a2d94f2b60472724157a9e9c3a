diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
index 2ade94f34..3f321cf41 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDrawableFactory.java
@@ -6,10 +6,11 @@
 
 import javax.annotation.Nullable;
 
+import java.util.concurrent.Executor;
+
 import android.content.Context;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import android.util.Log;
 
 import com.facebook.drawee.backends.pipeline.DrawableFactory;
 import com.facebook.drawee.backends.pipeline.Fresco;
@@ -29,7 +30,12 @@
 
   private final Context context;
 
+  private boolean hasDecodeExecutor;
+  private final Object lockDecodeExecutor = new Object();
+  private Executor decodeExecutor;
+
   private boolean hasAnimatedDrawableFactory;
+  private final Object lockAnimatedDrawableFactory = new Object();
   private AnimatedDrawableFactory animatedDrawableFactory;
 
   public LargeDrawableFactory(Context context) {
@@ -41,12 +47,29 @@ public final boolean supportsImageType(CloseableImage image) {
     return true;
   }
 
+  private Executor getDecodeExecutor() {
+    if (!hasDecodeExecutor) {
+      synchronized (lockDecodeExecutor) {
+        if (!hasDecodeExecutor) {
+          hasDecodeExecutor = true;
+          decodeExecutor =
+              Fresco.getImagePipelineFactory().getConfig().getExecutorSupplier().forDecode();
+        }
+      }
+    }
+    return decodeExecutor;
+  }
+
   private AnimatedDrawableFactory getAnimatedDrawableFactory() {
     if (!hasAnimatedDrawableFactory) {
-      hasAnimatedDrawableFactory = true;
-      AnimatedFactory factory = Fresco.getImagePipelineFactory().getAnimatedFactory();
-      if (factory != null) {
-        animatedDrawableFactory = factory.getAnimatedDrawableFactory(context);
+      synchronized (lockAnimatedDrawableFactory) {
+        if (!hasAnimatedDrawableFactory) {
+          hasAnimatedDrawableFactory = true;
+          AnimatedFactory factory = Fresco.getImagePipelineFactory().getAnimatedFactory();
+          if (factory != null) {
+            animatedDrawableFactory = factory.getAnimatedDrawableFactory(context);
+          }
+        }
       }
     }
     return animatedDrawableFactory;
@@ -60,7 +83,7 @@ public final Drawable createDrawable(CloseableImage image) {
     if (image instanceof CloseableLargeImage) {
       drawable = new SubsamplingDrawable(
           ((CloseableLargeImage) image).getDecoder(),
-          Fresco.getImagePipelineFactory().getConfig().getExecutorSupplier().forDecode());
+          getDecodeExecutor());
     } else {
       drawable = createNormalDrawable(image);
       if (drawable != null) {
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDraweeView.java b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDraweeView.java
index 2509217d7..b1cbe74f0 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/LargeDraweeView.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/LargeDraweeView.java
@@ -28,7 +28,6 @@
 public class LargeDraweeView extends SimpleDraweeView implements GestureRecognizer.Listener {
 
   private GestureRecognizer gestureRecognizer;
-
   private StandardizedTransformedDrawable transform;
 
   private final ControllerListener controllerListener = new BaseControllerListener<Object>() {
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/LargeImageDecoder.java b/fresco-large/src/main/java/com/hippo/fresco/large/LargeImageDecoder.java
index f3ee84afb..4eea0478f 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/LargeImageDecoder.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/LargeImageDecoder.java
@@ -28,7 +28,7 @@
 class LargeImageDecoder implements ImageDecoder {
 
   private boolean hasDefaultImageDecoder;
-  @Nullable
+  private final Object lockDefaultImageDecoder = new Object();
   private DefaultImageDecoder defaultImageDecoder;
 
   private final ImageSizeDecoder defaultSizeDecoder;
@@ -58,10 +58,14 @@ public LargeImageDecoder(
 
   private DefaultImageDecoder getDefaultImageDecoder() {
     if (!hasDefaultImageDecoder) {
-      hasDefaultImageDecoder = true;
-      ImageDecoder decoder = Fresco.getImagePipelineFactory().getImageDecoder();
-      if (decoder instanceof DefaultImageDecoder) {
-        defaultImageDecoder = (DefaultImageDecoder) decoder;
+      synchronized (lockDefaultImageDecoder) {
+        if (!hasDefaultImageDecoder) {
+          hasDefaultImageDecoder = true;
+          ImageDecoder decoder = Fresco.getImagePipelineFactory().getImageDecoder();
+          if (decoder instanceof DefaultImageDecoder) {
+            defaultImageDecoder = (DefaultImageDecoder) decoder;
+          }
+        }
       }
     }
     return defaultImageDecoder;
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/decoder/ImageRegionDecoder.java b/fresco-large/src/main/java/com/hippo/fresco/large/decoder/ImageRegionDecoder.java
index a45bc10a8..9391d2127 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/decoder/ImageRegionDecoder.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/decoder/ImageRegionDecoder.java
@@ -12,9 +12,6 @@
 import android.graphics.Rect;
 import android.support.annotation.CallSuper;
 
-import com.facebook.drawee.backends.pipeline.Fresco;
-import com.facebook.imagepipeline.image.EncodedImage;
-
 public abstract class ImageRegionDecoder implements Closeable {
 
   private Bitmap preview;
diff --git a/fresco-large/src/main/java/com/hippo/fresco/large/drawable/SubsamplingDrawable.java b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/SubsamplingDrawable.java
index 72111e2c3..e826d1591 100644
--- a/fresco-large/src/main/java/com/hippo/fresco/large/drawable/SubsamplingDrawable.java
+++ b/fresco-large/src/main/java/com/hippo/fresco/large/drawable/SubsamplingDrawable.java
@@ -26,7 +26,6 @@
 
 import com.facebook.common.references.CloseableReference;
 import com.facebook.drawable.base.DrawableWithCaches;
-import com.facebook.drawee.drawable.Scaled;
 import com.facebook.drawee.drawable.ScalingUtils;
 
 import com.hippo.fresco.large.decoder.ImageRegionDecoder;
