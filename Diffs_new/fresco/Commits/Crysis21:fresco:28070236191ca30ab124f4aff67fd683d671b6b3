diff --git a/drawee/src/main/java/com/facebook/drawee/controller/AbstractDraweeController.java b/drawee/src/main/java/com/facebook/drawee/controller/AbstractDraweeController.java
index 70c601c45..35ef33ded 100644
--- a/drawee/src/main/java/com/facebook/drawee/controller/AbstractDraweeController.java
+++ b/drawee/src/main/java/com/facebook/drawee/controller/AbstractDraweeController.java
@@ -7,10 +7,11 @@
 
 package com.facebook.drawee.controller;
 
+import static com.facebook.drawee.components.DraweeEventTracker.Event;
+
 import android.graphics.drawable.Animatable;
 import android.graphics.drawable.Drawable;
 import android.view.MotionEvent;
-
 import com.facebook.common.internal.Objects;
 import com.facebook.common.internal.Preconditions;
 import com.facebook.common.logging.FLog;
@@ -26,14 +27,10 @@
 import com.facebook.drawee.interfaces.SettableDraweeHierarchy;
 import com.facebook.imagepipeline.systrace.FrescoSystrace;
 import com.facebook.infer.annotation.ReturnsOwnership;
-
 import java.util.concurrent.Executor;
-
 import javax.annotation.Nullable;
 import javax.annotation.concurrent.NotThreadSafe;
 
-import static com.facebook.drawee.components.DraweeEventTracker.Event;
-
 /**
  * Abstract Drawee controller that implements common functionality
  * regardless of the backend used to fetch the image.
@@ -473,11 +470,11 @@ public void onNewResultImpl(DataSource<T> dataSource) {
             // isFinished must be obtained before image, otherwise we might set intermediate result
             // as final image.
             boolean isFinished = dataSource.isFinished();
-            boolean isReadyToPlay = dataSource.isReadyToPlay();
+            boolean hasMultipleResults = dataSource.hasMultipleResults();
             float progress = dataSource.getProgress();
             T image = dataSource.getResult();
             if (image != null) {
-              onNewResultInternal(id, dataSource, image, progress, isFinished, wasImmediate, isReadyToPlay);
+              onNewResultInternal(id, dataSource, image, progress, isFinished, wasImmediate, hasMultipleResults);
             } else if (isFinished) {
               onFailureInternal(id, dataSource, new NullPointerException(), /* isFinished */ true);
             }
@@ -504,7 +501,7 @@ private void onNewResultInternal(
       float progress,
       boolean isFinished,
       boolean wasImmediate,
-      boolean isReadyToPlay) {
+      boolean deliverTempResult) {
     try {
       FrescoSystrace.beginSection("AbstractDraweeController#onNewResultInternal");
       // ignore late callbacks (data source that returned the new result is not the one we expected)
@@ -537,10 +534,11 @@ private void onNewResultInternal(
           mDataSource = null;
           mSettableDraweeHierarchy.setImage(drawable, 1f, wasImmediate);
           getControllerListener().onFinalImageSet(id, getImageInfo(image), getAnimatable());
-        } else if (isReadyToPlay) {
+        } else if (deliverTempResult) {
           logMessageAndImage("set_temporary_result @ onNewResult", image);
           mSettableDraweeHierarchy.setImage(drawable, 1f, wasImmediate);
           getControllerListener().onFinalImageSet(id, getImageInfo(image), getAnimatable());
+          // IMPORTANT: do not execute any instance-specific code after this point
         } else {
           logMessageAndImage("set_intermediate_result @ onNewResult", image);
           mSettableDraweeHierarchy.setImage(drawable, progress, wasImmediate);
diff --git a/fbcore/src/main/java/com/facebook/datasource/AbstractDataSource.java b/fbcore/src/main/java/com/facebook/datasource/AbstractDataSource.java
index 9db190ea8..b704fc842 100644
--- a/fbcore/src/main/java/com/facebook/datasource/AbstractDataSource.java
+++ b/fbcore/src/main/java/com/facebook/datasource/AbstractDataSource.java
@@ -321,7 +321,7 @@ public void run() {
   }
 
   @Override
-  public boolean isReadyToPlay() {
+  public boolean hasMultipleResults() {
     return false;
   }
 }
diff --git a/fbcore/src/main/java/com/facebook/datasource/DataSource.java b/fbcore/src/main/java/com/facebook/datasource/DataSource.java
index 2864a380e..edc4fbb48 100644
--- a/fbcore/src/main/java/com/facebook/datasource/DataSource.java
+++ b/fbcore/src/main/java/com/facebook/datasource/DataSource.java
@@ -54,7 +54,7 @@
    * @return true if any resources poured in the datasource should be sent to controllers. Usefull
    * with a RetainingDataSource to loaded resources are displayed correctly.
    */
-  boolean isReadyToPlay();
+  boolean hasMultipleResults();
 
   /**
    * @return true if request is finished, false otherwise
diff --git a/fbcore/src/main/java/com/facebook/datasource/RetainingDataSourceSupplier.java b/fbcore/src/main/java/com/facebook/datasource/RetainingDataSourceSupplier.java
index 188ec9d6f..7e0b9d3a8 100644
--- a/fbcore/src/main/java/com/facebook/datasource/RetainingDataSourceSupplier.java
+++ b/fbcore/src/main/java/com/facebook/datasource/RetainingDataSourceSupplier.java
@@ -141,7 +141,7 @@ public void onProgressUpdate(DataSource<T> dataSource) {
     }
 
     @Override
-    public boolean isReadyToPlay() {
+    public boolean hasMultipleResults() {
       return true;
     }
   }
diff --git a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/RetainingDataSourceSupplierFragment.java b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/RetainingDataSourceSupplierFragment.java
index 3fda5a451..89602c060 100644
--- a/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/RetainingDataSourceSupplierFragment.java
+++ b/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/drawee/RetainingDataSourceSupplierFragment.java
@@ -11,27 +11,25 @@
  */
 package com.facebook.fresco.samples.showcase.drawee;
 
-import android.graphics.drawable.Animatable;
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-
 import com.facebook.common.references.CloseableReference;
 import com.facebook.datasource.RetainingDataSourceSupplier;
 import com.facebook.drawee.backends.pipeline.Fresco;
-import com.facebook.drawee.controller.BaseControllerListener;
-import com.facebook.drawee.controller.ControllerListener;
 import com.facebook.drawee.view.SimpleDraweeView;
 import com.facebook.fresco.samples.showcase.BaseShowcaseFragment;
 import com.facebook.fresco.samples.showcase.R;
 import com.facebook.fresco.samples.showcase.misc.ImageUriProvider;
 import com.facebook.imagepipeline.image.CloseableImage;
-import com.facebook.imagepipeline.image.ImageInfo;
 import com.facebook.imagepipeline.request.ImageRequest;
-
+import android.graphics.drawable.Animatable;
+import com.facebook.imagepipeline.image.ImageInfo;
+import com.facebook.drawee.controller.BaseControllerListener;
+import com.facebook.drawee.controller.ControllerListener;
 import java.util.List;
 
 public class RetainingDataSourceSupplierFragment extends BaseShowcaseFragment {
