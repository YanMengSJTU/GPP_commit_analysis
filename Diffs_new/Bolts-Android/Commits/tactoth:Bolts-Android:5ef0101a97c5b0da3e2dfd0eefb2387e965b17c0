diff --git a/bintrayv1.gradle b/bintrayv1.gradle
new file mode 100644
index 0000000..c59548b
--- /dev/null
+++ b/bintrayv1.gradle
@@ -0,0 +1,36 @@
+apply plugin: 'com.jfrog.bintray'
+
+version = libraryVersion
+
+artifacts {
+    archives sourcesJar
+}
+
+// Bintray
+Properties properties = new Properties()
+properties.load(project.rootProject.file('local.properties').newDataInputStream())
+
+bintray {
+    user = properties.getProperty("bintray.user")
+    key = properties.getProperty("bintray.apikey")
+
+    configurations = ['archives']
+    pkg {
+        repo = bintrayRepo
+        name = bintrayName
+        desc = libraryDescription
+        websiteUrl = siteUrl
+        vcsUrl = gitUrl
+        licenses = allLicenses
+        publish = true
+        publicDownloadNumbers = true
+        version {
+            desc = libraryDescription
+            /* gpg {
+                sign = true //Determines whether to GPG sign the files. The default is false
+                passphrase = properties.getProperty("bintray.gpg.password")
+                //Optional. The passphrase for GPG signing'
+            } */
+        }
+    }
+}
diff --git a/bolts-tasks/build.gradle b/bolts-tasks/build.gradle
index 5731294..ef9824d 100644
--- a/bolts-tasks/build.gradle
+++ b/bolts-tasks/build.gradle
@@ -13,85 +13,43 @@ sourceSets {
     }
 }
 
-dependencies {
-    provided 'com.google.android:android:4.1.1.4'
-
-    testCompile 'junit:junit:4.12'
-}
-
-//region Maven
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isSnapshot = version.endsWith('-SNAPSHOT')
-def ossrhUsername = hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : System.getenv('CI_NEXUS_USERNAME')
-def ossrhPassword = hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : System.getenv('CI_NEXUS_PASSWORD')
-
-uploadArchives {
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
-            authentication(userName: ossrhUsername, password: ossrhPassword)
-        }
-
-        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
-            authentication(userName: ossrhUsername, password: ossrhPassword)
-        }
-
-        pom.project {
-            name 'Bolts-Tasks'
-            artifactId = 'bolts-tasks'
-            packaging 'jar'
-            description 'Bolts is a collection of low-level libraries designed to make developing mobile apps easier.'
-            url 'https://github.com/BoltsFramework/Bolts-Android'
-
-            scm {
-                connection 'scm:git@github.com:BoltsFramework/Bolts-Android.git'
-                developerConnection 'scm:git@github.com:BoltsFramework/Bolts-Android.git'
-                url 'https://github.com/BoltsFramework/Bolts-Android'
-            }
-
-            licenses {
-                license {
-                    name 'BSD License'
-                    url 'https://github.com/BoltsFramework/Bolts-Android/blob/master/LICENSE'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    id 'parse'
-                    name 'Parse'
-                }
-            }
-        }
-    }
-}
-
-signing {
-    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
-    sign configurations.archives
-}
 
 task sourcesJar(type: Jar) {
     classifier = 'sources'
     from sourceSets.main.allJava
 }
 
-task javadocJar (type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
+ext {
+    bintrayRepo = 'android'
+    bintrayName = 'bolts-tasks'
+
+    publishedGroupId = 'com.atomicadd.bolts'
+    libraryName = 'Bolts-Android'
+    artifact = 'bolts-android'
 
-artifacts {
-    archives sourcesJar
-    archives javadocJar
+    libraryDescription = 'Bolts android'
+
+    siteUrl = 'https://github.com/tactoth/Bolts-Android'
+    gitUrl = 'https://github.com/tactoth/Bolts-Android'
+
+    libraryVersion = '1.4.1'
+
+    developerId = 'tactoth'
+    developerName = 'Wei Liu'
+    developerEmail = 'tactoth@gmail.com'
+
+    licenseName = 'The Apache Software License, Version 2.0'
+    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
+    allLicenses = ["Apache-2.0"]
 }
 
-//endregion
+apply from: '../bintrayv1.gradle'
+
+
+dependencies {
+    provided 'com.google.android:android:4.1.1.4'
+    testCompile 'junit:junit:4.12'
+}
 
 //region Code Coverage
 
diff --git a/build.gradle b/build.gradle
index 6c9a99c..f74c5eb 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,11 +1,14 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
     repositories {
+        jcenter()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.3.1'
+        classpath 'com.android.tools.build:gradle:2.2.1'
         classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1x'
+        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
     }
 }
 
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 12e13c1..8827783 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Thu Apr 07 12:11:59 PDT 2016
+#Sat Feb 11 08:26:18 PST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
