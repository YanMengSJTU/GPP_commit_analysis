diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
index b01e17eb82..48ac2599bc 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
@@ -49,6 +49,11 @@
      */
     private final String userPoolId;
 
+    /**
+     * Identity Provider for social login
+     */
+    private final String identityProvider;
+
     /**
      * This identifies the settings for additional userPool features.
      */
@@ -131,7 +136,8 @@ private Auth(final Context context,
                  final String signOutRedirectUri,
                  final Set<String> scopes,
                  final AuthHandler userHandler,
-                 final boolean advancedSecurityDataCollectionFlag) {
+                 final boolean advancedSecurityDataCollectionFlag,
+                 final String identityProvider) {
         this.context = context;
         this.appWebDomain = appWebDomain;
         this.appId = appId;
@@ -144,6 +150,7 @@ private Auth(final Context context,
         this.user.setUserHandler(userHandler);
         this.userPoolId = userPoolId;
         this.advancedSecurityDataCollectionFlag = advancedSecurityDataCollectionFlag;
+        this.identityProvider = identityProvider;
         getCurrentUser();
     }
 
@@ -198,6 +205,11 @@ private Auth(final Context context,
          */
         private String mUserPoolId;
 
+        /**
+         * Identity Provider for the userPool.
+         */
+        private String mIdentityProvider;
+
         /**
          * Flag indicating if data collection for advanced security mode is enabled.
          * By default this is enabled.
@@ -362,9 +374,11 @@ public Auth build() {
                     this.mSignOutRedirect,
                     this.mScopes,
                     this.mUserHandler,
-                    this.mAdvancedSecurityDataCollectionFlag);
+                    this.mAdvancedSecurityDataCollectionFlag,
+                    this.mIdentityProvider);
         }
 
+
         /**
          * Checks if all required parameters are available to instantiate {@link Auth}.
          */
@@ -489,6 +503,13 @@ public String getSignOutRedirectUri() {
         return signOutRedirectUri;
     }
 
+    /**
+     * @return Indentity Provider set for this {@link Auth} instance.
+     */
+    public String getIdentityProvider() {
+        return identityProvider;
+    }
+
     /**
      * Use this method to get tokens for a user, the tokens are returned though the callback.
      * {@link AuthHandler#onSuccess(AuthUserSession)}.
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
index ab86052e11..2bcde15a75 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
@@ -28,6 +28,7 @@
 import android.support.customtabs.CustomTabsIntent;
 import android.support.customtabs.CustomTabsServiceConnection;
 import android.support.customtabs.CustomTabsSession;
+import android.text.TextUtils;
 import android.util.Log;
 
 import com.amazonaws.cognito.clientcontext.data.UserContextDataProvider;
@@ -478,6 +479,11 @@ private void launchCognitoAuth(final String redirectUri, final Set<String> token
                 .appendQueryParameter(ClientConstants.DOMAIN_QUERY_PARAM_STATE, state)
                 .appendQueryParameter(ClientConstants.DOMAIN_QUERY_PARAM_USERCONTEXTDATA, getUserContextData());;
 
+        //check if identity provider set as param.
+        if (!TextUtils.isEmpty(pool.getIdentityProvider())) {
+            builder.appendQueryParameter(ClientConstants.DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER, pool.getIdentityProvider());
+        }
+
         // Convert scopes into a string of comma separated values.
         final int noOfScopes = tokenScopes.size();
         if (noOfScopes > 0) {
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java
index 6f9631cfd1..635733b8c2 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/util/ClientConstants.java
@@ -45,6 +45,7 @@
     public static final String DOMAIN_QUERY_PARAM_SCOPES = "scope";
     public static final String DOMAIN_QUERY_PARAM_STATE = "state";
     public static final String DOMAIN_QUERY_PARAM_USERCONTEXTDATA = "userContextData";
+    public static final String DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER = "identity_provider";
     public static final String DOMAIN_SCHEME = "https";
     public static final String SESSION_TYPE_JWT = "JWT";
     public static final String TOKEN_AUTH_TYPE_CODE = "code";
