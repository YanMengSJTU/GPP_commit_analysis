diff --git a/.circleci/config.yml b/.circleci/config.yml
index 0a32ef51a7..edd7654ff4 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -2,6 +2,37 @@
 #
 version: 2.1
 commands:
+  quit_for_nominorversion:
+    description: >-
+      If current release is not a minor version bump, stop executing the current job and return success.
+    steps:
+      - run:
+          name: skip left steps and return immediately from current job if current release is not a minor version bump
+          command: |
+            echo $release_version            
+            maintenance=$(echo $release_version | sed "s/[0-9]*.[0-9]*.\([0-9]*\)/\1/")
+            echo $maintenance
+            if [ "$maintenance" != "0" ]; then
+              echo "This is not minor version bump release, so marking this step successful"
+              circleci step halt
+            fi
+
+  generate_gradle_wrapper:
+    description: >-
+      Downloads and install gradle 4.10.2
+    steps:
+      - run:
+          name: Download gradle zip
+          command: |
+            cd ~
+            wget https://services.gradle.org/distributions/gradle-4.10.2-bin.zip
+            unzip gradle-4.10.2-bin.zip
+      - run:
+          name: Generate wrapper
+          command: |
+            cd ~/code # This is a pre-defined location
+            ~/gradle-4.10.2/bin/gradle wrapper
+
   configure_aws:
     description: >-
       install aws cli and configure android aws release profile
@@ -41,22 +72,91 @@ commands:
             release_type=$(echo "$release_tag" | sed 's|\(.*\)_v\([0-9\.]*\).*|\1|')
             echo "export release_type=$release_type" >> $BASH_ENV
 
-jobs:
-  build:
-    working_directory: ~/code
-    docker:
-      - image: circleci/android:api-27-alpha
-    environment:
-      JVM_OPTS: -Xmx3200m
+  setup_emulator:
+    description: >-
+      setup emulator
     steps:
-      - checkout
       - run:
-          name: build the whole project
+          name: Setup emulator
           command: |
-            echo "id=${android_distribution_id}"
-            bash gradlew build -x test
+            sdkmanager "system-images;android-24;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-24;default;armeabi-v7a"
+      - run:
+          name: Launch emulator
+          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -no-boot-anim -no-window -accel auto -verbose
+          background: true
+      - run:
+          name: Launch logcat
+          command: 
+            adb logcat > logcat.log
+          background: true
+      - run:
+          name: Wait emulator
+          command: |
+            echo "wait for emulator to have booted"
+            circle-android wait-for-boot
+            python3 CircleciScripts/unlock_emulatorscreen.py 
 
-  buildforrelease:
+
+  bump_version_pre:
+    description: >-
+      prepare bump version
+    steps:
+      - run:
+          name: checkout repository for bump version
+          command: |
+            git config --local user.name "${GITHUB_BUMPVERSION_USER}"
+            git clone "https://github.com/${GITHUB_BUMPVERSION_USER}/${bumpversion_repo_name}.git"
+            cd ${bumpversion_repo_name}
+            git fetch
+            branches=$(git branch)
+            if [[ $branches == *"bump_version"* ]]; then    
+              echo "the branch is already pesent"
+              git checkout bump_version          
+            else
+              echo "create new branch bump_version"
+              git checkout -b bump_version                 
+            fi  
+            git remote add upstream https://github.com/${bumpversion_repo_user}/${bumpversion_repo_name}
+            git remote -v
+            git fetch upstream
+            git reset --hard upstream/master  
+            echo "push update the branch"
+            git push  --force   -q https://${GITHUB_BUMPVERSION_TOKEN}@github.com/${GITHUB_BUMPVERSION_USER}/${bumpversion_repo_name}.git
+
+  bump_version_post:
+    description: >-
+      check in bump version change
+    steps:
+      - run: 
+          name: stage changes
+          command: |
+            cd ${bumpversion_repo_name}
+            git config --local user.name "${GITHUB_BUMPVERSION_USER}"
+            gitstatus=$(git status)
+            echo $gitstatus
+            if [[ $gitstatus == *"Changes not staged for commit:"* ]]; then              
+              git add .
+            else
+              echo "No changes for bump version"
+              circleci step halt             
+            fi                 
+      - run:
+          name: check in changes
+          command: |
+            cd ${bumpversion_repo_name}
+            git status
+            git config --local user.name "${GITHUB_BUMPVERSION_USER}"
+            git commit -m "${bump_version_message}"            
+            git push  --force   -q https://${GITHUB_BUMPVERSION_TOKEN}@github.com/${GITHUB_BUMPVERSION_USER}/${bumpversion_repo_name}.git
+            title="${bump_version_pr_title}"
+            content="${bump_version_message}" 
+            echo "title:$title"
+            echo "content:$content"
+            python3 ../CircleciScripts/create_pullrequest.py  "${GITHUB_BUMPVERSION_USER}" "${GITHUB_BUMPVERSION_TOKEN}" "$title" "$content" "master" "${GITHUB_BUMPVERSION_USER}:bump_version" ${bumpversion_repo_user} ${bumpversion_repo_name}
+
+
+jobs:
+  build:
     working_directory: ~/code
     docker:
       - image: circleci/android:api-27-alpha
@@ -64,9 +164,11 @@ jobs:
       JVM_OPTS: -Xmx3200m
     steps:
       - checkout
+      - generate_gradle_wrapper
       - run:
           name: build the whole project
-          command: bash gradlew build -x test
+          command: |
+            bash gradlew build -x test
       - run:
           name: copy libs
           command: |
@@ -85,7 +187,7 @@ jobs:
       JVM_OPTS: -Xmx1024m
     steps:
       - checkout
-      - set_enviroment_variables
+      - generate_gradle_wrapper
       - run:
           name: run unit tests
           command: |
@@ -117,6 +219,7 @@ jobs:
       - run:
           name: release the tag
           command: |
+            tagname="AWS SDK for Android $release_version"
             tagdescription=$(sed -n "/## \[Release $release_version\]/,/## \[Release [0-9]*\.[0-9]*\.[0-9]\]/p"  CHANGELOG.md | sed '1d' | sed '$d')
             echo "$tagdescription" | github-release release  -s ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t $release_tag   --name  "$tagname" -d -
 
@@ -318,25 +421,196 @@ jobs:
       - run:
           name: upload to s3
           command: |
-            aws s3 cp "$sdkNameWithVersion.zip" "s3://$release_bucket/$sdkNameWithVersion.zip" --profile android_sdk_release
-            aws s3 cp "$sdkNameWithVersion.zip" "s3://$release_bucket/latest/$sdkName.zip" --profile android_sdk_release
+            aws s3api put-object --bucket "$release_bucket" --key "$sdkNameWithVersion.zip" --body "$sdkNameWithVersion.zip" --content-disposition "attachment;filename=$sdkNameWithVersion.zip" --acl public-read  --profile android_sdk_release
+            aws s3api put-object --bucket "$release_bucket" --key "latest/$sdkName.zip" --body "$sdkNameWithVersion.zip" --content-disposition "attachment;filename=$sdkNameWithVersion.zip" --acl public-read  --profile android_sdk_release
       - run:
           name: invalidate cloudfront
           command: |
-            python3 CircleciScripts/cloudfront_invalidate.py android_sdk_release  "${android_distribution_id}" "$sdkName.zip"
+            python3 CircleciScripts/cloudfront_invalidate.py android_sdk_release  "${android_distribution_id}" "latest/$sdkName.zip"
+
+  integrationtest:
+    working_directory: ~/code
+    docker:
+      # Android the primary container
+      - image: circleci/android@sha256:5cdc8626cc6f13efe5ed982cdcdb432b0472f8740fed8743a6461e025ad6cdfc
+    environment:
+      JVM_OPTS: -Xmx3200m
+    steps:
+      - checkout
+      - configure_aws
+      - run: 
+          name: install python3-pip
+          command: |
+            sudo apt-get update
+            sudo apt-get -y install python3-pip     
+      - run: 
+          name: Install json parser
+          command: sudo pip3 install demjson
+      - run: 
+          name: Install lxml
+          command: sudo pip3 install lxml      
+      - run:
+          name: install sdk
+          command: |
+            sudo yes | sdkmanager "platforms;android-27"
+      - setup_emulator         
+      - run:
+          name: Configure test information
+          command: |
+            aws s3 cp s3://android-circleci-payload/testinformation/testinformation.json testinformation.json 
+            python3  CircleciScripts/replace_testinformation.py $(pwd) testinformation.json 
+      - run:
+          name: run integration tests
+          command: |
+            aws s3 cp s3://android-circleci-payload/gradle-wrapper.jar gradle/wrapper/gradle-wrapper.jar
+            echo "${ANDROID_TESTS_CREDENTIALS_JSON}"  | base64 -di   > awsconfiguration.json
+            python3 CircleciScripts/run_integrationtest.py "~/test_results" "$(pwd)" "$(pwd)/awsconfiguration.json"
+      - run:
+          name : check integration test result 
+          command : |
+            echo "testresult=$testresult"
+            if [ "$testresult" == "0" ] 
+            then
+                echo "test succeed!"
+            else
+                echo "There are test failures"
+                exit 1
+            fi
+      - store_artifacts:
+          path: "~/test_results"
+  uitest:
+    working_directory: ~/code
+    docker:
+      # Android the primary container
+      - image: circleci/android@sha256:5cdc8626cc6f13efe5ed982cdcdb432b0472f8740fed8743a6461e025ad6cdfc
+    environment:
+      JVM_OPTS: -Xmx3200m
+    steps:
+      - checkout
+      - configure_aws     
+      - run:
+          name: checkout sample applications
+          command: |
+            git clone https://github.com/sunchunqiang/aws-sdk-android-samples.git
+      - restore_cache:
+          key: Libs-{{ .Revision }}
+      - run:
+          name: copy third party
+          command: |
+            aws s3 cp  s3://android-circleci-payload/third-party/third-party.zip third-party.zip
+            unzip third-party.zip
+            cp third-party/**/*.jar  lib/
+      - run:
+          name: create aws configure json file
+          command :
+            echo "${S3SAMPLE_JSON}"  | base64 -di   > aws-sdk-android-samples/S3TransferUtilitySample/res/raw/awsconfiguration.json           
+      - run:
+          name: configure aws dependencies
+          command: |
+            python3 CircleciScripts/replace_awsdependencies.py "$(pwd)/aws-sdk-android-samples/S3TransferUtilitySample/build.gradle" "implementation fileTree(dir: '$(pwd)/lib', include: ['*.jar', '*.aar'])"
+      - setup_emulator         
+      - run:
+          name: run sample ui test
+          command: |
+            cd aws-sdk-android-samples/S3TransferUtilitySample
+            aws s3 cp s3://android-circleci-payload/gradle-wrapper.jar gradle/wrapper/gradle-wrapper.jar
+            bash gradlew connectedAndroidTest
+      - store_artifacts:
+          path: "aws-sdk-android-samples/S3TransferUtilitySample/build/outputs"
+      - store_artifacts:
+          path: "aws-sdk-android-samples/S3TransferUtilitySample/build.gradle"
+      - store_artifacts:
+          path: logcat.log
+
+  bump_sampleapp_version:
+    working_directory: ~/code
+    docker:
+      - image: circleci/android:api-27-alpha
+    environment:
+      JVM_OPTS: -Xmx3200m
+    steps:
+      - set_enviroment_variables
+      - quit_for_nominorversion
+      - checkout  
+      - run:
+          name: set_bumpversion_enviroment
+          command: |
+            bumpversion_repo_user=awslabs
+            bumpversion_repo_name=aws-sdk-android-samples
+            minorversion=$(echo $release_version | sed "s/\([0-9]*.[0-9]*\).[0-9]*/\1/")
+            echo ${minorversion}
+            bump_version_message="Update sample apps to use ${minorversion}.+ version of the SDK"
+            bump_version_pr_title="Bump sample applications versions to ${minorversion}.+"
+            echo "export bumpversion_repo_user=$bumpversion_repo_user" >> $BASH_ENV
+            echo "export bumpversion_repo_name=$bumpversion_repo_name" >> $BASH_ENV
+            echo "export minorversion=$minorversion" >> $BASH_ENV
+            echo "export bump_version_message='${bump_version_message}'" >> $BASH_ENV
+            echo "export bump_version_pr_title='${bump_version_pr_title}'" >> $BASH_ENV
+            echo "bump_version_pr_title:$bump_version_pr_title"
+      - bump_version_pre
+      - run:
+          name: bump version
+          command:
+            python3 CircleciScripts/bump_androidsample_version.py "$(pwd)/aws-sdk-android-samples" $release_version
+      - bump_version_post
+
+  bump_applifydocs_version:
+    working_directory: ~/code
+    docker:
+      - image: circleci/android:api-27-alpha
+    environment:
+      JVM_OPTS: -Xmx3200m
+    steps:
+      - set_enviroment_variables
+      - quit_for_nominorversion
+      - checkout  
+      - run:
+          name: set_bumpversion_enviroment
+          command: |
+            bumpversion_repo_user=aws-amplify
+            bumpversion_repo_name=docs
+            minorversion=$(echo $release_version | sed "s/\([0-9]*.[0-9]*\).[0-9]*/\1/")
+            echo ${minorversion}
+            bump_version_message="Update Android docs to ${release_version}"
+            bump_version_pr_title="Update Android docs to ${release_version}"
+            echo "export bumpversion_repo_user=$bumpversion_repo_user" >> $BASH_ENV
+            echo "export bumpversion_repo_name=$bumpversion_repo_name" >> $BASH_ENV
+            echo "export minorversion=$minorversion" >> $BASH_ENV
+            echo "export bump_version_message='${bump_version_message}'" >> $BASH_ENV
+            echo "export bump_version_pr_title='${bump_version_pr_title}'" >> $BASH_ENV
+            echo "bump_version_pr_title:$bump_version_pr_title"
+      - bump_version_pre
+      - run:
+          name: bump version
+          command:
+            python3 CircleciScripts/bump_amplifydocs_version.py "$(pwd)/${bumpversion_repo_name}/android" $release_version
+      - bump_version_post
 
 workflows:
   version: 2
-
   build_test:
     jobs:
       - build
-      - unittest:
+      - unittest
+      - integrationtest:
+          filters:
+            branches:
+              only:
+                - master
+                - develop
+
+      - uitest:
           requires:
             - build
+          filters:
+            branches:
+              only:
+                - master
+                - develop
+
   release_sdk:
     jobs:
-      - buildforrelease:
+      - build:
           filters:
             branches:
               ignore: /.*/
@@ -370,7 +644,7 @@ workflows:
 
       - release_s3:
           requires:
-            - buildforrelease
+            - build
             - release_javadoc
             - release_maven
           filters:
@@ -386,4 +660,23 @@ workflows:
             branches:
               ignore: /.*/
             tags:
-              only: /^(release|beta)_v[0-9]+.[0-9]+.[0-9]+$/
\ No newline at end of file
+              only: /^(release|beta)_v[0-9]+.[0-9]+.[0-9]+$/
+      - bump_sampleapp_version:
+          requires:
+            - release_tag
+          filters:
+            branches:
+              ignore: /.*/
+            tags:
+              only: /^(release|beta)_v[0-9]+.[0-9]+.[0-9]+$/
+      - bump_applifydocs_version:
+          requires:
+            - release_tag
+          filters:
+            branches:
+              ignore: /.*/
+            tags:
+              only: /^(release|beta)_v[0-9]+.[0-9]+.[0-9]+$/
+
+
+
diff --git a/.gitignore b/.gitignore
index 7b50a210b6..edf5487525 100644
--- a/.gitignore
+++ b/.gitignore
@@ -43,6 +43,7 @@ captures/
 .idea/dictionaries
 .idea/libraries
 .idea/caches
+.idea/misc.xml
 
 # Keystore files
 # Uncomment the following line if you do not want to check your keystore files in.
diff --git a/.idea/misc.xml b/.idea/misc.xml
index 51fa3e5b2e..99202cc2d6 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -5,32 +5,22 @@
     <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />
     <option name="myNullables">
       <value>
-        <list size="10">
+        <list size="5">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
           <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
           <item index="3" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
           <item index="4" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
-          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.Nullable" />
-          <item index="6" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNullable" />
-          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.Nullable" />
-          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
-          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
         </list>
       </value>
     </option>
     <option name="myNotNulls">
       <value>
-        <list size="9">
+        <list size="4">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
           <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
           <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
-          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.NonNull" />
-          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNonNull" />
-          <item index="6" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.NonNull" />
-          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
-          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
         </list>
       </value>
     </option>
diff --git a/.idea/modules.xml b/.idea/modules.xml
index 1132146b7e..b39b7ca3f7 100644
--- a/.idea/modules.xml
+++ b/.idea/modules.xml
@@ -23,7 +23,6 @@
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-iot/aws-android-sdk-iot.iml" filepath="$PROJECT_DIR$/aws-android-sdk-iot/aws-android-sdk-iot.iml" />
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-kinesis/aws-android-sdk-kinesis.iml" filepath="$PROJECT_DIR$/aws-android-sdk-kinesis/aws-android-sdk-kinesis.iml" />
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-kinesisvideo/aws-android-sdk-kinesisvideo.iml" filepath="$PROJECT_DIR$/aws-android-sdk-kinesisvideo/aws-android-sdk-kinesisvideo.iml" />
-      <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-kinesisvideo-archivedmedia/aws-android-sdk-kinesisvideo-archivedmedia.iml" filepath="$PROJECT_DIR$/aws-android-sdk-kinesisvideo-archivedmedia/aws-android-sdk-kinesisvideo-archivedmedia.iml" />
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-kms/aws-android-sdk-kms.iml" filepath="$PROJECT_DIR$/aws-android-sdk-kms/aws-android-sdk-kms.iml" />
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-lambda/aws-android-sdk-lambda.iml" filepath="$PROJECT_DIR$/aws-android-sdk-lambda/aws-android-sdk-lambda.iml" />
       <module fileurl="file://$PROJECT_DIR$/aws-android-sdk-lex/aws-android-sdk-lex.iml" filepath="$PROJECT_DIR$/aws-android-sdk-lex/aws-android-sdk-lex.iml" />
@@ -43,4 +42,4 @@
       <module fileurl="file://$PROJECT_DIR$/aws-sdk-android.iml" filepath="$PROJECT_DIR$/aws-sdk-android.iml" />
     </modules>
   </component>
-</project>
\ No newline at end of file
+</project>
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 86e919ed25..12cda36698 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,73 @@
 # Change Log - AWS SDK for Android
 
+## [Release 2.12.0](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.12.0)
+
+### Enhancements
+
+* **Amazon Cognito Auth**
+  * Allow user to unbind the service after being done with authentication. See [pr #615](https://github.com/aws-amplify/aws-sdk-android/pull/615). Thanks @rlatapy-luna!
+
+* **Amazon Cognito User Pools**
+  * Adds support for the SRP protocol at the beginning of custom auth. Please use `AuthenticationDetails(String, String, Map<String, String>, Map<String, String>)` to trigger custom auth flow with SRP protocol as the first step.
+
+* **Amazon S3**
+    * **Note:** AWS Signature Version 4 (`SigV4`) is recommended for signing Amazon S3 API requests over AWS Signature Version 2 (`SigV2`) as it provides improved security by using a signing key rather than your secret access key. SigV4 is currently supported in all AWS regions while SigV2 is only supported in regions launched prior to Jan 2014. Amazon S3 will stop accepting requests signed using SigV2 in all regions on June 24, 2019, any
+requests signed using SigV2 made after this time will fail. Please visit the S3 documentation site to get more information on using SigV4: [Signing Aamzon S3 requests using SigV4](https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html). You can find the list of
+changes between versions here: [Changes in SigV4](https://docs.aws.amazon.com/general/latest/gr/sigv4_changes.html).
+   * Deprecated the existing constructors in `AmazonS3Client` and introduced equivalent constructors that require the AWS region, because a valid AWS region is required to sign the request using SigV4. Please use the following constructors to specify the AWS region in order to sign the request to Amazon S3 using SigV4.
+
+2.11.1 | 2.12.0
+---------- | -------------
+AmazonS3Client(AWSCredentials) | AmazonS3Client(AWSCredentials, com.amazonaws.regions.Region)
+AmazonS3Client(AWSCredentials, ClientConfiguration) | AmazonS3Client(AWSCredentials, ClientConfiguration, com.amazonaws.regions.Region)
+AmazonS3Client(AWSCredentialsProvider) | AmazonS3Client(AWSCredentialsProvider, com.amazonaws.regions.Region)
+AmazonS3Client(AWSCredentialsProvider, ClientConfiguration) | AmazonS3Client(AWSCredentialsProvider, ClientConfiguration, com.amazonaws.regions.Region)
+AmazonS3Client(AWSCredentialsProvider, ClientConfiguration, HttpClient) | AmazonS3Client(AWSCredentialsProvider, ClientConfiguration, HttpClient, com.amazonaws.regions.Region)
+AmazonS3Client(ClientConfiguration) | AmazonS3Client(ClientConfiguration, com.amazonaws.regions.Region)
+
+## [Release 2.11.1](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.11.1)
+
+### New Features
+
+* **Amazon S3**
+  * Add the ability to specify the type of network connection (`TransferNetworkConnectionType.ANY` - any network, `TransferNetworkConnectionType.MOBILE` - mobile only, `TransferNetworkConnectionType.WIFI` - WiFi only) for the transfers through `TransferUtilityOptions`. The `TransferUtilityOptions` is passed to the `TransferUtility` object and is used for all the transfers that are initiated through this object. The network connection type can be passed while constructing the `TransferUtilityOptions` object through `TransferUtilityOptions(int, TransferNetworkConnectionType)`. See [pr #575](https://github.com/aws-amplify/aws-sdk-android/pull/575). Thanks @nasdf!
+
+### Bug Fixes
+
+* **Amazon Cognito Identity Provider**
+  * Fixed a bug that used a null username during custom auth challenge. See [issue #657](https://github.com/aws-amplify/aws-sdk-android/issues/657) & [issue #583](https://github.com/aws-amplify/aws-sdk-android/issues/583)
+
+* **AWS IoT**
+  - Fixed a bug that caused some IoT connections to not reconnect after errors.
+    [See PR #660](https://github.com/aws-amplify/aws-sdk-android/pull/660).
+    Thanks @sklikowicz!
+
+* **Amazon S3**
+  * Improved the state, progress and error reporting when the transfers are interrupted.
+      * When the transfer is paused or cancelled by the user, the state is reported correctly.
+      * When the transfer is interrupted because of a network drop, the state is set to WAITING_FOR_NETWORK when the `TransferNetworkLossHandler` is used.
+      * When the transfer is interrupted otherwise, the transfer is set to FAILED and the exception is reported via `TransferListener.onError` callback.
+  * Fixed the bug where progress is reported inaccurately (over 100%) when a transfer is paused by user or network drop and resumed before completion. See [issue #677](https://github.com/aws-amplify/aws-sdk-android/issues/677), [issue #667](https://github.com/aws-amplify/aws-sdk-android/issues/667), [issue #616](https://github.com/aws-amplify/aws-sdk-android/issues/616), [issue #406](https://github.com/aws-amplify/aws-sdk-android/issues/406)
+
+### Enhancements
+
+* **Amazon Cognito Identity**
+  - The Amazon Cognito Identity SDK now supports all Amazon Cognito Identity
+    APIs, including admin APIs that require developer credentials. Note that by
+    using admin APIs, you are inherently dealing with privileged functions that
+    could result in data loss of data if improperly used. [See issue
+    #645](https://github.com/aws-amplify/aws-sdk-android/issues/645)
+
+### Misc. Updates
+
+* Model updates for the following services
+  * AWS IoT
+  * Amazon Comprehend
+  * Amazon Cognito Identity Provider
+  * Amazon Kinesis Firehose
+  * Amazon Transcribe
+  * Amazon Pinpoint
+ 
 ## [Release 2.11.0](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.11.0)
 
 ### Enhancements
diff --git a/CircleciScripts/bump_amplifydocs_version.py b/CircleciScripts/bump_amplifydocs_version.py
new file mode 100644
index 0000000000..6c378c5779
--- /dev/null
+++ b/CircleciScripts/bump_amplifydocs_version.py
@@ -0,0 +1,32 @@
+from functions import getmodules
+from functions import replacefiles
+import sys
+import os
+
+root = sys.argv[1]
+newsdkversion = sys.argv[2]
+lastdot = newsdkversion.rfind('.')
+maxminorversion = newsdkversion[0:lastdot]
+
+replaces = [
+    {
+        "exclude" : "com.amazonaws:aws-android-sdk-appsync",
+        "match" : r"(com.amazonaws:aws-android-sdk-.+:)[0-9]+\.[0-9]+\.\+", 
+        "replace" : r"\1[maxminorversion].+",
+        "files" : [
+            "analytics.md",
+            "api.md",
+            "authentication.md",
+            "how-to-cognito-integrate-an-existing-identity-pool-android.md",
+            "interactions.md",
+            "manualsetup.md",
+            "pubsub.md",
+            "push-notifications.md",
+            "start.md",
+            "storage.md",
+        ]       
+    } 
+]
+for replaceaction in replaces:
+    replaceaction["replace"] = replaceaction["replace"].replace("[maxminorversion]", maxminorversion)
+replacefiles(root, replaces)
diff --git a/CircleciScripts/bump_androidsample_version.py b/CircleciScripts/bump_androidsample_version.py
new file mode 100644
index 0000000000..713c3c05fc
--- /dev/null
+++ b/CircleciScripts/bump_androidsample_version.py
@@ -0,0 +1,36 @@
+from functions import getmodules
+from functions import replacefiles
+import sys
+import os
+
+root = sys.argv[1]
+newsdkversion = sys.argv[2]
+lastdot = newsdkversion.rfind('.')
+maxminorversion = newsdkversion[0:lastdot]
+
+replaces = [
+    {
+        "match" : r"(com.amazonaws:aws-android-sdk-.+:)[0-9]+\.[0-9]+\.\+", 
+        "replace" : r"\1[maxminorversion].+",
+        "files" : [
+            "AmazonCognitoAuthDemo/app/build.gradle",
+            "AmazonCognitoYourUserPoolsDemo/app/build.gradle",
+
+        ]       
+    } ,
+    {
+        "match" : r'def[[:space:]]+aws_version[[:space:]]*=[[:space:]]*"[0-9]+\.[0-9]+\.\+"', 
+        "replace" : r'def aws_version = "[maxminorversion].+"',
+        "files" : [
+            "AmazonKinesisVideoDemoApp/build.gradle",
+            "AndroidPubSub/build.gradle",
+            "AndroidPubSubWebSocket/build.gradle",
+            "LexSample/app/build.gradle",
+            "PollyDemo/app/build.gradle",
+            "S3TransferUtilitySample/build.gradle"
+        ]       
+    } ,
+]
+for replaceaction in replaces:
+    replaceaction["replace"] = replaceaction["replace"].replace("[maxminorversion]", maxminorversion)
+replacefiles(root, replaces)
diff --git a/CircleciScripts/cloudfront_invalidate.py b/CircleciScripts/cloudfront_invalidate.py
index 780cf0f9c0..e8ea6a5d1b 100644
--- a/CircleciScripts/cloudfront_invalidate.py
+++ b/CircleciScripts/cloudfront_invalidate.py
@@ -6,7 +6,7 @@
 awsprofile = sys.argv[1]
 distribution_id = sys.argv[2]
 path = sys.argv[3]
-invalidation='{{"Paths":{{"Quantity":1,"Items":["/{0}"]}},"CallerReference":"{0}{1}"}}'.format('path',  datetime.datetime.now())
+invalidation='{{"Paths":{{"Quantity":1,"Items":["/{0}"]}},"CallerReference":"{0}{1}"}}'.format(path,  datetime.datetime.now())
 runcommand("aws configure set preview.cloudfront true")
 returncode = runcommand("aws cloudfront create-invalidation --distribution-id {0} --invalidation-batch '{1}' --profile {2}".format(distribution_id, invalidation, awsprofile))
 print("returncode=", returncode)
diff --git a/CircleciScripts/create_pullrequest.py b/CircleciScripts/create_pullrequest.py
new file mode 100644
index 0000000000..ae7d4e43c1
--- /dev/null
+++ b/CircleciScripts/create_pullrequest.py
@@ -0,0 +1,17 @@
+import os
+import sys
+from functions import runcommand
+
+user =  sys.argv[1]
+token =  sys.argv[2]
+title =  sys.argv[3]
+body = sys.argv[4]
+base =  sys.argv[5]
+head =  sys.argv[6]
+touser =  sys.argv[7]
+repo =  sys.argv[8]
+
+data='{{"title":"{0}","base":"{1}","head":"{2}", "body":"{3}"}}'.format(title, base, head,body)
+print("data:", data)
+rn = runcommand(command = "curl --user  '{0}:{1}' --request POST  --data  '{2}' 'https://api.github.com/repos/{3}/{4}/pulls'".format(user,token,data, touser, repo), logcommandline = False)
+exit(rn)
diff --git a/CircleciScripts/functions.py b/CircleciScripts/functions.py
index 145e550917..dcd7852cf7 100644
--- a/CircleciScripts/functions.py
+++ b/CircleciScripts/functions.py
@@ -7,11 +7,12 @@
 from enum import Enum
 from collections import namedtuple
 import re
+import platform
 
 TestType  = namedtuple('TestType', ['value', 'testAction', 'displayString'])
 class TestTypes(Enum):
     UnitTest = TestType(1, 'test -PexcludeTests=**/*IntegrationTest.class', 'unit test')
-    integration = TestType(2, 'connectedAndroidTest', 'integration test')
+    IntegrationTest = TestType(2, 'connectedAndroidTest', 'integration test')   
     @property
     def displayString(self):
         return self.value.displayString
@@ -21,10 +22,10 @@ def testAction(self):
         return self.value.testAction
         
 
-def runcommand(command, timeout=0,pipein=None, pipeout =  None, logcommandline = True):
+def runcommand(command, timeout=0,pipein=None, pipeout =  None, logcommandline = True,  workingdirectory=None):
     if logcommandline:
         print("running command: ", command, "......")
-    process = Popen(command, shell=True, stdin=pipein, stdout = pipeout)
+    process = Popen(command, shell=True, stdin=pipein, stdout = pipeout, cwd = workingdirectory)
     wait_times = 0 
     while True:
         try:
@@ -51,14 +52,13 @@ def runtest(module, testtype, results):
     testcommand = "bash gradlew {0}:{1} ".format(module, testtype.testAction)
     print("Running {0} for {1} .......".format(testtype.displayString, module))   
     exit_code = runcommand(testcommand)   
-    print("test failed for {0}".format(module))
     dest = "{0}/{1}".format(results, module)
     runcommand('mkdir -p "{0}"'.format(dest))
     source = "{0}/build/reports/*".format(module)             
-    runcommand('echo "export testresult=0" >> $BASH_ENV')
     if runcommand("cp -rf {0} {1}".format(source,dest)) != 0 :
         return 1
     if exit_code != 0 :    
+        print("test failed for {0}".format(module))
         runcommand('echo "export testresult=1" >> $BASH_ENV')  
 
     return 0
@@ -74,6 +74,31 @@ def getmodules(root):
         else:
             print("{0} is not a sdk module ".format(line)) 
     return modules ;
+ #replace is a dictionary. it has a format 
+ #{
+ # "exclude:string"
+ # "match":string,
+ # "replace":string 
+ # "files" : [
+ # string,
+ # ]
+ # match and replace will be used by sed command like  sed -E 's/{match}/{replace}/'
+ # please check with sed document to see how to handle escape characaters in match and replace
+ #}
+def replacefiles(root, replaces):
+    for replaceaction in replaces:
+        match = replaceaction["match"]
+        replace = replaceaction["replace"]
+        files = replaceaction["files"]
+        paramters = "-r -i''"
+        if platform.system() == "Darwin":
+            paramters = "-E -i ''"
+        exclude=""
+        if 'exclude' in replaceaction:
+            exclude = "/{0}/ ! ".format(replaceaction['exclude'])       
+        for file in files:
+            targetfile = os.path.join(root, file)           
+            runcommand(command = "sed {4}   '{3}s/{0}/{1}/'  '{2}'".format(match, replace, targetfile, exclude, paramters), logcommandline = True) 
 
 
 
diff --git a/CircleciScripts/replace_awsdependencies.py b/CircleciScripts/replace_awsdependencies.py
new file mode 100644
index 0000000000..6703e992dd
--- /dev/null
+++ b/CircleciScripts/replace_awsdependencies.py
@@ -0,0 +1,37 @@
+import os
+import sys
+
+START_FLAG = "//BEGIN AWS DEPENDENCIES"
+END_FLAG = "//END AWS DEPENDENCIES"
+
+originfile = sys.argv[1]
+replacewords = sys.argv[2]
+tempfile=originfile + 'bak'
+with open(originfile) as source_file:  
+    line = source_file.readline()
+    startreplace = False
+    with open(tempfile, 'a') as target_file:
+        while line:
+            if  START_FLAG in line :
+                if startreplace:
+                    exit(1)
+                startreplace = True;
+                target_file.write("{0}\n".format(replacewords))
+                line = source_file.readline()
+                continue
+            if END_FLAG in line:
+                if not startreplace:
+                    exit(1)
+                startreplace = False
+                line = source_file.readline()
+                continue               
+            if startreplace :
+                line = source_file.readline()
+                continue
+            target_file.write("{0}".format(line))
+            line = source_file.readline()
+            print(line)
+
+
+os.remove(originfile)
+os.rename(tempfile, originfile)
\ No newline at end of file
diff --git a/CircleciScripts/replace_testinformation.py b/CircleciScripts/replace_testinformation.py
new file mode 100644
index 0000000000..bd637c7ac0
--- /dev/null
+++ b/CircleciScripts/replace_testinformation.py
@@ -0,0 +1,13 @@
+from functions import replacefiles
+import demjson
+import sys
+
+root = sys.argv[1]
+replacesjson = sys.argv[2]
+
+with open(replacesjson, 'r') as jsonfile:
+	jsonstring = jsonfile.read()
+rootelement =  demjson.decode(jsonstring)
+replaces =  rootelement["replaces"]
+print(replaces)
+replacefiles(root, replaces)
diff --git a/CircleciScripts/run_integrationtest.py b/CircleciScripts/run_integrationtest.py
new file mode 100644
index 0000000000..208a0e0ea3
--- /dev/null
+++ b/CircleciScripts/run_integrationtest.py
@@ -0,0 +1,22 @@
+from functions import runcommand
+from functions import runtest
+from functions import TestTypes
+from functions import getmodules
+import sys
+import os
+
+test_results = sys.argv[1]
+root = sys.argv[2]
+credentials = sys.argv[3]
+testmodules =  ["aws-android-sdk-mobile-client"]
+
+runcommand('echo "export testresult=0" >> $BASH_ENV')  
+runcommand("rm -rf {0}".format(test_results))
+runcommand("mkdir {0}".format(test_results))
+for module in testmodules:                      
+    credentialfolder = os.path.join(root, module,"src/androidTest/res/raw")
+    runcommand("mkdir -p '{0}'".format(credentialfolder))
+    credentialfile=os.path.join(credentialfolder,"awsconfiguration.json")
+    runcommand('cp "{0}" "{1}"'.format(credentials, credentialfile))
+    if runtest(module, TestTypes.IntegrationTest, test_results) != 0:
+        exit(1)
diff --git a/CircleciScripts/run_unittest.py b/CircleciScripts/run_unittest.py
index b053cf48ba..f2d69ec32e 100644
--- a/CircleciScripts/run_unittest.py
+++ b/CircleciScripts/run_unittest.py
@@ -10,7 +10,7 @@
 print(root)
 testmodules =  getmodules(root)
 
-
+runcommand('echo "export testresult=0" >> $BASH_ENV')
 runcommand("rm -rf {0}".format(test_results))
 runcommand("mkdir {0}".format(test_results))
 for module in testmodules:
diff --git a/CircleciScripts/unlock_emulatorscreen.py b/CircleciScripts/unlock_emulatorscreen.py
new file mode 100644
index 0000000000..5f32e8b080
--- /dev/null
+++ b/CircleciScripts/unlock_emulatorscreen.py
@@ -0,0 +1,15 @@
+from functions import runcommand
+import time 
+
+ncount = 0 
+print("unlocking emulator screen ...")
+while True:
+    rn = runcommand("adb shell input keyevent 82 ")
+    if rn == 0 :
+        print("Unlocked emulator screen")
+        exit(0)
+    if ncount > 10 :
+        print("Failed to unlock emulator screen")
+        exit(1)
+    time.sleep(10)
+    ncount = ncount + 1
diff --git a/README.md b/README.md
index 6e048bc1a8..5759884ea5 100644
--- a/README.md
+++ b/README.md
@@ -2,7 +2,6 @@
 
 [![GitHub release](https://img.shields.io/github/release/aws-amplify/aws-sdk-android.svg)](https://github.com/aws-amplify/aws-sdk-android/releases)
 [![Maven Central](https://img.shields.io/maven-central/v/com.amazonaws/aws-android-sdk-pom.svg)](https://search.maven.org/search?q=a:aws-android-sdk-pom)
-[![CircleCI](https://circleci.com/gh/aws-amplify/aws-sdk-android.svg?style=svg)](https://circleci.com/gh/aws-amplify/aws-sdk-android)
 
 The AWS SDK for Android provides a library and documentation for developers to build connected mobile applications using AWS.
 
@@ -191,4 +190,4 @@ Amazon Web Services
 
 ## License
 
-See the **LICENSE** file for more info.
+See the **LICENSE** file for more info.
\ No newline at end of file
diff --git a/aws-android-sdk-apigateway-core/pom.xml b/aws-android-sdk-apigateway-core/pom.xml
index 22ed1f3a92..c0e2ef2607 100644
--- a/aws-android-sdk-apigateway-core/pom.xml
+++ b/aws-android-sdk-apigateway-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-core/pom.xml b/aws-android-sdk-auth-core/pom.xml
index 331312825c..6d66f3e9e0 100644
--- a/aws-android-sdk-auth-core/pom.xml
+++ b/aws-android-sdk-auth-core/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-auth-facebook/pom.xml b/aws-android-sdk-auth-facebook/pom.xml
index 17ff90e067..d0fdafabf6 100644
--- a/aws-android-sdk-auth-facebook/pom.xml
+++ b/aws-android-sdk-auth-facebook/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <repositories>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-google/pom.xml b/aws-android-sdk-auth-google/pom.xml
index 55bbab138e..4e0e2d53f1 100644
--- a/aws-android-sdk-auth-google/pom.xml
+++ b/aws-android-sdk-auth-google/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <repositories>
@@ -40,7 +40,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     
diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
index 7ead1bcf93..d12b3ac067 100644
--- a/aws-android-sdk-auth-ui/pom.xml
+++ b/aws-android-sdk-auth-ui/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <repositories>
@@ -36,28 +36,28 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-android-sdk-auth-userpools/pom.xml
index 6f4bb04b65..d9bbeb227b 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-android-sdk-auth-userpools/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <repositories>
@@ -36,14 +36,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-autoscaling/pom.xml b/aws-android-sdk-autoscaling/pom.xml
index e674f0fef2..085832936e 100644
--- a/aws-android-sdk-autoscaling/pom.xml
+++ b/aws-android-sdk-autoscaling/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cloudwatch/pom.xml b/aws-android-sdk-cloudwatch/pom.xml
index 97fd1415e2..eb49d0012d 100644
--- a/aws-android-sdk-cloudwatch/pom.xml
+++ b/aws-android-sdk-cloudwatch/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognito/pom.xml b/aws-android-sdk-cognito/pom.xml
index 89c8093891..db08a88df9 100644
--- a/aws-android-sdk-cognito/pom.xml
+++ b/aws-android-sdk-cognito/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognito</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Sync</name>
-  <version>2.11.0</version>
+  <version>2.12.0</version>
   <description>The AWS Android SDK for Amazon Cognito Sync module holds the client classes that are used for communicating with Amazon Cognito Sync Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
index 7a320363f2..d6d5a0ae88 100644
--- a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
+++ b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-cognito
-fabric-version=2.11.0
+fabric-version=2.12.0
 fabric-build-type=binary
diff --git a/aws-android-sdk-cognitoauth/pom.xml b/aws-android-sdk-cognitoauth/pom.xml
index 6f40164c2a..020eadcb30 100644
--- a/aws-android-sdk-cognitoauth/pom.xml
+++ b/aws-android-sdk-cognitoauth/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoauth</artifactId>
   <packaging>aar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Auth</name>
-  <version>2.11.0</version>
+  <version>2.12.0</version>
   <description>The AWS Android SDK with app integration for Amazon Cognito Your User Pools Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <repositories>
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
index 1f805192f8..334352b9c7 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/Auth.java
@@ -159,7 +159,6 @@ private Auth(final Context context,
         this.signOutRedirectUri = signOutRedirectUri;
         this.scopes = scopes;
         this.user = new AuthClient(context, this);
-        this.user = new AuthClient(context, this);
         this.user.setUserHandler(userHandler);
         this.userPoolId = userPoolId;
         this.advancedSecurityDataCollectionFlag = advancedSecurityDataCollectionFlag;
@@ -655,4 +654,11 @@ public Auth setUsername(final String username) {
         this.user.setUsername(username);
         return this;
     }
+
+    /**
+     * Release resources used by {@link Auth}
+     */
+    public void release() {
+        this.user.unbindServiceConnection();
+    }
 }
diff --git a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
index 0e222883a4..d9d2586b2a 100644
--- a/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
+++ b/aws-android-sdk-cognitoauth/src/main/java/com/amazonaws/mobileconnectors/cognitoauth/AuthClient.java
@@ -221,6 +221,15 @@ public void getTokens(final Uri uri) {
         getTokens(uri, userHandler);
     }
 
+
+    /**
+     * Unbind {@link AuthClient#mCustomTabsServiceConnection}
+     */
+    public void unbindServiceConnection() {
+        if(mCustomTabsServiceConnection != null)
+            context.unbindService(mCustomTabsServiceConnection);
+    }
+
     /**
      * Internal method to exchange code for tokens.
      * <p>
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-android-sdk-cognitoidentityprovider/pom.xml
index 7fae85bf78..b69ba4d9af 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-android-sdk-cognitoidentityprovider/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
-  <version>2.11.0</version>
+  <version>2.12.0</version>
   <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
index 8a34678388..1a844efe80 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
@@ -2264,14 +2264,12 @@ public Runnable respondToChallenge(final RespondToAuthChallengeRequest challenge
             final AuthenticationHandler callback, final boolean runInBackground) {
         try {
             if (challengeResponse != null && challengeResponse.getChallengeResponses() != null) {
-                final Map<String, String> challengeResponses = challengeResponse
-                        .getChallengeResponses();
-                challengeResponses.put(CognitoServiceConstants.CHLG_RESP_DEVICE_KEY, deviceKey);
-                challengeResponse.setChallengeResponses(challengeResponses);
+                challengeResponse.getChallengeResponses()
+                        .put(CognitoServiceConstants.CHLG_RESP_DEVICE_KEY, deviceKey);
             }
             final RespondToAuthChallengeResult challenge = cognitoIdentityProviderClient
                     .respondToAuthChallenge(challengeResponse);
-            return handleChallenge(challenge, callback, runInBackground);
+            return handleChallenge(challenge, null, callback, runInBackground);
         } catch (final ResourceNotFoundException rna) {
             final CognitoUser cognitoUser = this;
             if (rna.getMessage().contains("Device")) {
@@ -2330,11 +2328,16 @@ private Runnable startWithUserSrpAuth(final AuthenticationDetails authentication
                     .equals(initiateAuthResult.getChallengeName())) {
                 if (authenticationDetails.getPassword() != null) {
                     final RespondToAuthChallengeRequest challengeRequest = userSrpAuthRequest(
-                            initiateAuthResult, authenticationDetails, authenticationHelper);
+                            initiateAuthResult.getChallengeParameters(),
+                            authenticationDetails.getPassword(),
+                            initiateAuthResult.getChallengeName(),
+                            initiateAuthResult.getSession(),
+                            authenticationHelper
+                    );
                     return respondToChallenge(challengeRequest, callback, runInBackground);
                 }
             }
-            return handleChallenge(initiateAuthResult, callback, runInBackground);
+            return handleChallenge(initiateAuthResult, authenticationDetails, callback, runInBackground);
         } catch (final ResourceNotFoundException rna) {
             final CognitoUser cognitoUser = this;
             if (rna.getMessage().contains("Device")) {
@@ -2380,12 +2383,30 @@ public void run() {
      */
     private Runnable startWithCustomAuth(final AuthenticationDetails authenticationDetails,
             final AuthenticationHandler callback, final boolean runInBackground) {
-        final InitiateAuthRequest initiateAuthRequest = initiateCustomAuthRequest(
-                authenticationDetails);
         try {
+            final AuthenticationHelper authenticationHelper = new AuthenticationHelper(this.getUserPoolId());
+            final InitiateAuthRequest initiateAuthRequest = initiateCustomAuthRequest(
+                    authenticationDetails,
+                    authenticationHelper);
             final InitiateAuthResult initiateAuthResult = cognitoIdentityProviderClient
                     .initiateAuth(initiateAuthRequest);
-            return handleChallenge(initiateAuthResult, callback, runInBackground);
+            updateInternalUsername(initiateAuthResult.getChallengeParameters());
+            if (CognitoServiceConstants.CHLG_TYPE_USER_PASSWORD_VERIFIER
+                    .equals(initiateAuthResult.getChallengeName())) {
+                if (authenticationDetails.getPassword() == null) {
+                    throw new IllegalStateException("Failed to find password in " +
+                            "authentication details to response to PASSWORD_VERIFIER challenge");
+                }
+                final RespondToAuthChallengeRequest challengeRequest = userSrpAuthRequest(
+                        initiateAuthResult.getChallengeParameters(),
+                        authenticationDetails.getPassword(),
+                        initiateAuthResult.getChallengeName(),
+                        initiateAuthResult.getSession(),
+                        authenticationHelper
+                );
+                return respondToChallenge(challengeRequest, callback, runInBackground);
+            }
+            return handleChallenge(initiateAuthResult, authenticationDetails, callback, runInBackground);
         } catch (final Exception e) {
             return new Runnable() {
                 @Override
@@ -2412,13 +2433,16 @@ public void run() {
      *
      * @param challenge REQUIRED: Current challenge details,
      *            {@link RespondToAuthChallengeResult}.
+     * @param authenticationDetails OPTIONAL: This is used in the PASSWORD_VERIFIER challenge
      * @param callback REQUIRED: {@link AuthenticationDetails} callback.
      * @param runInBackground REQUIRED: Boolean to indicate the current
      *            threading.
      * @return {@link Runnable} for the next step in user authentication.
      */
     private Runnable handleChallenge(final RespondToAuthChallengeResult challenge,
-            final AuthenticationHandler callback, final boolean runInBackground) {
+                                     final AuthenticationDetails authenticationDetails,
+                                     final AuthenticationHandler callback,
+                                     final boolean runInBackground) {
         Runnable nextTask;
         final CognitoUser cognitoUser = this;
         nextTask = new Runnable() {
@@ -2471,7 +2495,15 @@ public void run() {
                 }
             }
         } else if (CognitoServiceConstants.CHLG_TYPE_USER_PASSWORD_VERIFIER.equals(challengeName)) {
-            return nextTask;
+            return new Runnable() {
+                @Override
+                public void run() {
+                    callback.onFailure(new CognitoInternalErrorException(
+                            "Authentication failed due to an internal error: " +
+                                    "PASSWORD_VERIFIER challenge encountered not at the " +
+                                    "start of authentication flow"));
+                }
+            };
         } else if (CognitoServiceConstants.CHLG_TYPE_SMS_MFA.equals(challengeName)
                 || CognitoServiceConstants.CHLG_TYPE_SOFTWARE_TOKEN_MFA.equals(challengeName)) {
             final MultiFactorAuthenticationContinuation multiFactorAuthenticationContinuation = new MultiFactorAuthenticationContinuation(
@@ -2541,14 +2573,16 @@ public void run() {
      * @return {@link Runnable} for the next step in user authentication.
      */
     private Runnable handleChallenge(final InitiateAuthResult authResult,
-            final AuthenticationHandler callback, final boolean runInBackground) {
+                                     final AuthenticationDetails authenticationDetails,
+                                     final AuthenticationHandler callback,
+                                     final boolean runInBackground) {
         try {
             final RespondToAuthChallengeResult challenge = new RespondToAuthChallengeResult();
             challenge.setChallengeName(authResult.getChallengeName());
             challenge.setSession(authResult.getSession());
             challenge.setAuthenticationResult(authResult.getAuthenticationResult());
             challenge.setChallengeParameters(authResult.getChallengeParameters());
-            return handleChallenge(challenge, callback, runInBackground);
+            return handleChallenge(challenge, authenticationDetails, callback, runInBackground);
         } catch (final Exception e) {
             return new Runnable() {
                 @Override
@@ -2578,7 +2612,7 @@ private Runnable startWithUserPasswordAuth(final AuthenticationDetails authentic
                     .initiateAuth(initiateAuthRequest);
             this.usernameInternal = initiateAuthResult.getChallengeParameters()
                     .get(CognitoServiceConstants.CHLG_PARAM_USER_ID_FOR_SRP);
-            return handleChallenge(initiateAuthResult, callback, runInBackground);
+            return handleChallenge(initiateAuthResult, authenticationDetails, callback, runInBackground);
         } catch (final Exception e) {
             return new Runnable() {
                 @Override
@@ -2599,7 +2633,7 @@ public void run() {
     private InitiateAuthRequest initiateUserPasswordAuthRequest(
             AuthenticationDetails authenticationDetails) {
 
-        if (StringUtils.isBlank(authenticationDetails.getUserId()) 
+        if (StringUtils.isBlank(authenticationDetails.getUserId())
                 || StringUtils.isBlank(authenticationDetails.getPassword())) {
             throw new CognitoNotAuthorizedException("User name and password are required");
         }
@@ -2658,9 +2692,9 @@ private Runnable deviceSrpAuthentication(final RespondToAuthChallengeResult chal
                         authenticationHelper);
                 final RespondToAuthChallengeResult deviceSRPAuthResult = cognitoIdentityProviderClient
                         .respondToAuthChallenge(challengeResponse);
-                return handleChallenge(deviceSRPAuthResult, callback, runInBackground);
+                return handleChallenge(deviceSRPAuthResult, null, callback, runInBackground);
             } else {
-                return handleChallenge(initiateDeviceAuthResult, callback, runInBackground);
+                return handleChallenge(initiateDeviceAuthResult, null, callback, runInBackground);
             }
         } catch (final NotAuthorizedException na) {
             final CognitoUser cognitoUser = this;
@@ -2744,8 +2778,8 @@ private InitiateAuthRequest initiateUserSrpAuthRequest(
      * @return {@link InitiateAuthRequest}, request to start with the user SRP
      *         authentication.
      */
-    private InitiateAuthRequest initiateCustomAuthRequest(
-            AuthenticationDetails authenticationDetails) {
+    private InitiateAuthRequest initiateCustomAuthRequest(final AuthenticationDetails authenticationDetails,
+                                                          final AuthenticationHelper authenticationHelper) {
         final InitiateAuthRequest authRequest = new InitiateAuthRequest();
         authRequest.setAuthFlow(CognitoServiceConstants.AUTH_TYPE_INIT_CUSTOM_AUTH);
         authRequest.setClientId(clientId);
@@ -2757,9 +2791,12 @@ private InitiateAuthRequest initiateCustomAuthRequest(
         Map<String, String> authenticationParameters = authenticationDetails.getAuthenticationParameters();
         if (clientSecret != null &&
             authenticationParameters.get(CognitoServiceConstants.AUTH_PARAM_SECRET_HASH) == null) {
-            secretHash = CognitoSecretHash.getSecretHash(usernameInternal, clientId, clientSecret);
+            secretHash = CognitoSecretHash.getSecretHash(authenticationDetails.getUserId(), clientId, clientSecret);
             authenticationParameters.put(CognitoServiceConstants.AUTH_PARAM_SECRET_HASH, secretHash);
         }
+        if (CognitoServiceConstants.AUTH_PARAM_SRP_A.equals(authenticationDetails.getCustomChallenge())) {
+            authenticationParameters.put(CognitoServiceConstants.AUTH_PARAM_SRP_A, authenticationHelper.getA().toString(16));
+        }
         authRequest.setAuthParameters(authenticationDetails.getAuthenticationParameters());
 
         if (authenticationDetails.getValidationData() != null
@@ -2818,7 +2855,7 @@ private InitiateAuthRequest initiateRefreshTokenAuthRequest(CognitoUserSession c
                 deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
                         context);
             } else {
-                deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(), 
+                deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(),
                         pool.getUserPoolId(), context);
             }
         }
@@ -2839,35 +2876,38 @@ private InitiateAuthRequest initiateRefreshTokenAuthRequest(CognitoUserSession c
     }
 
     /**
-     * Creates response for the second step of the SRP authentication.
      *
-     * @param challenge REQUIRED: {@link InitiateAuthResult} contains next
-     *            challenge.
-     * @param authenticationDetails REQUIRED: {@link AuthenticationDetails} user
-     *            authentication details.
-     * @param authenticationHelper REQUIRED: Internal helper class for SRP
-     *            calculations.
-     * @return {@link RespondToAuthChallengeRequest}.
+     * @param challengeParameters returned by service
+     * @param password maintained locally
+     * @param challengeName returned by service
+     * @param session returned by service
+     * @param authenticationHelper
+     * @return
      */
-    private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult challenge,
-            AuthenticationDetails authenticationDetails,
-            AuthenticationHelper authenticationHelper) {
-        final String userIdForSRP = challenge.getChallengeParameters()
-                .get(CognitoServiceConstants.CHLG_PARAM_USER_ID_FOR_SRP);
-        this.usernameInternal = challenge.getChallengeParameters()
-                .get(CognitoServiceConstants.CHLG_PARAM_USERNAME);
+    private RespondToAuthChallengeRequest userSrpAuthRequest(final Map<String, String> challengeParameters,
+                                                             final String password,
+                                                             final String challengeName,
+                                                             final String session,
+                                                             final AuthenticationHelper authenticationHelper) {
+        final String userId = challengeParameters.get(CognitoServiceConstants.CHLG_PARAM_USERNAME);
+        final String userIdForSRP = challengeParameters.get(CognitoServiceConstants.CHLG_PARAM_USER_ID_FOR_SRP);
+        final String srpBString = challengeParameters.get(CognitoServiceConstants.CHLG_PARAM_SRP_B);
+        final String saltString = challengeParameters.get(CognitoServiceConstants.CHLG_PARAM_SALT);
+        final String secretBlockString = challengeParameters.get(CognitoServiceConstants.CHLG_PARAM_SECRET_BLOCK);
+
+        this.usernameInternal = userId;
         this.deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
                 context);
         secretHash = CognitoSecretHash.getSecretHash(usernameInternal, clientId, clientSecret);
 
-        final BigInteger srpB = new BigInteger(challenge.getChallengeParameters().get("SRP_B"), 16);
+        final BigInteger srpB = new BigInteger(srpBString, 16);
         if (srpB.mod(AuthenticationHelper.N).equals(BigInteger.ZERO)) {
             throw new CognitoInternalErrorException("SRP error, B cannot be zero");
         }
 
-        final BigInteger salt = new BigInteger(challenge.getChallengeParameters().get("SALT"), 16);
+        final BigInteger salt = new BigInteger(saltString, 16);
         final byte[] key = authenticationHelper.getPasswordAuthenticationKey(userIdForSRP,
-                authenticationDetails.getPassword(), srpB, salt);
+                password, srpB, salt);
 
         final Date timestamp = new Date();
         byte[] hmac;
@@ -2879,7 +2919,7 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
             mac.update(pool.getUserPoolId().split("_", 2)[1].getBytes(StringUtils.UTF8));
             mac.update(userIdForSRP.getBytes(StringUtils.UTF8));
             final byte[] secretBlock = Base64
-                    .decode(challenge.getChallengeParameters().get("SECRET_BLOCK"));
+                    .decode(secretBlockString);
             mac.update(secretBlock);
 
             final SimpleDateFormat simpleDateFormat = new SimpleDateFormat(
@@ -2895,8 +2935,7 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
 
         final Map<String, String> srpAuthResponses = new HashMap<String, String>();
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_PASSWORD_CLAIM_SECRET_BLOCK,
-                challenge.getChallengeParameters()
-                        .get(CognitoServiceConstants.CHLG_PARAM_SECRET_BLOCK));
+                secretBlockString);
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_PASSWORD_CLAIM_SIGNATURE,
                 new String(Base64.encode(hmac), StringUtils.UTF8));
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_TIMESTAMP, dateString);
@@ -2905,9 +2944,9 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_SECRET_HASH, secretHash);
 
         final RespondToAuthChallengeRequest authChallengeRequest = new RespondToAuthChallengeRequest();
-        authChallengeRequest.setChallengeName(challenge.getChallengeName());
+        authChallengeRequest.setChallengeName(challengeName);
         authChallengeRequest.setClientId(clientId);
-        authChallengeRequest.setSession(challenge.getSession());
+        authChallengeRequest.setSession(session);
         authChallengeRequest.setChallengeResponses(srpAuthResponses);
         final String pinpointEndpointId = pool.getPinpointEndpointId();
         if (pinpointEndpointId != null) {
@@ -3070,8 +3109,8 @@ public void listDevices(int limit, String paginationToken, DevicesHandler callba
 
     /**
      * Returns the current device, if users in this pool can remember devices.
-     * If a deviceKey is not found with the userId, the deviceKey is searched 
-     * with the username in cached tokens, if any. 
+     * If a deviceKey is not found with the userId, the deviceKey is searched
+     * with the username in cached tokens, if any.
      * @return {@link CognitoDevice} if the device is available, null otherwise.
      */
     public CognitoDevice thisDevice() {
@@ -3083,7 +3122,7 @@ public CognitoDevice thisDevice() {
                 deviceKey = CognitoDeviceHelper.getDeviceKey(userId, pool.getUserPoolId(), context);
                 if (deviceKey == null) {
                     CognitoUserSession currSession = this.readCachedTokens();
-                    deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(), 
+                    deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(),
                             this.pool.getUserPoolId(), this.context);
                 }
             }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
index ecdbfe9423..4b30cdf079 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
@@ -53,6 +53,32 @@ public AuthenticationDetails(String userId, String password,
         setValidationData(validationData);
     }
 
+    /**
+     * Constructs a new object for custom authentication that starts with SRP protocol.
+     * The first to challenges to be answered are SRP_A and PASSWORD_VERIFIER.
+     *
+     * @param userId REQUIRED: User ID, NOTE: This will over ride the current user ID
+     * @param password REQUIRED: This will be used to answer the PASSWORD_VERIFIER challenge.
+     * @param authenticationParameters REQUIRED: Authentication details that are used in custom
+     *                                 authentication process
+     * @param validationData REQUIRED: Contains authentication parameters which are passed to
+     *                       triggered pre-auth lambda trigger.
+     */
+    public AuthenticationDetails(String userId, String password, Map<String, String> authenticationParameters,
+                                 Map<String, String> validationData) {
+        this.userId = userId;
+        this.password = password;
+        if (authenticationParameters != null) {
+            this.authenticationType = CognitoServiceConstants.CHLG_TYPE_CUSTOM_CHALLENGE;
+            this.authenticationParameters = authenticationParameters;
+            setAuthenticationParameter(CognitoServiceConstants.AUTH_PARAM_USERNAME, userId);
+            setCustomChallenge(CognitoServiceConstants.AUTH_PARAM_SRP_A);
+            setValidationData(validationData);
+        } else {
+            this.authenticationType = null;
+        }
+    }
+
     /**
      * Constructs a new object for custom authentication.
      *
@@ -91,6 +117,10 @@ public void setAuthenticationType(String authenticationType) {
         }
     }
 
+    public void setPassword(final String password) {
+        this.password = password;
+    }
+
     /**
      * This method returns the password.
      *
@@ -152,6 +182,10 @@ public void setCustomChallenge(String customChallenge) {
                 customChallenge);
     }
 
+    public String getCustomChallenge() {
+        return this.authenticationParameters.get(CognitoServiceConstants.AUTH_PARAM_CHALLENGE_NAME);
+    }
+
     /**
      * Set the name of the authentication challenge.
      *
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
index 7876e7504f..bb94f1873b 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
@@ -2649,6 +2649,72 @@ UpdateUserPoolClientResult updateUserPoolClient(
             UpdateUserPoolClientRequest updateUserPoolClientRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Updates the Secure Sockets Layer (SSL) certificate for the custom domain
+     * for your user pool.
+     * </p>
+     * <p>
+     * You can use this operation to provide the Amazon Resource Name (ARN) of a
+     * new certificate to Amazon Cognito. You cannot use it to change the domain
+     * for a user pool.
+     * </p>
+     * <p>
+     * A custom domain is used to host the Amazon Cognito hosted UI, which
+     * provides sign-up and sign-in pages for your application. When you set up
+     * a custom domain, you provide a certificate that you manage with AWS
+     * Certificate Manager (ACM). When necessary, you can use this operation to
+     * change the certificate that you applied to your custom domain.
+     * </p>
+     * <p>
+     * Usually, this is unnecessary following routine certificate renewal with
+     * ACM. When you renew your existing certificate in ACM, the ARN for your
+     * certificate remains the same, and your custom domain uses the new
+     * certificate automatically.
+     * </p>
+     * <p>
+     * However, if you replace your existing certificate with a new one, ACM
+     * gives the new certificate a new ARN. To apply the new certificate to your
+     * custom domain, you must provide this ARN to Amazon Cognito.
+     * </p>
+     * <p>
+     * When you add your new certificate in ACM, you must choose US East (N.
+     * Virginia) as the AWS Region.
+     * </p>
+     * <p>
+     * After you submit your request, Amazon Cognito requires up to 1 hour to
+     * distribute your new certificate to your custom domain.
+     * </p>
+     * <p>
+     * For more information about adding a custom domain to your user pool, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html"
+     * >Using Your Own Domain for the Hosted UI</a>.
+     * </p>
+     * 
+     * @param updateUserPoolDomainRequest <p>
+     *            The UpdateUserPoolDomain request input.
+     *            </p>
+     * @return updateUserPoolDomainResult The response from the
+     *         UpdateUserPoolDomain service method, as returned by Amazon
+     *         Cognito Your User Pool.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Your User Pool indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    UpdateUserPoolDomainResult updateUserPoolDomain(
+            UpdateUserPoolDomainRequest updateUserPoolDomainRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Use this API to register a user's entered TOTP code and mark the user's
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
index 1e2ce62f0c..b93bc980f7 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
@@ -5029,6 +5029,99 @@ public UpdateUserPoolClientResult updateUserPoolClient(
         }
     }
 
+    /**
+     * <p>
+     * Updates the Secure Sockets Layer (SSL) certificate for the custom domain
+     * for your user pool.
+     * </p>
+     * <p>
+     * You can use this operation to provide the Amazon Resource Name (ARN) of a
+     * new certificate to Amazon Cognito. You cannot use it to change the domain
+     * for a user pool.
+     * </p>
+     * <p>
+     * A custom domain is used to host the Amazon Cognito hosted UI, which
+     * provides sign-up and sign-in pages for your application. When you set up
+     * a custom domain, you provide a certificate that you manage with AWS
+     * Certificate Manager (ACM). When necessary, you can use this operation to
+     * change the certificate that you applied to your custom domain.
+     * </p>
+     * <p>
+     * Usually, this is unnecessary following routine certificate renewal with
+     * ACM. When you renew your existing certificate in ACM, the ARN for your
+     * certificate remains the same, and your custom domain uses the new
+     * certificate automatically.
+     * </p>
+     * <p>
+     * However, if you replace your existing certificate with a new one, ACM
+     * gives the new certificate a new ARN. To apply the new certificate to your
+     * custom domain, you must provide this ARN to Amazon Cognito.
+     * </p>
+     * <p>
+     * When you add your new certificate in ACM, you must choose US East (N.
+     * Virginia) as the AWS Region.
+     * </p>
+     * <p>
+     * After you submit your request, Amazon Cognito requires up to 1 hour to
+     * distribute your new certificate to your custom domain.
+     * </p>
+     * <p>
+     * For more information about adding a custom domain to your user pool, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html"
+     * >Using Your Own Domain for the Hosted UI</a>.
+     * </p>
+     * 
+     * @param updateUserPoolDomainRequest <p>
+     *            The UpdateUserPoolDomain request input.
+     *            </p>
+     * @return updateUserPoolDomainResult The response from the
+     *         UpdateUserPoolDomain service method, as returned by Amazon
+     *         Cognito Your User Pool.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws ResourceNotFoundException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Your User Pool indicating either a problem with the
+     *             data in the request, or a server side issue.
+     */
+    public UpdateUserPoolDomainResult updateUserPoolDomain(
+            UpdateUserPoolDomainRequest updateUserPoolDomainRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateUserPoolDomainRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateUserPoolDomainRequest> request = null;
+        Response<UpdateUserPoolDomainResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateUserPoolDomainRequestMarshaller()
+                        .marshall(updateUserPoolDomainRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateUserPoolDomainResult, JsonUnmarshallerContext> unmarshaller = new UpdateUserPoolDomainResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateUserPoolDomainResult> responseHandler = new JsonResponseHandler<UpdateUserPoolDomainResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Use this API to register a user's entered TOTP code and mark the user's
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
index 4abf99aac9..6346f9247c 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
@@ -76,7 +76,18 @@
 
     /**
      * <p>
-     * The write attributes.
+     * The user pool attributes that the app client can write to.
+     * </p>
+     * <p>
+     * If your app client allows users to sign in through an identity provider,
+     * this array must include all attributes that are mapped to identity
+     * provider attributes. Amazon Cognito updates mapped attributes when users
+     * sign in to your application through an identity provider. If your app
+     * client lacks write access to a mapped attribute, Amazon Cognito throws an
+     * error when it attempts to update the attribute. For more information, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
      * </p>
      */
     private java.util.List<String> writeAttributes;
@@ -547,11 +558,34 @@ public CreateUserPoolClientRequest withReadAttributes(
 
     /**
      * <p>
-     * The write attributes.
+     * The user pool attributes that the app client can write to.
+     * </p>
+     * <p>
+     * If your app client allows users to sign in through an identity provider,
+     * this array must include all attributes that are mapped to identity
+     * provider attributes. Amazon Cognito updates mapped attributes when users
+     * sign in to your application through an identity provider. If your app
+     * client lacks write access to a mapped attribute, Amazon Cognito throws an
+     * error when it attempts to update the attribute. For more information, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
      * </p>
      *
      * @return <p>
-     *         The write attributes.
+     *         The user pool attributes that the app client can write to.
+     *         </p>
+     *         <p>
+     *         If your app client allows users to sign in through an identity
+     *         provider, this array must include all attributes that are mapped
+     *         to identity provider attributes. Amazon Cognito updates mapped
+     *         attributes when users sign in to your application through an
+     *         identity provider. If your app client lacks write access to a
+     *         mapped attribute, Amazon Cognito throws an error when it attempts
+     *         to update the attribute. For more information, see <a href=
+     *         "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *         >Specifying Identity Provider Attribute Mappings for Your User
+     *         Pool</a>.
      *         </p>
      */
     public java.util.List<String> getWriteAttributes() {
@@ -560,11 +594,35 @@ public CreateUserPoolClientRequest withReadAttributes(
 
     /**
      * <p>
-     * The write attributes.
+     * The user pool attributes that the app client can write to.
+     * </p>
+     * <p>
+     * If your app client allows users to sign in through an identity provider,
+     * this array must include all attributes that are mapped to identity
+     * provider attributes. Amazon Cognito updates mapped attributes when users
+     * sign in to your application through an identity provider. If your app
+     * client lacks write access to a mapped attribute, Amazon Cognito throws an
+     * error when it attempts to update the attribute. For more information, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
      * </p>
      *
      * @param writeAttributes <p>
-     *            The write attributes.
+     *            The user pool attributes that the app client can write to.
+     *            </p>
+     *            <p>
+     *            If your app client allows users to sign in through an identity
+     *            provider, this array must include all attributes that are
+     *            mapped to identity provider attributes. Amazon Cognito updates
+     *            mapped attributes when users sign in to your application
+     *            through an identity provider. If your app client lacks write
+     *            access to a mapped attribute, Amazon Cognito throws an error
+     *            when it attempts to update the attribute. For more
+     *            information, see <a href=
+     *            "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *            >Specifying Identity Provider Attribute Mappings for Your User
+     *            Pool</a>.
      *            </p>
      */
     public void setWriteAttributes(java.util.Collection<String> writeAttributes) {
@@ -578,14 +636,38 @@ public void setWriteAttributes(java.util.Collection<String> writeAttributes) {
 
     /**
      * <p>
-     * The write attributes.
+     * The user pool attributes that the app client can write to.
+     * </p>
+     * <p>
+     * If your app client allows users to sign in through an identity provider,
+     * this array must include all attributes that are mapped to identity
+     * provider attributes. Amazon Cognito updates mapped attributes when users
+     * sign in to your application through an identity provider. If your app
+     * client lacks write access to a mapped attribute, Amazon Cognito throws an
+     * error when it attempts to update the attribute. For more information, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param writeAttributes <p>
-     *            The write attributes.
+     *            The user pool attributes that the app client can write to.
+     *            </p>
+     *            <p>
+     *            If your app client allows users to sign in through an identity
+     *            provider, this array must include all attributes that are
+     *            mapped to identity provider attributes. Amazon Cognito updates
+     *            mapped attributes when users sign in to your application
+     *            through an identity provider. If your app client lacks write
+     *            access to a mapped attribute, Amazon Cognito throws an error
+     *            when it attempts to update the attribute. For more
+     *            information, see <a href=
+     *            "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *            >Specifying Identity Provider Attribute Mappings for Your User
+     *            Pool</a>.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -602,14 +684,38 @@ public CreateUserPoolClientRequest withWriteAttributes(String... writeAttributes
 
     /**
      * <p>
-     * The write attributes.
+     * The user pool attributes that the app client can write to.
+     * </p>
+     * <p>
+     * If your app client allows users to sign in through an identity provider,
+     * this array must include all attributes that are mapped to identity
+     * provider attributes. Amazon Cognito updates mapped attributes when users
+     * sign in to your application through an identity provider. If your app
+     * client lacks write access to a mapped attribute, Amazon Cognito throws an
+     * error when it attempts to update the attribute. For more information, see
+     * <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param writeAttributes <p>
-     *            The write attributes.
+     *            The user pool attributes that the app client can write to.
+     *            </p>
+     *            <p>
+     *            If your app client allows users to sign in through an identity
+     *            provider, this array must include all attributes that are
+     *            mapped to identity provider attributes. Amazon Cognito updates
+     *            mapped attributes when users sign in to your application
+     *            through an identity provider. If your app client lacks write
+     *            access to a mapped attribute, Amazon Cognito throws an error
+     *            when it attempts to update the attribute. For more
+     *            information, see <a href=
+     *            "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *            >Specifying Identity Provider Attribute Mappings for Your User
+     *            Pool</a>.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolDomainRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolDomainRequest.java
index 0551d77f57..55e4f04ee7 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolDomainRequest.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolDomainRequest.java
@@ -53,7 +53,7 @@
      * webpages for your application.
      * </p>
      * <p>
-     * Provide this parameter only if you want to use own custom domain for your
+     * Provide this parameter only if you want to use a custom domain for your
      * user pool. Otherwise, you can exclude this parameter and use the Amazon
      * Cognito hosted domain instead.
      * </p>
@@ -186,7 +186,7 @@ public CreateUserPoolDomainRequest withUserPoolId(String userPoolId) {
      * webpages for your application.
      * </p>
      * <p>
-     * Provide this parameter only if you want to use own custom domain for your
+     * Provide this parameter only if you want to use a custom domain for your
      * user pool. Otherwise, you can exclude this parameter and use the Amazon
      * Cognito hosted domain instead.
      * </p>
@@ -202,7 +202,7 @@ public CreateUserPoolDomainRequest withUserPoolId(String userPoolId) {
      *         sign-in webpages for your application.
      *         </p>
      *         <p>
-     *         Provide this parameter only if you want to use own custom domain
+     *         Provide this parameter only if you want to use a custom domain
      *         for your user pool. Otherwise, you can exclude this parameter and
      *         use the Amazon Cognito hosted domain instead.
      *         </p>
@@ -223,7 +223,7 @@ public CustomDomainConfigType getCustomDomainConfig() {
      * webpages for your application.
      * </p>
      * <p>
-     * Provide this parameter only if you want to use own custom domain for your
+     * Provide this parameter only if you want to use a custom domain for your
      * user pool. Otherwise, you can exclude this parameter and use the Amazon
      * Cognito hosted domain instead.
      * </p>
@@ -239,9 +239,9 @@ public CustomDomainConfigType getCustomDomainConfig() {
      *            and sign-in webpages for your application.
      *            </p>
      *            <p>
-     *            Provide this parameter only if you want to use own custom
-     *            domain for your user pool. Otherwise, you can exclude this
-     *            parameter and use the Amazon Cognito hosted domain instead.
+     *            Provide this parameter only if you want to use a custom domain
+     *            for your user pool. Otherwise, you can exclude this parameter
+     *            and use the Amazon Cognito hosted domain instead.
      *            </p>
      *            <p>
      *            For more information about the hosted domain and custom
@@ -260,7 +260,7 @@ public void setCustomDomainConfig(CustomDomainConfigType customDomainConfig) {
      * webpages for your application.
      * </p>
      * <p>
-     * Provide this parameter only if you want to use own custom domain for your
+     * Provide this parameter only if you want to use a custom domain for your
      * user pool. Otherwise, you can exclude this parameter and use the Amazon
      * Cognito hosted domain instead.
      * </p>
@@ -279,9 +279,9 @@ public void setCustomDomainConfig(CustomDomainConfigType customDomainConfig) {
      *            and sign-in webpages for your application.
      *            </p>
      *            <p>
-     *            Provide this parameter only if you want to use own custom
-     *            domain for your user pool. Otherwise, you can exclude this
-     *            parameter and use the Amazon Cognito hosted domain instead.
+     *            Provide this parameter only if you want to use a custom domain
+     *            for your user pool. Otherwise, you can exclude this parameter
+     *            and use the Amazon Cognito hosted domain instead.
      *            </p>
      *            <p>
      *            For more information about the hosted domain and custom
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
index 8390c5fe16..10da8bb1b1 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
@@ -55,6 +55,16 @@
      * <p>
      * Specifies whether the value of the attribute can be changed.
      * </p>
+     * <p>
+     * For any user pool attribute that's mapped to an identity provider
+     * attribute, you must set this parameter to <code>true</code>. Amazon
+     * Cognito updates mapped attributes when users sign in to your application
+     * through an identity provider. If an attribute is immutable, Amazon
+     * Cognito throws an error when it attempts to update the attribute. For
+     * more information, see <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
+     * </p>
      */
     private Boolean mutable;
 
@@ -297,10 +307,31 @@ public SchemaAttributeType withDeveloperOnlyAttribute(Boolean developerOnlyAttri
      * <p>
      * Specifies whether the value of the attribute can be changed.
      * </p>
+     * <p>
+     * For any user pool attribute that's mapped to an identity provider
+     * attribute, you must set this parameter to <code>true</code>. Amazon
+     * Cognito updates mapped attributes when users sign in to your application
+     * through an identity provider. If an attribute is immutable, Amazon
+     * Cognito throws an error when it attempts to update the attribute. For
+     * more information, see <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
+     * </p>
      *
      * @return <p>
      *         Specifies whether the value of the attribute can be changed.
      *         </p>
+     *         <p>
+     *         For any user pool attribute that's mapped to an identity provider
+     *         attribute, you must set this parameter to <code>true</code>.
+     *         Amazon Cognito updates mapped attributes when users sign in to
+     *         your application through an identity provider. If an attribute is
+     *         immutable, Amazon Cognito throws an error when it attempts to
+     *         update the attribute. For more information, see <a href=
+     *         "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *         >Specifying Identity Provider Attribute Mappings for Your User
+     *         Pool</a>.
+     *         </p>
      */
     public Boolean isMutable() {
         return mutable;
@@ -310,10 +341,31 @@ public Boolean isMutable() {
      * <p>
      * Specifies whether the value of the attribute can be changed.
      * </p>
+     * <p>
+     * For any user pool attribute that's mapped to an identity provider
+     * attribute, you must set this parameter to <code>true</code>. Amazon
+     * Cognito updates mapped attributes when users sign in to your application
+     * through an identity provider. If an attribute is immutable, Amazon
+     * Cognito throws an error when it attempts to update the attribute. For
+     * more information, see <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
+     * </p>
      *
      * @return <p>
      *         Specifies whether the value of the attribute can be changed.
      *         </p>
+     *         <p>
+     *         For any user pool attribute that's mapped to an identity provider
+     *         attribute, you must set this parameter to <code>true</code>.
+     *         Amazon Cognito updates mapped attributes when users sign in to
+     *         your application through an identity provider. If an attribute is
+     *         immutable, Amazon Cognito throws an error when it attempts to
+     *         update the attribute. For more information, see <a href=
+     *         "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *         >Specifying Identity Provider Attribute Mappings for Your User
+     *         Pool</a>.
+     *         </p>
      */
     public Boolean getMutable() {
         return mutable;
@@ -323,10 +375,32 @@ public Boolean getMutable() {
      * <p>
      * Specifies whether the value of the attribute can be changed.
      * </p>
+     * <p>
+     * For any user pool attribute that's mapped to an identity provider
+     * attribute, you must set this parameter to <code>true</code>. Amazon
+     * Cognito updates mapped attributes when users sign in to your application
+     * through an identity provider. If an attribute is immutable, Amazon
+     * Cognito throws an error when it attempts to update the attribute. For
+     * more information, see <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
+     * </p>
      *
      * @param mutable <p>
      *            Specifies whether the value of the attribute can be changed.
      *            </p>
+     *            <p>
+     *            For any user pool attribute that's mapped to an identity
+     *            provider attribute, you must set this parameter to
+     *            <code>true</code>. Amazon Cognito updates mapped attributes
+     *            when users sign in to your application through an identity
+     *            provider. If an attribute is immutable, Amazon Cognito throws
+     *            an error when it attempts to update the attribute. For more
+     *            information, see <a href=
+     *            "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *            >Specifying Identity Provider Attribute Mappings for Your User
+     *            Pool</a>.
+     *            </p>
      */
     public void setMutable(Boolean mutable) {
         this.mutable = mutable;
@@ -337,12 +411,34 @@ public void setMutable(Boolean mutable) {
      * Specifies whether the value of the attribute can be changed.
      * </p>
      * <p>
+     * For any user pool attribute that's mapped to an identity provider
+     * attribute, you must set this parameter to <code>true</code>. Amazon
+     * Cognito updates mapped attributes when users sign in to your application
+     * through an identity provider. If an attribute is immutable, Amazon
+     * Cognito throws an error when it attempts to update the attribute. For
+     * more information, see <a href=
+     * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     * >Specifying Identity Provider Attribute Mappings for Your User Pool</a>.
+     * </p>
+     * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param mutable <p>
      *            Specifies whether the value of the attribute can be changed.
      *            </p>
+     *            <p>
+     *            For any user pool attribute that's mapped to an identity
+     *            provider attribute, you must set this parameter to
+     *            <code>true</code>. Amazon Cognito updates mapped attributes
+     *            when users sign in to your application through an identity
+     *            provider. If an attribute is immutable, Amazon Cognito throws
+     *            an error when it attempts to update the attribute. For more
+     *            information, see <a href=
+     *            "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html"
+     *            >Specifying Identity Provider Attribute Mappings for Your User
+     *            Pool</a>.
+     *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainRequest.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainRequest.java
new file mode 100644
index 0000000000..0565ce5f0c
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainRequest.java
@@ -0,0 +1,381 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Updates the Secure Sockets Layer (SSL) certificate for the custom domain for
+ * your user pool.
+ * </p>
+ * <p>
+ * You can use this operation to provide the Amazon Resource Name (ARN) of a new
+ * certificate to Amazon Cognito. You cannot use it to change the domain for a
+ * user pool.
+ * </p>
+ * <p>
+ * A custom domain is used to host the Amazon Cognito hosted UI, which provides
+ * sign-up and sign-in pages for your application. When you set up a custom
+ * domain, you provide a certificate that you manage with AWS Certificate
+ * Manager (ACM). When necessary, you can use this operation to change the
+ * certificate that you applied to your custom domain.
+ * </p>
+ * <p>
+ * Usually, this is unnecessary following routine certificate renewal with ACM.
+ * When you renew your existing certificate in ACM, the ARN for your certificate
+ * remains the same, and your custom domain uses the new certificate
+ * automatically.
+ * </p>
+ * <p>
+ * However, if you replace your existing certificate with a new one, ACM gives
+ * the new certificate a new ARN. To apply the new certificate to your custom
+ * domain, you must provide this ARN to Amazon Cognito.
+ * </p>
+ * <p>
+ * When you add your new certificate in ACM, you must choose US East (N.
+ * Virginia) as the AWS Region.
+ * </p>
+ * <p>
+ * After you submit your request, Amazon Cognito requires up to 1 hour to
+ * distribute your new certificate to your custom domain.
+ * </p>
+ * <p>
+ * For more information about adding a custom domain to your user pool, see <a
+ * href=
+ * "http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html"
+ * >Using Your Own Domain for the Hosted UI</a>.
+ * </p>
+ */
+public class UpdateUserPoolDomainRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The domain name for the custom domain that hosts the sign-up and sign-in
+     * pages for your application. For example: <code>auth.example.com</code>.
+     * </p>
+     * <p>
+     * This string can include only lowercase letters, numbers, and hyphens. Do
+     * not use a hyphen for the first or last character. Use periods to separate
+     * subdomain names.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     */
+    private String domain;
+
+    /**
+     * <p>
+     * The ID of the user pool that is associated with the custom domain that
+     * you are updating the certificate for.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+_[0-9a-zA-Z]+<br/>
+     */
+    private String userPoolId;
+
+    /**
+     * <p>
+     * The configuration for a custom domain that hosts the sign-up and sign-in
+     * pages for your application. Use this object to specify an SSL certificate
+     * that is managed by ACM.
+     * </p>
+     */
+    private CustomDomainConfigType customDomainConfig;
+
+    /**
+     * <p>
+     * The domain name for the custom domain that hosts the sign-up and sign-in
+     * pages for your application. For example: <code>auth.example.com</code>.
+     * </p>
+     * <p>
+     * This string can include only lowercase letters, numbers, and hyphens. Do
+     * not use a hyphen for the first or last character. Use periods to separate
+     * subdomain names.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @return <p>
+     *         The domain name for the custom domain that hosts the sign-up and
+     *         sign-in pages for your application. For example:
+     *         <code>auth.example.com</code>.
+     *         </p>
+     *         <p>
+     *         This string can include only lowercase letters, numbers, and
+     *         hyphens. Do not use a hyphen for the first or last character. Use
+     *         periods to separate subdomain names.
+     *         </p>
+     */
+    public String getDomain() {
+        return domain;
+    }
+
+    /**
+     * <p>
+     * The domain name for the custom domain that hosts the sign-up and sign-in
+     * pages for your application. For example: <code>auth.example.com</code>.
+     * </p>
+     * <p>
+     * This string can include only lowercase letters, numbers, and hyphens. Do
+     * not use a hyphen for the first or last character. Use periods to separate
+     * subdomain names.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @param domain <p>
+     *            The domain name for the custom domain that hosts the sign-up
+     *            and sign-in pages for your application. For example:
+     *            <code>auth.example.com</code>.
+     *            </p>
+     *            <p>
+     *            This string can include only lowercase letters, numbers, and
+     *            hyphens. Do not use a hyphen for the first or last character.
+     *            Use periods to separate subdomain names.
+     *            </p>
+     */
+    public void setDomain(String domain) {
+        this.domain = domain;
+    }
+
+    /**
+     * <p>
+     * The domain name for the custom domain that hosts the sign-up and sign-in
+     * pages for your application. For example: <code>auth.example.com</code>.
+     * </p>
+     * <p>
+     * This string can include only lowercase letters, numbers, and hyphens. Do
+     * not use a hyphen for the first or last character. Use periods to separate
+     * subdomain names.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @param domain <p>
+     *            The domain name for the custom domain that hosts the sign-up
+     *            and sign-in pages for your application. For example:
+     *            <code>auth.example.com</code>.
+     *            </p>
+     *            <p>
+     *            This string can include only lowercase letters, numbers, and
+     *            hyphens. Do not use a hyphen for the first or last character.
+     *            Use periods to separate subdomain names.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateUserPoolDomainRequest withDomain(String domain) {
+        this.domain = domain;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ID of the user pool that is associated with the custom domain that
+     * you are updating the certificate for.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+_[0-9a-zA-Z]+<br/>
+     *
+     * @return <p>
+     *         The ID of the user pool that is associated with the custom domain
+     *         that you are updating the certificate for.
+     *         </p>
+     */
+    public String getUserPoolId() {
+        return userPoolId;
+    }
+
+    /**
+     * <p>
+     * The ID of the user pool that is associated with the custom domain that
+     * you are updating the certificate for.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+_[0-9a-zA-Z]+<br/>
+     *
+     * @param userPoolId <p>
+     *            The ID of the user pool that is associated with the custom
+     *            domain that you are updating the certificate for.
+     *            </p>
+     */
+    public void setUserPoolId(String userPoolId) {
+        this.userPoolId = userPoolId;
+    }
+
+    /**
+     * <p>
+     * The ID of the user pool that is associated with the custom domain that
+     * you are updating the certificate for.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+_[0-9a-zA-Z]+<br/>
+     *
+     * @param userPoolId <p>
+     *            The ID of the user pool that is associated with the custom
+     *            domain that you are updating the certificate for.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateUserPoolDomainRequest withUserPoolId(String userPoolId) {
+        this.userPoolId = userPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The configuration for a custom domain that hosts the sign-up and sign-in
+     * pages for your application. Use this object to specify an SSL certificate
+     * that is managed by ACM.
+     * </p>
+     *
+     * @return <p>
+     *         The configuration for a custom domain that hosts the sign-up and
+     *         sign-in pages for your application. Use this object to specify an
+     *         SSL certificate that is managed by ACM.
+     *         </p>
+     */
+    public CustomDomainConfigType getCustomDomainConfig() {
+        return customDomainConfig;
+    }
+
+    /**
+     * <p>
+     * The configuration for a custom domain that hosts the sign-up and sign-in
+     * pages for your application. Use this object to specify an SSL certificate
+     * that is managed by ACM.
+     * </p>
+     *
+     * @param customDomainConfig <p>
+     *            The configuration for a custom domain that hosts the sign-up
+     *            and sign-in pages for your application. Use this object to
+     *            specify an SSL certificate that is managed by ACM.
+     *            </p>
+     */
+    public void setCustomDomainConfig(CustomDomainConfigType customDomainConfig) {
+        this.customDomainConfig = customDomainConfig;
+    }
+
+    /**
+     * <p>
+     * The configuration for a custom domain that hosts the sign-up and sign-in
+     * pages for your application. Use this object to specify an SSL certificate
+     * that is managed by ACM.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param customDomainConfig <p>
+     *            The configuration for a custom domain that hosts the sign-up
+     *            and sign-in pages for your application. Use this object to
+     *            specify an SSL certificate that is managed by ACM.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateUserPoolDomainRequest withCustomDomainConfig(
+            CustomDomainConfigType customDomainConfig) {
+        this.customDomainConfig = customDomainConfig;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getDomain() != null)
+            sb.append("Domain: " + getDomain() + ",");
+        if (getUserPoolId() != null)
+            sb.append("UserPoolId: " + getUserPoolId() + ",");
+        if (getCustomDomainConfig() != null)
+            sb.append("CustomDomainConfig: " + getCustomDomainConfig());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getDomain() == null) ? 0 : getDomain().hashCode());
+        hashCode = prime * hashCode + ((getUserPoolId() == null) ? 0 : getUserPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getCustomDomainConfig() == null) ? 0 : getCustomDomainConfig().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateUserPoolDomainRequest == false)
+            return false;
+        UpdateUserPoolDomainRequest other = (UpdateUserPoolDomainRequest) obj;
+
+        if (other.getDomain() == null ^ this.getDomain() == null)
+            return false;
+        if (other.getDomain() != null && other.getDomain().equals(this.getDomain()) == false)
+            return false;
+        if (other.getUserPoolId() == null ^ this.getUserPoolId() == null)
+            return false;
+        if (other.getUserPoolId() != null
+                && other.getUserPoolId().equals(this.getUserPoolId()) == false)
+            return false;
+        if (other.getCustomDomainConfig() == null ^ this.getCustomDomainConfig() == null)
+            return false;
+        if (other.getCustomDomainConfig() != null
+                && other.getCustomDomainConfig().equals(this.getCustomDomainConfig()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainResult.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainResult.java
new file mode 100644
index 0000000000..3557a38b08
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolDomainResult.java
@@ -0,0 +1,146 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The UpdateUserPoolDomain response output.
+ * </p>
+ */
+public class UpdateUserPoolDomainResult implements Serializable {
+    /**
+     * <p>
+     * The Amazon CloudFront endpoint that Amazon Cognito set up when you added
+     * the custom domain to your user pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     */
+    private String cloudFrontDomain;
+
+    /**
+     * <p>
+     * The Amazon CloudFront endpoint that Amazon Cognito set up when you added
+     * the custom domain to your user pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @return <p>
+     *         The Amazon CloudFront endpoint that Amazon Cognito set up when
+     *         you added the custom domain to your user pool.
+     *         </p>
+     */
+    public String getCloudFrontDomain() {
+        return cloudFrontDomain;
+    }
+
+    /**
+     * <p>
+     * The Amazon CloudFront endpoint that Amazon Cognito set up when you added
+     * the custom domain to your user pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @param cloudFrontDomain <p>
+     *            The Amazon CloudFront endpoint that Amazon Cognito set up when
+     *            you added the custom domain to your user pool.
+     *            </p>
+     */
+    public void setCloudFrontDomain(String cloudFrontDomain) {
+        this.cloudFrontDomain = cloudFrontDomain;
+    }
+
+    /**
+     * <p>
+     * The Amazon CloudFront endpoint that Amazon Cognito set up when you added
+     * the custom domain to your user pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 63<br/>
+     * <b>Pattern: </b>^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$<br/>
+     *
+     * @param cloudFrontDomain <p>
+     *            The Amazon CloudFront endpoint that Amazon Cognito set up when
+     *            you added the custom domain to your user pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateUserPoolDomainResult withCloudFrontDomain(String cloudFrontDomain) {
+        this.cloudFrontDomain = cloudFrontDomain;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getCloudFrontDomain() != null)
+            sb.append("CloudFrontDomain: " + getCloudFrontDomain());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getCloudFrontDomain() == null) ? 0 : getCloudFrontDomain().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateUserPoolDomainResult == false)
+            return false;
+        UpdateUserPoolDomainResult other = (UpdateUserPoolDomainResult) obj;
+
+        if (other.getCloudFrontDomain() == null ^ this.getCloudFrontDomain() == null)
+            return false;
+        if (other.getCloudFrontDomain() != null
+                && other.getCloudFrontDomain().equals(this.getCloudFrontDomain()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainRequestMarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainRequestMarshaller.java
new file mode 100644
index 0000000000..42bdacacad
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainRequestMarshaller.java
@@ -0,0 +1,97 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentityprovider.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateUserPoolDomainRequest
+ */
+public class UpdateUserPoolDomainRequestMarshaller implements
+        Marshaller<Request<UpdateUserPoolDomainRequest>, UpdateUserPoolDomainRequest> {
+
+    public Request<UpdateUserPoolDomainRequest> marshall(
+            UpdateUserPoolDomainRequest updateUserPoolDomainRequest) {
+        if (updateUserPoolDomainRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateUserPoolDomainRequest)");
+        }
+
+        Request<UpdateUserPoolDomainRequest> request = new DefaultRequest<UpdateUserPoolDomainRequest>(
+                updateUserPoolDomainRequest, "AmazonCognitoIdentityProvider");
+        String target = "AWSCognitoIdentityProviderService.UpdateUserPoolDomain";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (updateUserPoolDomainRequest.getDomain() != null) {
+                String domain = updateUserPoolDomainRequest.getDomain();
+                jsonWriter.name("Domain");
+                jsonWriter.value(domain);
+            }
+            if (updateUserPoolDomainRequest.getUserPoolId() != null) {
+                String userPoolId = updateUserPoolDomainRequest.getUserPoolId();
+                jsonWriter.name("UserPoolId");
+                jsonWriter.value(userPoolId);
+            }
+            if (updateUserPoolDomainRequest.getCustomDomainConfig() != null) {
+                CustomDomainConfigType customDomainConfig = updateUserPoolDomainRequest
+                        .getCustomDomainConfig();
+                jsonWriter.name("CustomDomainConfig");
+                CustomDomainConfigTypeJsonMarshaller.getInstance().marshall(customDomainConfig,
+                        jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainResultJsonUnmarshaller.java b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..38121373e8
--- /dev/null
+++ b/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolDomainResultJsonUnmarshaller.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentityprovider.model.transform;
+
+import com.amazonaws.services.cognitoidentityprovider.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateUserPoolDomainResult
+ */
+public class UpdateUserPoolDomainResultJsonUnmarshaller implements
+        Unmarshaller<UpdateUserPoolDomainResult, JsonUnmarshallerContext> {
+
+    public UpdateUserPoolDomainResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateUserPoolDomainResult updateUserPoolDomainResult = new UpdateUserPoolDomainResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("CloudFrontDomain")) {
+                updateUserPoolDomainResult.setCloudFrontDomain(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return updateUserPoolDomainResult;
+    }
+
+    private static UpdateUserPoolDomainResultJsonUnmarshaller instance;
+
+    public static UpdateUserPoolDomainResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateUserPoolDomainResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-comprehend/pom.xml b/aws-android-sdk-comprehend/pom.xml
index 4bfc497e13..a1f6715ce5 100644
--- a/aws-android-sdk-comprehend/pom.xml
+++ b/aws-android-sdk-comprehend/pom.xml
@@ -11,14 +11,14 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.11.0</version>
+        <version>2.12.0</version>
     </parent>
     <dependencies>
         <dependency>
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.11.0</version>
+            <version>2.12.0</version>
         </dependency>
     </dependencies>
     <build>
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehend.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehend.java
index df249c0102..33161e1cbf 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehend.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehend.java
@@ -231,7 +231,8 @@ BatchDetectSyntaxResult batchDetectSyntax(BatchDetectSyntaxRequest batchDetectSy
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -1222,6 +1223,72 @@ StopSentimentDetectionJobResult stopSentimentDetectionJob(
             StopSentimentDetectionJobRequest stopSentimentDetectionJobRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @return stopTrainingDocumentClassifierResult The response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    StopTrainingDocumentClassifierResult stopTrainingDocumentClassifier(
+            StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @return stopTrainingEntityRecognizerResult The response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    StopTrainingEntityRecognizerResult stopTrainingEntityRecognizer(
+            StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Shuts down this client object, releasing any resources that might be held
      * open. This is an optional method, and callers are not expected to call
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsync.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsync.java
index 6625833f84..bbb9e81dfd 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsync.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsync.java
@@ -341,7 +341,8 @@
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -372,7 +373,8 @@
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -2509,4 +2511,146 @@
             AsyncHandler<StopSentimentDetectionJobRequest, StopSentimentDetectionJobResult> asyncHandler)
             throws AmazonServiceException, AmazonClientException;
 
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<StopTrainingDocumentClassifierResult> stopTrainingDocumentClassifierAsync(
+            StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<StopTrainingDocumentClassifierResult> stopTrainingDocumentClassifierAsync(
+            StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest,
+            AsyncHandler<StopTrainingDocumentClassifierRequest, StopTrainingDocumentClassifierResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<StopTrainingEntityRecognizerResult> stopTrainingEntityRecognizerAsync(
+            StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest)
+            throws AmazonServiceException, AmazonClientException;
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @param asyncHandler Asynchronous callback handler for events in the
+     *            life-cycle of the request. Users could provide the
+     *            implementation of the four callback methods in this interface
+     *            to process the operation result or handle the exception.
+     * @return A Java Future object containing the response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    Future<StopTrainingEntityRecognizerResult> stopTrainingEntityRecognizerAsync(
+            StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest,
+            AsyncHandler<StopTrainingEntityRecognizerRequest, StopTrainingEntityRecognizerResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException;
+
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsyncClient.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsyncClient.java
index c7249aff08..3e0fce24b5 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsyncClient.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendAsyncClient.java
@@ -649,7 +649,8 @@ public BatchDetectSyntaxResult call() throws Exception {
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -686,7 +687,8 @@ public CreateDocumentClassifierResult call() throws Exception {
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -3382,4 +3384,178 @@ public StopSentimentDetectionJobResult call() throws Exception {
         });
     }
 
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<StopTrainingDocumentClassifierResult> stopTrainingDocumentClassifierAsync(
+            final StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<StopTrainingDocumentClassifierResult>() {
+            public StopTrainingDocumentClassifierResult call() throws Exception {
+                return stopTrainingDocumentClassifier(stopTrainingDocumentClassifierRequest);
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<StopTrainingDocumentClassifierResult> stopTrainingDocumentClassifierAsync(
+            final StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest,
+            final AsyncHandler<StopTrainingDocumentClassifierRequest, StopTrainingDocumentClassifierResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<StopTrainingDocumentClassifierResult>() {
+            public StopTrainingDocumentClassifierResult call() throws Exception {
+                StopTrainingDocumentClassifierResult result = null;
+                try {
+                    result = stopTrainingDocumentClassifier(stopTrainingDocumentClassifierRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(stopTrainingDocumentClassifierRequest, result);
+                return result;
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<StopTrainingEntityRecognizerResult> stopTrainingEntityRecognizerAsync(
+            final StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<StopTrainingEntityRecognizerResult>() {
+            public StopTrainingEntityRecognizerResult call() throws Exception {
+                return stopTrainingEntityRecognizer(stopTrainingEntityRecognizerRequest);
+            }
+        });
+    }
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @return A Java Future object containing the response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public Future<StopTrainingEntityRecognizerResult> stopTrainingEntityRecognizerAsync(
+            final StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest,
+            final AsyncHandler<StopTrainingEntityRecognizerRequest, StopTrainingEntityRecognizerResult> asyncHandler)
+            throws AmazonServiceException, AmazonClientException {
+        return executorService.submit(new Callable<StopTrainingEntityRecognizerResult>() {
+            public StopTrainingEntityRecognizerResult call() throws Exception {
+                StopTrainingEntityRecognizerResult result = null;
+                try {
+                    result = stopTrainingEntityRecognizer(stopTrainingEntityRecognizerRequest);
+                } catch (Exception ex) {
+                    asyncHandler.onError(ex);
+                    throw ex;
+                }
+                asyncHandler.onSuccess(stopTrainingEntityRecognizerRequest, result);
+                return result;
+            }
+        });
+    }
+
 }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendClient.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendClient.java
index dda4c6952b..4d23fe8092 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendClient.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/AmazonComprehendClient.java
@@ -571,7 +571,8 @@ public BatchDetectSyntaxResult batchDetectSyntax(
      * documents. To create a classifier you provide a set of training documents
      * that labeled with the categories that you want to use. After the
      * classifier is trained you can use it to categorize a set of labeled
-     * documents into the categories.
+     * documents into the categories. For more information, see
+     * <a>how-document-classification</a>.
      * </p>
      * 
      * @param createDocumentClassifierRequest
@@ -2503,6 +2504,126 @@ public StopSentimentDetectionJobResult stopSentimentDetectionJob(
         }
     }
 
+    /**
+     * <p>
+     * Stops a document classifier training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and put into
+     * the <code>STOPPED</code> state and the service sends back an HTTP 200
+     * response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingDocumentClassifierRequest
+     * @return stopTrainingDocumentClassifierResult The response from the
+     *         StopTrainingDocumentClassifier service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public StopTrainingDocumentClassifierResult stopTrainingDocumentClassifier(
+            StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(stopTrainingDocumentClassifierRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<StopTrainingDocumentClassifierRequest> request = null;
+        Response<StopTrainingDocumentClassifierResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new StopTrainingDocumentClassifierRequestMarshaller()
+                        .marshall(stopTrainingDocumentClassifierRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<StopTrainingDocumentClassifierResult, JsonUnmarshallerContext> unmarshaller = new StopTrainingDocumentClassifierResultJsonUnmarshaller();
+            JsonResponseHandler<StopTrainingDocumentClassifierResult> responseHandler = new JsonResponseHandler<StopTrainingDocumentClassifierResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Stops an entity recognizer training job while in progress.
+     * </p>
+     * <p>
+     * If the training job state is <code>TRAINING</code>, the job is marked for
+     * termination and put into the <code>STOP_REQUESTED</code> state. If the
+     * training job completes before it can be stopped, it is put into the
+     * <code>TRAINED</code>; otherwise the training job is stopped and putted
+     * into the <code>STOPPED</code> state and the service sends back an HTTP
+     * 200 response with an empty HTTP body.
+     * </p>
+     * 
+     * @param stopTrainingEntityRecognizerRequest
+     * @return stopTrainingEntityRecognizerResult The response from the
+     *         StopTrainingEntityRecognizer service method, as returned by
+     *         Amazon Comprehend.
+     * @throws InvalidRequestException
+     * @throws TooManyRequestsException
+     * @throws ResourceNotFoundException
+     * @throws InternalServerException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Comprehend indicating either a problem with the data in the
+     *             request, or a server side issue.
+     */
+    public StopTrainingEntityRecognizerResult stopTrainingEntityRecognizer(
+            StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(stopTrainingEntityRecognizerRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<StopTrainingEntityRecognizerRequest> request = null;
+        Response<StopTrainingEntityRecognizerResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new StopTrainingEntityRecognizerRequestMarshaller()
+                        .marshall(stopTrainingEntityRecognizerRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<StopTrainingEntityRecognizerResult, JsonUnmarshallerContext> unmarshaller = new StopTrainingEntityRecognizerResultJsonUnmarshaller();
+            JsonResponseHandler<StopTrainingEntityRecognizerResult> responseHandler = new JsonResponseHandler<StopTrainingEntityRecognizerResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * Returns additional metadata for a previously executed successful,
      * request, typically used for debugging issues where a service isn't acting
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/CreateDocumentClassifierRequest.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/CreateDocumentClassifierRequest.java
index 1fd6075050..3a8db32da2 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/CreateDocumentClassifierRequest.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/CreateDocumentClassifierRequest.java
@@ -24,7 +24,8 @@
  * Creates a new document classifier that you can use to categorize documents.
  * To create a classifier you provide a set of training documents that labeled
  * with the categories that you want to use. After the classifier is trained you
- * can use it to categorize a set of labeled documents into the categories.
+ * can use it to categorize a set of labeled documents into the categories. For
+ * more information, see <a>how-document-classification</a>.
  * </p>
  */
 public class CreateDocumentClassifierRequest extends AmazonWebServiceRequest implements
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierFilter.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierFilter.java
index 81e0858856..62cf699dc6 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierFilter.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierFilter.java
@@ -31,7 +31,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      */
     private String status;
 
@@ -61,7 +62,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @return <p>
      *         Filters the list of classifiers based on status.
@@ -78,7 +80,8 @@ public String getStatus() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Filters the list of classifiers based on status.
@@ -98,7 +101,8 @@ public void setStatus(String status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Filters the list of classifiers based on status.
@@ -118,7 +122,8 @@ public DocumentClassifierFilter withStatus(String status) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Filters the list of classifiers based on status.
@@ -138,7 +143,8 @@ public void setStatus(ModelStatus status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Filters the list of classifiers based on status.
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierProperties.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierProperties.java
index 5a7376804c..265556dbc2 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierProperties.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/DocumentClassifierProperties.java
@@ -49,14 +49,15 @@
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      */
     private String status;
 
@@ -304,17 +305,18 @@ public DocumentClassifierProperties withLanguageCode(LanguageCode languageCode)
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @return <p>
-     *         The status of the document classifier. The the status is
+     *         The status of the document classifier. If the status is
      *         <code>TRAINED</code> the classifier is ready to use. If the
      *         status is <code>FAILED</code> you can see additional information
      *         about why the classifier wasn't trained in the
@@ -328,17 +330,18 @@ public String getStatus() {
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
-     *            The status of the document classifier. The the status is
+     *            The status of the document classifier. If the status is
      *            <code>TRAINED</code> the classifier is ready to use. If the
      *            status is <code>FAILED</code> you can see additional
      *            information about why the classifier wasn't trained in the
@@ -352,7 +355,7 @@ public void setStatus(String status) {
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
@@ -362,10 +365,11 @@ public void setStatus(String status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
-     *            The status of the document classifier. The the status is
+     *            The status of the document classifier. If the status is
      *            <code>TRAINED</code> the classifier is ready to use. If the
      *            status is <code>FAILED</code> you can see additional
      *            information about why the classifier wasn't trained in the
@@ -382,17 +386,18 @@ public DocumentClassifierProperties withStatus(String status) {
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
-     *            The status of the document classifier. The the status is
+     *            The status of the document classifier. If the status is
      *            <code>TRAINED</code> the classifier is ready to use. If the
      *            status is <code>FAILED</code> you can see additional
      *            information about why the classifier wasn't trained in the
@@ -406,7 +411,7 @@ public void setStatus(ModelStatus status) {
 
     /**
      * <p>
-     * The status of the document classifier. The the status is
+     * The status of the document classifier. If the status is
      * <code>TRAINED</code> the classifier is ready to use. If the status is
      * <code>FAILED</code> you can see additional information about why the
      * classifier wasn't trained in the <code>Message</code> field.
@@ -416,10 +421,11 @@ public void setStatus(ModelStatus status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
-     *            The status of the document classifier. The the status is
+     *            The status of the document classifier. If the status is
      *            <code>TRAINED</code> the classifier is ready to use. If the
      *            status is <code>FAILED</code> you can see additional
      *            information about why the classifier wasn't trained in the
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerFilter.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerFilter.java
index 0bc22be978..e333e3b42c 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerFilter.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerFilter.java
@@ -31,7 +31,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      */
     private String status;
 
@@ -59,7 +60,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @return <p>
      *         The status of an entity recognizer.
@@ -76,7 +78,8 @@ public String getStatus() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            The status of an entity recognizer.
@@ -96,7 +99,8 @@ public void setStatus(String status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            The status of an entity recognizer.
@@ -116,7 +120,8 @@ public EntityRecognizerFilter withStatus(String status) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            The status of an entity recognizer.
@@ -136,7 +141,8 @@ public void setStatus(ModelStatus status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            The status of an entity recognizer.
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerProperties.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerProperties.java
index baffaf00ca..05850bc9b0 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerProperties.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/EntityRecognizerProperties.java
@@ -53,7 +53,8 @@
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      */
     private String status;
 
@@ -297,7 +298,8 @@ public EntityRecognizerProperties withLanguageCode(LanguageCode languageCode) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @return <p>
      *         Provides the status of the entity recognizer.
@@ -314,7 +316,8 @@ public String getStatus() {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Provides the status of the entity recognizer.
@@ -334,7 +337,8 @@ public void setStatus(String status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Provides the status of the entity recognizer.
@@ -354,7 +358,8 @@ public EntityRecognizerProperties withStatus(String status) {
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Provides the status of the entity recognizer.
@@ -374,7 +379,8 @@ public void setStatus(ModelStatus status) {
      * together.
      * <p>
      * <b>Constraints:</b><br/>
-     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, IN_ERROR, TRAINED
+     * <b>Allowed Values: </b>SUBMITTED, TRAINING, DELETING, STOP_REQUESTED,
+     * STOPPED, IN_ERROR, TRAINED
      *
      * @param status <p>
      *            Provides the status of the entity recognizer.
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/ModelStatus.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/ModelStatus.java
index ae8d4d7a9d..3bb8911cd2 100644
--- a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/ModelStatus.java
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/ModelStatus.java
@@ -26,6 +26,8 @@
     SUBMITTED("SUBMITTED"),
     TRAINING("TRAINING"),
     DELETING("DELETING"),
+    STOP_REQUESTED("STOP_REQUESTED"),
+    STOPPED("STOPPED"),
     IN_ERROR("IN_ERROR"),
     TRAINED("TRAINED");
 
@@ -46,6 +48,8 @@ public String toString() {
         enumMap.put("SUBMITTED", SUBMITTED);
         enumMap.put("TRAINING", TRAINING);
         enumMap.put("DELETING", DELETING);
+        enumMap.put("STOP_REQUESTED", STOP_REQUESTED);
+        enumMap.put("STOPPED", STOPPED);
         enumMap.put("IN_ERROR", IN_ERROR);
         enumMap.put("TRAINED", TRAINED);
     }
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierRequest.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierRequest.java
new file mode 100644
index 0000000000..4b5fa3a078
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierRequest.java
@@ -0,0 +1,167 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Stops a document classifier training job while in progress.
+ * </p>
+ * <p>
+ * If the training job state is <code>TRAINING</code>, the job is marked for
+ * termination and put into the <code>STOP_REQUESTED</code> state. If the
+ * training job completes before it can be stopped, it is put into the
+ * <code>TRAINED</code>; otherwise the training job is stopped and put into the
+ * <code>STOPPED</code> state and the service sends back an HTTP 200 response
+ * with an empty HTTP body.
+ * </p>
+ */
+public class StopTrainingDocumentClassifierRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the document classifier
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     */
+    private String documentClassifierArn;
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the document classifier
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @return <p>
+     *         The Amazon Resource Name (ARN) that identifies the document
+     *         classifier currently being trained.
+     *         </p>
+     */
+    public String getDocumentClassifierArn() {
+        return documentClassifierArn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the document classifier
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @param documentClassifierArn <p>
+     *            The Amazon Resource Name (ARN) that identifies the document
+     *            classifier currently being trained.
+     *            </p>
+     */
+    public void setDocumentClassifierArn(String documentClassifierArn) {
+        this.documentClassifierArn = documentClassifierArn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the document classifier
+     * currently being trained.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @param documentClassifierArn <p>
+     *            The Amazon Resource Name (ARN) that identifies the document
+     *            classifier currently being trained.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StopTrainingDocumentClassifierRequest withDocumentClassifierArn(
+            String documentClassifierArn) {
+        this.documentClassifierArn = documentClassifierArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getDocumentClassifierArn() != null)
+            sb.append("DocumentClassifierArn: " + getDocumentClassifierArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getDocumentClassifierArn() == null) ? 0 : getDocumentClassifierArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StopTrainingDocumentClassifierRequest == false)
+            return false;
+        StopTrainingDocumentClassifierRequest other = (StopTrainingDocumentClassifierRequest) obj;
+
+        if (other.getDocumentClassifierArn() == null ^ this.getDocumentClassifierArn() == null)
+            return false;
+        if (other.getDocumentClassifierArn() != null
+                && other.getDocumentClassifierArn().equals(this.getDocumentClassifierArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierResult.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierResult.java
new file mode 100644
index 0000000000..66b772eae6
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingDocumentClassifierResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model;
+
+import java.io.Serializable;
+
+public class StopTrainingDocumentClassifierResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StopTrainingDocumentClassifierResult == false)
+            return false;
+        StopTrainingDocumentClassifierResult other = (StopTrainingDocumentClassifierResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerRequest.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerRequest.java
new file mode 100644
index 0000000000..41d25746a5
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerRequest.java
@@ -0,0 +1,165 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Stops an entity recognizer training job while in progress.
+ * </p>
+ * <p>
+ * If the training job state is <code>TRAINING</code>, the job is marked for
+ * termination and put into the <code>STOP_REQUESTED</code> state. If the
+ * training job completes before it can be stopped, it is put into the
+ * <code>TRAINED</code>; otherwise the training job is stopped and putted into
+ * the <code>STOPPED</code> state and the service sends back an HTTP 200
+ * response with an empty HTTP body.
+ * </p>
+ */
+public class StopTrainingEntityRecognizerRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the entity recognizer
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     */
+    private String entityRecognizerArn;
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the entity recognizer
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @return <p>
+     *         The Amazon Resource Name (ARN) that identifies the entity
+     *         recognizer currently being trained.
+     *         </p>
+     */
+    public String getEntityRecognizerArn() {
+        return entityRecognizerArn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the entity recognizer
+     * currently being trained.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @param entityRecognizerArn <p>
+     *            The Amazon Resource Name (ARN) that identifies the entity
+     *            recognizer currently being trained.
+     *            </p>
+     */
+    public void setEntityRecognizerArn(String entityRecognizerArn) {
+        this.entityRecognizerArn = entityRecognizerArn;
+    }
+
+    /**
+     * <p>
+     * The Amazon Resource Name (ARN) that identifies the entity recognizer
+     * currently being trained.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 256<br/>
+     * <b>Pattern:
+     * </b>arn:aws:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer
+     * /[a-zA-Z0-9](-*[a-zA-Z0-9])*<br/>
+     *
+     * @param entityRecognizerArn <p>
+     *            The Amazon Resource Name (ARN) that identifies the entity
+     *            recognizer currently being trained.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StopTrainingEntityRecognizerRequest withEntityRecognizerArn(String entityRecognizerArn) {
+        this.entityRecognizerArn = entityRecognizerArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getEntityRecognizerArn() != null)
+            sb.append("EntityRecognizerArn: " + getEntityRecognizerArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getEntityRecognizerArn() == null) ? 0 : getEntityRecognizerArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StopTrainingEntityRecognizerRequest == false)
+            return false;
+        StopTrainingEntityRecognizerRequest other = (StopTrainingEntityRecognizerRequest) obj;
+
+        if (other.getEntityRecognizerArn() == null ^ this.getEntityRecognizerArn() == null)
+            return false;
+        if (other.getEntityRecognizerArn() != null
+                && other.getEntityRecognizerArn().equals(this.getEntityRecognizerArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerResult.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerResult.java
new file mode 100644
index 0000000000..2f173eefbc
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/StopTrainingEntityRecognizerResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model;
+
+import java.io.Serializable;
+
+public class StopTrainingEntityRecognizerResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StopTrainingEntityRecognizerResult == false)
+            return false;
+        StopTrainingEntityRecognizerResult other = (StopTrainingEntityRecognizerResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierRequestMarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierRequestMarshaller.java
new file mode 100644
index 0000000000..9dea232802
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierRequestMarshaller.java
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.comprehend.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for StopTrainingDocumentClassifierRequest
+ */
+public class StopTrainingDocumentClassifierRequestMarshaller
+        implements
+        Marshaller<Request<StopTrainingDocumentClassifierRequest>, StopTrainingDocumentClassifierRequest> {
+
+    public Request<StopTrainingDocumentClassifierRequest> marshall(
+            StopTrainingDocumentClassifierRequest stopTrainingDocumentClassifierRequest) {
+        if (stopTrainingDocumentClassifierRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(StopTrainingDocumentClassifierRequest)");
+        }
+
+        Request<StopTrainingDocumentClassifierRequest> request = new DefaultRequest<StopTrainingDocumentClassifierRequest>(
+                stopTrainingDocumentClassifierRequest, "AmazonComprehend");
+        String target = "Comprehend_20171127.StopTrainingDocumentClassifier";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (stopTrainingDocumentClassifierRequest.getDocumentClassifierArn() != null) {
+                String documentClassifierArn = stopTrainingDocumentClassifierRequest
+                        .getDocumentClassifierArn();
+                jsonWriter.name("DocumentClassifierArn");
+                jsonWriter.value(documentClassifierArn);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..d414db1920
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingDocumentClassifierResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model.transform;
+
+import com.amazonaws.services.comprehend.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response StopTrainingDocumentClassifierResult
+ */
+public class StopTrainingDocumentClassifierResultJsonUnmarshaller implements
+        Unmarshaller<StopTrainingDocumentClassifierResult, JsonUnmarshallerContext> {
+
+    public StopTrainingDocumentClassifierResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        StopTrainingDocumentClassifierResult stopTrainingDocumentClassifierResult = new StopTrainingDocumentClassifierResult();
+
+        return stopTrainingDocumentClassifierResult;
+    }
+
+    private static StopTrainingDocumentClassifierResultJsonUnmarshaller instance;
+
+    public static StopTrainingDocumentClassifierResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new StopTrainingDocumentClassifierResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerRequestMarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerRequestMarshaller.java
new file mode 100644
index 0000000000..34ad8a639b
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerRequestMarshaller.java
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.comprehend.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for StopTrainingEntityRecognizerRequest
+ */
+public class StopTrainingEntityRecognizerRequestMarshaller
+        implements
+        Marshaller<Request<StopTrainingEntityRecognizerRequest>, StopTrainingEntityRecognizerRequest> {
+
+    public Request<StopTrainingEntityRecognizerRequest> marshall(
+            StopTrainingEntityRecognizerRequest stopTrainingEntityRecognizerRequest) {
+        if (stopTrainingEntityRecognizerRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(StopTrainingEntityRecognizerRequest)");
+        }
+
+        Request<StopTrainingEntityRecognizerRequest> request = new DefaultRequest<StopTrainingEntityRecognizerRequest>(
+                stopTrainingEntityRecognizerRequest, "AmazonComprehend");
+        String target = "Comprehend_20171127.StopTrainingEntityRecognizer";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (stopTrainingEntityRecognizerRequest.getEntityRecognizerArn() != null) {
+                String entityRecognizerArn = stopTrainingEntityRecognizerRequest
+                        .getEntityRecognizerArn();
+                jsonWriter.name("EntityRecognizerArn");
+                jsonWriter.value(entityRecognizerArn);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerResultJsonUnmarshaller.java b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..7db92c6757
--- /dev/null
+++ b/aws-android-sdk-comprehend/src/main/java/com/amazonaws/services/comprehend/model/transform/StopTrainingEntityRecognizerResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.comprehend.model.transform;
+
+import com.amazonaws.services.comprehend.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response StopTrainingEntityRecognizerResult
+ */
+public class StopTrainingEntityRecognizerResultJsonUnmarshaller implements
+        Unmarshaller<StopTrainingEntityRecognizerResult, JsonUnmarshallerContext> {
+
+    public StopTrainingEntityRecognizerResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        StopTrainingEntityRecognizerResult stopTrainingEntityRecognizerResult = new StopTrainingEntityRecognizerResult();
+
+        return stopTrainingEntityRecognizerResult;
+    }
+
+    private static StopTrainingEntityRecognizerResultJsonUnmarshaller instance;
+
+    public static StopTrainingEntityRecognizerResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new StopTrainingEntityRecognizerResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/pom.xml b/aws-android-sdk-core/pom.xml
index 76a383dd64..f32d83295d 100644
--- a/aws-android-sdk-core/pom.xml
+++ b/aws-android-sdk-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentity.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentity.java
index 190abcd4ae..6e6116cd8a 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentity.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentity.java
@@ -128,6 +128,184 @@
      */
     public void setRegion(Region region) throws java.lang.IllegalArgumentException;
 
+    /**
+     * <p>
+     * Creates a new identity pool. The identity pool is a store of user
+     * identity information that is specific to your AWS account. The limit on
+     * identity pools is 60 per account. The keys for
+     * <code>SupportedLoginProviders</code> are as follows:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * Facebook: <code>graph.facebook.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Google: <code>accounts.google.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Amazon: <code>www.amazon.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Twitter: <code>api.twitter.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Digits: <code>www.digits.com</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param createIdentityPoolRequest <p>
+     *            Input to the CreateIdentityPool action.
+     *            </p>
+     * @return createIdentityPoolResult The response from the CreateIdentityPool
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws LimitExceededException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    CreateIdentityPoolResult createIdentityPool(CreateIdentityPoolRequest createIdentityPoolRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Deletes identities from an identity pool. You can specify a list of 1-60
+     * identities that you want to delete.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param deleteIdentitiesRequest <p>
+     *            Input to the <code>DeleteIdentities</code> action.
+     *            </p>
+     * @return deleteIdentitiesResult The response from the DeleteIdentities
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DeleteIdentitiesResult deleteIdentities(DeleteIdentitiesRequest deleteIdentitiesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Deletes a user pool. Once a pool is deleted, users will not be able to
+     * authenticate with the pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param deleteIdentityPoolRequest <p>
+     *            Input to the DeleteIdentityPool action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    void deleteIdentityPool(DeleteIdentityPoolRequest deleteIdentityPoolRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Returns metadata related to the given identity, including when the
+     * identity was created and any associated linked logins.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param describeIdentityRequest <p>
+     *            Input to the <code>DescribeIdentity</code> action.
+     *            </p>
+     * @return describeIdentityResult The response from the DescribeIdentity
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DescribeIdentityResult describeIdentity(DescribeIdentityRequest describeIdentityRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Gets details about a particular identity pool, including the pool name,
+     * ID description, creation date, and current number of users.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param describeIdentityPoolRequest <p>
+     *            Input to the DescribeIdentityPool action.
+     *            </p>
+     * @return describeIdentityPoolResult The response from the
+     *         DescribeIdentityPool service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    DescribeIdentityPoolResult describeIdentityPool(
+            DescribeIdentityPoolRequest describeIdentityPoolRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Returns credentials for the provided identity ID. Any provided logins
@@ -198,6 +376,38 @@ GetCredentialsForIdentityResult getCredentialsForIdentity(
     GetIdResult getId(GetIdRequest getIdRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets the roles for an identity pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param getIdentityPoolRolesRequest <p>
+     *            Input to the <code>GetIdentityPoolRoles</code> action.
+     *            </p>
+     * @return getIdentityPoolRolesResult The response from the
+     *         GetIdentityPoolRoles service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetIdentityPoolRolesResult getIdentityPoolRoles(
+            GetIdentityPoolRolesRequest getIdentityPoolRolesRequest) throws AmazonClientException,
+            AmazonServiceException;
+
     /**
      * <p>
      * Gets an OpenID token, using a known Cognito ID. This known Cognito ID is
@@ -234,6 +444,320 @@ GetIdResult getId(GetIdRequest getIdRequest) throws AmazonClientException,
     GetOpenIdTokenResult getOpenIdToken(GetOpenIdTokenRequest getOpenIdTokenRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID
+     * Connect token for a user authenticated by your backend authentication
+     * process. Supplying multiple logins will create an implicit linked
+     * account. You can only specify one developer provider as part of the
+     * <code>Logins</code> map, which is linked to the identity pool. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users.
+     * </p>
+     * <p>
+     * You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a
+     * new identity and to link new logins (that is, user credentials issued by
+     * a public provider or developer provider) to an existing identity. When
+     * you want to create a new identity, the <code>IdentityId</code> should be
+     * null. When you want to associate a new login with an existing
+     * authenticated/unauthenticated identity, you can do so by providing the
+     * existing <code>IdentityId</code>. This API will create the identity in
+     * the specified <code>IdentityPoolId</code>.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param getOpenIdTokenForDeveloperIdentityRequest <p>
+     *            Input to the <code>GetOpenIdTokenForDeveloperIdentity</code>
+     *            action.
+     *            </p>
+     * @return getOpenIdTokenForDeveloperIdentityResult The response from the
+     *         GetOpenIdTokenForDeveloperIdentity service method, as returned by
+     *         Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws DeveloperUserAlreadyRegisteredException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    GetOpenIdTokenForDeveloperIdentityResult getOpenIdTokenForDeveloperIdentity(
+            GetOpenIdTokenForDeveloperIdentityRequest getOpenIdTokenForDeveloperIdentityRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Lists the identities in a pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param listIdentitiesRequest <p>
+     *            Input to the ListIdentities action.
+     *            </p>
+     * @return listIdentitiesResult The response from the ListIdentities service
+     *         method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    ListIdentitiesResult listIdentities(ListIdentitiesRequest listIdentitiesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Lists all of the Cognito identity pools registered for your account.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param listIdentityPoolsRequest <p>
+     *            Input to the ListIdentityPools action.
+     *            </p>
+     * @return listIdentityPoolsResult The response from the ListIdentityPools
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    ListIdentityPoolsResult listIdentityPools(ListIdentityPoolsRequest listIdentityPoolsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Retrieves the <code>IdentityID</code> associated with a
+     * <code>DeveloperUserIdentifier</code> or the list of
+     * <code>DeveloperUserIdentifier</code>s associated with an
+     * <code>IdentityId</code> for an existing identity. Either
+     * <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not
+     * be null. If you supply only one of these values, the other value will be
+     * searched in the database and returned as a part of the response. If you
+     * supply both, <code>DeveloperUserIdentifier</code> will be matched against
+     * <code>IdentityID</code>. If the values are verified against the database,
+     * the response returns both values and is the same as the request.
+     * Otherwise a <code>ResourceConflictException</code> is thrown.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param lookupDeveloperIdentityRequest <p>
+     *            Input to the <code>LookupDeveloperIdentityInput</code> action.
+     *            </p>
+     * @return lookupDeveloperIdentityResult The response from the
+     *         LookupDeveloperIdentity service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    LookupDeveloperIdentityResult lookupDeveloperIdentity(
+            LookupDeveloperIdentityRequest lookupDeveloperIdentityRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Merges two users having different <code>IdentityId</code>s, existing in
+     * the same identity pool, and identified by the same developer provider.
+     * You can use this action to request that discrete users be merged and
+     * identified as a single user in the Cognito environment. Cognito
+     * associates the given source user (<code>SourceUserIdentifier</code>) with
+     * the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>
+     * . Only developer-authenticated users can be merged. If the users to be
+     * merged are associated with the same public provider, but as two different
+     * users, an exception will be thrown.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param mergeDeveloperIdentitiesRequest <p>
+     *            Input to the <code>MergeDeveloperIdentities</code> action.
+     *            </p>
+     * @return mergeDeveloperIdentitiesResult The response from the
+     *         MergeDeveloperIdentities service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    MergeDeveloperIdentitiesResult mergeDeveloperIdentities(
+            MergeDeveloperIdentitiesRequest mergeDeveloperIdentitiesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Sets the roles for an identity pool. These roles are used when making
+     * calls to <a>GetCredentialsForIdentity</a> action.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param setIdentityPoolRolesRequest <p>
+     *            Input to the <code>SetIdentityPoolRoles</code> action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ConcurrentModificationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    void setIdentityPoolRoles(SetIdentityPoolRolesRequest setIdentityPoolRolesRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity.
+     * Unlinked developer users will be considered new identities next time they
+     * are seen. If, for a given Cognito identity, you remove all federated
+     * identities as well as the developer user identifier, the Cognito identity
+     * becomes inaccessible.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param unlinkDeveloperIdentityRequest <p>
+     *            Input to the <code>UnlinkDeveloperIdentity</code> action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    void unlinkDeveloperIdentity(UnlinkDeveloperIdentityRequest unlinkDeveloperIdentityRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Unlinks a federated identity from an existing account. Unlinked logins
+     * will be considered new identities next time they are seen. Removing the
+     * last linked login will make this identity inaccessible.
+     * </p>
+     * <p>
+     * This is a public API. You do not need any credentials to call this API.
+     * </p>
+     * 
+     * @param unlinkIdentityRequest <p>
+     *            Input to the UnlinkIdentity action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ExternalServiceException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    void unlinkIdentity(UnlinkIdentityRequest unlinkIdentityRequest) throws AmazonClientException,
+            AmazonServiceException;
+
+    /**
+     * <p>
+     * Updates a user pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param updateIdentityPoolRequest <p>
+     *            An object representing an Amazon Cognito identity pool.
+     *            </p>
+     * @return updateIdentityPoolResult The response from the UpdateIdentityPool
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ConcurrentModificationException
+     * @throws LimitExceededException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    UpdateIdentityPoolResult updateIdentityPool(UpdateIdentityPoolRequest updateIdentityPoolRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * Shuts down this client object, releasing any resources that might be held
      * open. This is an optional method, and callers are not expected to call
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentityClient.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentityClient.java
index 0aaead0571..39a9a26d9c 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentityClient.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/AmazonCognitoIdentityClient.java
@@ -303,6 +303,8 @@ public AmazonCognitoIdentityClient(AWSCredentialsProvider awsCredentialsProvider
 
     private void init() {
         jsonErrorUnmarshallers = new ArrayList<JsonErrorUnmarshaller>();
+        jsonErrorUnmarshallers.add(new ConcurrentModificationExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new DeveloperUserAlreadyRegisteredExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new ExternalServiceExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InternalErrorExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new InvalidIdentityPoolConfigurationExceptionUnmarshaller());
@@ -331,6 +333,313 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
         return config;
     }
 
+    /**
+     * <p>
+     * Creates a new identity pool. The identity pool is a store of user
+     * identity information that is specific to your AWS account. The limit on
+     * identity pools is 60 per account. The keys for
+     * <code>SupportedLoginProviders</code> are as follows:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * Facebook: <code>graph.facebook.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Google: <code>accounts.google.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Amazon: <code>www.amazon.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Twitter: <code>api.twitter.com</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * Digits: <code>www.digits.com</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param createIdentityPoolRequest <p>
+     *            Input to the CreateIdentityPool action.
+     *            </p>
+     * @return createIdentityPoolResult The response from the CreateIdentityPool
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws LimitExceededException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public CreateIdentityPoolResult createIdentityPool(
+            CreateIdentityPoolRequest createIdentityPoolRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(createIdentityPoolRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<CreateIdentityPoolRequest> request = null;
+        Response<CreateIdentityPoolResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new CreateIdentityPoolRequestMarshaller()
+                        .marshall(createIdentityPoolRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<CreateIdentityPoolResult, JsonUnmarshallerContext> unmarshaller = new CreateIdentityPoolResultJsonUnmarshaller();
+            JsonResponseHandler<CreateIdentityPoolResult> responseHandler = new JsonResponseHandler<CreateIdentityPoolResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Deletes identities from an identity pool. You can specify a list of 1-60
+     * identities that you want to delete.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param deleteIdentitiesRequest <p>
+     *            Input to the <code>DeleteIdentities</code> action.
+     *            </p>
+     * @return deleteIdentitiesResult The response from the DeleteIdentities
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DeleteIdentitiesResult deleteIdentities(DeleteIdentitiesRequest deleteIdentitiesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteIdentitiesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteIdentitiesRequest> request = null;
+        Response<DeleteIdentitiesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteIdentitiesRequestMarshaller().marshall(deleteIdentitiesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteIdentitiesResult, JsonUnmarshallerContext> unmarshaller = new DeleteIdentitiesResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteIdentitiesResult> responseHandler = new JsonResponseHandler<DeleteIdentitiesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Deletes a user pool. Once a pool is deleted, users will not be able to
+     * authenticate with the pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param deleteIdentityPoolRequest <p>
+     *            Input to the DeleteIdentityPool action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public void deleteIdentityPool(DeleteIdentityPoolRequest deleteIdentityPoolRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteIdentityPoolRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteIdentityPoolRequest> request = null;
+        Response<Void> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteIdentityPoolRequestMarshaller()
+                        .marshall(deleteIdentityPoolRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);
+            invoke(request, responseHandler, executionContext);
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Returns metadata related to the given identity, including when the
+     * identity was created and any associated linked logins.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param describeIdentityRequest <p>
+     *            Input to the <code>DescribeIdentity</code> action.
+     *            </p>
+     * @return describeIdentityResult The response from the DescribeIdentity
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DescribeIdentityResult describeIdentity(DescribeIdentityRequest describeIdentityRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeIdentityRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeIdentityRequest> request = null;
+        Response<DescribeIdentityResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeIdentityRequestMarshaller().marshall(describeIdentityRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeIdentityResult, JsonUnmarshallerContext> unmarshaller = new DescribeIdentityResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeIdentityResult> responseHandler = new JsonResponseHandler<DescribeIdentityResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Gets details about a particular identity pool, including the pool name,
+     * ID description, creation date, and current number of users.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param describeIdentityPoolRequest <p>
+     *            Input to the DescribeIdentityPool action.
+     *            </p>
+     * @return describeIdentityPoolResult The response from the
+     *         DescribeIdentityPool service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public DescribeIdentityPoolResult describeIdentityPool(
+            DescribeIdentityPoolRequest describeIdentityPoolRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeIdentityPoolRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeIdentityPoolRequest> request = null;
+        Response<DescribeIdentityPoolResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeIdentityPoolRequestMarshaller()
+                        .marshall(describeIdentityPoolRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeIdentityPoolResult, JsonUnmarshallerContext> unmarshaller = new DescribeIdentityPoolResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeIdentityPoolResult> responseHandler = new JsonResponseHandler<DescribeIdentityPoolResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Returns credentials for the provided identity ID. Any provided logins
@@ -456,29 +765,24 @@ public GetIdResult getId(GetIdRequest getIdRequest)
 
     /**
      * <p>
-     * Gets an OpenID token, using a known Cognito ID. This known Cognito ID is
-     * returned by <a>GetId</a>. You can optionally add additional logins for
-     * the identity. Supplying multiple logins creates an implicit link.
-     * </p>
-     * <p>
-     * The OpenId token is valid for 15 minutes.
+     * Gets the roles for an identity pool.
      * </p>
      * <p>
-     * This is a public API. You do not need any credentials to call this API.
+     * You must use AWS Developer credentials to call this API.
      * </p>
      * 
-     * @param getOpenIdTokenRequest <p>
-     *            Input to the GetOpenIdToken action.
+     * @param getIdentityPoolRolesRequest <p>
+     *            Input to the <code>GetIdentityPoolRoles</code> action.
      *            </p>
-     * @return getOpenIdTokenResult The response from the GetOpenIdToken service
-     *         method, as returned by Amazon Cognito Identity.
+     * @return getIdentityPoolRolesResult The response from the
+     *         GetIdentityPoolRoles service method, as returned by Amazon
+     *         Cognito Identity.
      * @throws InvalidParameterException
      * @throws ResourceNotFoundException
      * @throws NotAuthorizedException
      * @throws ResourceConflictException
      * @throws TooManyRequestsException
      * @throws InternalErrorException
-     * @throws ExternalServiceException
      * @throws AmazonClientException If any internal errors are encountered
      *             inside the client while attempting to make the request or
      *             handle the response. For example if a network connection is
@@ -487,24 +791,631 @@ public GetIdResult getId(GetIdRequest getIdRequest)
      *             Cognito Identity indicating either a problem with the data in
      *             the request, or a server side issue.
      */
-    public GetOpenIdTokenResult getOpenIdToken(GetOpenIdTokenRequest getOpenIdTokenRequest)
+    public GetIdentityPoolRolesResult getIdentityPoolRoles(
+            GetIdentityPoolRolesRequest getIdentityPoolRolesRequest)
             throws AmazonServiceException, AmazonClientException {
-        ExecutionContext executionContext = createExecutionContext(getOpenIdTokenRequest);
+        ExecutionContext executionContext = createExecutionContext(getIdentityPoolRolesRequest);
         AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
         awsRequestMetrics.startEvent(Field.ClientExecuteTime);
-        Request<GetOpenIdTokenRequest> request = null;
-        Response<GetOpenIdTokenResult> response = null;
+        Request<GetIdentityPoolRolesRequest> request = null;
+        Response<GetIdentityPoolRolesResult> response = null;
         try {
             awsRequestMetrics.startEvent(Field.RequestMarshallTime);
             try {
-                request = new GetOpenIdTokenRequestMarshaller().marshall(getOpenIdTokenRequest);
+                request = new GetIdentityPoolRolesRequestMarshaller()
+                        .marshall(getIdentityPoolRolesRequest);
                 // Binds the request metrics to the current request.
                 request.setAWSRequestMetrics(awsRequestMetrics);
             } finally {
                 awsRequestMetrics.endEvent(Field.RequestMarshallTime);
             }
-            Unmarshaller<GetOpenIdTokenResult, JsonUnmarshallerContext> unmarshaller = new GetOpenIdTokenResultJsonUnmarshaller();
-            JsonResponseHandler<GetOpenIdTokenResult> responseHandler = new JsonResponseHandler<GetOpenIdTokenResult>(
+            Unmarshaller<GetIdentityPoolRolesResult, JsonUnmarshallerContext> unmarshaller = new GetIdentityPoolRolesResultJsonUnmarshaller();
+            JsonResponseHandler<GetIdentityPoolRolesResult> responseHandler = new JsonResponseHandler<GetIdentityPoolRolesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Gets an OpenID token, using a known Cognito ID. This known Cognito ID is
+     * returned by <a>GetId</a>. You can optionally add additional logins for
+     * the identity. Supplying multiple logins creates an implicit link.
+     * </p>
+     * <p>
+     * The OpenId token is valid for 15 minutes.
+     * </p>
+     * <p>
+     * This is a public API. You do not need any credentials to call this API.
+     * </p>
+     * 
+     * @param getOpenIdTokenRequest <p>
+     *            Input to the GetOpenIdToken action.
+     *            </p>
+     * @return getOpenIdTokenResult The response from the GetOpenIdToken service
+     *         method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ExternalServiceException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetOpenIdTokenResult getOpenIdToken(GetOpenIdTokenRequest getOpenIdTokenRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getOpenIdTokenRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetOpenIdTokenRequest> request = null;
+        Response<GetOpenIdTokenResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetOpenIdTokenRequestMarshaller().marshall(getOpenIdTokenRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetOpenIdTokenResult, JsonUnmarshallerContext> unmarshaller = new GetOpenIdTokenResultJsonUnmarshaller();
+            JsonResponseHandler<GetOpenIdTokenResult> responseHandler = new JsonResponseHandler<GetOpenIdTokenResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID
+     * Connect token for a user authenticated by your backend authentication
+     * process. Supplying multiple logins will create an implicit linked
+     * account. You can only specify one developer provider as part of the
+     * <code>Logins</code> map, which is linked to the identity pool. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users.
+     * </p>
+     * <p>
+     * You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a
+     * new identity and to link new logins (that is, user credentials issued by
+     * a public provider or developer provider) to an existing identity. When
+     * you want to create a new identity, the <code>IdentityId</code> should be
+     * null. When you want to associate a new login with an existing
+     * authenticated/unauthenticated identity, you can do so by providing the
+     * existing <code>IdentityId</code>. This API will create the identity in
+     * the specified <code>IdentityPoolId</code>.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param getOpenIdTokenForDeveloperIdentityRequest <p>
+     *            Input to the <code>GetOpenIdTokenForDeveloperIdentity</code>
+     *            action.
+     *            </p>
+     * @return getOpenIdTokenForDeveloperIdentityResult The response from the
+     *         GetOpenIdTokenForDeveloperIdentity service method, as returned by
+     *         Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws DeveloperUserAlreadyRegisteredException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public GetOpenIdTokenForDeveloperIdentityResult getOpenIdTokenForDeveloperIdentity(
+            GetOpenIdTokenForDeveloperIdentityRequest getOpenIdTokenForDeveloperIdentityRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(getOpenIdTokenForDeveloperIdentityRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<GetOpenIdTokenForDeveloperIdentityRequest> request = null;
+        Response<GetOpenIdTokenForDeveloperIdentityResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new GetOpenIdTokenForDeveloperIdentityRequestMarshaller()
+                        .marshall(getOpenIdTokenForDeveloperIdentityRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<GetOpenIdTokenForDeveloperIdentityResult, JsonUnmarshallerContext> unmarshaller = new GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller();
+            JsonResponseHandler<GetOpenIdTokenForDeveloperIdentityResult> responseHandler = new JsonResponseHandler<GetOpenIdTokenForDeveloperIdentityResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Lists the identities in a pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param listIdentitiesRequest <p>
+     *            Input to the ListIdentities action.
+     *            </p>
+     * @return listIdentitiesResult The response from the ListIdentities service
+     *         method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public ListIdentitiesResult listIdentities(ListIdentitiesRequest listIdentitiesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listIdentitiesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListIdentitiesRequest> request = null;
+        Response<ListIdentitiesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListIdentitiesRequestMarshaller().marshall(listIdentitiesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListIdentitiesResult, JsonUnmarshallerContext> unmarshaller = new ListIdentitiesResultJsonUnmarshaller();
+            JsonResponseHandler<ListIdentitiesResult> responseHandler = new JsonResponseHandler<ListIdentitiesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Lists all of the Cognito identity pools registered for your account.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param listIdentityPoolsRequest <p>
+     *            Input to the ListIdentityPools action.
+     *            </p>
+     * @return listIdentityPoolsResult The response from the ListIdentityPools
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws NotAuthorizedException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public ListIdentityPoolsResult listIdentityPools(
+            ListIdentityPoolsRequest listIdentityPoolsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listIdentityPoolsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListIdentityPoolsRequest> request = null;
+        Response<ListIdentityPoolsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListIdentityPoolsRequestMarshaller()
+                        .marshall(listIdentityPoolsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListIdentityPoolsResult, JsonUnmarshallerContext> unmarshaller = new ListIdentityPoolsResultJsonUnmarshaller();
+            JsonResponseHandler<ListIdentityPoolsResult> responseHandler = new JsonResponseHandler<ListIdentityPoolsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Retrieves the <code>IdentityID</code> associated with a
+     * <code>DeveloperUserIdentifier</code> or the list of
+     * <code>DeveloperUserIdentifier</code>s associated with an
+     * <code>IdentityId</code> for an existing identity. Either
+     * <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not
+     * be null. If you supply only one of these values, the other value will be
+     * searched in the database and returned as a part of the response. If you
+     * supply both, <code>DeveloperUserIdentifier</code> will be matched against
+     * <code>IdentityID</code>. If the values are verified against the database,
+     * the response returns both values and is the same as the request.
+     * Otherwise a <code>ResourceConflictException</code> is thrown.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param lookupDeveloperIdentityRequest <p>
+     *            Input to the <code>LookupDeveloperIdentityInput</code> action.
+     *            </p>
+     * @return lookupDeveloperIdentityResult The response from the
+     *         LookupDeveloperIdentity service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public LookupDeveloperIdentityResult lookupDeveloperIdentity(
+            LookupDeveloperIdentityRequest lookupDeveloperIdentityRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(lookupDeveloperIdentityRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<LookupDeveloperIdentityRequest> request = null;
+        Response<LookupDeveloperIdentityResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new LookupDeveloperIdentityRequestMarshaller()
+                        .marshall(lookupDeveloperIdentityRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<LookupDeveloperIdentityResult, JsonUnmarshallerContext> unmarshaller = new LookupDeveloperIdentityResultJsonUnmarshaller();
+            JsonResponseHandler<LookupDeveloperIdentityResult> responseHandler = new JsonResponseHandler<LookupDeveloperIdentityResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Merges two users having different <code>IdentityId</code>s, existing in
+     * the same identity pool, and identified by the same developer provider.
+     * You can use this action to request that discrete users be merged and
+     * identified as a single user in the Cognito environment. Cognito
+     * associates the given source user (<code>SourceUserIdentifier</code>) with
+     * the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>
+     * . Only developer-authenticated users can be merged. If the users to be
+     * merged are associated with the same public provider, but as two different
+     * users, an exception will be thrown.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param mergeDeveloperIdentitiesRequest <p>
+     *            Input to the <code>MergeDeveloperIdentities</code> action.
+     *            </p>
+     * @return mergeDeveloperIdentitiesResult The response from the
+     *         MergeDeveloperIdentities service method, as returned by Amazon
+     *         Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public MergeDeveloperIdentitiesResult mergeDeveloperIdentities(
+            MergeDeveloperIdentitiesRequest mergeDeveloperIdentitiesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(mergeDeveloperIdentitiesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<MergeDeveloperIdentitiesRequest> request = null;
+        Response<MergeDeveloperIdentitiesResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new MergeDeveloperIdentitiesRequestMarshaller()
+                        .marshall(mergeDeveloperIdentitiesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<MergeDeveloperIdentitiesResult, JsonUnmarshallerContext> unmarshaller = new MergeDeveloperIdentitiesResultJsonUnmarshaller();
+            JsonResponseHandler<MergeDeveloperIdentitiesResult> responseHandler = new JsonResponseHandler<MergeDeveloperIdentitiesResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Sets the roles for an identity pool. These roles are used when making
+     * calls to <a>GetCredentialsForIdentity</a> action.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param setIdentityPoolRolesRequest <p>
+     *            Input to the <code>SetIdentityPoolRoles</code> action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ConcurrentModificationException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public void setIdentityPoolRoles(SetIdentityPoolRolesRequest setIdentityPoolRolesRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(setIdentityPoolRolesRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<SetIdentityPoolRolesRequest> request = null;
+        Response<Void> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new SetIdentityPoolRolesRequestMarshaller()
+                        .marshall(setIdentityPoolRolesRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);
+            invoke(request, responseHandler, executionContext);
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity.
+     * Unlinked developer users will be considered new identities next time they
+     * are seen. If, for a given Cognito identity, you remove all federated
+     * identities as well as the developer user identifier, the Cognito identity
+     * becomes inaccessible.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param unlinkDeveloperIdentityRequest <p>
+     *            Input to the <code>UnlinkDeveloperIdentity</code> action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public void unlinkDeveloperIdentity(
+            UnlinkDeveloperIdentityRequest unlinkDeveloperIdentityRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(unlinkDeveloperIdentityRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UnlinkDeveloperIdentityRequest> request = null;
+        Response<Void> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UnlinkDeveloperIdentityRequestMarshaller()
+                        .marshall(unlinkDeveloperIdentityRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);
+            invoke(request, responseHandler, executionContext);
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Unlinks a federated identity from an existing account. Unlinked logins
+     * will be considered new identities next time they are seen. Removing the
+     * last linked login will make this identity inaccessible.
+     * </p>
+     * <p>
+     * This is a public API. You do not need any credentials to call this API.
+     * </p>
+     * 
+     * @param unlinkIdentityRequest <p>
+     *            Input to the UnlinkIdentity action.
+     *            </p>
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ExternalServiceException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public void unlinkIdentity(UnlinkIdentityRequest unlinkIdentityRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(unlinkIdentityRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UnlinkIdentityRequest> request = null;
+        Response<Void> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UnlinkIdentityRequestMarshaller().marshall(unlinkIdentityRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            JsonResponseHandler<Void> responseHandler = new JsonResponseHandler<Void>(null);
+            invoke(request, responseHandler, executionContext);
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Updates a user pool.
+     * </p>
+     * <p>
+     * You must use AWS Developer credentials to call this API.
+     * </p>
+     * 
+     * @param updateIdentityPoolRequest <p>
+     *            An object representing an Amazon Cognito identity pool.
+     *            </p>
+     * @return updateIdentityPoolResult The response from the UpdateIdentityPool
+     *         service method, as returned by Amazon Cognito Identity.
+     * @throws InvalidParameterException
+     * @throws ResourceNotFoundException
+     * @throws NotAuthorizedException
+     * @throws ResourceConflictException
+     * @throws TooManyRequestsException
+     * @throws InternalErrorException
+     * @throws ConcurrentModificationException
+     * @throws LimitExceededException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by Amazon
+     *             Cognito Identity indicating either a problem with the data in
+     *             the request, or a server side issue.
+     */
+    public UpdateIdentityPoolResult updateIdentityPool(
+            UpdateIdentityPoolRequest updateIdentityPoolRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateIdentityPoolRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateIdentityPoolRequest> request = null;
+        Response<UpdateIdentityPoolResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateIdentityPoolRequestMarshaller()
+                        .marshall(updateIdentityPoolRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateIdentityPoolResult, JsonUnmarshallerContext> unmarshaller = new UpdateIdentityPoolResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateIdentityPoolResult> responseHandler = new JsonResponseHandler<UpdateIdentityPoolResult>(
                     unmarshaller);
 
             response = invoke(request, responseHandler, executionContext);
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/AmbiguousRoleResolutionType.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/AmbiguousRoleResolutionType.java
new file mode 100644
index 0000000000..12bdcf64f9
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/AmbiguousRoleResolutionType.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Ambiguous Role Resolution Type
+ */
+public enum AmbiguousRoleResolutionType {
+
+    AuthenticatedRole("AuthenticatedRole"),
+    Deny("Deny");
+
+    private String value;
+
+    private AmbiguousRoleResolutionType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, AmbiguousRoleResolutionType> enumMap;
+    static {
+        enumMap = new HashMap<String, AmbiguousRoleResolutionType>();
+        enumMap.put("AuthenticatedRole", AuthenticatedRole);
+        enumMap.put("Deny", Deny);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return AmbiguousRoleResolutionType corresponding to the value
+     */
+    public static AmbiguousRoleResolutionType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CognitoIdentityProvider.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CognitoIdentityProvider.java
new file mode 100644
index 0000000000..0dbac04f7f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CognitoIdentityProvider.java
@@ -0,0 +1,311 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A provider representing an Amazon Cognito Identity User Pool and its client
+ * ID.
+ * </p>
+ */
+public class CognitoIdentityProvider implements Serializable {
+    /**
+     * <p>
+     * The provider name for an Amazon Cognito Identity User Pool. For example,
+     * <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._:/-]+<br/>
+     */
+    private String providerName;
+
+    /**
+     * <p>
+     * The client ID for the Amazon Cognito Identity User Pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w_]+<br/>
+     */
+    private String clientId;
+
+    /**
+     * <p>
+     * TRUE if server-side token validation is enabled for the identity
+     * provider’s token.
+     * </p>
+     */
+    private Boolean serverSideTokenCheck;
+
+    /**
+     * <p>
+     * The provider name for an Amazon Cognito Identity User Pool. For example,
+     * <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._:/-]+<br/>
+     *
+     * @return <p>
+     *         The provider name for an Amazon Cognito Identity User Pool. For
+     *         example,
+     *         <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>
+     *         .
+     *         </p>
+     */
+    public String getProviderName() {
+        return providerName;
+    }
+
+    /**
+     * <p>
+     * The provider name for an Amazon Cognito Identity User Pool. For example,
+     * <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._:/-]+<br/>
+     *
+     * @param providerName <p>
+     *            The provider name for an Amazon Cognito Identity User Pool.
+     *            For example,
+     *            <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>
+     *            .
+     *            </p>
+     */
+    public void setProviderName(String providerName) {
+        this.providerName = providerName;
+    }
+
+    /**
+     * <p>
+     * The provider name for an Amazon Cognito Identity User Pool. For example,
+     * <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._:/-]+<br/>
+     *
+     * @param providerName <p>
+     *            The provider name for an Amazon Cognito Identity User Pool.
+     *            For example,
+     *            <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>
+     *            .
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CognitoIdentityProvider withProviderName(String providerName) {
+        this.providerName = providerName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The client ID for the Amazon Cognito Identity User Pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w_]+<br/>
+     *
+     * @return <p>
+     *         The client ID for the Amazon Cognito Identity User Pool.
+     *         </p>
+     */
+    public String getClientId() {
+        return clientId;
+    }
+
+    /**
+     * <p>
+     * The client ID for the Amazon Cognito Identity User Pool.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w_]+<br/>
+     *
+     * @param clientId <p>
+     *            The client ID for the Amazon Cognito Identity User Pool.
+     *            </p>
+     */
+    public void setClientId(String clientId) {
+        this.clientId = clientId;
+    }
+
+    /**
+     * <p>
+     * The client ID for the Amazon Cognito Identity User Pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w_]+<br/>
+     *
+     * @param clientId <p>
+     *            The client ID for the Amazon Cognito Identity User Pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CognitoIdentityProvider withClientId(String clientId) {
+        this.clientId = clientId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if server-side token validation is enabled for the identity
+     * provider’s token.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if server-side token validation is enabled for the identity
+     *         provider’s token.
+     *         </p>
+     */
+    public Boolean isServerSideTokenCheck() {
+        return serverSideTokenCheck;
+    }
+
+    /**
+     * <p>
+     * TRUE if server-side token validation is enabled for the identity
+     * provider’s token.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if server-side token validation is enabled for the identity
+     *         provider’s token.
+     *         </p>
+     */
+    public Boolean getServerSideTokenCheck() {
+        return serverSideTokenCheck;
+    }
+
+    /**
+     * <p>
+     * TRUE if server-side token validation is enabled for the identity
+     * provider’s token.
+     * </p>
+     *
+     * @param serverSideTokenCheck <p>
+     *            TRUE if server-side token validation is enabled for the
+     *            identity provider’s token.
+     *            </p>
+     */
+    public void setServerSideTokenCheck(Boolean serverSideTokenCheck) {
+        this.serverSideTokenCheck = serverSideTokenCheck;
+    }
+
+    /**
+     * <p>
+     * TRUE if server-side token validation is enabled for the identity
+     * provider’s token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param serverSideTokenCheck <p>
+     *            TRUE if server-side token validation is enabled for the
+     *            identity provider’s token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CognitoIdentityProvider withServerSideTokenCheck(Boolean serverSideTokenCheck) {
+        this.serverSideTokenCheck = serverSideTokenCheck;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getProviderName() != null)
+            sb.append("ProviderName: " + getProviderName() + ",");
+        if (getClientId() != null)
+            sb.append("ClientId: " + getClientId() + ",");
+        if (getServerSideTokenCheck() != null)
+            sb.append("ServerSideTokenCheck: " + getServerSideTokenCheck());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getProviderName() == null) ? 0 : getProviderName().hashCode());
+        hashCode = prime * hashCode + ((getClientId() == null) ? 0 : getClientId().hashCode());
+        hashCode = prime * hashCode
+                + ((getServerSideTokenCheck() == null) ? 0 : getServerSideTokenCheck().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CognitoIdentityProvider == false)
+            return false;
+        CognitoIdentityProvider other = (CognitoIdentityProvider) obj;
+
+        if (other.getProviderName() == null ^ this.getProviderName() == null)
+            return false;
+        if (other.getProviderName() != null
+                && other.getProviderName().equals(this.getProviderName()) == false)
+            return false;
+        if (other.getClientId() == null ^ this.getClientId() == null)
+            return false;
+        if (other.getClientId() != null && other.getClientId().equals(this.getClientId()) == false)
+            return false;
+        if (other.getServerSideTokenCheck() == null ^ this.getServerSideTokenCheck() == null)
+            return false;
+        if (other.getServerSideTokenCheck() != null
+                && other.getServerSideTokenCheck().equals(this.getServerSideTokenCheck()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ConcurrentModificationException.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ConcurrentModificationException.java
new file mode 100644
index 0000000000..9c35d161e3
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ConcurrentModificationException.java
@@ -0,0 +1,37 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * Thrown if there are parallel requests to modify a resource.
+ * </p>
+ */
+public class ConcurrentModificationException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new ConcurrentModificationException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public ConcurrentModificationException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolRequest.java
new file mode 100644
index 0000000000..eb06862fc7
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolRequest.java
@@ -0,0 +1,793 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Creates a new identity pool. The identity pool is a store of user identity
+ * information that is specific to your AWS account. The limit on identity pools
+ * is 60 per account. The keys for <code>SupportedLoginProviders</code> are as
+ * follows:
+ * </p>
+ * <ul>
+ * <li>
+ * <p>
+ * Facebook: <code>graph.facebook.com</code>
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Google: <code>accounts.google.com</code>
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Amazon: <code>www.amazon.com</code>
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Twitter: <code>api.twitter.com</code>
+ * </p>
+ * </li>
+ * <li>
+ * <p>
+ * Digits: <code>www.digits.com</code>
+ * </p>
+ * </li>
+ * </ul>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class CreateIdentityPoolRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     */
+    private Boolean allowUnauthenticatedIdentities;
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     */
+    private java.util.Map<String, String> supportedLoginProviders;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This name acts as
+     * a placeholder that allows your backend and the Cognito service to
+     * communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).
+     * </p>
+     * <p>
+     * Once you have set a developer provider name, you cannot change it. Please
+     * take care in setting this parameter.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     */
+    private java.util.List<String> openIdConnectProviderARNs;
+
+    /**
+     * <p>
+     * An array of Amazon Cognito Identity user pools and their client IDs.
+     * </p>
+     */
+    private java.util.List<CognitoIdentityProvider> cognitoIdentityProviders;
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     */
+    private java.util.List<String> samlProviderARNs;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean isAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean getAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     */
+    public void setAllowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withAllowUnauthenticatedIdentities(
+            Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @return <p>
+     *         Optional key:value pairs mapping provider names to provider app
+     *         IDs.
+     *         </p>
+     */
+    public java.util.Map<String, String> getSupportedLoginProviders() {
+        return supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     */
+    public void setSupportedLoginProviders(java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withSupportedLoginProviders(
+            java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into SupportedLoginProviders
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into SupportedLoginProviders.
+     * @param value The corresponding value of the entry to be added into
+     *            SupportedLoginProviders.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest addSupportedLoginProvidersEntry(String key, String value) {
+        if (null == this.supportedLoginProviders) {
+            this.supportedLoginProviders = new java.util.HashMap<String, String>();
+        }
+        if (this.supportedLoginProviders.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.supportedLoginProviders.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into SupportedLoginProviders.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public CreateIdentityPoolRequest clearSupportedLoginProvidersEntries() {
+        this.supportedLoginProviders = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This name acts as
+     * a placeholder that allows your backend and the Cognito service to
+     * communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).
+     * </p>
+     * <p>
+     * Once you have set a developer provider name, you cannot change it. Please
+     * take care in setting this parameter.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users. This name
+     *         acts as a placeholder that allows your backend and the Cognito
+     *         service to communicate about the developer provider. For the
+     *         <code>DeveloperProviderName</code>, you can use letters as well
+     *         as period (<code>.</code>), underscore (<code>_</code>), and dash
+     *         (<code>-</code>).
+     *         </p>
+     *         <p>
+     *         Once you have set a developer provider name, you cannot change
+     *         it. Please take care in setting this parameter.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This name acts as
+     * a placeholder that allows your backend and the Cognito service to
+     * communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).
+     * </p>
+     * <p>
+     * Once you have set a developer provider name, you cannot change it. Please
+     * take care in setting this parameter.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users. This
+     *            name acts as a placeholder that allows your backend and the
+     *            Cognito service to communicate about the developer provider.
+     *            For the <code>DeveloperProviderName</code>, you can use
+     *            letters as well as period (<code>.</code>), underscore (
+     *            <code>_</code>), and dash (<code>-</code>).
+     *            </p>
+     *            <p>
+     *            Once you have set a developer provider name, you cannot change
+     *            it. Please take care in setting this parameter.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This name acts as
+     * a placeholder that allows your backend and the Cognito service to
+     * communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).
+     * </p>
+     * <p>
+     * Once you have set a developer provider name, you cannot change it. Please
+     * take care in setting this parameter.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users. This
+     *            name acts as a placeholder that allows your backend and the
+     *            Cognito service to communicate about the developer provider.
+     *            For the <code>DeveloperProviderName</code>, you can use
+     *            letters as well as period (<code>.</code>), underscore (
+     *            <code>_</code>), and dash (<code>-</code>).
+     *            </p>
+     *            <p>
+     *            Once you have set a developer provider name, you cannot change
+     *            it. Please take care in setting this parameter.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @return <p>
+     *         A list of OpendID Connect provider ARNs.
+     *         </p>
+     */
+    public java.util.List<String> getOpenIdConnectProviderARNs() {
+        return openIdConnectProviderARNs;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     */
+    public void setOpenIdConnectProviderARNs(java.util.Collection<String> openIdConnectProviderARNs) {
+        if (openIdConnectProviderARNs == null) {
+            this.openIdConnectProviderARNs = null;
+            return;
+        }
+
+        this.openIdConnectProviderARNs = new java.util.ArrayList<String>(openIdConnectProviderARNs);
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withOpenIdConnectProviderARNs(
+            String... openIdConnectProviderARNs) {
+        if (getOpenIdConnectProviderARNs() == null) {
+            this.openIdConnectProviderARNs = new java.util.ArrayList<String>(
+                    openIdConnectProviderARNs.length);
+        }
+        for (String value : openIdConnectProviderARNs) {
+            this.openIdConnectProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withOpenIdConnectProviderARNs(
+            java.util.Collection<String> openIdConnectProviderARNs) {
+        setOpenIdConnectProviderARNs(openIdConnectProviderARNs);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Cognito Identity user pools and their client IDs.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Cognito Identity user pools and their client
+     *         IDs.
+     *         </p>
+     */
+    public java.util.List<CognitoIdentityProvider> getCognitoIdentityProviders() {
+        return cognitoIdentityProviders;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Cognito Identity user pools and their client IDs.
+     * </p>
+     *
+     * @param cognitoIdentityProviders <p>
+     *            An array of Amazon Cognito Identity user pools and their
+     *            client IDs.
+     *            </p>
+     */
+    public void setCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        if (cognitoIdentityProviders == null) {
+            this.cognitoIdentityProviders = null;
+            return;
+        }
+
+        this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                cognitoIdentityProviders);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Cognito Identity user pools and their client IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            An array of Amazon Cognito Identity user pools and their
+     *            client IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withCognitoIdentityProviders(
+            CognitoIdentityProvider... cognitoIdentityProviders) {
+        if (getCognitoIdentityProviders() == null) {
+            this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                    cognitoIdentityProviders.length);
+        }
+        for (CognitoIdentityProvider value : cognitoIdentityProviders) {
+            this.cognitoIdentityProviders.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Cognito Identity user pools and their client IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            An array of Amazon Cognito Identity user pools and their
+     *            client IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        setCognitoIdentityProviders(cognitoIdentityProviders);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Resource Names (ARNs) of the SAML provider for
+     *         your identity pool.
+     *         </p>
+     */
+    public java.util.List<String> getSamlProviderARNs() {
+        return samlProviderARNs;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     */
+    public void setSamlProviderARNs(java.util.Collection<String> samlProviderARNs) {
+        if (samlProviderARNs == null) {
+            this.samlProviderARNs = null;
+            return;
+        }
+
+        this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withSamlProviderARNs(String... samlProviderARNs) {
+        if (getSamlProviderARNs() == null) {
+            this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs.length);
+        }
+        for (String value : samlProviderARNs) {
+            this.samlProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolRequest withSamlProviderARNs(
+            java.util.Collection<String> samlProviderARNs) {
+        setSamlProviderARNs(samlProviderARNs);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName() + ",");
+        if (getAllowUnauthenticatedIdentities() != null)
+            sb.append("AllowUnauthenticatedIdentities: " + getAllowUnauthenticatedIdentities()
+                    + ",");
+        if (getSupportedLoginProviders() != null)
+            sb.append("SupportedLoginProviders: " + getSupportedLoginProviders() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getOpenIdConnectProviderARNs() != null)
+            sb.append("OpenIdConnectProviderARNs: " + getOpenIdConnectProviderARNs() + ",");
+        if (getCognitoIdentityProviders() != null)
+            sb.append("CognitoIdentityProviders: " + getCognitoIdentityProviders() + ",");
+        if (getSamlProviderARNs() != null)
+            sb.append("SamlProviderARNs: " + getSamlProviderARNs());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAllowUnauthenticatedIdentities() == null) ? 0
+                        : getAllowUnauthenticatedIdentities().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSupportedLoginProviders() == null) ? 0 : getSupportedLoginProviders()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOpenIdConnectProviderARNs() == null) ? 0 : getOpenIdConnectProviderARNs()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCognitoIdentityProviders() == null) ? 0 : getCognitoIdentityProviders()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSamlProviderARNs() == null) ? 0 : getSamlProviderARNs().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateIdentityPoolRequest == false)
+            return false;
+        CreateIdentityPoolRequest other = (CreateIdentityPoolRequest) obj;
+
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() == null
+                ^ this.getAllowUnauthenticatedIdentities() == null)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() != null
+                && other.getAllowUnauthenticatedIdentities().equals(
+                        this.getAllowUnauthenticatedIdentities()) == false)
+            return false;
+        if (other.getSupportedLoginProviders() == null ^ this.getSupportedLoginProviders() == null)
+            return false;
+        if (other.getSupportedLoginProviders() != null
+                && other.getSupportedLoginProviders().equals(this.getSupportedLoginProviders()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() == null
+                ^ this.getOpenIdConnectProviderARNs() == null)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() != null
+                && other.getOpenIdConnectProviderARNs().equals(this.getOpenIdConnectProviderARNs()) == false)
+            return false;
+        if (other.getCognitoIdentityProviders() == null
+                ^ this.getCognitoIdentityProviders() == null)
+            return false;
+        if (other.getCognitoIdentityProviders() != null
+                && other.getCognitoIdentityProviders().equals(this.getCognitoIdentityProviders()) == false)
+            return false;
+        if (other.getSamlProviderARNs() == null ^ this.getSamlProviderARNs() == null)
+            return false;
+        if (other.getSamlProviderARNs() != null
+                && other.getSamlProviderARNs().equals(this.getSamlProviderARNs()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolResult.java
new file mode 100644
index 0000000000..fe12a0bc57
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/CreateIdentityPoolResult.java
@@ -0,0 +1,781 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * An object representing an Amazon Cognito identity pool.
+ * </p>
+ */
+public class CreateIdentityPoolResult implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     */
+    private Boolean allowUnauthenticatedIdentities;
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     */
+    private java.util.Map<String, String> supportedLoginProviders;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     */
+    private java.util.List<String> openIdConnectProviderARNs;
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     */
+    private java.util.List<CognitoIdentityProvider> cognitoIdentityProviders;
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     */
+    private java.util.List<String> samlProviderARNs;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean isAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean getAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     */
+    public void setAllowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withAllowUnauthenticatedIdentities(
+            Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @return <p>
+     *         Optional key:value pairs mapping provider names to provider app
+     *         IDs.
+     *         </p>
+     */
+    public java.util.Map<String, String> getSupportedLoginProviders() {
+        return supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     */
+    public void setSupportedLoginProviders(java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withSupportedLoginProviders(
+            java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into SupportedLoginProviders
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into SupportedLoginProviders.
+     * @param value The corresponding value of the entry to be added into
+     *            SupportedLoginProviders.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult addSupportedLoginProvidersEntry(String key, String value) {
+        if (null == this.supportedLoginProviders) {
+            this.supportedLoginProviders = new java.util.HashMap<String, String>();
+        }
+        if (this.supportedLoginProviders.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.supportedLoginProviders.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into SupportedLoginProviders.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public CreateIdentityPoolResult clearSupportedLoginProvidersEntries() {
+        this.supportedLoginProviders = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @return <p>
+     *         A list of OpendID Connect provider ARNs.
+     *         </p>
+     */
+    public java.util.List<String> getOpenIdConnectProviderARNs() {
+        return openIdConnectProviderARNs;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     */
+    public void setOpenIdConnectProviderARNs(java.util.Collection<String> openIdConnectProviderARNs) {
+        if (openIdConnectProviderARNs == null) {
+            this.openIdConnectProviderARNs = null;
+            return;
+        }
+
+        this.openIdConnectProviderARNs = new java.util.ArrayList<String>(openIdConnectProviderARNs);
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withOpenIdConnectProviderARNs(
+            String... openIdConnectProviderARNs) {
+        if (getOpenIdConnectProviderARNs() == null) {
+            this.openIdConnectProviderARNs = new java.util.ArrayList<String>(
+                    openIdConnectProviderARNs.length);
+        }
+        for (String value : openIdConnectProviderARNs) {
+            this.openIdConnectProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withOpenIdConnectProviderARNs(
+            java.util.Collection<String> openIdConnectProviderARNs) {
+        setOpenIdConnectProviderARNs(openIdConnectProviderARNs);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @return <p>
+     *         A list representing an Amazon Cognito Identity User Pool and its
+     *         client ID.
+     *         </p>
+     */
+    public java.util.List<CognitoIdentityProvider> getCognitoIdentityProviders() {
+        return cognitoIdentityProviders;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     */
+    public void setCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        if (cognitoIdentityProviders == null) {
+            this.cognitoIdentityProviders = null;
+            return;
+        }
+
+        this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                cognitoIdentityProviders);
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withCognitoIdentityProviders(
+            CognitoIdentityProvider... cognitoIdentityProviders) {
+        if (getCognitoIdentityProviders() == null) {
+            this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                    cognitoIdentityProviders.length);
+        }
+        for (CognitoIdentityProvider value : cognitoIdentityProviders) {
+            this.cognitoIdentityProviders.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        setCognitoIdentityProviders(cognitoIdentityProviders);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Resource Names (ARNs) of the SAML provider for
+     *         your identity pool.
+     *         </p>
+     */
+    public java.util.List<String> getSamlProviderARNs() {
+        return samlProviderARNs;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     */
+    public void setSamlProviderARNs(java.util.Collection<String> samlProviderARNs) {
+        if (samlProviderARNs == null) {
+            this.samlProviderARNs = null;
+            return;
+        }
+
+        this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withSamlProviderARNs(String... samlProviderARNs) {
+        if (getSamlProviderARNs() == null) {
+            this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs.length);
+        }
+        for (String value : samlProviderARNs) {
+            this.samlProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateIdentityPoolResult withSamlProviderARNs(
+            java.util.Collection<String> samlProviderARNs) {
+        setSamlProviderARNs(samlProviderARNs);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName() + ",");
+        if (getAllowUnauthenticatedIdentities() != null)
+            sb.append("AllowUnauthenticatedIdentities: " + getAllowUnauthenticatedIdentities()
+                    + ",");
+        if (getSupportedLoginProviders() != null)
+            sb.append("SupportedLoginProviders: " + getSupportedLoginProviders() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getOpenIdConnectProviderARNs() != null)
+            sb.append("OpenIdConnectProviderARNs: " + getOpenIdConnectProviderARNs() + ",");
+        if (getCognitoIdentityProviders() != null)
+            sb.append("CognitoIdentityProviders: " + getCognitoIdentityProviders() + ",");
+        if (getSamlProviderARNs() != null)
+            sb.append("SamlProviderARNs: " + getSamlProviderARNs());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAllowUnauthenticatedIdentities() == null) ? 0
+                        : getAllowUnauthenticatedIdentities().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSupportedLoginProviders() == null) ? 0 : getSupportedLoginProviders()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOpenIdConnectProviderARNs() == null) ? 0 : getOpenIdConnectProviderARNs()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCognitoIdentityProviders() == null) ? 0 : getCognitoIdentityProviders()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSamlProviderARNs() == null) ? 0 : getSamlProviderARNs().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateIdentityPoolResult == false)
+            return false;
+        CreateIdentityPoolResult other = (CreateIdentityPoolResult) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() == null
+                ^ this.getAllowUnauthenticatedIdentities() == null)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() != null
+                && other.getAllowUnauthenticatedIdentities().equals(
+                        this.getAllowUnauthenticatedIdentities()) == false)
+            return false;
+        if (other.getSupportedLoginProviders() == null ^ this.getSupportedLoginProviders() == null)
+            return false;
+        if (other.getSupportedLoginProviders() != null
+                && other.getSupportedLoginProviders().equals(this.getSupportedLoginProviders()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() == null
+                ^ this.getOpenIdConnectProviderARNs() == null)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() != null
+                && other.getOpenIdConnectProviderARNs().equals(this.getOpenIdConnectProviderARNs()) == false)
+            return false;
+        if (other.getCognitoIdentityProviders() == null
+                ^ this.getCognitoIdentityProviders() == null)
+            return false;
+        if (other.getCognitoIdentityProviders() != null
+                && other.getCognitoIdentityProviders().equals(this.getCognitoIdentityProviders()) == false)
+            return false;
+        if (other.getSamlProviderARNs() == null ^ this.getSamlProviderARNs() == null)
+            return false;
+        if (other.getSamlProviderARNs() != null
+                && other.getSamlProviderARNs().equals(this.getSamlProviderARNs()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesRequest.java
new file mode 100644
index 0000000000..8a7c10cb96
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesRequest.java
@@ -0,0 +1,159 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Deletes identities from an identity pool. You can specify a list of 1-60
+ * identities that you want to delete.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class DeleteIdentitiesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A list of 1-60 identities that you want to delete.
+     * </p>
+     */
+    private java.util.List<String> identityIdsToDelete;
+
+    /**
+     * <p>
+     * A list of 1-60 identities that you want to delete.
+     * </p>
+     *
+     * @return <p>
+     *         A list of 1-60 identities that you want to delete.
+     *         </p>
+     */
+    public java.util.List<String> getIdentityIdsToDelete() {
+        return identityIdsToDelete;
+    }
+
+    /**
+     * <p>
+     * A list of 1-60 identities that you want to delete.
+     * </p>
+     *
+     * @param identityIdsToDelete <p>
+     *            A list of 1-60 identities that you want to delete.
+     *            </p>
+     */
+    public void setIdentityIdsToDelete(java.util.Collection<String> identityIdsToDelete) {
+        if (identityIdsToDelete == null) {
+            this.identityIdsToDelete = null;
+            return;
+        }
+
+        this.identityIdsToDelete = new java.util.ArrayList<String>(identityIdsToDelete);
+    }
+
+    /**
+     * <p>
+     * A list of 1-60 identities that you want to delete.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identityIdsToDelete <p>
+     *            A list of 1-60 identities that you want to delete.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteIdentitiesRequest withIdentityIdsToDelete(String... identityIdsToDelete) {
+        if (getIdentityIdsToDelete() == null) {
+            this.identityIdsToDelete = new java.util.ArrayList<String>(identityIdsToDelete.length);
+        }
+        for (String value : identityIdsToDelete) {
+            this.identityIdsToDelete.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of 1-60 identities that you want to delete.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identityIdsToDelete <p>
+     *            A list of 1-60 identities that you want to delete.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteIdentitiesRequest withIdentityIdsToDelete(
+            java.util.Collection<String> identityIdsToDelete) {
+        setIdentityIdsToDelete(identityIdsToDelete);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityIdsToDelete() != null)
+            sb.append("IdentityIdsToDelete: " + getIdentityIdsToDelete());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityIdsToDelete() == null) ? 0 : getIdentityIdsToDelete().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteIdentitiesRequest == false)
+            return false;
+        DeleteIdentitiesRequest other = (DeleteIdentitiesRequest) obj;
+
+        if (other.getIdentityIdsToDelete() == null ^ this.getIdentityIdsToDelete() == null)
+            return false;
+        if (other.getIdentityIdsToDelete() != null
+                && other.getIdentityIdsToDelete().equals(this.getIdentityIdsToDelete()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesResult.java
new file mode 100644
index 0000000000..3bb1eb6cc7
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentitiesResult.java
@@ -0,0 +1,168 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned in response to a successful <code>DeleteIdentities</code> operation.
+ * </p>
+ */
+public class DeleteIdentitiesResult implements Serializable {
+    /**
+     * <p>
+     * An array of UnprocessedIdentityId objects, each of which contains an
+     * ErrorCode and IdentityId.
+     * </p>
+     */
+    private java.util.List<UnprocessedIdentityId> unprocessedIdentityIds;
+
+    /**
+     * <p>
+     * An array of UnprocessedIdentityId objects, each of which contains an
+     * ErrorCode and IdentityId.
+     * </p>
+     *
+     * @return <p>
+     *         An array of UnprocessedIdentityId objects, each of which contains
+     *         an ErrorCode and IdentityId.
+     *         </p>
+     */
+    public java.util.List<UnprocessedIdentityId> getUnprocessedIdentityIds() {
+        return unprocessedIdentityIds;
+    }
+
+    /**
+     * <p>
+     * An array of UnprocessedIdentityId objects, each of which contains an
+     * ErrorCode and IdentityId.
+     * </p>
+     *
+     * @param unprocessedIdentityIds <p>
+     *            An array of UnprocessedIdentityId objects, each of which
+     *            contains an ErrorCode and IdentityId.
+     *            </p>
+     */
+    public void setUnprocessedIdentityIds(
+            java.util.Collection<UnprocessedIdentityId> unprocessedIdentityIds) {
+        if (unprocessedIdentityIds == null) {
+            this.unprocessedIdentityIds = null;
+            return;
+        }
+
+        this.unprocessedIdentityIds = new java.util.ArrayList<UnprocessedIdentityId>(
+                unprocessedIdentityIds);
+    }
+
+    /**
+     * <p>
+     * An array of UnprocessedIdentityId objects, each of which contains an
+     * ErrorCode and IdentityId.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param unprocessedIdentityIds <p>
+     *            An array of UnprocessedIdentityId objects, each of which
+     *            contains an ErrorCode and IdentityId.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteIdentitiesResult withUnprocessedIdentityIds(
+            UnprocessedIdentityId... unprocessedIdentityIds) {
+        if (getUnprocessedIdentityIds() == null) {
+            this.unprocessedIdentityIds = new java.util.ArrayList<UnprocessedIdentityId>(
+                    unprocessedIdentityIds.length);
+        }
+        for (UnprocessedIdentityId value : unprocessedIdentityIds) {
+            this.unprocessedIdentityIds.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of UnprocessedIdentityId objects, each of which contains an
+     * ErrorCode and IdentityId.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param unprocessedIdentityIds <p>
+     *            An array of UnprocessedIdentityId objects, each of which
+     *            contains an ErrorCode and IdentityId.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteIdentitiesResult withUnprocessedIdentityIds(
+            java.util.Collection<UnprocessedIdentityId> unprocessedIdentityIds) {
+        setUnprocessedIdentityIds(unprocessedIdentityIds);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getUnprocessedIdentityIds() != null)
+            sb.append("UnprocessedIdentityIds: " + getUnprocessedIdentityIds());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getUnprocessedIdentityIds() == null) ? 0 : getUnprocessedIdentityIds()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteIdentitiesResult == false)
+            return false;
+        DeleteIdentitiesResult other = (DeleteIdentitiesResult) obj;
+
+        if (other.getUnprocessedIdentityIds() == null ^ this.getUnprocessedIdentityIds() == null)
+            return false;
+        if (other.getUnprocessedIdentityIds() != null
+                && other.getUnprocessedIdentityIds().equals(this.getUnprocessedIdentityIds()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentityPoolRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentityPoolRequest.java
new file mode 100644
index 0000000000..0b9b81ff0c
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeleteIdentityPoolRequest.java
@@ -0,0 +1,145 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Deletes a user pool. Once a pool is deleted, users will not be able to
+ * authenticate with the pool.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class DeleteIdentityPoolRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteIdentityPoolRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteIdentityPoolRequest == false)
+            return false;
+        DeleteIdentityPoolRequest other = (DeleteIdentityPoolRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolRequest.java
new file mode 100644
index 0000000000..7d2d26fee9
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolRequest.java
@@ -0,0 +1,145 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets details about a particular identity pool, including the pool name, ID
+ * description, creation date, and current number of users.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class DescribeIdentityPoolRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeIdentityPoolRequest == false)
+            return false;
+        DescribeIdentityPoolRequest other = (DescribeIdentityPoolRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolResult.java
new file mode 100644
index 0000000000..afbd75fdf9
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityPoolResult.java
@@ -0,0 +1,781 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * An object representing an Amazon Cognito identity pool.
+ * </p>
+ */
+public class DescribeIdentityPoolResult implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     */
+    private Boolean allowUnauthenticatedIdentities;
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     */
+    private java.util.Map<String, String> supportedLoginProviders;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     */
+    private java.util.List<String> openIdConnectProviderARNs;
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     */
+    private java.util.List<CognitoIdentityProvider> cognitoIdentityProviders;
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     */
+    private java.util.List<String> samlProviderARNs;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean isAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean getAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     */
+    public void setAllowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withAllowUnauthenticatedIdentities(
+            Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @return <p>
+     *         Optional key:value pairs mapping provider names to provider app
+     *         IDs.
+     *         </p>
+     */
+    public java.util.Map<String, String> getSupportedLoginProviders() {
+        return supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     */
+    public void setSupportedLoginProviders(java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withSupportedLoginProviders(
+            java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into SupportedLoginProviders
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into SupportedLoginProviders.
+     * @param value The corresponding value of the entry to be added into
+     *            SupportedLoginProviders.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult addSupportedLoginProvidersEntry(String key, String value) {
+        if (null == this.supportedLoginProviders) {
+            this.supportedLoginProviders = new java.util.HashMap<String, String>();
+        }
+        if (this.supportedLoginProviders.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.supportedLoginProviders.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into SupportedLoginProviders.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DescribeIdentityPoolResult clearSupportedLoginProvidersEntries() {
+        this.supportedLoginProviders = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @return <p>
+     *         A list of OpendID Connect provider ARNs.
+     *         </p>
+     */
+    public java.util.List<String> getOpenIdConnectProviderARNs() {
+        return openIdConnectProviderARNs;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     */
+    public void setOpenIdConnectProviderARNs(java.util.Collection<String> openIdConnectProviderARNs) {
+        if (openIdConnectProviderARNs == null) {
+            this.openIdConnectProviderARNs = null;
+            return;
+        }
+
+        this.openIdConnectProviderARNs = new java.util.ArrayList<String>(openIdConnectProviderARNs);
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withOpenIdConnectProviderARNs(
+            String... openIdConnectProviderARNs) {
+        if (getOpenIdConnectProviderARNs() == null) {
+            this.openIdConnectProviderARNs = new java.util.ArrayList<String>(
+                    openIdConnectProviderARNs.length);
+        }
+        for (String value : openIdConnectProviderARNs) {
+            this.openIdConnectProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withOpenIdConnectProviderARNs(
+            java.util.Collection<String> openIdConnectProviderARNs) {
+        setOpenIdConnectProviderARNs(openIdConnectProviderARNs);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @return <p>
+     *         A list representing an Amazon Cognito Identity User Pool and its
+     *         client ID.
+     *         </p>
+     */
+    public java.util.List<CognitoIdentityProvider> getCognitoIdentityProviders() {
+        return cognitoIdentityProviders;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     */
+    public void setCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        if (cognitoIdentityProviders == null) {
+            this.cognitoIdentityProviders = null;
+            return;
+        }
+
+        this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                cognitoIdentityProviders);
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withCognitoIdentityProviders(
+            CognitoIdentityProvider... cognitoIdentityProviders) {
+        if (getCognitoIdentityProviders() == null) {
+            this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                    cognitoIdentityProviders.length);
+        }
+        for (CognitoIdentityProvider value : cognitoIdentityProviders) {
+            this.cognitoIdentityProviders.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        setCognitoIdentityProviders(cognitoIdentityProviders);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Resource Names (ARNs) of the SAML provider for
+     *         your identity pool.
+     *         </p>
+     */
+    public java.util.List<String> getSamlProviderARNs() {
+        return samlProviderARNs;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     */
+    public void setSamlProviderARNs(java.util.Collection<String> samlProviderARNs) {
+        if (samlProviderARNs == null) {
+            this.samlProviderARNs = null;
+            return;
+        }
+
+        this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withSamlProviderARNs(String... samlProviderARNs) {
+        if (getSamlProviderARNs() == null) {
+            this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs.length);
+        }
+        for (String value : samlProviderARNs) {
+            this.samlProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityPoolResult withSamlProviderARNs(
+            java.util.Collection<String> samlProviderARNs) {
+        setSamlProviderARNs(samlProviderARNs);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName() + ",");
+        if (getAllowUnauthenticatedIdentities() != null)
+            sb.append("AllowUnauthenticatedIdentities: " + getAllowUnauthenticatedIdentities()
+                    + ",");
+        if (getSupportedLoginProviders() != null)
+            sb.append("SupportedLoginProviders: " + getSupportedLoginProviders() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getOpenIdConnectProviderARNs() != null)
+            sb.append("OpenIdConnectProviderARNs: " + getOpenIdConnectProviderARNs() + ",");
+        if (getCognitoIdentityProviders() != null)
+            sb.append("CognitoIdentityProviders: " + getCognitoIdentityProviders() + ",");
+        if (getSamlProviderARNs() != null)
+            sb.append("SamlProviderARNs: " + getSamlProviderARNs());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAllowUnauthenticatedIdentities() == null) ? 0
+                        : getAllowUnauthenticatedIdentities().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSupportedLoginProviders() == null) ? 0 : getSupportedLoginProviders()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOpenIdConnectProviderARNs() == null) ? 0 : getOpenIdConnectProviderARNs()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCognitoIdentityProviders() == null) ? 0 : getCognitoIdentityProviders()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSamlProviderARNs() == null) ? 0 : getSamlProviderARNs().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeIdentityPoolResult == false)
+            return false;
+        DescribeIdentityPoolResult other = (DescribeIdentityPoolResult) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() == null
+                ^ this.getAllowUnauthenticatedIdentities() == null)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() != null
+                && other.getAllowUnauthenticatedIdentities().equals(
+                        this.getAllowUnauthenticatedIdentities()) == false)
+            return false;
+        if (other.getSupportedLoginProviders() == null ^ this.getSupportedLoginProviders() == null)
+            return false;
+        if (other.getSupportedLoginProviders() != null
+                && other.getSupportedLoginProviders().equals(this.getSupportedLoginProviders()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() == null
+                ^ this.getOpenIdConnectProviderARNs() == null)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() != null
+                && other.getOpenIdConnectProviderARNs().equals(this.getOpenIdConnectProviderARNs()) == false)
+            return false;
+        if (other.getCognitoIdentityProviders() == null
+                ^ this.getCognitoIdentityProviders() == null)
+            return false;
+        if (other.getCognitoIdentityProviders() != null
+                && other.getCognitoIdentityProviders().equals(this.getCognitoIdentityProviders()) == false)
+            return false;
+        if (other.getSamlProviderARNs() == null ^ this.getSamlProviderARNs() == null)
+            return false;
+        if (other.getSamlProviderARNs() != null
+                && other.getSamlProviderARNs().equals(this.getSamlProviderARNs()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityRequest.java
new file mode 100644
index 0000000000..baf651de20
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityRequest.java
@@ -0,0 +1,144 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Returns metadata related to the given identity, including when the identity
+ * was created and any associated linked logins.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class DescribeIdentityRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityRequest withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeIdentityRequest == false)
+            return false;
+        DescribeIdentityRequest other = (DescribeIdentityRequest) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityResult.java
new file mode 100644
index 0000000000..2be54b468d
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DescribeIdentityResult.java
@@ -0,0 +1,357 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A description of the identity.
+ * </p>
+ */
+public class DescribeIdentityResult implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     */
+    private java.util.List<String> logins;
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     */
+    private java.util.Date creationDate;
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     */
+    private java.util.Date lastModifiedDate;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityResult withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @return <p>
+     *         A set of optional name-value pairs that map provider names to
+     *         provider tokens.
+     *         </p>
+     */
+    public java.util.List<String> getLogins() {
+        return logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     */
+    public void setLogins(java.util.Collection<String> logins) {
+        if (logins == null) {
+            this.logins = null;
+            return;
+        }
+
+        this.logins = new java.util.ArrayList<String>(logins);
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityResult withLogins(String... logins) {
+        if (getLogins() == null) {
+            this.logins = new java.util.ArrayList<String>(logins.length);
+        }
+        for (String value : logins) {
+            this.logins.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityResult withLogins(java.util.Collection<String> logins) {
+        setLogins(logins);
+        return this;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     *
+     * @return <p>
+     *         Date on which the identity was created.
+     *         </p>
+     */
+    public java.util.Date getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     *
+     * @param creationDate <p>
+     *            Date on which the identity was created.
+     *            </p>
+     */
+    public void setCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate <p>
+     *            Date on which the identity was created.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityResult withCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     *
+     * @return <p>
+     *         Date on which the identity was last modified.
+     *         </p>
+     */
+    public java.util.Date getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     *
+     * @param lastModifiedDate <p>
+     *            Date on which the identity was last modified.
+     *            </p>
+     */
+    public void setLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate <p>
+     *            Date on which the identity was last modified.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeIdentityResult withLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getLogins() != null)
+            sb.append("Logins: " + getLogins() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getLogins() == null) ? 0 : getLogins().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeIdentityResult == false)
+            return false;
+        DescribeIdentityResult other = (DescribeIdentityResult) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getLogins() == null ^ this.getLogins() == null)
+            return false;
+        if (other.getLogins() != null && other.getLogins().equals(this.getLogins()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeveloperUserAlreadyRegisteredException.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeveloperUserAlreadyRegisteredException.java
new file mode 100644
index 0000000000..a044a1376f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/DeveloperUserAlreadyRegisteredException.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * The provided developer user identifier is already registered with Cognito
+ * under a different identity ID.
+ * </p>
+ */
+public class DeveloperUserAlreadyRegisteredException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new DeveloperUserAlreadyRegisteredException with the
+     * specified error message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public DeveloperUserAlreadyRegisteredException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ErrorCode.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ErrorCode.java
new file mode 100644
index 0000000000..7378a4cd30
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ErrorCode.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Error Code
+ */
+public enum ErrorCode {
+
+    AccessDenied("AccessDenied"),
+    InternalServerError("InternalServerError");
+
+    private String value;
+
+    private ErrorCode(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, ErrorCode> enumMap;
+    static {
+        enumMap = new HashMap<String, ErrorCode>();
+        enumMap.put("AccessDenied", AccessDenied);
+        enumMap.put("InternalServerError", InternalServerError);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return ErrorCode corresponding to the value
+     */
+    public static ErrorCode fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesRequest.java
new file mode 100644
index 0000000000..eb798062d1
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesRequest.java
@@ -0,0 +1,144 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets the roles for an identity pool.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class GetIdentityPoolRolesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetIdentityPoolRolesRequest == false)
+            return false;
+        GetIdentityPoolRolesRequest other = (GetIdentityPoolRolesRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesResult.java
new file mode 100644
index 0000000000..1aeb49b7ed
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetIdentityPoolRolesResult.java
@@ -0,0 +1,371 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned in response to a successful <code>GetIdentityPoolRoles</code>
+ * operation.
+ * </p>
+ */
+public class GetIdentityPoolRolesResult implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. Currently only authenticated
+     * and unauthenticated roles are supported.
+     * </p>
+     */
+    private java.util.Map<String, String> roles;
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a String-to-<a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     */
+    private java.util.Map<String, RoleMapping> roleMappings;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesResult withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. Currently only authenticated
+     * and unauthenticated roles are supported.
+     * </p>
+     *
+     * @return <p>
+     *         The map of roles associated with this pool. Currently only
+     *         authenticated and unauthenticated roles are supported.
+     *         </p>
+     */
+    public java.util.Map<String, String> getRoles() {
+        return roles;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. Currently only authenticated
+     * and unauthenticated roles are supported.
+     * </p>
+     *
+     * @param roles <p>
+     *            The map of roles associated with this pool. Currently only
+     *            authenticated and unauthenticated roles are supported.
+     *            </p>
+     */
+    public void setRoles(java.util.Map<String, String> roles) {
+        this.roles = roles;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. Currently only authenticated
+     * and unauthenticated roles are supported.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roles <p>
+     *            The map of roles associated with this pool. Currently only
+     *            authenticated and unauthenticated roles are supported.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesResult withRoles(java.util.Map<String, String> roles) {
+        this.roles = roles;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. Currently only authenticated
+     * and unauthenticated roles are supported.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into Roles parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Roles.
+     * @param value The corresponding value of the entry to be added into Roles.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesResult addRolesEntry(String key, String value) {
+        if (null == this.roles) {
+            this.roles = new java.util.HashMap<String, String>();
+        }
+        if (this.roles.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.roles.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Roles.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public GetIdentityPoolRolesResult clearRolesEntries() {
+        this.roles = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a String-to-<a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     *
+     * @return <p>
+     *         How users for a specific identity provider are to mapped to
+     *         roles. This is a String-to-<a>RoleMapping</a> object map. The
+     *         string identifies the identity provider, for example,
+     *         "graph.facebook.com" or
+     *         "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *         .
+     *         </p>
+     */
+    public java.util.Map<String, RoleMapping> getRoleMappings() {
+        return roleMappings;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a String-to-<a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     *
+     * @param roleMappings <p>
+     *            How users for a specific identity provider are to mapped to
+     *            roles. This is a String-to-<a>RoleMapping</a> object map. The
+     *            string identifies the identity provider, for example,
+     *            "graph.facebook.com" or
+     *            "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *            .
+     *            </p>
+     */
+    public void setRoleMappings(java.util.Map<String, RoleMapping> roleMappings) {
+        this.roleMappings = roleMappings;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a String-to-<a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleMappings <p>
+     *            How users for a specific identity provider are to mapped to
+     *            roles. This is a String-to-<a>RoleMapping</a> object map. The
+     *            string identifies the identity provider, for example,
+     *            "graph.facebook.com" or
+     *            "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *            .
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesResult withRoleMappings(
+            java.util.Map<String, RoleMapping> roleMappings) {
+        this.roleMappings = roleMappings;
+        return this;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a String-to-<a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into RoleMappings parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into RoleMappings.
+     * @param value The corresponding value of the entry to be added into
+     *            RoleMappings.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetIdentityPoolRolesResult addRoleMappingsEntry(String key, RoleMapping value) {
+        if (null == this.roleMappings) {
+            this.roleMappings = new java.util.HashMap<String, RoleMapping>();
+        }
+        if (this.roleMappings.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.roleMappings.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into RoleMappings.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public GetIdentityPoolRolesResult clearRoleMappingsEntries() {
+        this.roleMappings = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getRoles() != null)
+            sb.append("Roles: " + getRoles() + ",");
+        if (getRoleMappings() != null)
+            sb.append("RoleMappings: " + getRoleMappings());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getRoles() == null) ? 0 : getRoles().hashCode());
+        hashCode = prime * hashCode
+                + ((getRoleMappings() == null) ? 0 : getRoleMappings().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetIdentityPoolRolesResult == false)
+            return false;
+        GetIdentityPoolRolesResult other = (GetIdentityPoolRolesResult) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getRoles() == null ^ this.getRoles() == null)
+            return false;
+        if (other.getRoles() != null && other.getRoles().equals(this.getRoles()) == false)
+            return false;
+        if (other.getRoleMappings() == null ^ this.getRoleMappings() == null)
+            return false;
+        if (other.getRoleMappings() != null
+                && other.getRoleMappings().equals(this.getRoleMappings()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityRequest.java
new file mode 100644
index 0000000000..5ba4666b61
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityRequest.java
@@ -0,0 +1,537 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID
+ * Connect token for a user authenticated by your backend authentication
+ * process. Supplying multiple logins will create an implicit linked account.
+ * You can only specify one developer provider as part of the
+ * <code>Logins</code> map, which is linked to the identity pool. The developer
+ * provider is the "domain" by which Cognito will refer to your users.
+ * </p>
+ * <p>
+ * You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new
+ * identity and to link new logins (that is, user credentials issued by a public
+ * provider or developer provider) to an existing identity. When you want to
+ * create a new identity, the <code>IdentityId</code> should be null. When you
+ * want to associate a new login with an existing authenticated/unauthenticated
+ * identity, you can do so by providing the existing <code>IdentityId</code>.
+ * This API will create the identity in the specified
+ * <code>IdentityPoolId</code>.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class GetOpenIdTokenForDeveloperIdentityRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens. Each name-value pair represents a user from a public provider or
+     * developer provider. If the user is from a developer provider, the
+     * name-value pair will follow the syntax
+     * <code>"developer_provider_name": "developer_user_identifier"</code>. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users; you provided this domain while creating/updating the identity
+     * pool. The developer user identifier is an identifier from your backend
+     * that uniquely identifies a user. When you create an identity pool, you
+     * can specify the supported logins.
+     * </p>
+     */
+    private java.util.Map<String, String> logins;
+
+    /**
+     * <p>
+     * The expiration time of the token, in seconds. You can specify a custom
+     * expiration time for the token so that you can cache it. If you don't
+     * provide an expiration time, the token is valid for 15 minutes. You can
+     * exchange the token with Amazon STS for temporary AWS credentials, which
+     * are valid for a maximum of one hour. The maximum token duration you can
+     * set is 24 hours. You should take care in setting the expiration time for
+     * a token, as there are significant security implications: an attacker
+     * could use a leaked token to access your AWS resources for the token's
+     * duration.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 86400<br/>
+     */
+    private Long tokenDuration;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens. Each name-value pair represents a user from a public provider or
+     * developer provider. If the user is from a developer provider, the
+     * name-value pair will follow the syntax
+     * <code>"developer_provider_name": "developer_user_identifier"</code>. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users; you provided this domain while creating/updating the identity
+     * pool. The developer user identifier is an identifier from your backend
+     * that uniquely identifies a user. When you create an identity pool, you
+     * can specify the supported logins.
+     * </p>
+     *
+     * @return <p>
+     *         A set of optional name-value pairs that map provider names to
+     *         provider tokens. Each name-value pair represents a user from a
+     *         public provider or developer provider. If the user is from a
+     *         developer provider, the name-value pair will follow the syntax
+     *         <code>"developer_provider_name": "developer_user_identifier"</code>
+     *         . The developer provider is the "domain" by which Cognito will
+     *         refer to your users; you provided this domain while
+     *         creating/updating the identity pool. The developer user
+     *         identifier is an identifier from your backend that uniquely
+     *         identifies a user. When you create an identity pool, you can
+     *         specify the supported logins.
+     *         </p>
+     */
+    public java.util.Map<String, String> getLogins() {
+        return logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens. Each name-value pair represents a user from a public provider or
+     * developer provider. If the user is from a developer provider, the
+     * name-value pair will follow the syntax
+     * <code>"developer_provider_name": "developer_user_identifier"</code>. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users; you provided this domain while creating/updating the identity
+     * pool. The developer user identifier is an identifier from your backend
+     * that uniquely identifies a user. When you create an identity pool, you
+     * can specify the supported logins.
+     * </p>
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens. Each name-value pair represents a user from a
+     *            public provider or developer provider. If the user is from a
+     *            developer provider, the name-value pair will follow the syntax
+     *            <code>"developer_provider_name": "developer_user_identifier"</code>
+     *            . The developer provider is the "domain" by which Cognito will
+     *            refer to your users; you provided this domain while
+     *            creating/updating the identity pool. The developer user
+     *            identifier is an identifier from your backend that uniquely
+     *            identifies a user. When you create an identity pool, you can
+     *            specify the supported logins.
+     *            </p>
+     */
+    public void setLogins(java.util.Map<String, String> logins) {
+        this.logins = logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens. Each name-value pair represents a user from a public provider or
+     * developer provider. If the user is from a developer provider, the
+     * name-value pair will follow the syntax
+     * <code>"developer_provider_name": "developer_user_identifier"</code>. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users; you provided this domain while creating/updating the identity
+     * pool. The developer user identifier is an identifier from your backend
+     * that uniquely identifies a user. When you create an identity pool, you
+     * can specify the supported logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens. Each name-value pair represents a user from a
+     *            public provider or developer provider. If the user is from a
+     *            developer provider, the name-value pair will follow the syntax
+     *            <code>"developer_provider_name": "developer_user_identifier"</code>
+     *            . The developer provider is the "domain" by which Cognito will
+     *            refer to your users; you provided this domain while
+     *            creating/updating the identity pool. The developer user
+     *            identifier is an identifier from your backend that uniquely
+     *            identifies a user. When you create an identity pool, you can
+     *            specify the supported logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest withLogins(java.util.Map<String, String> logins) {
+        this.logins = logins;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens. Each name-value pair represents a user from a public provider or
+     * developer provider. If the user is from a developer provider, the
+     * name-value pair will follow the syntax
+     * <code>"developer_provider_name": "developer_user_identifier"</code>. The
+     * developer provider is the "domain" by which Cognito will refer to your
+     * users; you provided this domain while creating/updating the identity
+     * pool. The developer user identifier is an identifier from your backend
+     * that uniquely identifies a user. When you create an identity pool, you
+     * can specify the supported logins.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into Logins parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Logins.
+     * @param value The corresponding value of the entry to be added into
+     *            Logins.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest addLoginsEntry(String key, String value) {
+        if (null == this.logins) {
+            this.logins = new java.util.HashMap<String, String>();
+        }
+        if (this.logins.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.logins.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Logins.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest clearLoginsEntries() {
+        this.logins = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The expiration time of the token, in seconds. You can specify a custom
+     * expiration time for the token so that you can cache it. If you don't
+     * provide an expiration time, the token is valid for 15 minutes. You can
+     * exchange the token with Amazon STS for temporary AWS credentials, which
+     * are valid for a maximum of one hour. The maximum token duration you can
+     * set is 24 hours. You should take care in setting the expiration time for
+     * a token, as there are significant security implications: an attacker
+     * could use a leaked token to access your AWS resources for the token's
+     * duration.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 86400<br/>
+     *
+     * @return <p>
+     *         The expiration time of the token, in seconds. You can specify a
+     *         custom expiration time for the token so that you can cache it. If
+     *         you don't provide an expiration time, the token is valid for 15
+     *         minutes. You can exchange the token with Amazon STS for temporary
+     *         AWS credentials, which are valid for a maximum of one hour. The
+     *         maximum token duration you can set is 24 hours. You should take
+     *         care in setting the expiration time for a token, as there are
+     *         significant security implications: an attacker could use a leaked
+     *         token to access your AWS resources for the token's duration.
+     *         </p>
+     */
+    public Long getTokenDuration() {
+        return tokenDuration;
+    }
+
+    /**
+     * <p>
+     * The expiration time of the token, in seconds. You can specify a custom
+     * expiration time for the token so that you can cache it. If you don't
+     * provide an expiration time, the token is valid for 15 minutes. You can
+     * exchange the token with Amazon STS for temporary AWS credentials, which
+     * are valid for a maximum of one hour. The maximum token duration you can
+     * set is 24 hours. You should take care in setting the expiration time for
+     * a token, as there are significant security implications: an attacker
+     * could use a leaked token to access your AWS resources for the token's
+     * duration.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 86400<br/>
+     *
+     * @param tokenDuration <p>
+     *            The expiration time of the token, in seconds. You can specify
+     *            a custom expiration time for the token so that you can cache
+     *            it. If you don't provide an expiration time, the token is
+     *            valid for 15 minutes. You can exchange the token with Amazon
+     *            STS for temporary AWS credentials, which are valid for a
+     *            maximum of one hour. The maximum token duration you can set is
+     *            24 hours. You should take care in setting the expiration time
+     *            for a token, as there are significant security implications:
+     *            an attacker could use a leaked token to access your AWS
+     *            resources for the token's duration.
+     *            </p>
+     */
+    public void setTokenDuration(Long tokenDuration) {
+        this.tokenDuration = tokenDuration;
+    }
+
+    /**
+     * <p>
+     * The expiration time of the token, in seconds. You can specify a custom
+     * expiration time for the token so that you can cache it. If you don't
+     * provide an expiration time, the token is valid for 15 minutes. You can
+     * exchange the token with Amazon STS for temporary AWS credentials, which
+     * are valid for a maximum of one hour. The maximum token duration you can
+     * set is 24 hours. You should take care in setting the expiration time for
+     * a token, as there are significant security implications: an attacker
+     * could use a leaked token to access your AWS resources for the token's
+     * duration.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 86400<br/>
+     *
+     * @param tokenDuration <p>
+     *            The expiration time of the token, in seconds. You can specify
+     *            a custom expiration time for the token so that you can cache
+     *            it. If you don't provide an expiration time, the token is
+     *            valid for 15 minutes. You can exchange the token with Amazon
+     *            STS for temporary AWS credentials, which are valid for a
+     *            maximum of one hour. The maximum token duration you can set is
+     *            24 hours. You should take care in setting the expiration time
+     *            for a token, as there are significant security implications:
+     *            an attacker could use a leaked token to access your AWS
+     *            resources for the token's duration.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityRequest withTokenDuration(Long tokenDuration) {
+        this.tokenDuration = tokenDuration;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getLogins() != null)
+            sb.append("Logins: " + getLogins() + ",");
+        if (getTokenDuration() != null)
+            sb.append("TokenDuration: " + getTokenDuration());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getLogins() == null) ? 0 : getLogins().hashCode());
+        hashCode = prime * hashCode
+                + ((getTokenDuration() == null) ? 0 : getTokenDuration().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetOpenIdTokenForDeveloperIdentityRequest == false)
+            return false;
+        GetOpenIdTokenForDeveloperIdentityRequest other = (GetOpenIdTokenForDeveloperIdentityRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getLogins() == null ^ this.getLogins() == null)
+            return false;
+        if (other.getLogins() != null && other.getLogins().equals(this.getLogins()) == false)
+            return false;
+        if (other.getTokenDuration() == null ^ this.getTokenDuration() == null)
+            return false;
+        if (other.getTokenDuration() != null
+                && other.getTokenDuration().equals(this.getTokenDuration()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityResult.java
new file mode 100644
index 0000000000..b1810857d0
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/GetOpenIdTokenForDeveloperIdentityResult.java
@@ -0,0 +1,198 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned in response to a successful
+ * <code>GetOpenIdTokenForDeveloperIdentity</code> request.
+ * </p>
+ */
+public class GetOpenIdTokenForDeveloperIdentityResult implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * An OpenID token.
+     * </p>
+     */
+    private String token;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityResult withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * An OpenID token.
+     * </p>
+     *
+     * @return <p>
+     *         An OpenID token.
+     *         </p>
+     */
+    public String getToken() {
+        return token;
+    }
+
+    /**
+     * <p>
+     * An OpenID token.
+     * </p>
+     *
+     * @param token <p>
+     *            An OpenID token.
+     *            </p>
+     */
+    public void setToken(String token) {
+        this.token = token;
+    }
+
+    /**
+     * <p>
+     * An OpenID token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param token <p>
+     *            An OpenID token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetOpenIdTokenForDeveloperIdentityResult withToken(String token) {
+        this.token = token;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getToken() != null)
+            sb.append("Token: " + getToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getToken() == null) ? 0 : getToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof GetOpenIdTokenForDeveloperIdentityResult == false)
+            return false;
+        GetOpenIdTokenForDeveloperIdentityResult other = (GetOpenIdTokenForDeveloperIdentityResult) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getToken() == null ^ this.getToken() == null)
+            return false;
+        if (other.getToken() != null && other.getToken().equals(this.getToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityDescription.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityDescription.java
new file mode 100644
index 0000000000..79035f9806
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityDescription.java
@@ -0,0 +1,357 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A description of the identity.
+ * </p>
+ */
+public class IdentityDescription implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     */
+    private java.util.List<String> logins;
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     */
+    private java.util.Date creationDate;
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     */
+    private java.util.Date lastModifiedDate;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityDescription withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @return <p>
+     *         A set of optional name-value pairs that map provider names to
+     *         provider tokens.
+     *         </p>
+     */
+    public java.util.List<String> getLogins() {
+        return logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     */
+    public void setLogins(java.util.Collection<String> logins) {
+        if (logins == null) {
+            this.logins = null;
+            return;
+        }
+
+        this.logins = new java.util.ArrayList<String>(logins);
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityDescription withLogins(String... logins) {
+        if (getLogins() == null) {
+            this.logins = new java.util.ArrayList<String>(logins.length);
+        }
+        for (String value : logins) {
+            this.logins.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityDescription withLogins(java.util.Collection<String> logins) {
+        setLogins(logins);
+        return this;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     *
+     * @return <p>
+     *         Date on which the identity was created.
+     *         </p>
+     */
+    public java.util.Date getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     *
+     * @param creationDate <p>
+     *            Date on which the identity was created.
+     *            </p>
+     */
+    public void setCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was created.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate <p>
+     *            Date on which the identity was created.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityDescription withCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     *
+     * @return <p>
+     *         Date on which the identity was last modified.
+     *         </p>
+     */
+    public java.util.Date getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     *
+     * @param lastModifiedDate <p>
+     *            Date on which the identity was last modified.
+     *            </p>
+     */
+    public void setLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * Date on which the identity was last modified.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate <p>
+     *            Date on which the identity was last modified.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityDescription withLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getLogins() != null)
+            sb.append("Logins: " + getLogins() + ",");
+        if (getCreationDate() != null)
+            sb.append("CreationDate: " + getCreationDate() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("LastModifiedDate: " + getLastModifiedDate());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getLogins() == null) ? 0 : getLogins().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof IdentityDescription == false)
+            return false;
+        IdentityDescription other = (IdentityDescription) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getLogins() == null ^ this.getLogins() == null)
+            return false;
+        if (other.getLogins() != null && other.getLogins().equals(this.getLogins()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityPoolShortDescription.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityPoolShortDescription.java
new file mode 100644
index 0000000000..39e524157c
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/IdentityPoolShortDescription.java
@@ -0,0 +1,216 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A description of the identity pool.
+ * </p>
+ */
+public class IdentityPoolShortDescription implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityPoolShortDescription withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IdentityPoolShortDescription withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof IdentityPoolShortDescription == false)
+            return false;
+        IdentityPoolShortDescription other = (IdentityPoolShortDescription) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesRequest.java
new file mode 100644
index 0000000000..c0a16b51b3
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesRequest.java
@@ -0,0 +1,384 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Lists the identities in a pool.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class ListIdentitiesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * An optional boolean parameter that allows you to hide disabled
+     * identities. If omitted, the ListIdentities API will include disabled
+     * identities in the response.
+     * </p>
+     */
+    private Boolean hideDisabled;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @return <p>
+     *         The maximum number of identities to return.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * <p>
+     * An optional boolean parameter that allows you to hide disabled
+     * identities. If omitted, the ListIdentities API will include disabled
+     * identities in the response.
+     * </p>
+     *
+     * @return <p>
+     *         An optional boolean parameter that allows you to hide disabled
+     *         identities. If omitted, the ListIdentities API will include
+     *         disabled identities in the response.
+     *         </p>
+     */
+    public Boolean isHideDisabled() {
+        return hideDisabled;
+    }
+
+    /**
+     * <p>
+     * An optional boolean parameter that allows you to hide disabled
+     * identities. If omitted, the ListIdentities API will include disabled
+     * identities in the response.
+     * </p>
+     *
+     * @return <p>
+     *         An optional boolean parameter that allows you to hide disabled
+     *         identities. If omitted, the ListIdentities API will include
+     *         disabled identities in the response.
+     *         </p>
+     */
+    public Boolean getHideDisabled() {
+        return hideDisabled;
+    }
+
+    /**
+     * <p>
+     * An optional boolean parameter that allows you to hide disabled
+     * identities. If omitted, the ListIdentities API will include disabled
+     * identities in the response.
+     * </p>
+     *
+     * @param hideDisabled <p>
+     *            An optional boolean parameter that allows you to hide disabled
+     *            identities. If omitted, the ListIdentities API will include
+     *            disabled identities in the response.
+     *            </p>
+     */
+    public void setHideDisabled(Boolean hideDisabled) {
+        this.hideDisabled = hideDisabled;
+    }
+
+    /**
+     * <p>
+     * An optional boolean parameter that allows you to hide disabled
+     * identities. If omitted, the ListIdentities API will include disabled
+     * identities in the response.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param hideDisabled <p>
+     *            An optional boolean parameter that allows you to hide disabled
+     *            identities. If omitted, the ListIdentities API will include
+     *            disabled identities in the response.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesRequest withHideDisabled(Boolean hideDisabled) {
+        this.hideDisabled = hideDisabled;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getMaxResults() != null)
+            sb.append("MaxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken() + ",");
+        if (getHideDisabled() != null)
+            sb.append("HideDisabled: " + getHideDisabled());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        hashCode = prime * hashCode
+                + ((getHideDisabled() == null) ? 0 : getHideDisabled().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListIdentitiesRequest == false)
+            return false;
+        ListIdentitiesRequest other = (ListIdentitiesRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        if (other.getHideDisabled() == null ^ this.getHideDisabled() == null)
+            return false;
+        if (other.getHideDisabled() != null
+                && other.getHideDisabled().equals(this.getHideDisabled()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesResult.java
new file mode 100644
index 0000000000..22a4d5aabd
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentitiesResult.java
@@ -0,0 +1,307 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The response to a ListIdentities request.
+ * </p>
+ */
+public class ListIdentitiesResult implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * An object containing a set of identities and associated mappings.
+     * </p>
+     */
+    private java.util.List<IdentityDescription> identities;
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesResult withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * An object containing a set of identities and associated mappings.
+     * </p>
+     *
+     * @return <p>
+     *         An object containing a set of identities and associated mappings.
+     *         </p>
+     */
+    public java.util.List<IdentityDescription> getIdentities() {
+        return identities;
+    }
+
+    /**
+     * <p>
+     * An object containing a set of identities and associated mappings.
+     * </p>
+     *
+     * @param identities <p>
+     *            An object containing a set of identities and associated
+     *            mappings.
+     *            </p>
+     */
+    public void setIdentities(java.util.Collection<IdentityDescription> identities) {
+        if (identities == null) {
+            this.identities = null;
+            return;
+        }
+
+        this.identities = new java.util.ArrayList<IdentityDescription>(identities);
+    }
+
+    /**
+     * <p>
+     * An object containing a set of identities and associated mappings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identities <p>
+     *            An object containing a set of identities and associated
+     *            mappings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesResult withIdentities(IdentityDescription... identities) {
+        if (getIdentities() == null) {
+            this.identities = new java.util.ArrayList<IdentityDescription>(identities.length);
+        }
+        for (IdentityDescription value : identities) {
+            this.identities.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An object containing a set of identities and associated mappings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identities <p>
+     *            An object containing a set of identities and associated
+     *            mappings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesResult withIdentities(java.util.Collection<IdentityDescription> identities) {
+        setIdentities(identities);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentitiesResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentities() != null)
+            sb.append("Identities: " + getIdentities() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getIdentities() == null) ? 0 : getIdentities().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListIdentitiesResult == false)
+            return false;
+        ListIdentitiesResult other = (ListIdentitiesResult) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentities() == null ^ this.getIdentities() == null)
+            return false;
+        if (other.getIdentities() != null
+                && other.getIdentities().equals(this.getIdentities()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsRequest.java
new file mode 100644
index 0000000000..defd258553
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsRequest.java
@@ -0,0 +1,215 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Lists all of the Cognito identity pools registered for your account.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class ListIdentityPoolsRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @return <p>
+     *         The maximum number of identities to return.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentityPoolsRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentityPoolsRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getMaxResults() != null)
+            sb.append("MaxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListIdentityPoolsRequest == false)
+            return false;
+        ListIdentityPoolsRequest other = (ListIdentityPoolsRequest) obj;
+
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsResult.java
new file mode 100644
index 0000000000..e352a17a2f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/ListIdentityPoolsResult.java
@@ -0,0 +1,230 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The result of a successful ListIdentityPools action.
+ * </p>
+ */
+public class ListIdentityPoolsResult implements Serializable {
+    /**
+     * <p>
+     * The identity pools returned by the ListIdentityPools action.
+     * </p>
+     */
+    private java.util.List<IdentityPoolShortDescription> identityPools;
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * The identity pools returned by the ListIdentityPools action.
+     * </p>
+     *
+     * @return <p>
+     *         The identity pools returned by the ListIdentityPools action.
+     *         </p>
+     */
+    public java.util.List<IdentityPoolShortDescription> getIdentityPools() {
+        return identityPools;
+    }
+
+    /**
+     * <p>
+     * The identity pools returned by the ListIdentityPools action.
+     * </p>
+     *
+     * @param identityPools <p>
+     *            The identity pools returned by the ListIdentityPools action.
+     *            </p>
+     */
+    public void setIdentityPools(java.util.Collection<IdentityPoolShortDescription> identityPools) {
+        if (identityPools == null) {
+            this.identityPools = null;
+            return;
+        }
+
+        this.identityPools = new java.util.ArrayList<IdentityPoolShortDescription>(identityPools);
+    }
+
+    /**
+     * <p>
+     * The identity pools returned by the ListIdentityPools action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identityPools <p>
+     *            The identity pools returned by the ListIdentityPools action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentityPoolsResult withIdentityPools(IdentityPoolShortDescription... identityPools) {
+        if (getIdentityPools() == null) {
+            this.identityPools = new java.util.ArrayList<IdentityPoolShortDescription>(
+                    identityPools.length);
+        }
+        for (IdentityPoolShortDescription value : identityPools) {
+            this.identityPools.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The identity pools returned by the ListIdentityPools action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param identityPools <p>
+     *            The identity pools returned by the ListIdentityPools action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentityPoolsResult withIdentityPools(
+            java.util.Collection<IdentityPoolShortDescription> identityPools) {
+        setIdentityPools(identityPools);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListIdentityPoolsResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPools() != null)
+            sb.append("IdentityPools: " + getIdentityPools() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPools() == null) ? 0 : getIdentityPools().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListIdentityPoolsResult == false)
+            return false;
+        ListIdentityPoolsResult other = (ListIdentityPoolsResult) obj;
+
+        if (other.getIdentityPools() == null ^ this.getIdentityPools() == null)
+            return false;
+        if (other.getIdentityPools() != null
+                && other.getIdentityPools().equals(this.getIdentityPools()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityRequest.java
new file mode 100644
index 0000000000..55f9c29f8b
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityRequest.java
@@ -0,0 +1,515 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Retrieves the <code>IdentityID</code> associated with a
+ * <code>DeveloperUserIdentifier</code> or the list of
+ * <code>DeveloperUserIdentifier</code>s associated with an
+ * <code>IdentityId</code> for an existing identity. Either
+ * <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be
+ * null. If you supply only one of these values, the other value will be
+ * searched in the database and returned as a part of the response. If you
+ * supply both, <code>DeveloperUserIdentifier</code> will be matched against
+ * <code>IdentityID</code>. If the values are verified against the database, the
+ * response returns both values and is the same as the request. Otherwise a
+ * <code>ResourceConflictException</code> is thrown.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class LookupDeveloperIdentityRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user. Typically, a developer identity provider would issue many developer
+     * user identifiers, in keeping with the number of users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     */
+    private String developerUserIdentifier;
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityRequest withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user. Typically, a developer identity provider would issue many developer
+     * user identifiers, in keeping with the number of users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @return <p>
+     *         A unique ID used by your backend authentication process to
+     *         identify a user. Typically, a developer identity provider would
+     *         issue many developer user identifiers, in keeping with the number
+     *         of users.
+     *         </p>
+     */
+    public String getDeveloperUserIdentifier() {
+        return developerUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user. Typically, a developer identity provider would issue many developer
+     * user identifiers, in keeping with the number of users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param developerUserIdentifier <p>
+     *            A unique ID used by your backend authentication process to
+     *            identify a user. Typically, a developer identity provider
+     *            would issue many developer user identifiers, in keeping with
+     *            the number of users.
+     *            </p>
+     */
+    public void setDeveloperUserIdentifier(String developerUserIdentifier) {
+        this.developerUserIdentifier = developerUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user. Typically, a developer identity provider would issue many developer
+     * user identifiers, in keeping with the number of users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param developerUserIdentifier <p>
+     *            A unique ID used by your backend authentication process to
+     *            identify a user. Typically, a developer identity provider
+     *            would issue many developer user identifiers, in keeping with
+     *            the number of users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityRequest withDeveloperUserIdentifier(String developerUserIdentifier) {
+        this.developerUserIdentifier = developerUserIdentifier;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @return <p>
+     *         The maximum number of identities to return.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of identities to return.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 60<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of identities to return.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token. The first call you make will have
+     *         <code>NextToken</code> set to null. After that the service will
+     *         return <code>NextToken</code> values as needed. For example,
+     *         let's say you make a request with <code>MaxResults</code> set to
+     *         10, and there are 20 matches in the database. The service will
+     *         return a pagination token as a part of the response. This token
+     *         can be used to call the API again and get results starting from
+     *         the 11th match.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token. The first call you make will have
+     *            <code>NextToken</code> set to null. After that the service
+     *            will return <code>NextToken</code> values as needed. For
+     *            example, let's say you make a request with
+     *            <code>MaxResults</code> set to 10, and there are 20 matches in
+     *            the database. The service will return a pagination token as a
+     *            part of the response. This token can be used to call the API
+     *            again and get results starting from the 11th match.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token. The first call you make will have
+     *            <code>NextToken</code> set to null. After that the service
+     *            will return <code>NextToken</code> values as needed. For
+     *            example, let's say you make a request with
+     *            <code>MaxResults</code> set to 10, and there are 20 matches in
+     *            the database. The service will return a pagination token as a
+     *            part of the response. This token can be used to call the API
+     *            again and get results starting from the 11th match.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getDeveloperUserIdentifier() != null)
+            sb.append("DeveloperUserIdentifier: " + getDeveloperUserIdentifier() + ",");
+        if (getMaxResults() != null)
+            sb.append("MaxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperUserIdentifier() == null) ? 0 : getDeveloperUserIdentifier()
+                        .hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof LookupDeveloperIdentityRequest == false)
+            return false;
+        LookupDeveloperIdentityRequest other = (LookupDeveloperIdentityRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getDeveloperUserIdentifier() == null ^ this.getDeveloperUserIdentifier() == null)
+            return false;
+        if (other.getDeveloperUserIdentifier() != null
+                && other.getDeveloperUserIdentifier().equals(this.getDeveloperUserIdentifier()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityResult.java
new file mode 100644
index 0000000000..513c1a50e3
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/LookupDeveloperIdentityResult.java
@@ -0,0 +1,377 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned in response to a successful <code>LookupDeveloperIdentity</code>
+ * action.
+ * </p>
+ */
+public class LookupDeveloperIdentityResult implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * This is the list of developer user identifiers associated with an
+     * identity ID. Cognito supports the association of multiple developer user
+     * identifiers with an identity ID.
+     * </p>
+     */
+    private java.util.List<String> developerUserIdentifierList;
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityResult withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * This is the list of developer user identifiers associated with an
+     * identity ID. Cognito supports the association of multiple developer user
+     * identifiers with an identity ID.
+     * </p>
+     *
+     * @return <p>
+     *         This is the list of developer user identifiers associated with an
+     *         identity ID. Cognito supports the association of multiple
+     *         developer user identifiers with an identity ID.
+     *         </p>
+     */
+    public java.util.List<String> getDeveloperUserIdentifierList() {
+        return developerUserIdentifierList;
+    }
+
+    /**
+     * <p>
+     * This is the list of developer user identifiers associated with an
+     * identity ID. Cognito supports the association of multiple developer user
+     * identifiers with an identity ID.
+     * </p>
+     *
+     * @param developerUserIdentifierList <p>
+     *            This is the list of developer user identifiers associated with
+     *            an identity ID. Cognito supports the association of multiple
+     *            developer user identifiers with an identity ID.
+     *            </p>
+     */
+    public void setDeveloperUserIdentifierList(
+            java.util.Collection<String> developerUserIdentifierList) {
+        if (developerUserIdentifierList == null) {
+            this.developerUserIdentifierList = null;
+            return;
+        }
+
+        this.developerUserIdentifierList = new java.util.ArrayList<String>(
+                developerUserIdentifierList);
+    }
+
+    /**
+     * <p>
+     * This is the list of developer user identifiers associated with an
+     * identity ID. Cognito supports the association of multiple developer user
+     * identifiers with an identity ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param developerUserIdentifierList <p>
+     *            This is the list of developer user identifiers associated with
+     *            an identity ID. Cognito supports the association of multiple
+     *            developer user identifiers with an identity ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityResult withDeveloperUserIdentifierList(
+            String... developerUserIdentifierList) {
+        if (getDeveloperUserIdentifierList() == null) {
+            this.developerUserIdentifierList = new java.util.ArrayList<String>(
+                    developerUserIdentifierList.length);
+        }
+        for (String value : developerUserIdentifierList) {
+            this.developerUserIdentifierList.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * This is the list of developer user identifiers associated with an
+     * identity ID. Cognito supports the association of multiple developer user
+     * identifiers with an identity ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param developerUserIdentifierList <p>
+     *            This is the list of developer user identifiers associated with
+     *            an identity ID. Cognito supports the association of multiple
+     *            developer user identifiers with an identity ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityResult withDeveloperUserIdentifierList(
+            java.util.Collection<String> developerUserIdentifierList) {
+        setDeveloperUserIdentifierList(developerUserIdentifierList);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @return <p>
+     *         A pagination token. The first call you make will have
+     *         <code>NextToken</code> set to null. After that the service will
+     *         return <code>NextToken</code> values as needed. For example,
+     *         let's say you make a request with <code>MaxResults</code> set to
+     *         10, and there are 20 matches in the database. The service will
+     *         return a pagination token as a part of the response. This token
+     *         can be used to call the API again and get results starting from
+     *         the 11th match.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token. The first call you make will have
+     *            <code>NextToken</code> set to null. After that the service
+     *            will return <code>NextToken</code> values as needed. For
+     *            example, let's say you make a request with
+     *            <code>MaxResults</code> set to 10, and there are 20 matches in
+     *            the database. The service will return a pagination token as a
+     *            part of the response. This token can be used to call the API
+     *            again and get results starting from the 11th match.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * A pagination token. The first call you make will have
+     * <code>NextToken</code> set to null. After that the service will return
+     * <code>NextToken</code> values as needed. For example, let's say you make
+     * a request with <code>MaxResults</code> set to 10, and there are 20
+     * matches in the database. The service will return a pagination token as a
+     * part of the response. This token can be used to call the API again and
+     * get results starting from the 11th match.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - <br/>
+     * <b>Pattern: </b>[\S]+<br/>
+     *
+     * @param nextToken <p>
+     *            A pagination token. The first call you make will have
+     *            <code>NextToken</code> set to null. After that the service
+     *            will return <code>NextToken</code> values as needed. For
+     *            example, let's say you make a request with
+     *            <code>MaxResults</code> set to 10, and there are 20 matches in
+     *            the database. The service will return a pagination token as a
+     *            part of the response. This token can be used to call the API
+     *            again and get results starting from the 11th match.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public LookupDeveloperIdentityResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getDeveloperUserIdentifierList() != null)
+            sb.append("DeveloperUserIdentifierList: " + getDeveloperUserIdentifierList() + ",");
+        if (getNextToken() != null)
+            sb.append("NextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperUserIdentifierList() == null) ? 0
+                        : getDeveloperUserIdentifierList().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof LookupDeveloperIdentityResult == false)
+            return false;
+        LookupDeveloperIdentityResult other = (LookupDeveloperIdentityResult) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getDeveloperUserIdentifierList() == null
+                ^ this.getDeveloperUserIdentifierList() == null)
+            return false;
+        if (other.getDeveloperUserIdentifierList() != null
+                && other.getDeveloperUserIdentifierList().equals(
+                        this.getDeveloperUserIdentifierList()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRule.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRule.java
new file mode 100644
index 0000000000..ba8c10b844
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRule.java
@@ -0,0 +1,415 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A rule that maps a claim name, a claim value, and a match type to a role ARN.
+ * </p>
+ */
+public class MappingRule implements Serializable {
+    /**
+     * <p>
+     * The claim name that must be present in the token, for example, "isAdmin"
+     * or "paid".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>[\p{L}\p{M}\p{S}\p{N}\p{P}]+<br/>
+     */
+    private String claim;
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     */
+    private String matchType;
+
+    /**
+     * <p>
+     * A brief string that the claim must match, for example, "paid" or "yes".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     */
+    private String value;
+
+    /**
+     * <p>
+     * The role ARN.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleARN;
+
+    /**
+     * <p>
+     * The claim name that must be present in the token, for example, "isAdmin"
+     * or "paid".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>[\p{L}\p{M}\p{S}\p{N}\p{P}]+<br/>
+     *
+     * @return <p>
+     *         The claim name that must be present in the token, for example,
+     *         "isAdmin" or "paid".
+     *         </p>
+     */
+    public String getClaim() {
+        return claim;
+    }
+
+    /**
+     * <p>
+     * The claim name that must be present in the token, for example, "isAdmin"
+     * or "paid".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>[\p{L}\p{M}\p{S}\p{N}\p{P}]+<br/>
+     *
+     * @param claim <p>
+     *            The claim name that must be present in the token, for example,
+     *            "isAdmin" or "paid".
+     *            </p>
+     */
+    public void setClaim(String claim) {
+        this.claim = claim;
+    }
+
+    /**
+     * <p>
+     * The claim name that must be present in the token, for example, "isAdmin"
+     * or "paid".
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>[\p{L}\p{M}\p{S}\p{N}\p{P}]+<br/>
+     *
+     * @param claim <p>
+     *            The claim name that must be present in the token, for example,
+     *            "isAdmin" or "paid".
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MappingRule withClaim(String claim) {
+        this.claim = claim;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     *
+     * @return <p>
+     *         The match condition that specifies how closely the claim value in
+     *         the IdP token must match <code>Value</code>.
+     *         </p>
+     * @see MappingRuleMatchType
+     */
+    public String getMatchType() {
+        return matchType;
+    }
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     *
+     * @param matchType <p>
+     *            The match condition that specifies how closely the claim value
+     *            in the IdP token must match <code>Value</code>.
+     *            </p>
+     * @see MappingRuleMatchType
+     */
+    public void setMatchType(String matchType) {
+        this.matchType = matchType;
+    }
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     *
+     * @param matchType <p>
+     *            The match condition that specifies how closely the claim value
+     *            in the IdP token must match <code>Value</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MappingRuleMatchType
+     */
+    public MappingRule withMatchType(String matchType) {
+        this.matchType = matchType;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     *
+     * @param matchType <p>
+     *            The match condition that specifies how closely the claim value
+     *            in the IdP token must match <code>Value</code>.
+     *            </p>
+     * @see MappingRuleMatchType
+     */
+    public void setMatchType(MappingRuleMatchType matchType) {
+        this.matchType = matchType.toString();
+    }
+
+    /**
+     * <p>
+     * The match condition that specifies how closely the claim value in the IdP
+     * token must match <code>Value</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Equals, Contains, StartsWith, NotEqual
+     *
+     * @param matchType <p>
+     *            The match condition that specifies how closely the claim value
+     *            in the IdP token must match <code>Value</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MappingRuleMatchType
+     */
+    public MappingRule withMatchType(MappingRuleMatchType matchType) {
+        this.matchType = matchType.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * A brief string that the claim must match, for example, "paid" or "yes".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     *
+     * @return <p>
+     *         A brief string that the claim must match, for example, "paid" or
+     *         "yes".
+     *         </p>
+     */
+    public String getValue() {
+        return value;
+    }
+
+    /**
+     * <p>
+     * A brief string that the claim must match, for example, "paid" or "yes".
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     *
+     * @param value <p>
+     *            A brief string that the claim must match, for example, "paid"
+     *            or "yes".
+     *            </p>
+     */
+    public void setValue(String value) {
+        this.value = value;
+    }
+
+    /**
+     * <p>
+     * A brief string that the claim must match, for example, "paid" or "yes".
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     *
+     * @param value <p>
+     *            A brief string that the claim must match, for example, "paid"
+     *            or "yes".
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MappingRule withValue(String value) {
+        this.value = value;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The role ARN.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The role ARN.
+     *         </p>
+     */
+    public String getRoleARN() {
+        return roleARN;
+    }
+
+    /**
+     * <p>
+     * The role ARN.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleARN <p>
+     *            The role ARN.
+     *            </p>
+     */
+    public void setRoleARN(String roleARN) {
+        this.roleARN = roleARN;
+    }
+
+    /**
+     * <p>
+     * The role ARN.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleARN <p>
+     *            The role ARN.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MappingRule withRoleARN(String roleARN) {
+        this.roleARN = roleARN;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getClaim() != null)
+            sb.append("Claim: " + getClaim() + ",");
+        if (getMatchType() != null)
+            sb.append("MatchType: " + getMatchType() + ",");
+        if (getValue() != null)
+            sb.append("Value: " + getValue() + ",");
+        if (getRoleARN() != null)
+            sb.append("RoleARN: " + getRoleARN());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getClaim() == null) ? 0 : getClaim().hashCode());
+        hashCode = prime * hashCode + ((getMatchType() == null) ? 0 : getMatchType().hashCode());
+        hashCode = prime * hashCode + ((getValue() == null) ? 0 : getValue().hashCode());
+        hashCode = prime * hashCode + ((getRoleARN() == null) ? 0 : getRoleARN().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MappingRule == false)
+            return false;
+        MappingRule other = (MappingRule) obj;
+
+        if (other.getClaim() == null ^ this.getClaim() == null)
+            return false;
+        if (other.getClaim() != null && other.getClaim().equals(this.getClaim()) == false)
+            return false;
+        if (other.getMatchType() == null ^ this.getMatchType() == null)
+            return false;
+        if (other.getMatchType() != null
+                && other.getMatchType().equals(this.getMatchType()) == false)
+            return false;
+        if (other.getValue() == null ^ this.getValue() == null)
+            return false;
+        if (other.getValue() != null && other.getValue().equals(this.getValue()) == false)
+            return false;
+        if (other.getRoleARN() == null ^ this.getRoleARN() == null)
+            return false;
+        if (other.getRoleARN() != null && other.getRoleARN().equals(this.getRoleARN()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRuleMatchType.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRuleMatchType.java
new file mode 100644
index 0000000000..d12300b7f8
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MappingRuleMatchType.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Mapping Rule Match Type
+ */
+public enum MappingRuleMatchType {
+
+    Equals("Equals"),
+    Contains("Contains"),
+    StartsWith("StartsWith"),
+    NotEqual("NotEqual");
+
+    private String value;
+
+    private MappingRuleMatchType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, MappingRuleMatchType> enumMap;
+    static {
+        enumMap = new HashMap<String, MappingRuleMatchType>();
+        enumMap.put("Equals", Equals);
+        enumMap.put("Contains", Contains);
+        enumMap.put("StartsWith", StartsWith);
+        enumMap.put("NotEqual", NotEqual);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return MappingRuleMatchType corresponding to the value
+     */
+    public static MappingRuleMatchType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesRequest.java
new file mode 100644
index 0000000000..d21217688e
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesRequest.java
@@ -0,0 +1,431 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Merges two users having different <code>IdentityId</code>s, existing in the
+ * same identity pool, and identified by the same developer provider. You can
+ * use this action to request that discrete users be merged and identified as a
+ * single user in the Cognito environment. Cognito associates the given source
+ * user (<code>SourceUserIdentifier</code>) with the <code>IdentityId</code> of
+ * the <code>DestinationUserIdentifier</code>. Only developer-authenticated
+ * users can be merged. If the users to be merged are associated with the same
+ * public provider, but as two different users, an exception will be thrown.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class MergeDeveloperIdentitiesRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * User identifier for the source user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     */
+    private String sourceUserIdentifier;
+
+    /**
+     * <p>
+     * User identifier for the destination user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     */
+    private String destinationUserIdentifier;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This is a
+     * (pseudo) domain name that you provide while creating an identity pool.
+     * This name acts as a placeholder that allows your backend and the Cognito
+     * service to communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (.), underscore (_), and dash (-).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * User identifier for the source user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @return <p>
+     *         User identifier for the source user. The value should be a
+     *         <code>DeveloperUserIdentifier</code>.
+     *         </p>
+     */
+    public String getSourceUserIdentifier() {
+        return sourceUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * User identifier for the source user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param sourceUserIdentifier <p>
+     *            User identifier for the source user. The value should be a
+     *            <code>DeveloperUserIdentifier</code>.
+     *            </p>
+     */
+    public void setSourceUserIdentifier(String sourceUserIdentifier) {
+        this.sourceUserIdentifier = sourceUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * User identifier for the source user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param sourceUserIdentifier <p>
+     *            User identifier for the source user. The value should be a
+     *            <code>DeveloperUserIdentifier</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MergeDeveloperIdentitiesRequest withSourceUserIdentifier(String sourceUserIdentifier) {
+        this.sourceUserIdentifier = sourceUserIdentifier;
+        return this;
+    }
+
+    /**
+     * <p>
+     * User identifier for the destination user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @return <p>
+     *         User identifier for the destination user. The value should be a
+     *         <code>DeveloperUserIdentifier</code>.
+     *         </p>
+     */
+    public String getDestinationUserIdentifier() {
+        return destinationUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * User identifier for the destination user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param destinationUserIdentifier <p>
+     *            User identifier for the destination user. The value should be
+     *            a <code>DeveloperUserIdentifier</code>.
+     *            </p>
+     */
+    public void setDestinationUserIdentifier(String destinationUserIdentifier) {
+        this.destinationUserIdentifier = destinationUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * User identifier for the destination user. The value should be a
+     * <code>DeveloperUserIdentifier</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param destinationUserIdentifier <p>
+     *            User identifier for the destination user. The value should be
+     *            a <code>DeveloperUserIdentifier</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MergeDeveloperIdentitiesRequest withDestinationUserIdentifier(
+            String destinationUserIdentifier) {
+        this.destinationUserIdentifier = destinationUserIdentifier;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This is a
+     * (pseudo) domain name that you provide while creating an identity pool.
+     * This name acts as a placeholder that allows your backend and the Cognito
+     * service to communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (.), underscore (_), and dash (-).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users. This is a
+     *         (pseudo) domain name that you provide while creating an identity
+     *         pool. This name acts as a placeholder that allows your backend
+     *         and the Cognito service to communicate about the developer
+     *         provider. For the <code>DeveloperProviderName</code>, you can use
+     *         letters as well as period (.), underscore (_), and dash (-).
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This is a
+     * (pseudo) domain name that you provide while creating an identity pool.
+     * This name acts as a placeholder that allows your backend and the Cognito
+     * service to communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (.), underscore (_), and dash (-).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users. This
+     *            is a (pseudo) domain name that you provide while creating an
+     *            identity pool. This name acts as a placeholder that allows
+     *            your backend and the Cognito service to communicate about the
+     *            developer provider. For the <code>DeveloperProviderName</code>
+     *            , you can use letters as well as period (.), underscore (_),
+     *            and dash (-).
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users. This is a
+     * (pseudo) domain name that you provide while creating an identity pool.
+     * This name acts as a placeholder that allows your backend and the Cognito
+     * service to communicate about the developer provider. For the
+     * <code>DeveloperProviderName</code>, you can use letters as well as period
+     * (.), underscore (_), and dash (-).
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users. This
+     *            is a (pseudo) domain name that you provide while creating an
+     *            identity pool. This name acts as a placeholder that allows
+     *            your backend and the Cognito service to communicate about the
+     *            developer provider. For the <code>DeveloperProviderName</code>
+     *            , you can use letters as well as period (.), underscore (_),
+     *            and dash (-).
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MergeDeveloperIdentitiesRequest withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MergeDeveloperIdentitiesRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getSourceUserIdentifier() != null)
+            sb.append("SourceUserIdentifier: " + getSourceUserIdentifier() + ",");
+        if (getDestinationUserIdentifier() != null)
+            sb.append("DestinationUserIdentifier: " + getDestinationUserIdentifier() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getSourceUserIdentifier() == null) ? 0 : getSourceUserIdentifier().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDestinationUserIdentifier() == null) ? 0 : getDestinationUserIdentifier()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MergeDeveloperIdentitiesRequest == false)
+            return false;
+        MergeDeveloperIdentitiesRequest other = (MergeDeveloperIdentitiesRequest) obj;
+
+        if (other.getSourceUserIdentifier() == null ^ this.getSourceUserIdentifier() == null)
+            return false;
+        if (other.getSourceUserIdentifier() != null
+                && other.getSourceUserIdentifier().equals(this.getSourceUserIdentifier()) == false)
+            return false;
+        if (other.getDestinationUserIdentifier() == null
+                ^ this.getDestinationUserIdentifier() == null)
+            return false;
+        if (other.getDestinationUserIdentifier() != null
+                && other.getDestinationUserIdentifier().equals(this.getDestinationUserIdentifier()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesResult.java
new file mode 100644
index 0000000000..62618e7479
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/MergeDeveloperIdentitiesResult.java
@@ -0,0 +1,139 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned in response to a successful <code>MergeDeveloperIdentities</code>
+ * action.
+ * </p>
+ */
+public class MergeDeveloperIdentitiesResult implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MergeDeveloperIdentitiesResult withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MergeDeveloperIdentitiesResult == false)
+            return false;
+        MergeDeveloperIdentitiesResult other = (MergeDeveloperIdentitiesResult) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMapping.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMapping.java
new file mode 100644
index 0000000000..579545c54c
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMapping.java
@@ -0,0 +1,503 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A role mapping.
+ * </p>
+ */
+public class RoleMapping implements Serializable {
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     */
+    private String type;
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     */
+    private String ambiguousRoleResolution;
+
+    /**
+     * <p>
+     * The rules to be used for mapping users to roles.
+     * </p>
+     * <p>
+     * If you specify Rules as the role mapping type,
+     * <code>RulesConfiguration</code> is required.
+     * </p>
+     */
+    private RulesConfigurationType rulesConfiguration;
+
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     *
+     * @return <p>
+     *         The role mapping type. Token will use <code>cognito:roles</code>
+     *         and <code>cognito:preferred_role</code> claims from the Cognito
+     *         identity provider token to map groups to roles. Rules will
+     *         attempt to match claims from the token to map to a role.
+     *         </p>
+     * @see RoleMappingType
+     */
+    public String getType() {
+        return type;
+    }
+
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     *
+     * @param type <p>
+     *            The role mapping type. Token will use
+     *            <code>cognito:roles</code> and
+     *            <code>cognito:preferred_role</code> claims from the Cognito
+     *            identity provider token to map groups to roles. Rules will
+     *            attempt to match claims from the token to map to a role.
+     *            </p>
+     * @see RoleMappingType
+     */
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     *
+     * @param type <p>
+     *            The role mapping type. Token will use
+     *            <code>cognito:roles</code> and
+     *            <code>cognito:preferred_role</code> claims from the Cognito
+     *            identity provider token to map groups to roles. Rules will
+     *            attempt to match claims from the token to map to a role.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see RoleMappingType
+     */
+    public RoleMapping withType(String type) {
+        this.type = type;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     *
+     * @param type <p>
+     *            The role mapping type. Token will use
+     *            <code>cognito:roles</code> and
+     *            <code>cognito:preferred_role</code> claims from the Cognito
+     *            identity provider token to map groups to roles. Rules will
+     *            attempt to match claims from the token to map to a role.
+     *            </p>
+     * @see RoleMappingType
+     */
+    public void setType(RoleMappingType type) {
+        this.type = type.toString();
+    }
+
+    /**
+     * <p>
+     * The role mapping type. Token will use <code>cognito:roles</code> and
+     * <code>cognito:preferred_role</code> claims from the Cognito identity
+     * provider token to map groups to roles. Rules will attempt to match claims
+     * from the token to map to a role.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>Token, Rules
+     *
+     * @param type <p>
+     *            The role mapping type. Token will use
+     *            <code>cognito:roles</code> and
+     *            <code>cognito:preferred_role</code> claims from the Cognito
+     *            identity provider token to map groups to roles. Rules will
+     *            attempt to match claims from the token to map to a role.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see RoleMappingType
+     */
+    public RoleMapping withType(RoleMappingType type) {
+        this.type = type.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     *
+     * @return <p>
+     *         If you specify Token or Rules as the <code>Type</code>,
+     *         <code>AmbiguousRoleResolution</code> is required.
+     *         </p>
+     *         <p>
+     *         Specifies the action to be taken if either no rules match the
+     *         claim value for the <code>Rules</code> type, or there is no
+     *         <code>cognito:preferred_role</code> claim and there are multiple
+     *         <code>cognito:roles</code> matches for the <code>Token</code>
+     *         type.
+     *         </p>
+     * @see AmbiguousRoleResolutionType
+     */
+    public String getAmbiguousRoleResolution() {
+        return ambiguousRoleResolution;
+    }
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     *
+     * @param ambiguousRoleResolution <p>
+     *            If you specify Token or Rules as the <code>Type</code>,
+     *            <code>AmbiguousRoleResolution</code> is required.
+     *            </p>
+     *            <p>
+     *            Specifies the action to be taken if either no rules match the
+     *            claim value for the <code>Rules</code> type, or there is no
+     *            <code>cognito:preferred_role</code> claim and there are
+     *            multiple <code>cognito:roles</code> matches for the
+     *            <code>Token</code> type.
+     *            </p>
+     * @see AmbiguousRoleResolutionType
+     */
+    public void setAmbiguousRoleResolution(String ambiguousRoleResolution) {
+        this.ambiguousRoleResolution = ambiguousRoleResolution;
+    }
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     *
+     * @param ambiguousRoleResolution <p>
+     *            If you specify Token or Rules as the <code>Type</code>,
+     *            <code>AmbiguousRoleResolution</code> is required.
+     *            </p>
+     *            <p>
+     *            Specifies the action to be taken if either no rules match the
+     *            claim value for the <code>Rules</code> type, or there is no
+     *            <code>cognito:preferred_role</code> claim and there are
+     *            multiple <code>cognito:roles</code> matches for the
+     *            <code>Token</code> type.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AmbiguousRoleResolutionType
+     */
+    public RoleMapping withAmbiguousRoleResolution(String ambiguousRoleResolution) {
+        this.ambiguousRoleResolution = ambiguousRoleResolution;
+        return this;
+    }
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     *
+     * @param ambiguousRoleResolution <p>
+     *            If you specify Token or Rules as the <code>Type</code>,
+     *            <code>AmbiguousRoleResolution</code> is required.
+     *            </p>
+     *            <p>
+     *            Specifies the action to be taken if either no rules match the
+     *            claim value for the <code>Rules</code> type, or there is no
+     *            <code>cognito:preferred_role</code> claim and there are
+     *            multiple <code>cognito:roles</code> matches for the
+     *            <code>Token</code> type.
+     *            </p>
+     * @see AmbiguousRoleResolutionType
+     */
+    public void setAmbiguousRoleResolution(AmbiguousRoleResolutionType ambiguousRoleResolution) {
+        this.ambiguousRoleResolution = ambiguousRoleResolution.toString();
+    }
+
+    /**
+     * <p>
+     * If you specify Token or Rules as the <code>Type</code>,
+     * <code>AmbiguousRoleResolution</code> is required.
+     * </p>
+     * <p>
+     * Specifies the action to be taken if either no rules match the claim value
+     * for the <code>Rules</code> type, or there is no
+     * <code>cognito:preferred_role</code> claim and there are multiple
+     * <code>cognito:roles</code> matches for the <code>Token</code> type.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AuthenticatedRole, Deny
+     *
+     * @param ambiguousRoleResolution <p>
+     *            If you specify Token or Rules as the <code>Type</code>,
+     *            <code>AmbiguousRoleResolution</code> is required.
+     *            </p>
+     *            <p>
+     *            Specifies the action to be taken if either no rules match the
+     *            claim value for the <code>Rules</code> type, or there is no
+     *            <code>cognito:preferred_role</code> claim and there are
+     *            multiple <code>cognito:roles</code> matches for the
+     *            <code>Token</code> type.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AmbiguousRoleResolutionType
+     */
+    public RoleMapping withAmbiguousRoleResolution(
+            AmbiguousRoleResolutionType ambiguousRoleResolution) {
+        this.ambiguousRoleResolution = ambiguousRoleResolution.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The rules to be used for mapping users to roles.
+     * </p>
+     * <p>
+     * If you specify Rules as the role mapping type,
+     * <code>RulesConfiguration</code> is required.
+     * </p>
+     *
+     * @return <p>
+     *         The rules to be used for mapping users to roles.
+     *         </p>
+     *         <p>
+     *         If you specify Rules as the role mapping type,
+     *         <code>RulesConfiguration</code> is required.
+     *         </p>
+     */
+    public RulesConfigurationType getRulesConfiguration() {
+        return rulesConfiguration;
+    }
+
+    /**
+     * <p>
+     * The rules to be used for mapping users to roles.
+     * </p>
+     * <p>
+     * If you specify Rules as the role mapping type,
+     * <code>RulesConfiguration</code> is required.
+     * </p>
+     *
+     * @param rulesConfiguration <p>
+     *            The rules to be used for mapping users to roles.
+     *            </p>
+     *            <p>
+     *            If you specify Rules as the role mapping type,
+     *            <code>RulesConfiguration</code> is required.
+     *            </p>
+     */
+    public void setRulesConfiguration(RulesConfigurationType rulesConfiguration) {
+        this.rulesConfiguration = rulesConfiguration;
+    }
+
+    /**
+     * <p>
+     * The rules to be used for mapping users to roles.
+     * </p>
+     * <p>
+     * If you specify Rules as the role mapping type,
+     * <code>RulesConfiguration</code> is required.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rulesConfiguration <p>
+     *            The rules to be used for mapping users to roles.
+     *            </p>
+     *            <p>
+     *            If you specify Rules as the role mapping type,
+     *            <code>RulesConfiguration</code> is required.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RoleMapping withRulesConfiguration(RulesConfigurationType rulesConfiguration) {
+        this.rulesConfiguration = rulesConfiguration;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getType() != null)
+            sb.append("Type: " + getType() + ",");
+        if (getAmbiguousRoleResolution() != null)
+            sb.append("AmbiguousRoleResolution: " + getAmbiguousRoleResolution() + ",");
+        if (getRulesConfiguration() != null)
+            sb.append("RulesConfiguration: " + getRulesConfiguration());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getType() == null) ? 0 : getType().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAmbiguousRoleResolution() == null) ? 0 : getAmbiguousRoleResolution()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getRulesConfiguration() == null) ? 0 : getRulesConfiguration().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof RoleMapping == false)
+            return false;
+        RoleMapping other = (RoleMapping) obj;
+
+        if (other.getType() == null ^ this.getType() == null)
+            return false;
+        if (other.getType() != null && other.getType().equals(this.getType()) == false)
+            return false;
+        if (other.getAmbiguousRoleResolution() == null ^ this.getAmbiguousRoleResolution() == null)
+            return false;
+        if (other.getAmbiguousRoleResolution() != null
+                && other.getAmbiguousRoleResolution().equals(this.getAmbiguousRoleResolution()) == false)
+            return false;
+        if (other.getRulesConfiguration() == null ^ this.getRulesConfiguration() == null)
+            return false;
+        if (other.getRulesConfiguration() != null
+                && other.getRulesConfiguration().equals(this.getRulesConfiguration()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMappingType.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMappingType.java
new file mode 100644
index 0000000000..98de78726b
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RoleMappingType.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Role Mapping Type
+ */
+public enum RoleMappingType {
+
+    Token("Token"),
+    Rules("Rules");
+
+    private String value;
+
+    private RoleMappingType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, RoleMappingType> enumMap;
+    static {
+        enumMap = new HashMap<String, RoleMappingType>();
+        enumMap.put("Token", Token);
+        enumMap.put("Rules", Rules);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return RoleMappingType corresponding to the value
+     */
+    public static RoleMappingType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RulesConfigurationType.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RulesConfigurationType.java
new file mode 100644
index 0000000000..20f8190e16
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/RulesConfigurationType.java
@@ -0,0 +1,185 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * A container for rules.
+ * </p>
+ */
+public class RulesConfigurationType implements Serializable {
+    /**
+     * <p>
+     * An array of rules. You can specify up to 25 rules per identity provider.
+     * </p>
+     * <p>
+     * Rules are evaluated in order. The first one to match specifies the role.
+     * </p>
+     */
+    private java.util.List<MappingRule> rules;
+
+    /**
+     * <p>
+     * An array of rules. You can specify up to 25 rules per identity provider.
+     * </p>
+     * <p>
+     * Rules are evaluated in order. The first one to match specifies the role.
+     * </p>
+     *
+     * @return <p>
+     *         An array of rules. You can specify up to 25 rules per identity
+     *         provider.
+     *         </p>
+     *         <p>
+     *         Rules are evaluated in order. The first one to match specifies
+     *         the role.
+     *         </p>
+     */
+    public java.util.List<MappingRule> getRules() {
+        return rules;
+    }
+
+    /**
+     * <p>
+     * An array of rules. You can specify up to 25 rules per identity provider.
+     * </p>
+     * <p>
+     * Rules are evaluated in order. The first one to match specifies the role.
+     * </p>
+     *
+     * @param rules <p>
+     *            An array of rules. You can specify up to 25 rules per identity
+     *            provider.
+     *            </p>
+     *            <p>
+     *            Rules are evaluated in order. The first one to match specifies
+     *            the role.
+     *            </p>
+     */
+    public void setRules(java.util.Collection<MappingRule> rules) {
+        if (rules == null) {
+            this.rules = null;
+            return;
+        }
+
+        this.rules = new java.util.ArrayList<MappingRule>(rules);
+    }
+
+    /**
+     * <p>
+     * An array of rules. You can specify up to 25 rules per identity provider.
+     * </p>
+     * <p>
+     * Rules are evaluated in order. The first one to match specifies the role.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rules <p>
+     *            An array of rules. You can specify up to 25 rules per identity
+     *            provider.
+     *            </p>
+     *            <p>
+     *            Rules are evaluated in order. The first one to match specifies
+     *            the role.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RulesConfigurationType withRules(MappingRule... rules) {
+        if (getRules() == null) {
+            this.rules = new java.util.ArrayList<MappingRule>(rules.length);
+        }
+        for (MappingRule value : rules) {
+            this.rules.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of rules. You can specify up to 25 rules per identity provider.
+     * </p>
+     * <p>
+     * Rules are evaluated in order. The first one to match specifies the role.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param rules <p>
+     *            An array of rules. You can specify up to 25 rules per identity
+     *            provider.
+     *            </p>
+     *            <p>
+     *            Rules are evaluated in order. The first one to match specifies
+     *            the role.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RulesConfigurationType withRules(java.util.Collection<MappingRule> rules) {
+        setRules(rules);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getRules() != null)
+            sb.append("Rules: " + getRules());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getRules() == null) ? 0 : getRules().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof RulesConfigurationType == false)
+            return false;
+        RulesConfigurationType other = (RulesConfigurationType) obj;
+
+        if (other.getRules() == null ^ this.getRules() == null)
+            return false;
+        if (other.getRules() != null && other.getRules().equals(this.getRules()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/SetIdentityPoolRolesRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/SetIdentityPoolRolesRequest.java
new file mode 100644
index 0000000000..d3219e0240
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/SetIdentityPoolRolesRequest.java
@@ -0,0 +1,408 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Sets the roles for an identity pool. These roles are used when making calls
+ * to <a>GetCredentialsForIdentity</a> action.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class SetIdentityPoolRolesRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. For a given role, the key
+     * will be either "authenticated" or "unauthenticated" and the value will be
+     * the Role ARN.
+     * </p>
+     */
+    private java.util.Map<String, String> roles;
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a string to <a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Up to 25 rules can be specified per identity provider.
+     * </p>
+     */
+    private java.util.Map<String, RoleMapping> roleMappings;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SetIdentityPoolRolesRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. For a given role, the key
+     * will be either "authenticated" or "unauthenticated" and the value will be
+     * the Role ARN.
+     * </p>
+     *
+     * @return <p>
+     *         The map of roles associated with this pool. For a given role, the
+     *         key will be either "authenticated" or "unauthenticated" and the
+     *         value will be the Role ARN.
+     *         </p>
+     */
+    public java.util.Map<String, String> getRoles() {
+        return roles;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. For a given role, the key
+     * will be either "authenticated" or "unauthenticated" and the value will be
+     * the Role ARN.
+     * </p>
+     *
+     * @param roles <p>
+     *            The map of roles associated with this pool. For a given role,
+     *            the key will be either "authenticated" or "unauthenticated"
+     *            and the value will be the Role ARN.
+     *            </p>
+     */
+    public void setRoles(java.util.Map<String, String> roles) {
+        this.roles = roles;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. For a given role, the key
+     * will be either "authenticated" or "unauthenticated" and the value will be
+     * the Role ARN.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roles <p>
+     *            The map of roles associated with this pool. For a given role,
+     *            the key will be either "authenticated" or "unauthenticated"
+     *            and the value will be the Role ARN.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SetIdentityPoolRolesRequest withRoles(java.util.Map<String, String> roles) {
+        this.roles = roles;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The map of roles associated with this pool. For a given role, the key
+     * will be either "authenticated" or "unauthenticated" and the value will be
+     * the Role ARN.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into Roles parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Roles.
+     * @param value The corresponding value of the entry to be added into Roles.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SetIdentityPoolRolesRequest addRolesEntry(String key, String value) {
+        if (null == this.roles) {
+            this.roles = new java.util.HashMap<String, String>();
+        }
+        if (this.roles.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.roles.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Roles.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SetIdentityPoolRolesRequest clearRolesEntries() {
+        this.roles = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a string to <a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Up to 25 rules can be specified per identity provider.
+     * </p>
+     *
+     * @return <p>
+     *         How users for a specific identity provider are to mapped to
+     *         roles. This is a string to <a>RoleMapping</a> object map. The
+     *         string identifies the identity provider, for example,
+     *         "graph.facebook.com" or
+     *         "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *         .
+     *         </p>
+     *         <p>
+     *         Up to 25 rules can be specified per identity provider.
+     *         </p>
+     */
+    public java.util.Map<String, RoleMapping> getRoleMappings() {
+        return roleMappings;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a string to <a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Up to 25 rules can be specified per identity provider.
+     * </p>
+     *
+     * @param roleMappings <p>
+     *            How users for a specific identity provider are to mapped to
+     *            roles. This is a string to <a>RoleMapping</a> object map. The
+     *            string identifies the identity provider, for example,
+     *            "graph.facebook.com" or
+     *            "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *            .
+     *            </p>
+     *            <p>
+     *            Up to 25 rules can be specified per identity provider.
+     *            </p>
+     */
+    public void setRoleMappings(java.util.Map<String, RoleMapping> roleMappings) {
+        this.roleMappings = roleMappings;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a string to <a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Up to 25 rules can be specified per identity provider.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param roleMappings <p>
+     *            How users for a specific identity provider are to mapped to
+     *            roles. This is a string to <a>RoleMapping</a> object map. The
+     *            string identifies the identity provider, for example,
+     *            "graph.facebook.com" or
+     *            "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id"
+     *            .
+     *            </p>
+     *            <p>
+     *            Up to 25 rules can be specified per identity provider.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SetIdentityPoolRolesRequest withRoleMappings(
+            java.util.Map<String, RoleMapping> roleMappings) {
+        this.roleMappings = roleMappings;
+        return this;
+    }
+
+    /**
+     * <p>
+     * How users for a specific identity provider are to mapped to roles. This
+     * is a string to <a>RoleMapping</a> object map. The string identifies the
+     * identity provider, for example, "graph.facebook.com" or
+     * "cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
+     * </p>
+     * <p>
+     * Up to 25 rules can be specified per identity provider.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into RoleMappings parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into RoleMappings.
+     * @param value The corresponding value of the entry to be added into
+     *            RoleMappings.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public SetIdentityPoolRolesRequest addRoleMappingsEntry(String key, RoleMapping value) {
+        if (null == this.roleMappings) {
+            this.roleMappings = new java.util.HashMap<String, RoleMapping>();
+        }
+        if (this.roleMappings.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.roleMappings.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into RoleMappings.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public SetIdentityPoolRolesRequest clearRoleMappingsEntries() {
+        this.roleMappings = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getRoles() != null)
+            sb.append("Roles: " + getRoles() + ",");
+        if (getRoleMappings() != null)
+            sb.append("RoleMappings: " + getRoleMappings());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode + ((getRoles() == null) ? 0 : getRoles().hashCode());
+        hashCode = prime * hashCode
+                + ((getRoleMappings() == null) ? 0 : getRoleMappings().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof SetIdentityPoolRolesRequest == false)
+            return false;
+        SetIdentityPoolRolesRequest other = (SetIdentityPoolRolesRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getRoles() == null ^ this.getRoles() == null)
+            return false;
+        if (other.getRoles() != null && other.getRoles().equals(this.getRoles()) == false)
+            return false;
+        if (other.getRoleMappings() == null ^ this.getRoleMappings() == null)
+            return false;
+        if (other.getRoleMappings() != null
+                && other.getRoleMappings().equals(this.getRoleMappings()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkDeveloperIdentityRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkDeveloperIdentityRequest.java
new file mode 100644
index 0000000000..3dbc3bd980
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkDeveloperIdentityRequest.java
@@ -0,0 +1,384 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity.
+ * Unlinked developer users will be considered new identities next time they are
+ * seen. If, for a given Cognito identity, you remove all federated identities
+ * as well as the developer user identifier, the Cognito identity becomes
+ * inaccessible.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class UnlinkDeveloperIdentityRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     */
+    private String developerUserIdentifier;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkDeveloperIdentityRequest withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkDeveloperIdentityRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkDeveloperIdentityRequest withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @return <p>
+     *         A unique ID used by your backend authentication process to
+     *         identify a user.
+     *         </p>
+     */
+    public String getDeveloperUserIdentifier() {
+        return developerUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param developerUserIdentifier <p>
+     *            A unique ID used by your backend authentication process to
+     *            identify a user.
+     *            </p>
+     */
+    public void setDeveloperUserIdentifier(String developerUserIdentifier) {
+        this.developerUserIdentifier = developerUserIdentifier;
+    }
+
+    /**
+     * <p>
+     * A unique ID used by your backend authentication process to identify a
+     * user.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 1024<br/>
+     *
+     * @param developerUserIdentifier <p>
+     *            A unique ID used by your backend authentication process to
+     *            identify a user.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkDeveloperIdentityRequest withDeveloperUserIdentifier(String developerUserIdentifier) {
+        this.developerUserIdentifier = developerUserIdentifier;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getDeveloperUserIdentifier() != null)
+            sb.append("DeveloperUserIdentifier: " + getDeveloperUserIdentifier());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperUserIdentifier() == null) ? 0 : getDeveloperUserIdentifier()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UnlinkDeveloperIdentityRequest == false)
+            return false;
+        UnlinkDeveloperIdentityRequest other = (UnlinkDeveloperIdentityRequest) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getDeveloperUserIdentifier() == null ^ this.getDeveloperUserIdentifier() == null)
+            return false;
+        if (other.getDeveloperUserIdentifier() != null
+                && other.getDeveloperUserIdentifier().equals(this.getDeveloperUserIdentifier()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkIdentityRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkIdentityRequest.java
new file mode 100644
index 0000000000..b6c05b3d1f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnlinkIdentityRequest.java
@@ -0,0 +1,338 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Unlinks a federated identity from an existing account. Unlinked logins will
+ * be considered new identities next time they are seen. Removing the last
+ * linked login will make this identity inaccessible.
+ * </p>
+ * <p>
+ * This is a public API. You do not need any credentials to call this API.
+ * </p>
+ */
+public class UnlinkIdentityRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     */
+    private java.util.Map<String, String> logins;
+
+    /**
+     * <p>
+     * Provider names to unlink from this identity.
+     * </p>
+     */
+    private java.util.List<String> loginsToRemove;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkIdentityRequest withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @return <p>
+     *         A set of optional name-value pairs that map provider names to
+     *         provider tokens.
+     *         </p>
+     */
+    public java.util.Map<String, String> getLogins() {
+        return logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     */
+    public void setLogins(java.util.Map<String, String> logins) {
+        this.logins = logins;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param logins <p>
+     *            A set of optional name-value pairs that map provider names to
+     *            provider tokens.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkIdentityRequest withLogins(java.util.Map<String, String> logins) {
+        this.logins = logins;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of optional name-value pairs that map provider names to provider
+     * tokens.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into Logins parameter, and returns a
+     * reference to this object so that method calls can be chained together.
+     *
+     * @param key The key of the entry to be added into Logins.
+     * @param value The corresponding value of the entry to be added into
+     *            Logins.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkIdentityRequest addLoginsEntry(String key, String value) {
+        if (null == this.logins) {
+            this.logins = new java.util.HashMap<String, String>();
+        }
+        if (this.logins.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.logins.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into Logins.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public UnlinkIdentityRequest clearLoginsEntries() {
+        this.logins = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Provider names to unlink from this identity.
+     * </p>
+     *
+     * @return <p>
+     *         Provider names to unlink from this identity.
+     *         </p>
+     */
+    public java.util.List<String> getLoginsToRemove() {
+        return loginsToRemove;
+    }
+
+    /**
+     * <p>
+     * Provider names to unlink from this identity.
+     * </p>
+     *
+     * @param loginsToRemove <p>
+     *            Provider names to unlink from this identity.
+     *            </p>
+     */
+    public void setLoginsToRemove(java.util.Collection<String> loginsToRemove) {
+        if (loginsToRemove == null) {
+            this.loginsToRemove = null;
+            return;
+        }
+
+        this.loginsToRemove = new java.util.ArrayList<String>(loginsToRemove);
+    }
+
+    /**
+     * <p>
+     * Provider names to unlink from this identity.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param loginsToRemove <p>
+     *            Provider names to unlink from this identity.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkIdentityRequest withLoginsToRemove(String... loginsToRemove) {
+        if (getLoginsToRemove() == null) {
+            this.loginsToRemove = new java.util.ArrayList<String>(loginsToRemove.length);
+        }
+        for (String value : loginsToRemove) {
+            this.loginsToRemove.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * Provider names to unlink from this identity.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param loginsToRemove <p>
+     *            Provider names to unlink from this identity.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnlinkIdentityRequest withLoginsToRemove(java.util.Collection<String> loginsToRemove) {
+        setLoginsToRemove(loginsToRemove);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getLogins() != null)
+            sb.append("Logins: " + getLogins() + ",");
+        if (getLoginsToRemove() != null)
+            sb.append("LoginsToRemove: " + getLoginsToRemove());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getLogins() == null) ? 0 : getLogins().hashCode());
+        hashCode = prime * hashCode
+                + ((getLoginsToRemove() == null) ? 0 : getLoginsToRemove().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UnlinkIdentityRequest == false)
+            return false;
+        UnlinkIdentityRequest other = (UnlinkIdentityRequest) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getLogins() == null ^ this.getLogins() == null)
+            return false;
+        if (other.getLogins() != null && other.getLogins().equals(this.getLogins()) == false)
+            return false;
+        if (other.getLoginsToRemove() == null ^ this.getLoginsToRemove() == null)
+            return false;
+        if (other.getLoginsToRemove() != null
+                && other.getLoginsToRemove().equals(this.getLoginsToRemove()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnprocessedIdentityId.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnprocessedIdentityId.java
new file mode 100644
index 0000000000..a37a96b8b0
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UnprocessedIdentityId.java
@@ -0,0 +1,254 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * An array of UnprocessedIdentityId objects, each of which contains an
+ * ErrorCode and IdentityId.
+ * </p>
+ */
+public class UnprocessedIdentityId implements Serializable {
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityId;
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     */
+    private String errorCode;
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityId() {
+        return identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityId(String identityId) {
+        this.identityId = identityId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityId <p>
+     *            A unique identifier in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UnprocessedIdentityId withIdentityId(String identityId) {
+        this.identityId = identityId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     *
+     * @return <p>
+     *         The error code indicating the type of error that occurred.
+     *         </p>
+     * @see ErrorCode
+     */
+    public String getErrorCode() {
+        return errorCode;
+    }
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     *
+     * @param errorCode <p>
+     *            The error code indicating the type of error that occurred.
+     *            </p>
+     * @see ErrorCode
+     */
+    public void setErrorCode(String errorCode) {
+        this.errorCode = errorCode;
+    }
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     *
+     * @param errorCode <p>
+     *            The error code indicating the type of error that occurred.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ErrorCode
+     */
+    public UnprocessedIdentityId withErrorCode(String errorCode) {
+        this.errorCode = errorCode;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     *
+     * @param errorCode <p>
+     *            The error code indicating the type of error that occurred.
+     *            </p>
+     * @see ErrorCode
+     */
+    public void setErrorCode(ErrorCode errorCode) {
+        this.errorCode = errorCode.toString();
+    }
+
+    /**
+     * <p>
+     * The error code indicating the type of error that occurred.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>AccessDenied, InternalServerError
+     *
+     * @param errorCode <p>
+     *            The error code indicating the type of error that occurred.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see ErrorCode
+     */
+    public UnprocessedIdentityId withErrorCode(ErrorCode errorCode) {
+        this.errorCode = errorCode.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityId() != null)
+            sb.append("IdentityId: " + getIdentityId() + ",");
+        if (getErrorCode() != null)
+            sb.append("ErrorCode: " + getErrorCode());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getIdentityId() == null) ? 0 : getIdentityId().hashCode());
+        hashCode = prime * hashCode + ((getErrorCode() == null) ? 0 : getErrorCode().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UnprocessedIdentityId == false)
+            return false;
+        UnprocessedIdentityId other = (UnprocessedIdentityId) obj;
+
+        if (other.getIdentityId() == null ^ this.getIdentityId() == null)
+            return false;
+        if (other.getIdentityId() != null
+                && other.getIdentityId().equals(this.getIdentityId()) == false)
+            return false;
+        if (other.getErrorCode() == null ^ this.getErrorCode() == null)
+            return false;
+        if (other.getErrorCode() != null
+                && other.getErrorCode().equals(this.getErrorCode()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolRequest.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolRequest.java
new file mode 100644
index 0000000000..91ee82be19
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolRequest.java
@@ -0,0 +1,786 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Updates a user pool.
+ * </p>
+ * <p>
+ * You must use AWS Developer credentials to call this API.
+ * </p>
+ */
+public class UpdateIdentityPoolRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     */
+    private Boolean allowUnauthenticatedIdentities;
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     */
+    private java.util.Map<String, String> supportedLoginProviders;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     */
+    private java.util.List<String> openIdConnectProviderARNs;
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     */
+    private java.util.List<CognitoIdentityProvider> cognitoIdentityProviders;
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     */
+    private java.util.List<String> samlProviderARNs;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean isAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean getAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     */
+    public void setAllowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withAllowUnauthenticatedIdentities(
+            Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @return <p>
+     *         Optional key:value pairs mapping provider names to provider app
+     *         IDs.
+     *         </p>
+     */
+    public java.util.Map<String, String> getSupportedLoginProviders() {
+        return supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     */
+    public void setSupportedLoginProviders(java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withSupportedLoginProviders(
+            java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into SupportedLoginProviders
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into SupportedLoginProviders.
+     * @param value The corresponding value of the entry to be added into
+     *            SupportedLoginProviders.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest addSupportedLoginProvidersEntry(String key, String value) {
+        if (null == this.supportedLoginProviders) {
+            this.supportedLoginProviders = new java.util.HashMap<String, String>();
+        }
+        if (this.supportedLoginProviders.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.supportedLoginProviders.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into SupportedLoginProviders.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public UpdateIdentityPoolRequest clearSupportedLoginProvidersEntries() {
+        this.supportedLoginProviders = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @return <p>
+     *         A list of OpendID Connect provider ARNs.
+     *         </p>
+     */
+    public java.util.List<String> getOpenIdConnectProviderARNs() {
+        return openIdConnectProviderARNs;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     */
+    public void setOpenIdConnectProviderARNs(java.util.Collection<String> openIdConnectProviderARNs) {
+        if (openIdConnectProviderARNs == null) {
+            this.openIdConnectProviderARNs = null;
+            return;
+        }
+
+        this.openIdConnectProviderARNs = new java.util.ArrayList<String>(openIdConnectProviderARNs);
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withOpenIdConnectProviderARNs(
+            String... openIdConnectProviderARNs) {
+        if (getOpenIdConnectProviderARNs() == null) {
+            this.openIdConnectProviderARNs = new java.util.ArrayList<String>(
+                    openIdConnectProviderARNs.length);
+        }
+        for (String value : openIdConnectProviderARNs) {
+            this.openIdConnectProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withOpenIdConnectProviderARNs(
+            java.util.Collection<String> openIdConnectProviderARNs) {
+        setOpenIdConnectProviderARNs(openIdConnectProviderARNs);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @return <p>
+     *         A list representing an Amazon Cognito Identity User Pool and its
+     *         client ID.
+     *         </p>
+     */
+    public java.util.List<CognitoIdentityProvider> getCognitoIdentityProviders() {
+        return cognitoIdentityProviders;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     */
+    public void setCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        if (cognitoIdentityProviders == null) {
+            this.cognitoIdentityProviders = null;
+            return;
+        }
+
+        this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                cognitoIdentityProviders);
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withCognitoIdentityProviders(
+            CognitoIdentityProvider... cognitoIdentityProviders) {
+        if (getCognitoIdentityProviders() == null) {
+            this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                    cognitoIdentityProviders.length);
+        }
+        for (CognitoIdentityProvider value : cognitoIdentityProviders) {
+            this.cognitoIdentityProviders.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        setCognitoIdentityProviders(cognitoIdentityProviders);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Resource Names (ARNs) of the SAML provider for
+     *         your identity pool.
+     *         </p>
+     */
+    public java.util.List<String> getSamlProviderARNs() {
+        return samlProviderARNs;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     */
+    public void setSamlProviderARNs(java.util.Collection<String> samlProviderARNs) {
+        if (samlProviderARNs == null) {
+            this.samlProviderARNs = null;
+            return;
+        }
+
+        this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withSamlProviderARNs(String... samlProviderARNs) {
+        if (getSamlProviderARNs() == null) {
+            this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs.length);
+        }
+        for (String value : samlProviderARNs) {
+            this.samlProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolRequest withSamlProviderARNs(
+            java.util.Collection<String> samlProviderARNs) {
+        setSamlProviderARNs(samlProviderARNs);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName() + ",");
+        if (getAllowUnauthenticatedIdentities() != null)
+            sb.append("AllowUnauthenticatedIdentities: " + getAllowUnauthenticatedIdentities()
+                    + ",");
+        if (getSupportedLoginProviders() != null)
+            sb.append("SupportedLoginProviders: " + getSupportedLoginProviders() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getOpenIdConnectProviderARNs() != null)
+            sb.append("OpenIdConnectProviderARNs: " + getOpenIdConnectProviderARNs() + ",");
+        if (getCognitoIdentityProviders() != null)
+            sb.append("CognitoIdentityProviders: " + getCognitoIdentityProviders() + ",");
+        if (getSamlProviderARNs() != null)
+            sb.append("SamlProviderARNs: " + getSamlProviderARNs());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAllowUnauthenticatedIdentities() == null) ? 0
+                        : getAllowUnauthenticatedIdentities().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSupportedLoginProviders() == null) ? 0 : getSupportedLoginProviders()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOpenIdConnectProviderARNs() == null) ? 0 : getOpenIdConnectProviderARNs()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCognitoIdentityProviders() == null) ? 0 : getCognitoIdentityProviders()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSamlProviderARNs() == null) ? 0 : getSamlProviderARNs().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateIdentityPoolRequest == false)
+            return false;
+        UpdateIdentityPoolRequest other = (UpdateIdentityPoolRequest) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() == null
+                ^ this.getAllowUnauthenticatedIdentities() == null)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() != null
+                && other.getAllowUnauthenticatedIdentities().equals(
+                        this.getAllowUnauthenticatedIdentities()) == false)
+            return false;
+        if (other.getSupportedLoginProviders() == null ^ this.getSupportedLoginProviders() == null)
+            return false;
+        if (other.getSupportedLoginProviders() != null
+                && other.getSupportedLoginProviders().equals(this.getSupportedLoginProviders()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() == null
+                ^ this.getOpenIdConnectProviderARNs() == null)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() != null
+                && other.getOpenIdConnectProviderARNs().equals(this.getOpenIdConnectProviderARNs()) == false)
+            return false;
+        if (other.getCognitoIdentityProviders() == null
+                ^ this.getCognitoIdentityProviders() == null)
+            return false;
+        if (other.getCognitoIdentityProviders() != null
+                && other.getCognitoIdentityProviders().equals(this.getCognitoIdentityProviders()) == false)
+            return false;
+        if (other.getSamlProviderARNs() == null ^ this.getSamlProviderARNs() == null)
+            return false;
+        if (other.getSamlProviderARNs() != null
+                && other.getSamlProviderARNs().equals(this.getSamlProviderARNs()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolResult.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolResult.java
new file mode 100644
index 0000000000..f6f7ed98bf
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/UpdateIdentityPoolResult.java
@@ -0,0 +1,781 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * An object representing an Amazon Cognito identity pool.
+ * </p>
+ */
+public class UpdateIdentityPoolResult implements Serializable {
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     */
+    private String identityPoolId;
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     */
+    private String identityPoolName;
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     */
+    private Boolean allowUnauthenticatedIdentities;
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     */
+    private java.util.Map<String, String> supportedLoginProviders;
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     */
+    private String developerProviderName;
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     */
+    private java.util.List<String> openIdConnectProviderARNs;
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     */
+    private java.util.List<CognitoIdentityProvider> cognitoIdentityProviders;
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     */
+    private java.util.List<String> samlProviderARNs;
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @return <p>
+     *         An identity pool ID in the format REGION:GUID.
+     *         </p>
+     */
+    public String getIdentityPoolId() {
+        return identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     */
+    public void setIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+    }
+
+    /**
+     * <p>
+     * An identity pool ID in the format REGION:GUID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 55<br/>
+     * <b>Pattern: </b>[\w-]+:[0-9a-f-]+<br/>
+     *
+     * @param identityPoolId <p>
+     *            An identity pool ID in the format REGION:GUID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withIdentityPoolId(String identityPoolId) {
+        this.identityPoolId = identityPoolId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @return <p>
+     *         A string that you provide.
+     *         </p>
+     */
+    public String getIdentityPoolName() {
+        return identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     */
+    public void setIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+    }
+
+    /**
+     * <p>
+     * A string that you provide.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w ]+<br/>
+     *
+     * @param identityPoolName <p>
+     *            A string that you provide.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withIdentityPoolName(String identityPoolName) {
+        this.identityPoolName = identityPoolName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean isAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @return <p>
+     *         TRUE if the identity pool supports unauthenticated logins.
+     *         </p>
+     */
+    public Boolean getAllowUnauthenticatedIdentities() {
+        return allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     */
+    public void setAllowUnauthenticatedIdentities(Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+    }
+
+    /**
+     * <p>
+     * TRUE if the identity pool supports unauthenticated logins.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param allowUnauthenticatedIdentities <p>
+     *            TRUE if the identity pool supports unauthenticated logins.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withAllowUnauthenticatedIdentities(
+            Boolean allowUnauthenticatedIdentities) {
+        this.allowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @return <p>
+     *         Optional key:value pairs mapping provider names to provider app
+     *         IDs.
+     *         </p>
+     */
+    public java.util.Map<String, String> getSupportedLoginProviders() {
+        return supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     */
+    public void setSupportedLoginProviders(java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param supportedLoginProviders <p>
+     *            Optional key:value pairs mapping provider names to provider
+     *            app IDs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withSupportedLoginProviders(
+            java.util.Map<String, String> supportedLoginProviders) {
+        this.supportedLoginProviders = supportedLoginProviders;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Optional key:value pairs mapping provider names to provider app IDs.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into SupportedLoginProviders
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into SupportedLoginProviders.
+     * @param value The corresponding value of the entry to be added into
+     *            SupportedLoginProviders.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult addSupportedLoginProvidersEntry(String key, String value) {
+        if (null == this.supportedLoginProviders) {
+            this.supportedLoginProviders = new java.util.HashMap<String, String>();
+        }
+        if (this.supportedLoginProviders.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.supportedLoginProviders.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into SupportedLoginProviders.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public UpdateIdentityPoolResult clearSupportedLoginProvidersEntries() {
+        this.supportedLoginProviders = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @return <p>
+     *         The "domain" by which Cognito will refer to your users.
+     *         </p>
+     */
+    public String getDeveloperProviderName() {
+        return developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     */
+    public void setDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+    }
+
+    /**
+     * <p>
+     * The "domain" by which Cognito will refer to your users.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[\w._-]+<br/>
+     *
+     * @param developerProviderName <p>
+     *            The "domain" by which Cognito will refer to your users.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withDeveloperProviderName(String developerProviderName) {
+        this.developerProviderName = developerProviderName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @return <p>
+     *         A list of OpendID Connect provider ARNs.
+     *         </p>
+     */
+    public java.util.List<String> getOpenIdConnectProviderARNs() {
+        return openIdConnectProviderARNs;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     */
+    public void setOpenIdConnectProviderARNs(java.util.Collection<String> openIdConnectProviderARNs) {
+        if (openIdConnectProviderARNs == null) {
+            this.openIdConnectProviderARNs = null;
+            return;
+        }
+
+        this.openIdConnectProviderARNs = new java.util.ArrayList<String>(openIdConnectProviderARNs);
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withOpenIdConnectProviderARNs(
+            String... openIdConnectProviderARNs) {
+        if (getOpenIdConnectProviderARNs() == null) {
+            this.openIdConnectProviderARNs = new java.util.ArrayList<String>(
+                    openIdConnectProviderARNs.length);
+        }
+        for (String value : openIdConnectProviderARNs) {
+            this.openIdConnectProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list of OpendID Connect provider ARNs.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param openIdConnectProviderARNs <p>
+     *            A list of OpendID Connect provider ARNs.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withOpenIdConnectProviderARNs(
+            java.util.Collection<String> openIdConnectProviderARNs) {
+        setOpenIdConnectProviderARNs(openIdConnectProviderARNs);
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @return <p>
+     *         A list representing an Amazon Cognito Identity User Pool and its
+     *         client ID.
+     *         </p>
+     */
+    public java.util.List<CognitoIdentityProvider> getCognitoIdentityProviders() {
+        return cognitoIdentityProviders;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     */
+    public void setCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        if (cognitoIdentityProviders == null) {
+            this.cognitoIdentityProviders = null;
+            return;
+        }
+
+        this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                cognitoIdentityProviders);
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withCognitoIdentityProviders(
+            CognitoIdentityProvider... cognitoIdentityProviders) {
+        if (getCognitoIdentityProviders() == null) {
+            this.cognitoIdentityProviders = new java.util.ArrayList<CognitoIdentityProvider>(
+                    cognitoIdentityProviders.length);
+        }
+        for (CognitoIdentityProvider value : cognitoIdentityProviders) {
+            this.cognitoIdentityProviders.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A list representing an Amazon Cognito Identity User Pool and its client
+     * ID.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param cognitoIdentityProviders <p>
+     *            A list representing an Amazon Cognito Identity User Pool and
+     *            its client ID.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withCognitoIdentityProviders(
+            java.util.Collection<CognitoIdentityProvider> cognitoIdentityProviders) {
+        setCognitoIdentityProviders(cognitoIdentityProviders);
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @return <p>
+     *         An array of Amazon Resource Names (ARNs) of the SAML provider for
+     *         your identity pool.
+     *         </p>
+     */
+    public java.util.List<String> getSamlProviderARNs() {
+        return samlProviderARNs;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     */
+    public void setSamlProviderARNs(java.util.Collection<String> samlProviderARNs) {
+        if (samlProviderARNs == null) {
+            this.samlProviderARNs = null;
+            return;
+        }
+
+        this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs);
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withSamlProviderARNs(String... samlProviderARNs) {
+        if (getSamlProviderARNs() == null) {
+            this.samlProviderARNs = new java.util.ArrayList<String>(samlProviderARNs.length);
+        }
+        for (String value : samlProviderARNs) {
+            this.samlProviderARNs.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * An array of Amazon Resource Names (ARNs) of the SAML provider for your
+     * identity pool.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param samlProviderARNs <p>
+     *            An array of Amazon Resource Names (ARNs) of the SAML provider
+     *            for your identity pool.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateIdentityPoolResult withSamlProviderARNs(
+            java.util.Collection<String> samlProviderARNs) {
+        setSamlProviderARNs(samlProviderARNs);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getIdentityPoolId() != null)
+            sb.append("IdentityPoolId: " + getIdentityPoolId() + ",");
+        if (getIdentityPoolName() != null)
+            sb.append("IdentityPoolName: " + getIdentityPoolName() + ",");
+        if (getAllowUnauthenticatedIdentities() != null)
+            sb.append("AllowUnauthenticatedIdentities: " + getAllowUnauthenticatedIdentities()
+                    + ",");
+        if (getSupportedLoginProviders() != null)
+            sb.append("SupportedLoginProviders: " + getSupportedLoginProviders() + ",");
+        if (getDeveloperProviderName() != null)
+            sb.append("DeveloperProviderName: " + getDeveloperProviderName() + ",");
+        if (getOpenIdConnectProviderARNs() != null)
+            sb.append("OpenIdConnectProviderARNs: " + getOpenIdConnectProviderARNs() + ",");
+        if (getCognitoIdentityProviders() != null)
+            sb.append("CognitoIdentityProviders: " + getCognitoIdentityProviders() + ",");
+        if (getSamlProviderARNs() != null)
+            sb.append("SamlProviderARNs: " + getSamlProviderARNs());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getIdentityPoolId() == null) ? 0 : getIdentityPoolId().hashCode());
+        hashCode = prime * hashCode
+                + ((getIdentityPoolName() == null) ? 0 : getIdentityPoolName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAllowUnauthenticatedIdentities() == null) ? 0
+                        : getAllowUnauthenticatedIdentities().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSupportedLoginProviders() == null) ? 0 : getSupportedLoginProviders()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getDeveloperProviderName() == null) ? 0 : getDeveloperProviderName().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOpenIdConnectProviderARNs() == null) ? 0 : getOpenIdConnectProviderARNs()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCognitoIdentityProviders() == null) ? 0 : getCognitoIdentityProviders()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSamlProviderARNs() == null) ? 0 : getSamlProviderARNs().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateIdentityPoolResult == false)
+            return false;
+        UpdateIdentityPoolResult other = (UpdateIdentityPoolResult) obj;
+
+        if (other.getIdentityPoolId() == null ^ this.getIdentityPoolId() == null)
+            return false;
+        if (other.getIdentityPoolId() != null
+                && other.getIdentityPoolId().equals(this.getIdentityPoolId()) == false)
+            return false;
+        if (other.getIdentityPoolName() == null ^ this.getIdentityPoolName() == null)
+            return false;
+        if (other.getIdentityPoolName() != null
+                && other.getIdentityPoolName().equals(this.getIdentityPoolName()) == false)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() == null
+                ^ this.getAllowUnauthenticatedIdentities() == null)
+            return false;
+        if (other.getAllowUnauthenticatedIdentities() != null
+                && other.getAllowUnauthenticatedIdentities().equals(
+                        this.getAllowUnauthenticatedIdentities()) == false)
+            return false;
+        if (other.getSupportedLoginProviders() == null ^ this.getSupportedLoginProviders() == null)
+            return false;
+        if (other.getSupportedLoginProviders() != null
+                && other.getSupportedLoginProviders().equals(this.getSupportedLoginProviders()) == false)
+            return false;
+        if (other.getDeveloperProviderName() == null ^ this.getDeveloperProviderName() == null)
+            return false;
+        if (other.getDeveloperProviderName() != null
+                && other.getDeveloperProviderName().equals(this.getDeveloperProviderName()) == false)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() == null
+                ^ this.getOpenIdConnectProviderARNs() == null)
+            return false;
+        if (other.getOpenIdConnectProviderARNs() != null
+                && other.getOpenIdConnectProviderARNs().equals(this.getOpenIdConnectProviderARNs()) == false)
+            return false;
+        if (other.getCognitoIdentityProviders() == null
+                ^ this.getCognitoIdentityProviders() == null)
+            return false;
+        if (other.getCognitoIdentityProviders() != null
+                && other.getCognitoIdentityProviders().equals(this.getCognitoIdentityProviders()) == false)
+            return false;
+        if (other.getSamlProviderARNs() == null ^ this.getSamlProviderARNs() == null)
+            return false;
+        if (other.getSamlProviderARNs() != null
+                && other.getSamlProviderARNs().equals(this.getSamlProviderARNs()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonMarshaller.java
new file mode 100644
index 0000000000..f6ad2e40ed
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO CognitoIdentityProvider
+ */
+class CognitoIdentityProviderJsonMarshaller {
+
+    public void marshall(CognitoIdentityProvider cognitoIdentityProvider, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (cognitoIdentityProvider.getProviderName() != null) {
+            String providerName = cognitoIdentityProvider.getProviderName();
+            jsonWriter.name("ProviderName");
+            jsonWriter.value(providerName);
+        }
+        if (cognitoIdentityProvider.getClientId() != null) {
+            String clientId = cognitoIdentityProvider.getClientId();
+            jsonWriter.name("ClientId");
+            jsonWriter.value(clientId);
+        }
+        if (cognitoIdentityProvider.getServerSideTokenCheck() != null) {
+            Boolean serverSideTokenCheck = cognitoIdentityProvider.getServerSideTokenCheck();
+            jsonWriter.name("ServerSideTokenCheck");
+            jsonWriter.value(serverSideTokenCheck);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static CognitoIdentityProviderJsonMarshaller instance;
+
+    public static CognitoIdentityProviderJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new CognitoIdentityProviderJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonUnmarshaller.java
new file mode 100644
index 0000000000..7df7dd808d
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CognitoIdentityProviderJsonUnmarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO CognitoIdentityProvider
+ */
+class CognitoIdentityProviderJsonUnmarshaller implements
+        Unmarshaller<CognitoIdentityProvider, JsonUnmarshallerContext> {
+
+    public CognitoIdentityProvider unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        CognitoIdentityProvider cognitoIdentityProvider = new CognitoIdentityProvider();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("ProviderName")) {
+                cognitoIdentityProvider.setProviderName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ClientId")) {
+                cognitoIdentityProvider.setClientId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ServerSideTokenCheck")) {
+                cognitoIdentityProvider.setServerSideTokenCheck(BooleanJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return cognitoIdentityProvider;
+    }
+
+    private static CognitoIdentityProviderJsonUnmarshaller instance;
+
+    public static CognitoIdentityProviderJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CognitoIdentityProviderJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ConcurrentModificationExceptionUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ConcurrentModificationExceptionUnmarshaller.java
new file mode 100644
index 0000000000..57aadce067
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ConcurrentModificationExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.cognitoidentity.model.ConcurrentModificationException;
+
+public class ConcurrentModificationExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public ConcurrentModificationExceptionUnmarshaller() {
+        super(ConcurrentModificationException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("ConcurrentModificationException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        ConcurrentModificationException e = (ConcurrentModificationException) super
+                .unmarshall(error);
+        e.setErrorCode("ConcurrentModificationException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolRequestMarshaller.java
new file mode 100644
index 0000000000..d640e31bf5
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolRequestMarshaller.java
@@ -0,0 +1,148 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for CreateIdentityPoolRequest
+ */
+public class CreateIdentityPoolRequestMarshaller implements
+        Marshaller<Request<CreateIdentityPoolRequest>, CreateIdentityPoolRequest> {
+
+    public Request<CreateIdentityPoolRequest> marshall(
+            CreateIdentityPoolRequest createIdentityPoolRequest) {
+        if (createIdentityPoolRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(CreateIdentityPoolRequest)");
+        }
+
+        Request<CreateIdentityPoolRequest> request = new DefaultRequest<CreateIdentityPoolRequest>(
+                createIdentityPoolRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.CreateIdentityPool";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (createIdentityPoolRequest.getIdentityPoolName() != null) {
+                String identityPoolName = createIdentityPoolRequest.getIdentityPoolName();
+                jsonWriter.name("IdentityPoolName");
+                jsonWriter.value(identityPoolName);
+            }
+            if (createIdentityPoolRequest.getAllowUnauthenticatedIdentities() != null) {
+                Boolean allowUnauthenticatedIdentities = createIdentityPoolRequest
+                        .getAllowUnauthenticatedIdentities();
+                jsonWriter.name("AllowUnauthenticatedIdentities");
+                jsonWriter.value(allowUnauthenticatedIdentities);
+            }
+            if (createIdentityPoolRequest.getSupportedLoginProviders() != null) {
+                java.util.Map<String, String> supportedLoginProviders = createIdentityPoolRequest
+                        .getSupportedLoginProviders();
+                jsonWriter.name("SupportedLoginProviders");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> supportedLoginProvidersEntry : supportedLoginProviders
+                        .entrySet()) {
+                    String supportedLoginProvidersValue = supportedLoginProvidersEntry.getValue();
+                    if (supportedLoginProvidersValue != null) {
+                        jsonWriter.name(supportedLoginProvidersEntry.getKey());
+                        jsonWriter.value(supportedLoginProvidersValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (createIdentityPoolRequest.getDeveloperProviderName() != null) {
+                String developerProviderName = createIdentityPoolRequest.getDeveloperProviderName();
+                jsonWriter.name("DeveloperProviderName");
+                jsonWriter.value(developerProviderName);
+            }
+            if (createIdentityPoolRequest.getOpenIdConnectProviderARNs() != null) {
+                java.util.List<String> openIdConnectProviderARNs = createIdentityPoolRequest
+                        .getOpenIdConnectProviderARNs();
+                jsonWriter.name("OpenIdConnectProviderARNs");
+                jsonWriter.beginArray();
+                for (String openIdConnectProviderARNsItem : openIdConnectProviderARNs) {
+                    if (openIdConnectProviderARNsItem != null) {
+                        jsonWriter.value(openIdConnectProviderARNsItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+            if (createIdentityPoolRequest.getCognitoIdentityProviders() != null) {
+                java.util.List<CognitoIdentityProvider> cognitoIdentityProviders = createIdentityPoolRequest
+                        .getCognitoIdentityProviders();
+                jsonWriter.name("CognitoIdentityProviders");
+                jsonWriter.beginArray();
+                for (CognitoIdentityProvider cognitoIdentityProvidersItem : cognitoIdentityProviders) {
+                    if (cognitoIdentityProvidersItem != null) {
+                        CognitoIdentityProviderJsonMarshaller.getInstance().marshall(
+                                cognitoIdentityProvidersItem, jsonWriter);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+            if (createIdentityPoolRequest.getSamlProviderARNs() != null) {
+                java.util.List<String> samlProviderARNs = createIdentityPoolRequest
+                        .getSamlProviderARNs();
+                jsonWriter.name("SamlProviderARNs");
+                jsonWriter.beginArray();
+                for (String samlProviderARNsItem : samlProviderARNs) {
+                    if (samlProviderARNsItem != null) {
+                        jsonWriter.value(samlProviderARNsItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..5812e25923
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/CreateIdentityPoolResultJsonUnmarshaller.java
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response CreateIdentityPoolResult
+ */
+public class CreateIdentityPoolResultJsonUnmarshaller implements
+        Unmarshaller<CreateIdentityPoolResult, JsonUnmarshallerContext> {
+
+    public CreateIdentityPoolResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        CreateIdentityPoolResult createIdentityPoolResult = new CreateIdentityPoolResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                createIdentityPoolResult.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IdentityPoolName")) {
+                createIdentityPoolResult.setIdentityPoolName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AllowUnauthenticatedIdentities")) {
+                createIdentityPoolResult.setAllowUnauthenticatedIdentities(BooleanJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SupportedLoginProviders")) {
+                createIdentityPoolResult.setSupportedLoginProviders(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("DeveloperProviderName")) {
+                createIdentityPoolResult.setDeveloperProviderName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("OpenIdConnectProviderARNs")) {
+                createIdentityPoolResult.setOpenIdConnectProviderARNs(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("CognitoIdentityProviders")) {
+                createIdentityPoolResult
+                        .setCognitoIdentityProviders(new ListUnmarshaller<CognitoIdentityProvider>(
+                                CognitoIdentityProviderJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("SamlProviderARNs")) {
+                createIdentityPoolResult.setSamlProviderARNs(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return createIdentityPoolResult;
+    }
+
+    private static CreateIdentityPoolResultJsonUnmarshaller instance;
+
+    public static CreateIdentityPoolResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateIdentityPoolResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesRequestMarshaller.java
new file mode 100644
index 0000000000..57e16c9696
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesRequestMarshaller.java
@@ -0,0 +1,91 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteIdentitiesRequest
+ */
+public class DeleteIdentitiesRequestMarshaller implements
+        Marshaller<Request<DeleteIdentitiesRequest>, DeleteIdentitiesRequest> {
+
+    public Request<DeleteIdentitiesRequest> marshall(DeleteIdentitiesRequest deleteIdentitiesRequest) {
+        if (deleteIdentitiesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteIdentitiesRequest)");
+        }
+
+        Request<DeleteIdentitiesRequest> request = new DefaultRequest<DeleteIdentitiesRequest>(
+                deleteIdentitiesRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.DeleteIdentities";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (deleteIdentitiesRequest.getIdentityIdsToDelete() != null) {
+                java.util.List<String> identityIdsToDelete = deleteIdentitiesRequest
+                        .getIdentityIdsToDelete();
+                jsonWriter.name("IdentityIdsToDelete");
+                jsonWriter.beginArray();
+                for (String identityIdsToDeleteItem : identityIdsToDelete) {
+                    if (identityIdsToDeleteItem != null) {
+                        jsonWriter.value(identityIdsToDeleteItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..d472a58a6e
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentitiesResultJsonUnmarshaller.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteIdentitiesResult
+ */
+public class DeleteIdentitiesResultJsonUnmarshaller implements
+        Unmarshaller<DeleteIdentitiesResult, JsonUnmarshallerContext> {
+
+    public DeleteIdentitiesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DeleteIdentitiesResult deleteIdentitiesResult = new DeleteIdentitiesResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("UnprocessedIdentityIds")) {
+                deleteIdentitiesResult
+                        .setUnprocessedIdentityIds(new ListUnmarshaller<UnprocessedIdentityId>(
+                                UnprocessedIdentityIdJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return deleteIdentitiesResult;
+    }
+
+    private static DeleteIdentitiesResultJsonUnmarshaller instance;
+
+    public static DeleteIdentitiesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteIdentitiesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentityPoolRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentityPoolRequestMarshaller.java
new file mode 100644
index 0000000000..69266c9ea4
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeleteIdentityPoolRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteIdentityPoolRequest
+ */
+public class DeleteIdentityPoolRequestMarshaller implements
+        Marshaller<Request<DeleteIdentityPoolRequest>, DeleteIdentityPoolRequest> {
+
+    public Request<DeleteIdentityPoolRequest> marshall(
+            DeleteIdentityPoolRequest deleteIdentityPoolRequest) {
+        if (deleteIdentityPoolRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteIdentityPoolRequest)");
+        }
+
+        Request<DeleteIdentityPoolRequest> request = new DefaultRequest<DeleteIdentityPoolRequest>(
+                deleteIdentityPoolRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.DeleteIdentityPool";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (deleteIdentityPoolRequest.getIdentityPoolId() != null) {
+                String identityPoolId = deleteIdentityPoolRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolRequestMarshaller.java
new file mode 100644
index 0000000000..ee33ad8c9b
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeIdentityPoolRequest
+ */
+public class DescribeIdentityPoolRequestMarshaller implements
+        Marshaller<Request<DescribeIdentityPoolRequest>, DescribeIdentityPoolRequest> {
+
+    public Request<DescribeIdentityPoolRequest> marshall(
+            DescribeIdentityPoolRequest describeIdentityPoolRequest) {
+        if (describeIdentityPoolRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeIdentityPoolRequest)");
+        }
+
+        Request<DescribeIdentityPoolRequest> request = new DefaultRequest<DescribeIdentityPoolRequest>(
+                describeIdentityPoolRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.DescribeIdentityPool";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (describeIdentityPoolRequest.getIdentityPoolId() != null) {
+                String identityPoolId = describeIdentityPoolRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..c253d05381
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityPoolResultJsonUnmarshaller.java
@@ -0,0 +1,88 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeIdentityPoolResult
+ */
+public class DescribeIdentityPoolResultJsonUnmarshaller implements
+        Unmarshaller<DescribeIdentityPoolResult, JsonUnmarshallerContext> {
+
+    public DescribeIdentityPoolResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DescribeIdentityPoolResult describeIdentityPoolResult = new DescribeIdentityPoolResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                describeIdentityPoolResult.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IdentityPoolName")) {
+                describeIdentityPoolResult.setIdentityPoolName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AllowUnauthenticatedIdentities")) {
+                describeIdentityPoolResult
+                        .setAllowUnauthenticatedIdentities(BooleanJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("SupportedLoginProviders")) {
+                describeIdentityPoolResult.setSupportedLoginProviders(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("DeveloperProviderName")) {
+                describeIdentityPoolResult.setDeveloperProviderName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("OpenIdConnectProviderARNs")) {
+                describeIdentityPoolResult
+                        .setOpenIdConnectProviderARNs(new ListUnmarshaller<String>(
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("CognitoIdentityProviders")) {
+                describeIdentityPoolResult
+                        .setCognitoIdentityProviders(new ListUnmarshaller<CognitoIdentityProvider>(
+                                CognitoIdentityProviderJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("SamlProviderARNs")) {
+                describeIdentityPoolResult.setSamlProviderARNs(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeIdentityPoolResult;
+    }
+
+    private static DescribeIdentityPoolResultJsonUnmarshaller instance;
+
+    public static DescribeIdentityPoolResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeIdentityPoolResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityRequestMarshaller.java
new file mode 100644
index 0000000000..89a143e540
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityRequestMarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeIdentityRequest
+ */
+public class DescribeIdentityRequestMarshaller implements
+        Marshaller<Request<DescribeIdentityRequest>, DescribeIdentityRequest> {
+
+    public Request<DescribeIdentityRequest> marshall(DescribeIdentityRequest describeIdentityRequest) {
+        if (describeIdentityRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeIdentityRequest)");
+        }
+
+        Request<DescribeIdentityRequest> request = new DefaultRequest<DescribeIdentityRequest>(
+                describeIdentityRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.DescribeIdentity";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (describeIdentityRequest.getIdentityId() != null) {
+                String identityId = describeIdentityRequest.getIdentityId();
+                jsonWriter.name("IdentityId");
+                jsonWriter.value(identityId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..c9bf649f39
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DescribeIdentityResultJsonUnmarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeIdentityResult
+ */
+public class DescribeIdentityResultJsonUnmarshaller implements
+        Unmarshaller<DescribeIdentityResult, JsonUnmarshallerContext> {
+
+    public DescribeIdentityResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DescribeIdentityResult describeIdentityResult = new DescribeIdentityResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                describeIdentityResult.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Logins")) {
+                describeIdentityResult.setLogins(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                describeIdentityResult.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                describeIdentityResult.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeIdentityResult;
+    }
+
+    private static DescribeIdentityResultJsonUnmarshaller instance;
+
+    public static DescribeIdentityResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeIdentityResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeveloperUserAlreadyRegisteredExceptionUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeveloperUserAlreadyRegisteredExceptionUnmarshaller.java
new file mode 100644
index 0000000000..bf0bf7997f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/DeveloperUserAlreadyRegisteredExceptionUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.cognitoidentity.model.DeveloperUserAlreadyRegisteredException;
+
+public class DeveloperUserAlreadyRegisteredExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public DeveloperUserAlreadyRegisteredExceptionUnmarshaller() {
+        super(DeveloperUserAlreadyRegisteredException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("DeveloperUserAlreadyRegisteredException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        DeveloperUserAlreadyRegisteredException e = (DeveloperUserAlreadyRegisteredException) super
+                .unmarshall(error);
+        e.setErrorCode("DeveloperUserAlreadyRegisteredException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesRequestMarshaller.java
new file mode 100644
index 0000000000..9f55eda37a
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesRequestMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetIdentityPoolRolesRequest
+ */
+public class GetIdentityPoolRolesRequestMarshaller implements
+        Marshaller<Request<GetIdentityPoolRolesRequest>, GetIdentityPoolRolesRequest> {
+
+    public Request<GetIdentityPoolRolesRequest> marshall(
+            GetIdentityPoolRolesRequest getIdentityPoolRolesRequest) {
+        if (getIdentityPoolRolesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetIdentityPoolRolesRequest)");
+        }
+
+        Request<GetIdentityPoolRolesRequest> request = new DefaultRequest<GetIdentityPoolRolesRequest>(
+                getIdentityPoolRolesRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.GetIdentityPoolRoles";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (getIdentityPoolRolesRequest.getIdentityPoolId() != null) {
+                String identityPoolId = getIdentityPoolRolesRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..510ffc4ba9
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetIdentityPoolRolesResultJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetIdentityPoolRolesResult
+ */
+public class GetIdentityPoolRolesResultJsonUnmarshaller implements
+        Unmarshaller<GetIdentityPoolRolesResult, JsonUnmarshallerContext> {
+
+    public GetIdentityPoolRolesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        GetIdentityPoolRolesResult getIdentityPoolRolesResult = new GetIdentityPoolRolesResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                getIdentityPoolRolesResult.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Roles")) {
+                getIdentityPoolRolesResult.setRoles(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("RoleMappings")) {
+                getIdentityPoolRolesResult.setRoleMappings(new MapUnmarshaller<RoleMapping>(
+                        RoleMappingJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return getIdentityPoolRolesResult;
+    }
+
+    private static GetIdentityPoolRolesResultJsonUnmarshaller instance;
+
+    public static GetIdentityPoolRolesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetIdentityPoolRolesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityRequestMarshaller.java
new file mode 100644
index 0000000000..5357fbaa09
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityRequestMarshaller.java
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for GetOpenIdTokenForDeveloperIdentityRequest
+ */
+public class GetOpenIdTokenForDeveloperIdentityRequestMarshaller
+        implements
+        Marshaller<Request<GetOpenIdTokenForDeveloperIdentityRequest>, GetOpenIdTokenForDeveloperIdentityRequest> {
+
+    public Request<GetOpenIdTokenForDeveloperIdentityRequest> marshall(
+            GetOpenIdTokenForDeveloperIdentityRequest getOpenIdTokenForDeveloperIdentityRequest) {
+        if (getOpenIdTokenForDeveloperIdentityRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(GetOpenIdTokenForDeveloperIdentityRequest)");
+        }
+
+        Request<GetOpenIdTokenForDeveloperIdentityRequest> request = new DefaultRequest<GetOpenIdTokenForDeveloperIdentityRequest>(
+                getOpenIdTokenForDeveloperIdentityRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (getOpenIdTokenForDeveloperIdentityRequest.getIdentityPoolId() != null) {
+                String identityPoolId = getOpenIdTokenForDeveloperIdentityRequest
+                        .getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (getOpenIdTokenForDeveloperIdentityRequest.getIdentityId() != null) {
+                String identityId = getOpenIdTokenForDeveloperIdentityRequest.getIdentityId();
+                jsonWriter.name("IdentityId");
+                jsonWriter.value(identityId);
+            }
+            if (getOpenIdTokenForDeveloperIdentityRequest.getLogins() != null) {
+                java.util.Map<String, String> logins = getOpenIdTokenForDeveloperIdentityRequest
+                        .getLogins();
+                jsonWriter.name("Logins");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> loginsEntry : logins.entrySet()) {
+                    String loginsValue = loginsEntry.getValue();
+                    if (loginsValue != null) {
+                        jsonWriter.name(loginsEntry.getKey());
+                        jsonWriter.value(loginsValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (getOpenIdTokenForDeveloperIdentityRequest.getTokenDuration() != null) {
+                Long tokenDuration = getOpenIdTokenForDeveloperIdentityRequest.getTokenDuration();
+                jsonWriter.name("TokenDuration");
+                jsonWriter.value(tokenDuration);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..6c83664352
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response GetOpenIdTokenForDeveloperIdentityResult
+ */
+public class GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller implements
+        Unmarshaller<GetOpenIdTokenForDeveloperIdentityResult, JsonUnmarshallerContext> {
+
+    public GetOpenIdTokenForDeveloperIdentityResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        GetOpenIdTokenForDeveloperIdentityResult getOpenIdTokenForDeveloperIdentityResult = new GetOpenIdTokenForDeveloperIdentityResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                getOpenIdTokenForDeveloperIdentityResult.setIdentityId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Token")) {
+                getOpenIdTokenForDeveloperIdentityResult.setToken(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return getOpenIdTokenForDeveloperIdentityResult;
+    }
+
+    private static GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller instance;
+
+    public static GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new GetOpenIdTokenForDeveloperIdentityResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonMarshaller.java
new file mode 100644
index 0000000000..86fc40f0b2
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonMarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO IdentityDescription
+ */
+class IdentityDescriptionJsonMarshaller {
+
+    public void marshall(IdentityDescription identityDescription, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (identityDescription.getIdentityId() != null) {
+            String identityId = identityDescription.getIdentityId();
+            jsonWriter.name("IdentityId");
+            jsonWriter.value(identityId);
+        }
+        if (identityDescription.getLogins() != null) {
+            java.util.List<String> logins = identityDescription.getLogins();
+            jsonWriter.name("Logins");
+            jsonWriter.beginArray();
+            for (String loginsItem : logins) {
+                if (loginsItem != null) {
+                    jsonWriter.value(loginsItem);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (identityDescription.getCreationDate() != null) {
+            java.util.Date creationDate = identityDescription.getCreationDate();
+            jsonWriter.name("CreationDate");
+            jsonWriter.value(creationDate);
+        }
+        if (identityDescription.getLastModifiedDate() != null) {
+            java.util.Date lastModifiedDate = identityDescription.getLastModifiedDate();
+            jsonWriter.name("LastModifiedDate");
+            jsonWriter.value(lastModifiedDate);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static IdentityDescriptionJsonMarshaller instance;
+
+    public static IdentityDescriptionJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new IdentityDescriptionJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonUnmarshaller.java
new file mode 100644
index 0000000000..26dfbb2885
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityDescriptionJsonUnmarshaller.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO IdentityDescription
+ */
+class IdentityDescriptionJsonUnmarshaller implements
+        Unmarshaller<IdentityDescription, JsonUnmarshallerContext> {
+
+    public IdentityDescription unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        IdentityDescription identityDescription = new IdentityDescription();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                identityDescription.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Logins")) {
+                identityDescription.setLogins(new ListUnmarshaller<String>(StringJsonUnmarshaller
+                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("CreationDate")) {
+                identityDescription.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("LastModifiedDate")) {
+                identityDescription.setLastModifiedDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return identityDescription;
+    }
+
+    private static IdentityDescriptionJsonUnmarshaller instance;
+
+    public static IdentityDescriptionJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new IdentityDescriptionJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonMarshaller.java
new file mode 100644
index 0000000000..50016d8868
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO IdentityPoolShortDescription
+ */
+class IdentityPoolShortDescriptionJsonMarshaller {
+
+    public void marshall(IdentityPoolShortDescription identityPoolShortDescription,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (identityPoolShortDescription.getIdentityPoolId() != null) {
+            String identityPoolId = identityPoolShortDescription.getIdentityPoolId();
+            jsonWriter.name("IdentityPoolId");
+            jsonWriter.value(identityPoolId);
+        }
+        if (identityPoolShortDescription.getIdentityPoolName() != null) {
+            String identityPoolName = identityPoolShortDescription.getIdentityPoolName();
+            jsonWriter.name("IdentityPoolName");
+            jsonWriter.value(identityPoolName);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static IdentityPoolShortDescriptionJsonMarshaller instance;
+
+    public static IdentityPoolShortDescriptionJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new IdentityPoolShortDescriptionJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonUnmarshaller.java
new file mode 100644
index 0000000000..248710ef8b
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/IdentityPoolShortDescriptionJsonUnmarshaller.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO IdentityPoolShortDescription
+ */
+class IdentityPoolShortDescriptionJsonUnmarshaller implements
+        Unmarshaller<IdentityPoolShortDescription, JsonUnmarshallerContext> {
+
+    public IdentityPoolShortDescription unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        IdentityPoolShortDescription identityPoolShortDescription = new IdentityPoolShortDescription();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                identityPoolShortDescription.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IdentityPoolName")) {
+                identityPoolShortDescription.setIdentityPoolName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return identityPoolShortDescription;
+    }
+
+    private static IdentityPoolShortDescriptionJsonUnmarshaller instance;
+
+    public static IdentityPoolShortDescriptionJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new IdentityPoolShortDescriptionJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesRequestMarshaller.java
new file mode 100644
index 0000000000..e6348ce561
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesRequestMarshaller.java
@@ -0,0 +1,99 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListIdentitiesRequest
+ */
+public class ListIdentitiesRequestMarshaller implements
+        Marshaller<Request<ListIdentitiesRequest>, ListIdentitiesRequest> {
+
+    public Request<ListIdentitiesRequest> marshall(ListIdentitiesRequest listIdentitiesRequest) {
+        if (listIdentitiesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListIdentitiesRequest)");
+        }
+
+        Request<ListIdentitiesRequest> request = new DefaultRequest<ListIdentitiesRequest>(
+                listIdentitiesRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.ListIdentities";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (listIdentitiesRequest.getIdentityPoolId() != null) {
+                String identityPoolId = listIdentitiesRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (listIdentitiesRequest.getMaxResults() != null) {
+                Integer maxResults = listIdentitiesRequest.getMaxResults();
+                jsonWriter.name("MaxResults");
+                jsonWriter.value(maxResults);
+            }
+            if (listIdentitiesRequest.getNextToken() != null) {
+                String nextToken = listIdentitiesRequest.getNextToken();
+                jsonWriter.name("NextToken");
+                jsonWriter.value(nextToken);
+            }
+            if (listIdentitiesRequest.getHideDisabled() != null) {
+                Boolean hideDisabled = listIdentitiesRequest.getHideDisabled();
+                jsonWriter.name("HideDisabled");
+                jsonWriter.value(hideDisabled);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..6b6cc7b73f
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentitiesResultJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListIdentitiesResult
+ */
+public class ListIdentitiesResultJsonUnmarshaller implements
+        Unmarshaller<ListIdentitiesResult, JsonUnmarshallerContext> {
+
+    public ListIdentitiesResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ListIdentitiesResult listIdentitiesResult = new ListIdentitiesResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                listIdentitiesResult.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Identities")) {
+                listIdentitiesResult.setIdentities(new ListUnmarshaller<IdentityDescription>(
+                        IdentityDescriptionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextToken")) {
+                listIdentitiesResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listIdentitiesResult;
+    }
+
+    private static ListIdentitiesResultJsonUnmarshaller instance;
+
+    public static ListIdentitiesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListIdentitiesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsRequestMarshaller.java
new file mode 100644
index 0000000000..430a168e98
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsRequestMarshaller.java
@@ -0,0 +1,90 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListIdentityPoolsRequest
+ */
+public class ListIdentityPoolsRequestMarshaller implements
+        Marshaller<Request<ListIdentityPoolsRequest>, ListIdentityPoolsRequest> {
+
+    public Request<ListIdentityPoolsRequest> marshall(
+            ListIdentityPoolsRequest listIdentityPoolsRequest) {
+        if (listIdentityPoolsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListIdentityPoolsRequest)");
+        }
+
+        Request<ListIdentityPoolsRequest> request = new DefaultRequest<ListIdentityPoolsRequest>(
+                listIdentityPoolsRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.ListIdentityPools";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (listIdentityPoolsRequest.getMaxResults() != null) {
+                Integer maxResults = listIdentityPoolsRequest.getMaxResults();
+                jsonWriter.name("MaxResults");
+                jsonWriter.value(maxResults);
+            }
+            if (listIdentityPoolsRequest.getNextToken() != null) {
+                String nextToken = listIdentityPoolsRequest.getNextToken();
+                jsonWriter.name("NextToken");
+                jsonWriter.value(nextToken);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..32a29927a0
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/ListIdentityPoolsResultJsonUnmarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListIdentityPoolsResult
+ */
+public class ListIdentityPoolsResultJsonUnmarshaller implements
+        Unmarshaller<ListIdentityPoolsResult, JsonUnmarshallerContext> {
+
+    public ListIdentityPoolsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ListIdentityPoolsResult listIdentityPoolsResult = new ListIdentityPoolsResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPools")) {
+                listIdentityPoolsResult
+                        .setIdentityPools(new ListUnmarshaller<IdentityPoolShortDescription>(
+                                IdentityPoolShortDescriptionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextToken")) {
+                listIdentityPoolsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listIdentityPoolsResult;
+    }
+
+    private static ListIdentityPoolsResultJsonUnmarshaller instance;
+
+    public static ListIdentityPoolsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListIdentityPoolsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityRequestMarshaller.java
new file mode 100644
index 0000000000..eab1d88d63
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityRequestMarshaller.java
@@ -0,0 +1,106 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for LookupDeveloperIdentityRequest
+ */
+public class LookupDeveloperIdentityRequestMarshaller implements
+        Marshaller<Request<LookupDeveloperIdentityRequest>, LookupDeveloperIdentityRequest> {
+
+    public Request<LookupDeveloperIdentityRequest> marshall(
+            LookupDeveloperIdentityRequest lookupDeveloperIdentityRequest) {
+        if (lookupDeveloperIdentityRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(LookupDeveloperIdentityRequest)");
+        }
+
+        Request<LookupDeveloperIdentityRequest> request = new DefaultRequest<LookupDeveloperIdentityRequest>(
+                lookupDeveloperIdentityRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.LookupDeveloperIdentity";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (lookupDeveloperIdentityRequest.getIdentityPoolId() != null) {
+                String identityPoolId = lookupDeveloperIdentityRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (lookupDeveloperIdentityRequest.getIdentityId() != null) {
+                String identityId = lookupDeveloperIdentityRequest.getIdentityId();
+                jsonWriter.name("IdentityId");
+                jsonWriter.value(identityId);
+            }
+            if (lookupDeveloperIdentityRequest.getDeveloperUserIdentifier() != null) {
+                String developerUserIdentifier = lookupDeveloperIdentityRequest
+                        .getDeveloperUserIdentifier();
+                jsonWriter.name("DeveloperUserIdentifier");
+                jsonWriter.value(developerUserIdentifier);
+            }
+            if (lookupDeveloperIdentityRequest.getMaxResults() != null) {
+                Integer maxResults = lookupDeveloperIdentityRequest.getMaxResults();
+                jsonWriter.name("MaxResults");
+                jsonWriter.value(maxResults);
+            }
+            if (lookupDeveloperIdentityRequest.getNextToken() != null) {
+                String nextToken = lookupDeveloperIdentityRequest.getNextToken();
+                jsonWriter.name("NextToken");
+                jsonWriter.value(nextToken);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..963c464d31
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/LookupDeveloperIdentityResultJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response LookupDeveloperIdentityResult
+ */
+public class LookupDeveloperIdentityResultJsonUnmarshaller implements
+        Unmarshaller<LookupDeveloperIdentityResult, JsonUnmarshallerContext> {
+
+    public LookupDeveloperIdentityResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        LookupDeveloperIdentityResult lookupDeveloperIdentityResult = new LookupDeveloperIdentityResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                lookupDeveloperIdentityResult.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("DeveloperUserIdentifierList")) {
+                lookupDeveloperIdentityResult
+                        .setDeveloperUserIdentifierList(new ListUnmarshaller<String>(
+                                StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("NextToken")) {
+                lookupDeveloperIdentityResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return lookupDeveloperIdentityResult;
+    }
+
+    private static LookupDeveloperIdentityResultJsonUnmarshaller instance;
+
+    public static LookupDeveloperIdentityResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new LookupDeveloperIdentityResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonMarshaller.java
new file mode 100644
index 0000000000..e5b7ac77c9
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonMarshaller.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MappingRule
+ */
+class MappingRuleJsonMarshaller {
+
+    public void marshall(MappingRule mappingRule, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (mappingRule.getClaim() != null) {
+            String claim = mappingRule.getClaim();
+            jsonWriter.name("Claim");
+            jsonWriter.value(claim);
+        }
+        if (mappingRule.getMatchType() != null) {
+            String matchType = mappingRule.getMatchType();
+            jsonWriter.name("MatchType");
+            jsonWriter.value(matchType);
+        }
+        if (mappingRule.getValue() != null) {
+            String value = mappingRule.getValue();
+            jsonWriter.name("Value");
+            jsonWriter.value(value);
+        }
+        if (mappingRule.getRoleARN() != null) {
+            String roleARN = mappingRule.getRoleARN();
+            jsonWriter.name("RoleARN");
+            jsonWriter.value(roleARN);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MappingRuleJsonMarshaller instance;
+
+    public static MappingRuleJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MappingRuleJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonUnmarshaller.java
new file mode 100644
index 0000000000..e285e4c941
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MappingRuleJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MappingRule
+ */
+class MappingRuleJsonUnmarshaller implements Unmarshaller<MappingRule, JsonUnmarshallerContext> {
+
+    public MappingRule unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MappingRule mappingRule = new MappingRule();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Claim")) {
+                mappingRule.setClaim(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("MatchType")) {
+                mappingRule.setMatchType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("Value")) {
+                mappingRule.setValue(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RoleARN")) {
+                mappingRule.setRoleARN(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return mappingRule;
+    }
+
+    private static MappingRuleJsonUnmarshaller instance;
+
+    public static MappingRuleJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MappingRuleJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesRequestMarshaller.java
new file mode 100644
index 0000000000..6570423a13
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesRequestMarshaller.java
@@ -0,0 +1,103 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for MergeDeveloperIdentitiesRequest
+ */
+public class MergeDeveloperIdentitiesRequestMarshaller implements
+        Marshaller<Request<MergeDeveloperIdentitiesRequest>, MergeDeveloperIdentitiesRequest> {
+
+    public Request<MergeDeveloperIdentitiesRequest> marshall(
+            MergeDeveloperIdentitiesRequest mergeDeveloperIdentitiesRequest) {
+        if (mergeDeveloperIdentitiesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(MergeDeveloperIdentitiesRequest)");
+        }
+
+        Request<MergeDeveloperIdentitiesRequest> request = new DefaultRequest<MergeDeveloperIdentitiesRequest>(
+                mergeDeveloperIdentitiesRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.MergeDeveloperIdentities";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (mergeDeveloperIdentitiesRequest.getSourceUserIdentifier() != null) {
+                String sourceUserIdentifier = mergeDeveloperIdentitiesRequest
+                        .getSourceUserIdentifier();
+                jsonWriter.name("SourceUserIdentifier");
+                jsonWriter.value(sourceUserIdentifier);
+            }
+            if (mergeDeveloperIdentitiesRequest.getDestinationUserIdentifier() != null) {
+                String destinationUserIdentifier = mergeDeveloperIdentitiesRequest
+                        .getDestinationUserIdentifier();
+                jsonWriter.name("DestinationUserIdentifier");
+                jsonWriter.value(destinationUserIdentifier);
+            }
+            if (mergeDeveloperIdentitiesRequest.getDeveloperProviderName() != null) {
+                String developerProviderName = mergeDeveloperIdentitiesRequest
+                        .getDeveloperProviderName();
+                jsonWriter.name("DeveloperProviderName");
+                jsonWriter.value(developerProviderName);
+            }
+            if (mergeDeveloperIdentitiesRequest.getIdentityPoolId() != null) {
+                String identityPoolId = mergeDeveloperIdentitiesRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..ce66b0e469
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/MergeDeveloperIdentitiesResultJsonUnmarshaller.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response MergeDeveloperIdentitiesResult
+ */
+public class MergeDeveloperIdentitiesResultJsonUnmarshaller implements
+        Unmarshaller<MergeDeveloperIdentitiesResult, JsonUnmarshallerContext> {
+
+    public MergeDeveloperIdentitiesResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        MergeDeveloperIdentitiesResult mergeDeveloperIdentitiesResult = new MergeDeveloperIdentitiesResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                mergeDeveloperIdentitiesResult.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return mergeDeveloperIdentitiesResult;
+    }
+
+    private static MergeDeveloperIdentitiesResultJsonUnmarshaller instance;
+
+    public static MergeDeveloperIdentitiesResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MergeDeveloperIdentitiesResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonMarshaller.java
new file mode 100644
index 0000000000..4893194aa4
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO RoleMapping
+ */
+class RoleMappingJsonMarshaller {
+
+    public void marshall(RoleMapping roleMapping, AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (roleMapping.getType() != null) {
+            String type = roleMapping.getType();
+            jsonWriter.name("Type");
+            jsonWriter.value(type);
+        }
+        if (roleMapping.getAmbiguousRoleResolution() != null) {
+            String ambiguousRoleResolution = roleMapping.getAmbiguousRoleResolution();
+            jsonWriter.name("AmbiguousRoleResolution");
+            jsonWriter.value(ambiguousRoleResolution);
+        }
+        if (roleMapping.getRulesConfiguration() != null) {
+            RulesConfigurationType rulesConfiguration = roleMapping.getRulesConfiguration();
+            jsonWriter.name("RulesConfiguration");
+            RulesConfigurationTypeJsonMarshaller.getInstance().marshall(rulesConfiguration,
+                    jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static RoleMappingJsonMarshaller instance;
+
+    public static RoleMappingJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new RoleMappingJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonUnmarshaller.java
new file mode 100644
index 0000000000..376b9543e2
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RoleMappingJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO RoleMapping
+ */
+class RoleMappingJsonUnmarshaller implements Unmarshaller<RoleMapping, JsonUnmarshallerContext> {
+
+    public RoleMapping unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        RoleMapping roleMapping = new RoleMapping();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Type")) {
+                roleMapping.setType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AmbiguousRoleResolution")) {
+                roleMapping.setAmbiguousRoleResolution(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("RulesConfiguration")) {
+                roleMapping.setRulesConfiguration(RulesConfigurationTypeJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return roleMapping;
+    }
+
+    private static RoleMappingJsonUnmarshaller instance;
+
+    public static RoleMappingJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new RoleMappingJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonMarshaller.java
new file mode 100644
index 0000000000..a85bd7382e
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonMarshaller.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO RulesConfigurationType
+ */
+class RulesConfigurationTypeJsonMarshaller {
+
+    public void marshall(RulesConfigurationType rulesConfigurationType, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (rulesConfigurationType.getRules() != null) {
+            java.util.List<MappingRule> rules = rulesConfigurationType.getRules();
+            jsonWriter.name("Rules");
+            jsonWriter.beginArray();
+            for (MappingRule rulesItem : rules) {
+                if (rulesItem != null) {
+                    MappingRuleJsonMarshaller.getInstance().marshall(rulesItem, jsonWriter);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static RulesConfigurationTypeJsonMarshaller instance;
+
+    public static RulesConfigurationTypeJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new RulesConfigurationTypeJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonUnmarshaller.java
new file mode 100644
index 0000000000..a4483f3ef3
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/RulesConfigurationTypeJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO RulesConfigurationType
+ */
+class RulesConfigurationTypeJsonUnmarshaller implements
+        Unmarshaller<RulesConfigurationType, JsonUnmarshallerContext> {
+
+    public RulesConfigurationType unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        RulesConfigurationType rulesConfigurationType = new RulesConfigurationType();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("Rules")) {
+                rulesConfigurationType.setRules(new ListUnmarshaller<MappingRule>(
+                        MappingRuleJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return rulesConfigurationType;
+    }
+
+    private static RulesConfigurationTypeJsonUnmarshaller instance;
+
+    public static RulesConfigurationTypeJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new RulesConfigurationTypeJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/SetIdentityPoolRolesRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/SetIdentityPoolRolesRequestMarshaller.java
new file mode 100644
index 0000000000..936c22e4a4
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/SetIdentityPoolRolesRequestMarshaller.java
@@ -0,0 +1,114 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for SetIdentityPoolRolesRequest
+ */
+public class SetIdentityPoolRolesRequestMarshaller implements
+        Marshaller<Request<SetIdentityPoolRolesRequest>, SetIdentityPoolRolesRequest> {
+
+    public Request<SetIdentityPoolRolesRequest> marshall(
+            SetIdentityPoolRolesRequest setIdentityPoolRolesRequest) {
+        if (setIdentityPoolRolesRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(SetIdentityPoolRolesRequest)");
+        }
+
+        Request<SetIdentityPoolRolesRequest> request = new DefaultRequest<SetIdentityPoolRolesRequest>(
+                setIdentityPoolRolesRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.SetIdentityPoolRoles";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (setIdentityPoolRolesRequest.getIdentityPoolId() != null) {
+                String identityPoolId = setIdentityPoolRolesRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (setIdentityPoolRolesRequest.getRoles() != null) {
+                java.util.Map<String, String> roles = setIdentityPoolRolesRequest.getRoles();
+                jsonWriter.name("Roles");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> rolesEntry : roles.entrySet()) {
+                    String rolesValue = rolesEntry.getValue();
+                    if (rolesValue != null) {
+                        jsonWriter.name(rolesEntry.getKey());
+                        jsonWriter.value(rolesValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (setIdentityPoolRolesRequest.getRoleMappings() != null) {
+                java.util.Map<String, RoleMapping> roleMappings = setIdentityPoolRolesRequest
+                        .getRoleMappings();
+                jsonWriter.name("RoleMappings");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, RoleMapping> roleMappingsEntry : roleMappings
+                        .entrySet()) {
+                    RoleMapping roleMappingsValue = roleMappingsEntry.getValue();
+                    if (roleMappingsValue != null) {
+                        jsonWriter.name(roleMappingsEntry.getKey());
+                        RoleMappingJsonMarshaller.getInstance().marshall(roleMappingsValue,
+                                jsonWriter);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkDeveloperIdentityRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkDeveloperIdentityRequestMarshaller.java
new file mode 100644
index 0000000000..ab09c6d440
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkDeveloperIdentityRequestMarshaller.java
@@ -0,0 +1,102 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UnlinkDeveloperIdentityRequest
+ */
+public class UnlinkDeveloperIdentityRequestMarshaller implements
+        Marshaller<Request<UnlinkDeveloperIdentityRequest>, UnlinkDeveloperIdentityRequest> {
+
+    public Request<UnlinkDeveloperIdentityRequest> marshall(
+            UnlinkDeveloperIdentityRequest unlinkDeveloperIdentityRequest) {
+        if (unlinkDeveloperIdentityRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UnlinkDeveloperIdentityRequest)");
+        }
+
+        Request<UnlinkDeveloperIdentityRequest> request = new DefaultRequest<UnlinkDeveloperIdentityRequest>(
+                unlinkDeveloperIdentityRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.UnlinkDeveloperIdentity";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (unlinkDeveloperIdentityRequest.getIdentityId() != null) {
+                String identityId = unlinkDeveloperIdentityRequest.getIdentityId();
+                jsonWriter.name("IdentityId");
+                jsonWriter.value(identityId);
+            }
+            if (unlinkDeveloperIdentityRequest.getIdentityPoolId() != null) {
+                String identityPoolId = unlinkDeveloperIdentityRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (unlinkDeveloperIdentityRequest.getDeveloperProviderName() != null) {
+                String developerProviderName = unlinkDeveloperIdentityRequest
+                        .getDeveloperProviderName();
+                jsonWriter.name("DeveloperProviderName");
+                jsonWriter.value(developerProviderName);
+            }
+            if (unlinkDeveloperIdentityRequest.getDeveloperUserIdentifier() != null) {
+                String developerUserIdentifier = unlinkDeveloperIdentityRequest
+                        .getDeveloperUserIdentifier();
+                jsonWriter.name("DeveloperUserIdentifier");
+                jsonWriter.value(developerUserIdentifier);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkIdentityRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkIdentityRequestMarshaller.java
new file mode 100644
index 0000000000..2ab5ca4ca0
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnlinkIdentityRequestMarshaller.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UnlinkIdentityRequest
+ */
+public class UnlinkIdentityRequestMarshaller implements
+        Marshaller<Request<UnlinkIdentityRequest>, UnlinkIdentityRequest> {
+
+    public Request<UnlinkIdentityRequest> marshall(UnlinkIdentityRequest unlinkIdentityRequest) {
+        if (unlinkIdentityRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UnlinkIdentityRequest)");
+        }
+
+        Request<UnlinkIdentityRequest> request = new DefaultRequest<UnlinkIdentityRequest>(
+                unlinkIdentityRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.UnlinkIdentity";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (unlinkIdentityRequest.getIdentityId() != null) {
+                String identityId = unlinkIdentityRequest.getIdentityId();
+                jsonWriter.name("IdentityId");
+                jsonWriter.value(identityId);
+            }
+            if (unlinkIdentityRequest.getLogins() != null) {
+                java.util.Map<String, String> logins = unlinkIdentityRequest.getLogins();
+                jsonWriter.name("Logins");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> loginsEntry : logins.entrySet()) {
+                    String loginsValue = loginsEntry.getValue();
+                    if (loginsValue != null) {
+                        jsonWriter.name(loginsEntry.getKey());
+                        jsonWriter.value(loginsValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (unlinkIdentityRequest.getLoginsToRemove() != null) {
+                java.util.List<String> loginsToRemove = unlinkIdentityRequest.getLoginsToRemove();
+                jsonWriter.name("LoginsToRemove");
+                jsonWriter.beginArray();
+                for (String loginsToRemoveItem : loginsToRemove) {
+                    if (loginsToRemoveItem != null) {
+                        jsonWriter.value(loginsToRemoveItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonMarshaller.java
new file mode 100644
index 0000000000..21003fd6cb
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO UnprocessedIdentityId
+ */
+class UnprocessedIdentityIdJsonMarshaller {
+
+    public void marshall(UnprocessedIdentityId unprocessedIdentityId, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (unprocessedIdentityId.getIdentityId() != null) {
+            String identityId = unprocessedIdentityId.getIdentityId();
+            jsonWriter.name("IdentityId");
+            jsonWriter.value(identityId);
+        }
+        if (unprocessedIdentityId.getErrorCode() != null) {
+            String errorCode = unprocessedIdentityId.getErrorCode();
+            jsonWriter.name("ErrorCode");
+            jsonWriter.value(errorCode);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static UnprocessedIdentityIdJsonMarshaller instance;
+
+    public static UnprocessedIdentityIdJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new UnprocessedIdentityIdJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonUnmarshaller.java
new file mode 100644
index 0000000000..8749a36b68
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UnprocessedIdentityIdJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO UnprocessedIdentityId
+ */
+class UnprocessedIdentityIdJsonUnmarshaller implements
+        Unmarshaller<UnprocessedIdentityId, JsonUnmarshallerContext> {
+
+    public UnprocessedIdentityId unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        UnprocessedIdentityId unprocessedIdentityId = new UnprocessedIdentityId();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityId")) {
+                unprocessedIdentityId.setIdentityId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("ErrorCode")) {
+                unprocessedIdentityId.setErrorCode(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return unprocessedIdentityId;
+    }
+
+    private static UnprocessedIdentityIdJsonUnmarshaller instance;
+
+    public static UnprocessedIdentityIdJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UnprocessedIdentityIdJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolRequestMarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolRequestMarshaller.java
new file mode 100644
index 0000000000..4068c60a70
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolRequestMarshaller.java
@@ -0,0 +1,153 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateIdentityPoolRequest
+ */
+public class UpdateIdentityPoolRequestMarshaller implements
+        Marshaller<Request<UpdateIdentityPoolRequest>, UpdateIdentityPoolRequest> {
+
+    public Request<UpdateIdentityPoolRequest> marshall(
+            UpdateIdentityPoolRequest updateIdentityPoolRequest) {
+        if (updateIdentityPoolRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateIdentityPoolRequest)");
+        }
+
+        Request<UpdateIdentityPoolRequest> request = new DefaultRequest<UpdateIdentityPoolRequest>(
+                updateIdentityPoolRequest, "AmazonCognitoIdentity");
+        String target = "AWSCognitoIdentityService.UpdateIdentityPool";
+        request.addHeader("X-Amz-Target", target);
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/";
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (updateIdentityPoolRequest.getIdentityPoolId() != null) {
+                String identityPoolId = updateIdentityPoolRequest.getIdentityPoolId();
+                jsonWriter.name("IdentityPoolId");
+                jsonWriter.value(identityPoolId);
+            }
+            if (updateIdentityPoolRequest.getIdentityPoolName() != null) {
+                String identityPoolName = updateIdentityPoolRequest.getIdentityPoolName();
+                jsonWriter.name("IdentityPoolName");
+                jsonWriter.value(identityPoolName);
+            }
+            if (updateIdentityPoolRequest.getAllowUnauthenticatedIdentities() != null) {
+                Boolean allowUnauthenticatedIdentities = updateIdentityPoolRequest
+                        .getAllowUnauthenticatedIdentities();
+                jsonWriter.name("AllowUnauthenticatedIdentities");
+                jsonWriter.value(allowUnauthenticatedIdentities);
+            }
+            if (updateIdentityPoolRequest.getSupportedLoginProviders() != null) {
+                java.util.Map<String, String> supportedLoginProviders = updateIdentityPoolRequest
+                        .getSupportedLoginProviders();
+                jsonWriter.name("SupportedLoginProviders");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, String> supportedLoginProvidersEntry : supportedLoginProviders
+                        .entrySet()) {
+                    String supportedLoginProvidersValue = supportedLoginProvidersEntry.getValue();
+                    if (supportedLoginProvidersValue != null) {
+                        jsonWriter.name(supportedLoginProvidersEntry.getKey());
+                        jsonWriter.value(supportedLoginProvidersValue);
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (updateIdentityPoolRequest.getDeveloperProviderName() != null) {
+                String developerProviderName = updateIdentityPoolRequest.getDeveloperProviderName();
+                jsonWriter.name("DeveloperProviderName");
+                jsonWriter.value(developerProviderName);
+            }
+            if (updateIdentityPoolRequest.getOpenIdConnectProviderARNs() != null) {
+                java.util.List<String> openIdConnectProviderARNs = updateIdentityPoolRequest
+                        .getOpenIdConnectProviderARNs();
+                jsonWriter.name("OpenIdConnectProviderARNs");
+                jsonWriter.beginArray();
+                for (String openIdConnectProviderARNsItem : openIdConnectProviderARNs) {
+                    if (openIdConnectProviderARNsItem != null) {
+                        jsonWriter.value(openIdConnectProviderARNsItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+            if (updateIdentityPoolRequest.getCognitoIdentityProviders() != null) {
+                java.util.List<CognitoIdentityProvider> cognitoIdentityProviders = updateIdentityPoolRequest
+                        .getCognitoIdentityProviders();
+                jsonWriter.name("CognitoIdentityProviders");
+                jsonWriter.beginArray();
+                for (CognitoIdentityProvider cognitoIdentityProvidersItem : cognitoIdentityProviders) {
+                    if (cognitoIdentityProvidersItem != null) {
+                        CognitoIdentityProviderJsonMarshaller.getInstance().marshall(
+                                cognitoIdentityProvidersItem, jsonWriter);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+            if (updateIdentityPoolRequest.getSamlProviderARNs() != null) {
+                java.util.List<String> samlProviderARNs = updateIdentityPoolRequest
+                        .getSamlProviderARNs();
+                jsonWriter.name("SamlProviderARNs");
+                jsonWriter.beginArray();
+                for (String samlProviderARNsItem : samlProviderARNs) {
+                    if (samlProviderARNsItem != null) {
+                        jsonWriter.value(samlProviderARNsItem);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.1");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolResultJsonUnmarshaller.java b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..fb53733ac7
--- /dev/null
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/services/cognitoidentity/model/transform/UpdateIdentityPoolResultJsonUnmarshaller.java
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.cognitoidentity.model.transform;
+
+import com.amazonaws.services.cognitoidentity.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateIdentityPoolResult
+ */
+public class UpdateIdentityPoolResultJsonUnmarshaller implements
+        Unmarshaller<UpdateIdentityPoolResult, JsonUnmarshallerContext> {
+
+    public UpdateIdentityPoolResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        UpdateIdentityPoolResult updateIdentityPoolResult = new UpdateIdentityPoolResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("IdentityPoolId")) {
+                updateIdentityPoolResult.setIdentityPoolId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("IdentityPoolName")) {
+                updateIdentityPoolResult.setIdentityPoolName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("AllowUnauthenticatedIdentities")) {
+                updateIdentityPoolResult.setAllowUnauthenticatedIdentities(BooleanJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("SupportedLoginProviders")) {
+                updateIdentityPoolResult.setSupportedLoginProviders(new MapUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("DeveloperProviderName")) {
+                updateIdentityPoolResult.setDeveloperProviderName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("OpenIdConnectProviderARNs")) {
+                updateIdentityPoolResult.setOpenIdConnectProviderARNs(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("CognitoIdentityProviders")) {
+                updateIdentityPoolResult
+                        .setCognitoIdentityProviders(new ListUnmarshaller<CognitoIdentityProvider>(
+                                CognitoIdentityProviderJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("SamlProviderARNs")) {
+                updateIdentityPoolResult.setSamlProviderARNs(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return updateIdentityPoolResult;
+    }
+
+    private static UpdateIdentityPoolResultJsonUnmarshaller instance;
+
+    public static UpdateIdentityPoolResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateIdentityPoolResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
index f074b83757..d54d2443e6 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
@@ -26,7 +26,7 @@
     private static final int DEFAULT_STRING_LENGTH = 128;
 
     /** SDK version info */
-    private static volatile String version = "2.11.0";
+    private static volatile String version = "2.12.0";
                                                                 // changed build
                                                                 // logic
 
diff --git a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
index eb5dc105c8..168af2da6e 100644
--- a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
+++ b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
@@ -24,7 +24,7 @@
 
     @Test
     public void getVersion() {
-        assertEquals("2.11.0", VersionInfoUtils.getVersion());
+        assertEquals("2.12.0", VersionInfoUtils.getVersion());
     }
 
     @Test
diff --git a/aws-android-sdk-ddb-document/pom.xml b/aws-android-sdk-ddb-document/pom.xml
index 24d6f57ca7..e022822b26 100644
--- a/aws-android-sdk-ddb-document/pom.xml
+++ b/aws-android-sdk-ddb-document/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
diff --git a/aws-android-sdk-ddb-mapper/pom.xml b/aws-android-sdk-ddb-mapper/pom.xml
index f7a6bc0635..37ee407b72 100644
--- a/aws-android-sdk-ddb-mapper/pom.xml
+++ b/aws-android-sdk-ddb-mapper/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,19 +20,19 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-s3</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/pom.xml b/aws-android-sdk-ddb/pom.xml
index d67667052b..1103bf4337 100644
--- a/aws-android-sdk-ddb/pom.xml
+++ b/aws-android-sdk-ddb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ec2/pom.xml b/aws-android-sdk-ec2/pom.xml
index c5d9fbfbf8..3bc144782d 100644
--- a/aws-android-sdk-ec2/pom.xml
+++ b/aws-android-sdk-ec2/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-elb/pom.xml b/aws-android-sdk-elb/pom.xml
index 06c3ee05f2..2a5982c43a 100644
--- a/aws-android-sdk-elb/pom.xml
+++ b/aws-android-sdk-elb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-iot/pom.xml b/aws-android-sdk-iot/pom.xml
index edbef29b31..934b3060a2 100644
--- a/aws-android-sdk-iot/pom.xml
+++ b/aws-android-sdk-iot/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>org.eclipse.paho</groupId>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
index 74e0a0c4cc..f5f47911b7 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
@@ -157,7 +157,7 @@
     /** Handler for mReconnectHandlerThread */
     private Handler mReconnectHandler;
 
-    /** Is this a clean Session with no state being persisted from a prior session */
+    /** True if this is a clean Session with no state being persisted from a prior session */
     private boolean cleanSession = true;
     /**
      * Indicates whether metrics collection is enabled.
@@ -1549,4 +1549,4 @@ static boolean isTopicMatch(String topicFilter, String topic) {
         // above)
         return (topicFilterTokens.length == topicTokens.length);
     }
-}
+}
\ No newline at end of file
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateTopicRuleRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateTopicRuleRequest.java
index 716414fb77..d5b8e8c221 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateTopicRuleRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateTopicRuleRequest.java
@@ -45,6 +45,26 @@
      */
     private TopicRulePayload topicRulePayload;
 
+    /**
+     * <p>
+     * Metadata which can be used to manage the topic rule.
+     * </p>
+     * <note>
+     * <p>
+     * For URI Request parameters use format: ...key1=value1&amp;key2=value2...
+     * </p>
+     * <p>
+     * For the CLI command-line parameter use format: --tags
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * <p>
+     * For the cli-input-json file use format: "tags":
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * </note>
+     */
+    private String tags;
+
     /**
      * <p>
      * The name of the rule.
@@ -147,6 +167,132 @@ public CreateTopicRuleRequest withTopicRulePayload(TopicRulePayload topicRulePay
         return this;
     }
 
+    /**
+     * <p>
+     * Metadata which can be used to manage the topic rule.
+     * </p>
+     * <note>
+     * <p>
+     * For URI Request parameters use format: ...key1=value1&amp;key2=value2...
+     * </p>
+     * <p>
+     * For the CLI command-line parameter use format: --tags
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * <p>
+     * For the cli-input-json file use format: "tags":
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * </note>
+     *
+     * @return <p>
+     *         Metadata which can be used to manage the topic rule.
+     *         </p>
+     *         <note>
+     *         <p>
+     *         For URI Request parameters use format:
+     *         ...key1=value1&amp;key2=value2...
+     *         </p>
+     *         <p>
+     *         For the CLI command-line parameter use format: --tags
+     *         "key1=value1&amp;key2=value2..."
+     *         </p>
+     *         <p>
+     *         For the cli-input-json file use format: "tags":
+     *         "key1=value1&amp;key2=value2..."
+     *         </p>
+     *         </note>
+     */
+    public String getTags() {
+        return tags;
+    }
+
+    /**
+     * <p>
+     * Metadata which can be used to manage the topic rule.
+     * </p>
+     * <note>
+     * <p>
+     * For URI Request parameters use format: ...key1=value1&amp;key2=value2...
+     * </p>
+     * <p>
+     * For the CLI command-line parameter use format: --tags
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * <p>
+     * For the cli-input-json file use format: "tags":
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * </note>
+     *
+     * @param tags <p>
+     *            Metadata which can be used to manage the topic rule.
+     *            </p>
+     *            <note>
+     *            <p>
+     *            For URI Request parameters use format:
+     *            ...key1=value1&amp;key2=value2...
+     *            </p>
+     *            <p>
+     *            For the CLI command-line parameter use format: --tags
+     *            "key1=value1&amp;key2=value2..."
+     *            </p>
+     *            <p>
+     *            For the cli-input-json file use format: "tags":
+     *            "key1=value1&amp;key2=value2..."
+     *            </p>
+     *            </note>
+     */
+    public void setTags(String tags) {
+        this.tags = tags;
+    }
+
+    /**
+     * <p>
+     * Metadata which can be used to manage the topic rule.
+     * </p>
+     * <note>
+     * <p>
+     * For URI Request parameters use format: ...key1=value1&amp;key2=value2...
+     * </p>
+     * <p>
+     * For the CLI command-line parameter use format: --tags
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * <p>
+     * For the cli-input-json file use format: "tags":
+     * "key1=value1&amp;key2=value2..."
+     * </p>
+     * </note>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param tags <p>
+     *            Metadata which can be used to manage the topic rule.
+     *            </p>
+     *            <note>
+     *            <p>
+     *            For URI Request parameters use format:
+     *            ...key1=value1&amp;key2=value2...
+     *            </p>
+     *            <p>
+     *            For the CLI command-line parameter use format: --tags
+     *            "key1=value1&amp;key2=value2..."
+     *            </p>
+     *            <p>
+     *            For the cli-input-json file use format: "tags":
+     *            "key1=value1&amp;key2=value2..."
+     *            </p>
+     *            </note>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateTopicRuleRequest withTags(String tags) {
+        this.tags = tags;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -161,7 +307,9 @@ public String toString() {
         if (getRuleName() != null)
             sb.append("ruleName: " + getRuleName() + ",");
         if (getTopicRulePayload() != null)
-            sb.append("topicRulePayload: " + getTopicRulePayload());
+            sb.append("topicRulePayload: " + getTopicRulePayload() + ",");
+        if (getTags() != null)
+            sb.append("tags: " + getTags());
         sb.append("}");
         return sb.toString();
     }
@@ -174,6 +322,7 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getRuleName() == null) ? 0 : getRuleName().hashCode());
         hashCode = prime * hashCode
                 + ((getTopicRulePayload() == null) ? 0 : getTopicRulePayload().hashCode());
+        hashCode = prime * hashCode + ((getTags() == null) ? 0 : getTags().hashCode());
         return hashCode;
     }
 
@@ -197,6 +346,10 @@ public boolean equals(Object obj) {
         if (other.getTopicRulePayload() != null
                 && other.getTopicRulePayload().equals(this.getTopicRulePayload()) == false)
             return false;
+        if (other.getTags() == null ^ this.getTags() == null)
+            return false;
+        if (other.getTags() != null && other.getTags().equals(this.getTags()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
index 6b9b2654d2..5f5b9d2f60 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
@@ -50,6 +50,10 @@
                 createTopicRuleRequest, "AWSIot");
         request.setHttpMethod(HttpMethodName.POST);
 
+        if (createTopicRuleRequest.getTags() != null) {
+            request.addHeader("x-amz-tagging",
+                    StringUtils.fromString(createTopicRuleRequest.getTags()));
+        }
         String uriResourcePath = "/rules/{ruleName}";
         uriResourcePath = uriResourcePath.replace(
                 "{ruleName}",
diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java
index 6836cd4eb7..bfd93c372d 100644
--- a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/MqttManagerIntegrationTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -15,24 +15,17 @@
 
 package com.amazonaws.mobileconnectors.iot;
 
-import java.io.File;
-import java.security.KeyStore;
-import java.util.Arrays;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Random;
-import java.util.concurrent.CountDownLatch;
-
 import android.app.Activity;
+import android.util.Log;
 
 import com.amazonaws.AmazonClientException;
+import com.amazonaws.AmazonServiceException;
 import com.amazonaws.auth.AWSCredentialsProvider;
 import com.amazonaws.auth.CognitoCachingCredentialsProvider;
 import com.amazonaws.regions.Region;
 import com.amazonaws.regions.Regions;
 import com.amazonaws.services.iot.AWSIotClient;
-import com.amazonaws.services.iot.model.AttachPrincipalPolicyRequest;
+import com.amazonaws.services.iot.model.AttachPolicyRequest;
 import com.amazonaws.services.iot.model.CertificateStatus;
 import com.amazonaws.services.iot.model.CreateKeysAndCertificateRequest;
 import com.amazonaws.services.iot.model.CreateKeysAndCertificateResult;
@@ -42,18 +35,26 @@
 import com.amazonaws.services.iot.model.DeletePolicyRequest;
 import com.amazonaws.services.iot.model.DescribeEndpointRequest;
 import com.amazonaws.services.iot.model.DescribeEndpointResult;
-import com.amazonaws.services.iot.model.DetachPrincipalPolicyRequest;
+import com.amazonaws.services.iot.model.DetachPolicyRequest;
 import com.amazonaws.services.iot.model.UpdateCertificateRequest;
+
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import static org.junit.Assert.*;
+import java.io.File;
+import java.security.KeyStore;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Random;
+import java.util.concurrent.CountDownLatch;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(manifest=Config.NONE, emulateSdk = 16, reportSdk = 16)
@@ -73,6 +74,10 @@
     private static AWSIotClient iotClient;
 
     private static Random r;
+    private static final String TAG = MqttManagerIntegrationTest.class.getSimpleName();
+
+    private CreateKeysAndCertificateResult certResult;
+    private CreatePolicyResult createPolicyResult;
 
     @Before
     public void setUp() throws Exception {
@@ -90,10 +95,12 @@ public void setUp() throws Exception {
 
             initCompleted = true;
         }
+        createAndAttachPolicy();
     }
 
     @After
     public void tearDown() throws Exception {
+        deletePolicyAndCertificate();
         File keystoreFile = new File(KEYSTORE_PATH, KEYSTORE_NAME);
         if (keystoreFile.exists()) {
             keystoreFile.delete();
@@ -145,7 +152,6 @@ public void mqttConnect_USEast1_EndpointPrefix_Region() throws Exception {
         mqttConnect(mqttManager);
     }
 
-    @Ignore
     @Test
     public void mqttConnectMalformedEndpoints() throws Exception {
         DescribeEndpointRequest request = new DescribeEndpointRequest();
@@ -196,42 +202,20 @@ private void mqttConnect(final AWSIotMqttManager mqttManager) throws Exception {
         final ArrayList<String> messages = new ArrayList<String>();
         final ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus> cbStatuses = new ArrayList<AWSIotMqttMessageDeliveryCallback.MessageDeliveryStatus>();
 
-        // create a new certificate and private key
-        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
-        certRequest.setSetAsActive(true);
-        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
         // save certificate and private key in a keystore
-        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(this.certResult.getCertificateId(),
                 certResult.getCertificatePem(),
                 certResult.getKeyPair().getPrivateKey(),
                 KEYSTORE_PATH,
                 KEYSTORE_NAME,
                 KEYSTORE_PASSWORD);
 
-        // create an IoT policy allowing all actions in IoT
-        String policyDocument;
-        CreatePolicyRequest createPolicyRequest = null;
-        CreatePolicyResult createPolicyResult = null;
-
-        try {
-            // create an IoT policy allowing all actions in IoT
-            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
-            createPolicyRequest = new CreatePolicyRequest();
-            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
-            createPolicyRequest.setPolicyDocument(policyDocument);
-            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
-        }  catch (Exception ex) {
-            assertTrue("Error in creating the policy. ",
-                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
-        }
-
-        // attach the policy to the new cert
-        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
-        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        policyRequest.setPrincipal(certResult.getCertificateArn());
-        iotClient.attachPrincipalPolicy(policyRequest);
         // retrieve the keystore
-        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(),
+                KEYSTORE_PATH,
+                KEYSTORE_NAME,
+                KEYSTORE_PASSWORD);
+
         // connect to AWS IoT using keystore
         mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
             @Override
@@ -279,25 +263,6 @@ public void statusChanged(MessageDeliveryStatus status, Object userData) {
         // disconnect
         mqttManager.disconnect();
 
-        // detach policy
-        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
-        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
-        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
-        // delete policy
-        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
-        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.deletePolicy(deletePolicyRequest);
-        // set cert inactive
-        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
-        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
-        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
-        iotClient.updateCertificate(updateCertificateRequest);
-        // delete cert
-        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
-        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
-        iotClient.deleteCertificate(deleteCertificateRequest);
-
         // verify connection events emitted
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
@@ -332,10 +297,6 @@ public void mqttCertificate() throws Exception {
 
         AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
 
-        // create a new certificate and private key
-        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
-        certRequest.setSetAsActive(true);
-        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
         // save certificate and private key in a keystore
         AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
                 certResult.getCertificatePem(),
@@ -343,29 +304,7 @@ public void mqttCertificate() throws Exception {
                 KEYSTORE_PATH,
                 KEYSTORE_NAME,
                 KEYSTORE_PASSWORD);
-        
-        // create an IoT policy allowing all actions in IoT
-        String policyDocument;
-        CreatePolicyRequest createPolicyRequest = null;
-        CreatePolicyResult createPolicyResult = null;
-
-        try {
-            // create an IoT policy allowing all actions in IoT
-            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
-            createPolicyRequest = new CreatePolicyRequest();
-            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
-            createPolicyRequest.setPolicyDocument(policyDocument);
-            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
-        }  catch (Exception ex) {
-            assertTrue("Error in creating the policy. ",
-                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
-        }
 
-        // attach the policy to the new cert
-        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
-        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        policyRequest.setPrincipal(certResult.getCertificateArn());
-        iotClient.attachPrincipalPolicy(policyRequest);
         // retrieve the keystore
         KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
         // connect to AWS IoT using keystore
@@ -391,7 +330,7 @@ public void onMessageArrived(String topic, byte[] data) {
         Thread.sleep(2000);
 
         // publish 20 messages
-        for (int i=0; i<20; ++i) {
+        for (int i = 0; i < 20; i++) {
             mqttManager.publishString("integration test " + i, "sdk/test/integration/cert", AWSIotMqttQos.QOS0);
             Thread.sleep(250);
         }
@@ -401,25 +340,6 @@ public void onMessageArrived(String topic, byte[] data) {
         // disconnect
         mqttManager.disconnect();
 
-        // detach policy
-        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
-        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
-        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
-        // delete policy
-        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
-        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.deletePolicy(deletePolicyRequest);
-        // set cert inactive
-        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
-        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
-        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
-        iotClient.updateCertificate(updateCertificateRequest);
-        // delete cert
-        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
-        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
-        iotClient.deleteCertificate(deleteCertificateRequest);
-
         // verify connection events emitted
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
@@ -446,10 +366,6 @@ public void mqttCertificateQos1WithCallbacks() throws Exception {
         String endpoint = endpointPrefix + ".iot." + Region.getRegion(Regions.US_EAST_1).getName() + ".amazonaws.com";
         AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-w-certs", endpoint);
 
-        // create a new certificate and private key
-        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
-        certRequest.setSetAsActive(true);
-        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
         // save certificate and private key in a keystore
         AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
                 certResult.getCertificatePem(),
@@ -457,29 +373,7 @@ public void mqttCertificateQos1WithCallbacks() throws Exception {
                 KEYSTORE_PATH,
                 KEYSTORE_NAME,
                 KEYSTORE_PASSWORD);
-        
-        // create an IoT policy allowing all actions in IoT
-        String policyDocument;
-        CreatePolicyRequest createPolicyRequest = null;
-        CreatePolicyResult createPolicyResult = null;
 
-        try {
-            // create an IoT policy allowing all actions in IoT
-            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
-            createPolicyRequest = new CreatePolicyRequest();
-            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
-            createPolicyRequest.setPolicyDocument(policyDocument);
-            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
-        }  catch (Exception ex) {
-            assertTrue("Error in creating the policy. ",
-                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
-        }
-
-        // attach the policy to the new cert
-        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
-        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        policyRequest.setPrincipal(certResult.getCertificateArn());
-        iotClient.attachPrincipalPolicy(policyRequest);
         // retrieve the keystore
         KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
         // connect to AWS IoT using keystore
@@ -529,25 +423,6 @@ public void statusChanged(MessageDeliveryStatus status, Object userData) {
         // disconnect
         mqttManager.disconnect();
 
-        // detach policy
-        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
-        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
-        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
-        // delete policy
-        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
-        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.deletePolicy(deletePolicyRequest);
-        // set cert inactive
-        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
-        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
-        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
-        iotClient.updateCertificate(updateCertificateRequest);
-        // delete cert
-        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
-        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
-        iotClient.deleteCertificate(deleteCertificateRequest);
-
         // verify connection events emitted
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
@@ -583,42 +458,16 @@ public void mqttCertificateReconnect() throws Exception {
         AWSIotMqttManager mqttManager = new AWSIotMqttManager("int-test-c-reconnect", Region.getRegion(Regions.US_EAST_1), endpointPrefix);
         mqttManager.setAutoReconnect(true);
 
-        // create a new certificate and private key
-        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
-        certRequest.setSetAsActive(true);
-        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
         // save certificate and private key in a keystore
-        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
-                certResult.getCertificatePem(),
-                certResult.getKeyPair().getPrivateKey(),
+        AWSIotKeystoreHelper.saveCertificateAndPrivateKey(this.certResult.getCertificateId(),
+                this.certResult.getCertificatePem(),
+                this.certResult.getKeyPair().getPrivateKey(),
                 KEYSTORE_PATH,
                 KEYSTORE_NAME,
                 KEYSTORE_PASSWORD);
-        
-        // create an IoT policy allowing all actions in IoT
-        String policyDocument;
-        CreatePolicyRequest createPolicyRequest = null;
-        CreatePolicyResult createPolicyResult = null;
-
-        try {
-            // create an IoT policy allowing all actions in IoT
-            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
-            createPolicyRequest = new CreatePolicyRequest();
-            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
-            createPolicyRequest.setPolicyDocument(policyDocument);
-            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
-        }  catch (Exception ex) {
-            assertTrue("Error in creating the policy. ",
-                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
-        }
 
-        // attach the policy to the new cert
-        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
-        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        policyRequest.setPrincipal(certResult.getCertificateArn());
-        iotClient.attachPrincipalPolicy(policyRequest);
         // retrieve the keystore
-        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
+        KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(this.certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
         // connect to AWS IoT using keystore
         mqttManager.connect(ks, new AWSIotMqttClientStatusCallback() {
             @Override
@@ -673,25 +522,6 @@ public void onMessageArrived(String topic, byte[] data) {
 
         // disconnect
         mqttManager.disconnect();
-
-        // detach policy
-        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
-        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
-        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
-        // delete policy
-        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
-        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.deletePolicy(deletePolicyRequest);
-        // set cert inactive
-        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
-        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
-        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
-        iotClient.updateCertificate(updateCertificateRequest);
-        // delete cert
-        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
-        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
-        iotClient.deleteCertificate(deleteCertificateRequest);
     }
 
     @Test
@@ -711,10 +541,6 @@ public void mqttCertificateLargeMessage() throws Exception {
 
         mqttManager.setAutoReconnect(false);
 
-        // create a new certificate and private key
-        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
-        certRequest.setSetAsActive(true);
-        CreateKeysAndCertificateResult certResult = iotClient.createKeysAndCertificate(certRequest);
         // save certificate and private key in a keystore
         AWSIotKeystoreHelper.saveCertificateAndPrivateKey(certResult.getCertificateId(),
                 certResult.getCertificatePem(),
@@ -722,29 +548,7 @@ public void mqttCertificateLargeMessage() throws Exception {
                 KEYSTORE_PATH,
                 KEYSTORE_NAME,
                 KEYSTORE_PASSWORD);
-        
-        // create an IoT policy allowing all actions in IoT
-        String policyDocument;
-        CreatePolicyRequest createPolicyRequest = null;
-        CreatePolicyResult createPolicyResult = null;
 
-        try {
-            // create an IoT policy allowing all actions in IoT
-            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
-            createPolicyRequest = new CreatePolicyRequest();
-            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
-            createPolicyRequest.setPolicyDocument(policyDocument);
-            createPolicyResult = iotClient.createPolicy(createPolicyRequest);
-        }  catch (Exception ex) {
-            assertTrue("Error in creating the policy. ",
-                ex.getMessage().startsWith("Policy cannot be created - name already exists "));
-        }
-
-        // attach the policy to the new cert
-        AttachPrincipalPolicyRequest policyRequest = new AttachPrincipalPolicyRequest();
-        policyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        policyRequest.setPrincipal(certResult.getCertificateArn());
-        iotClient.attachPrincipalPolicy(policyRequest);
         // retrieve the keystore
         KeyStore ks = AWSIotKeystoreHelper.getIotKeystore(certResult.getCertificateId(), KEYSTORE_PATH, KEYSTORE_NAME, KEYSTORE_PASSWORD);
         // connect to AWS IoT using keystore
@@ -774,25 +578,6 @@ public void onMessageArrived(String topic, byte[] data) {
         // disconnect
         mqttManager.disconnect();
 
-        // detach policy
-        DetachPrincipalPolicyRequest detachPrincipalPolicyRequest = new DetachPrincipalPolicyRequest();
-        detachPrincipalPolicyRequest.setPrincipal(certResult.getCertificateArn());
-        detachPrincipalPolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.detachPrincipalPolicy(detachPrincipalPolicyRequest);
-        // delete policy
-        DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
-        deletePolicyRequest.setPolicyName(createPolicyResult.getPolicyName());
-        iotClient.deletePolicy(deletePolicyRequest);
-        // set cert inactive
-        UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
-        updateCertificateRequest.setCertificateId(certResult.getCertificateId());
-        updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
-        iotClient.updateCertificate(updateCertificateRequest);
-        // delete cert
-        DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
-        deleteCertificateRequest.setCertificateId(certResult.getCertificateId());
-        iotClient.deleteCertificate(deleteCertificateRequest);
-
         // ensure connection events emitted
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connecting, statuses.get(0));
         assertEquals(AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus.Connected, statuses.get(1));
@@ -924,8 +709,14 @@ public void onMessageArrived(String topic, byte[] data) {
         mqttManager.disconnect();
     }
 
+    /**
+     * Client-1 connects and subscribes to a topic and disconnects.
+     * Client-2 connects and publishes to the same topic.
+     * Now, Client-1 comes back, connects and subscribes to the topic and
+     * checks if it does not receive the message that Client-2 published.
+     */
     @Test
-    public void mqttCleanSessionTrue() throws Exception {
+    public void mqttCleanSession() throws Exception {
         final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
         final ArrayList<String> messages = new ArrayList<String>();
 
@@ -1059,9 +850,21 @@ public void onMessageArrived(String topic, byte[] data) {
         assertEquals(0, messages.size());
     }
 
+    /**
+     * Client-1 connects and subscribes to a topic and disconnects.
+     * Client-2 connects and publishes to the same topic.
+     * Now, Client-1 comes back, connects and subscribes to the topic and
+     * checks if it can receive the message that Client-2 published.
+     *
+     * This test is currently ignored because persistent session
+     * (cleanSession = false) is not yet implemented by AWS IoT.
+     *
+     * Please remove the @Ignore annotation when the feature is
+     * released by AWS IoT.
+     */
     @Ignore
     @Test
-    public void mqttCleanSessionFalse() throws Exception {
+    public void mqttPersistantSession() throws Exception {
         final ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus> statuses = new ArrayList<AWSIotMqttClientStatusCallback.AWSIotMqttClientStatus>();
         final ArrayList<String> messages = new ArrayList<String>();
 
@@ -1073,7 +876,7 @@ public void mqttCleanSessionFalse() throws Exception {
             endpointPrefix);
 
         mqttManager.setCleanSession(false);
-        mqttManager.setAutoReconnect(true);
+        mqttManager.setAutoReconnect(false);
 
         // connect to AWS IoT using keystore
         final CountDownLatch countDownLatch = new CountDownLatch(1);
@@ -1102,9 +905,11 @@ public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable)
             new AWSIotMqttNewMessageCallback() {
                 @Override
                 public void onMessageArrived(String topic, byte[] data) {
+                    System.out.println("Client client-id-1 received a message on topic:" + topic);
                     messages.add(new String(data));
                 }
             });
+
         // ensure subscription propagates
         Thread.sleep(2000);
 
@@ -1121,7 +926,7 @@ public void onMessageArrived(String topic, byte[] data) {
             endpointPrefix);
 
         mqttManager2.setCleanSession(false);
-        mqttManager2.setAutoReconnect(true);
+        mqttManager2.setAutoReconnect(false);
 
         // connect to AWS IoT using keystore
         final CountDownLatch countDownLatch2 = new CountDownLatch(1);
@@ -1145,12 +950,22 @@ public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable)
         }
 
         // publish large message
-        mqttManager2.publishString(largeMessageString, 
-            topic, 
-            AWSIotMqttQos.QOS0);
+        mqttManager2.publishString(largeMessageString,
+                topic,
+                AWSIotMqttQos.QOS0,
+                new AWSIotMqttMessageDeliveryCallback() {
+                    @Override
+                    public void statusChanged(MessageDeliveryStatus status, Object userData) {
+                        System.out.println("Client client-id-2 published a message. Status :" + status);
+                    }
+                }, null);
 
         Thread.sleep(3000);
 
+        // disconenct client 2
+        mqttManager2.disconnect();
+        Thread.sleep(3000);
+
         mqttManager = new AWSIotMqttManager("client-id-1", 
             Region.getRegion(Regions.US_EAST_1), 
             endpointPrefix);
@@ -1180,17 +995,18 @@ public void onStatusChanged(AWSIotMqttClientStatus status, Throwable throwable)
         }
 
         // subscribe to MQTT topic
-        mqttManager.subscribeToTopic(topic, 
-            AWSIotMqttQos.QOS0, 
-            new AWSIotMqttNewMessageCallback() {
-                @Override
-                public void onMessageArrived(String topic, byte[] data) {
-                    messages.add(new String(data));
-                }
-            });
-        
+        mqttManager.subscribeToTopic(topic,
+                AWSIotMqttQos.QOS0,
+                new AWSIotMqttNewMessageCallback() {
+                    @Override
+                    public void onMessageArrived(String topic, byte[] data) {
+                        System.out.println("Client client-id-1 received a message on topic:" + topic);
+                        messages.add(new String(data));
+                    }
+                });
+
         // ensure subscription propagates
-        Thread.sleep(2000);
+        Thread.sleep(10000);
 
         // verify messages arrived on topic
         assertEquals(1, messages.size());
@@ -1199,4 +1015,79 @@ public void onMessageArrived(String topic, byte[] data) {
     private static byte getAlphaChar() {
         return (byte)(0x41 + r.nextInt(57));
     }
+
+    /**
+     * Create an IoT policy allowing all actions in IoT
+     * Then attaching the created policy to the certificate.
+     *
+     * Warning: This policy is used repeatedly throughout the test
+     */
+    private void createAndAttachPolicy() {
+        // create a new certificate and private key
+        CreateKeysAndCertificateRequest certRequest = new CreateKeysAndCertificateRequest();
+        certRequest.setSetAsActive(true);
+        this.certResult = iotClient.createKeysAndCertificate(certRequest);
+
+        // create an IoT policy allowing all actions in IoT
+        String policyDocument;
+        CreatePolicyRequest createPolicyRequest;
+
+        try {
+            // create an IoT policy allowing all actions in IoT
+            policyDocument = "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"iot:*\",\"Resource\":\"*\",\"Effect\":\"Allow\"}]}";
+            createPolicyRequest = new CreatePolicyRequest();
+            createPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            createPolicyRequest.setPolicyDocument(policyDocument);
+            this.createPolicyResult = iotClient.createPolicy(createPolicyRequest);
+        }  catch (Exception ex) {
+            assertTrue("Error in creating the policy. ",
+                    ex.getMessage().startsWith("Policy cannot be created - name already exists "));
+        }
+
+        AttachPolicyRequest attachPolicyRequest = new AttachPolicyRequest();
+        attachPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+        attachPolicyRequest.setTarget(this.certResult.getCertificateArn());
+        iotClient.attachPolicy(attachPolicyRequest);
+    }
+
+    /**
+     * Detatch the policy from the certificate.
+     * Delete the policy.
+     * Update certificate status as inactive.
+     * Delete the certificate.
+     */
+    private void deletePolicyAndCertificate() {
+        try {
+            Log.d(TAG, "Detatching the policy from the certificate.");
+            DetachPolicyRequest detachPolicyRequest = new DetachPolicyRequest();
+            detachPolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            detachPolicyRequest.setTarget(this.certResult.getCertificateArn());
+            iotClient.detachPolicy(detachPolicyRequest);
+
+            // delete policy
+            Log.d(TAG, "Deleting the policy.");
+            DeletePolicyRequest deletePolicyRequest = new DeletePolicyRequest();
+            deletePolicyRequest.setPolicyName(IOT_POLICY_NAME);
+            iotClient.deletePolicy(deletePolicyRequest);
+
+            // set cert inactive
+            Log.d(TAG, "Make the certificate inactive.");
+            UpdateCertificateRequest updateCertificateRequest = new UpdateCertificateRequest();
+            updateCertificateRequest.setCertificateId(this.certResult.getCertificateId());
+            updateCertificateRequest.setNewStatus(CertificateStatus.INACTIVE);
+            iotClient.updateCertificate(updateCertificateRequest);
+
+            // delete cert
+            Log.d(TAG, "Delete the certificate.");
+            DeleteCertificateRequest deleteCertificateRequest = new DeleteCertificateRequest();
+            deleteCertificateRequest.setCertificateId(this.certResult.getCertificateId());
+            iotClient.deleteCertificate(deleteCertificateRequest);
+        } catch (AmazonServiceException ase) {
+            ase.printStackTrace();
+            assertTrue("Exception thrown while deleting the policy and certificate", false);
+        } catch (AmazonClientException ace) {
+            ace.printStackTrace();
+            assertTrue("Exception thrown while deleting the policy and certificate", false);
+        }
+    }
 }
diff --git a/aws-android-sdk-kinesis/pom.xml b/aws-android-sdk-kinesis/pom.xml
index 02e4ba2216..726a98e098 100644
--- a/aws-android-sdk-kinesis/pom.xml
+++ b/aws-android-sdk-kinesis/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehose.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehose.java
index 13b6495727..4a64d84493 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehose.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehose.java
@@ -129,38 +129,39 @@
      * </p>
      * <p>
      * The <a>PutRecordBatch</a> response includes a count of failed records,
-     * <b>FailedPutCount</b>, and an array of responses,
-     * <b>RequestResponses</b>. Even if the <a>PutRecordBatch</a> call succeeds,
-     * the value of <b>FailedPutCount</b> may be greater than 0, indicating that
-     * there are records for which the operation didn't succeed. Each entry in
-     * the <b>RequestResponses</b> array provides additional information about
-     * the processed record. It directly correlates with a record in the request
-     * array using the same ordering, from the top to the bottom. The response
-     * array always includes the same number of records as the request array.
-     * <b>RequestResponses</b> includes both successfully and unsuccessfully
-     * processed records. Kinesis Data Firehose tries to process all records in
-     * each <a>PutRecordBatch</a> request. A single record failure does not stop
-     * the processing of subsequent records.
+     * <code>FailedPutCount</code>, and an array of responses,
+     * <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a> call
+     * succeeds, the value of <code>FailedPutCount</code> may be greater than 0,
+     * indicating that there are records for which the operation didn't succeed.
+     * Each entry in the <code>RequestResponses</code> array provides additional
+     * information about the processed record. It directly correlates with a
+     * record in the request array using the same ordering, from the top to the
+     * bottom. The response array always includes the same number of records as
+     * the request array. <code>RequestResponses</code> includes both
+     * successfully and unsuccessfully processed records. Kinesis Data Firehose
+     * tries to process all records in each <a>PutRecordBatch</a> request. A
+     * single record failure does not stop the processing of subsequent records.
      * </p>
      * <p>
-     * A successfully processed record includes a <b>RecordId</b> value, which
-     * is unique for the record. An unsuccessfully processed record includes
-     * <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b>
-     * reflects the type of error, and is one of the following values:
-     * <code>ServiceUnavailableException</code> or <code>InternalFailure</code>.
-     * <b>ErrorMessage</b> provides more detailed information about the error.
+     * A successfully processed record includes a <code>RecordId</code> value,
+     * which is unique for the record. An unsuccessfully processed record
+     * includes <code>ErrorCode</code> and <code>ErrorMessage</code> values.
+     * <code>ErrorCode</code> reflects the type of error, and is one of the
+     * following values: <code>ServiceUnavailableException</code> or
+     * <code>InternalFailure</code>. <code>ErrorMessage</code> provides more
+     * detailed information about the error.
      * </p>
      * <p>
      * If there is an internal server error or a timeout, the write might have
-     * completed or it might have failed. If <b>FailedPutCount</b> is greater
-     * than 0, retry the request, resending only those records that might have
-     * failed processing. This minimizes the possible duplicate records and also
-     * reduces the total bytes sent (and corresponding charges). We recommend
-     * that you handle any duplicates at the destination.
+     * completed or it might have failed. If <code>FailedPutCount</code> is
+     * greater than 0, retry the request, resending only those records that
+     * might have failed processing. This minimizes the possible duplicate
+     * records and also reduces the total bytes sent (and corresponding
+     * charges). We recommend that you handle any duplicates at the destination.
      * </p>
      * <p>
-     * If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back
-     * off and retry. If the exception persists, it is possible that the
+     * If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>,
+     * back off and retry. If the exception persists, it is possible that the
      * throughput limits have been exceeded for the delivery stream.
      * </p>
      * <p>
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehoseClient.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehoseClient.java
index 8c93cc7b02..9fc0e33898 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehoseClient.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/AmazonKinesisFirehoseClient.java
@@ -328,38 +328,39 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
      * </p>
      * <p>
      * The <a>PutRecordBatch</a> response includes a count of failed records,
-     * <b>FailedPutCount</b>, and an array of responses,
-     * <b>RequestResponses</b>. Even if the <a>PutRecordBatch</a> call succeeds,
-     * the value of <b>FailedPutCount</b> may be greater than 0, indicating that
-     * there are records for which the operation didn't succeed. Each entry in
-     * the <b>RequestResponses</b> array provides additional information about
-     * the processed record. It directly correlates with a record in the request
-     * array using the same ordering, from the top to the bottom. The response
-     * array always includes the same number of records as the request array.
-     * <b>RequestResponses</b> includes both successfully and unsuccessfully
-     * processed records. Kinesis Data Firehose tries to process all records in
-     * each <a>PutRecordBatch</a> request. A single record failure does not stop
-     * the processing of subsequent records.
+     * <code>FailedPutCount</code>, and an array of responses,
+     * <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a> call
+     * succeeds, the value of <code>FailedPutCount</code> may be greater than 0,
+     * indicating that there are records for which the operation didn't succeed.
+     * Each entry in the <code>RequestResponses</code> array provides additional
+     * information about the processed record. It directly correlates with a
+     * record in the request array using the same ordering, from the top to the
+     * bottom. The response array always includes the same number of records as
+     * the request array. <code>RequestResponses</code> includes both
+     * successfully and unsuccessfully processed records. Kinesis Data Firehose
+     * tries to process all records in each <a>PutRecordBatch</a> request. A
+     * single record failure does not stop the processing of subsequent records.
      * </p>
      * <p>
-     * A successfully processed record includes a <b>RecordId</b> value, which
-     * is unique for the record. An unsuccessfully processed record includes
-     * <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b>
-     * reflects the type of error, and is one of the following values:
-     * <code>ServiceUnavailableException</code> or <code>InternalFailure</code>.
-     * <b>ErrorMessage</b> provides more detailed information about the error.
+     * A successfully processed record includes a <code>RecordId</code> value,
+     * which is unique for the record. An unsuccessfully processed record
+     * includes <code>ErrorCode</code> and <code>ErrorMessage</code> values.
+     * <code>ErrorCode</code> reflects the type of error, and is one of the
+     * following values: <code>ServiceUnavailableException</code> or
+     * <code>InternalFailure</code>. <code>ErrorMessage</code> provides more
+     * detailed information about the error.
      * </p>
      * <p>
      * If there is an internal server error or a timeout, the write might have
-     * completed or it might have failed. If <b>FailedPutCount</b> is greater
-     * than 0, retry the request, resending only those records that might have
-     * failed processing. This minimizes the possible duplicate records and also
-     * reduces the total bytes sent (and corresponding charges). We recommend
-     * that you handle any duplicates at the destination.
+     * completed or it might have failed. If <code>FailedPutCount</code> is
+     * greater than 0, retry the request, resending only those records that
+     * might have failed processing. This minimizes the possible duplicate
+     * records and also reduces the total bytes sent (and corresponding
+     * charges). We recommend that you handle any duplicates at the destination.
      * </p>
      * <p>
-     * If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back
-     * off and retry. If the exception persists, it is possible that the
+     * If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>,
+     * back off and retry. If the exception persists, it is possible that the
      * throughput limits have been exceeded for the delivery stream.
      * </p>
      * <p>
diff --git a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/PutRecordBatchRequest.java b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/PutRecordBatchRequest.java
index d2717e2193..91494f3a5f 100644
--- a/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/PutRecordBatchRequest.java
+++ b/aws-android-sdk-kinesis/src/main/java/com/amazonaws/services/kinesisfirehose/model/PutRecordBatchRequest.java
@@ -57,39 +57,40 @@
  * </p>
  * <p>
  * The <a>PutRecordBatch</a> response includes a count of failed records,
- * <b>FailedPutCount</b>, and an array of responses, <b>RequestResponses</b>.
- * Even if the <a>PutRecordBatch</a> call succeeds, the value of
- * <b>FailedPutCount</b> may be greater than 0, indicating that there are
- * records for which the operation didn't succeed. Each entry in the
- * <b>RequestResponses</b> array provides additional information about the
- * processed record. It directly correlates with a record in the request array
- * using the same ordering, from the top to the bottom. The response array
- * always includes the same number of records as the request array.
- * <b>RequestResponses</b> includes both successfully and unsuccessfully
- * processed records. Kinesis Data Firehose tries to process all records in each
- * <a>PutRecordBatch</a> request. A single record failure does not stop the
- * processing of subsequent records.
+ * <code>FailedPutCount</code>, and an array of responses,
+ * <code>RequestResponses</code>. Even if the <a>PutRecordBatch</a> call
+ * succeeds, the value of <code>FailedPutCount</code> may be greater than 0,
+ * indicating that there are records for which the operation didn't succeed.
+ * Each entry in the <code>RequestResponses</code> array provides additional
+ * information about the processed record. It directly correlates with a record
+ * in the request array using the same ordering, from the top to the bottom. The
+ * response array always includes the same number of records as the request
+ * array. <code>RequestResponses</code> includes both successfully and
+ * unsuccessfully processed records. Kinesis Data Firehose tries to process all
+ * records in each <a>PutRecordBatch</a> request. A single record failure does
+ * not stop the processing of subsequent records.
  * </p>
  * <p>
- * A successfully processed record includes a <b>RecordId</b> value, which is
- * unique for the record. An unsuccessfully processed record includes
- * <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b> reflects
- * the type of error, and is one of the following values:
- * <code>ServiceUnavailableException</code> or <code>InternalFailure</code>.
- * <b>ErrorMessage</b> provides more detailed information about the error.
+ * A successfully processed record includes a <code>RecordId</code> value, which
+ * is unique for the record. An unsuccessfully processed record includes
+ * <code>ErrorCode</code> and <code>ErrorMessage</code> values.
+ * <code>ErrorCode</code> reflects the type of error, and is one of the
+ * following values: <code>ServiceUnavailableException</code> or
+ * <code>InternalFailure</code>. <code>ErrorMessage</code> provides more
+ * detailed information about the error.
  * </p>
  * <p>
  * If there is an internal server error or a timeout, the write might have
- * completed or it might have failed. If <b>FailedPutCount</b> is greater than
- * 0, retry the request, resending only those records that might have failed
- * processing. This minimizes the possible duplicate records and also reduces
- * the total bytes sent (and corresponding charges). We recommend that you
- * handle any duplicates at the destination.
+ * completed or it might have failed. If <code>FailedPutCount</code> is greater
+ * than 0, retry the request, resending only those records that might have
+ * failed processing. This minimizes the possible duplicate records and also
+ * reduces the total bytes sent (and corresponding charges). We recommend that
+ * you handle any duplicates at the destination.
  * </p>
  * <p>
- * If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off
- * and retry. If the exception persists, it is possible that the throughput
- * limits have been exceeded for the delivery stream.
+ * If <a>PutRecordBatch</a> throws <code>ServiceUnavailableException</code>,
+ * back off and retry. If the exception persists, it is possible that the
+ * throughput limits have been exceeded for the delivery stream.
  * </p>
  * <p>
  * Data records sent to Kinesis Data Firehose are stored for 24 hours from the
diff --git a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
index 7bdd405865..eb996dca16 100644
--- a/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
+++ b/aws-android-sdk-kinesisvideo-archivedmedia/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesisvideo/pom.xml b/aws-android-sdk-kinesisvideo/pom.xml
index 599ac7e8cd..6b39eed565 100644
--- a/aws-android-sdk-kinesisvideo/pom.xml
+++ b/aws-android-sdk-kinesisvideo/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <licenses>
@@ -43,7 +43,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-kms/pom.xml b/aws-android-sdk-kms/pom.xml
index aea7c48511..33e2377fc4 100644
--- a/aws-android-sdk-kms/pom.xml
+++ b/aws-android-sdk-kms/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-lambda/pom.xml b/aws-android-sdk-lambda/pom.xml
index 87e8a415f3..3e81d0223f 100644
--- a/aws-android-sdk-lambda/pom.xml
+++ b/aws-android-sdk-lambda/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambda.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambda.java
index 48898b4cab..d6ed4a306d 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambda.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambda.java
@@ -95,23 +95,33 @@
 
     /**
      * <p>
-     * Invokes a Lambda function. For an example, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/with-dynamodb-create-function.html#with-dbb-invoke-manually"
-     * >Create the Lambda Function and Test It Manually</a>.
+     * Invokes a Lambda function. You can invoke a function synchronously and
+     * wait for the response, or asynchronously. To invoke a function
+     * asynchronously, set <code>InvocationType</code> to <code>Event</code>.
      * </p>
      * <p>
-     * Specify just a function name to invoke the latest version of the
-     * function. To invoke a published version, use the <code>Qualifier</code>
-     * parameter to specify a <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html"
-     * >version or alias</a>.
+     * For synchronous invocation, details about the function response,
+     * including errors, are included in the response body and headers. For
+     * either invocation type, you can find more information in the <a href=
+     * "http://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html"
+     * >execution log</a> and <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">trace</a>. To
+     * record function errors for asynchronous invocations, configure your
+     * function with a <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter
+     * queue</a>.
      * </p>
      * <p>
-     * If you use the <code>RequestResponse</code> (synchronous) invocation
-     * option, the function will be invoked only once. If you use the
-     * <code>Event</code> (asynchronous) invocation option, the function will be
-     * invoked at least once in response to an event and the function must be
-     * idempotent to handle this.
+     * The status code in the API response does not reflect function errors.
+     * Error codes are reserved for errors that prevent your function from
+     * executing, such as permissions errors, <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit
+     * errors</a>, or issues with your function's code and configuration. For
+     * example, Lambda returns <code>TooManyRequestsException</code> if
+     * executing the function would cause you to exceed a concurrency limit at
+     * either the account level (<code>ConcurrentInvocationLimitExceeded</code>)
+     * or function level (
+     * <code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).
      * </p>
      * <p>
      * For functions with a long timeout, your client may be disconnected during
@@ -123,16 +133,6 @@
      * This operation requires permission for the
      * <code>lambda:InvokeFunction</code> action.
      * </p>
-     * <p>
-     * The <code>TooManyRequestsException</code> noted below will return the
-     * following: <code>ConcurrentInvocationLimitExceeded</code> will be
-     * returned if you have no functions with reserved concurrency and have
-     * exceeded your account concurrent limit or if a function without reserved
-     * concurrency exceeds the account's unreserved concurrency limit.
-     * <code>ReservedFunctionConcurrentInvocationLimitExceeded</code> will be
-     * returned when a function with reserved concurrency exceeds its configured
-     * concurrency limit.
-     * </p>
      * 
      * @param invokeRequest
      * @return invokeResult The response from the Invoke service method, as
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambdaClient.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambdaClient.java
index 990a52c972..413a68ed79 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambdaClient.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/AWSLambdaClient.java
@@ -306,23 +306,33 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
 
     /**
      * <p>
-     * Invokes a Lambda function. For an example, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/with-dynamodb-create-function.html#with-dbb-invoke-manually"
-     * >Create the Lambda Function and Test It Manually</a>.
+     * Invokes a Lambda function. You can invoke a function synchronously and
+     * wait for the response, or asynchronously. To invoke a function
+     * asynchronously, set <code>InvocationType</code> to <code>Event</code>.
      * </p>
      * <p>
-     * Specify just a function name to invoke the latest version of the
-     * function. To invoke a published version, use the <code>Qualifier</code>
-     * parameter to specify a <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html"
-     * >version or alias</a>.
+     * For synchronous invocation, details about the function response,
+     * including errors, are included in the response body and headers. For
+     * either invocation type, you can find more information in the <a href=
+     * "http://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html"
+     * >execution log</a> and <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">trace</a>. To
+     * record function errors for asynchronous invocations, configure your
+     * function with a <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead letter
+     * queue</a>.
      * </p>
      * <p>
-     * If you use the <code>RequestResponse</code> (synchronous) invocation
-     * option, the function will be invoked only once. If you use the
-     * <code>Event</code> (asynchronous) invocation option, the function will be
-     * invoked at least once in response to an event and the function must be
-     * idempotent to handle this.
+     * The status code in the API response does not reflect function errors.
+     * Error codes are reserved for errors that prevent your function from
+     * executing, such as permissions errors, <a
+     * href="http://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit
+     * errors</a>, or issues with your function's code and configuration. For
+     * example, Lambda returns <code>TooManyRequestsException</code> if
+     * executing the function would cause you to exceed a concurrency limit at
+     * either the account level (<code>ConcurrentInvocationLimitExceeded</code>)
+     * or function level (
+     * <code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).
      * </p>
      * <p>
      * For functions with a long timeout, your client may be disconnected during
@@ -334,16 +344,6 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
      * This operation requires permission for the
      * <code>lambda:InvokeFunction</code> action.
      * </p>
-     * <p>
-     * The <code>TooManyRequestsException</code> noted below will return the
-     * following: <code>ConcurrentInvocationLimitExceeded</code> will be
-     * returned if you have no functions with reserved concurrency and have
-     * exceeded your account concurrent limit or if a function without reserved
-     * concurrency exceeds the account's unreserved concurrency limit.
-     * <code>ReservedFunctionConcurrentInvocationLimitExceeded</code> will be
-     * returned when a function with reserved concurrency exceeds its configured
-     * concurrency limit.
-     * </p>
      * 
      * @param invokeRequest
      * @return invokeResult The response from the Invoke service method, as
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
index 7fcbf9bae0..c88d837871 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeRequest.java
@@ -21,22 +21,31 @@
 
 /**
  * <p>
- * Invokes a Lambda function. For an example, see <a href=
- * "http://docs.aws.amazon.com/lambda/latest/dg/with-dynamodb-create-function.html#with-dbb-invoke-manually"
- * >Create the Lambda Function and Test It Manually</a>.
+ * Invokes a Lambda function. You can invoke a function synchronously and wait
+ * for the response, or asynchronously. To invoke a function asynchronously, set
+ * <code>InvocationType</code> to <code>Event</code>.
  * </p>
  * <p>
- * Specify just a function name to invoke the latest version of the function. To
- * invoke a published version, use the <code>Qualifier</code> parameter to
- * specify a <a
- * href="http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html"
- * >version or alias</a>.
+ * For synchronous invocation, details about the function response, including
+ * errors, are included in the response body and headers. For either invocation
+ * type, you can find more information in the <a href=
+ * "http://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html"
+ * >execution log</a> and <a
+ * href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">trace</a>. To
+ * record function errors for asynchronous invocations, configure your function
+ * with a <a href="http://docs.aws.amazon.com/lambda/latest/dg/dlq.html">dead
+ * letter queue</a>.
  * </p>
  * <p>
- * If you use the <code>RequestResponse</code> (synchronous) invocation option,
- * the function will be invoked only once. If you use the <code>Event</code>
- * (asynchronous) invocation option, the function will be invoked at least once
- * in response to an event and the function must be idempotent to handle this.
+ * The status code in the API response does not reflect function errors. Error
+ * codes are reserved for errors that prevent your function from executing, such
+ * as permissions errors, <a
+ * href="http://docs.aws.amazon.com/lambda/latest/dg/limits.html">limit
+ * errors</a>, or issues with your function's code and configuration. For
+ * example, Lambda returns <code>TooManyRequestsException</code> if executing
+ * the function would cause you to exceed a concurrency limit at either the
+ * account level (<code>ConcurrentInvocationLimitExceeded</code>) or function
+ * level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).
  * </p>
  * <p>
  * For functions with a long timeout, your client may be disconnected during
@@ -48,21 +57,11 @@
  * This operation requires permission for the <code>lambda:InvokeFunction</code>
  * action.
  * </p>
- * <p>
- * The <code>TooManyRequestsException</code> noted below will return the
- * following: <code>ConcurrentInvocationLimitExceeded</code> will be returned if
- * you have no functions with reserved concurrency and have exceeded your
- * account concurrent limit or if a function without reserved concurrency
- * exceeds the account's unreserved concurrency limit.
- * <code>ReservedFunctionConcurrentInvocationLimitExceeded</code> will be
- * returned when a function with reserved concurrency exceeds its configured
- * concurrency limit.
- * </p>
  */
 public class InvokeRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The name of the Lambda function.
+     * The name of the Lambda function, version, or alias.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -70,24 +69,26 @@
      * <ul>
      * <li>
      * <p>
-     * <b>Function name</b> - <code>MyFunction</code>.
+     * <b>Function name</b> - <code>my-function</code> (name-only),
+     * <code>my-function:v1</code> (with alias).
      * </p>
      * </li>
      * <li>
      * <p>
      * <b>Function ARN</b> -
-     * <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.
+     * <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.
+     * <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * The length constraint applies only to the full ARN. If you specify only
-     * the function name, it is limited to 64 characters in length.
+     * You can append a version number or alias to any of the formats. The
+     * length constraint applies only to the full ARN. If you specify only the
+     * function name, it is limited to 64 characters in length.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -108,13 +109,15 @@
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -132,11 +135,7 @@
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -146,25 +145,9 @@
 
     /**
      * <p>
-     * Using the <code>ClientContext</code> you can pass client-specific
-     * information to the Lambda function you are invoking. You can then process
-     * the client information in your Lambda function as you choose through the
-     * context variable. For an example of a <code>ClientContext</code> JSON,
-     * see <a href=
-     * "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     * >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference and User
-     * Guide</i>.
-     * </p>
-     * <p>
-     * The ClientContext JSON must be base64-encoded and has a maximum size of
-     * 3583 bytes.
+     * Up to 3583 bytes of base64-encoded data about the invoking client to pass
+     * to the function in the context object.
      * </p>
-     * <note>
-     * <p>
-     * <code>ClientContext</code> information is returned only if you use the
-     * synchronous (<code>RequestResponse</code>) invocation type.
-     * </p>
-     * </note>
      */
     private String clientContext;
 
@@ -188,7 +171,7 @@
 
     /**
      * <p>
-     * The name of the Lambda function.
+     * The name of the Lambda function, version, or alias.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -196,24 +179,26 @@
      * <ul>
      * <li>
      * <p>
-     * <b>Function name</b> - <code>MyFunction</code>.
+     * <b>Function name</b> - <code>my-function</code> (name-only),
+     * <code>my-function:v1</code> (with alias).
      * </p>
      * </li>
      * <li>
      * <p>
      * <b>Function ARN</b> -
-     * <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.
+     * <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.
+     * <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * The length constraint applies only to the full ARN. If you specify only
-     * the function name, it is limited to 64 characters in length.
+     * You can append a version number or alias to any of the formats. The
+     * length constraint applies only to the full ARN. If you specify only the
+     * function name, it is limited to 64 characters in length.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -224,7 +209,7 @@
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @return <p>
-     *         The name of the Lambda function.
+     *         The name of the Lambda function, version, or alias.
      *         </p>
      *         <p class="title">
      *         <b>Name formats</b>
@@ -232,24 +217,26 @@
      *         <ul>
      *         <li>
      *         <p>
-     *         <b>Function name</b> - <code>MyFunction</code>.
+     *         <b>Function name</b> - <code>my-function</code> (name-only),
+     *         <code>my-function:v1</code> (with alias).
      *         </p>
      *         </li>
      *         <li>
      *         <p>
      *         <b>Function ARN</b> -
-     *         <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>
+     *         <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>
      *         .
      *         </p>
      *         </li>
      *         <li>
      *         <p>
      *         <b>Partial ARN</b> -
-     *         <code>123456789012:function:MyFunction</code>.
+     *         <code>123456789012:function:my-function</code>.
      *         </p>
      *         </li>
      *         </ul>
      *         <p>
+     *         You can append a version number or alias to any of the formats.
      *         The length constraint applies only to the full ARN. If you
      *         specify only the function name, it is limited to 64 characters in
      *         length.
@@ -261,7 +248,7 @@ public String getFunctionName() {
 
     /**
      * <p>
-     * The name of the Lambda function.
+     * The name of the Lambda function, version, or alias.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -269,24 +256,26 @@ public String getFunctionName() {
      * <ul>
      * <li>
      * <p>
-     * <b>Function name</b> - <code>MyFunction</code>.
+     * <b>Function name</b> - <code>my-function</code> (name-only),
+     * <code>my-function:v1</code> (with alias).
      * </p>
      * </li>
      * <li>
      * <p>
      * <b>Function ARN</b> -
-     * <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.
+     * <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.
+     * <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * The length constraint applies only to the full ARN. If you specify only
-     * the function name, it is limited to 64 characters in length.
+     * You can append a version number or alias to any of the formats. The
+     * length constraint applies only to the full ARN. If you specify only the
+     * function name, it is limited to 64 characters in length.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -297,7 +286,7 @@ public String getFunctionName() {
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @param functionName <p>
-     *            The name of the Lambda function.
+     *            The name of the Lambda function, version, or alias.
      *            </p>
      *            <p class="title">
      *            <b>Name formats</b>
@@ -305,27 +294,29 @@ public String getFunctionName() {
      *            <ul>
      *            <li>
      *            <p>
-     *            <b>Function name</b> - <code>MyFunction</code>.
+     *            <b>Function name</b> - <code>my-function</code> (name-only),
+     *            <code>my-function:v1</code> (with alias).
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <b>Function ARN</b> -
-     *            <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>
+     *            <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>
      *            .
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <b>Partial ARN</b> -
-     *            <code>123456789012:function:MyFunction</code>.
+     *            <code>123456789012:function:my-function</code>.
      *            </p>
      *            </li>
      *            </ul>
      *            <p>
-     *            The length constraint applies only to the full ARN. If you
-     *            specify only the function name, it is limited to 64 characters
-     *            in length.
+     *            You can append a version number or alias to any of the
+     *            formats. The length constraint applies only to the full ARN.
+     *            If you specify only the function name, it is limited to 64
+     *            characters in length.
      *            </p>
      */
     public void setFunctionName(String functionName) {
@@ -334,7 +325,7 @@ public void setFunctionName(String functionName) {
 
     /**
      * <p>
-     * The name of the Lambda function.
+     * The name of the Lambda function, version, or alias.
      * </p>
      * <p class="title">
      * <b>Name formats</b>
@@ -342,24 +333,26 @@ public void setFunctionName(String functionName) {
      * <ul>
      * <li>
      * <p>
-     * <b>Function name</b> - <code>MyFunction</code>.
+     * <b>Function name</b> - <code>my-function</code> (name-only),
+     * <code>my-function:v1</code> (with alias).
      * </p>
      * </li>
      * <li>
      * <p>
      * <b>Function ARN</b> -
-     * <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.
+     * <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.
      * </p>
      * </li>
      * <li>
      * <p>
-     * <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.
+     * <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.
      * </p>
      * </li>
      * </ul>
      * <p>
-     * The length constraint applies only to the full ARN. If you specify only
-     * the function name, it is limited to 64 characters in length.
+     * You can append a version number or alias to any of the formats. The
+     * length constraint applies only to the full ARN. If you specify only the
+     * function name, it is limited to 64 characters in length.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -373,7 +366,7 @@ public void setFunctionName(String functionName) {
      * :)?(function:)?([a-zA-Z0-9-_\.]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?<br/>
      *
      * @param functionName <p>
-     *            The name of the Lambda function.
+     *            The name of the Lambda function, version, or alias.
      *            </p>
      *            <p class="title">
      *            <b>Name formats</b>
@@ -381,27 +374,29 @@ public void setFunctionName(String functionName) {
      *            <ul>
      *            <li>
      *            <p>
-     *            <b>Function name</b> - <code>MyFunction</code>.
+     *            <b>Function name</b> - <code>my-function</code> (name-only),
+     *            <code>my-function:v1</code> (with alias).
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <b>Function ARN</b> -
-     *            <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>
+     *            <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>
      *            .
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <b>Partial ARN</b> -
-     *            <code>123456789012:function:MyFunction</code>.
+     *            <code>123456789012:function:my-function</code>.
      *            </p>
      *            </li>
      *            </ul>
      *            <p>
-     *            The length constraint applies only to the full ARN. If you
-     *            specify only the function name, it is limited to 64 characters
-     *            in length.
+     *            You can append a version number or alias to any of the
+     *            formats. The length constraint applies only to the full ARN.
+     *            If you specify only the function name, it is limited to 64
+     *            characters in length.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -420,13 +415,15 @@ public InvokeRequest withFunctionName(String functionName) {
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -448,14 +445,16 @@ public InvokeRequest withFunctionName(String functionName) {
      *         <p>
      *         <code>RequestResponse</code> (default) - Invoke the function
      *         synchronously. Keep the connection open until the function
-     *         returns a response or times out.
+     *         returns a response or times out. The API response includes the
+     *         function response and additional data.
      *         </p>
      *         </li>
      *         <li>
      *         <p>
      *         <code>Event</code> - Invoke the function asynchronously. Send
      *         events that fail multiple times to the function's dead-letter
-     *         queue (if configured).
+     *         queue (if configured). The API response only includes a status
+     *         code.
      *         </p>
      *         </li>
      *         <li>
@@ -480,13 +479,15 @@ public String getInvocationType() {
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -508,14 +509,16 @@ public String getInvocationType() {
      *            <p>
      *            <code>RequestResponse</code> (default) - Invoke the function
      *            synchronously. Keep the connection open until the function
-     *            returns a response or times out.
+     *            returns a response or times out. The API response includes the
+     *            function response and additional data.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <code>Event</code> - Invoke the function asynchronously. Send
      *            events that fail multiple times to the function's dead-letter
-     *            queue (if configured).
+     *            queue (if configured). The API response only includes a status
+     *            code.
      *            </p>
      *            </li>
      *            <li>
@@ -540,13 +543,15 @@ public void setInvocationType(String invocationType) {
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -571,14 +576,16 @@ public void setInvocationType(String invocationType) {
      *            <p>
      *            <code>RequestResponse</code> (default) - Invoke the function
      *            synchronously. Keep the connection open until the function
-     *            returns a response or times out.
+     *            returns a response or times out. The API response includes the
+     *            function response and additional data.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <code>Event</code> - Invoke the function asynchronously. Send
      *            events that fail multiple times to the function's dead-letter
-     *            queue (if configured).
+     *            queue (if configured). The API response only includes a status
+     *            code.
      *            </p>
      *            </li>
      *            <li>
@@ -606,13 +613,15 @@ public InvokeRequest withInvocationType(String invocationType) {
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -634,14 +643,16 @@ public InvokeRequest withInvocationType(String invocationType) {
      *            <p>
      *            <code>RequestResponse</code> (default) - Invoke the function
      *            synchronously. Keep the connection open until the function
-     *            returns a response or times out.
+     *            returns a response or times out. The API response includes the
+     *            function response and additional data.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <code>Event</code> - Invoke the function asynchronously. Send
      *            events that fail multiple times to the function's dead-letter
-     *            queue (if configured).
+     *            queue (if configured). The API response only includes a status
+     *            code.
      *            </p>
      *            </li>
      *            <li>
@@ -666,13 +677,15 @@ public void setInvocationType(InvocationType invocationType) {
      * <p>
      * <code>RequestResponse</code> (default) - Invoke the function
      * synchronously. Keep the connection open until the function returns a
-     * response or times out.
+     * response or times out. The API response includes the function response
+     * and additional data.
      * </p>
      * </li>
      * <li>
      * <p>
      * <code>Event</code> - Invoke the function asynchronously. Send events that
      * fail multiple times to the function's dead-letter queue (if configured).
+     * The API response only includes a status code.
      * </p>
      * </li>
      * <li>
@@ -697,14 +710,16 @@ public void setInvocationType(InvocationType invocationType) {
      *            <p>
      *            <code>RequestResponse</code> (default) - Invoke the function
      *            synchronously. Keep the connection open until the function
-     *            returns a response or times out.
+     *            returns a response or times out. The API response includes the
+     *            function response and additional data.
      *            </p>
      *            </li>
      *            <li>
      *            <p>
      *            <code>Event</code> - Invoke the function asynchronously. Send
      *            events that fail multiple times to the function's dead-letter
-     *            queue (if configured).
+     *            queue (if configured). The API response only includes a status
+     *            code.
      *            </p>
      *            </li>
      *            <li>
@@ -725,23 +740,15 @@ public InvokeRequest withInvocationType(InvocationType invocationType) {
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>None, Tail
      *
      * @return <p>
-     *         You can set this optional parameter to <code>Tail</code> in the
-     *         request only if you specify the <code>InvocationType</code>
-     *         parameter with value <code>RequestResponse</code>. In this case,
-     *         AWS Lambda returns the base64-encoded last 4 KB of log data
-     *         produced by your Lambda function in the
-     *         <code>x-amz-log-result</code> header.
+     *         Set to <code>Tail</code> to include the execution log in the
+     *         response.
      *         </p>
      * @see LogType
      */
@@ -751,23 +758,15 @@ public String getLogType() {
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>None, Tail
      *
      * @param logType <p>
-     *            You can set this optional parameter to <code>Tail</code> in
-     *            the request only if you specify the
-     *            <code>InvocationType</code> parameter with value
-     *            <code>RequestResponse</code>. In this case, AWS Lambda returns
-     *            the base64-encoded last 4 KB of log data produced by your
-     *            Lambda function in the <code>x-amz-log-result</code> header.
+     *            Set to <code>Tail</code> to include the execution log in the
+     *            response.
      *            </p>
      * @see LogType
      */
@@ -777,11 +776,7 @@ public void setLogType(String logType) {
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -791,12 +786,8 @@ public void setLogType(String logType) {
      * <b>Allowed Values: </b>None, Tail
      *
      * @param logType <p>
-     *            You can set this optional parameter to <code>Tail</code> in
-     *            the request only if you specify the
-     *            <code>InvocationType</code> parameter with value
-     *            <code>RequestResponse</code>. In this case, AWS Lambda returns
-     *            the base64-encoded last 4 KB of log data produced by your
-     *            Lambda function in the <code>x-amz-log-result</code> header.
+     *            Set to <code>Tail</code> to include the execution log in the
+     *            response.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -809,23 +800,15 @@ public InvokeRequest withLogType(String logType) {
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>None, Tail
      *
      * @param logType <p>
-     *            You can set this optional parameter to <code>Tail</code> in
-     *            the request only if you specify the
-     *            <code>InvocationType</code> parameter with value
-     *            <code>RequestResponse</code>. In this case, AWS Lambda returns
-     *            the base64-encoded last 4 KB of log data produced by your
-     *            Lambda function in the <code>x-amz-log-result</code> header.
+     *            Set to <code>Tail</code> to include the execution log in the
+     *            response.
      *            </p>
      * @see LogType
      */
@@ -835,11 +818,7 @@ public void setLogType(LogType logType) {
 
     /**
      * <p>
-     * You can set this optional parameter to <code>Tail</code> in the request
-     * only if you specify the <code>InvocationType</code> parameter with value
-     * <code>RequestResponse</code>. In this case, AWS Lambda returns the
-     * base64-encoded last 4 KB of log data produced by your Lambda function in
-     * the <code>x-amz-log-result</code> header.
+     * Set to <code>Tail</code> to include the execution log in the response.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -849,12 +828,8 @@ public void setLogType(LogType logType) {
      * <b>Allowed Values: </b>None, Tail
      *
      * @param logType <p>
-     *            You can set this optional parameter to <code>Tail</code> in
-     *            the request only if you specify the
-     *            <code>InvocationType</code> parameter with value
-     *            <code>RequestResponse</code>. In this case, AWS Lambda returns
-     *            the base64-encoded last 4 KB of log data produced by your
-     *            Lambda function in the <code>x-amz-log-result</code> header.
+     *            Set to <code>Tail</code> to include the execution log in the
+     *            response.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -867,47 +842,14 @@ public InvokeRequest withLogType(LogType logType) {
 
     /**
      * <p>
-     * Using the <code>ClientContext</code> you can pass client-specific
-     * information to the Lambda function you are invoking. You can then process
-     * the client information in your Lambda function as you choose through the
-     * context variable. For an example of a <code>ClientContext</code> JSON,
-     * see <a href=
-     * "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     * >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference and User
-     * Guide</i>.
-     * </p>
-     * <p>
-     * The ClientContext JSON must be base64-encoded and has a maximum size of
-     * 3583 bytes.
+     * Up to 3583 bytes of base64-encoded data about the invoking client to pass
+     * to the function in the context object.
      * </p>
-     * <note>
-     * <p>
-     * <code>ClientContext</code> information is returned only if you use the
-     * synchronous (<code>RequestResponse</code>) invocation type.
-     * </p>
-     * </note>
      *
      * @return <p>
-     *         Using the <code>ClientContext</code> you can pass client-specific
-     *         information to the Lambda function you are invoking. You can then
-     *         process the client information in your Lambda function as you
-     *         choose through the context variable. For an example of a
-     *         <code>ClientContext</code> JSON, see <a href=
-     *         "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     *         >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference
-     *         and User Guide</i>.
-     *         </p>
-     *         <p>
-     *         The ClientContext JSON must be base64-encoded and has a maximum
-     *         size of 3583 bytes.
+     *         Up to 3583 bytes of base64-encoded data about the invoking client
+     *         to pass to the function in the context object.
      *         </p>
-     *         <note>
-     *         <p>
-     *         <code>ClientContext</code> information is returned only if you
-     *         use the synchronous (<code>RequestResponse</code>) invocation
-     *         type.
-     *         </p>
-     *         </note>
      */
     public String getClientContext() {
         return clientContext;
@@ -915,48 +857,14 @@ public String getClientContext() {
 
     /**
      * <p>
-     * Using the <code>ClientContext</code> you can pass client-specific
-     * information to the Lambda function you are invoking. You can then process
-     * the client information in your Lambda function as you choose through the
-     * context variable. For an example of a <code>ClientContext</code> JSON,
-     * see <a href=
-     * "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     * >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference and User
-     * Guide</i>.
-     * </p>
-     * <p>
-     * The ClientContext JSON must be base64-encoded and has a maximum size of
-     * 3583 bytes.
-     * </p>
-     * <note>
-     * <p>
-     * <code>ClientContext</code> information is returned only if you use the
-     * synchronous (<code>RequestResponse</code>) invocation type.
+     * Up to 3583 bytes of base64-encoded data about the invoking client to pass
+     * to the function in the context object.
      * </p>
-     * </note>
      *
      * @param clientContext <p>
-     *            Using the <code>ClientContext</code> you can pass
-     *            client-specific information to the Lambda function you are
-     *            invoking. You can then process the client information in your
-     *            Lambda function as you choose through the context variable.
-     *            For an example of a <code>ClientContext</code> JSON, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     *            >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference
-     *            and User Guide</i>.
-     *            </p>
-     *            <p>
-     *            The ClientContext JSON must be base64-encoded and has a
-     *            maximum size of 3583 bytes.
-     *            </p>
-     *            <note>
-     *            <p>
-     *            <code>ClientContext</code> information is returned only if you
-     *            use the synchronous (<code>RequestResponse</code>) invocation
-     *            type.
+     *            Up to 3583 bytes of base64-encoded data about the invoking
+     *            client to pass to the function in the context object.
      *            </p>
-     *            </note>
      */
     public void setClientContext(String clientContext) {
         this.clientContext = clientContext;
@@ -964,51 +872,17 @@ public void setClientContext(String clientContext) {
 
     /**
      * <p>
-     * Using the <code>ClientContext</code> you can pass client-specific
-     * information to the Lambda function you are invoking. You can then process
-     * the client information in your Lambda function as you choose through the
-     * context variable. For an example of a <code>ClientContext</code> JSON,
-     * see <a href=
-     * "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     * >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference and User
-     * Guide</i>.
+     * Up to 3583 bytes of base64-encoded data about the invoking client to pass
+     * to the function in the context object.
      * </p>
      * <p>
-     * The ClientContext JSON must be base64-encoded and has a maximum size of
-     * 3583 bytes.
-     * </p>
-     * <note>
-     * <p>
-     * <code>ClientContext</code> information is returned only if you use the
-     * synchronous (<code>RequestResponse</code>) invocation type.
-     * </p>
-     * </note>
-     * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param clientContext <p>
-     *            Using the <code>ClientContext</code> you can pass
-     *            client-specific information to the Lambda function you are
-     *            invoking. You can then process the client information in your
-     *            Lambda function as you choose through the context variable.
-     *            For an example of a <code>ClientContext</code> JSON, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/mobileanalytics/latest/ug/PutEvents.html"
-     *            >PutEvents</a> in the <i>Amazon Mobile Analytics API Reference
-     *            and User Guide</i>.
-     *            </p>
-     *            <p>
-     *            The ClientContext JSON must be base64-encoded and has a
-     *            maximum size of 3583 bytes.
-     *            </p>
-     *            <note>
-     *            <p>
-     *            <code>ClientContext</code> information is returned only if you
-     *            use the synchronous (<code>RequestResponse</code>) invocation
-     *            type.
+     *            Up to 3583 bytes of base64-encoded data about the invoking
+     *            client to pass to the function in the context object.
      *            </p>
-     *            </note>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeResult.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeResult.java
index 4bfc66d5b0..138d589944 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeResult.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/InvokeResult.java
@@ -17,11 +17,6 @@
 
 import java.io.Serializable;
 
-/**
- * <p>
- * Upon success, returns an empty response. Otherwise, throws an exception.
- * </p>
- */
 public class InvokeResult implements Serializable {
     /**
      * <p>
@@ -36,51 +31,44 @@
 
     /**
      * <p>
-     * Indicates whether an error occurred while executing the Lambda function.
-     * If an error occurred this field will have one of two values;
-     * <code>Handled</code> or <code>Unhandled</code>. <code>Handled</code>
-     * errors are errors that are reported by the function while the
-     * <code>Unhandled</code> errors are those detected and reported by AWS
-     * Lambda. Unhandled errors include out of memory errors and function
-     * timeouts. For information about how to report an <code>Handled</code>
-     * error, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     * >Programming Model</a>.
+     * If present, indicates that an error occured during function execution.
+     * Details about the error are included in the response payload.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>Handled</code> - The runtime caught an error thrown by the function
+     * and formatted it into a JSON document.
      * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Unhandled</code> - The runtime did not handle the error. For
+     * example, the function ran out of memory or timed out.
+     * </p>
+     * </li>
+     * </ul>
      */
     private String functionError;
 
     /**
      * <p>
-     * It is the base64-encoded logs for the Lambda function invocation. This is
-     * present only if the invocation type is <code>RequestResponse</code> and
-     * the logs were requested.
+     * The last 4 KB of the execution log, base64 encoded.
      * </p>
      */
     private String logResult;
 
     /**
      * <p>
-     * It is the JSON representation of the object returned by the Lambda
-     * function. This is present only if the invocation type is
-     * <code>RequestResponse</code>.
-     * </p>
-     * <p>
-     * In the event of a function error this field contains a message describing
-     * the error. For the <code>Handled</code> errors the Lambda function will
-     * report this message. For <code>Unhandled</code> errors AWS Lambda reports
-     * the message.
+     * The response from the function, or an error object.
      * </p>
      */
     private java.nio.ByteBuffer payload;
 
     /**
      * <p>
-     * The function version that has been executed. This value is returned only
-     * if the invocation type is <code>RequestResponse</code>. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     * >Traffic Shifting Using Aliases</a>.
+     * The version of the function that executed. When you invoke a function
+     * with an alias, indicates which version the alias resolved to.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -162,30 +150,43 @@ public InvokeResult withStatusCode(Integer statusCode) {
 
     /**
      * <p>
-     * Indicates whether an error occurred while executing the Lambda function.
-     * If an error occurred this field will have one of two values;
-     * <code>Handled</code> or <code>Unhandled</code>. <code>Handled</code>
-     * errors are errors that are reported by the function while the
-     * <code>Unhandled</code> errors are those detected and reported by AWS
-     * Lambda. Unhandled errors include out of memory errors and function
-     * timeouts. For information about how to report an <code>Handled</code>
-     * error, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     * >Programming Model</a>.
+     * If present, indicates that an error occured during function execution.
+     * Details about the error are included in the response payload.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>Handled</code> - The runtime caught an error thrown by the function
+     * and formatted it into a JSON document.
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Unhandled</code> - The runtime did not handle the error. For
+     * example, the function ran out of memory or timed out.
      * </p>
+     * </li>
+     * </ul>
      *
      * @return <p>
-     *         Indicates whether an error occurred while executing the Lambda
-     *         function. If an error occurred this field will have one of two
-     *         values; <code>Handled</code> or <code>Unhandled</code>.
-     *         <code>Handled</code> errors are errors that are reported by the
-     *         function while the <code>Unhandled</code> errors are those
-     *         detected and reported by AWS Lambda. Unhandled errors include out
-     *         of memory errors and function timeouts. For information about how
-     *         to report an <code>Handled</code> error, see <a href=
-     *         "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     *         >Programming Model</a>.
+     *         If present, indicates that an error occured during function
+     *         execution. Details about the error are included in the response
+     *         payload.
      *         </p>
+     *         <ul>
+     *         <li>
+     *         <p>
+     *         <code>Handled</code> - The runtime caught an error thrown by the
+     *         function and formatted it into a JSON document.
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>Unhandled</code> - The runtime did not handle the error.
+     *         For example, the function ran out of memory or timed out.
+     *         </p>
+     *         </li>
+     *         </ul>
      */
     public String getFunctionError() {
         return functionError;
@@ -193,31 +194,43 @@ public String getFunctionError() {
 
     /**
      * <p>
-     * Indicates whether an error occurred while executing the Lambda function.
-     * If an error occurred this field will have one of two values;
-     * <code>Handled</code> or <code>Unhandled</code>. <code>Handled</code>
-     * errors are errors that are reported by the function while the
-     * <code>Unhandled</code> errors are those detected and reported by AWS
-     * Lambda. Unhandled errors include out of memory errors and function
-     * timeouts. For information about how to report an <code>Handled</code>
-     * error, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     * >Programming Model</a>.
+     * If present, indicates that an error occured during function execution.
+     * Details about the error are included in the response payload.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>Handled</code> - The runtime caught an error thrown by the function
+     * and formatted it into a JSON document.
      * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Unhandled</code> - The runtime did not handle the error. For
+     * example, the function ran out of memory or timed out.
+     * </p>
+     * </li>
+     * </ul>
      *
      * @param functionError <p>
-     *            Indicates whether an error occurred while executing the Lambda
-     *            function. If an error occurred this field will have one of two
-     *            values; <code>Handled</code> or <code>Unhandled</code>.
-     *            <code>Handled</code> errors are errors that are reported by
-     *            the function while the <code>Unhandled</code> errors are those
-     *            detected and reported by AWS Lambda. Unhandled errors include
-     *            out of memory errors and function timeouts. For information
-     *            about how to report an <code>Handled</code> error, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     *            >Programming Model</a>.
+     *            If present, indicates that an error occured during function
+     *            execution. Details about the error are included in the
+     *            response payload.
      *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>Handled</code> - The runtime caught an error thrown by
+     *            the function and formatted it into a JSON document.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Unhandled</code> - The runtime did not handle the error.
+     *            For example, the function ran out of memory or timed out.
+     *            </p>
+     *            </li>
+     *            </ul>
      */
     public void setFunctionError(String functionError) {
         this.functionError = functionError;
@@ -225,34 +238,46 @@ public void setFunctionError(String functionError) {
 
     /**
      * <p>
-     * Indicates whether an error occurred while executing the Lambda function.
-     * If an error occurred this field will have one of two values;
-     * <code>Handled</code> or <code>Unhandled</code>. <code>Handled</code>
-     * errors are errors that are reported by the function while the
-     * <code>Unhandled</code> errors are those detected and reported by AWS
-     * Lambda. Unhandled errors include out of memory errors and function
-     * timeouts. For information about how to report an <code>Handled</code>
-     * error, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     * >Programming Model</a>.
+     * If present, indicates that an error occured during function execution.
+     * Details about the error are included in the response payload.
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>Handled</code> - The runtime caught an error thrown by the function
+     * and formatted it into a JSON document.
      * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>Unhandled</code> - The runtime did not handle the error. For
+     * example, the function ran out of memory or timed out.
+     * </p>
+     * </li>
+     * </ul>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param functionError <p>
-     *            Indicates whether an error occurred while executing the Lambda
-     *            function. If an error occurred this field will have one of two
-     *            values; <code>Handled</code> or <code>Unhandled</code>.
-     *            <code>Handled</code> errors are errors that are reported by
-     *            the function while the <code>Unhandled</code> errors are those
-     *            detected and reported by AWS Lambda. Unhandled errors include
-     *            out of memory errors and function timeouts. For information
-     *            about how to report an <code>Handled</code> error, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/lambda/latest/dg/programming-model.html"
-     *            >Programming Model</a>.
+     *            If present, indicates that an error occured during function
+     *            execution. Details about the error are included in the
+     *            response payload.
      *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>Handled</code> - The runtime caught an error thrown by
+     *            the function and formatted it into a JSON document.
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>Unhandled</code> - The runtime did not handle the error.
+     *            For example, the function ran out of memory or timed out.
+     *            </p>
+     *            </li>
+     *            </ul>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -263,15 +288,11 @@ public InvokeResult withFunctionError(String functionError) {
 
     /**
      * <p>
-     * It is the base64-encoded logs for the Lambda function invocation. This is
-     * present only if the invocation type is <code>RequestResponse</code> and
-     * the logs were requested.
+     * The last 4 KB of the execution log, base64 encoded.
      * </p>
      *
      * @return <p>
-     *         It is the base64-encoded logs for the Lambda function invocation.
-     *         This is present only if the invocation type is
-     *         <code>RequestResponse</code> and the logs were requested.
+     *         The last 4 KB of the execution log, base64 encoded.
      *         </p>
      */
     public String getLogResult() {
@@ -280,15 +301,11 @@ public String getLogResult() {
 
     /**
      * <p>
-     * It is the base64-encoded logs for the Lambda function invocation. This is
-     * present only if the invocation type is <code>RequestResponse</code> and
-     * the logs were requested.
+     * The last 4 KB of the execution log, base64 encoded.
      * </p>
      *
      * @param logResult <p>
-     *            It is the base64-encoded logs for the Lambda function
-     *            invocation. This is present only if the invocation type is
-     *            <code>RequestResponse</code> and the logs were requested.
+     *            The last 4 KB of the execution log, base64 encoded.
      *            </p>
      */
     public void setLogResult(String logResult) {
@@ -297,18 +314,14 @@ public void setLogResult(String logResult) {
 
     /**
      * <p>
-     * It is the base64-encoded logs for the Lambda function invocation. This is
-     * present only if the invocation type is <code>RequestResponse</code> and
-     * the logs were requested.
+     * The last 4 KB of the execution log, base64 encoded.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param logResult <p>
-     *            It is the base64-encoded logs for the Lambda function
-     *            invocation. This is present only if the invocation type is
-     *            <code>RequestResponse</code> and the logs were requested.
+     *            The last 4 KB of the execution log, base64 encoded.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -320,27 +333,11 @@ public InvokeResult withLogResult(String logResult) {
 
     /**
      * <p>
-     * It is the JSON representation of the object returned by the Lambda
-     * function. This is present only if the invocation type is
-     * <code>RequestResponse</code>.
-     * </p>
-     * <p>
-     * In the event of a function error this field contains a message describing
-     * the error. For the <code>Handled</code> errors the Lambda function will
-     * report this message. For <code>Unhandled</code> errors AWS Lambda reports
-     * the message.
+     * The response from the function, or an error object.
      * </p>
      *
      * @return <p>
-     *         It is the JSON representation of the object returned by the
-     *         Lambda function. This is present only if the invocation type is
-     *         <code>RequestResponse</code>.
-     *         </p>
-     *         <p>
-     *         In the event of a function error this field contains a message
-     *         describing the error. For the <code>Handled</code> errors the
-     *         Lambda function will report this message. For
-     *         <code>Unhandled</code> errors AWS Lambda reports the message.
+     *         The response from the function, or an error object.
      *         </p>
      */
     public java.nio.ByteBuffer getPayload() {
@@ -349,27 +346,11 @@ public InvokeResult withLogResult(String logResult) {
 
     /**
      * <p>
-     * It is the JSON representation of the object returned by the Lambda
-     * function. This is present only if the invocation type is
-     * <code>RequestResponse</code>.
-     * </p>
-     * <p>
-     * In the event of a function error this field contains a message describing
-     * the error. For the <code>Handled</code> errors the Lambda function will
-     * report this message. For <code>Unhandled</code> errors AWS Lambda reports
-     * the message.
+     * The response from the function, or an error object.
      * </p>
      *
      * @param payload <p>
-     *            It is the JSON representation of the object returned by the
-     *            Lambda function. This is present only if the invocation type
-     *            is <code>RequestResponse</code>.
-     *            </p>
-     *            <p>
-     *            In the event of a function error this field contains a message
-     *            describing the error. For the <code>Handled</code> errors the
-     *            Lambda function will report this message. For
-     *            <code>Unhandled</code> errors AWS Lambda reports the message.
+     *            The response from the function, or an error object.
      *            </p>
      */
     public void setPayload(java.nio.ByteBuffer payload) {
@@ -378,30 +359,14 @@ public void setPayload(java.nio.ByteBuffer payload) {
 
     /**
      * <p>
-     * It is the JSON representation of the object returned by the Lambda
-     * function. This is present only if the invocation type is
-     * <code>RequestResponse</code>.
-     * </p>
-     * <p>
-     * In the event of a function error this field contains a message describing
-     * the error. For the <code>Handled</code> errors the Lambda function will
-     * report this message. For <code>Unhandled</code> errors AWS Lambda reports
-     * the message.
+     * The response from the function, or an error object.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param payload <p>
-     *            It is the JSON representation of the object returned by the
-     *            Lambda function. This is present only if the invocation type
-     *            is <code>RequestResponse</code>.
-     *            </p>
-     *            <p>
-     *            In the event of a function error this field contains a message
-     *            describing the error. For the <code>Handled</code> errors the
-     *            Lambda function will report this message. For
-     *            <code>Unhandled</code> errors AWS Lambda reports the message.
+     *            The response from the function, or an error object.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -413,11 +378,8 @@ public InvokeResult withPayload(java.nio.ByteBuffer payload) {
 
     /**
      * <p>
-     * The function version that has been executed. This value is returned only
-     * if the invocation type is <code>RequestResponse</code>. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     * >Traffic Shifting Using Aliases</a>.
+     * The version of the function that executed. When you invoke a function
+     * with an alias, indicates which version the alias resolved to.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -425,11 +387,9 @@ public InvokeResult withPayload(java.nio.ByteBuffer payload) {
      * <b>Pattern: </b>(\$LATEST|[0-9]+)<br/>
      *
      * @return <p>
-     *         The function version that has been executed. This value is
-     *         returned only if the invocation type is
-     *         <code>RequestResponse</code>. For more information, see <a href=
-     *         "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     *         >Traffic Shifting Using Aliases</a>.
+     *         The version of the function that executed. When you invoke a
+     *         function with an alias, indicates which version the alias
+     *         resolved to.
      *         </p>
      */
     public String getExecutedVersion() {
@@ -438,11 +398,8 @@ public String getExecutedVersion() {
 
     /**
      * <p>
-     * The function version that has been executed. This value is returned only
-     * if the invocation type is <code>RequestResponse</code>. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     * >Traffic Shifting Using Aliases</a>.
+     * The version of the function that executed. When you invoke a function
+     * with an alias, indicates which version the alias resolved to.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -450,12 +407,9 @@ public String getExecutedVersion() {
      * <b>Pattern: </b>(\$LATEST|[0-9]+)<br/>
      *
      * @param executedVersion <p>
-     *            The function version that has been executed. This value is
-     *            returned only if the invocation type is
-     *            <code>RequestResponse</code>. For more information, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     *            >Traffic Shifting Using Aliases</a>.
+     *            The version of the function that executed. When you invoke a
+     *            function with an alias, indicates which version the alias
+     *            resolved to.
      *            </p>
      */
     public void setExecutedVersion(String executedVersion) {
@@ -464,11 +418,8 @@ public void setExecutedVersion(String executedVersion) {
 
     /**
      * <p>
-     * The function version that has been executed. This value is returned only
-     * if the invocation type is <code>RequestResponse</code>. For more
-     * information, see <a href=
-     * "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     * >Traffic Shifting Using Aliases</a>.
+     * The version of the function that executed. When you invoke a function
+     * with an alias, indicates which version the alias resolved to.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -479,12 +430,9 @@ public void setExecutedVersion(String executedVersion) {
      * <b>Pattern: </b>(\$LATEST|[0-9]+)<br/>
      *
      * @param executedVersion <p>
-     *            The function version that has been executed. This value is
-     *            returned only if the invocation type is
-     *            <code>RequestResponse</code>. For more information, see <a
-     *            href=
-     *            "http://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html"
-     *            >Traffic Shifting Using Aliases</a>.
+     *            The version of the function that executed. When you invoke a
+     *            function with an alias, indicates which version the alias
+     *            resolved to.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/TooManyRequestsException.java b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/TooManyRequestsException.java
index 98056abd36..5137d786a0 100644
--- a/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/TooManyRequestsException.java
+++ b/aws-android-sdk-lambda/src/main/java/com/amazonaws/services/lambda/model/TooManyRequestsException.java
@@ -19,7 +19,7 @@
 
 /**
  * <p>
- * Request throughput limit exceeded
+ * Request throughput limit exceeded.
  * </p>
  */
 public class TooManyRequestsException extends AmazonServiceException {
diff --git a/aws-android-sdk-lex/pom.xml b/aws-android-sdk-lex/pom.xml
index bfadaa92a8..76f7c90aa1 100644
--- a/aws-android-sdk-lex/pom.xml
+++ b/aws-android-sdk-lex/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.11.0</version>
+        <version>2.12.0</version>
     </parent>
 
    <!-- Component includes software under each of these licenses; this is not a choice of license -->
@@ -33,7 +33,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.11.0</version>
+            <version>2.12.0</version>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-logs/pom.xml b/aws-android-sdk-logs/pom.xml
index 7f088ad074..24ff09bd14 100644
--- a/aws-android-sdk-logs/pom.xml
+++ b/aws-android-sdk-logs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-machinelearning/pom.xml b/aws-android-sdk-machinelearning/pom.xml
index 9a5a297923..b7aa00c935 100644
--- a/aws-android-sdk-machinelearning/pom.xml
+++ b/aws-android-sdk-machinelearning/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-mobile-client/pom.xml b/aws-android-sdk-mobile-client/pom.xml
index 8289ab0cf4..7828a41fdf 100644
--- a/aws-android-sdk-mobile-client/pom.xml
+++ b/aws-android-sdk-mobile-client/pom.xml
@@ -28,7 +28,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
@@ -44,14 +44,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
 
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-ui</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
@@ -67,7 +67,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
@@ -75,7 +75,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
@@ -83,7 +83,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java
index 1fcba7cb4a..c69c82a317 100644
--- a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java
+++ b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientOfflineTest.java
@@ -10,6 +10,7 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.Queue;
@@ -36,6 +37,7 @@
     public static final String NEW_PASSWORD = "new1234Password!";
     public static final int THROTTLED_DELAY = 5000;
 
+
     Context appContext;
     AWSMobileClient auth;
     UserStateListener listener;
@@ -113,6 +115,7 @@ public void testGetConfiguration() throws JSONException {
         }
     }
 
+    @Ignore("If network is on on the emulator, this test may get stuck")
     @Test
     public void testSignInWaitOIDCOffline() throws Exception {
         final Queue<UserStateDetails> allChanges = new ConcurrentLinkedQueue<UserStateDetails>();
@@ -134,6 +137,6 @@ public void onUserStateChanged(UserStateDetails details) {
         }
         assertEquals("1 signed-in events should not have been triggered, because tokens swapped underneath", 1, allChanges.size());
         assertEquals(UserState.SIGNED_IN, allChanges.remove().getUserState());
-    }
+   }
 
 }
diff --git a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
index c2b20f7ecb..5f56ce11f8 100644
--- a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
+++ b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTest.java
@@ -17,6 +17,7 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.BeforeClass;
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.util.ArrayList;
@@ -51,6 +52,7 @@
     public static final String NEW_PASSWORD = "new1234Password!";
     public static final int THROTTLED_DELAY = 5000;
 
+
     Context appContext;
     AWSMobileClient auth;
     UserStateListener listener;
@@ -239,7 +241,7 @@ public void onUserStateChanged(UserStateDetails details) {
     public void testSignInWaitOIDC() throws Exception {
         final AtomicReference<Boolean> hasWaited = new AtomicReference<Boolean>();
         hasWaited.set(false);
-//        writeUserpoolsTokens(appContext, auth.getConfiguration().optJsonObject("CognitoUserPool").getString("AppClientId"), USERNAME, 3600L);
+       // writeUserpoolsTokens(appContext, auth.getConfiguration().optJsonObject("CognitoUserPool").getString("AppClientId"), USERNAME, 3600L);
         setTokensDirectly(appContext, AWSMobileClient.getInstance().getLoginKey(), "fakeToken", "someIdentityId");
         listener = new UserStateListener() {
             @Override
@@ -356,7 +358,7 @@ public void onUserStateChanged(UserStateDetails details) {
         countDownLatch.await(5, TimeUnit.SECONDS);
         assertFalse(triggered.get());
     }
-
+    @Ignore("This test case may cause crash on some emulators")
     @Test
     public void testGetTokensStress() throws Exception {
         final SignInResult signInResult = auth.signIn(USERNAME, PASSWORD, null);
diff --git a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java
index c4c245aeee..0371d50073 100644
--- a/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java
+++ b/aws-android-sdk-mobile-client/src/androidTest/java/com/amazonaws/mobile/client/AWSMobileClientTestBase.java
@@ -9,6 +9,7 @@
 import com.amazonaws.util.StringUtils;
 
 import org.junit.runner.RunWith;
+import org.junit.Test;
 
 @RunWith(AndroidJUnit4.class)
 public class AWSMobileClientTestBase {
@@ -49,4 +50,10 @@ public static String getValidJWT(long expiryInSecs){
         String validAccessToken = accessToken_p1_Base64+"."+accessToken_p2_Base64+"."+accessToken_p3_Base64;
         return validAccessToken;
     }
+    //This is need for CircleCI to run the test suite
+    @Test
+    public void empty()
+    {
+        
+    }    
 }
diff --git a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
index 4578619cda..7085eb4278 100644
--- a/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
+++ b/aws-android-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
@@ -831,7 +831,7 @@ public void signOut() {
     }
 
     /**
-     * Federate tokens from custom identity providers by providing the
+     * Federate tokens from custom identity providers into Cognito Identity Pool by providing the
      * logins key and token
      * <p>
      * The logins key can be specified with {@link IdentityProvider#AMAZON#toString()}
@@ -847,7 +847,7 @@ public void federatedSignIn(final String providerKey,
     }
 
     /**
-     * Federate tokens from custom identity providers by providing the
+     * Federate tokens from custom identity providers into Cognito Identity Pool by providing the
      * logins key and token
      * <p>
      * The logins key can be specified with {@link IdentityProvider#AMAZON}
diff --git a/aws-android-sdk-mobileanalytics/pom.xml b/aws-android-sdk-mobileanalytics/pom.xml
index 9bdd0fb5f6..808ab5288a 100644
--- a/aws-android-sdk-mobileanalytics/pom.xml
+++ b/aws-android-sdk-mobileanalytics/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/pom.xml b/aws-android-sdk-pinpoint/pom.xml
index f1682d91aa..67aa78f6f5 100644
--- a/aws-android-sdk-pinpoint/pom.xml
+++ b/aws-android-sdk-pinpoint/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.11.0</version>
+        <version>2.12.0</version>
     </parent>
 
     <dependencies>
@@ -20,7 +20,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.11.0</version>
+            <version>2.12.0</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
index ff3f23fe5e..14b2e6d5eb 100644
--- a/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
+++ b/aws-android-sdk-pinpoint/src/main/java/com/amazonaws/services/pinpoint/model/Event.java
@@ -22,17 +22,17 @@
  */
 public class Event implements Serializable {
     /**
-     * The new value for the appPackageName property for this object.
+     * The package name associated with the app that's recording the event.
      */
     private String appPackageName;
 
     /**
-     * The new value for the appTitle property for this object.
+     * The title of the app that's recording the event.
      */
     private String appTitle;
 
     /**
-     * The new value for the appVersionCode property for this object.
+     * The version number of the app that's recording the event.
      */
     private String appVersionCode;
 
@@ -58,7 +58,7 @@
     private java.util.Map<String, Double> metrics;
 
     /**
-     * The new value for the sdkName property for this object.
+     * The name of the SDK that's being used to record the event.
      */
     private String sdkName;
 
@@ -73,32 +73,33 @@
     private String timestamp;
 
     /**
-     * Returns the value of the appPackageName property for this object.
+     * The package name associated with the app that's recording the event.
      *
-     * @return The value of the appPackageName property for this object.
+     * @return The package name associated with the app that's recording the
+     *         event.
      */
     public String getAppPackageName() {
         return appPackageName;
     }
 
     /**
-     * Sets the value of appPackageName
+     * The package name associated with the app that's recording the event.
      *
-     * @param appPackageName The new value for the appPackageName property for
-     *            this object.
+     * @param appPackageName The package name associated with the app that's
+     *            recording the event.
      */
     public void setAppPackageName(String appPackageName) {
         this.appPackageName = appPackageName;
     }
 
     /**
-     * Sets the value of the appPackageName property for this object.
+     * The package name associated with the app that's recording the event.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param appPackageName The new value for the appPackageName property for
-     *            this object.
+     * @param appPackageName The package name associated with the app that's
+     *            recording the event.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -108,30 +109,30 @@ public Event withAppPackageName(String appPackageName) {
     }
 
     /**
-     * Returns the value of the appTitle property for this object.
+     * The title of the app that's recording the event.
      *
-     * @return The value of the appTitle property for this object.
+     * @return The title of the app that's recording the event.
      */
     public String getAppTitle() {
         return appTitle;
     }
 
     /**
-     * Sets the value of appTitle
+     * The title of the app that's recording the event.
      *
-     * @param appTitle The new value for the appTitle property for this object.
+     * @param appTitle The title of the app that's recording the event.
      */
     public void setAppTitle(String appTitle) {
         this.appTitle = appTitle;
     }
 
     /**
-     * Sets the value of the appTitle property for this object.
+     * The title of the app that's recording the event.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param appTitle The new value for the appTitle property for this object.
+     * @param appTitle The title of the app that's recording the event.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -141,32 +142,32 @@ public Event withAppTitle(String appTitle) {
     }
 
     /**
-     * Returns the value of the appVersionCode property for this object.
+     * The version number of the app that's recording the event.
      *
-     * @return The value of the appVersionCode property for this object.
+     * @return The version number of the app that's recording the event.
      */
     public String getAppVersionCode() {
         return appVersionCode;
     }
 
     /**
-     * Sets the value of appVersionCode
+     * The version number of the app that's recording the event.
      *
-     * @param appVersionCode The new value for the appVersionCode property for
-     *            this object.
+     * @param appVersionCode The version number of the app that's recording the
+     *            event.
      */
     public void setAppVersionCode(String appVersionCode) {
         this.appVersionCode = appVersionCode;
     }
 
     /**
-     * Sets the value of the appVersionCode property for this object.
+     * The version number of the app that's recording the event.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param appVersionCode The new value for the appVersionCode property for
-     *            this object.
+     * @param appVersionCode The version number of the app that's recording the
+     *            event.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -386,30 +387,30 @@ public Event clearMetricsEntries() {
     }
 
     /**
-     * Returns the value of the sdkName property for this object.
+     * The name of the SDK that's being used to record the event.
      *
-     * @return The value of the sdkName property for this object.
+     * @return The name of the SDK that's being used to record the event.
      */
     public String getSdkName() {
         return sdkName;
     }
 
     /**
-     * Sets the value of sdkName
+     * The name of the SDK that's being used to record the event.
      *
-     * @param sdkName The new value for the sdkName property for this object.
+     * @param sdkName The name of the SDK that's being used to record the event.
      */
     public void setSdkName(String sdkName) {
         this.sdkName = sdkName;
     }
 
     /**
-     * Sets the value of the sdkName property for this object.
+     * The name of the SDK that's being used to record the event.
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
-     * @param sdkName The new value for the sdkName property for this object.
+     * @param sdkName The name of the SDK that's being used to record the event.
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-polly/pom.xml b/aws-android-sdk-polly/pom.xml
index 9eedad3293..9391e22ac4 100644
--- a/aws-android-sdk-polly/pom.xml
+++ b/aws-android-sdk-polly/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-rekognition/pom.xml b/aws-android-sdk-rekognition/pom.xml
index 9c76463610..e14fc1d037 100644
--- a/aws-android-sdk-rekognition/pom.xml
+++ b/aws-android-sdk-rekognition/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/pom.xml b/aws-android-sdk-s3/pom.xml
index d70259932e..3d20164d6c 100644
--- a/aws-android-sdk-s3/pom.xml
+++ b/aws-android-sdk-s3/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-kms</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/DownloadTask.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/DownloadTask.java
index 356be25222..dbafc22e8b 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/DownloadTask.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/DownloadTask.java
@@ -16,6 +16,8 @@
 package com.amazonaws.mobileconnectors.s3.transferutility;
 
 import com.amazonaws.AmazonClientException;
+import com.amazonaws.event.ProgressEvent;
+import com.amazonaws.event.ProgressListener;
 import com.amazonaws.retry.RetryUtils;
 import com.amazonaws.services.s3.AmazonS3;
 import com.amazonaws.services.s3.model.GetObjectRequest;
@@ -78,21 +80,25 @@ public Boolean call() {
 
         updater.updateState(download.id, TransferState.IN_PROGRESS);
 
-        final GetObjectRequest getObjectRequest = new GetObjectRequest(download.bucketName, download.key);
-        TransferUtility.appendTransferServiceUserAgentString(getObjectRequest);
-        final File file = new File(download.file);
-        final long bytesCurrent = file.length();
-        if (bytesCurrent > 0) {
-            LOGGER.debug(String.format("Resume transfer %d from %d bytes", download.id, bytesCurrent));
-            /*
-             * Setting the last byte position to －1 means downloading the object from
-             * bytesCurrent to the end.
-             */
-            getObjectRequest.setRange(bytesCurrent, -1);
-        }
-        getObjectRequest.setGeneralProgressListener(updater.newProgressListener(download.id));
+        GetObjectRequest getObjectRequest;
+        ProgressListener progressListener = updater.newProgressListener(download.id);
 
         try {
+            getObjectRequest = new GetObjectRequest(download.bucketName, download.key);
+            TransferUtility.appendTransferServiceUserAgentString(getObjectRequest);
+            final File file = new File(download.file);
+            final long bytesCurrent = file.length();
+            if (bytesCurrent > 0) {
+                LOGGER.debug(String.format("Resume transfer %d from %d bytes", download.id, bytesCurrent));
+                /*
+                 * Setting the last byte position to －1 means downloading the object from
+                 * bytesCurrent to the end.
+                 */
+                getObjectRequest.setRange(bytesCurrent, -1);
+            }
+
+            getObjectRequest.setGeneralProgressListener(progressListener);
+
             final S3Object object = s3.getObject(getObjectRequest);
             if (object == null) {
                 updater.throwError(download.id, new IllegalStateException("AmazonS3.getObject returns null"));
@@ -101,38 +107,53 @@ public Boolean call() {
             }
 
             final long bytesTotal = object.getObjectMetadata().getInstanceLength();
-            updater.updateProgress(download.id, bytesCurrent, bytesTotal);
+            updater.updateProgress(download.id, bytesCurrent, bytesTotal, true);
             saveToFile(object.getObjectContent(), file);
-            updater.updateProgress(download.id, bytesTotal, bytesTotal);
+            updater.updateProgress(download.id, bytesTotal, bytesTotal, true);
             updater.updateState(download.id, TransferState.COMPLETED);
             return true;
         } catch (final Exception e) {
-            // Check if network is not connected, set the state to WAITING_FOR_NETWORK.
-            try {
-                if (TransferNetworkLossHandler.getInstance() != null && 
-                    !TransferNetworkLossHandler.getInstance().isNetworkConnected()) {
-                    LOGGER.info("Thread:[" + Thread.currentThread().getId() + "]: Network wasn't available.");
-                    /*
-                     * Network connection is being interrupted. Moving the TransferState to
-                     * WAITING_FOR_NETWORK till the network availability resumes.
-                     */
-                    updater.updateState(download.id, TransferState.WAITING_FOR_NETWORK);
-                    LOGGER.debug("Network Connection Interrupted: " + "Moving the TransferState to WAITING_FOR_NETWORK");
-                    return false;
-                }
-            } catch (TransferUtilityException transferUtilityException) {
-                LOGGER.error("TransferUtilityException: [" + transferUtilityException + "]");
+            // we dont need to update progress listener
+            if (TransferState.CANCELED.equals(download.state)) {
+                LOGGER.info("Transfer is " + download.state);
+                return false;
             }
 
-            // If the thread that is executing the transfer is interrupted
-            // because of a user initiated pause, do not throw exception or
-            // set the state to FAILED.
-            if (RetryUtils.isInterrupted(e) && 
-                TransferState.PAUSED.equals(download.state)) {
-                LOGGER.error("Download interrupted: " + e.getMessage());
+            // pause
+            if (TransferState.PAUSED.equals(download.state)) {
+                LOGGER.info("Transfer is " + download.state);
+                ProgressEvent resetEvent = new ProgressEvent(0);
+                resetEvent.setEventCode(ProgressEvent.RESET_EVENT_CODE);
+                progressListener.progressChanged(new ProgressEvent(0));
                 return false;
             }
 
+            // If the thread that is executing the transfer is interrupted
+            // because of a race condition in the network or OS.
+            // interrupted and if its due to network drop, reset progress and
+            // update state to WAITING_FOR_NETWORK.
+            if (RetryUtils.isInterrupted(e)) {
+                // Check if network is not connected, set the state to WAITING_FOR_NETWORK.
+                try {
+                    if (TransferNetworkLossHandler.getInstance() != null && 
+                        !TransferNetworkLossHandler.getInstance().isNetworkConnected()) {
+                        LOGGER.info("Thread:[" + Thread.currentThread().getId() + "]: Network wasn't available.");
+                        /*
+                         * Network connection is being interrupted. Moving the TransferState to
+                         * WAITING_FOR_NETWORK till the network availability resumes.
+                         */
+                        updater.updateState(download.id, TransferState.WAITING_FOR_NETWORK);
+                        LOGGER.debug("Network Connection Interrupted: " + "Moving the TransferState to WAITING_FOR_NETWORK");
+                        ProgressEvent resetEvent = new ProgressEvent(0);
+                        resetEvent.setEventCode(ProgressEvent.RESET_EVENT_CODE);
+                        progressListener.progressChanged(new ProgressEvent(0));
+                        return false;
+                    }
+                } catch (TransferUtilityException transferUtilityException) {
+                    LOGGER.error("TransferUtilityException: [" + transferUtilityException + "]");
+                }
+            }
+
             // In other cases, set the transfer state to FAILED.
             LOGGER.debug("Failed to download: " + download.id + " due to " + e.getMessage());
             updater.throwError(download.id, e);
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDBUtil.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDBUtil.java
index a6822779c7..a8ac6ff0d0 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDBUtil.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDBUtil.java
@@ -29,6 +29,8 @@
 import com.amazonaws.logging.Log;
 import com.amazonaws.logging.LogFactory;
 
+import com.google.gson.Gson;
+
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
@@ -49,6 +51,11 @@
      */
     private static TransferDBBase transferDBBase;
 
+    /**
+     * Gson object for serializing objects.
+     */
+    private Gson gson = new Gson();
+
     /**
      * Constructs a TransferDBUtil with the given Context.
      *
@@ -85,13 +92,15 @@ public void closeDB() {
      * @param uploadId The multipart upload id of the upload.
      * @param bytesTotal The Total bytes of the file.
      * @param isLastPart Whether this part is the last part of the upload.
+     * @param tuOptions Configuration for TransferUtility
      * @return An Uri of the record inserted.
      */
     public Uri insertMultipartUploadRecord(String bucket, String key, File file,
-            long fileOffset, int partNumber, String uploadId, long bytesTotal, int isLastPart) {
+            long fileOffset, int partNumber, String uploadId, long bytesTotal, int isLastPart,
+            TransferUtilityOptions tuOptions) {
         final ContentValues values = generateContentValuesForMultiPartUpload(bucket, key, file,
                 fileOffset, partNumber, uploadId, bytesTotal, isLastPart, new ObjectMetadata(),
-                null);
+                null, tuOptions);
         return transferDBBase.insert(transferDBBase.getContentUri(), values);
     }
 
@@ -104,11 +113,12 @@ public Uri insertMultipartUploadRecord(String bucket, String key, File file,
      *            object.
      * @param file The file to upload.
      * @param metadata The S3 Object metadata associated with this object
+     * @param tuOptions Configuration passed in TransferUtility
      * @return An Uri of the record inserted.
      */
     public Uri insertSingleTransferRecord(TransferType type, String bucket, String key, File file,
-            ObjectMetadata metadata) {
-        return insertSingleTransferRecord(type, bucket, key, file, metadata, null);
+            ObjectMetadata metadata, TransferUtilityOptions tuOptions) {
+        return insertSingleTransferRecord(type, bucket, key, file, metadata, null, tuOptions);
     }
 
     /**
@@ -121,12 +131,13 @@ public Uri insertSingleTransferRecord(TransferType type, String bucket, String k
      * @param file The file to upload.
      * @param metadata The S3 Object metadata associated with this object
      * @param cannedAcl The canned Acl of this S3 object
+     * @param tuOptions Configuration passed in TransferUtility
      * @return An Uri of the record inserted.
      */
     public Uri insertSingleTransferRecord(TransferType type, String bucket, String key, File file,
-            ObjectMetadata metadata, CannedAccessControlList cannedAcl) {
+            ObjectMetadata metadata, CannedAccessControlList cannedAcl, TransferUtilityOptions tuOptions) {
         final ContentValues values = generateContentValuesForSinglePartTransfer(type, bucket, key, file,
-                metadata, cannedAcl);
+                metadata, cannedAcl, tuOptions);
         return transferDBBase.insert(transferDBBase.getContentUri(), values);
     }
 
@@ -138,11 +149,13 @@ public Uri insertSingleTransferRecord(TransferType type, String bucket, String k
      * @param key The key in the specified bucket by which to store the new
      *            object.
      * @param file The file to upload.
+     * @param tuOptions Configuration passed in TransferUtility
      * @return An Uri of the record inserted.
      */
-    public Uri insertSingleTransferRecord(TransferType type, String bucket, String key, File file) {
+    public Uri insertSingleTransferRecord(TransferType type, String bucket, String key, File file,
+           TransferUtilityOptions tuOptions) {
         return insertSingleTransferRecord(type, bucket, key, file,
-                new ObjectMetadata());
+                new ObjectMetadata(), tuOptions);
     }
 
     /**
@@ -507,6 +520,35 @@ public long queryBytesTransferredByMainUploadId(int mainUploadId) {
         return bytesTotal;
     }
 
+    /**
+     * Queries the transfer record specified by main upload id.
+     *
+     * @param mainUploadId The mainUploadId of a multipart upload task
+     * @return The bytes already uploaded for this multipart upload task
+     */
+    public long queryBytesTransferredOfPartNum(int mainUploadId, int partNum) {
+        Cursor c = null;
+        long bytesCurrent = 0;
+        try {
+            c = transferDBBase.query(getPartUri(mainUploadId), null, null, null, null);
+            while (c.moveToNext()) {
+                final int partNumFromDb = c.getInt(c.getColumnIndexOrThrow(TransferTable.COLUMN_PART_NUM));
+                final String state = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_STATE));
+                if (partNumFromDb == partNum &&
+                    !TransferState.PART_COMPLETED.equals(TransferState.getState(state))) {
+                    bytesCurrent = c.getLong(c
+                            .getColumnIndexOrThrow(TransferTable.COLUMN_BYTES_CURRENT));
+                    break;
+                }
+            }
+        } finally {
+            if (c != null) {
+                c.close();
+            }
+        }
+        return bytesCurrent;
+    }
+
     /**
      * Deletes the record with the given id.
      *
@@ -662,12 +704,13 @@ private String createPlaceholders(int numPlaceHolders) {
      * @param isLastPart Whether this part is the last part of the upload.
      * @param metadata The S3 ObjectMetadata to send along with the object
      * @param cannedAcl The canned ACL associated with the object
+     * @param tuOptions Configuration for TransferUtility
      * @return The ContentValues object generated.
      */
     public ContentValues generateContentValuesForMultiPartUpload(String bucket,
             String key, File file, long fileOffset, int partNumber, String uploadId,
             long bytesTotal, int isLastPart, ObjectMetadata metadata,
-            CannedAccessControlList cannedAcl) {
+            CannedAccessControlList cannedAcl, TransferUtilityOptions tuOptions) {
         final ContentValues values = new ContentValues();
         values.put(TransferTable.COLUMN_TYPE, TransferType.UPLOAD.toString());
         values.put(TransferTable.COLUMN_STATE, TransferState.WAITING.toString());
@@ -686,6 +729,9 @@ public ContentValues generateContentValuesForMultiPartUpload(String bucket,
         if (cannedAcl != null) {
             values.put(TransferTable.COLUMN_CANNED_ACL, cannedAcl.toString());
         }
+        if (tuOptions != null) {
+            values.put(TransferTable.COLUMN_TRANSFER_UTILITY_OPTIONS, gson.toJson(tuOptions));
+        }
         return values;
     }
 
@@ -733,11 +779,12 @@ private ContentValues generateContentValuesForObjectMetadata(ObjectMetadata meta
      * @param file The file to upload.
      * @param metadata The S3 ObjectMetadata to send along with the object
      * @param cannedAcl The canned ACL associated with the object
+     * @param tuOptions Configuration passed in TransferUtility
      * @return The ContentValues object generated.
      */
     private ContentValues generateContentValuesForSinglePartTransfer(TransferType type,
             String bucket, String key, File file, ObjectMetadata metadata,
-            CannedAccessControlList cannedAcl) {
+            CannedAccessControlList cannedAcl, TransferUtilityOptions tuOptions) {
         final ContentValues values = new ContentValues();
         values.put(TransferTable.COLUMN_TYPE, type.toString());
         values.put(TransferTable.COLUMN_STATE, TransferState.WAITING.toString());
@@ -755,6 +802,9 @@ private ContentValues generateContentValuesForSinglePartTransfer(TransferType ty
         if (cannedAcl != null) {
             values.put(TransferTable.COLUMN_CANNED_ACL, cannedAcl.toString());
         }
+        if (tuOptions != null) {
+            values.put(TransferTable.COLUMN_TRANSFER_UTILITY_OPTIONS, gson.toJson(tuOptions));
+        }
         return values;
     }
 
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDatabaseHelper.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDatabaseHelper.java
index 1f93e0801a..727304854e 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDatabaseHelper.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferDatabaseHelper.java
@@ -22,7 +22,10 @@
 class TransferDatabaseHelper extends SQLiteOpenHelper {
 
     private static final String DATABASE_NAME = "awss3transfertable.db";
-    private static final int DATABASE_VERSION = 5;
+
+    // This represents the latest database version. Update this when
+    // the database is being upgraded.
+    private static final int DATABASE_VERSION = 6;
 
     private int version;
 
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkConnectionType.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkConnectionType.java
new file mode 100644
index 0000000000..8e475ed457
--- /dev/null
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkConnectionType.java
@@ -0,0 +1,98 @@
+/**
+ * Copyright 2019-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.mobileconnectors.s3.transferutility;
+
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import com.amazonaws.logging.Log;
+import com.amazonaws.logging.LogFactory;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Represents the type of connection a transfer is allowed to use
+ */
+public enum TransferNetworkConnectionType {
+    /**
+     * Any connection
+     */
+    ANY() {
+        @Override
+        protected boolean verify(NetworkInfo networkInfo) {
+            return networkInfo != null && networkInfo.isConnected();
+        }
+    },
+
+    /**
+     * Wifi only
+     */
+    WIFI() {
+        @Override
+        protected boolean verify(NetworkInfo networkInfo) {
+            return networkInfo != null && networkInfo.isConnected()
+                    && networkInfo.getType() == ConnectivityManager.TYPE_WIFI;
+        }
+    },
+
+    /**
+     * Mobile only
+     */
+    MOBILE() {
+        @Override
+        protected boolean verify(NetworkInfo networkInfo) {
+            return networkInfo != null && networkInfo.isConnected()
+                    && networkInfo.getType() == ConnectivityManager.TYPE_MOBILE;
+        }
+    };
+
+    private static final Map<String, TransferNetworkConnectionType> MAP;
+    static {
+        MAP = new HashMap<String, TransferNetworkConnectionType>();
+        for (final TransferNetworkConnectionType type : TransferNetworkConnectionType.values()) {
+            MAP.put(type.toString(), type);
+        }
+    }
+
+    private static final Log LOGGER = LogFactory.getLog(TransferNetworkConnectionType.class);
+
+    /**
+     * Gets the status of network connectivity.
+     *
+     * @return true if network is connected, false otherwise.
+     */
+    boolean isConnected(final ConnectivityManager connectivityManager) {
+        return verify(connectivityManager.getActiveNetworkInfo());
+    }
+
+    protected abstract boolean verify(final NetworkInfo networkInfo);
+
+    /**
+     * Returns the connection type from string
+     *
+     * @param typeAsString connection type of the transfer as string.
+     * @return the {@link TransferNetworkConnectionType}
+     */
+    public static TransferNetworkConnectionType getConnectionType(String typeAsString) {
+        if (MAP.containsKey(typeAsString)) {
+            return MAP.get(typeAsString);
+        }
+
+        LOGGER.error("Unknown connection type " + typeAsString
+                + " transfer will have connection type set to ANY.");
+        return ANY;
+    }
+}
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
index 09bbfbd196..ade69e60f0 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
@@ -44,7 +44,7 @@
     /**
      * An Android Networking utility that gives network specific information.
      */
-    private final ConnectivityManager connManager;
+    final ConnectivityManager connManager;
 
     /**
      * Reference to the transfer database utility.
@@ -119,10 +119,10 @@ public void onReceive(Context context, Intent intent) {
             new Thread(new Runnable() {
                 @Override
                 public void run() {
-                    if (networkConnected) {
-                        checkTransfersOnNetworkReconnect();
+                    if (isNetworkConnected()) {
+                        resumeAllTransfersOnNetworkAvailability();
                     } else {
-                        pauseAllForNetwork();
+                        pauseAllTransfersDueToNetworkInterruption();
                     }
                 }
             }).start();
@@ -142,16 +142,7 @@ boolean isNetworkConnected() {
     /**
      * Check for the transfers that are in WAITING_FOR_NETWORK state and resume them
      * to execution.
-     */
-    private void checkTransfersOnNetworkReconnect() {
-        if (isNetworkConnected()) {
-            loadAndResumeTransfersFromDB(new TransferState[] {TransferState.WAITING_FOR_NETWORK});
-        } else {
-            LOGGER.error("Network Connect message received but not connected to network.");
-        }
-    }
-
-    /**
+     *
      * Loads transfers from database. These transfers are unfinished from previous
      * session or are new transfers waiting for network. It skips any transfer that
      * is already tracked by the status updater. Also starts transfers whose states
@@ -160,10 +151,12 @@ private void checkTransfersOnNetworkReconnect() {
      * The transfers would start only if the AmazonS3Client is present in the
      * {@code S3ClientReference} map. If the AmazonS3Client is not present, this
      * would skip starting the transfer.
-     *
-     * @param transferStates The list of the transfer states
      */
-    private synchronized void loadAndResumeTransfersFromDB(final TransferState[] transferStates) {
+    private synchronized void resumeAllTransfersOnNetworkAvailability() {
+        final TransferState[] transferStates = new TransferState[] {
+            TransferState.WAITING_FOR_NETWORK
+        };
+
         LOGGER.debug("Loading transfers from database...");
         Cursor c = null;
         int count = 0;
@@ -188,7 +181,7 @@ private synchronized void loadAndResumeTransfersFromDB(final TransferState[] tra
             }
         } finally {
             if (c != null) {
-                LOGGER.debug("Closing the cursor for loadAndResumeTransfersFromDB");
+                LOGGER.debug("Closing the cursor for resumeAllTransfers");
                 c.close();
             }
         }
@@ -201,7 +194,7 @@ private synchronized void loadAndResumeTransfersFromDB(final TransferState[] tra
                     // Check if it's running. If not, start the transfer.
                     final TransferRecord transfer = updater.getTransfer(id);
                     if (transfer != null && !transfer.isRunning()) {
-                        transfer.start(s3, dbUtil, updater);
+                        transfer.start(s3, dbUtil, updater, connManager);
                     }
                 }
             }
@@ -215,10 +208,12 @@ private synchronized void loadAndResumeTransfersFromDB(final TransferState[] tra
     /**
      * Pause all running transfers and set the state to WAITING_FOR_NETWORK.
      */
-    private void pauseAllForNetwork() {
+    private synchronized void pauseAllTransfersDueToNetworkInterruption() {
         for (final TransferRecord transferRecord : updater.getTransfers().values()) {
             final AmazonS3 s3 = S3ClientReference.get(transferRecord.id);
-            if (s3 != null && transferRecord != null && transferRecord.pause(s3, updater)) {
+            if (s3 != null && 
+                transferRecord != null && 
+                transferRecord.pauseIfRequiredForNetworkInterruption(s3, updater, connManager)) {
                 updater.updateState(transferRecord.id, TransferState.WAITING_FOR_NETWORK);
             }
         }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferRecord.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferRecord.java
index 6c971b3664..2791e7ef76 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferRecord.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferRecord.java
@@ -16,6 +16,7 @@
 package com.amazonaws.mobileconnectors.s3.transferutility;
 
 import android.database.Cursor;
+import android.net.ConnectivityManager;
 
 import com.amazonaws.AmazonClientException;
 import com.amazonaws.services.s3.AmazonS3;
@@ -25,6 +26,8 @@
 import com.amazonaws.logging.Log;
 import com.amazonaws.logging.LogFactory;
 
+import com.google.gson.Gson;
+
 import java.io.File;
 import java.util.Map;
 import java.util.concurrent.ExecutionException;
@@ -81,8 +84,12 @@
     public String md5;
     public String cannedAcl;
 
+    public TransferUtilityOptions transferUtilityOptions;
+
     private Future<?> submittedTask;
 
+    private Gson gson = new Gson();
+
     /**
      * Constructs a TransferRecord and initializes the transfer id and S3
      * client.
@@ -149,21 +156,29 @@ public void updateFromDB(Cursor c) {
         this.cannedAcl = c.getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_CANNED_ACL));
         this.headerStorageClass = c
                 .getString(c.getColumnIndexOrThrow(TransferTable.COLUMN_HEADER_STORAGE_CLASS));
+        this.transferUtilityOptions = gson.fromJson(c.getString(c
+                .getColumnIndexOrThrow(TransferTable.COLUMN_TRANSFER_UTILITY_OPTIONS)), TransferUtilityOptions.class);
     }
 
     /**
-     * Checks the state of the transfer and starts a thread to run the transfer
-     * task if possible.
+     * Start a new transfer when 
+     * 1) there is no existing transfer for the same transfer record
+     * 2) the transfer is not completed
+     * 3) the preferred network is available
      *
      * @param s3 s3 instance
      * @param dbUtil database util
      * @param updater status updater
+     * @param connManager the android network connectivity manager
      * @return Whether the task is running.
      */
-    public boolean start(AmazonS3 s3,
-                         TransferDBUtil dbUtil,
-                         TransferStatusUpdater updater) {
-        if (!isRunning() && checkIsReadyToRun()) {
+    public boolean start(final AmazonS3 s3, 
+                         final TransferDBUtil dbUtil, 
+                         final TransferStatusUpdater updater,
+                         final ConnectivityManager connManager) {
+        if (!isRunning() && 
+            checkIsReadyToRun() && 
+            checkPreferredNetworkAvailability(updater, connManager)) {
             if (type.equals(TransferType.DOWNLOAD)) {
                 submittedTask = TransferThreadPool
                         .submitTask(new DownloadTask(this, s3, updater));
@@ -184,8 +199,10 @@ public boolean start(AmazonS3 s3,
      * @return true if the transfer is running and is paused successfully, false
      *         otherwise
      */
-    public boolean pause(AmazonS3 s3, TransferStatusUpdater updater) {
-        if (!isFinalState(state) && !TransferState.PAUSED.equals(state)) {
+    public boolean pause(final AmazonS3 s3, 
+                         final TransferStatusUpdater updater) {
+        if (!isFinalState(state) && 
+            !TransferState.PAUSED.equals(state)) {
             updater.updateState(id, TransferState.PAUSED);
             if (isRunning()) {
                 submittedTask.cancel(true);
@@ -195,6 +212,32 @@ public boolean pause(AmazonS3 s3, TransferStatusUpdater updater) {
         return false;
     }
 
+    /**
+     * Pauses a running transfer if the preferred network is not available.
+     *
+     * @param s3 s3 instance
+     * @param updater status updater
+     * @param connManager the android network connectivity manager
+     * @return true if the transfer is running and is paused successfully, false
+     *         otherwise
+     */
+    boolean pauseIfRequiredForNetworkInterruption(final AmazonS3 s3, 
+                                final TransferStatusUpdater updater,
+                                final ConnectivityManager connManager) {
+        // Check if the transfer needs to be paused 
+        if (!checkPreferredNetworkAvailability(updater, connManager)) {
+            // the preferred network is not available. pause the transfer.
+            if (!isFinalState(state)) {
+                if (isRunning()) {
+                    submittedTask.cancel(true);
+                }
+                return true;
+            }
+            return false;
+        }
+        return false;
+    }
+
     /**
      * Cancels a running transfer.
      * 
@@ -203,20 +246,27 @@ public boolean pause(AmazonS3 s3, TransferStatusUpdater updater) {
      * @return true if the transfer is running and is canceled successfully,
      *         false otherwise
      */
-    public boolean cancel(final AmazonS3 s3, final TransferStatusUpdater updater) {
+    public boolean cancel(final AmazonS3 s3, 
+                          final TransferStatusUpdater updater) {
         if (!isFinalState(state)) {
+            // Update the state to CANCELED in the TransferStatusUpdater and
+            // TransferDBUtil and involes the onStateChanged callback.
             updater.updateState(id, TransferState.CANCELED);
             if (isRunning()) {
                 submittedTask.cancel(true);
             }
-            // additional cleanups
-            if (isMultipart == 1) {
+            // additional cleanup
+            if (TransferType.UPLOAD.equals(type) &&
+                isMultipart == 1) {
                 new Thread(new Runnable() {
                     @Override
                     public void run() {
                         try {
-                            s3.abortMultipartUpload(new AbortMultipartUploadRequest(bucketName,
-                                    key, multipartId));
+                            // abort the multi part upload operation
+                            s3.abortMultipartUpload(
+                                new AbortMultipartUploadRequest(bucketName, 
+                                    key, 
+                                    multipartId));
                             LOGGER.debug("Successfully clean up multipart upload: " + id);
                         } catch (final AmazonClientException e) {
                             LOGGER.debug("Failed to abort multiplart upload: " + id, e);
@@ -224,7 +274,7 @@ public void run() {
                     }
                 }).start();
             } else if (TransferType.DOWNLOAD.equals(type)) {
-                // remove partially download file
+                // remove the partially download file
                 new File(file).delete();
             }
             return true;
@@ -242,7 +292,7 @@ boolean isRunning() {
     }
 
     /**
-     * Wait till transfer finishes.
+     * Wait till transfer finishes. This method is used for testing purposes.
      *
      * @param timeout the maximum time to wait in milliseconds
      * @throws InterruptedException
@@ -292,7 +342,38 @@ public String toString() {
                 .append("eTag:").append(eTag).append(",")
                 .append("storageClass:").append(headerStorageClass).append(",")
                 .append("userMetadata:").append(userMetadata.toString()).append(",")
+                .append("transferUtilityOptions:").append(gson.toJson(transferUtilityOptions))
                 .append("]");
         return sb.toString();
     }
+
+    /**
+     * Checks if the preferred network is available. Updates state to WAITING_FOR_NETWORK if
+     * the preferred network is not available
+     *
+     * @param updater the transfer status updater object
+     * @param connManager the android connectivity manager
+     * @return true if the preferred network is available, false otherwise.
+     */
+    private boolean checkPreferredNetworkAvailability(final TransferStatusUpdater updater,
+                                                      final ConnectivityManager connManager) {
+
+        if (connManager == null) { 
+            // Unable to get the details of the network, we will start the transfer.
+            return true;
+        }
+            
+        if (transferUtilityOptions != null &&
+            !transferUtilityOptions.getTransferNetworkConnectionType().isConnected(connManager)) {
+            // the network that is configured in the TransferUtilityOptions is not available.
+            // we will set the state to WAITING_FOR_NETWORK. The transfer will be started
+            // when a future notification is received for the desired network.
+            LOGGER.info("Network Connection " + transferUtilityOptions.getTransferNetworkConnectionType() + " is not available.");
+            updater.updateState(id, TransferState.WAITING_FOR_NETWORK);
+            return false;
+        }
+        // Either TransferUtilityOptions was not set (in case of an upgrade)
+        // or the preferred network is available. Start the transfer.
+        return true;
+    }
 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
index ad727ecd13..1bd5f60be8 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
@@ -44,13 +44,9 @@
      */
     private static final HashSet<TransferState> STATES_NOT_TO_NOTIFY = new HashSet<TransferState>(
             Arrays.asList(TransferState.PART_COMPLETED,
-                    TransferState.PENDING_CANCEL, TransferState.PENDING_PAUSE,
+                    TransferState.PENDING_CANCEL,
+                    TransferState.PENDING_PAUSE,
                     TransferState.PENDING_NETWORK_DISCONNECT));
-    /**
-     * The threshold to update progress in milliseconds to prevent triggering
-     * listeners too often.
-     */
-    private static final int UPDATE_THRESHOLD_MS = 1000;
 
     /**
      * A map of listeners.
@@ -61,15 +57,12 @@
      * A map of active transfers.
      */
     private final Map<Integer, TransferRecord> transfers;
-    /**
-     * A map of transfer to its last update time to prevent events from being
-     * fired too often.
-     */
-    private final Map<Integer, Long> lastUpdateTime;
+
     /**
      * Database util to update transfer status.
      */
     private static TransferDBUtil dbUtil;
+    
     /**
      * The handler of main thread that runs callbacks.
      */
@@ -89,7 +82,6 @@
         dbUtil = dbUtilInstance;
         mainHandler = new Handler(Looper.getMainLooper());
         transfers = new HashMap<Integer, TransferRecord>();
-        lastUpdateTime = new HashMap<Integer, Long>();
     }
 
     /**
@@ -140,9 +132,10 @@ synchronized TransferRecord getTransfer(int id) {
      * @param id id of the transfer to remove
      */
     synchronized void removeTransfer(int id) {
+        synchronized (LISTENERS) {
+            LISTENERS.remove(id);
+        }
         transfers.remove(id);
-        LISTENERS.remove(id);
-        lastUpdateTime.remove(id);
     }
     
     /**
@@ -198,27 +191,29 @@ synchronized void updateState(final int id, final TransferState newState) {
             removeTransferRecordFromDB(id);
         }
 
-        final List<TransferListener> list = LISTENERS.get(id);
-        if (list == null || list.isEmpty()) {
-            return;
-        }
+        synchronized (LISTENERS) {
+            final List<TransferListener> list = LISTENERS.get(id);
+            if (list == null || list.isEmpty()) {
+                return;
+            }
 
-        // invoke TransferListener callback on main thread
-        for (final TransferListener l : list) {
-            mainHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    l.onStateChanged(id, newState);
-                }
-            });
-        }
+            // invoke TransferListener callback on main thread
+            for (final TransferListener l : list) {
+                mainHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        l.onStateChanged(id, newState);
+                    }
+                });
+            }
 
-        // remove all LISTENERS when the transfer is in a final state so
-        // as to release resources ASAP.
-        if (TransferState.COMPLETED.equals(newState) ||
-            TransferState.FAILED.equals(newState) ||
-            TransferState.CANCELED.equals(newState)) {
-            list.clear();
+            // remove all LISTENERS when the transfer is in a final state so
+            // as to release resources ASAP.
+            if (TransferState.COMPLETED.equals(newState) ||
+                TransferState.FAILED.equals(newState) ||
+                TransferState.CANCELED.equals(newState)) {
+                list.clear();
+            }
         }
     }
 
@@ -231,31 +226,31 @@ public void run() {
      * @param bytesCurrent current transferred bytes
      * @param bytesTotal total bytes
      */
-    synchronized void updateProgress(final int id, final long bytesCurrent, final long bytesTotal) {
+    synchronized void updateProgress(final int id, 
+        final long bytesCurrent, 
+        final long bytesTotal, 
+        final boolean notifyListener) {
+
         final TransferRecord transfer = transfers.get(id);
         if (transfer != null) {
             transfer.bytesCurrent = bytesCurrent;
             transfer.bytesTotal = bytesTotal;
         }
 
-        // Don't fire off the update too frequently, but still fire when it
-        // comes to the last byte.
-        final long timeInMillis = System.currentTimeMillis();
-
         // update bytes transferred so that the transfer observer may pick it
         // up.
         dbUtil.updateBytesTransferred(id, bytesCurrent);
 
-        // invoke LISTENERS
-        final List<TransferListener> list = LISTENERS.get(id);
-        if (list == null || list.isEmpty()) {
+        if (!notifyListener) {
             return;
         }
 
-        if (!lastUpdateTime.containsKey(id) ||
-            timeInMillis - lastUpdateTime.get(id) > UPDATE_THRESHOLD_MS ||
-            bytesCurrent == bytesTotal) {
-            lastUpdateTime.put(id, timeInMillis);
+        // invoke LISTENERS
+        synchronized (LISTENERS) {
+            final List<TransferListener> list = LISTENERS.get(id);
+            if (list == null || list.isEmpty()) {
+                return;
+            }
 
             for (final TransferListener l : list) {
                 // invoke on main thread
@@ -278,19 +273,21 @@ public void run() {
      */
     void throwError(final int id, final Exception e) {
         // invoke LISTENERS
-        final List<TransferListener> list = LISTENERS.get(id);
-        if (list == null || list.isEmpty()) {
-            return;
-        }
+        synchronized (LISTENERS) {
+            final List<TransferListener> list = LISTENERS.get(id);
+            if (list == null || list.isEmpty()) {
+                return;
+            }
 
-        for (final TransferListener l : list) {
-            // invoke on main thread
-            mainHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    l.onError(id, e);
-                }
-            });
+            for (final TransferListener l : list) {
+                // invoke on main thread
+                mainHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        l.onError(id, e);
+                    }
+                });
+            }
         }
     }
 
@@ -298,9 +295,10 @@ public void run() {
      * Clears all transfers, LISTENERS, etc.
      */
     synchronized void clear() {
-        LISTENERS.clear();
+        synchronized (LISTENERS) {
+            LISTENERS.clear();
+        }
         transfers.clear();
-        lastUpdateTime.clear();
     }
 
     /**
@@ -353,12 +351,12 @@ static void unregisterListener(int id, TransferListener listener) {
     private class TransferProgressListener implements ProgressListener {
 
         private final TransferRecord transfer;
+        
         /*
-         * Current transfer progress per task. In a multipart upload, this value
-         * is per upload part task. The purpose is to reset the progress upon a
+         * Current transfer progress per task. The purpose is to reset the progress upon a
          * reset event.
          */
-        private long bytesCurrent;
+        private long bytesTransferredSoFar;
 
         public TransferProgressListener(TransferRecord transfer) {
             this.transfer = transfer;
@@ -366,16 +364,21 @@ public TransferProgressListener(TransferRecord transfer) {
 
         @Override
         public synchronized void progressChanged(ProgressEvent progressEvent) {
-            if (progressEvent.getEventCode() == ProgressEvent.RESET_EVENT_CODE) {
-                // Reset will discard what's been transferred, so subtract the
-                // bytes transferred in this task from the total progress.
-                transfer.bytesCurrent -= bytesCurrent;
-                bytesCurrent = 0;
+            if (ProgressEvent.RESET_EVENT_CODE == progressEvent.getEventCode()) {
+                // Reset will discard what's been transferred
+                LOGGER.info("Reset Event triggerred. Resetting the bytesCurrent to 0.");
+                // Reset the local counter to 0.
+                bytesTransferredSoFar = 0;
             } else {
-                bytesCurrent += progressEvent.getBytesTransferred();
-                transfer.bytesCurrent += progressEvent.getBytesTransferred();
+                bytesTransferredSoFar += progressEvent.getBytesTransferred();
+                // Update the transfer.bytesCurrent and notify the callback
+                // when the accumulated bytesCurrent exceeds the previously
+                // reported transfer.bytesCurrent.
+                if (bytesTransferredSoFar > transfer.bytesCurrent) {
+                    transfer.bytesCurrent = bytesTransferredSoFar;
+                    updateProgress(transfer.id, transfer.bytesCurrent, transfer.bytesTotal, true);
+                }
             }
-            updateProgress(transfer.id, transfer.bytesCurrent, transfer.bytesTotal);
         }
     }
 
@@ -383,15 +386,19 @@ public synchronized void progressChanged(ProgressEvent progressEvent) {
      * Creates a {@link ProgressListener} for the given transfer with current
      * transferred bytes and total bytes.
      *
+     * The GetObjectRequest, PutObjectRequest, UploadPartRequest objects can have 
+     * a ProgressListener which will be invoked when there is a progress update.
+     *
      * @param id id of the transfer
      * @return a progress listener
      */
     synchronized ProgressListener newProgressListener(int id) {
         final TransferRecord transfer = getTransfer(id);
         if (transfer == null) {
+            LOGGER.info("TransferStatusUpdater doesn't track the transfer: " + id);
             throw new IllegalArgumentException("transfer " + id + " doesn't exist");
         }
+        LOGGER.info("Creating a new progress listener for transfer: " + id);
         return new TransferProgressListener(transfer);
     }
 }
-
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferTable.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferTable.java
index 077b641358..6c5c6d58a1 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferTable.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferTable.java
@@ -201,6 +201,11 @@
      */
     public static final String COLUMN_CANNED_ACL = "canned_acl";
 
+    /**
+     * The allowed connection types a transfer can use.
+     */
+    public static final String COLUMN_TRANSFER_UTILITY_OPTIONS = "transfer_utility_options";
+
     /*
      * Database creation SQL statement
      */
@@ -250,6 +255,7 @@ public static void onCreate(SQLiteDatabase database, int version) {
     private static final int TABLE_VERSION_3 = 3;
     private static final int TABLE_VERSION_4 = 4;
     private static final int TABLE_VERSION_5 = 5;
+    private static final int TABLE_VERSION_6 = 6;
 
     /**
      * Upgrades the database.
@@ -273,6 +279,9 @@ public static void onUpgrade(SQLiteDatabase database, int oldVersion,
         if (oldVersion < TABLE_VERSION_5 && newVersion >= TABLE_VERSION_5) {
             addVersion5Columns(database);
         }
+        if (oldVersion < TABLE_VERSION_6 && newVersion >= TABLE_VERSION_6) {
+            addVersion6Columns(database);
+        }
     }
 
     /**
@@ -322,4 +331,13 @@ private static void addVersion5Columns(SQLiteDatabase database) {
                 " ADD COLUMN " + COLUMN_HEADER_STORAGE_CLASS + " text;";
         database.execSQL(addStorageClass);
     }
+
+    /**
+     * Adds columns that were introduced in version 6 to the database
+     */
+    private static void addVersion6Columns(SQLiteDatabase database) {
+        final String addConnectionType = "ALTER TABLE " + TABLE_TRANSFER +
+                " ADD COLUMN " + COLUMN_TRANSFER_UTILITY_OPTIONS + " text;";
+        database.execSQL(addConnectionType);
+    }
 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
index b98c96a38f..e05f29371b 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
@@ -21,6 +21,7 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
+import android.net.ConnectivityManager;
 import android.net.Uri;
 import org.json.JSONObject;
 
@@ -117,6 +118,11 @@
      */
     private static final Object LOCK = new Object();
 
+    /**
+     * An Android Networking utility that gives network specific information.
+     */
+    final ConnectivityManager connManager;
+
     /**
      * Constants that indicate the type of the transfer operation.
      */
@@ -298,6 +304,7 @@ private TransferUtility(AmazonS3 s3, Context context, String defaultBucket, Tran
         this.dbUtil = new TransferDBUtil(context.getApplicationContext());
         this.updater = TransferStatusUpdater.getInstance(context.getApplicationContext());
         TransferThreadPool.init(this.transferUtilityOptions.getTransferThreadPoolSize());
+        this.connManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
     }
 
     /**
@@ -318,6 +325,7 @@ public TransferUtility(AmazonS3 s3, Context context) {
         this.dbUtil = new TransferDBUtil(context.getApplicationContext());
         this.updater = TransferStatusUpdater.getInstance(context.getApplicationContext());
         TransferThreadPool.init(this.transferUtilityOptions.getTransferThreadPoolSize());
+        this.connManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
     }
 
     private String getDefaultBucketOrThrow() {
@@ -374,7 +382,7 @@ public TransferObserver download(String bucket, String key, File file, TransferL
         if (file == null || file.isDirectory()) {
             throw new IllegalArgumentException("Invalid file: " + file);
         }
-        final Uri uri = dbUtil.insertSingleTransferRecord(TransferType.DOWNLOAD, bucket, key, file);
+        final Uri uri = dbUtil.insertSingleTransferRecord(TransferType.DOWNLOAD, bucket, key, file, transferUtilityOptions);
         final int recordId = Integer.parseInt(uri.getLastPathSegment());
         if (file.isFile()) {
             LOGGER.warn("Overwrite existing file: " + file);
@@ -539,7 +547,7 @@ public TransferObserver upload(String bucket, String key, File file, ObjectMetad
         } else {
 
             final Uri uri = dbUtil.insertSingleTransferRecord(TransferType.UPLOAD, bucket, key, file, metadata,
-                    cannedAcl);
+                    cannedAcl, transferUtilityOptions);
             recordId = Integer.parseInt(uri.getLastPathSegment());
         }
 
@@ -717,11 +725,11 @@ private int createMultipartUploadRecords(String bucket, String key, File file, O
          */
         final ContentValues[] valuesArray = new ContentValues[partCount + 1];
         valuesArray[0] = dbUtil.generateContentValuesForMultiPartUpload(bucket, key, file, fileOffset, 0, "",
-                file.length(), 0, metadata, cannedAcl);
+                file.length(), 0, metadata, cannedAcl, transferUtilityOptions);
         for (int i = 1; i < partCount + 1; i++) {
             final long bytesForPart = Math.min(optimalPartSize, remainingLenth);
             valuesArray[i] = dbUtil.generateContentValuesForMultiPartUpload(bucket, key, file, fileOffset, partNumber,
-                    "", bytesForPart, remainingLenth - optimalPartSize <= 0 ? 1 : 0, metadata, cannedAcl);
+                    "", bytesForPart, remainingLenth - optimalPartSize <= 0 ? 1 : 0, metadata, cannedAcl, transferUtilityOptions);
             fileOffset += optimalPartSize;
             remainingLenth -= optimalPartSize;
             partNumber++;
@@ -881,7 +889,7 @@ private synchronized void submitTransferJob(String action, int id) {
         }
 
         if (TRANSFER_ADD.equals(action) || TRANSFER_RESUME.equals(action)) {
-            transfer.start(s3, dbUtil, updater);
+            transfer.start(s3, dbUtil, updater, connManager);
         } else if (TRANSFER_PAUSE.equals(action)) {
             transfer.pause(s3, updater);
         } else if (TRANSFER_CANCEL.equals(action)) {
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtilityOptions.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtilityOptions.java
index 52563da4af..22edc38fae 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtilityOptions.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtilityOptions.java
@@ -25,7 +25,6 @@
  * Create TransferUtilityOptions and pass it to {@link TransferUtility}.
  * 
  * TransferUtilityOptions tuOptions = new TransferUtilityOptions();
- * tuOptions.setTransferServiceCheckTimeInterval(5 * 60 * 1000); // Scan for unfinished transfers every 5 minutes.
  * tuOptions.setTransferThreadPoolSize(10); // 10 threads for upload and download operations.
  *
  * // Initializes TransferUtility
@@ -33,7 +32,7 @@
  *     .builder()
  *     .s3Client(s3Client)
  *     .context(getApplicationContext())
- *     .transferUtilityConfiguration(tuConfig)
+ *     .transferUtilityConfiguration(tuOptions)
  *     .build();
  * </pre>
  *
@@ -64,6 +63,11 @@
      * Number of threads in the pool for the all the transfers.
      */
     private int transferThreadPoolSize;
+
+    /**
+     * Type of connection to use for transfers.
+     */
+    private TransferNetworkConnectionType transferNetworkConnectionType;
     
     /**
      * Constructor that sets the options to the
@@ -73,6 +77,22 @@ public TransferUtilityOptions() {
         super();
         this.transferServiceCheckTimeInterval = getDefaultCheckTimeInterval();
         this.transferThreadPoolSize = getDefaultThreadPoolSize();
+        this.transferNetworkConnectionType = getDefaultTransferNetworkConnectionType();
+    }
+
+    /**
+     * Constructor that sets the options to the
+     * default values.
+     *
+     * @param transferThreadPoolSize number of threads in the pool
+     * @param transferNetworkConnectionType type of network connection
+     */
+    public TransferUtilityOptions(int transferThreadPoolSize, 
+                                  TransferNetworkConnectionType transferNetworkConnectionType) {
+        super();
+        this.transferServiceCheckTimeInterval = getDefaultCheckTimeInterval();
+        this.transferThreadPoolSize = transferThreadPoolSize;
+        this.transferNetworkConnectionType = transferNetworkConnectionType;
     }
 
     /**
@@ -123,7 +143,16 @@ public void setTransferThreadPoolSize(final int transferThreadPoolSize) {
             this.transferThreadPoolSize = transferThreadPoolSize;
         }
     }
-    
+
+    /**
+     * Retrieve the transfer connection type.
+     *
+     * @return the TransferNetworkConnectionType
+     */
+    public TransferNetworkConnectionType getTransferNetworkConnectionType() {
+        return transferNetworkConnectionType;
+    }
+
     /**
      * Return the default thread pool size.
      * 
@@ -145,4 +174,13 @@ static int getDefaultThreadPoolSize() {
     static long getDefaultCheckTimeInterval() {
         return 1 * MILLIS_IN_MINUTE;
     }
+
+    /**
+     * Return the default connection type.
+     *
+     * @return The default connection type.
+     */
+    static TransferNetworkConnectionType getDefaultTransferNetworkConnectionType() {
+        return TransferNetworkConnectionType.ANY;
+    }
 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadPartTask.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadPartTask.java
index 92992218dc..b9e955037a 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadPartTask.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadPartTask.java
@@ -16,7 +16,8 @@
 package com.amazonaws.mobileconnectors.s3.transferutility;
 
 
-import com.amazonaws.retry.RetryUtils;
+import com.amazonaws.event.ProgressEvent;
+import com.amazonaws.event.ProgressListener;
 import com.amazonaws.services.s3.AmazonS3;
 import com.amazonaws.services.s3.model.UploadPartRequest;
 import com.amazonaws.services.s3.model.UploadPartResult;
@@ -30,14 +31,20 @@
     private static final Log LOGGER = LogFactory.getLog(UploadPartTask.class);
 
 
-    private final UploadPartRequest request;
+    private final UploadTask.UploadPartTaskMetadata uploadPartTaskMetadata;
+    private final UploadTask.UploadTaskProgressListener uploadTaskProgressListener;
+    private final UploadPartRequest uploadPartRequest;
     private final AmazonS3 s3;
     private final TransferDBUtil dbUtil;
 
-    public UploadPartTask(UploadPartRequest request,
+    public UploadPartTask(UploadTask.UploadPartTaskMetadata uploadPartTaskMetadata,
+                          UploadTask.UploadTaskProgressListener uploadTaskProgressListener,
+                          UploadPartRequest uploadPartRequest,
                           AmazonS3 s3,
                           TransferDBUtil dbUtil) {
-        this.request = request;
+        this.uploadPartTaskMetadata = uploadPartTaskMetadata;
+        this.uploadTaskProgressListener = uploadTaskProgressListener;
+        this.uploadPartRequest = uploadPartRequest;
         this.s3 = s3;
         this.dbUtil = dbUtil;
     }
@@ -48,11 +55,19 @@ public UploadPartTask(UploadPartRequest request,
     @Override
     public Boolean call() throws Exception {
         try {
-            final UploadPartResult putPartResult = s3.uploadPart(request);
-            dbUtil.updateState(request.getId(), TransferState.PART_COMPLETED);
-            dbUtil.updateETag(request.getId(), putPartResult.getETag());
+            uploadPartTaskMetadata.state = TransferState.IN_PROGRESS;
+            uploadPartRequest.setGeneralProgressListener(new UploadPartTaskProgressListener(uploadTaskProgressListener));
+            final UploadPartResult putPartResult = s3.uploadPart(uploadPartRequest);
+            uploadPartTaskMetadata.state = TransferState.PART_COMPLETED;
+            dbUtil.updateState(uploadPartRequest.getId(), TransferState.PART_COMPLETED);
+            dbUtil.updateETag(uploadPartRequest.getId(), putPartResult.getETag());
             return true;
         } catch (final Exception e) {
+            LOGGER.error("Upload part interrupted: " + e);
+            ProgressEvent resetEvent = new ProgressEvent(0);
+            resetEvent.setEventCode(ProgressEvent.RESET_EVENT_CODE);
+            uploadTaskProgressListener.progressChanged(new ProgressEvent(0));
+
             // Check if network is not connected, set the state to WAITING_FOR_NETWORK.
             try {
                 if (TransferNetworkLossHandler.getInstance() != null &&
@@ -62,8 +77,9 @@ public Boolean call() throws Exception {
                      * Network connection is being interrupted. Moving the TransferState
                      * to WAITING_FOR_NETWORK till the network availability resumes.
                      */
-                    dbUtil.updateState(request.getId(), TransferState.WAITING_FOR_NETWORK);
-                    LOGGER.debug("Network Connection Interrupted: " +
+                    uploadPartTaskMetadata.state = TransferState.WAITING_FOR_NETWORK;
+                    dbUtil.updateState(uploadPartRequest.getId(), TransferState.WAITING_FOR_NETWORK);
+                    LOGGER.info("Network Connection Interrupted: " +
                             "Moving the TransferState to WAITING_FOR_NETWORK");
                     return false;
                 }
@@ -71,18 +87,40 @@ public Boolean call() throws Exception {
                 LOGGER.error("TransferUtilityException: [" + transferUtilityException + "]");
             }
 
-            // If the thread that is executing the transfer is interrupted
-            // because of a user initiated pause, do not throw exception or
-            // set the state to FAILED.
-            if (RetryUtils.isInterrupted(e)) {
-                LOGGER.error("Upload part interrupted: " + e.getMessage());
-                return false;
-            }
-
             // In other cases, set the transfer state to FAILED.
-            dbUtil.updateState(request.getId(), TransferState.FAILED);
+            uploadPartTaskMetadata.state = TransferState.FAILED;
+            dbUtil.updateState(uploadPartRequest.getId(), TransferState.FAILED);
             LOGGER.error("Encountered error uploading part ", e);
             throw e;
         }
     }
+
+    /**
+     * Progress Listener for a part
+     */
+    private class UploadPartTaskProgressListener implements ProgressListener {
+
+        private UploadTask.UploadTaskProgressListener uploadTaskProgressListener;
+
+        private long bytesTransferredSoFar;
+
+        public UploadPartTaskProgressListener(UploadTask.UploadTaskProgressListener progressListener) {
+            this.uploadTaskProgressListener = progressListener;
+        }
+
+        @Override
+        public void progressChanged(ProgressEvent progressEvent) {
+            if (ProgressEvent.RESET_EVENT_CODE == progressEvent.getEventCode()) {
+                // Reset will discard what's been transferred
+                LOGGER.info("Reset Event triggerred. Resetting the bytesCurrent to 0.");
+                // Reset the local counter to 0.
+                bytesTransferredSoFar = 0;
+            } else {
+                bytesTransferredSoFar += progressEvent.getBytesTransferred();          
+            }
+            this.uploadTaskProgressListener
+                    .onProgressChanged(UploadPartTask.this.uploadPartRequest.getPartNumber(), 
+                        bytesTransferredSoFar);
+        }
+    }
 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadTask.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadTask.java
index 355061ef73..92bab7c205 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadTask.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/UploadTask.java
@@ -16,6 +16,8 @@
 package com.amazonaws.mobileconnectors.s3.transferutility;
 
 import com.amazonaws.AmazonClientException;
+import com.amazonaws.event.ProgressEvent;
+import com.amazonaws.event.ProgressListener;
 import com.amazonaws.retry.RetryUtils;
 import com.amazonaws.services.s3.AmazonS3;
 import com.amazonaws.services.s3.Headers;
@@ -26,6 +28,7 @@
 import com.amazonaws.services.s3.model.ObjectTagging;
 import com.amazonaws.services.s3.model.PartETag;
 import com.amazonaws.services.s3.model.PutObjectRequest;
+import com.amazonaws.services.s3.model.PutObjectResult;
 import com.amazonaws.services.s3.model.SSEAwsKeyManagementParams;
 import com.amazonaws.services.s3.model.Tag;
 import com.amazonaws.services.s3.model.UploadPartRequest;
@@ -64,6 +67,9 @@
     private final TransferDBUtil dbUtil;
     private final TransferStatusUpdater updater;
 
+    Map<Integer, UploadPartTaskMetadata> uploadPartTasks;
+    private List<UploadPartRequest> requestList;
+
     public UploadTask(TransferRecord uploadInfo,
                       AmazonS3 s3,
                       TransferDBUtil dbUtil,
@@ -72,6 +78,7 @@ public UploadTask(TransferRecord uploadInfo,
         this.s3 = s3;
         this.dbUtil = dbUtil;
         this.updater = updater;
+        this.uploadPartTasks = new HashMap<Integer, UploadPartTaskMetadata>();
     }
 
     /*
@@ -114,6 +121,7 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
          * it's a resumed upload, upload.multipartId would not be null.
          */
         long bytesAlreadyTransferred = 0;
+
         if (upload.multipartId == null || upload.multipartId.isEmpty()) {
             final PutObjectRequest putObjectRequest = createPutObjectRequest(upload);
             TransferUtility.appendMultipartTransferServiceUserAgentString(putObjectRequest);
@@ -134,20 +142,26 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
              */
             bytesAlreadyTransferred = dbUtil.queryBytesTransferredByMainUploadId(upload.id);
             if (bytesAlreadyTransferred > 0) {
-                LOGGER.debug(String.format("Resume transfer %d from %d bytes",
+                LOGGER.info(String.format("Resume transfer %d from %d bytes",
                         upload.id, bytesAlreadyTransferred));
             }
         }
-        updater.updateProgress(upload.id, bytesAlreadyTransferred, upload.bytesTotal);
+        UploadTaskProgressListener uploadTaskProgressListener = new UploadTaskProgressListener(upload);
+        updater.updateProgress(upload.id, bytesAlreadyTransferred, upload.bytesTotal, false);
 
-        final List<UploadPartRequest> requestList = dbUtil.getNonCompletedPartRequestsFromDB(upload.id,
+        requestList = dbUtil.getNonCompletedPartRequestsFromDB(upload.id,
                 upload.multipartId);
         LOGGER.info("Multipart upload " + upload.id + " in " + requestList.size() + " parts.");
-        final ArrayList<Future<Boolean>> futures = new ArrayList<Future<Boolean>>();
         for (final UploadPartRequest request : requestList) {
             TransferUtility.appendMultipartTransferServiceUserAgentString(request);
-            request.setGeneralProgressListener(updater.newProgressListener(upload.id));
-            futures.add(TransferThreadPool.submitTask(new UploadPartTask(request, s3, dbUtil)));
+
+            UploadPartTaskMetadata uploadPartTaskMetadata = new UploadPartTaskMetadata();
+            uploadPartTaskMetadata.uploadPartRequest = request;
+            uploadPartTaskMetadata.bytesTransferredSoFar = 0;
+            uploadPartTaskMetadata.state = TransferState.WAITING;
+            uploadPartTasks.put(request.getPartNumber(), uploadPartTaskMetadata);
+            uploadPartTaskMetadata.uploadPartTask = TransferThreadPool.submitTask(
+                    new UploadPartTask(uploadPartTaskMetadata, uploadTaskProgressListener, request, s3, dbUtil));
         }
 
         try {
@@ -156,10 +170,10 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
              * Future.get() will block the current thread until the method
              * returns.
              */
-            for (final Future<Boolean> f : futures) {
+            for (final UploadPartTaskMetadata task : uploadPartTasks.values()) {
                 // UploadPartTask returns false when it's interrupted by user
                 // and the state is set by caller
-                final boolean b = f.get();
+                final boolean b = task.uploadPartTask.get();
                 isSuccess &= b;
             }
             if (!isSuccess) {
@@ -167,51 +181,53 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
                 // were waiting for network
                 boolean isNetworkInterrupted = dbUtil.checkWaitingForNetworkPartRequestsFromDB(upload.id);
                 if (isNetworkInterrupted) {
-                    LOGGER.debug("Network Connection Interrupted: Transfer " + upload.id + " waits for network");
+                    LOGGER.info("Network Connection Interrupted: Transfer " + upload.id + " waits for network");
                     updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);
                 }
                 return false;
             }
-        } catch (final InterruptedException e) {
+        } catch (final Exception e) {
+            LOGGER.error("Upload resulted in an exception. " + e);
+
             /*
              * Future.get() will catch InterruptedException, but it's not a
              * failure, it may be caused by a pause operation from applications.
+             * Cancel all the on-going part tasks.
              */
-            for (final Future<?> f : futures) {
-                f.cancel(true);
+            for (final UploadPartTaskMetadata task : uploadPartTasks.values()) {
+                task.uploadPartTask.cancel(true);
             }
-            // abort by user
-            LOGGER.debug("Transfer " + upload.id + " is interrupted by user");
-            LOGGER.error("Error encountered during multi-part upload: " + upload.id
-                    + " due to " + e.getMessage(), e);
-            updater.updateState(upload.id, TransferState.FAILED);
-            updater.throwError(upload.id, e);
 
-            return false;
-        } catch (final ExecutionException ee) {
-            // Set the TransferState to WAITING_FOR_NETWORK if the individual parts
-            // were waiting for network
-            boolean isNetworkInterrupted = dbUtil.checkWaitingForNetworkPartRequestsFromDB(upload.id);
-            if (isNetworkInterrupted) {
-                LOGGER.debug("Network Connection Interrupted: Transfer " + upload.id + " waits for network");
-                updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);
+            // If the thread that is executing the transfer is interrupted
+            // because of a user initiated pause or cancel operation, 
+            // do not throw exception or set the state to FAILED.
+            if (TransferState.CANCELED.equals(upload.state) ||
+                TransferState.PAUSED.equals(upload.state)) {
+                LOGGER.info("Transfer is " + upload.state);
                 return false;
             }
 
-            // If the thread that is executing the transfer is interrupted
-            // because of a user initiated pause, do not throw exception or
-            // set the state to FAILED.
-            final Exception e = (Exception) ee.getCause();
-            if (RetryUtils.isInterrupted(e) &&
-                TransferState.PAUSED.equals(upload.state)) {
-                LOGGER.debug("Transfer " + upload.id + " is interrupted by user");
+            // interrupted due to network. Set the TransferState to 
+            // WAITING_FOR_NETWORK if the individual parts were waiting for network
+            for (final UploadPartTaskMetadata task : uploadPartTasks.values()) {
+                if (TransferState.WAITING_FOR_NETWORK.equals(task.state)) {
+                    LOGGER.info("Individual part is WAITING_FOR_NETWORK.");
+                    updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);
+                    return false;
+                }
+            }
+
+            // interrupted due to reasons other than network.
+            if (RetryUtils.isInterrupted(e)) {
+                LOGGER.info("Transfer is interrupted. " + e);
                 return false;
             }
 
+            // in other cases, set the transfer to failed.
             LOGGER.error("Error encountered during multi-part upload: " + upload.id
                     + " due to " + e.getMessage(), e);
-            updater.updateState(upload.id, TransferState.FAILED);
             updater.throwError(upload.id, e);
+            updater.updateState(upload.id, TransferState.FAILED);
             return false;
         }
 
@@ -219,7 +235,7 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
         try {
             completeMultiPartUpload(upload.id, upload.bucketName, upload.key,
                     upload.multipartId);
-            updater.updateProgress(upload.id, upload.bytesTotal, upload.bytesTotal);
+            updater.updateProgress(upload.id, upload.bytesTotal, upload.bytesTotal, true);
             updater.updateState(upload.id, TransferState.COMPLETED);
             return true;
         } catch (final AmazonClientException ace) {
@@ -233,48 +249,61 @@ private Boolean uploadMultipartAndWaitForCompletion() throws ExecutionException
 
     private Boolean uploadSinglePartAndWaitForCompletion() {
         final PutObjectRequest putObjectRequest = createPutObjectRequest(upload);
+        final ProgressListener progressListener = updater.newProgressListener(upload.id);
 
         final long length = putObjectRequest.getFile().length();
         TransferUtility.appendTransferServiceUserAgentString(putObjectRequest);
-        updater.updateProgress(upload.id, 0, length);
-        putObjectRequest.setGeneralProgressListener(updater.newProgressListener(upload.id));
+        putObjectRequest.setGeneralProgressListener(progressListener);
 
         try {
-            s3.putObject(putObjectRequest);
-            updater.updateProgress(upload.id, length, length);
+            PutObjectResult putObjectResult = s3.putObject(putObjectRequest);
+            updater.updateProgress(upload.id, length, length, true);
             updater.updateState(upload.id, TransferState.COMPLETED);
             return true;
         } catch (final Exception e) {
-            // Check if network is not connected, set the state to WAITING_FOR_NETWORK.
-            try {
-                if (TransferNetworkLossHandler.getInstance() != null && 
-                    !TransferNetworkLossHandler.getInstance().isNetworkConnected()) {
-                    LOGGER.info("Thread:[" + Thread.currentThread().getId() + "]: Network wasn't available.");
-                    /*
-                     * Network connection is being interrupted. Moving the TransferState
-                     * to WAITING_FOR_NETWORK till the network availability resumes.
-                     */
-                    updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);
-                    LOGGER.debug("Network Connection Interrupted: " +
-                            "Moving the TransferState to WAITING_FOR_NETWORK");
-                    return false;
-                }
-            } catch (TransferUtilityException transferUtilityException) {
-                LOGGER.error("TransferUtilityException: [" + transferUtilityException + "]");
+           // we dont need to update progress listener
+            if (TransferState.CANCELED.equals(upload.state)) {
+                LOGGER.info("Transfer is " + upload.state);
+                return false;
             }
 
-            // If the thread that is executing the transfer is interrupted
-            // because of a user initiated pause, do not throw exception or
-            // set the state to FAILED.
-            if (RetryUtils.isInterrupted(e) &&
-                TransferState.PAUSED.equals(upload.state)) {
-                // thread interrupted by user
-                LOGGER.error("Single-part Upload interrupted: " + e.getMessage());
+            // pause
+            if (TransferState.PAUSED.equals(upload.state)) {
+                LOGGER.info("Transfer is " + upload.state);
+                ProgressEvent resetEvent = new ProgressEvent(0);
+                resetEvent.setEventCode(ProgressEvent.RESET_EVENT_CODE);
+                progressListener.progressChanged(new ProgressEvent(0));
                 return false;
             }
 
+            // If the thread that is executing the transfer is interrupted
+            // because of a race condition in the network or OS.
+            // interrupted and if its due to network drop, reset progress and
+            // update state to WAITING_FOR_NETWORK.
+            if (RetryUtils.isInterrupted(e)) {
+                // Check if network is not connected, set the state to WAITING_FOR_NETWORK.
+                try {
+                    if (TransferNetworkLossHandler.getInstance() != null && 
+                        !TransferNetworkLossHandler.getInstance().isNetworkConnected()) {
+                        LOGGER.info("Thread:[" + Thread.currentThread().getId() + "]: Network wasn't available.");
+                        /*
+                         * Network connection is being interrupted. Moving the TransferState to
+                         * WAITING_FOR_NETWORK till the network availability resumes.
+                         */
+                        updater.updateState(upload.id, TransferState.WAITING_FOR_NETWORK);
+                        LOGGER.debug("Network Connection Interrupted: " + "Moving the TransferState to WAITING_FOR_NETWORK");
+                        ProgressEvent resetEvent = new ProgressEvent(0);
+                        resetEvent.setEventCode(ProgressEvent.RESET_EVENT_CODE);
+                        progressListener.progressChanged(new ProgressEvent(0));
+                        return false;
+                    }
+                } catch (TransferUtilityException transferUtilityException) {
+                    LOGGER.error("TransferUtilityException: [" + transferUtilityException + "]");
+                }
+            }
+
             // In other cases, set the transfer state to FAILED.
-            LOGGER.debug("Failed to do a single-part upload: " + upload.id + " due to " + e.getMessage());
+            LOGGER.debug("Failed to upload: " + upload.id + " due to " + e.getMessage());
             updater.throwError(upload.id, e);
             updater.updateState(upload.id, TransferState.FAILED);
             return false;
@@ -415,4 +444,66 @@ private PutObjectRequest createPutObjectRequest(TransferRecord upload) {
     private static CannedAccessControlList getCannedAclFromString(String cannedAcl) {
         return cannedAcl == null ? null : CANNED_ACL_MAP.get(cannedAcl);
     }
+
+    /**
+     * Progress Listener for the Main UploadTask.
+     */
+    class UploadTaskProgressListener implements ProgressListener {
+
+        // This variable tracks the previously reported total bytes transferred.
+        private long prevTotalBytesTransferredOfAllParts;
+
+        UploadTaskProgressListener(TransferRecord upload) {
+            this.prevTotalBytesTransferredOfAllParts = upload.bytesCurrent;
+        }
+
+        @Override
+        public void progressChanged(final ProgressEvent progressEvent) {
+            // No-op
+        }
+
+        public synchronized void onProgressChanged(final int partNum,
+            final long bytesTransferredSoFarForPartNum) {
+            UploadPartTaskMetadata partNumTask = uploadPartTasks.get(partNum);
+            if (partNumTask == null) {
+                LOGGER.info("Update received for unknown part. Ignoring.");
+                return;
+            }
+
+            partNumTask.bytesTransferredSoFar = bytesTransferredSoFarForPartNum;
+
+            // Compute the sum of bytesTransferredSoFar for all parts
+            long totalBytesTransferredOfAllParts = 0;
+            for (Map.Entry<Integer, UploadPartTaskMetadata> part : uploadPartTasks.entrySet()) {
+                totalBytesTransferredOfAllParts += part.getValue().bytesTransferredSoFar;
+            }
+
+            // Update the transfer record and the transfer listener
+            // when the accumulated total bytesTransferred (totalBytesTransferredOfAllParts) 
+            // exceeds the previously reported toal bytesTransferred 
+            // (prevTotalBytesTransferredOfAllParts).
+            if (totalBytesTransferredOfAllParts > prevTotalBytesTransferredOfAllParts) {
+                updater.updateProgress(UploadTask.this.upload.id,
+                    totalBytesTransferredOfAllParts,
+                    UploadTask.this.upload.bytesTotal,
+                    true);
+                prevTotalBytesTransferredOfAllParts = totalBytesTransferredOfAllParts;
+            }
+        }
+    }
+
+    // This class represents the state being tracked per part
+    class UploadPartTaskMetadata {
+        // Reference to the request object for a part
+        UploadPartRequest uploadPartRequest;
+
+        // The future task that runs UploadPartTask to upload a part
+        Future<Boolean> uploadPartTask;
+
+        // number of bytes transferred so far for this part
+        long bytesTransferredSoFar;
+
+        // state of the transfer
+        TransferState state;
+    }
 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
index 4bc35f9120..5f801a721d 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/AmazonS3Client.java
@@ -290,7 +290,12 @@ public AmazonS3Client() {
      *            Amazon S3 with this client.
      * @see AmazonS3Client#AmazonS3Client()
      * @see AmazonS3Client#AmazonS3Client(AWSCredentials, ClientConfiguration)
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(AWSCredentials, 
+     *                                               com.amazonaws.regions.Region)
+     *             instead.
      */
+    @Deprecated
     public AmazonS3Client(AWSCredentials awsCredentials) {
         this(awsCredentials, new ClientConfiguration());
     }
@@ -306,7 +311,13 @@ public AmazonS3Client(AWSCredentials awsCredentials) {
      *            retry counts, etc).
      * @see AmazonS3Client#AmazonS3Client()
      * @see AmazonS3Client#AmazonS3Client(AWSCredentials)
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(AWSCredentials, 
+     *                                                com.amazonaws.regions.Region, 
+     *                                                ClientConfiguration)
+     *             instead.
      */
+    @Deprecated
     public AmazonS3Client(AWSCredentials awsCredentials, ClientConfiguration clientConfiguration) {
         this(new StaticCredentialsProvider(awsCredentials), clientConfiguration);
     }
@@ -318,7 +329,12 @@ public AmazonS3Client(AWSCredentials awsCredentials, ClientConfiguration clientC
      * @param credentialsProvider The AWS credentials provider which will
      *            provide credentials to authenticate requests with AWS
      *            services.
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(AWSCredentialsProvider, 
+     *                                                com.amazonaws.regions.Region)
+     *             instead.
      */
+    @Deprecated
     public AmazonS3Client(AWSCredentialsProvider credentialsProvider) {
         this(credentialsProvider, new ClientConfiguration());
     }
@@ -333,7 +349,13 @@ public AmazonS3Client(AWSCredentialsProvider credentialsProvider) {
      * @param clientConfiguration The client configuration options controlling
      *            how this client connects to Amazon S3 (e.g. proxy settings,
      *            retry counts, etc).
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(AWSCredentialsProvider, 
+     *                                               com.amazonaws.regions.Region,
+     *                                               ClientConfiguration)
+     *             instead. 
      */
+    @Deprecated
     public AmazonS3Client(AWSCredentialsProvider credentialsProvider,
                           ClientConfiguration clientConfiguration) {
         this(credentialsProvider, clientConfiguration, new UrlHttpClient(clientConfiguration));
@@ -372,8 +394,14 @@ public AmazonS3Client(AWSCredentialsProvider credentialsProvider,
      * @param clientConfiguration The client configuration options controlling
      *            how this client connects to Amazon S3 (e.g. proxy settings,
      *            retry counts, etc).
-     * @param requestMetricCollector request metric collector
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(AWSCredentialsProvider, 
+     *                                               com.amazonaws.regions.Region,
+     *                                               ClientConfiguration,
+     *                                               HttpClient)
+     *             instead.
      */
+    @Deprecated
     public AmazonS3Client(AWSCredentialsProvider credentialsProvider,
                           ClientConfiguration clientConfiguration, HttpClient httpClient) {
         super(clientConfiguration, httpClient);
@@ -421,21 +449,204 @@ public AmazonS3Client(AWSCredentialsProvider credentialsProvider,
      *            retry counts, etc).
      * @see AmazonS3Client#AmazonS3Client(AWSCredentials)
      * @see AmazonS3Client#AmazonS3Client(AWSCredentials, ClientConfiguration)
+     *
+     * @deprecated Use AmazonS3Client#AmazonS3Client(ClientConfiguration, 
+     *                                               com.amazonaws.regions.Region)
+     *             instead.
      */
+    @Deprecated
     public AmazonS3Client(ClientConfiguration clientConfiguration) {
         this(new DefaultAWSCredentialsProviderChain(), clientConfiguration);
     }
 
+    /**
+     *
+     * @param awsCredentials The AWS credentials to use when making requests to
+     *            Amazon S3 with this client.
+     * @param region the AWS region
+     */
+    public AmazonS3Client(AWSCredentials awsCredentials,
+                          com.amazonaws.regions.Region region) {
+        this(awsCredentials, region, new ClientConfiguration());
+    }
+
+    /**
+     *
+     * @param awsCredentials The AWS credentials to use when making requests to
+     *            Amazon S3 with this client.
+     * @param region the AWS region
+     * @param clientConfiguration The client configuration options controlling
+     *            how this client connects to Amazon S3 (e.g. proxy settings,
+     *            retry counts, etc).
+     */
+    public AmazonS3Client(AWSCredentials awsCredentials,
+                          com.amazonaws.regions.Region region,
+                          ClientConfiguration clientConfiguration) {
+        this(awsCredentials, region, clientConfiguration, new UrlHttpClient(clientConfiguration));
+    }
+
+    /**
+     *
+     * @param awsCredentials The AWS credentials to use when making requests to
+     *            Amazon S3 with this client.
+     * @param region the AWS region
+     * @param clientConfiguration The client configuration options controlling
+     *            how this client connects to Amazon S3 (e.g. proxy settings,
+     *            retry counts, etc).
+     * @param httpClient
+     */
+    public AmazonS3Client(AWSCredentials awsCredentials,
+                          com.amazonaws.regions.Region region,
+                          ClientConfiguration clientConfiguration,
+                          HttpClient httpClient) {
+        this(new StaticCredentialsProvider(awsCredentials), region, clientConfiguration, httpClient);
+    }
+
+    /**
+     *
+     * @param awsCredentialsProvider The AWS credentials provider which will
+     *            provide credentials to authenticate requests with AWS
+     *            services.
+     * @param region the AWS region
+     */
+    public AmazonS3Client(AWSCredentialsProvider awsCredentialsProvider,
+                          com.amazonaws.regions.Region region) {
+        this(awsCredentialsProvider, region, new ClientConfiguration());
+    }
+
+    /**
+     *
+     * @param awsCredentialsProvider The AWS credentials provider which will
+     *            provide credentials to authenticate requests with AWS
+     *            services.
+     * @param region the AWS region
+     * @param clientConfiguration The client configuration options controlling
+     *            how this client connects to Amazon S3 (e.g. proxy settings,
+     *            retry counts, etc).
+     */
+    public AmazonS3Client(AWSCredentialsProvider awsCredentialsProvider,
+                          com.amazonaws.regions.Region region,
+                          ClientConfiguration clientConfiguration) {
+        this(awsCredentialsProvider, region, clientConfiguration, new UrlHttpClient(clientConfiguration));
+    }
+
+    /**
+     *
+     * @param awsCredentialsProvider The AWS credentials provider which will
+     *            provide credentials to authenticate requests with AWS
+     *            services.
+     * @param region the AWS region
+     * @param clientConfiguration The client configuration options controlling
+     *            how this client connects to Amazon S3 (e.g. proxy settings,
+     *            retry counts, etc).
+     * @param httpClient the custome httpclient to send requests and receive responses
+     */
+    public AmazonS3Client(AWSCredentialsProvider awsCredentialsProvider,
+                          com.amazonaws.regions.Region region,
+                          ClientConfiguration clientConfiguration,
+                          HttpClient httpClient) {
+        super(clientConfiguration, httpClient);
+        this.awsCredentialsProvider = awsCredentialsProvider;
+        init(region, clientConfiguration);
+    }
+
+
+    /**
+     * Constructs a new client using the specified client configuration to
+     * access Amazon S3. A credentials provider chain will be used that searches
+     * for credentials in this order:
+     * <ul>
+     * <li>Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_KEY</li>
+     * <li>Java System Properties - aws.accessKeyId and aws.secretKey</li>
+     * <li>Instance Profile Credentials - delivered through the Amazon EC2
+     * metadata service</li>
+     * </ul>
+     * <p>
+     * If no credentials are found in the chain, this client will attempt to
+     * work in an anonymous mode where requests aren't signed. Only a subset of
+     * the Amazon S3 API will work with anonymous <i>(i.e. unsigned)</i>
+     * requests, but this can prove useful in some situations. For example:
+     * <ul>
+     * <li>If an Amazon S3 bucket has {@link Permission#Read} permission for the
+     * {@link GroupGrantee#AllUsers} group, anonymous clients can call
+     * {@link #listObjects(String)} to see what objects are stored in a bucket.</li>
+     * <li>If an object has {@link Permission#Read} permission for the
+     * {@link GroupGrantee#AllUsers} group, anonymous clients can call
+     * {@link #getObject(String, String)} and
+     * {@link #getObjectMetadata(String, String)} to pull object content and
+     * metadata.</li>
+     * <li>If a bucket has {@link Permission#Write} permission for the
+     * {@link GroupGrantee#AllUsers} group, anonymous clients can upload objects
+     * to the bucket.</li>
+     * </ul>
+     * </p>
+     * <p>
+     * You can force the client to operate in an anonymous mode, and skip the
+     * credentials provider chain, by passing in <code>null</code> for the
+     * credentials.
+     * </p>
+     *
+     * @param clientConfiguration The client configuration options controlling
+     *            how this client connects to Amazon S3 (e.g. proxy settings,
+     *            retry counts, etc).
+     * @see AmazonS3Client#AmazonS3Client(AWSCredentials, com.amazonaws.regions.Region)
+     * @see AmazonS3Client#AmazonS3Client(AWSCredentials, ClientConfiguration, com.amazonaws.regions.Region)
+     */
+    public AmazonS3Client(ClientConfiguration clientConfiguration,
+                          com.amazonaws.regions.Region region) {
+        this(new DefaultAWSCredentialsProviderChain(), region, clientConfiguration);
+    }
+
+    /**
+     * @deprecated Use init(com.amazonaws.regions.Region, ClientConfiguration) instead.
+     */
+    @Deprecated
     private void init() {
         // calling this.setEndpoint(...) will also modify the signer accordingly
         setEndpoint(Constants.S3_HOSTNAME);
-        this.endpointPrefix = "s3";
+        this.endpointPrefix = Constants.S3_ENDPOINT_PREFIX;
+
+        final HandlerChainFactory chainFactory = new HandlerChainFactory();
+        requestHandler2s.addAll(chainFactory.newRequestHandlerChain(
+                "/com/amazonaws/services/s3/request.handlers"));
+        requestHandler2s.addAll(chainFactory.newRequestHandler2Chain(
+                "/com/amazonaws/services/s3/request.handler2s"));
+    }
+
+    /**
+     *
+     * @param awsCredentialsProvider The AWS credentials provider which will
+     *            provide credentials to authenticate requests with AWS
+     *            services.
+     * @param region the AWS region
+     * @param clientConfiguration The AWS credentials provider which will
+     *            provide credentials to authenticate requests with AWS
+     *            services.
+     */
+    private void init(com.amazonaws.regions.Region region,
+                      ClientConfiguration clientConfiguration) {
+        if (awsCredentialsProvider == null) {
+            throw new IllegalArgumentException("Credentials cannot be null. Credentials is required to sign the request");
+        }
+
+        if (region == null) {
+            throw new IllegalArgumentException("Region cannot be null. Region is required to sign the request");
+        }
+
+        this.clientConfiguration = clientConfiguration;
+        this.endpointPrefix = Constants.S3_ENDPOINT_PREFIX;
+
+        // calling this.setEndpoint(...) will also modify the signer accordingly
+        setEndpoint(Constants.S3_HOSTNAME);
+        setRegion(region);
 
         final HandlerChainFactory chainFactory = new HandlerChainFactory();
         requestHandler2s.addAll(chainFactory.newRequestHandlerChain(
                 "/com/amazonaws/services/s3/request.handlers"));
         requestHandler2s.addAll(chainFactory.newRequestHandler2Chain(
                 "/com/amazonaws/services/s3/request.handler2s"));
+
+        log.debug("initialized with endpoint = " + this.endpoint);
     }
 
 
@@ -444,14 +655,14 @@ private void init() {
      * listener occur.
      *
      * @param threshold Number of Kbytes that needs to be written before
-     *            write update notification occurs.
+     *            write update notification occurs. Minimum value supported
+     *            is 128 KB due to the limitations imposed by the HttpClient
+     *            while reading the data from the stream.
      */
     public void setNotificationThreshold(final int threshold) {
         this.notificationThreshold = threshold;
     }
 
-
-
     @Override
     public void setEndpoint(String endpoint) {
         if (endpoint.endsWith(Constants.S3_ACCELERATE_HOSTNAME)) {
@@ -3284,6 +3495,7 @@ public URL generatePresignedUrl(GeneratePresignedUrlRequest generatePresignedUrl
 
         final Signer signer = createSigner(request, bucketName, key);
 
+
         if (signer instanceof Presigner) {
             // If we have a signer which knows how to presign requests,
             // delegate directly to it.
@@ -3837,6 +4049,7 @@ private AccessControlList getAcl(String bucketName, String key, String versionId
 
         final Request<AmazonWebServiceRequest> request = createRequest(bucketName, key, originalRequest,
                 HttpMethodName.GET);
+
         request.addParameter("acl", null);
         if (versionId != null) {
             request.addParameter("versionId", versionId);
@@ -3924,6 +4137,25 @@ private void setAcl(String bucketName, String key, String versionId, AccessContr
     /**
      * Returns a "complete" S3 specific signer, taking into the S3 bucket, key,
      * and the current S3 client configuration into account.
+     *
+     * Signer = get a Signer based on the bucket endpoint // InternalConfig in CoreRuntime makes this decision
+     * [If the region is not specified, uses SigV2 signer,
+     * Else If the region is specified, and If the region only supports SigV4, then uses SigV4]
+     * If Signer is not Overriden {
+     *    If Signer is a V4 Signer and Region is null
+     *       Get the region from AmazonS3Client or BucketRegionCache
+     *       If available
+     *           Use SigV4
+     *       Else If PresignedUrl
+     *           Use SigV2
+     *   If Signer Region is overriden
+     *       Use SigV4
+     *   If BucketRegionCache has a region
+     *       Use SigV4
+     * }
+
+     * If Signer is SigV2 signer
+     *      Use SigV2
      */
     protected Signer createSigner(final Request<?> request,
                                   final String bucketName,
@@ -3933,25 +4165,32 @@ protected Signer createSigner(final Request<?> request,
         // in accelerate mode, the endpoint in request is regionless. We need
         // the client-wide endpoint
         // to fetch the region information and pick the correct signer.
-        final URI uri = clientOptions.isAccelerateModeEnabled() ? endpoint : request.getEndpoint();
+        final URI uri = clientOptions.isAccelerateModeEnabled()
+                ? endpoint
+                : request.getEndpoint();
+
+        // This method retrieves the signer based on the URI. Currently
+        // S3's default signer is a SigV2 signer implemented in S3Signer
         final Signer signer = getSignerByURI(uri);
 
         if (!isSignerOverridden()) {
             if ((signer instanceof AWSS3V4Signer) && noExplicitRegionProvided(request)) {
 
-                final String region = clientRegion == null ? bucketRegionCache.get(bucketName)
+                final String region = clientRegion == null
+                        ? bucketRegionCache.get(bucketName)
                         : clientRegion;
                 if (region != null) {
                     // If cache contains the region for the bucket, create an endpoint for the region and
                     // update the request with that endpoint.
-                    resolveRequestEndpoint(request, bucketName, key, RuntimeHttpUtils.toUri(
-                            RegionUtils.getRegion(region).getServiceEndpoint(S3_SERVICE_NAME),
+                    resolveRequestEndpoint(request,
+                            bucketName,
+                            key,
+                            RuntimeHttpUtils.toUri(RegionUtils.getRegion(region).getServiceEndpoint(S3_SERVICE_NAME),
                             clientConfiguration));
 
-                    final AWSS3V4Signer v4Signer = (AWSS3V4Signer) signer;
-                    v4Signer.setServiceName(getServiceNameIntern());
-                    v4Signer.setRegionName(region);
-                    return v4Signer;
+                    AWSS3V4Signer sigV4Signer = (AWSS3V4Signer) signer;
+                    setAWSS3V4SignerWithServiceNameAndRegion((AWSS3V4Signer) signer, region);
+                    return sigV4Signer;
                 } else if (request.getOriginalRequest() instanceof GeneratePresignedUrlRequest) {
                     return createSigV2Signer(request, bucketName, key);
                 }
@@ -3962,10 +4201,9 @@ protected Signer createSigner(final Request<?> request,
                     ? (clientRegion == null ? bucketRegionCache.get(bucketName) : clientRegion)
                     : getSignerRegionOverride();
             if (regionOverride != null) {
-                final AWSS3V4Signer v4Signer = new AWSS3V4Signer();
-                v4Signer.setServiceName(getServiceNameIntern());
-                v4Signer.setRegionName(regionOverride);
-                return v4Signer;
+                AWSS3V4Signer sigV4Signer = new AWSS3V4Signer();
+                setAWSS3V4SignerWithServiceNameAndRegion(sigV4Signer, regionOverride);
+                return sigV4Signer;
             }
         }
 
@@ -3980,6 +4218,20 @@ protected Signer createSigner(final Request<?> request,
         return signer;
     }
 
+    /**
+     * Create and return a SigV4 based signer with the service name and region.
+     *
+     * @param sigV4Signer the signer that signs the request using SigV4
+     *                    algorithm.
+     * @param region the signer region
+     * @return
+     */
+    private void setAWSS3V4SignerWithServiceNameAndRegion(final AWSS3V4Signer sigV4Signer, 
+                                                          final String region) {
+        sigV4Signer.setServiceName(getServiceNameIntern());
+        sigV4Signer.setRegionName(region);
+    }
+
     /**
      * Has signer been explicitly overriden in the configuration?
      */
@@ -4022,6 +4274,7 @@ private boolean isStandardEndpoint(URI endpoint) {
         return endpoint.getHost().endsWith(Constants.S3_HOSTNAME);
     }
 
+    @Deprecated
     private S3Signer createSigV2Signer(final Request<?> request,
                                        final String bucketName,
                                        final String key) {
@@ -4655,7 +4908,7 @@ protected final ExecutionContext createExecutionContext(AmazonWebServiceRequest
             response = client.execute(request, responseHandler,
                     errorResponseHandler, executionContext);
             return response.getAwsResponse();
-        }catch(final AmazonS3Exception ase){
+        } catch(final AmazonS3Exception ase){
             /**
              * This is to handle the edge case: when the bucket is deleted and recreated in a different region,
              * the cache still has the old region info.
@@ -5478,15 +5731,17 @@ public void resolveRequestEndpoint(Request<?> request,
                                        URI endpoint) {
         final URI ep = endpoint == null ? this.endpoint : endpoint;
         if (shouldUseVirtualAddressing(ep, bucketName)) {
+            log.debug("Using virtual style addressing. Endpoint = " + ep);
             request.setEndpoint(convertToVirtualHostEndpoint(ep, bucketName));
             request.setResourcePath(getHostStyleResourcePath(key));
         } else {
+            log.debug("Using path style addressing. Endpoint = " + ep);
             request.setEndpoint(ep);
             if (bucketName != null) {
                 request.setResourcePath(getPathStyleResourcePath(bucketName, key));
             }
         }
-        log.info("Key: " + key + "; Request: " + request);
+        log.debug("Key: " + key + "; Request: " + request);
     }
 
     private boolean shouldUseVirtualAddressing(final URI endpoint, final String bucketName) {
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/internal/Constants.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/internal/Constants.java
index fda2b8a01a..880c2f6036 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/internal/Constants.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/internal/Constants.java
@@ -28,6 +28,8 @@
  */
 public class Constants {
 
+    /** Prefix for the S3 service endpoint */
+    public static final String S3_ENDPOINT_PREFIX = "s3";
     /** Default hostname for the S3 service endpoint */
     public static final String S3_HOSTNAME = "s3.amazonaws.com";
     /** Hostname for the s3-external-1 service endpoint */
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/EncryptedPutObjectRequest.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/EncryptedPutObjectRequest.java
index d6fb6ba99b..b008d7a908 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/EncryptedPutObjectRequest.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/services/s3/model/EncryptedPutObjectRequest.java
@@ -31,7 +31,7 @@
  * </p>
  * <p>
  * If {@link EncryptedPutObjectRequest} is used against the non-encrypting
- * {@link AmazonS3JavaClient}, the additional attributes will be ignored.
+ * {@link AmazonS3EncryptionClient}, the additional attributes will be ignored.
  * </p>
  */
 public class EncryptedPutObjectRequest extends PutObjectRequest implements
diff --git a/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/DefaultSigningMethodTest.java b/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/DefaultSigningMethodTest.java
index 9112fb044b..8b8cd6cc39 100644
--- a/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/DefaultSigningMethodTest.java
+++ b/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/DefaultSigningMethodTest.java
@@ -158,11 +158,6 @@ private static void assertSigV4WithRegion(AmazonS3Client s3, String expectedRegi
         testSignAnonymously(s3);
     }
 
-    private static void assertSigV2(AmazonS3Client s3) {
-        final Signer signer = invokeCreateSigner(s3);
-        assertFalse(signer instanceof AWSS3V4Signer);
-    }
-
     private static Request<?> createFakeGetObjectRequest(AmazonS3Client s3) {
         try {
             final GetObjectRequest fakeRequest = new GetObjectRequest(FAKE_BUCKET, FAKE_KEY);
diff --git a/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/internal/S3SignerTest.java b/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/internal/S3SignerTest.java
index 512f6030dc..fb910a7d21 100644
--- a/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/internal/S3SignerTest.java
+++ b/aws-android-sdk-s3/src/test/java/com/amazonaws/services/s3/internal/S3SignerTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -24,14 +24,23 @@
 import com.amazonaws.services.s3.Headers;
 import com.amazonaws.services.s3.model.GetObjectRequest;
 
+import org.junit.Ignore;
 import org.junit.Test;
 
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.util.Date;
 
+/**
+ * TODO:
+ *
+ * Skipping the execution of this test due to the removal of
+ * SigV2. Once SigV2 support is removed from the AmazonS3Client,
+ * delete these tests.
+ */
 public class S3SignerTest {
 
+    @Ignore
     @Test
     public void testSign() throws URISyntaxException {
         final GetObjectRequest gr = new GetObjectRequest("test-bucket123456", "TestFile.txt");
diff --git a/aws-android-sdk-sdb/pom.xml b/aws-android-sdk-sdb/pom.xml
index 1b0c9e880f..2aa4ff146d 100644
--- a/aws-android-sdk-sdb/pom.xml
+++ b/aws-android-sdk-sdb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ses/pom.xml b/aws-android-sdk-ses/pom.xml
index ceaf0a8546..ca93c46040 100644
--- a/aws-android-sdk-ses/pom.xml
+++ b/aws-android-sdk-ses/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sns/pom.xml b/aws-android-sdk-sns/pom.xml
index 1d8651510b..b43d6b3e6a 100644
--- a/aws-android-sdk-sns/pom.xml
+++ b/aws-android-sdk-sns/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-sqs</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sqs/pom.xml b/aws-android-sdk-sqs/pom.xml
index 35975f5b45..9c1c20f7c7 100644
--- a/aws-android-sdk-sqs/pom.xml
+++ b/aws-android-sdk-sqs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-transcribe/pom.xml b/aws-android-sdk-transcribe/pom.xml
index eb2e43d13b..c651e880ed 100644
--- a/aws-android-sdk-transcribe/pom.xml
+++ b/aws-android-sdk-transcribe/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
index 145a9c4b56..0c774a25a3 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribe.java
@@ -88,10 +88,7 @@
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -185,10 +182,7 @@ GetTranscriptionJobResult getTranscriptionJob(
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -258,9 +252,7 @@ ListVocabulariesResult listVocabularies(ListVocabulariesRequest listVocabularies
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -287,10 +279,7 @@ StartTranscriptionJobResult startTranscriptionJob(
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
index 50006c8f33..f9039db0f2 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsync.java
@@ -32,10 +32,7 @@
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -61,10 +58,7 @@
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -265,10 +259,7 @@
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -291,10 +282,7 @@
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -430,9 +418,7 @@
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -457,9 +443,7 @@
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -491,10 +475,7 @@
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
@@ -522,10 +503,7 @@
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
index 30c9c1f8a9..cd5d06e65b 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeAsyncClient.java
@@ -260,10 +260,7 @@ public void shutdown() {
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -295,10 +292,7 @@ public CreateVocabularyResult call() throws Exception {
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -560,10 +554,7 @@ public GetTranscriptionJobResult call() throws Exception {
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -593,10 +584,7 @@ public GetVocabularyResult call() throws Exception {
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -775,9 +763,7 @@ public ListVocabulariesResult call() throws Exception {
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -808,9 +794,7 @@ public StartTranscriptionJobResult call() throws Exception {
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -852,10 +836,7 @@ public StartTranscriptionJobResult call() throws Exception {
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
@@ -889,10 +870,7 @@ public UpdateVocabularyResult call() throws Exception {
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
index bbc696cdfb..e7fad00802 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/AmazonTranscribeClient.java
@@ -285,10 +285,7 @@ private static ClientConfiguration adjustClientConfiguration(ClientConfiguration
     /**
      * <p>
      * Creates a new custom vocabulary that you can use to change the way Amazon
-     * Transcribe handles transcription of an audio file. Note that vocabularies
-     * for en-AU, en-UK, and fr-CA languages that are in preview are not
-     * available. In the console, the vocabulary section will be greyed-out and
-     * SDK will return error message.
+     * Transcribe handles transcription of an audio file.
      * </p>
      * 
      * @param createVocabularyRequest
@@ -478,10 +475,7 @@ public GetTranscriptionJobResult getTranscriptionJob(
 
     /**
      * <p>
-     * Gets information about a vocabulary. Note that vocabularies for en-AU,
-     * en-UK, and fr-CA languages that are in preview are not available. In the
-     * console, the vocabulary section will be greyed-out and SDK will return
-     * error message.
+     * Gets information about a vocabulary.
      * </p>
      * 
      * @param getVocabularyRequest
@@ -630,9 +624,7 @@ public ListVocabulariesResult listVocabularies(ListVocabulariesRequest listVocab
 
     /**
      * <p>
-     * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
-     * en-UK, and fr-CA languages are in preview and are only available to
-     * whitelisted customers.
+     * Starts an asynchronous job to transcribe speech to text.
      * </p>
      * 
      * @param startTranscriptionJobRequest
@@ -686,10 +678,7 @@ public StartTranscriptionJobResult startTranscriptionJob(
      * <p>
      * Updates an existing vocabulary with new values. The
      * <code>UpdateVocabulary</code> operation overwrites all of the existing
-     * information with the values that you provide in the request. Note that
-     * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview
-     * are not available. In the console, the vocabulary section will be
-     * greyed-out and SDK will return error message.
+     * information with the values that you provide in the request.
      * </p>
      * 
      * @param updateVocabularyRequest
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
index bd9d6d3be1..57b518f98f 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyRequest.java
@@ -22,10 +22,7 @@
 /**
  * <p>
  * Creates a new custom vocabulary that you can use to change the way Amazon
- * Transcribe handles transcription of an audio file. Note that vocabularies for
- * en-AU, en-UK, and fr-CA languages that are in preview are not available. In
- * the console, the vocabulary section will be greyed-out and SDK will return
- * error message.
+ * Transcribe handles transcription of an audio file.
  * </p>
  */
 public class CreateVocabularyRequest extends AmazonWebServiceRequest implements Serializable {
@@ -48,7 +45,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -129,7 +126,7 @@ public CreateVocabularyRequest withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -147,7 +144,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -168,7 +165,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -189,7 +186,7 @@ public CreateVocabularyRequest withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -210,7 +207,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
index f78c51b7dd..1b9ed2f622 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/CreateVocabularyResult.java
@@ -36,7 +36,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -132,7 +132,7 @@ public CreateVocabularyResult withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -150,7 +150,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -171,7 +171,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -192,7 +192,7 @@ public CreateVocabularyResult withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -213,7 +213,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyRequest.java
index fbdd3b7063..45593dc921 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyRequest.java
@@ -21,9 +21,7 @@
 
 /**
  * <p>
- * Gets information about a vocabulary. Note that vocabularies for en-AU, en-UK,
- * and fr-CA languages that are in preview are not available. In the console,
- * the vocabulary section will be greyed-out and SDK will return error message.
+ * Gets information about a vocabulary.
  * </p>
  */
 public class GetVocabularyRequest extends AmazonWebServiceRequest implements Serializable {
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
index f3223768ec..7b74725b5e 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/GetVocabularyResult.java
@@ -36,7 +36,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -140,7 +140,7 @@ public GetVocabularyResult withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -158,7 +158,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -179,7 +179,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -200,7 +200,7 @@ public GetVocabularyResult withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -221,7 +221,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
index b615cac9c3..8a2a62b836 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/LanguageCode.java
@@ -30,7 +30,8 @@
     EnGB("en-GB"),
     DeDE("de-DE"),
     PtBR("pt-BR"),
-    FrFR("fr-FR");
+    FrFR("fr-FR"),
+    ItIT("it-IT");
 
     private String value;
 
@@ -54,6 +55,7 @@ public String toString() {
         enumMap.put("de-DE", DeDE);
         enumMap.put("pt-BR", PtBR);
         enumMap.put("fr-FR", FrFR);
+        enumMap.put("it-IT", ItIT);
     }
 
     /**
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/ListTranscriptionJobsRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/ListTranscriptionJobsRequest.java
index 677f754d44..18e3647287 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/ListTranscriptionJobsRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/ListTranscriptionJobsRequest.java
@@ -28,7 +28,9 @@
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -74,7 +76,9 @@
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -82,7 +86,10 @@
      *
      * @return <p>
      *         When specified, returns only transcription jobs with the
-     *         specified status.
+     *         specified status. Jobs are ordered by creation date, with the
+     *         newest jobs returned first. If you don’t specify a status, Amazon
+     *         Transcribe returns all transcription jobs ordered by creation
+     *         date.
      *         </p>
      * @see TranscriptionJobStatus
      */
@@ -93,7 +100,9 @@ public String getStatus() {
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -101,7 +110,10 @@ public String getStatus() {
      *
      * @param status <p>
      *            When specified, returns only transcription jobs with the
-     *            specified status.
+     *            specified status. Jobs are ordered by creation date, with the
+     *            newest jobs returned first. If you don’t specify a status,
+     *            Amazon Transcribe returns all transcription jobs ordered by
+     *            creation date.
      *            </p>
      * @see TranscriptionJobStatus
      */
@@ -112,7 +124,9 @@ public void setStatus(String status) {
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -123,7 +137,10 @@ public void setStatus(String status) {
      *
      * @param status <p>
      *            When specified, returns only transcription jobs with the
-     *            specified status.
+     *            specified status. Jobs are ordered by creation date, with the
+     *            newest jobs returned first. If you don’t specify a status,
+     *            Amazon Transcribe returns all transcription jobs ordered by
+     *            creation date.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -137,7 +154,9 @@ public ListTranscriptionJobsRequest withStatus(String status) {
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -145,7 +164,10 @@ public ListTranscriptionJobsRequest withStatus(String status) {
      *
      * @param status <p>
      *            When specified, returns only transcription jobs with the
-     *            specified status.
+     *            specified status. Jobs are ordered by creation date, with the
+     *            newest jobs returned first. If you don’t specify a status,
+     *            Amazon Transcribe returns all transcription jobs ordered by
+     *            creation date.
      *            </p>
      * @see TranscriptionJobStatus
      */
@@ -156,7 +178,9 @@ public void setStatus(TranscriptionJobStatus status) {
     /**
      * <p>
      * When specified, returns only transcription jobs with the specified
-     * status.
+     * status. Jobs are ordered by creation date, with the newest jobs returned
+     * first. If you don’t specify a status, Amazon Transcribe returns all
+     * transcription jobs ordered by creation date.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -167,7 +191,10 @@ public void setStatus(TranscriptionJobStatus status) {
      *
      * @param status <p>
      *            When specified, returns only transcription jobs with the
-     *            specified status.
+     *            specified status. Jobs are ordered by creation date, with the
+     *            newest jobs returned first. If you don’t specify a status,
+     *            Amazon Transcribe returns all transcription jobs ordered by
+     *            creation date.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/Media.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/Media.java
index 8da9d7e304..cebc49e6aa 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/Media.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/Media.java
@@ -29,7 +29,7 @@
      * region as the API endpoint that you are calling. The general form is:
      * </p>
      * <p>
-     * <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     * <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      * </p>
      * <p>
      * For example:
@@ -57,7 +57,7 @@
      * region as the API endpoint that you are calling. The general form is:
      * </p>
      * <p>
-     * <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     * <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      * </p>
      * <p>
      * For example:
@@ -83,7 +83,7 @@
      *         form is:
      *         </p>
      *         <p>
-     *         <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     *         <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      *         </p>
      *         <p>
      *         For example:
@@ -110,7 +110,7 @@ public String getMediaFileUri() {
      * region as the API endpoint that you are calling. The general form is:
      * </p>
      * <p>
-     * <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     * <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      * </p>
      * <p>
      * For example:
@@ -136,7 +136,7 @@ public String getMediaFileUri() {
      *            general form is:
      *            </p>
      *            <p>
-     *            <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     *            <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      *            </p>
      *            <p>
      *            For example:
@@ -163,7 +163,7 @@ public void setMediaFileUri(String mediaFileUri) {
      * region as the API endpoint that you are calling. The general form is:
      * </p>
      * <p>
-     * <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     * <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      * </p>
      * <p>
      * For example:
@@ -192,7 +192,7 @@ public void setMediaFileUri(String mediaFileUri) {
      *            general form is:
      *            </p>
      *            <p>
-     *            <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
+     *            <code> https://s3-&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code>
      *            </p>
      *            <p>
      *            For example:
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
index 4980096993..fc78d9339e 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/StartTranscriptionJobRequest.java
@@ -21,9 +21,7 @@
 
 /**
  * <p>
- * Starts an asynchronous job to transcribe speech to text. Note that en-AU,
- * en-UK, and fr-CA languages are in preview and are only available to
- * whitelisted customers.
+ * Starts an asynchronous job to transcribe speech to text.
  * </p>
  */
 public class StartTranscriptionJobRequest extends AmazonWebServiceRequest implements Serializable {
@@ -47,7 +45,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -189,7 +187,7 @@ public StartTranscriptionJobRequest withTranscriptionJobName(String transcriptio
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code for the language used in the input media file.
@@ -207,7 +205,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -229,7 +227,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -251,7 +249,7 @@ public StartTranscriptionJobRequest withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
@@ -273,7 +271,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the language used in the input media
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
index e4b0378372..6f667339b8 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJob.java
@@ -20,9 +20,7 @@
 /**
  * <p>
  * Describes an asynchronous transcription job that was created with the
- * <code>StartTranscriptionJob</code> operation. Note that en-AU, en-UK, and
- * fr-CA languages are in preview and are only available to whitelisted
- * customers.
+ * <code>StartTranscriptionJob</code> operation.
  * </p>
  */
 public class TranscriptionJob implements Serializable {
@@ -54,7 +52,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -285,7 +283,7 @@ public TranscriptionJob withTranscriptionJobStatus(TranscriptionJobStatus transc
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code for the input speech.
@@ -303,7 +301,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -324,7 +322,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -345,7 +343,7 @@ public TranscriptionJob withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -366,7 +364,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
index d0a0cedd6a..7934ffafd0 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/TranscriptionJobSummary.java
@@ -19,9 +19,7 @@
 
 /**
  * <p>
- * Provides a summary of information about a transcription job. Note that en-AU,
- * en-UK, and fr-CA languages are in preview and are only available to
- * whitelisted customers.
+ * Provides a summary of information about a transcription job. .
  * </p>
  */
 public class TranscriptionJobSummary implements Serializable {
@@ -57,7 +55,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -257,7 +255,7 @@ public TranscriptionJobSummary withCompletionTime(java.util.Date completionTime)
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code for the input speech.
@@ -275,7 +273,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -296,7 +294,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -317,7 +315,7 @@ public TranscriptionJobSummary withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
@@ -338,7 +336,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code for the input speech.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
index 3bc39952b2..773f54f655 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyRequest.java
@@ -23,10 +23,7 @@
  * <p>
  * Updates an existing vocabulary with new values. The
  * <code>UpdateVocabulary</code> operation overwrites all of the existing
- * information with the values that you provide in the request. Note that
- * vocabularies for en-AU, en-UK, and fr-CA languages that are in preview are
- * not available. In the console, the vocabulary section will be greyed-out and
- * SDK will return error message.
+ * information with the values that you provide in the request.
  * </p>
  */
 public class UpdateVocabularyRequest extends AmazonWebServiceRequest implements Serializable {
@@ -48,7 +45,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -125,7 +122,7 @@ public UpdateVocabularyRequest withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -143,7 +140,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -164,7 +161,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -185,7 +182,7 @@ public UpdateVocabularyRequest withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -206,7 +203,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
index cd683b540e..26f9734797 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/UpdateVocabularyResult.java
@@ -36,7 +36,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -124,7 +124,7 @@ public UpdateVocabularyResult withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -142,7 +142,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -163,7 +163,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -184,7 +184,7 @@ public UpdateVocabularyResult withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -205,7 +205,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
index 955390ce0f..fbe44d3362 100644
--- a/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
+++ b/aws-android-sdk-transcribe/src/main/java/com/amazonaws/services/transcribe/model/VocabularyInfo.java
@@ -19,10 +19,7 @@
 
 /**
  * <p>
- * Provides information about a custom vocabulary. Note that vocabularies for
- * en-AU, en-UK, and fr-CA languages that are in preview are not available. In
- * the console, the vocabulary section will be greyed-out and SDK will return
- * error message.
+ * Provides information about a custom vocabulary.
  * </p>
  */
 public class VocabularyInfo implements Serializable {
@@ -44,7 +41,7 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      */
     private String languageCode;
 
@@ -131,7 +128,7 @@ public VocabularyInfo withVocabularyName(String vocabularyName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @return <p>
      *         The language code of the vocabulary entries.
@@ -149,7 +146,7 @@ public String getLanguageCode() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -170,7 +167,7 @@ public void setLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -191,7 +188,7 @@ public VocabularyInfo withLanguageCode(String languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
@@ -212,7 +209,7 @@ public void setLanguageCode(LanguageCode languageCode) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>en-US, es-US, en-AU, fr-CA, en-GB, de-DE, pt-BR,
-     * fr-FR
+     * fr-FR, it-IT
      *
      * @param languageCode <p>
      *            The language code of the vocabulary entries.
diff --git a/aws-android-sdk-translate/pom.xml b/aws-android-sdk-translate/pom.xml
index 8c214c4faa..51ef73644b 100644
--- a/aws-android-sdk-translate/pom.xml
+++ b/aws-android-sdk-translate/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.11.0</version>
+    <version>2.12.0</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.11.0</version>
+      <version>2.12.0</version>
     </dependency>
   </dependencies>
 
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 457aad0d98..0000000000
Binary files a/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
diff --git a/pom.xml b/pom.xml
index 4e24f0c98e..8b42d9172b 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
   <artifactId>aws-android-sdk-pom</artifactId>
   <packaging>pom</packaging>
   <name>AWS SDK for Android</name>
-  <version>2.11.0</version>
+  <version>2.12.0</version>
   <description>The Amazon Web Services SDK for Android provides Android APIs for building software on AWS’ cost-effective, scalable, and reliable infrastructure products. The AWS SDK for Android allows developers to code against APIs for all of Amazon's infrastructure web services (Amazon S3, Amazon EC2, Amazon SQS, Auto Scaling, etc).</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
