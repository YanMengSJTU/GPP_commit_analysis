diff --git a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java
index f201f32f9a..a340778497 100644
--- a/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java
+++ b/aws-android-sdk-iot/src/test/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManagerTest.java
@@ -15,6 +15,7 @@
 import com.amazonaws.util.StringUtils;
 import com.amazonaws.util.VersionInfoUtils;
 
+import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
 import org.eclipse.paho.client.mqttv3.MqttException;
 import org.eclipse.paho.client.mqttv3.MqttMessage;
 import org.junit.After;
@@ -258,7 +259,7 @@ public void testConnectWebSocket() throws Exception {
 
         TestClientStatusCallback csb = new TestClientStatusCallback();
 
-        testClient.connect(new TestAwsCredentialsProvider(), csb);
+        testClient.connect(new TestAwsCredentialsProvider(), new TestMqttConnectOptions(), csb);
         Thread.sleep(500);  // connect is async, will return before callback is actually set in connect()
         mockClient.mockConnectSuccess();
 
@@ -520,7 +521,7 @@ public void testAutoReconnectSuccessWebSocket() throws Exception {
 
         TestClientStatusCallback csb = new TestClientStatusCallback();
 
-        testClient.connect(new TestAwsCredentialsProvider(), csb);
+        testClient.connect(new TestAwsCredentialsProvider(), new TestMqttConnectOptions(), csb);
         Thread.sleep(500);  // connect is async, will return before callback is actually set in connect()
         mockClient.mockConnectSuccess();
         assertEquals(MqttManagerConnectionState.Connected, testClient.getConnectionState());
@@ -919,7 +920,7 @@ public void testConnectWebSocketNullCredentialsProvider() throws Exception {
 
         TestClientStatusCallback csb = new TestClientStatusCallback();
 
-        testClient.connect((AWSCredentialsProvider)null, csb);
+        testClient.connect((AWSCredentialsProvider)null, (MqttConnectOptions) null, csb);
     }
 
     @Config(manifest = Config.NONE, reportSdk = 15)
@@ -2989,6 +2990,10 @@ public void refresh() {
         }
     }
 
+    private class TestMqttConnectOptions extends MqttConnectOptions {
+
+    }
+
     /**
      * This method checks if the offline publishing queue has the right
      * payload data. The queue is cloned in order to be polled for verification.
