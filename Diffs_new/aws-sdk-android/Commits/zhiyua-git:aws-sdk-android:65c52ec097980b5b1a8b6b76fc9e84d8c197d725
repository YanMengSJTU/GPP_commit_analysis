diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/mediasource/AudioMediaSourceConfiguration.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/mediasource/AudioMediaSourceConfiguration.java
index d4dacb18ac..5547734bbb 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/mediasource/AudioMediaSourceConfiguration.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/mediasource/AudioMediaSourceConfiguration.java
@@ -50,6 +50,7 @@
         private int mSamplesPerFrame;
         private int mFramesPerBuffer;
         private int mTrackId = AUDIO_TRACK_ID;
+        private int mFrameRate = 60;
 
         public Builder withEncodingMimeType(final String mimeType) {
             mMimeType = mimeType;
@@ -106,46 +107,15 @@ public Builder withIsAbsoluteTimecode(final boolean isAbsoluteTimecode) {
             return this;
         }
 
-        public String getMimeType() {
-            return mMimeType;
-        }
-
-        public int getRetentionPeriodInHours() {
-            return mRetentionPeriodInHours;
-        }
-
-        public int getSampleRate() {
-            return mSampleRate;
-        }
-
-        public int getSamplesPerFrame() {
-            return mSamplesPerFrame;
-        }
-
-        public int getFramesPerBuffer() {
-            return mFramesPerBuffer;
-        }
-
-        public String getOutputFileName() {
-            return mOutputFileName;
-        }
-
-        public int getEncodingBitrate() {
-            return mEncodingBitrate;
-        }
-
-        public boolean isEncoderHardwareAccelerated() {
-            return mIsEncoderHardwareAccelerated;
+        public Builder withFrameRate(final int frameRate) {
+            mFrameRate = frameRate;
+            return this;
         }
 
         public byte[] getCodecPrivateData() {
             return mCodecPrivateData;
         }
 
-        public long getFrameTimescale() {
-            return mFrameTimescale;
-        }
-
         public Builder withTrackId(final int trackId) {
             mTrackId = trackId;
             return this;
@@ -257,4 +227,12 @@ public boolean getIsAbsoluteTimecode() {
     public int getTrackId() {
         return mBuilder.mTrackId;
     }
+
+    /**
+     * Get frame rate of audio track
+     * @return frame rate
+     */
+    public int getFrameRate() {
+        return mBuilder.mFrameRate;
+    }
 }
\ No newline at end of file
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/encoding/EncoderFactory.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/encoding/EncoderFactory.java
index 2a30457f40..55277a85b9 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/encoding/EncoderFactory.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/encoding/EncoderFactory.java
@@ -162,6 +162,7 @@ private static MediaFormat configureAudioMediaFormat(final AudioMediaSourceConfi
         format.setInteger(MediaFormat.KEY_SAMPLE_RATE, mediaSourceConfiguration.getSampleRate());
         format.setInteger(MediaFormat.KEY_CHANNEL_COUNT, AUDIO_CHANNEL_COUNT);
         format.setInteger(MediaFormat.KEY_MAX_INPUT_SIZE, 16384);
+        format.setInteger(MediaFormat.KEY_FRAME_RATE, mediaSourceConfiguration.getFrameRate());
 
         Log.d(TAG, "format: " + format);
 
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidAudioVideoMediaSourceConfiguration.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidAudioVideoMediaSourceConfiguration.java
index 875e66c840..9285ff8987 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidAudioVideoMediaSourceConfiguration.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidAudioVideoMediaSourceConfiguration.java
@@ -296,6 +296,11 @@ public T withAudioIsEncoderHardwareAccelerated(final boolean isAccelerated) {
             return (T) this;
         }
 
+        public T withAudioFrameRate(final int frameRate) {
+            audioConfigBuilder.withFrameRate(frameRate);
+            return (T) this;
+        }
+
         @Override
         public AndroidAudioVideoMediaSourceConfiguration build() {
             cameraConfigBuilder.withCodecPrivateData(null);
