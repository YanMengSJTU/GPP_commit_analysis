diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/http/HttpRequestFactory.java b/aws-android-sdk-core/src/main/java/com/amazonaws/http/HttpRequestFactory.java
index 1caec66929..9b25e0fce8 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/http/HttpRequestFactory.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/http/HttpRequestFactory.java
@@ -1,5 +1,6 @@
 /*
  * Copyright 2011-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ * Copyright 2015 Numenta, Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License").
  * You may not use this file except in compliance with the License.
@@ -94,17 +95,9 @@ HttpRequest createHttpRequest(Request<?> request, ClientConfiguration clientConf
             }
         }
 
-        /*
-         * Amazon DynamoDB sets CRC32 checksum in the header 'x-amz-crc32'. If
-         * compression is turned on, then the checksum is calculated on the
-         * compressed data. On the client side, compression is handled by the
-         * HTTP client. In most cases, the client doesn't have access to
-         * compressed data, so there is no way to compute the checksum of
-         * compressed data unless the client compress it. To get around it,
-         * compression is turned off explicitly.
-         */
+        // Enable "gzip" compression by default
         if (request.getHeaders().get("Accept-Encoding") == null) {
-            request.addHeader("Accept-Encoding", "identity");
+            request.addHeader("Accept-Encoding", "gzip");
         }
 
         Map<String, String> headers = new HashMap<String, String>();
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/http/JsonResponseHandler.java b/aws-android-sdk-core/src/main/java/com/amazonaws/http/JsonResponseHandler.java
index c789e8f9a9..b68eaf9081 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/http/JsonResponseHandler.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/http/JsonResponseHandler.java
@@ -1,5 +1,6 @@
 /*
  * Copyright 2010-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ * Copyright 2015 Numenta, Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License").
  * You may not use this file except in compliance with the License.
@@ -35,6 +36,7 @@
 import java.io.InputStreamReader;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.zip.GZIPInputStream;
 
 /**
  * Default implementation of HttpResponseHandler that handles a successful
@@ -93,13 +95,17 @@ public JsonResponseHandler(Unmarshaller<T, JsonUnmarshallerContext> responseUnma
         }
 
         if (!needsConnectionLeftOpen) {
+            InputStream input = content;
             if (CRC32Checksum != null) {
                 crc32ChecksumInputStream = new CRC32ChecksumCalculatingInputStream(content);
-                jsonReader = JsonUtils
-                        .getJsonReader(new InputStreamReader(crc32ChecksumInputStream));
-            } else {
-                jsonReader = JsonUtils.getJsonReader(new InputStreamReader(content));
+                input = crc32ChecksumInputStream;
             }
+            // Check for gzip encoding
+            if ("gzip".equals(response.getHeaders().get("Content-Encoding"))) {
+                // Unzip the input stream
+                input = new GZIPInputStream(input);
+            }
+            jsonReader = JsonUtils.getJsonReader(new InputStreamReader(input));
         }
 
         try {
