diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
index 8c0f2b497b..3e85b26183 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntime.java
@@ -274,10 +274,9 @@ PostContentResult postContent(PostContentRequest postContentRequest)
 
     /**
      * <p>
-     * Sends user input (text or SSML) to Amazon Lex. Client applications can
-     * use this API to send requests to Amazon Lex at runtime. Amazon Lex then
-     * interprets the user input using the machine learning model it built for
-     * the bot.
+     * Sends user input to Amazon Lex. Client applications can use this API to
+     * send requests to Amazon Lex at runtime. Amazon Lex then interprets the
+     * user input using the machine learning model it built for the bot.
      * </p>
      * <p>
      * In response, Amazon Lex returns the next <code>message</code> to convey
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
index f1f042b929..7b85830c0c 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/AmazonLexRuntimeClient.java
@@ -630,10 +630,9 @@ public PostContentResult postContent(PostContentRequest postContentRequest)
 
     /**
      * <p>
-     * Sends user input (text or SSML) to Amazon Lex. Client applications can
-     * use this API to send requests to Amazon Lex at runtime. Amazon Lex then
-     * interprets the user input using the machine learning model it built for
-     * the bot.
+     * Sends user input to Amazon Lex. Client applications can use this API to
+     * send requests to Amazon Lex at runtime. Amazon Lex then interprets the
+     * user input using the machine learning model it built for the bot.
      * </p>
      * <p>
      * In response, Amazon Lex returns the next <code>message</code> to convey
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionRequest.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionRequest.java
index 03a7b5f424..a46295d084 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionRequest.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionRequest.java
@@ -51,6 +51,22 @@
      */
     private String userId;
 
+    /**
+     * <p>
+     * A string used to filter the intents returned in the
+     * <code>recentIntentSummaryView</code> structure.
+     * </p>
+     * <p>
+     * When you specify a filter, only intents with their
+     * <code>checkpointLabel</code> field set to that string are returned.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     */
+    private String checkpointLabelFilter;
+
     /**
      * <p>
      * The name of the bot that contains the session data.
@@ -204,6 +220,96 @@ public GetSessionRequest withUserId(String userId) {
         return this;
     }
 
+    /**
+     * <p>
+     * A string used to filter the intents returned in the
+     * <code>recentIntentSummaryView</code> structure.
+     * </p>
+     * <p>
+     * When you specify a filter, only intents with their
+     * <code>checkpointLabel</code> field set to that string are returned.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @return <p>
+     *         A string used to filter the intents returned in the
+     *         <code>recentIntentSummaryView</code> structure.
+     *         </p>
+     *         <p>
+     *         When you specify a filter, only intents with their
+     *         <code>checkpointLabel</code> field set to that string are
+     *         returned.
+     *         </p>
+     */
+    public String getCheckpointLabelFilter() {
+        return checkpointLabelFilter;
+    }
+
+    /**
+     * <p>
+     * A string used to filter the intents returned in the
+     * <code>recentIntentSummaryView</code> structure.
+     * </p>
+     * <p>
+     * When you specify a filter, only intents with their
+     * <code>checkpointLabel</code> field set to that string are returned.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @param checkpointLabelFilter <p>
+     *            A string used to filter the intents returned in the
+     *            <code>recentIntentSummaryView</code> structure.
+     *            </p>
+     *            <p>
+     *            When you specify a filter, only intents with their
+     *            <code>checkpointLabel</code> field set to that string are
+     *            returned.
+     *            </p>
+     */
+    public void setCheckpointLabelFilter(String checkpointLabelFilter) {
+        this.checkpointLabelFilter = checkpointLabelFilter;
+    }
+
+    /**
+     * <p>
+     * A string used to filter the intents returned in the
+     * <code>recentIntentSummaryView</code> structure.
+     * </p>
+     * <p>
+     * When you specify a filter, only intents with their
+     * <code>checkpointLabel</code> field set to that string are returned.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @param checkpointLabelFilter <p>
+     *            A string used to filter the intents returned in the
+     *            <code>recentIntentSummaryView</code> structure.
+     *            </p>
+     *            <p>
+     *            When you specify a filter, only intents with their
+     *            <code>checkpointLabel</code> field set to that string are
+     *            returned.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public GetSessionRequest withCheckpointLabelFilter(String checkpointLabelFilter) {
+        this.checkpointLabelFilter = checkpointLabelFilter;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -220,7 +326,9 @@ public String toString() {
         if (getBotAlias() != null)
             sb.append("botAlias: " + getBotAlias() + ",");
         if (getUserId() != null)
-            sb.append("userId: " + getUserId());
+            sb.append("userId: " + getUserId() + ",");
+        if (getCheckpointLabelFilter() != null)
+            sb.append("checkpointLabelFilter: " + getCheckpointLabelFilter());
         sb.append("}");
         return sb.toString();
     }
@@ -233,6 +341,9 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getBotName() == null) ? 0 : getBotName().hashCode());
         hashCode = prime * hashCode + ((getBotAlias() == null) ? 0 : getBotAlias().hashCode());
         hashCode = prime * hashCode + ((getUserId() == null) ? 0 : getUserId().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCheckpointLabelFilter() == null) ? 0 : getCheckpointLabelFilter().hashCode());
         return hashCode;
     }
 
@@ -259,6 +370,11 @@ public boolean equals(Object obj) {
             return false;
         if (other.getUserId() != null && other.getUserId().equals(this.getUserId()) == false)
             return false;
+        if (other.getCheckpointLabelFilter() == null ^ this.getCheckpointLabelFilter() == null)
+            return false;
+        if (other.getCheckpointLabelFilter() != null
+                && other.getCheckpointLabelFilter().equals(this.getCheckpointLabelFilter()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionResult.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionResult.java
index d5733b4908..00b30c7406 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionResult.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/GetSessionResult.java
@@ -25,6 +25,10 @@
      * used in the session, the <code>recentIntentSummaryView</code> operation
      * contains information about the last three intents used.
      * </p>
+     * <p>
+     * If you set the <code>checkpointLabelFilter</code> parameter in the
+     * request, the array contains only the intents with the specified label.
+     * </p>
      */
     private java.util.List<IntentSummary> recentIntentSummaryView;
 
@@ -58,6 +62,10 @@
      * used in the session, the <code>recentIntentSummaryView</code> operation
      * contains information about the last three intents used.
      * </p>
+     * <p>
+     * If you set the <code>checkpointLabelFilter</code> parameter in the
+     * request, the array contains only the intents with the specified label.
+     * </p>
      *
      * @return <p>
      *         An array of information about the intents used in the session.
@@ -66,6 +74,11 @@
      *         <code>recentIntentSummaryView</code> operation contains
      *         information about the last three intents used.
      *         </p>
+     *         <p>
+     *         If you set the <code>checkpointLabelFilter</code> parameter in
+     *         the request, the array contains only the intents with the
+     *         specified label.
+     *         </p>
      */
     public java.util.List<IntentSummary> getRecentIntentSummaryView() {
         return recentIntentSummaryView;
@@ -78,6 +91,10 @@
      * used in the session, the <code>recentIntentSummaryView</code> operation
      * contains information about the last three intents used.
      * </p>
+     * <p>
+     * If you set the <code>checkpointLabelFilter</code> parameter in the
+     * request, the array contains only the intents with the specified label.
+     * </p>
      *
      * @param recentIntentSummaryView <p>
      *            An array of information about the intents used in the session.
@@ -86,6 +103,11 @@
      *            <code>recentIntentSummaryView</code> operation contains
      *            information about the last three intents used.
      *            </p>
+     *            <p>
+     *            If you set the <code>checkpointLabelFilter</code> parameter in
+     *            the request, the array contains only the intents with the
+     *            specified label.
+     *            </p>
      */
     public void setRecentIntentSummaryView(
             java.util.Collection<IntentSummary> recentIntentSummaryView) {
@@ -106,6 +128,10 @@ public void setRecentIntentSummaryView(
      * contains information about the last three intents used.
      * </p>
      * <p>
+     * If you set the <code>checkpointLabelFilter</code> parameter in the
+     * request, the array contains only the intents with the specified label.
+     * </p>
+     * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
@@ -116,6 +142,11 @@ public void setRecentIntentSummaryView(
      *            <code>recentIntentSummaryView</code> operation contains
      *            information about the last three intents used.
      *            </p>
+     *            <p>
+     *            If you set the <code>checkpointLabelFilter</code> parameter in
+     *            the request, the array contains only the intents with the
+     *            specified label.
+     *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
@@ -138,6 +169,10 @@ public GetSessionResult withRecentIntentSummaryView(IntentSummary... recentInten
      * contains information about the last three intents used.
      * </p>
      * <p>
+     * If you set the <code>checkpointLabelFilter</code> parameter in the
+     * request, the array contains only the intents with the specified label.
+     * </p>
+     * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
@@ -148,6 +183,11 @@ public GetSessionResult withRecentIntentSummaryView(IntentSummary... recentInten
      *            <code>recentIntentSummaryView</code> operation contains
      *            information about the last three intents used.
      *            </p>
+     *            <p>
+     *            If you set the <code>checkpointLabelFilter</code> parameter in
+     *            the request, the array contains only the intents with the
+     *            specified label.
+     *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/IntentSummary.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/IntentSummary.java
index 3f1bfce901..d234b82076 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/IntentSummary.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/IntentSummary.java
@@ -32,6 +32,23 @@
      */
     private String intentName;
 
+    /**
+     * <p>
+     * A user-defined label that identifies a particular intent. You can use
+     * this label to return to a previous intent.
+     * </p>
+     * <p>
+     * Use the <code>checkpointLabelFilter</code> parameter of the
+     * <code>GetSessionRequest</code> operation to filter the intents returned
+     * by the operation to those with only the specified label.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     */
+    private String checkpointLabel;
+
     /**
      * <p>
      * Map of the slots that have been gathered and their values.
@@ -197,6 +214,101 @@ public IntentSummary withIntentName(String intentName) {
         return this;
     }
 
+    /**
+     * <p>
+     * A user-defined label that identifies a particular intent. You can use
+     * this label to return to a previous intent.
+     * </p>
+     * <p>
+     * Use the <code>checkpointLabelFilter</code> parameter of the
+     * <code>GetSessionRequest</code> operation to filter the intents returned
+     * by the operation to those with only the specified label.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @return <p>
+     *         A user-defined label that identifies a particular intent. You can
+     *         use this label to return to a previous intent.
+     *         </p>
+     *         <p>
+     *         Use the <code>checkpointLabelFilter</code> parameter of the
+     *         <code>GetSessionRequest</code> operation to filter the intents
+     *         returned by the operation to those with only the specified label.
+     *         </p>
+     */
+    public String getCheckpointLabel() {
+        return checkpointLabel;
+    }
+
+    /**
+     * <p>
+     * A user-defined label that identifies a particular intent. You can use
+     * this label to return to a previous intent.
+     * </p>
+     * <p>
+     * Use the <code>checkpointLabelFilter</code> parameter of the
+     * <code>GetSessionRequest</code> operation to filter the intents returned
+     * by the operation to those with only the specified label.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @param checkpointLabel <p>
+     *            A user-defined label that identifies a particular intent. You
+     *            can use this label to return to a previous intent.
+     *            </p>
+     *            <p>
+     *            Use the <code>checkpointLabelFilter</code> parameter of the
+     *            <code>GetSessionRequest</code> operation to filter the intents
+     *            returned by the operation to those with only the specified
+     *            label.
+     *            </p>
+     */
+    public void setCheckpointLabel(String checkpointLabel) {
+        this.checkpointLabel = checkpointLabel;
+    }
+
+    /**
+     * <p>
+     * A user-defined label that identifies a particular intent. You can use
+     * this label to return to a previous intent.
+     * </p>
+     * <p>
+     * Use the <code>checkpointLabelFilter</code> parameter of the
+     * <code>GetSessionRequest</code> operation to filter the intents returned
+     * by the operation to those with only the specified label.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 255<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9-]+<br/>
+     *
+     * @param checkpointLabel <p>
+     *            A user-defined label that identifies a particular intent. You
+     *            can use this label to return to a previous intent.
+     *            </p>
+     *            <p>
+     *            Use the <code>checkpointLabelFilter</code> parameter of the
+     *            <code>GetSessionRequest</code> operation to filter the intents
+     *            returned by the operation to those with only the specified
+     *            label.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public IntentSummary withCheckpointLabel(String checkpointLabel) {
+        this.checkpointLabel = checkpointLabel;
+        return this;
+    }
+
     /**
      * <p>
      * Map of the slots that have been gathered and their values.
@@ -1387,6 +1499,8 @@ public String toString() {
         sb.append("{");
         if (getIntentName() != null)
             sb.append("intentName: " + getIntentName() + ",");
+        if (getCheckpointLabel() != null)
+            sb.append("checkpointLabel: " + getCheckpointLabel() + ",");
         if (getSlots() != null)
             sb.append("slots: " + getSlots() + ",");
         if (getConfirmationStatus() != null)
@@ -1407,6 +1521,8 @@ public int hashCode() {
         int hashCode = 1;
 
         hashCode = prime * hashCode + ((getIntentName() == null) ? 0 : getIntentName().hashCode());
+        hashCode = prime * hashCode
+                + ((getCheckpointLabel() == null) ? 0 : getCheckpointLabel().hashCode());
         hashCode = prime * hashCode + ((getSlots() == null) ? 0 : getSlots().hashCode());
         hashCode = prime * hashCode
                 + ((getConfirmationStatus() == null) ? 0 : getConfirmationStatus().hashCode());
@@ -1435,6 +1551,11 @@ public boolean equals(Object obj) {
         if (other.getIntentName() != null
                 && other.getIntentName().equals(this.getIntentName()) == false)
             return false;
+        if (other.getCheckpointLabel() == null ^ this.getCheckpointLabel() == null)
+            return false;
+        if (other.getCheckpointLabel() != null
+                && other.getCheckpointLabel().equals(this.getCheckpointLabel()) == false)
+            return false;
         if (other.getSlots() == null ^ this.getSlots() == null)
             return false;
         if (other.getSlots() != null && other.getSlots().equals(this.getSlots()) == false)
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
index 80800b60f3..be10261ee9 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PostTextRequest.java
@@ -21,10 +21,9 @@
 
 /**
  * <p>
- * Sends user input (text or SSML) to Amazon Lex. Client applications can use
- * this API to send requests to Amazon Lex at runtime. Amazon Lex then
- * interprets the user input using the machine learning model it built for the
- * bot.
+ * Sends user input to Amazon Lex. Client applications can use this API to send
+ * requests to Amazon Lex at runtime. Amazon Lex then interprets the user input
+ * using the machine learning model it built for the bot.
  * </p>
  * <p>
  * In response, Amazon Lex returns the next <code>message</code> to convey to
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PutSessionRequest.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PutSessionRequest.java
index 206c8cd7a9..14c9b72868 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PutSessionRequest.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/PutSessionRequest.java
@@ -74,6 +74,46 @@
      */
     private DialogAction dialogAction;
 
+    /**
+     * <p>
+     * A summary of the recent intents for the bot. You can use the intent
+     * summary view to set a checkpoint label on an intent and modify attributes
+     * of intents. You can also use it to remove or add intent summary objects
+     * to the list.
+     * </p>
+     * <p>
+     * An intent that you modify or add to the list must make sense for the bot.
+     * For example, the intent name must be valid for the bot. You must provide
+     * valid values for:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>intentName</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * slot names
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>slotToElict</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If you send the <code>recentIntentSummaryView</code> parameter in a
+     * <code>PutSession</code> request, the contents of the new summary view
+     * replaces the old summary view. For example, if a <code>GetSession</code>
+     * request returns three intents in the summary view and you call
+     * <code>PutSession</code> with one intent in the summary view, the next
+     * call to <code>GetSession</code> will only return one intent.
+     * </p>
+     */
+    private java.util.List<IntentSummary> recentIntentSummaryView;
+
     /**
      * <p>
      * The message that Amazon Lex returns in the response can be either text or
@@ -437,6 +477,352 @@ public PutSessionRequest withDialogAction(DialogAction dialogAction) {
         return this;
     }
 
+    /**
+     * <p>
+     * A summary of the recent intents for the bot. You can use the intent
+     * summary view to set a checkpoint label on an intent and modify attributes
+     * of intents. You can also use it to remove or add intent summary objects
+     * to the list.
+     * </p>
+     * <p>
+     * An intent that you modify or add to the list must make sense for the bot.
+     * For example, the intent name must be valid for the bot. You must provide
+     * valid values for:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>intentName</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * slot names
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>slotToElict</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If you send the <code>recentIntentSummaryView</code> parameter in a
+     * <code>PutSession</code> request, the contents of the new summary view
+     * replaces the old summary view. For example, if a <code>GetSession</code>
+     * request returns three intents in the summary view and you call
+     * <code>PutSession</code> with one intent in the summary view, the next
+     * call to <code>GetSession</code> will only return one intent.
+     * </p>
+     *
+     * @return <p>
+     *         A summary of the recent intents for the bot. You can use the
+     *         intent summary view to set a checkpoint label on an intent and
+     *         modify attributes of intents. You can also use it to remove or
+     *         add intent summary objects to the list.
+     *         </p>
+     *         <p>
+     *         An intent that you modify or add to the list must make sense for
+     *         the bot. For example, the intent name must be valid for the bot.
+     *         You must provide valid values for:
+     *         </p>
+     *         <ul>
+     *         <li>
+     *         <p>
+     *         <code>intentName</code>
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         slot names
+     *         </p>
+     *         </li>
+     *         <li>
+     *         <p>
+     *         <code>slotToElict</code>
+     *         </p>
+     *         </li>
+     *         </ul>
+     *         <p>
+     *         If you send the <code>recentIntentSummaryView</code> parameter in
+     *         a <code>PutSession</code> request, the contents of the new
+     *         summary view replaces the old summary view. For example, if a
+     *         <code>GetSession</code> request returns three intents in the
+     *         summary view and you call <code>PutSession</code> with one intent
+     *         in the summary view, the next call to <code>GetSession</code>
+     *         will only return one intent.
+     *         </p>
+     */
+    public java.util.List<IntentSummary> getRecentIntentSummaryView() {
+        return recentIntentSummaryView;
+    }
+
+    /**
+     * <p>
+     * A summary of the recent intents for the bot. You can use the intent
+     * summary view to set a checkpoint label on an intent and modify attributes
+     * of intents. You can also use it to remove or add intent summary objects
+     * to the list.
+     * </p>
+     * <p>
+     * An intent that you modify or add to the list must make sense for the bot.
+     * For example, the intent name must be valid for the bot. You must provide
+     * valid values for:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>intentName</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * slot names
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>slotToElict</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If you send the <code>recentIntentSummaryView</code> parameter in a
+     * <code>PutSession</code> request, the contents of the new summary view
+     * replaces the old summary view. For example, if a <code>GetSession</code>
+     * request returns three intents in the summary view and you call
+     * <code>PutSession</code> with one intent in the summary view, the next
+     * call to <code>GetSession</code> will only return one intent.
+     * </p>
+     *
+     * @param recentIntentSummaryView <p>
+     *            A summary of the recent intents for the bot. You can use the
+     *            intent summary view to set a checkpoint label on an intent and
+     *            modify attributes of intents. You can also use it to remove or
+     *            add intent summary objects to the list.
+     *            </p>
+     *            <p>
+     *            An intent that you modify or add to the list must make sense
+     *            for the bot. For example, the intent name must be valid for
+     *            the bot. You must provide valid values for:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>intentName</code>
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            slot names
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>slotToElict</code>
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            If you send the <code>recentIntentSummaryView</code> parameter
+     *            in a <code>PutSession</code> request, the contents of the new
+     *            summary view replaces the old summary view. For example, if a
+     *            <code>GetSession</code> request returns three intents in the
+     *            summary view and you call <code>PutSession</code> with one
+     *            intent in the summary view, the next call to
+     *            <code>GetSession</code> will only return one intent.
+     *            </p>
+     */
+    public void setRecentIntentSummaryView(
+            java.util.Collection<IntentSummary> recentIntentSummaryView) {
+        if (recentIntentSummaryView == null) {
+            this.recentIntentSummaryView = null;
+            return;
+        }
+
+        this.recentIntentSummaryView = new java.util.ArrayList<IntentSummary>(
+                recentIntentSummaryView);
+    }
+
+    /**
+     * <p>
+     * A summary of the recent intents for the bot. You can use the intent
+     * summary view to set a checkpoint label on an intent and modify attributes
+     * of intents. You can also use it to remove or add intent summary objects
+     * to the list.
+     * </p>
+     * <p>
+     * An intent that you modify or add to the list must make sense for the bot.
+     * For example, the intent name must be valid for the bot. You must provide
+     * valid values for:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>intentName</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * slot names
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>slotToElict</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If you send the <code>recentIntentSummaryView</code> parameter in a
+     * <code>PutSession</code> request, the contents of the new summary view
+     * replaces the old summary view. For example, if a <code>GetSession</code>
+     * request returns three intents in the summary view and you call
+     * <code>PutSession</code> with one intent in the summary view, the next
+     * call to <code>GetSession</code> will only return one intent.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param recentIntentSummaryView <p>
+     *            A summary of the recent intents for the bot. You can use the
+     *            intent summary view to set a checkpoint label on an intent and
+     *            modify attributes of intents. You can also use it to remove or
+     *            add intent summary objects to the list.
+     *            </p>
+     *            <p>
+     *            An intent that you modify or add to the list must make sense
+     *            for the bot. For example, the intent name must be valid for
+     *            the bot. You must provide valid values for:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>intentName</code>
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            slot names
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>slotToElict</code>
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            If you send the <code>recentIntentSummaryView</code> parameter
+     *            in a <code>PutSession</code> request, the contents of the new
+     *            summary view replaces the old summary view. For example, if a
+     *            <code>GetSession</code> request returns three intents in the
+     *            summary view and you call <code>PutSession</code> with one
+     *            intent in the summary view, the next call to
+     *            <code>GetSession</code> will only return one intent.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PutSessionRequest withRecentIntentSummaryView(IntentSummary... recentIntentSummaryView) {
+        if (getRecentIntentSummaryView() == null) {
+            this.recentIntentSummaryView = new java.util.ArrayList<IntentSummary>(
+                    recentIntentSummaryView.length);
+        }
+        for (IntentSummary value : recentIntentSummaryView) {
+            this.recentIntentSummaryView.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A summary of the recent intents for the bot. You can use the intent
+     * summary view to set a checkpoint label on an intent and modify attributes
+     * of intents. You can also use it to remove or add intent summary objects
+     * to the list.
+     * </p>
+     * <p>
+     * An intent that you modify or add to the list must make sense for the bot.
+     * For example, the intent name must be valid for the bot. You must provide
+     * valid values for:
+     * </p>
+     * <ul>
+     * <li>
+     * <p>
+     * <code>intentName</code>
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * slot names
+     * </p>
+     * </li>
+     * <li>
+     * <p>
+     * <code>slotToElict</code>
+     * </p>
+     * </li>
+     * </ul>
+     * <p>
+     * If you send the <code>recentIntentSummaryView</code> parameter in a
+     * <code>PutSession</code> request, the contents of the new summary view
+     * replaces the old summary view. For example, if a <code>GetSession</code>
+     * request returns three intents in the summary view and you call
+     * <code>PutSession</code> with one intent in the summary view, the next
+     * call to <code>GetSession</code> will only return one intent.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param recentIntentSummaryView <p>
+     *            A summary of the recent intents for the bot. You can use the
+     *            intent summary view to set a checkpoint label on an intent and
+     *            modify attributes of intents. You can also use it to remove or
+     *            add intent summary objects to the list.
+     *            </p>
+     *            <p>
+     *            An intent that you modify or add to the list must make sense
+     *            for the bot. For example, the intent name must be valid for
+     *            the bot. You must provide valid values for:
+     *            </p>
+     *            <ul>
+     *            <li>
+     *            <p>
+     *            <code>intentName</code>
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            slot names
+     *            </p>
+     *            </li>
+     *            <li>
+     *            <p>
+     *            <code>slotToElict</code>
+     *            </p>
+     *            </li>
+     *            </ul>
+     *            <p>
+     *            If you send the <code>recentIntentSummaryView</code> parameter
+     *            in a <code>PutSession</code> request, the contents of the new
+     *            summary view replaces the old summary view. For example, if a
+     *            <code>GetSession</code> request returns three intents in the
+     *            summary view and you call <code>PutSession</code> with one
+     *            intent in the summary view, the next call to
+     *            <code>GetSession</code> will only return one intent.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PutSessionRequest withRecentIntentSummaryView(
+            java.util.Collection<IntentSummary> recentIntentSummaryView) {
+        setRecentIntentSummaryView(recentIntentSummaryView);
+        return this;
+    }
+
     /**
      * <p>
      * The message that Amazon Lex returns in the response can be either text or
@@ -841,6 +1227,8 @@ public String toString() {
             sb.append("sessionAttributes: " + getSessionAttributes() + ",");
         if (getDialogAction() != null)
             sb.append("dialogAction: " + getDialogAction() + ",");
+        if (getRecentIntentSummaryView() != null)
+            sb.append("recentIntentSummaryView: " + getRecentIntentSummaryView() + ",");
         if (getAccept() != null)
             sb.append("accept: " + getAccept());
         sb.append("}");
@@ -859,6 +1247,10 @@ public int hashCode() {
                 + ((getSessionAttributes() == null) ? 0 : getSessionAttributes().hashCode());
         hashCode = prime * hashCode
                 + ((getDialogAction() == null) ? 0 : getDialogAction().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getRecentIntentSummaryView() == null) ? 0 : getRecentIntentSummaryView()
+                        .hashCode());
         hashCode = prime * hashCode + ((getAccept() == null) ? 0 : getAccept().hashCode());
         return hashCode;
     }
@@ -896,6 +1288,11 @@ public boolean equals(Object obj) {
         if (other.getDialogAction() != null
                 && other.getDialogAction().equals(this.getDialogAction()) == false)
             return false;
+        if (other.getRecentIntentSummaryView() == null ^ this.getRecentIntentSummaryView() == null)
+            return false;
+        if (other.getRecentIntentSummaryView() != null
+                && other.getRecentIntentSummaryView().equals(this.getRecentIntentSummaryView()) == false)
+            return false;
         if (other.getAccept() == null ^ this.getAccept() == null)
             return false;
         if (other.getAccept() != null && other.getAccept().equals(this.getAccept()) == false)
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/GetSessionRequestMarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/GetSessionRequestMarshaller.java
index 8abf77c35d..b34b6d2fc8 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/GetSessionRequestMarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/GetSessionRequestMarshaller.java
@@ -50,7 +50,7 @@
                 getSessionRequest, "AmazonLexRuntime");
         request.setHttpMethod(HttpMethodName.GET);
 
-        String uriResourcePath = "/bot/{botName}/alias/{botAlias}/user/{userId}/session";
+        String uriResourcePath = "/bot/{botName}/alias/{botAlias}/user/{userId}/session/";
         uriResourcePath = uriResourcePath.replace(
                 "{botName}",
                 (getSessionRequest.getBotName() == null) ? "" : StringUtils
@@ -63,6 +63,10 @@
                 "{userId}",
                 (getSessionRequest.getUserId() == null) ? "" : StringUtils
                         .fromString(getSessionRequest.getUserId()));
+        if (getSessionRequest.getCheckpointLabelFilter() != null) {
+            request.addParameter("checkpointLabelFilter",
+                    StringUtils.fromString(getSessionRequest.getCheckpointLabelFilter()));
+        }
         request.setResourcePath(uriResourcePath);
         if (!request.getHeaders().containsKey("Content-Type")) {
             request.addHeader("Content-Type", "application/x-amz-json-1.1");
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonMarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonMarshaller.java
index d76fbfca50..5f346b92b7 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonMarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonMarshaller.java
@@ -30,6 +30,11 @@ public void marshall(IntentSummary intentSummary, AwsJsonWriter jsonWriter) thro
             jsonWriter.name("intentName");
             jsonWriter.value(intentName);
         }
+        if (intentSummary.getCheckpointLabel() != null) {
+            String checkpointLabel = intentSummary.getCheckpointLabel();
+            jsonWriter.name("checkpointLabel");
+            jsonWriter.value(checkpointLabel);
+        }
         if (intentSummary.getSlots() != null) {
             java.util.Map<String, String> slots = intentSummary.getSlots();
             jsonWriter.name("slots");
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonUnmarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonUnmarshaller.java
index 6ef28f797f..840ab0d2bd 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonUnmarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/IntentSummaryJsonUnmarshaller.java
@@ -38,6 +38,9 @@ public IntentSummary unmarshall(JsonUnmarshallerContext context) throws Exceptio
             if (name.equals("intentName")) {
                 intentSummary.setIntentName(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("checkpointLabel")) {
+                intentSummary.setCheckpointLabel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else if (name.equals("slots")) {
                 intentSummary.setSlots(new MapUnmarshaller<String>(StringJsonUnmarshaller
                         .getInstance()
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PutSessionRequestMarshaller.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PutSessionRequestMarshaller.java
index 8602975de6..1e77501223 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PutSessionRequestMarshaller.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/services/lexrts/model/transform/PutSessionRequestMarshaller.java
@@ -92,6 +92,19 @@
                 jsonWriter.name("dialogAction");
                 DialogActionJsonMarshaller.getInstance().marshall(dialogAction, jsonWriter);
             }
+            if (putSessionRequest.getRecentIntentSummaryView() != null) {
+                java.util.List<IntentSummary> recentIntentSummaryView = putSessionRequest
+                        .getRecentIntentSummaryView();
+                jsonWriter.name("recentIntentSummaryView");
+                jsonWriter.beginArray();
+                for (IntentSummary recentIntentSummaryViewItem : recentIntentSummaryView) {
+                    if (recentIntentSummaryViewItem != null) {
+                        IntentSummaryJsonMarshaller.getInstance().marshall(
+                                recentIntentSummaryViewItem, jsonWriter);
+                    }
+                }
+                jsonWriter.endArray();
+            }
 
             jsonWriter.endObject();
             jsonWriter.close();
