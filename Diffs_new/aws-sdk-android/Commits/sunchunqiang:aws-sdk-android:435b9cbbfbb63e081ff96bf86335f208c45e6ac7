diff --git a/.circleci/config.yml b/.circleci/config.yml
index 6e282a1237..edd1a0e9c1 100644
--- a/.circleci/config.yml
+++ b/.circleci/config.yml
@@ -47,6 +47,10 @@ commands:
             aws configure --profile android_sdk_release set region us-east-1
             echo -e "[android_sdk_release]\naws_access_key_id=${AWS_ACCESS_KEY_ID_ANDROID}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY_ANDROID}\n" >> ~/.aws/credentials
 
+            aws configure --profile android_sdk_test set region us-east-1
+            echo -e "[android_sdk_test]\naws_access_key_id=${AWS_ACCESS_KEY_ID_TEST}\naws_secret_access_key=${AWS_SECRET_ACCESS_KEY_TEST}\n" >> ~/.aws/credentials
+           
+
   set_enviroment_variables:
     description: >-
       set environment variables
@@ -72,6 +76,12 @@ commands:
             release_type=$(echo "$release_tag" | sed 's|\(.*\)_v\([0-9\.]*\).*|\1|')
             echo "export release_type=$release_type" >> $BASH_ENV
 
+            pre_name=$(echo "${CIRCLE_SHA1}" | cut -c1-7)
+            override_test_varaible_name=OVERRIDE_TEST_${pre_name}
+            echo "export override_test_varaible_name=$override_test_varaible_name" >> $BASH_ENV   
+            
+
+
   setup_emulator:
     description: >-
       setup emulator
@@ -195,30 +205,32 @@ commands:
       - run:
           name: checkiftestcanoverrided 
           command: |
-              if [ "${OVERRIDE_TEST}" == "TRUE" ]; then
+              echo "override_test_varaible_name=$override_test_varaible_name"
+              override_test_value=$(eval "echo $"${override_test_varaible_name}"")
+              if [ "${override_test_value}" == "TRUE" ]; then
                 echo "project enviroment variabe OVERRIDE_TEST is set with TRUE, skip all tests"
                 circleci step halt
               fi    
   skip_job_if_required:
     description: >-
-      skip the test job for ciecleci script test
+      skip job unless required
     steps:
       - run:
           name: checkifjobcanskip 
           command: |
             echo "check if job can be skipped"
-            # we can add script here to halt a job for circleci script test
-            declare -a jobs=("prepare_release_sdk" "merge_to_master" "bump_sdk_version")
-            for i in "${jobs[@]}"
-            do
-              echo "$i":"${CIRCLE_JOB}"
-              if [ "$i" == "${CIRCLE_JOB}" ]
-              then 
-                echo "not skip job $i"
-                exit 0
-              fi
-            done
-            circleci step halt
+            # # we can add script here to halt a job for circleci script test
+            # declare -a jobs=("prepare_release_sdk" "merge_to_master" "bump_sdk_version")
+            # for i in "${jobs[@]}"
+            # do
+            #   echo "$i":"${CIRCLE_JOB}"
+            #   if [ "$i" == "${CIRCLE_JOB}" ]
+            #   then 
+            #     echo "not skip job $i"
+            #     exit 0
+            #   fi
+            # done
+            # circleci step halt
 jobs:
   build:
     working_directory: ~/code
@@ -543,15 +555,33 @@ jobs:
       JVM_OPTS: -Xmx1024m
     steps:
       - skip_job_if_required
+      - set_enviroment_variables
+      - run:
+          name: get ovrride test variabe name 
+          command: |
+            echo "override_test_varaible_name=$override_test_varaible_name"
       - run:
           name: reset OVERRIDE_TEST environment variabe 
           command: |
-            parameters='{"name":"OVERRIDE_TEST","value":"FALSE"}'
-            curl -X POST \
-              -H "Content-type: application/json" \
-              -H "Accept: application/json" \
-              -d "$parameters" \
-              "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/envvar?circle-token=${CIRCLE_API_USER_TOKEN}"
+            override_test_value=$(eval "echo $"${override_test_varaible_name}"")
+            if ! [ -z "$override_test_value" ]
+            then
+               echo "reset  ${override_test_varaible_name} value"
+              parameters='{"name":"'${override_test_varaible_name}'","value":"FALSE"}'
+              curl -X POST \
+                -H "Content-type: application/json" \
+                -H "Accept: application/json" \
+                -d "$parameters" \
+                "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/envvar?circle-token=${CIRCLE_API_USER_TOKEN}"
+            fi
+      - checkout
+      - configure_aws
+      - run:
+          name: clean up aws server 
+          command: |
+            set +e
+            bash CircleciScripts/cleanup_aws.sh
+
   post_integrationtest:
     docker:
       - image: circleci/android:api-27-alpha
@@ -576,6 +606,7 @@ jobs:
       JVM_OPTS: -Xmx3200m
     steps:
       - skip_job_if_required
+      - set_enviroment_variables
       - override_test_job
       - checkout
       - skip_job_if_triggered_by_circleci      
@@ -777,8 +808,11 @@ jobs:
               exit 1
             fi 
             echo "release_version=[$release_version]"          
-            bumpversion_repo_user=sunchunqiang
-            bumpversion_repo_name=aws-sdk-android
+            bumpversion_repo_user=${CIRCLE_PROJECT_USERNAME}
+            bumpversion_repo_name=${CIRCLE_PROJECT_REPONAME}
+            echo "bumpversion_repo_user:$bumpversion_repo_user"
+            echo "bumpversion_repo_name:$bumpversion_repo_name"
+            
             bump_version_message="[bump version $release_version]"
             bump_version_pr_title="[bump version $release_version]"
             target_branch=develop
@@ -794,7 +828,7 @@ jobs:
           name: bump version
           command: |
             cp -R ${bumpversion_repo_name}/CircleciScripts/ CircleciScripts/
-            python3 CircleciScripts/bump_sdk_version.py "$(pwd)/${bumpversion_repo_name}" $release_version 1.0.0
+            python3 CircleciScripts/bump_sdk_version.py "$(pwd)/${bumpversion_repo_name}" $release_version
       - bump_version_post
 
   merge_to_master:
