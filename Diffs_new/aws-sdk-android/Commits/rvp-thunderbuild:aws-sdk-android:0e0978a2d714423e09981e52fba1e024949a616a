diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
index 9d126e0fa6..500046e16a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/mobileconnectors/iot/AWSIotMqttManager.java
@@ -963,8 +963,8 @@ void reconnectToSession() {
                     if (scheduleReconnect()) {
                         connectionState = MqttManagerConnectionState.Reconnecting;
                     } else {
-                        //TODO: how to terminate the reconnect handler thread here?
                         connectionState = MqttManagerConnectionState.Disconnected;
+                        clearReconnectHandlerThread();
                     }
                     userConnectionCallback();
                 }
@@ -1001,8 +1001,8 @@ public void onFailure(IMqttToken asyncActionToken, Throwable e) {
                             connectionState = MqttManagerConnectionState.Reconnecting;
                             userConnectionCallback();
                         } else {
-                            //TODO: how to terminate the reconnect handler thread here?
                             connectionState = MqttManagerConnectionState.Disconnected;
+                            clearReconnectHandlerThread();
                             userConnectionCallback();
                         }
                     }
@@ -1013,8 +1013,8 @@ public void onFailure(IMqttToken asyncActionToken, Throwable e) {
                     connectionState = MqttManagerConnectionState.Reconnecting;
                     userConnectionCallback();
                 } else {
-                    //TODO: how to terminate the reconnect handler thread here?
                     connectionState = MqttManagerConnectionState.Disconnected;
+                    clearReconnectHandlerThread();
                     userConnectionCallback(e);
                 }
             }
