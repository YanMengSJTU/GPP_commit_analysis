diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIot.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIot.java
index 6372c46a50..5fa7cb880b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIot.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIot.java
@@ -283,8 +283,8 @@ void attachPrincipalPolicy(AttachPrincipalPolicyRequest attachPrincipalPolicyReq
 
     /**
      * <p>
-     * Associates a Device Defender security profile with a thing group or with
-     * this account. Each thing group or account can have up to five security
+     * Associates a Device Defender security profile with a thing group or this
+     * account. Each thing group or account can have up to five security
      * profiles associated with it.
      * </p>
      * 
@@ -339,6 +339,32 @@ AttachThingPrincipalResult attachThingPrincipal(
             AttachThingPrincipalRequest attachThingPrincipalRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Cancels a mitigation action task that is in progress. If the task is not
+     * in progress, an InvalidRequestException occurs.
+     * </p>
+     * 
+     * @param cancelAuditMitigationActionsTaskRequest
+     * @return cancelAuditMitigationActionsTaskResult The response from the
+     *         CancelAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws ResourceNotFoundException
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    CancelAuditMitigationActionsTaskResult cancelAuditMitigationActionsTask(
+            CancelAuditMitigationActionsTaskRequest cancelAuditMitigationActionsTaskRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Cancels an audit that is in progress. The audit can be either scheduled
@@ -691,6 +717,33 @@ CreateKeysAndCertificateResult createKeysAndCertificate(
             CreateKeysAndCertificateRequest createKeysAndCertificateRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Defines an action that can be applied to audit findings by using
+     * StartAuditMitigationActionsTask. Each mitigation action can apply only
+     * one type of change.
+     * </p>
+     * 
+     * @param createMitigationActionRequest
+     * @return createMitigationActionResult The response from the
+     *         CreateMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceAlreadyExistsException
+     * @throws LimitExceededException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    CreateMitigationActionResult createMitigationAction(
+            CreateMitigationActionRequest createMitigationActionRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Creates an AWS IoT OTAUpdate on a target group of things or groups.
@@ -825,6 +878,7 @@ CreateRoleAliasResult createRoleAlias(CreateRoleAliasRequest createRoleAliasRequ
      * @return createScheduledAuditResult The response from the
      *         CreateScheduledAudit service method, as returned by AWS IoT.
      * @throws InvalidRequestException
+     * @throws ResourceAlreadyExistsException
      * @throws ThrottlingException
      * @throws InternalFailureException
      * @throws LimitExceededException
@@ -1132,11 +1186,11 @@ DeleteCACertificateResult deleteCACertificate(
      * Deletes the specified certificate.
      * </p>
      * <p>
-     * A certificate cannot be deleted if it has a policy attached to it or if
-     * its status is set to ACTIVE. To delete a certificate, first use the
-     * <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the
-     * <a>UpdateCertificate</a> API to set the certificate to the INACTIVE
-     * status.
+     * A certificate cannot be deleted if it has a policy or IoT thing attached
+     * to it or if its status is set to ACTIVE. To delete a certificate, first
+     * use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next,
+     * use the <a>UpdateCertificate</a> API to set the certificate to the
+     * INACTIVE status.
      * </p>
      * 
      * @param deleteCertificateRequest <p>
@@ -1241,6 +1295,29 @@ void deleteJob(DeleteJobRequest deleteJobRequest) throws AmazonClientException,
     void deleteJobExecution(DeleteJobExecutionRequest deleteJobExecutionRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Deletes a defined mitigation action from your AWS account.
+     * </p>
+     * 
+     * @param deleteMitigationActionRequest
+     * @return deleteMitigationActionResult The response from the
+     *         DeleteMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    DeleteMitigationActionResult deleteMitigationAction(
+            DeleteMitigationActionRequest deleteMitigationActionRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Delete an OTA update.
@@ -1644,6 +1721,60 @@ DescribeAccountAuditConfigurationResult describeAccountAuditConfiguration(
             DescribeAccountAuditConfigurationRequest describeAccountAuditConfigurationRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets information about a single audit finding. Properties include the
+     * reason for noncompliance, the severity of the issue, and when the audit
+     * that returned the finding was started.
+     * </p>
+     * 
+     * @param describeAuditFindingRequest
+     * @return describeAuditFindingResult The response from the
+     *         DescribeAuditFinding service method, as returned by AWS IoT.
+     * @throws ResourceNotFoundException
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    DescribeAuditFindingResult describeAuditFinding(
+            DescribeAuditFindingRequest describeAuditFindingRequest) throws AmazonClientException,
+            AmazonServiceException;
+
+    /**
+     * <p>
+     * Gets information about an audit mitigation task that is used to apply
+     * mitigation actions to a set of audit findings. Properties include the
+     * actions being applied, the audit checks to which they're being applied,
+     * the task status, and aggregated task statistics.
+     * </p>
+     * 
+     * @param describeAuditMitigationActionsTaskRequest
+     * @return describeAuditMitigationActionsTaskResult The response from the
+     *         DescribeAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    DescribeAuditMitigationActionsTaskResult describeAuditMitigationActionsTask(
+            DescribeAuditMitigationActionsTaskRequest describeAuditMitigationActionsTaskRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Gets information about a Device Defender audit.
@@ -1918,6 +2049,30 @@ DescribeJobExecutionResult describeJobExecution(
             DescribeJobExecutionRequest describeJobExecutionRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets information about a mitigation action.
+     * </p>
+     * 
+     * @param describeMitigationActionRequest
+     * @return describeMitigationActionResult The response from the
+     *         DescribeMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    DescribeMitigationActionResult describeMitigationAction(
+            DescribeMitigationActionRequest describeMitigationActionRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Describes a role alias.
@@ -2644,6 +2799,55 @@ ListAttachedPoliciesResult listAttachedPolicies(
     ListAuditFindingsResult listAuditFindings(ListAuditFindingsRequest listAuditFindingsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets the status of audit mitigation action tasks that were executed.
+     * </p>
+     * 
+     * @param listAuditMitigationActionsExecutionsRequest
+     * @return listAuditMitigationActionsExecutionsResult The response from the
+     *         ListAuditMitigationActionsExecutions service method, as returned
+     *         by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    ListAuditMitigationActionsExecutionsResult listAuditMitigationActionsExecutions(
+            ListAuditMitigationActionsExecutionsRequest listAuditMitigationActionsExecutionsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
+    /**
+     * <p>
+     * Gets a list of audit mitigation action tasks that match the specified
+     * filters.
+     * </p>
+     * 
+     * @param listAuditMitigationActionsTasksRequest
+     * @return listAuditMitigationActionsTasksResult The response from the
+     *         ListAuditMitigationActionsTasks service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    ListAuditMitigationActionsTasksResult listAuditMitigationActionsTasks(
+            ListAuditMitigationActionsTasksRequest listAuditMitigationActionsTasksRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Lists the Device Defender audits that have been performed during a given
@@ -2896,6 +3100,30 @@ ListJobExecutionsForThingResult listJobExecutionsForThing(
     ListJobsResult listJobs(ListJobsRequest listJobsRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Gets a list of all mitigation actions that match the specified filter
+     * criteria.
+     * </p>
+     * 
+     * @param listMitigationActionsRequest
+     * @return listMitigationActionsResult The response from the
+     *         ListMitigationActions service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    ListMitigationActionsResult listMitigationActions(
+            ListMitigationActionsRequest listMitigationActionsRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Lists OTA updates.
@@ -3579,7 +3807,7 @@ ListV2LoggingLevelsResult listV2LoggingLevels(
      * <p>
      * Lists the Device Defender security profile violations discovered during
      * the given time period. You can use filters to limit the results to those
-     * alerts issued for a particular security profile, behavior or thing
+     * alerts issued for a particular security profile, behavior, or thing
      * (device).
      * </p>
      * 
@@ -3962,6 +4190,33 @@ void setV2LoggingLevel(SetV2LoggingLevelRequest setV2LoggingLevelRequest)
     void setV2LoggingOptions(SetV2LoggingOptionsRequest setV2LoggingOptionsRequest)
             throws AmazonClientException, AmazonServiceException;
 
+    /**
+     * <p>
+     * Starts a task that applies a set of mitigation actions to the specified
+     * target.
+     * </p>
+     * 
+     * @param startAuditMitigationActionsTaskRequest
+     * @return startAuditMitigationActionsTaskResult The response from the
+     *         StartAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws TaskAlreadyExistsException
+     * @throws LimitExceededException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    StartAuditMitigationActionsTaskResult startAuditMitigationActionsTask(
+            StartAuditMitigationActionsTaskRequest startAuditMitigationActionsTaskRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Starts an on-demand Device Defender audit.
@@ -4419,6 +4674,30 @@ UpdateIndexingConfigurationResult updateIndexingConfiguration(
     void updateJob(UpdateJobRequest updateJobRequest) throws AmazonClientException,
             AmazonServiceException;
 
+    /**
+     * <p>
+     * Updates the definition for the specified mitigation action.
+     * </p>
+     * 
+     * @param updateMitigationActionRequest
+     * @return updateMitigationActionResult The response from the
+     *         UpdateMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    UpdateMitigationActionResult updateMitigationAction(
+            UpdateMitigationActionRequest updateMitigationActionRequest)
+            throws AmazonClientException, AmazonServiceException;
+
     /**
      * <p>
      * Updates a role alias.
@@ -4446,7 +4725,7 @@ UpdateRoleAliasResult updateRoleAlias(UpdateRoleAliasRequest updateRoleAliasRequ
 
     /**
      * <p>
-     * Updates a scheduled audit, including what checks are performed and how
+     * Updates a scheduled audit, including which checks are performed and how
      * often the audit takes place.
      * </p>
      * 
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIotClient.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIotClient.java
index 184fc9d25b..902c25f4c1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIotClient.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/AWSIotClient.java
@@ -362,6 +362,7 @@ private void init() {
         jsonErrorUnmarshallers.add(new ResourceRegistrationFailureExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new ServiceUnavailableExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new SqlParseExceptionUnmarshaller());
+        jsonErrorUnmarshallers.add(new TaskAlreadyExistsExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new ThrottlingExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new TransferAlreadyCompletedExceptionUnmarshaller());
         jsonErrorUnmarshallers.add(new TransferConflictExceptionUnmarshaller());
@@ -715,8 +716,8 @@ public void attachPrincipalPolicy(AttachPrincipalPolicyRequest attachPrincipalPo
 
     /**
      * <p>
-     * Associates a Device Defender security profile with a thing group or with
-     * this account. Each thing group or account can have up to five security
+     * Associates a Device Defender security profile with a thing group or this
+     * account. Each thing group or account can have up to five security
      * profiles associated with it.
      * </p>
      * 
@@ -825,6 +826,59 @@ public AttachThingPrincipalResult attachThingPrincipal(
         }
     }
 
+    /**
+     * <p>
+     * Cancels a mitigation action task that is in progress. If the task is not
+     * in progress, an InvalidRequestException occurs.
+     * </p>
+     * 
+     * @param cancelAuditMitigationActionsTaskRequest
+     * @return cancelAuditMitigationActionsTaskResult The response from the
+     *         CancelAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws ResourceNotFoundException
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public CancelAuditMitigationActionsTaskResult cancelAuditMitigationActionsTask(
+            CancelAuditMitigationActionsTaskRequest cancelAuditMitigationActionsTaskRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(cancelAuditMitigationActionsTaskRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<CancelAuditMitigationActionsTaskRequest> request = null;
+        Response<CancelAuditMitigationActionsTaskResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new CancelAuditMitigationActionsTaskRequestMarshaller()
+                        .marshall(cancelAuditMitigationActionsTaskRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<CancelAuditMitigationActionsTaskResult, JsonUnmarshallerContext> unmarshaller = new CancelAuditMitigationActionsTaskResultJsonUnmarshaller();
+            JsonResponseHandler<CancelAuditMitigationActionsTaskResult> responseHandler = new JsonResponseHandler<CancelAuditMitigationActionsTaskResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Cancels an audit that is in progress. The audit can be either scheduled
@@ -1462,6 +1516,60 @@ public CreateKeysAndCertificateResult createKeysAndCertificate(
         }
     }
 
+    /**
+     * <p>
+     * Defines an action that can be applied to audit findings by using
+     * StartAuditMitigationActionsTask. Each mitigation action can apply only
+     * one type of change.
+     * </p>
+     * 
+     * @param createMitigationActionRequest
+     * @return createMitigationActionResult The response from the
+     *         CreateMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceAlreadyExistsException
+     * @throws LimitExceededException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public CreateMitigationActionResult createMitigationAction(
+            CreateMitigationActionRequest createMitigationActionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(createMitigationActionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<CreateMitigationActionRequest> request = null;
+        Response<CreateMitigationActionResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new CreateMitigationActionRequestMarshaller()
+                        .marshall(createMitigationActionRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<CreateMitigationActionResult, JsonUnmarshallerContext> unmarshaller = new CreateMitigationActionResultJsonUnmarshaller();
+            JsonResponseHandler<CreateMitigationActionResult> responseHandler = new JsonResponseHandler<CreateMitigationActionResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Creates an AWS IoT OTAUpdate on a target group of things or groups.
@@ -1701,6 +1809,7 @@ public CreateRoleAliasResult createRoleAlias(CreateRoleAliasRequest createRoleAl
      * @return createScheduledAuditResult The response from the
      *         CreateScheduledAudit service method, as returned by AWS IoT.
      * @throws InvalidRequestException
+     * @throws ResourceAlreadyExistsException
      * @throws ThrottlingException
      * @throws InternalFailureException
      * @throws LimitExceededException
@@ -2295,11 +2404,11 @@ public DeleteCACertificateResult deleteCACertificate(
      * Deletes the specified certificate.
      * </p>
      * <p>
-     * A certificate cannot be deleted if it has a policy attached to it or if
-     * its status is set to ACTIVE. To delete a certificate, first use the
-     * <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the
-     * <a>UpdateCertificate</a> API to set the certificate to the INACTIVE
-     * status.
+     * A certificate cannot be deleted if it has a policy or IoT thing attached
+     * to it or if its status is set to ACTIVE. To delete a certificate, first
+     * use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next,
+     * use the <a>UpdateCertificate</a> API to set the certificate to the
+     * INACTIVE status.
      * </p>
      * 
      * @param deleteCertificateRequest <p>
@@ -2496,6 +2605,56 @@ public void deleteJobExecution(DeleteJobExecutionRequest deleteJobExecutionReque
         }
     }
 
+    /**
+     * <p>
+     * Deletes a defined mitigation action from your AWS account.
+     * </p>
+     * 
+     * @param deleteMitigationActionRequest
+     * @return deleteMitigationActionResult The response from the
+     *         DeleteMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public DeleteMitigationActionResult deleteMitigationAction(
+            DeleteMitigationActionRequest deleteMitigationActionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(deleteMitigationActionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DeleteMitigationActionRequest> request = null;
+        Response<DeleteMitigationActionResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DeleteMitigationActionRequestMarshaller()
+                        .marshall(deleteMitigationActionRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DeleteMitigationActionResult, JsonUnmarshallerContext> unmarshaller = new DeleteMitigationActionResultJsonUnmarshaller();
+            JsonResponseHandler<DeleteMitigationActionResult> responseHandler = new JsonResponseHandler<DeleteMitigationActionResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Delete an OTA update.
@@ -3277,6 +3436,114 @@ public DescribeAccountAuditConfigurationResult describeAccountAuditConfiguration
         }
     }
 
+    /**
+     * <p>
+     * Gets information about a single audit finding. Properties include the
+     * reason for noncompliance, the severity of the issue, and when the audit
+     * that returned the finding was started.
+     * </p>
+     * 
+     * @param describeAuditFindingRequest
+     * @return describeAuditFindingResult The response from the
+     *         DescribeAuditFinding service method, as returned by AWS IoT.
+     * @throws ResourceNotFoundException
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public DescribeAuditFindingResult describeAuditFinding(
+            DescribeAuditFindingRequest describeAuditFindingRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeAuditFindingRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeAuditFindingRequest> request = null;
+        Response<DescribeAuditFindingResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeAuditFindingRequestMarshaller()
+                        .marshall(describeAuditFindingRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeAuditFindingResult, JsonUnmarshallerContext> unmarshaller = new DescribeAuditFindingResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeAuditFindingResult> responseHandler = new JsonResponseHandler<DescribeAuditFindingResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Gets information about an audit mitigation task that is used to apply
+     * mitigation actions to a set of audit findings. Properties include the
+     * actions being applied, the audit checks to which they're being applied,
+     * the task status, and aggregated task statistics.
+     * </p>
+     * 
+     * @param describeAuditMitigationActionsTaskRequest
+     * @return describeAuditMitigationActionsTaskResult The response from the
+     *         DescribeAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public DescribeAuditMitigationActionsTaskResult describeAuditMitigationActionsTask(
+            DescribeAuditMitigationActionsTaskRequest describeAuditMitigationActionsTaskRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeAuditMitigationActionsTaskRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeAuditMitigationActionsTaskRequest> request = null;
+        Response<DescribeAuditMitigationActionsTaskResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeAuditMitigationActionsTaskRequestMarshaller()
+                        .marshall(describeAuditMitigationActionsTaskRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeAuditMitigationActionsTaskResult, JsonUnmarshallerContext> unmarshaller = new DescribeAuditMitigationActionsTaskResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeAuditMitigationActionsTaskResult> responseHandler = new JsonResponseHandler<DescribeAuditMitigationActionsTaskResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Gets information about a Device Defender audit.
@@ -3847,6 +4114,57 @@ public DescribeJobExecutionResult describeJobExecution(
         }
     }
 
+    /**
+     * <p>
+     * Gets information about a mitigation action.
+     * </p>
+     * 
+     * @param describeMitigationActionRequest
+     * @return describeMitigationActionResult The response from the
+     *         DescribeMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public DescribeMitigationActionResult describeMitigationAction(
+            DescribeMitigationActionRequest describeMitigationActionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(describeMitigationActionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<DescribeMitigationActionRequest> request = null;
+        Response<DescribeMitigationActionResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new DescribeMitigationActionRequestMarshaller()
+                        .marshall(describeMitigationActionRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<DescribeMitigationActionResult, JsonUnmarshallerContext> unmarshaller = new DescribeMitigationActionResultJsonUnmarshaller();
+            JsonResponseHandler<DescribeMitigationActionResult> responseHandler = new JsonResponseHandler<DescribeMitigationActionResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Describes a role alias.
@@ -5303,6 +5621,109 @@ public ListAuditFindingsResult listAuditFindings(
         }
     }
 
+    /**
+     * <p>
+     * Gets the status of audit mitigation action tasks that were executed.
+     * </p>
+     * 
+     * @param listAuditMitigationActionsExecutionsRequest
+     * @return listAuditMitigationActionsExecutionsResult The response from the
+     *         ListAuditMitigationActionsExecutions service method, as returned
+     *         by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public ListAuditMitigationActionsExecutionsResult listAuditMitigationActionsExecutions(
+            ListAuditMitigationActionsExecutionsRequest listAuditMitigationActionsExecutionsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listAuditMitigationActionsExecutionsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListAuditMitigationActionsExecutionsRequest> request = null;
+        Response<ListAuditMitigationActionsExecutionsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListAuditMitigationActionsExecutionsRequestMarshaller()
+                        .marshall(listAuditMitigationActionsExecutionsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListAuditMitigationActionsExecutionsResult, JsonUnmarshallerContext> unmarshaller = new ListAuditMitigationActionsExecutionsResultJsonUnmarshaller();
+            JsonResponseHandler<ListAuditMitigationActionsExecutionsResult> responseHandler = new JsonResponseHandler<ListAuditMitigationActionsExecutionsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
+    /**
+     * <p>
+     * Gets a list of audit mitigation action tasks that match the specified
+     * filters.
+     * </p>
+     * 
+     * @param listAuditMitigationActionsTasksRequest
+     * @return listAuditMitigationActionsTasksResult The response from the
+     *         ListAuditMitigationActionsTasks service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public ListAuditMitigationActionsTasksResult listAuditMitigationActionsTasks(
+            ListAuditMitigationActionsTasksRequest listAuditMitigationActionsTasksRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listAuditMitigationActionsTasksRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListAuditMitigationActionsTasksRequest> request = null;
+        Response<ListAuditMitigationActionsTasksResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListAuditMitigationActionsTasksRequestMarshaller()
+                        .marshall(listAuditMitigationActionsTasksRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListAuditMitigationActionsTasksResult, JsonUnmarshallerContext> unmarshaller = new ListAuditMitigationActionsTasksResultJsonUnmarshaller();
+            JsonResponseHandler<ListAuditMitigationActionsTasksResult> responseHandler = new JsonResponseHandler<ListAuditMitigationActionsTasksResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Lists the Device Defender audits that have been performed during a given
@@ -5822,6 +6243,57 @@ public ListJobsResult listJobs(ListJobsRequest listJobsRequest)
         }
     }
 
+    /**
+     * <p>
+     * Gets a list of all mitigation actions that match the specified filter
+     * criteria.
+     * </p>
+     * 
+     * @param listMitigationActionsRequest
+     * @return listMitigationActionsResult The response from the
+     *         ListMitigationActions service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public ListMitigationActionsResult listMitigationActions(
+            ListMitigationActionsRequest listMitigationActionsRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(listMitigationActionsRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<ListMitigationActionsRequest> request = null;
+        Response<ListMitigationActionsResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new ListMitigationActionsRequestMarshaller()
+                        .marshall(listMitigationActionsRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<ListMitigationActionsResult, JsonUnmarshallerContext> unmarshaller = new ListMitigationActionsResultJsonUnmarshaller();
+            JsonResponseHandler<ListMitigationActionsResult> responseHandler = new JsonResponseHandler<ListMitigationActionsResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Lists OTA updates.
@@ -7200,7 +7672,7 @@ public ListV2LoggingLevelsResult listV2LoggingLevels(
      * <p>
      * Lists the Device Defender security profile violations discovered during
      * the given time period. You can use filters to limit the results to those
-     * alerts issued for a particular security profile, behavior or thing
+     * alerts issued for a particular security profile, behavior, or thing
      * (device).
      * </p>
      * 
@@ -7930,6 +8402,60 @@ public void setV2LoggingOptions(SetV2LoggingOptionsRequest setV2LoggingOptionsRe
         }
     }
 
+    /**
+     * <p>
+     * Starts a task that applies a set of mitigation actions to the specified
+     * target.
+     * </p>
+     * 
+     * @param startAuditMitigationActionsTaskRequest
+     * @return startAuditMitigationActionsTaskResult The response from the
+     *         StartAuditMitigationActionsTask service method, as returned by
+     *         AWS IoT.
+     * @throws InvalidRequestException
+     * @throws TaskAlreadyExistsException
+     * @throws LimitExceededException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public StartAuditMitigationActionsTaskResult startAuditMitigationActionsTask(
+            StartAuditMitigationActionsTaskRequest startAuditMitigationActionsTaskRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(startAuditMitigationActionsTaskRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<StartAuditMitigationActionsTaskRequest> request = null;
+        Response<StartAuditMitigationActionsTaskResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new StartAuditMitigationActionsTaskRequestMarshaller()
+                        .marshall(startAuditMitigationActionsTaskRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<StartAuditMitigationActionsTaskResult, JsonUnmarshallerContext> unmarshaller = new StartAuditMitigationActionsTaskResultJsonUnmarshaller();
+            JsonResponseHandler<StartAuditMitigationActionsTaskResult> responseHandler = new JsonResponseHandler<StartAuditMitigationActionsTaskResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Starts an on-demand Device Defender audit.
@@ -8829,6 +9355,57 @@ public void updateJob(UpdateJobRequest updateJobRequest)
         }
     }
 
+    /**
+     * <p>
+     * Updates the definition for the specified mitigation action.
+     * </p>
+     * 
+     * @param updateMitigationActionRequest
+     * @return updateMitigationActionResult The response from the
+     *         UpdateMitigationAction service method, as returned by AWS IoT.
+     * @throws InvalidRequestException
+     * @throws ResourceNotFoundException
+     * @throws ThrottlingException
+     * @throws InternalFailureException
+     * @throws AmazonClientException If any internal errors are encountered
+     *             inside the client while attempting to make the request or
+     *             handle the response. For example if a network connection is
+     *             not available.
+     * @throws AmazonServiceException If an error response is returned by AWS
+     *             IoT indicating either a problem with the data in the request,
+     *             or a server side issue.
+     */
+    public UpdateMitigationActionResult updateMitigationAction(
+            UpdateMitigationActionRequest updateMitigationActionRequest)
+            throws AmazonServiceException, AmazonClientException {
+        ExecutionContext executionContext = createExecutionContext(updateMitigationActionRequest);
+        AWSRequestMetrics awsRequestMetrics = executionContext.getAwsRequestMetrics();
+        awsRequestMetrics.startEvent(Field.ClientExecuteTime);
+        Request<UpdateMitigationActionRequest> request = null;
+        Response<UpdateMitigationActionResult> response = null;
+        try {
+            awsRequestMetrics.startEvent(Field.RequestMarshallTime);
+            try {
+                request = new UpdateMitigationActionRequestMarshaller()
+                        .marshall(updateMitigationActionRequest);
+                // Binds the request metrics to the current request.
+                request.setAWSRequestMetrics(awsRequestMetrics);
+            } finally {
+                awsRequestMetrics.endEvent(Field.RequestMarshallTime);
+            }
+            Unmarshaller<UpdateMitigationActionResult, JsonUnmarshallerContext> unmarshaller = new UpdateMitigationActionResultJsonUnmarshaller();
+            JsonResponseHandler<UpdateMitigationActionResult> responseHandler = new JsonResponseHandler<UpdateMitigationActionResult>(
+                    unmarshaller);
+
+            response = invoke(request, responseHandler, executionContext);
+
+            return response.getAwsResponse();
+        } finally {
+            awsRequestMetrics.endEvent(Field.ClientExecuteTime);
+            endClientExecution(awsRequestMetrics, request, response, LOGGING_AWS_REQUEST_METRIC);
+        }
+    }
+
     /**
      * <p>
      * Updates a role alias.
@@ -8882,7 +9459,7 @@ public UpdateRoleAliasResult updateRoleAlias(UpdateRoleAliasRequest updateRoleAl
 
     /**
      * <p>
-     * Updates a scheduled audit, including what checks are performed and how
+     * Updates a scheduled audit, including which checks are performed and how
      * often the audit takes place.
      * </p>
      * 
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ActiveViolation.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ActiveViolation.java
index 84d212b67e..e9625cba3b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ActiveViolation.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ActiveViolation.java
@@ -42,7 +42,6 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      */
     private String thingName;
 
@@ -150,7 +149,6 @@ public ActiveViolation withViolationId(String violationId) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @return <p>
      *         The name of the thing responsible for the active violation.
@@ -167,7 +165,6 @@ public String getThingName() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing responsible for the active violation.
@@ -187,7 +184,6 @@ public void setThingName(String thingName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing responsible for the active violation.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AddThingsToThingGroupParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AddThingsToThingGroupParams.java
new file mode 100644
index 0000000000..2cd78bb070
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AddThingsToThingGroupParams.java
@@ -0,0 +1,269 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters used when defining a mitigation action that move a set of things
+ * to a thing group.
+ * </p>
+ */
+public class AddThingsToThingGroupParams implements Serializable {
+    /**
+     * <p>
+     * The list of groups to which you want to add the things that triggered the
+     * mitigation action. You can add a thing to a maximum of 10 groups, but you
+     * cannot add a thing to more than one group in the same hierarchy.
+     * </p>
+     */
+    private java.util.List<String> thingGroupNames;
+
+    /**
+     * <p>
+     * Specifies if this mitigation action can move the things that triggered
+     * the mitigation action even if they are part of one or more dynamic things
+     * groups.
+     * </p>
+     */
+    private Boolean overrideDynamicGroups;
+
+    /**
+     * <p>
+     * The list of groups to which you want to add the things that triggered the
+     * mitigation action. You can add a thing to a maximum of 10 groups, but you
+     * cannot add a thing to more than one group in the same hierarchy.
+     * </p>
+     *
+     * @return <p>
+     *         The list of groups to which you want to add the things that
+     *         triggered the mitigation action. You can add a thing to a maximum
+     *         of 10 groups, but you cannot add a thing to more than one group
+     *         in the same hierarchy.
+     *         </p>
+     */
+    public java.util.List<String> getThingGroupNames() {
+        return thingGroupNames;
+    }
+
+    /**
+     * <p>
+     * The list of groups to which you want to add the things that triggered the
+     * mitigation action. You can add a thing to a maximum of 10 groups, but you
+     * cannot add a thing to more than one group in the same hierarchy.
+     * </p>
+     *
+     * @param thingGroupNames <p>
+     *            The list of groups to which you want to add the things that
+     *            triggered the mitigation action. You can add a thing to a
+     *            maximum of 10 groups, but you cannot add a thing to more than
+     *            one group in the same hierarchy.
+     *            </p>
+     */
+    public void setThingGroupNames(java.util.Collection<String> thingGroupNames) {
+        if (thingGroupNames == null) {
+            this.thingGroupNames = null;
+            return;
+        }
+
+        this.thingGroupNames = new java.util.ArrayList<String>(thingGroupNames);
+    }
+
+    /**
+     * <p>
+     * The list of groups to which you want to add the things that triggered the
+     * mitigation action. You can add a thing to a maximum of 10 groups, but you
+     * cannot add a thing to more than one group in the same hierarchy.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param thingGroupNames <p>
+     *            The list of groups to which you want to add the things that
+     *            triggered the mitigation action. You can add a thing to a
+     *            maximum of 10 groups, but you cannot add a thing to more than
+     *            one group in the same hierarchy.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddThingsToThingGroupParams withThingGroupNames(String... thingGroupNames) {
+        if (getThingGroupNames() == null) {
+            this.thingGroupNames = new java.util.ArrayList<String>(thingGroupNames.length);
+        }
+        for (String value : thingGroupNames) {
+            this.thingGroupNames.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The list of groups to which you want to add the things that triggered the
+     * mitigation action. You can add a thing to a maximum of 10 groups, but you
+     * cannot add a thing to more than one group in the same hierarchy.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param thingGroupNames <p>
+     *            The list of groups to which you want to add the things that
+     *            triggered the mitigation action. You can add a thing to a
+     *            maximum of 10 groups, but you cannot add a thing to more than
+     *            one group in the same hierarchy.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddThingsToThingGroupParams withThingGroupNames(
+            java.util.Collection<String> thingGroupNames) {
+        setThingGroupNames(thingGroupNames);
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies if this mitigation action can move the things that triggered
+     * the mitigation action even if they are part of one or more dynamic things
+     * groups.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies if this mitigation action can move the things that
+     *         triggered the mitigation action even if they are part of one or
+     *         more dynamic things groups.
+     *         </p>
+     */
+    public Boolean isOverrideDynamicGroups() {
+        return overrideDynamicGroups;
+    }
+
+    /**
+     * <p>
+     * Specifies if this mitigation action can move the things that triggered
+     * the mitigation action even if they are part of one or more dynamic things
+     * groups.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies if this mitigation action can move the things that
+     *         triggered the mitigation action even if they are part of one or
+     *         more dynamic things groups.
+     *         </p>
+     */
+    public Boolean getOverrideDynamicGroups() {
+        return overrideDynamicGroups;
+    }
+
+    /**
+     * <p>
+     * Specifies if this mitigation action can move the things that triggered
+     * the mitigation action even if they are part of one or more dynamic things
+     * groups.
+     * </p>
+     *
+     * @param overrideDynamicGroups <p>
+     *            Specifies if this mitigation action can move the things that
+     *            triggered the mitigation action even if they are part of one
+     *            or more dynamic things groups.
+     *            </p>
+     */
+    public void setOverrideDynamicGroups(Boolean overrideDynamicGroups) {
+        this.overrideDynamicGroups = overrideDynamicGroups;
+    }
+
+    /**
+     * <p>
+     * Specifies if this mitigation action can move the things that triggered
+     * the mitigation action even if they are part of one or more dynamic things
+     * groups.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param overrideDynamicGroups <p>
+     *            Specifies if this mitigation action can move the things that
+     *            triggered the mitigation action even if they are part of one
+     *            or more dynamic things groups.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AddThingsToThingGroupParams withOverrideDynamicGroups(Boolean overrideDynamicGroups) {
+        this.overrideDynamicGroups = overrideDynamicGroups;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getThingGroupNames() != null)
+            sb.append("thingGroupNames: " + getThingGroupNames() + ",");
+        if (getOverrideDynamicGroups() != null)
+            sb.append("overrideDynamicGroups: " + getOverrideDynamicGroups());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getThingGroupNames() == null) ? 0 : getThingGroupNames().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getOverrideDynamicGroups() == null) ? 0 : getOverrideDynamicGroups().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AddThingsToThingGroupParams == false)
+            return false;
+        AddThingsToThingGroupParams other = (AddThingsToThingGroupParams) obj;
+
+        if (other.getThingGroupNames() == null ^ this.getThingGroupNames() == null)
+            return false;
+        if (other.getThingGroupNames() != null
+                && other.getThingGroupNames().equals(this.getThingGroupNames()) == false)
+            return false;
+        if (other.getOverrideDynamicGroups() == null ^ this.getOverrideDynamicGroups() == null)
+            return false;
+        if (other.getOverrideDynamicGroups() != null
+                && other.getOverrideDynamicGroups().equals(this.getOverrideDynamicGroups()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttachSecurityProfileRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttachSecurityProfileRequest.java
index 106fba7d52..064c5ac710 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttachSecurityProfileRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttachSecurityProfileRequest.java
@@ -21,7 +21,7 @@
 
 /**
  * <p>
- * Associates a Device Defender security profile with a thing group or with this
+ * Associates a Device Defender security profile with a thing group or this
  * account. Each thing group or account can have up to five security profiles
  * associated with it.
  * </p>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttributePayload.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttributePayload.java
index deac86897f..4f5b738870 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttributePayload.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AttributePayload.java
@@ -47,7 +47,7 @@
      * <note>
      * <p>
      * The <code>merge</code> attribute is only valid when calling
-     * <code>UpdateThing</code>.
+     * <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      * </p>
      * </note>
      */
@@ -176,7 +176,7 @@ public AttributePayload clearattributesEntries() {
      * <note>
      * <p>
      * The <code>merge</code> attribute is only valid when calling
-     * <code>UpdateThing</code>.
+     * <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      * </p>
      * </note>
      *
@@ -192,7 +192,7 @@ public AttributePayload clearattributesEntries() {
      *         <note>
      *         <p>
      *         The <code>merge</code> attribute is only valid when calling
-     *         <code>UpdateThing</code>.
+     *         <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      *         </p>
      *         </note>
      */
@@ -213,7 +213,7 @@ public Boolean isMerge() {
      * <note>
      * <p>
      * The <code>merge</code> attribute is only valid when calling
-     * <code>UpdateThing</code>.
+     * <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      * </p>
      * </note>
      *
@@ -229,7 +229,7 @@ public Boolean isMerge() {
      *         <note>
      *         <p>
      *         The <code>merge</code> attribute is only valid when calling
-     *         <code>UpdateThing</code>.
+     *         <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      *         </p>
      *         </note>
      */
@@ -250,7 +250,7 @@ public Boolean getMerge() {
      * <note>
      * <p>
      * The <code>merge</code> attribute is only valid when calling
-     * <code>UpdateThing</code>.
+     * <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      * </p>
      * </note>
      *
@@ -266,7 +266,7 @@ public Boolean getMerge() {
      *            <note>
      *            <p>
      *            The <code>merge</code> attribute is only valid when calling
-     *            <code>UpdateThing</code>.
+     *            <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      *            </p>
      *            </note>
      */
@@ -287,7 +287,7 @@ public void setMerge(Boolean merge) {
      * <note>
      * <p>
      * The <code>merge</code> attribute is only valid when calling
-     * <code>UpdateThing</code>.
+     * <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      * </p>
      * </note>
      * <p>
@@ -306,7 +306,7 @@ public void setMerge(Boolean merge) {
      *            <note>
      *            <p>
      *            The <code>merge</code> attribute is only valid when calling
-     *            <code>UpdateThing</code>.
+     *            <code>UpdateThing</code> or <code>UpdateThingGroup</code>.
      *            </p>
      *            </note>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditCheckDetails.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditCheckDetails.java
index 7492f6bfd7..e972b555d9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditCheckDetails.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditCheckDetails.java
@@ -25,7 +25,7 @@
 public class AuditCheckDetails implements Serializable {
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -38,7 +38,7 @@
 
     /**
      * <p>
-     * True if the check completed and found all resources compliant.
+     * True if the check is complete and found all resources compliant.
      * </p>
      */
     private Boolean checkCompliant;
@@ -52,23 +52,23 @@
 
     /**
      * <p>
-     * The number of resources that the check found non-compliant.
+     * The number of resources that were found noncompliant during the check.
      * </p>
      */
     private Long nonCompliantResourcesCount;
 
     /**
      * <p>
-     * The code of any error encountered when performing this check during this
-     * audit. One of "INSUFFICIENT_PERMISSIONS", or "AUDIT_CHECK_DISABLED".
+     * The code of any error encountered when this check is performed during
+     * this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
      * </p>
      */
     private String errorCode;
 
     /**
      * <p>
-     * The message associated with any error encountered when performing this
-     * check during this audit.
+     * The message associated with any error encountered when this check is
+     * performed during this audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -78,7 +78,7 @@
 
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -88,7 +88,7 @@
      * CANCELED, COMPLETED_COMPLIANT, COMPLETED_NON_COMPLIANT, FAILED
      *
      * @return <p>
-     *         The completion status of this check, one of "IN_PROGRESS",
+     *         The completion status of this check. One of "IN_PROGRESS",
      *         "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      *         "COMPLETED_NON_COMPLIANT", or "FAILED".
      *         </p>
@@ -100,7 +100,7 @@ public String getCheckRunStatus() {
 
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -110,7 +110,7 @@ public String getCheckRunStatus() {
      * CANCELED, COMPLETED_COMPLIANT, COMPLETED_NON_COMPLIANT, FAILED
      *
      * @param checkRunStatus <p>
-     *            The completion status of this check, one of "IN_PROGRESS",
+     *            The completion status of this check. One of "IN_PROGRESS",
      *            "WAITING_FOR_DATA_COLLECTION", "CANCELED",
      *            "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".
      *            </p>
@@ -122,7 +122,7 @@ public void setCheckRunStatus(String checkRunStatus) {
 
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -135,7 +135,7 @@ public void setCheckRunStatus(String checkRunStatus) {
      * CANCELED, COMPLETED_COMPLIANT, COMPLETED_NON_COMPLIANT, FAILED
      *
      * @param checkRunStatus <p>
-     *            The completion status of this check, one of "IN_PROGRESS",
+     *            The completion status of this check. One of "IN_PROGRESS",
      *            "WAITING_FOR_DATA_COLLECTION", "CANCELED",
      *            "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".
      *            </p>
@@ -150,7 +150,7 @@ public AuditCheckDetails withCheckRunStatus(String checkRunStatus) {
 
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -160,7 +160,7 @@ public AuditCheckDetails withCheckRunStatus(String checkRunStatus) {
      * CANCELED, COMPLETED_COMPLIANT, COMPLETED_NON_COMPLIANT, FAILED
      *
      * @param checkRunStatus <p>
-     *            The completion status of this check, one of "IN_PROGRESS",
+     *            The completion status of this check. One of "IN_PROGRESS",
      *            "WAITING_FOR_DATA_COLLECTION", "CANCELED",
      *            "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".
      *            </p>
@@ -172,7 +172,7 @@ public void setCheckRunStatus(AuditCheckRunStatus checkRunStatus) {
 
     /**
      * <p>
-     * The completion status of this check, one of "IN_PROGRESS",
+     * The completion status of this check. One of "IN_PROGRESS",
      * "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT",
      * "COMPLETED_NON_COMPLIANT", or "FAILED".
      * </p>
@@ -185,7 +185,7 @@ public void setCheckRunStatus(AuditCheckRunStatus checkRunStatus) {
      * CANCELED, COMPLETED_COMPLIANT, COMPLETED_NON_COMPLIANT, FAILED
      *
      * @param checkRunStatus <p>
-     *            The completion status of this check, one of "IN_PROGRESS",
+     *            The completion status of this check. One of "IN_PROGRESS",
      *            "WAITING_FOR_DATA_COLLECTION", "CANCELED",
      *            "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".
      *            </p>
@@ -200,11 +200,11 @@ public AuditCheckDetails withCheckRunStatus(AuditCheckRunStatus checkRunStatus)
 
     /**
      * <p>
-     * True if the check completed and found all resources compliant.
+     * True if the check is complete and found all resources compliant.
      * </p>
      *
      * @return <p>
-     *         True if the check completed and found all resources compliant.
+     *         True if the check is complete and found all resources compliant.
      *         </p>
      */
     public Boolean isCheckCompliant() {
@@ -213,11 +213,11 @@ public Boolean isCheckCompliant() {
 
     /**
      * <p>
-     * True if the check completed and found all resources compliant.
+     * True if the check is complete and found all resources compliant.
      * </p>
      *
      * @return <p>
-     *         True if the check completed and found all resources compliant.
+     *         True if the check is complete and found all resources compliant.
      *         </p>
      */
     public Boolean getCheckCompliant() {
@@ -226,11 +226,12 @@ public Boolean getCheckCompliant() {
 
     /**
      * <p>
-     * True if the check completed and found all resources compliant.
+     * True if the check is complete and found all resources compliant.
      * </p>
      *
      * @param checkCompliant <p>
-     *            True if the check completed and found all resources compliant.
+     *            True if the check is complete and found all resources
+     *            compliant.
      *            </p>
      */
     public void setCheckCompliant(Boolean checkCompliant) {
@@ -239,14 +240,15 @@ public void setCheckCompliant(Boolean checkCompliant) {
 
     /**
      * <p>
-     * True if the check completed and found all resources compliant.
+     * True if the check is complete and found all resources compliant.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param checkCompliant <p>
-     *            True if the check completed and found all resources compliant.
+     *            True if the check is complete and found all resources
+     *            compliant.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -303,11 +305,12 @@ public AuditCheckDetails withTotalResourcesCount(Long totalResourcesCount) {
 
     /**
      * <p>
-     * The number of resources that the check found non-compliant.
+     * The number of resources that were found noncompliant during the check.
      * </p>
      *
      * @return <p>
-     *         The number of resources that the check found non-compliant.
+     *         The number of resources that were found noncompliant during the
+     *         check.
      *         </p>
      */
     public Long getNonCompliantResourcesCount() {
@@ -316,11 +319,12 @@ public Long getNonCompliantResourcesCount() {
 
     /**
      * <p>
-     * The number of resources that the check found non-compliant.
+     * The number of resources that were found noncompliant during the check.
      * </p>
      *
      * @param nonCompliantResourcesCount <p>
-     *            The number of resources that the check found non-compliant.
+     *            The number of resources that were found noncompliant during
+     *            the check.
      *            </p>
      */
     public void setNonCompliantResourcesCount(Long nonCompliantResourcesCount) {
@@ -329,14 +333,15 @@ public void setNonCompliantResourcesCount(Long nonCompliantResourcesCount) {
 
     /**
      * <p>
-     * The number of resources that the check found non-compliant.
+     * The number of resources that were found noncompliant during the check.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param nonCompliantResourcesCount <p>
-     *            The number of resources that the check found non-compliant.
+     *            The number of resources that were found noncompliant during
+     *            the check.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -348,13 +353,13 @@ public AuditCheckDetails withNonCompliantResourcesCount(Long nonCompliantResourc
 
     /**
      * <p>
-     * The code of any error encountered when performing this check during this
-     * audit. One of "INSUFFICIENT_PERMISSIONS", or "AUDIT_CHECK_DISABLED".
+     * The code of any error encountered when this check is performed during
+     * this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
      * </p>
      *
      * @return <p>
-     *         The code of any error encountered when performing this check
-     *         during this audit. One of "INSUFFICIENT_PERMISSIONS", or
+     *         The code of any error encountered when this check is performed
+     *         during this audit. One of "INSUFFICIENT_PERMISSIONS" or
      *         "AUDIT_CHECK_DISABLED".
      *         </p>
      */
@@ -364,13 +369,13 @@ public String getErrorCode() {
 
     /**
      * <p>
-     * The code of any error encountered when performing this check during this
-     * audit. One of "INSUFFICIENT_PERMISSIONS", or "AUDIT_CHECK_DISABLED".
+     * The code of any error encountered when this check is performed during
+     * this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
      * </p>
      *
      * @param errorCode <p>
-     *            The code of any error encountered when performing this check
-     *            during this audit. One of "INSUFFICIENT_PERMISSIONS", or
+     *            The code of any error encountered when this check is performed
+     *            during this audit. One of "INSUFFICIENT_PERMISSIONS" or
      *            "AUDIT_CHECK_DISABLED".
      *            </p>
      */
@@ -380,16 +385,16 @@ public void setErrorCode(String errorCode) {
 
     /**
      * <p>
-     * The code of any error encountered when performing this check during this
-     * audit. One of "INSUFFICIENT_PERMISSIONS", or "AUDIT_CHECK_DISABLED".
+     * The code of any error encountered when this check is performed during
+     * this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param errorCode <p>
-     *            The code of any error encountered when performing this check
-     *            during this audit. One of "INSUFFICIENT_PERMISSIONS", or
+     *            The code of any error encountered when this check is performed
+     *            during this audit. One of "INSUFFICIENT_PERMISSIONS" or
      *            "AUDIT_CHECK_DISABLED".
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -402,16 +407,16 @@ public AuditCheckDetails withErrorCode(String errorCode) {
 
     /**
      * <p>
-     * The message associated with any error encountered when performing this
-     * check during this audit.
+     * The message associated with any error encountered when this check is
+     * performed during this audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b> - 2048<br/>
      *
      * @return <p>
-     *         The message associated with any error encountered when performing
-     *         this check during this audit.
+     *         The message associated with any error encountered when this check
+     *         is performed during this audit.
      *         </p>
      */
     public String getMessage() {
@@ -420,16 +425,16 @@ public String getMessage() {
 
     /**
      * <p>
-     * The message associated with any error encountered when performing this
-     * check during this audit.
+     * The message associated with any error encountered when this check is
+     * performed during this audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b> - 2048<br/>
      *
      * @param message <p>
-     *            The message associated with any error encountered when
-     *            performing this check during this audit.
+     *            The message associated with any error encountered when this
+     *            check is performed during this audit.
      *            </p>
      */
     public void setMessage(String message) {
@@ -438,8 +443,8 @@ public void setMessage(String message) {
 
     /**
      * <p>
-     * The message associated with any error encountered when performing this
-     * check during this audit.
+     * The message associated with any error encountered when this check is
+     * performed during this audit.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -449,8 +454,8 @@ public void setMessage(String message) {
      * <b>Length: </b> - 2048<br/>
      *
      * @param message <p>
-     *            The message associated with any error encountered when
-     *            performing this check during this audit.
+     *            The message associated with any error encountered when this
+     *            check is performed during this audit.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditFinding.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditFinding.java
index 2881623cbb..497cdd8540 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditFinding.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditFinding.java
@@ -25,7 +25,19 @@
 public class AuditFinding implements Serializable {
     /**
      * <p>
-     * The ID of the audit that generated this result (finding)
+     * A unique identifier for this set of audit findings. This identifier is
+     * used to apply mitigation tasks to one or more sets of findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String findingId;
+
+    /**
+     * <p>
+     * The ID of the audit that generated this result (finding).
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -67,7 +79,7 @@
 
     /**
      * <p>
-     * The resource that was found to be non-compliant with the audit check.
+     * The resource that was found to be noncompliant with the audit check.
      * </p>
      */
     private NonCompliantResource nonCompliantResource;
@@ -81,21 +93,87 @@
 
     /**
      * <p>
-     * The reason the resource was non-compliant.
+     * The reason the resource was noncompliant.
      * </p>
      */
     private String reasonForNonCompliance;
 
     /**
      * <p>
-     * A code which indicates the reason that the resource was non-compliant.
+     * A code that indicates the reason that the resource was noncompliant.
      * </p>
      */
     private String reasonForNonComplianceCode;
 
     /**
      * <p>
-     * The ID of the audit that generated this result (finding)
+     * A unique identifier for this set of audit findings. This identifier is
+     * used to apply mitigation tasks to one or more sets of findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier for this set of audit findings. This
+     *         identifier is used to apply mitigation tasks to one or more sets
+     *         of findings.
+     *         </p>
+     */
+    public String getFindingId() {
+        return findingId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for this set of audit findings. This identifier is
+     * used to apply mitigation tasks to one or more sets of findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            A unique identifier for this set of audit findings. This
+     *            identifier is used to apply mitigation tasks to one or more
+     *            sets of findings.
+     *            </p>
+     */
+    public void setFindingId(String findingId) {
+        this.findingId = findingId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for this set of audit findings. This identifier is
+     * used to apply mitigation tasks to one or more sets of findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            A unique identifier for this set of audit findings. This
+     *            identifier is used to apply mitigation tasks to one or more
+     *            sets of findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditFinding withFindingId(String findingId) {
+        this.findingId = findingId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ID of the audit that generated this result (finding).
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -103,7 +181,7 @@
      * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
      *
      * @return <p>
-     *         The ID of the audit that generated this result (finding)
+     *         The ID of the audit that generated this result (finding).
      *         </p>
      */
     public String getTaskId() {
@@ -112,7 +190,7 @@ public String getTaskId() {
 
     /**
      * <p>
-     * The ID of the audit that generated this result (finding)
+     * The ID of the audit that generated this result (finding).
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -120,7 +198,7 @@ public String getTaskId() {
      * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
      *
      * @param taskId <p>
-     *            The ID of the audit that generated this result (finding)
+     *            The ID of the audit that generated this result (finding).
      *            </p>
      */
     public void setTaskId(String taskId) {
@@ -129,7 +207,7 @@ public void setTaskId(String taskId) {
 
     /**
      * <p>
-     * The ID of the audit that generated this result (finding)
+     * The ID of the audit that generated this result (finding).
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -140,7 +218,7 @@ public void setTaskId(String taskId) {
      * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
      *
      * @param taskId <p>
-     *            The ID of the audit that generated this result (finding)
+     *            The ID of the audit that generated this result (finding).
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -384,11 +462,11 @@ public AuditFinding withSeverity(AuditFindingSeverity severity) {
 
     /**
      * <p>
-     * The resource that was found to be non-compliant with the audit check.
+     * The resource that was found to be noncompliant with the audit check.
      * </p>
      *
      * @return <p>
-     *         The resource that was found to be non-compliant with the audit
+     *         The resource that was found to be noncompliant with the audit
      *         check.
      *         </p>
      */
@@ -398,11 +476,11 @@ public NonCompliantResource getNonCompliantResource() {
 
     /**
      * <p>
-     * The resource that was found to be non-compliant with the audit check.
+     * The resource that was found to be noncompliant with the audit check.
      * </p>
      *
      * @param nonCompliantResource <p>
-     *            The resource that was found to be non-compliant with the audit
+     *            The resource that was found to be noncompliant with the audit
      *            check.
      *            </p>
      */
@@ -412,14 +490,14 @@ public void setNonCompliantResource(NonCompliantResource nonCompliantResource) {
 
     /**
      * <p>
-     * The resource that was found to be non-compliant with the audit check.
+     * The resource that was found to be noncompliant with the audit check.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param nonCompliantResource <p>
-     *            The resource that was found to be non-compliant with the audit
+     *            The resource that was found to be noncompliant with the audit
      *            check.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -507,11 +585,11 @@ public AuditFinding withRelatedResources(java.util.Collection<RelatedResource> r
 
     /**
      * <p>
-     * The reason the resource was non-compliant.
+     * The reason the resource was noncompliant.
      * </p>
      *
      * @return <p>
-     *         The reason the resource was non-compliant.
+     *         The reason the resource was noncompliant.
      *         </p>
      */
     public String getReasonForNonCompliance() {
@@ -520,11 +598,11 @@ public String getReasonForNonCompliance() {
 
     /**
      * <p>
-     * The reason the resource was non-compliant.
+     * The reason the resource was noncompliant.
      * </p>
      *
      * @param reasonForNonCompliance <p>
-     *            The reason the resource was non-compliant.
+     *            The reason the resource was noncompliant.
      *            </p>
      */
     public void setReasonForNonCompliance(String reasonForNonCompliance) {
@@ -533,14 +611,14 @@ public void setReasonForNonCompliance(String reasonForNonCompliance) {
 
     /**
      * <p>
-     * The reason the resource was non-compliant.
+     * The reason the resource was noncompliant.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param reasonForNonCompliance <p>
-     *            The reason the resource was non-compliant.
+     *            The reason the resource was noncompliant.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -552,12 +630,12 @@ public AuditFinding withReasonForNonCompliance(String reasonForNonCompliance) {
 
     /**
      * <p>
-     * A code which indicates the reason that the resource was non-compliant.
+     * A code that indicates the reason that the resource was noncompliant.
      * </p>
      *
      * @return <p>
-     *         A code which indicates the reason that the resource was
-     *         non-compliant.
+     *         A code that indicates the reason that the resource was
+     *         noncompliant.
      *         </p>
      */
     public String getReasonForNonComplianceCode() {
@@ -566,12 +644,12 @@ public String getReasonForNonComplianceCode() {
 
     /**
      * <p>
-     * A code which indicates the reason that the resource was non-compliant.
+     * A code that indicates the reason that the resource was noncompliant.
      * </p>
      *
      * @param reasonForNonComplianceCode <p>
-     *            A code which indicates the reason that the resource was
-     *            non-compliant.
+     *            A code that indicates the reason that the resource was
+     *            noncompliant.
      *            </p>
      */
     public void setReasonForNonComplianceCode(String reasonForNonComplianceCode) {
@@ -580,15 +658,15 @@ public void setReasonForNonComplianceCode(String reasonForNonComplianceCode) {
 
     /**
      * <p>
-     * A code which indicates the reason that the resource was non-compliant.
+     * A code that indicates the reason that the resource was noncompliant.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param reasonForNonComplianceCode <p>
-     *            A code which indicates the reason that the resource was
-     *            non-compliant.
+     *            A code that indicates the reason that the resource was
+     *            noncompliant.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -609,6 +687,8 @@ public AuditFinding withReasonForNonComplianceCode(String reasonForNonCompliance
     public String toString() {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
+        if (getFindingId() != null)
+            sb.append("findingId: " + getFindingId() + ",");
         if (getTaskId() != null)
             sb.append("taskId: " + getTaskId() + ",");
         if (getCheckName() != null)
@@ -636,6 +716,7 @@ public int hashCode() {
         final int prime = 31;
         int hashCode = 1;
 
+        hashCode = prime * hashCode + ((getFindingId() == null) ? 0 : getFindingId().hashCode());
         hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
         hashCode = prime * hashCode + ((getCheckName() == null) ? 0 : getCheckName().hashCode());
         hashCode = prime * hashCode
@@ -669,6 +750,11 @@ public boolean equals(Object obj) {
             return false;
         AuditFinding other = (AuditFinding) obj;
 
+        if (other.getFindingId() == null ^ this.getFindingId() == null)
+            return false;
+        if (other.getFindingId() != null
+                && other.getFindingId().equals(this.getFindingId()) == false)
+            return false;
         if (other.getTaskId() == null ^ this.getTaskId() == null)
             return false;
         if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionExecutionMetadata.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionExecutionMetadata.java
new file mode 100644
index 0000000000..62c0cd89d3
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionExecutionMetadata.java
@@ -0,0 +1,754 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Returned by ListAuditMitigationActionsTask, this object contains information
+ * that describes a mitigation action that has been started.
+ * </p>
+ */
+public class AuditMitigationActionExecutionMetadata implements Serializable {
+    /**
+     * <p>
+     * The unique identifier for the task that applies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * The unique identifier for the findings to which the task and associated
+     * mitigation action are applied.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String findingId;
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action being applied by the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The unique identifier for the mitigation action being applied by the
+     * task.
+     * </p>
+     */
+    private String actionId;
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     */
+    private String status;
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     */
+    private java.util.Date startTime;
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled. Blank if the
+     * task is still running.
+     * </p>
+     */
+    private java.util.Date endTime;
+
+    /**
+     * <p>
+     * If an error occurred, the code that indicates which type of error
+     * occurred.
+     * </p>
+     */
+    private String errorCode;
+
+    /**
+     * <p>
+     * If an error occurred, a message that describes the error.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 2048<br/>
+     */
+    private String message;
+
+    /**
+     * <p>
+     * The unique identifier for the task that applies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the task that applies the mitigation
+     *         action.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task that applies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task that applies the mitigation
+     *            action.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task that applies the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task that applies the mitigation
+     *            action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the findings to which the task and associated
+     * mitigation action are applied.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the findings to which the task and
+     *         associated mitigation action are applied.
+     *         </p>
+     */
+    public String getFindingId() {
+        return findingId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the findings to which the task and associated
+     * mitigation action are applied.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            The unique identifier for the findings to which the task and
+     *            associated mitigation action are applied.
+     *            </p>
+     */
+    public void setFindingId(String findingId) {
+        this.findingId = findingId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the findings to which the task and associated
+     * mitigation action are applied.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            The unique identifier for the findings to which the task and
+     *            associated mitigation action are applied.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withFindingId(String findingId) {
+        this.findingId = findingId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action being applied by the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The friendly name of the mitigation action being applied by the
+     *         task.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action being applied by the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name of the mitigation action being applied by
+     *            the task.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action being applied by the task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name of the mitigation action being applied by
+     *            the task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the mitigation action being applied by the
+     * task.
+     * </p>
+     *
+     * @return <p>
+     *         The unique identifier for the mitigation action being applied by
+     *         the task.
+     *         </p>
+     */
+    public String getActionId() {
+        return actionId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the mitigation action being applied by the
+     * task.
+     * </p>
+     *
+     * @param actionId <p>
+     *            The unique identifier for the mitigation action being applied
+     *            by the task.
+     *            </p>
+     */
+    public void setActionId(String actionId) {
+        this.actionId = actionId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the mitigation action being applied by the
+     * task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionId <p>
+     *            The unique identifier for the mitigation action being applied
+     *            by the task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withActionId(String actionId) {
+        this.actionId = actionId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @return <p>
+     *         The current status of the task being executed.
+     *         </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public String getStatus() {
+        return status;
+    }
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param status <p>
+     *            The current status of the task being executed.
+     *            </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public void setStatus(String status) {
+        this.status = status;
+    }
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param status <p>
+     *            The current status of the task being executed.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public AuditMitigationActionExecutionMetadata withStatus(String status) {
+        this.status = status;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param status <p>
+     *            The current status of the task being executed.
+     *            </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public void setStatus(AuditMitigationActionsExecutionStatus status) {
+        this.status = status.toString();
+    }
+
+    /**
+     * <p>
+     * The current status of the task being executed.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param status <p>
+     *            The current status of the task being executed.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public AuditMitigationActionExecutionMetadata withStatus(
+            AuditMitigationActionsExecutionStatus status) {
+        this.status = status.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the task was started.
+     *         </p>
+     */
+    public java.util.Date getStartTime() {
+        return startTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     *
+     * @param startTime <p>
+     *            The date and time when the task was started.
+     *            </p>
+     */
+    public void setStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param startTime <p>
+     *            The date and time when the task was started.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled. Blank if the
+     * task is still running.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the task was completed or canceled. Blank
+     *         if the task is still running.
+     *         </p>
+     */
+    public java.util.Date getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled. Blank if the
+     * task is still running.
+     * </p>
+     *
+     * @param endTime <p>
+     *            The date and time when the task was completed or canceled.
+     *            Blank if the task is still running.
+     *            </p>
+     */
+    public void setEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled. Blank if the
+     * task is still running.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endTime <p>
+     *            The date and time when the task was completed or canceled.
+     *            Blank if the task is still running.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, the code that indicates which type of error
+     * occurred.
+     * </p>
+     *
+     * @return <p>
+     *         If an error occurred, the code that indicates which type of error
+     *         occurred.
+     *         </p>
+     */
+    public String getErrorCode() {
+        return errorCode;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, the code that indicates which type of error
+     * occurred.
+     * </p>
+     *
+     * @param errorCode <p>
+     *            If an error occurred, the code that indicates which type of
+     *            error occurred.
+     *            </p>
+     */
+    public void setErrorCode(String errorCode) {
+        this.errorCode = errorCode;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, the code that indicates which type of error
+     * occurred.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param errorCode <p>
+     *            If an error occurred, the code that indicates which type of
+     *            error occurred.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withErrorCode(String errorCode) {
+        this.errorCode = errorCode;
+        return this;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, a message that describes the error.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 2048<br/>
+     *
+     * @return <p>
+     *         If an error occurred, a message that describes the error.
+     *         </p>
+     */
+    public String getMessage() {
+        return message;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, a message that describes the error.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 2048<br/>
+     *
+     * @param message <p>
+     *            If an error occurred, a message that describes the error.
+     *            </p>
+     */
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    /**
+     * <p>
+     * If an error occurred, a message that describes the error.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 2048<br/>
+     *
+     * @param message <p>
+     *            If an error occurred, a message that describes the error.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionExecutionMetadata withMessage(String message) {
+        this.message = message;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId() + ",");
+        if (getFindingId() != null)
+            sb.append("findingId: " + getFindingId() + ",");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName() + ",");
+        if (getActionId() != null)
+            sb.append("actionId: " + getActionId() + ",");
+        if (getStatus() != null)
+            sb.append("status: " + getStatus() + ",");
+        if (getStartTime() != null)
+            sb.append("startTime: " + getStartTime() + ",");
+        if (getEndTime() != null)
+            sb.append("endTime: " + getEndTime() + ",");
+        if (getErrorCode() != null)
+            sb.append("errorCode: " + getErrorCode() + ",");
+        if (getMessage() != null)
+            sb.append("message: " + getMessage());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        hashCode = prime * hashCode + ((getFindingId() == null) ? 0 : getFindingId().hashCode());
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        hashCode = prime * hashCode + ((getActionId() == null) ? 0 : getActionId().hashCode());
+        hashCode = prime * hashCode + ((getStatus() == null) ? 0 : getStatus().hashCode());
+        hashCode = prime * hashCode + ((getStartTime() == null) ? 0 : getStartTime().hashCode());
+        hashCode = prime * hashCode + ((getEndTime() == null) ? 0 : getEndTime().hashCode());
+        hashCode = prime * hashCode + ((getErrorCode() == null) ? 0 : getErrorCode().hashCode());
+        hashCode = prime * hashCode + ((getMessage() == null) ? 0 : getMessage().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AuditMitigationActionExecutionMetadata == false)
+            return false;
+        AuditMitigationActionExecutionMetadata other = (AuditMitigationActionExecutionMetadata) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        if (other.getFindingId() == null ^ this.getFindingId() == null)
+            return false;
+        if (other.getFindingId() != null
+                && other.getFindingId().equals(this.getFindingId()) == false)
+            return false;
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        if (other.getActionId() == null ^ this.getActionId() == null)
+            return false;
+        if (other.getActionId() != null && other.getActionId().equals(this.getActionId()) == false)
+            return false;
+        if (other.getStatus() == null ^ this.getStatus() == null)
+            return false;
+        if (other.getStatus() != null && other.getStatus().equals(this.getStatus()) == false)
+            return false;
+        if (other.getStartTime() == null ^ this.getStartTime() == null)
+            return false;
+        if (other.getStartTime() != null
+                && other.getStartTime().equals(this.getStartTime()) == false)
+            return false;
+        if (other.getEndTime() == null ^ this.getEndTime() == null)
+            return false;
+        if (other.getEndTime() != null && other.getEndTime().equals(this.getEndTime()) == false)
+            return false;
+        if (other.getErrorCode() == null ^ this.getErrorCode() == null)
+            return false;
+        if (other.getErrorCode() != null
+                && other.getErrorCode().equals(this.getErrorCode()) == false)
+            return false;
+        if (other.getMessage() == null ^ this.getMessage() == null)
+            return false;
+        if (other.getMessage() != null && other.getMessage().equals(this.getMessage()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsExecutionStatus.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsExecutionStatus.java
new file mode 100644
index 0000000000..e6f5975d4b
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsExecutionStatus.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Audit Mitigation Actions Execution Status
+ */
+public enum AuditMitigationActionsExecutionStatus {
+
+    IN_PROGRESS("IN_PROGRESS"),
+    COMPLETED("COMPLETED"),
+    FAILED("FAILED"),
+    CANCELED("CANCELED"),
+    SKIPPED("SKIPPED"),
+    PENDING("PENDING");
+
+    private String value;
+
+    private AuditMitigationActionsExecutionStatus(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, AuditMitigationActionsExecutionStatus> enumMap;
+    static {
+        enumMap = new HashMap<String, AuditMitigationActionsExecutionStatus>();
+        enumMap.put("IN_PROGRESS", IN_PROGRESS);
+        enumMap.put("COMPLETED", COMPLETED);
+        enumMap.put("FAILED", FAILED);
+        enumMap.put("CANCELED", CANCELED);
+        enumMap.put("SKIPPED", SKIPPED);
+        enumMap.put("PENDING", PENDING);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return AuditMitigationActionsExecutionStatus corresponding to the value
+     */
+    public static AuditMitigationActionsExecutionStatus fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskMetadata.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskMetadata.java
new file mode 100644
index 0000000000..ab92cbcb9b
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskMetadata.java
@@ -0,0 +1,316 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Information about an audit mitigation actions task that is returned by
+ * <code>ListAuditMitigationActionsTasks</code>.
+ * </p>
+ */
+public class AuditMitigationActionsTaskMetadata implements Serializable {
+    /**
+     * <p>
+     * The unique identifier for the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * The time at which the audit mitigation actions task was started.
+     * </p>
+     */
+    private java.util.Date startTime;
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     */
+    private String taskStatus;
+
+    /**
+     * <p>
+     * The unique identifier for the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the task.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskMetadata withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The time at which the audit mitigation actions task was started.
+     * </p>
+     *
+     * @return <p>
+     *         The time at which the audit mitigation actions task was started.
+     *         </p>
+     */
+    public java.util.Date getStartTime() {
+        return startTime;
+    }
+
+    /**
+     * <p>
+     * The time at which the audit mitigation actions task was started.
+     * </p>
+     *
+     * @param startTime <p>
+     *            The time at which the audit mitigation actions task was
+     *            started.
+     *            </p>
+     */
+    public void setStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+    }
+
+    /**
+     * <p>
+     * The time at which the audit mitigation actions task was started.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param startTime <p>
+     *            The time at which the audit mitigation actions task was
+     *            started.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskMetadata withStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @return <p>
+     *         The current state of the audit mitigation actions task.
+     *         </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public String getTaskStatus() {
+        return taskStatus;
+    }
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current state of the audit mitigation actions task.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+    }
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current state of the audit mitigation actions task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public AuditMitigationActionsTaskMetadata withTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current state of the audit mitigation actions task.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+    }
+
+    /**
+     * <p>
+     * The current state of the audit mitigation actions task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current state of the audit mitigation actions task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public AuditMitigationActionsTaskMetadata withTaskStatus(
+            AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId() + ",");
+        if (getStartTime() != null)
+            sb.append("startTime: " + getStartTime() + ",");
+        if (getTaskStatus() != null)
+            sb.append("taskStatus: " + getTaskStatus());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        hashCode = prime * hashCode + ((getStartTime() == null) ? 0 : getStartTime().hashCode());
+        hashCode = prime * hashCode + ((getTaskStatus() == null) ? 0 : getTaskStatus().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AuditMitigationActionsTaskMetadata == false)
+            return false;
+        AuditMitigationActionsTaskMetadata other = (AuditMitigationActionsTaskMetadata) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        if (other.getStartTime() == null ^ this.getStartTime() == null)
+            return false;
+        if (other.getStartTime() != null
+                && other.getStartTime().equals(this.getStartTime()) == false)
+            return false;
+        if (other.getTaskStatus() == null ^ this.getTaskStatus() == null)
+            return false;
+        if (other.getTaskStatus() != null
+                && other.getTaskStatus().equals(this.getTaskStatus()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskStatus.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskStatus.java
new file mode 100644
index 0000000000..138da70be9
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskStatus.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Audit Mitigation Actions Task Status
+ */
+public enum AuditMitigationActionsTaskStatus {
+
+    IN_PROGRESS("IN_PROGRESS"),
+    COMPLETED("COMPLETED"),
+    FAILED("FAILED"),
+    CANCELED("CANCELED");
+
+    private String value;
+
+    private AuditMitigationActionsTaskStatus(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, AuditMitigationActionsTaskStatus> enumMap;
+    static {
+        enumMap = new HashMap<String, AuditMitigationActionsTaskStatus>();
+        enumMap.put("IN_PROGRESS", IN_PROGRESS);
+        enumMap.put("COMPLETED", COMPLETED);
+        enumMap.put("FAILED", FAILED);
+        enumMap.put("CANCELED", CANCELED);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return AuditMitigationActionsTaskStatus corresponding to the value
+     */
+    public static AuditMitigationActionsTaskStatus fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskTarget.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskTarget.java
new file mode 100644
index 0000000000..399a88e36d
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditMitigationActionsTaskTarget.java
@@ -0,0 +1,370 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Used in MitigationActionParams, this information identifies the target
+ * findings to which the mitigation actions are applied. Only one entry appears.
+ * </p>
+ */
+public class AuditMitigationActionsTaskTarget implements Serializable {
+    /**
+     * <p>
+     * If the task will apply a mitigation action to findings from a specific
+     * audit, this value uniquely identifies the audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     */
+    private String auditTaskId;
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to one or more listed
+     * findings, this value uniquely identifies those findings.
+     * </p>
+     */
+    private java.util.List<String> findingIds;
+
+    /**
+     * <p>
+     * Specifies a filter in the form of an audit check and set of reason codes
+     * that identify the findings from the audit to which the audit mitigation
+     * actions task apply.
+     * </p>
+     */
+    private java.util.Map<String, java.util.List<String>> auditCheckToReasonCodeFilter;
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to findings from a specific
+     * audit, this value uniquely identifies the audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @return <p>
+     *         If the task will apply a mitigation action to findings from a
+     *         specific audit, this value uniquely identifies the audit.
+     *         </p>
+     */
+    public String getAuditTaskId() {
+        return auditTaskId;
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to findings from a specific
+     * audit, this value uniquely identifies the audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @param auditTaskId <p>
+     *            If the task will apply a mitigation action to findings from a
+     *            specific audit, this value uniquely identifies the audit.
+     *            </p>
+     */
+    public void setAuditTaskId(String auditTaskId) {
+        this.auditTaskId = auditTaskId;
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to findings from a specific
+     * audit, this value uniquely identifies the audit.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @param auditTaskId <p>
+     *            If the task will apply a mitigation action to findings from a
+     *            specific audit, this value uniquely identifies the audit.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskTarget withAuditTaskId(String auditTaskId) {
+        this.auditTaskId = auditTaskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to one or more listed
+     * findings, this value uniquely identifies those findings.
+     * </p>
+     *
+     * @return <p>
+     *         If the task will apply a mitigation action to one or more listed
+     *         findings, this value uniquely identifies those findings.
+     *         </p>
+     */
+    public java.util.List<String> getFindingIds() {
+        return findingIds;
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to one or more listed
+     * findings, this value uniquely identifies those findings.
+     * </p>
+     *
+     * @param findingIds <p>
+     *            If the task will apply a mitigation action to one or more
+     *            listed findings, this value uniquely identifies those
+     *            findings.
+     *            </p>
+     */
+    public void setFindingIds(java.util.Collection<String> findingIds) {
+        if (findingIds == null) {
+            this.findingIds = null;
+            return;
+        }
+
+        this.findingIds = new java.util.ArrayList<String>(findingIds);
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to one or more listed
+     * findings, this value uniquely identifies those findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param findingIds <p>
+     *            If the task will apply a mitigation action to one or more
+     *            listed findings, this value uniquely identifies those
+     *            findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskTarget withFindingIds(String... findingIds) {
+        if (getFindingIds() == null) {
+            this.findingIds = new java.util.ArrayList<String>(findingIds.length);
+        }
+        for (String value : findingIds) {
+            this.findingIds.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * If the task will apply a mitigation action to one or more listed
+     * findings, this value uniquely identifies those findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param findingIds <p>
+     *            If the task will apply a mitigation action to one or more
+     *            listed findings, this value uniquely identifies those
+     *            findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskTarget withFindingIds(java.util.Collection<String> findingIds) {
+        setFindingIds(findingIds);
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies a filter in the form of an audit check and set of reason codes
+     * that identify the findings from the audit to which the audit mitigation
+     * actions task apply.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies a filter in the form of an audit check and set of
+     *         reason codes that identify the findings from the audit to which
+     *         the audit mitigation actions task apply.
+     *         </p>
+     */
+    public java.util.Map<String, java.util.List<String>> getAuditCheckToReasonCodeFilter() {
+        return auditCheckToReasonCodeFilter;
+    }
+
+    /**
+     * <p>
+     * Specifies a filter in the form of an audit check and set of reason codes
+     * that identify the findings from the audit to which the audit mitigation
+     * actions task apply.
+     * </p>
+     *
+     * @param auditCheckToReasonCodeFilter <p>
+     *            Specifies a filter in the form of an audit check and set of
+     *            reason codes that identify the findings from the audit to
+     *            which the audit mitigation actions task apply.
+     *            </p>
+     */
+    public void setAuditCheckToReasonCodeFilter(
+            java.util.Map<String, java.util.List<String>> auditCheckToReasonCodeFilter) {
+        this.auditCheckToReasonCodeFilter = auditCheckToReasonCodeFilter;
+    }
+
+    /**
+     * <p>
+     * Specifies a filter in the form of an audit check and set of reason codes
+     * that identify the findings from the audit to which the audit mitigation
+     * actions task apply.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param auditCheckToReasonCodeFilter <p>
+     *            Specifies a filter in the form of an audit check and set of
+     *            reason codes that identify the findings from the audit to
+     *            which the audit mitigation actions task apply.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskTarget withAuditCheckToReasonCodeFilter(
+            java.util.Map<String, java.util.List<String>> auditCheckToReasonCodeFilter) {
+        this.auditCheckToReasonCodeFilter = auditCheckToReasonCodeFilter;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies a filter in the form of an audit check and set of reason codes
+     * that identify the findings from the audit to which the audit mitigation
+     * actions task apply.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into auditCheckToReasonCodeFilter
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into
+     *            auditCheckToReasonCodeFilter.
+     * @param value The corresponding value of the entry to be added into
+     *            auditCheckToReasonCodeFilter.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public AuditMitigationActionsTaskTarget addauditCheckToReasonCodeFilterEntry(String key,
+            java.util.List<String> value) {
+        if (null == this.auditCheckToReasonCodeFilter) {
+            this.auditCheckToReasonCodeFilter = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.auditCheckToReasonCodeFilter.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.auditCheckToReasonCodeFilter.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into auditCheckToReasonCodeFilter.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public AuditMitigationActionsTaskTarget clearauditCheckToReasonCodeFilterEntries() {
+        this.auditCheckToReasonCodeFilter = null;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAuditTaskId() != null)
+            sb.append("auditTaskId: " + getAuditTaskId() + ",");
+        if (getFindingIds() != null)
+            sb.append("findingIds: " + getFindingIds() + ",");
+        if (getAuditCheckToReasonCodeFilter() != null)
+            sb.append("auditCheckToReasonCodeFilter: " + getAuditCheckToReasonCodeFilter());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getAuditTaskId() == null) ? 0 : getAuditTaskId().hashCode());
+        hashCode = prime * hashCode + ((getFindingIds() == null) ? 0 : getFindingIds().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAuditCheckToReasonCodeFilter() == null) ? 0
+                        : getAuditCheckToReasonCodeFilter().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof AuditMitigationActionsTaskTarget == false)
+            return false;
+        AuditMitigationActionsTaskTarget other = (AuditMitigationActionsTaskTarget) obj;
+
+        if (other.getAuditTaskId() == null ^ this.getAuditTaskId() == null)
+            return false;
+        if (other.getAuditTaskId() != null
+                && other.getAuditTaskId().equals(this.getAuditTaskId()) == false)
+            return false;
+        if (other.getFindingIds() == null ^ this.getFindingIds() == null)
+            return false;
+        if (other.getFindingIds() != null
+                && other.getFindingIds().equals(this.getFindingIds()) == false)
+            return false;
+        if (other.getAuditCheckToReasonCodeFilter() == null
+                ^ this.getAuditCheckToReasonCodeFilter() == null)
+            return false;
+        if (other.getAuditCheckToReasonCodeFilter() != null
+                && other.getAuditCheckToReasonCodeFilter().equals(
+                        this.getAuditCheckToReasonCodeFilter()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditTaskMetadata.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditTaskMetadata.java
index 73b2037d57..a144f05904 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditTaskMetadata.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/AuditTaskMetadata.java
@@ -36,7 +36,7 @@
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -47,7 +47,7 @@
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -115,7 +115,7 @@ public AuditTaskMetadata withTaskId(String taskId) {
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -123,8 +123,8 @@ public AuditTaskMetadata withTaskId(String taskId) {
      * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
      *
      * @return <p>
-     *         The status of this audit: one of "IN_PROGRESS", "COMPLETED",
-     *         "FAILED" or "CANCELED".
+     *         The status of this audit. One of "IN_PROGRESS", "COMPLETED",
+     *         "FAILED", or "CANCELED".
      *         </p>
      * @see AuditTaskStatus
      */
@@ -134,7 +134,7 @@ public String getTaskStatus() {
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -142,8 +142,8 @@ public String getTaskStatus() {
      * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
      *
      * @param taskStatus <p>
-     *            The status of this audit: one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            The status of this audit. One of "IN_PROGRESS", "COMPLETED",
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @see AuditTaskStatus
      */
@@ -153,7 +153,7 @@ public void setTaskStatus(String taskStatus) {
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -164,8 +164,8 @@ public void setTaskStatus(String taskStatus) {
      * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
      *
      * @param taskStatus <p>
-     *            The status of this audit: one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            The status of this audit. One of "IN_PROGRESS", "COMPLETED",
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -178,7 +178,7 @@ public AuditTaskMetadata withTaskStatus(String taskStatus) {
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -186,8 +186,8 @@ public AuditTaskMetadata withTaskStatus(String taskStatus) {
      * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
      *
      * @param taskStatus <p>
-     *            The status of this audit: one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            The status of this audit. One of "IN_PROGRESS", "COMPLETED",
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @see AuditTaskStatus
      */
@@ -197,7 +197,7 @@ public void setTaskStatus(AuditTaskStatus taskStatus) {
 
     /**
      * <p>
-     * The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or
+     * The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or
      * "CANCELED".
      * </p>
      * <p>
@@ -208,8 +208,8 @@ public void setTaskStatus(AuditTaskStatus taskStatus) {
      * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
      *
      * @param taskStatus <p>
-     *            The status of this audit: one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            The status of this audit. One of "IN_PROGRESS", "COMPLETED",
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -222,7 +222,7 @@ public AuditTaskMetadata withTaskStatus(AuditTaskStatus taskStatus) {
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -230,7 +230,7 @@ public AuditTaskMetadata withTaskStatus(AuditTaskStatus taskStatus) {
      * <b>Allowed Values: </b>ON_DEMAND_AUDIT_TASK, SCHEDULED_AUDIT_TASK
      *
      * @return <p>
-     *         The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     *         The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      *         "SCHEDULED_AUDIT_TASK".
      *         </p>
      * @see AuditTaskType
@@ -241,7 +241,7 @@ public String getTaskType() {
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -249,7 +249,7 @@ public String getTaskType() {
      * <b>Allowed Values: </b>ON_DEMAND_AUDIT_TASK, SCHEDULED_AUDIT_TASK
      *
      * @param taskType <p>
-     *            The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     *            The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      *            "SCHEDULED_AUDIT_TASK".
      *            </p>
      * @see AuditTaskType
@@ -260,7 +260,7 @@ public void setTaskType(String taskType) {
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -271,7 +271,7 @@ public void setTaskType(String taskType) {
      * <b>Allowed Values: </b>ON_DEMAND_AUDIT_TASK, SCHEDULED_AUDIT_TASK
      *
      * @param taskType <p>
-     *            The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     *            The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      *            "SCHEDULED_AUDIT_TASK".
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -285,7 +285,7 @@ public AuditTaskMetadata withTaskType(String taskType) {
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -293,7 +293,7 @@ public AuditTaskMetadata withTaskType(String taskType) {
      * <b>Allowed Values: </b>ON_DEMAND_AUDIT_TASK, SCHEDULED_AUDIT_TASK
      *
      * @param taskType <p>
-     *            The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     *            The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      *            "SCHEDULED_AUDIT_TASK".
      *            </p>
      * @see AuditTaskType
@@ -304,7 +304,7 @@ public void setTaskType(AuditTaskType taskType) {
 
     /**
      * <p>
-     * The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     * The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      * "SCHEDULED_AUDIT_TASK".
      * </p>
      * <p>
@@ -315,7 +315,7 @@ public void setTaskType(AuditTaskType taskType) {
      * <b>Allowed Values: </b>ON_DEMAND_AUDIT_TASK, SCHEDULED_AUDIT_TASK
      *
      * @param taskType <p>
-     *            The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or
+     *            The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or
      *            "SCHEDULED_AUDIT_TASK".
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CACertificateUpdateAction.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CACertificateUpdateAction.java
new file mode 100644
index 0000000000..780d4ab154
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CACertificateUpdateAction.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * CACertificate Update Action
+ */
+public enum CACertificateUpdateAction {
+
+    DEACTIVATE("DEACTIVATE");
+
+    private String value;
+
+    private CACertificateUpdateAction(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, CACertificateUpdateAction> enumMap;
+    static {
+        enumMap = new HashMap<String, CACertificateUpdateAction>();
+        enumMap.put("DEACTIVATE", DEACTIVATE);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return CACertificateUpdateAction corresponding to the value
+     */
+    public static CACertificateUpdateAction fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskRequest.java
new file mode 100644
index 0000000000..8d54b8f969
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskRequest.java
@@ -0,0 +1,141 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Cancels a mitigation action task that is in progress. If the task is not in
+ * progress, an InvalidRequestException occurs.
+ * </p>
+ */
+public class CancelAuditMitigationActionsTaskRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * The unique identifier for the task that you want to cancel.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * The unique identifier for the task that you want to cancel.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the task that you want to cancel.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task that you want to cancel.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task that you want to cancel.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the task that you want to cancel.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the task that you want to cancel.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CancelAuditMitigationActionsTaskRequest withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CancelAuditMitigationActionsTaskRequest == false)
+            return false;
+        CancelAuditMitigationActionsTaskRequest other = (CancelAuditMitigationActionsTaskRequest) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskResult.java
new file mode 100644
index 0000000000..c9838c5bfe
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CancelAuditMitigationActionsTaskResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class CancelAuditMitigationActionsTaskResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CancelAuditMitigationActionsTaskResult == false)
+            return false;
+        CancelAuditMitigationActionsTaskResult other = (CancelAuditMitigationActionsTaskResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionRequest.java
new file mode 100644
index 0000000000..3d1de38679
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionRequest.java
@@ -0,0 +1,375 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Defines an action that can be applied to audit findings by using
+ * StartAuditMitigationActionsTask. Each mitigation action can apply only one
+ * type of change.
+ * </p>
+ */
+public class CreateMitigationActionRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A friendly name for the action. Choose a friendly name that accurately
+     * describes the action (for example, <code>EnableLoggingAction</code>).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleArn;
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     */
+    private MitigationActionParams actionParams;
+
+    /**
+     * <p>
+     * Metadata that can be used to manage the mitigation action.
+     * </p>
+     */
+    private java.util.List<Tag> tags;
+
+    /**
+     * <p>
+     * A friendly name for the action. Choose a friendly name that accurately
+     * describes the action (for example, <code>EnableLoggingAction</code>).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         A friendly name for the action. Choose a friendly name that
+     *         accurately describes the action (for example,
+     *         <code>EnableLoggingAction</code>).
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * A friendly name for the action. Choose a friendly name that accurately
+     * describes the action (for example, <code>EnableLoggingAction</code>).
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            A friendly name for the action. Choose a friendly name that
+     *            accurately describes the action (for example,
+     *            <code>EnableLoggingAction</code>).
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * A friendly name for the action. Choose a friendly name that accurately
+     * describes the action (for example, <code>EnableLoggingAction</code>).
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            A friendly name for the action. Choose a friendly name that
+     *            accurately describes the action (for example,
+     *            <code>EnableLoggingAction</code>).
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionRequest withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The ARN of the IAM role that is used to apply the mitigation
+     *         action.
+     *         </p>
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role that is used to apply the mitigation
+     *            action.
+     *            </p>
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role that is used to apply the mitigation
+     *            action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionRequest withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     *
+     * @return <p>
+     *         Defines the type of action and the parameters for that action.
+     *         </p>
+     */
+    public MitigationActionParams getActionParams() {
+        return actionParams;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     *
+     * @param actionParams <p>
+     *            Defines the type of action and the parameters for that action.
+     *            </p>
+     */
+    public void setActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionParams <p>
+     *            Defines the type of action and the parameters for that action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionRequest withActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Metadata that can be used to manage the mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         Metadata that can be used to manage the mitigation action.
+     *         </p>
+     */
+    public java.util.List<Tag> getTags() {
+        return tags;
+    }
+
+    /**
+     * <p>
+     * Metadata that can be used to manage the mitigation action.
+     * </p>
+     *
+     * @param tags <p>
+     *            Metadata that can be used to manage the mitigation action.
+     *            </p>
+     */
+    public void setTags(java.util.Collection<Tag> tags) {
+        if (tags == null) {
+            this.tags = null;
+            return;
+        }
+
+        this.tags = new java.util.ArrayList<Tag>(tags);
+    }
+
+    /**
+     * <p>
+     * Metadata that can be used to manage the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param tags <p>
+     *            Metadata that can be used to manage the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionRequest withTags(Tag... tags) {
+        if (getTags() == null) {
+            this.tags = new java.util.ArrayList<Tag>(tags.length);
+        }
+        for (Tag value : tags) {
+            this.tags.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * Metadata that can be used to manage the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param tags <p>
+     *            Metadata that can be used to manage the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionRequest withTags(java.util.Collection<Tag> tags) {
+        setTags(tags);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName() + ",");
+        if (getRoleArn() != null)
+            sb.append("roleArn: " + getRoleArn() + ",");
+        if (getActionParams() != null)
+            sb.append("actionParams: " + getActionParams() + ",");
+        if (getTags() != null)
+            sb.append("tags: " + getTags());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getActionParams() == null) ? 0 : getActionParams().hashCode());
+        hashCode = prime * hashCode + ((getTags() == null) ? 0 : getTags().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateMitigationActionRequest == false)
+            return false;
+        CreateMitigationActionRequest other = (CreateMitigationActionRequest) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        if (other.getActionParams() == null ^ this.getActionParams() == null)
+            return false;
+        if (other.getActionParams() != null
+                && other.getActionParams().equals(this.getActionParams()) == false)
+            return false;
+        if (other.getTags() == null ^ this.getTags() == null)
+            return false;
+        if (other.getTags() != null && other.getTags().equals(this.getTags()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionResult.java
new file mode 100644
index 0000000000..cda369c657
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateMitigationActionResult.java
@@ -0,0 +1,176 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class CreateMitigationActionResult implements Serializable {
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     */
+    private String actionArn;
+
+    /**
+     * <p>
+     * A unique identifier for the new mitigation action.
+     * </p>
+     */
+    private String actionId;
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         The ARN for the new mitigation action.
+     *         </p>
+     */
+    public String getActionArn() {
+        return actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     *
+     * @param actionArn <p>
+     *            The ARN for the new mitigation action.
+     *            </p>
+     */
+    public void setActionArn(String actionArn) {
+        this.actionArn = actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionArn <p>
+     *            The ARN for the new mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionResult withActionArn(String actionArn) {
+        this.actionArn = actionArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the new mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         A unique identifier for the new mitigation action.
+     *         </p>
+     */
+    public String getActionId() {
+        return actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the new mitigation action.
+     * </p>
+     *
+     * @param actionId <p>
+     *            A unique identifier for the new mitigation action.
+     *            </p>
+     */
+    public void setActionId(String actionId) {
+        this.actionId = actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the new mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionId <p>
+     *            A unique identifier for the new mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public CreateMitigationActionResult withActionId(String actionId) {
+        this.actionId = actionId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionArn() != null)
+            sb.append("actionArn: " + getActionArn() + ",");
+        if (getActionId() != null)
+            sb.append("actionId: " + getActionId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionArn() == null) ? 0 : getActionArn().hashCode());
+        hashCode = prime * hashCode + ((getActionId() == null) ? 0 : getActionId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof CreateMitigationActionResult == false)
+            return false;
+        CreateMitigationActionResult other = (CreateMitigationActionResult) obj;
+
+        if (other.getActionArn() == null ^ this.getActionArn() == null)
+            return false;
+        if (other.getActionArn() != null
+                && other.getActionArn().equals(this.getActionArn()) == false)
+            return false;
+        if (other.getActionId() == null ^ this.getActionId() == null)
+            return false;
+        if (other.getActionId() != null && other.getActionId().equals(this.getActionId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateScheduledAuditRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateScheduledAuditRequest.java
index c1c9aeac36..e6968a4432 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateScheduledAuditRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateScheduledAuditRequest.java
@@ -28,7 +28,7 @@
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -54,7 +54,7 @@
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -68,20 +68,13 @@
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
      */
     private java.util.List<String> targetCheckNames;
 
-    /**
-     * <p>
-     * Metadata which can be used to manage the scheduled audit.
-     * </p>
-     */
-    private java.util.List<Tag> tags;
-
     /**
      * <p>
      * The name you want to give to the scheduled audit. (Max. 128 chars)
@@ -93,10 +86,17 @@
      */
     private String scheduledAuditName;
 
+    /**
+     * <p>
+     * Metadata that can be used to manage the scheduled audit.
+     * </p>
+     */
+    private java.util.List<Tag> tags;
+
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -105,8 +105,8 @@
      *
      * @return <p>
      *         How often the scheduled audit takes place. Can be one of "DAILY",
-     *         "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each
-     *         audit is determined by the system.
+     *         "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit
+     *         is determined by the system.
      *         </p>
      * @see AuditFrequency
      */
@@ -117,7 +117,7 @@ public String getFrequency() {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -126,8 +126,8 @@ public String getFrequency() {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -138,7 +138,7 @@ public void setFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -150,8 +150,8 @@ public void setFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -165,7 +165,7 @@ public CreateScheduledAuditRequest withFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -174,8 +174,8 @@ public CreateScheduledAuditRequest withFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -186,7 +186,7 @@ public void setFrequency(AuditFrequency frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -198,8 +198,8 @@ public void setFrequency(AuditFrequency frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -291,7 +291,7 @@ public CreateScheduledAuditRequest withDayOfMonth(String dayOfMonth) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -300,9 +300,9 @@ public CreateScheduledAuditRequest withDayOfMonth(String dayOfMonth) {
      *
      * @return <p>
      *         The day of the week on which the scheduled audit takes place. Can
-     *         be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This
-     *         field is required if the "frequency" parameter is set to "WEEKLY"
-     *         or "BIWEEKLY".
+     *         be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
+     *         This field is required if the "frequency" parameter is set to
+     *         "WEEKLY" or "BIWEEKLY".
      *         </p>
      * @see DayOfWeek
      */
@@ -313,7 +313,7 @@ public String getDayOfWeek() {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -322,7 +322,7 @@ public String getDayOfWeek() {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -335,7 +335,7 @@ public void setDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -347,7 +347,7 @@ public void setDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -363,7 +363,7 @@ public CreateScheduledAuditRequest withDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -372,7 +372,7 @@ public CreateScheduledAuditRequest withDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -385,7 +385,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -397,7 +397,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -415,7 +415,7 @@ public CreateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -424,7 +424,7 @@ public CreateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      *         Which checks are performed during the scheduled audit. Checks
      *         must be enabled for your account. (Use
      *         <code>DescribeAccountAuditConfiguration</code> to see the list of
-     *         all checks including those that are enabled or
+     *         all checks, including those that are enabled or use
      *         <code>UpdateAccountAuditConfiguration</code> to select which
      *         checks are enabled.)
      *         </p>
@@ -438,7 +438,7 @@ public CreateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -447,7 +447,7 @@ public CreateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -466,7 +466,7 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -478,7 +478,7 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -500,7 +500,7 @@ public CreateScheduledAuditRequest withTargetCheckNames(String... targetCheckNam
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -512,7 +512,7 @@ public CreateScheduledAuditRequest withTargetCheckNames(String... targetCheckNam
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -527,135 +527,135 @@ public CreateScheduledAuditRequest withTargetCheckNames(
 
     /**
      * <p>
-     * Metadata which can be used to manage the scheduled audit.
+     * The name you want to give to the scheduled audit. (Max. 128 chars)
      * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
      *
      * @return <p>
-     *         Metadata which can be used to manage the scheduled audit.
+     *         The name you want to give to the scheduled audit. (Max. 128
+     *         chars)
      *         </p>
      */
-    public java.util.List<Tag> getTags() {
-        return tags;
+    public String getScheduledAuditName() {
+        return scheduledAuditName;
     }
 
     /**
      * <p>
-     * Metadata which can be used to manage the scheduled audit.
+     * The name you want to give to the scheduled audit. (Max. 128 chars)
      * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
      *
-     * @param tags <p>
-     *            Metadata which can be used to manage the scheduled audit.
+     * @param scheduledAuditName <p>
+     *            The name you want to give to the scheduled audit. (Max. 128
+     *            chars)
      *            </p>
      */
-    public void setTags(java.util.Collection<Tag> tags) {
-        if (tags == null) {
-            this.tags = null;
-            return;
-        }
-
-        this.tags = new java.util.ArrayList<Tag>(tags);
+    public void setScheduledAuditName(String scheduledAuditName) {
+        this.scheduledAuditName = scheduledAuditName;
     }
 
     /**
      * <p>
-     * Metadata which can be used to manage the scheduled audit.
+     * The name you want to give to the scheduled audit. (Max. 128 chars)
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
      *
-     * @param tags <p>
-     *            Metadata which can be used to manage the scheduled audit.
+     * @param scheduledAuditName <p>
+     *            The name you want to give to the scheduled audit. (Max. 128
+     *            chars)
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public CreateScheduledAuditRequest withTags(Tag... tags) {
-        if (getTags() == null) {
-            this.tags = new java.util.ArrayList<Tag>(tags.length);
-        }
-        for (Tag value : tags) {
-            this.tags.add(value);
-        }
+    public CreateScheduledAuditRequest withScheduledAuditName(String scheduledAuditName) {
+        this.scheduledAuditName = scheduledAuditName;
         return this;
     }
 
     /**
      * <p>
-     * Metadata which can be used to manage the scheduled audit.
+     * Metadata that can be used to manage the scheduled audit.
      * </p>
-     * <p>
-     * Returns a reference to this object so that method calls can be chained
-     * together.
      *
-     * @param tags <p>
-     *            Metadata which can be used to manage the scheduled audit.
-     *            </p>
-     * @return A reference to this updated object so that method calls can be
-     *         chained together.
+     * @return <p>
+     *         Metadata that can be used to manage the scheduled audit.
+     *         </p>
      */
-    public CreateScheduledAuditRequest withTags(java.util.Collection<Tag> tags) {
-        setTags(tags);
-        return this;
+    public java.util.List<Tag> getTags() {
+        return tags;
     }
 
     /**
      * <p>
-     * The name you want to give to the scheduled audit. (Max. 128 chars)
+     * Metadata that can be used to manage the scheduled audit.
      * </p>
-     * <p>
-     * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
      *
-     * @return <p>
-     *         The name you want to give to the scheduled audit. (Max. 128
-     *         chars)
-     *         </p>
+     * @param tags <p>
+     *            Metadata that can be used to manage the scheduled audit.
+     *            </p>
      */
-    public String getScheduledAuditName() {
-        return scheduledAuditName;
+    public void setTags(java.util.Collection<Tag> tags) {
+        if (tags == null) {
+            this.tags = null;
+            return;
+        }
+
+        this.tags = new java.util.ArrayList<Tag>(tags);
     }
 
     /**
      * <p>
-     * The name you want to give to the scheduled audit. (Max. 128 chars)
+     * Metadata that can be used to manage the scheduled audit.
      * </p>
      * <p>
-     * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
      *
-     * @param scheduledAuditName <p>
-     *            The name you want to give to the scheduled audit. (Max. 128
-     *            chars)
+     * @param tags <p>
+     *            Metadata that can be used to manage the scheduled audit.
      *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
      */
-    public void setScheduledAuditName(String scheduledAuditName) {
-        this.scheduledAuditName = scheduledAuditName;
+    public CreateScheduledAuditRequest withTags(Tag... tags) {
+        if (getTags() == null) {
+            this.tags = new java.util.ArrayList<Tag>(tags.length);
+        }
+        for (Tag value : tags) {
+            this.tags.add(value);
+        }
+        return this;
     }
 
     /**
      * <p>
-     * The name you want to give to the scheduled audit. (Max. 128 chars)
+     * Metadata that can be used to manage the scheduled audit.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
-     * <p>
-     * <b>Constraints:</b><br/>
-     * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
      *
-     * @param scheduledAuditName <p>
-     *            The name you want to give to the scheduled audit. (Max. 128
-     *            chars)
+     * @param tags <p>
+     *            Metadata that can be used to manage the scheduled audit.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
      */
-    public CreateScheduledAuditRequest withScheduledAuditName(String scheduledAuditName) {
-        this.scheduledAuditName = scheduledAuditName;
+    public CreateScheduledAuditRequest withTags(java.util.Collection<Tag> tags) {
+        setTags(tags);
         return this;
     }
 
@@ -678,10 +678,10 @@ public String toString() {
             sb.append("dayOfWeek: " + getDayOfWeek() + ",");
         if (getTargetCheckNames() != null)
             sb.append("targetCheckNames: " + getTargetCheckNames() + ",");
-        if (getTags() != null)
-            sb.append("tags: " + getTags() + ",");
         if (getScheduledAuditName() != null)
-            sb.append("scheduledAuditName: " + getScheduledAuditName());
+            sb.append("scheduledAuditName: " + getScheduledAuditName() + ",");
+        if (getTags() != null)
+            sb.append("tags: " + getTags());
         sb.append("}");
         return sb.toString();
     }
@@ -696,9 +696,9 @@ public int hashCode() {
         hashCode = prime * hashCode + ((getDayOfWeek() == null) ? 0 : getDayOfWeek().hashCode());
         hashCode = prime * hashCode
                 + ((getTargetCheckNames() == null) ? 0 : getTargetCheckNames().hashCode());
-        hashCode = prime * hashCode + ((getTags() == null) ? 0 : getTags().hashCode());
         hashCode = prime * hashCode
                 + ((getScheduledAuditName() == null) ? 0 : getScheduledAuditName().hashCode());
+        hashCode = prime * hashCode + ((getTags() == null) ? 0 : getTags().hashCode());
         return hashCode;
     }
 
@@ -733,15 +733,15 @@ public boolean equals(Object obj) {
         if (other.getTargetCheckNames() != null
                 && other.getTargetCheckNames().equals(this.getTargetCheckNames()) == false)
             return false;
-        if (other.getTags() == null ^ this.getTags() == null)
-            return false;
-        if (other.getTags() != null && other.getTags().equals(this.getTags()) == false)
-            return false;
         if (other.getScheduledAuditName() == null ^ this.getScheduledAuditName() == null)
             return false;
         if (other.getScheduledAuditName() != null
                 && other.getScheduledAuditName().equals(this.getScheduledAuditName()) == false)
             return false;
+        if (other.getTags() == null ^ this.getTags() == null)
+            return false;
+        if (other.getTags() != null && other.getTags().equals(this.getTags()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateSecurityProfileRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateSecurityProfileRequest.java
index 5379453eb9..7ee4633895 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateSecurityProfileRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/CreateSecurityProfileRequest.java
@@ -67,7 +67,7 @@
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      */
@@ -75,7 +75,7 @@
 
     /**
      * <p>
-     * Metadata which can be used to manage the security profile.
+     * Metadata that can be used to manage the security profile.
      * </p>
      */
     private java.util.List<Tag> tags;
@@ -377,14 +377,14 @@ public CreateSecurityProfileRequest clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @return <p>
      *         A list of metrics whose data is retained (stored). By default,
      *         data is retained for any metric used in the profile's
-     *         <code>behaviors</code> but it is also retained for any metric
+     *         <code>behaviors</code>, but it is also retained for any metric
      *         specified here.
      *         </p>
      */
@@ -395,14 +395,14 @@ public CreateSecurityProfileRequest clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      */
@@ -418,7 +418,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -428,7 +428,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -449,7 +449,7 @@ public CreateSecurityProfileRequest withAdditionalMetricsToRetain(
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -459,7 +459,7 @@ public CreateSecurityProfileRequest withAdditionalMetricsToRetain(
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -473,11 +473,11 @@ public CreateSecurityProfileRequest withAdditionalMetricsToRetain(
 
     /**
      * <p>
-     * Metadata which can be used to manage the security profile.
+     * Metadata that can be used to manage the security profile.
      * </p>
      *
      * @return <p>
-     *         Metadata which can be used to manage the security profile.
+     *         Metadata that can be used to manage the security profile.
      *         </p>
      */
     public java.util.List<Tag> getTags() {
@@ -486,11 +486,11 @@ public CreateSecurityProfileRequest withAdditionalMetricsToRetain(
 
     /**
      * <p>
-     * Metadata which can be used to manage the security profile.
+     * Metadata that can be used to manage the security profile.
      * </p>
      *
      * @param tags <p>
-     *            Metadata which can be used to manage the security profile.
+     *            Metadata that can be used to manage the security profile.
      *            </p>
      */
     public void setTags(java.util.Collection<Tag> tags) {
@@ -504,14 +504,14 @@ public void setTags(java.util.Collection<Tag> tags) {
 
     /**
      * <p>
-     * Metadata which can be used to manage the security profile.
+     * Metadata that can be used to manage the security profile.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param tags <p>
-     *            Metadata which can be used to manage the security profile.
+     *            Metadata that can be used to manage the security profile.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -528,14 +528,14 @@ public CreateSecurityProfileRequest withTags(Tag... tags) {
 
     /**
      * <p>
-     * Metadata which can be used to manage the security profile.
+     * Metadata that can be used to manage the security profile.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param tags <p>
-     *            Metadata which can be used to manage the security profile.
+     *            Metadata that can be used to manage the security profile.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteCertificateRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteCertificateRequest.java
index 8912a5aabc..aa326793ce 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteCertificateRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteCertificateRequest.java
@@ -24,8 +24,8 @@
  * Deletes the specified certificate.
  * </p>
  * <p>
- * A certificate cannot be deleted if it has a policy attached to it or if its
- * status is set to ACTIVE. To delete a certificate, first use the
+ * A certificate cannot be deleted if it has a policy or IoT thing attached to
+ * it or if its status is set to ACTIVE. To delete a certificate, first use the
  * <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the
  * <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.
  * </p>
@@ -45,7 +45,8 @@
 
     /**
      * <p>
-     * Forces a certificate request to be deleted.
+     * Forces the deletion of a certificate if it is inactive and is not
+     * attached to an IoT thing.
      * </p>
      */
     private Boolean forceDelete;
@@ -115,11 +116,13 @@ public DeleteCertificateRequest withCertificateId(String certificateId) {
 
     /**
      * <p>
-     * Forces a certificate request to be deleted.
+     * Forces the deletion of a certificate if it is inactive and is not
+     * attached to an IoT thing.
      * </p>
      *
      * @return <p>
-     *         Forces a certificate request to be deleted.
+     *         Forces the deletion of a certificate if it is inactive and is not
+     *         attached to an IoT thing.
      *         </p>
      */
     public Boolean isForceDelete() {
@@ -128,11 +131,13 @@ public Boolean isForceDelete() {
 
     /**
      * <p>
-     * Forces a certificate request to be deleted.
+     * Forces the deletion of a certificate if it is inactive and is not
+     * attached to an IoT thing.
      * </p>
      *
      * @return <p>
-     *         Forces a certificate request to be deleted.
+     *         Forces the deletion of a certificate if it is inactive and is not
+     *         attached to an IoT thing.
      *         </p>
      */
     public Boolean getForceDelete() {
@@ -141,11 +146,13 @@ public Boolean getForceDelete() {
 
     /**
      * <p>
-     * Forces a certificate request to be deleted.
+     * Forces the deletion of a certificate if it is inactive and is not
+     * attached to an IoT thing.
      * </p>
      *
      * @param forceDelete <p>
-     *            Forces a certificate request to be deleted.
+     *            Forces the deletion of a certificate if it is inactive and is
+     *            not attached to an IoT thing.
      *            </p>
      */
     public void setForceDelete(Boolean forceDelete) {
@@ -154,14 +161,16 @@ public void setForceDelete(Boolean forceDelete) {
 
     /**
      * <p>
-     * Forces a certificate request to be deleted.
+     * Forces the deletion of a certificate if it is inactive and is not
+     * attached to an IoT thing.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param forceDelete <p>
-     *            Forces a certificate request to be deleted.
+     *            Forces the deletion of a certificate if it is inactive and is
+     *            not attached to an IoT thing.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionRequest.java
new file mode 100644
index 0000000000..88a07c88a4
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionRequest.java
@@ -0,0 +1,140 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Deletes a defined mitigation action from your AWS account.
+ * </p>
+ */
+public class DeleteMitigationActionRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The name of the mitigation action that you want to delete.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The name of the mitigation action that you want to delete.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The name of the mitigation action that you want to delete.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The name of the mitigation action that you want to delete.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The name of the mitigation action that you want to delete.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The name of the mitigation action that you want to delete.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The name of the mitigation action that you want to delete.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DeleteMitigationActionRequest withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteMitigationActionRequest == false)
+            return false;
+        DeleteMitigationActionRequest other = (DeleteMitigationActionRequest) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionResult.java
new file mode 100644
index 0000000000..c093774f92
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteMitigationActionResult.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class DeleteMitigationActionResult implements Serializable {
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DeleteMitigationActionResult == false)
+            return false;
+        DeleteMitigationActionResult other = (DeleteMitigationActionResult) obj;
+
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteSecurityProfileRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteSecurityProfileRequest.java
index 6596aff4fd..e066081eef 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteSecurityProfileRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeleteSecurityProfileRequest.java
@@ -40,7 +40,7 @@
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      */
@@ -107,14 +107,14 @@ public DeleteSecurityProfileRequest withSecurityProfileName(String securityProfi
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      *
      * @return <p>
      *         The expected version of the security profile. A new version is
      *         generated whenever the security profile is updated. If you
-     *         specify a value that is different than the actual version, a
+     *         specify a value that is different from the actual version, a
      *         <code>VersionConflictException</code> is thrown.
      *         </p>
      */
@@ -126,14 +126,14 @@ public Long getExpectedVersion() {
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      *
      * @param expectedVersion <p>
      *            The expected version of the security profile. A new version is
      *            generated whenever the security profile is updated. If you
-     *            specify a value that is different than the actual version, a
+     *            specify a value that is different from the actual version, a
      *            <code>VersionConflictException</code> is thrown.
      *            </p>
      */
@@ -145,7 +145,7 @@ public void setExpectedVersion(Long expectedVersion) {
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      * <p>
@@ -155,7 +155,7 @@ public void setExpectedVersion(Long expectedVersion) {
      * @param expectedVersion <p>
      *            The expected version of the security profile. A new version is
      *            generated whenever the security profile is updated. If you
-     *            specify a value that is different than the actual version, a
+     *            specify a value that is different from the actual version, a
      *            <code>VersionConflictException</code> is thrown.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAccountAuditConfigurationResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAccountAuditConfigurationResult.java
index 745a2fcbec..2d479477af 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAccountAuditConfigurationResult.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAccountAuditConfigurationResult.java
@@ -21,11 +21,11 @@
     /**
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
-     * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * information about your devices, policies, certificates, and other items
+     * as required when performing an audit.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required.
      * </p>
      * <p>
@@ -52,11 +52,11 @@
     /**
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
-     * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * information about your devices, policies, certificates, and other items
+     * as required when performing an audit.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required.
      * </p>
      * <p>
@@ -65,12 +65,12 @@
      *
      * @return <p>
      *         The ARN of the role that grants permission to AWS IoT to access
-     *         information about your devices, policies, certificates and other
-     *         items as necessary when performing an audit.
+     *         information about your devices, policies, certificates, and other
+     *         items as required when performing an audit.
      *         </p>
      *         <p>
      *         On the first call to <code>UpdateAccountAuditConfiguration</code>
-     *         this parameter is required.
+     *         , this parameter is required.
      *         </p>
      */
     public String getRoleArn() {
@@ -80,11 +80,11 @@ public String getRoleArn() {
     /**
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
-     * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * information about your devices, policies, certificates, and other items
+     * as required when performing an audit.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required.
      * </p>
      * <p>
@@ -93,13 +93,13 @@ public String getRoleArn() {
      *
      * @param roleArn <p>
      *            The ARN of the role that grants permission to AWS IoT to
-     *            access information about your devices, policies, certificates
-     *            and other items as necessary when performing an audit.
+     *            access information about your devices, policies, certificates,
+     *            and other items as required when performing an audit.
      *            </p>
      *            <p>
      *            On the first call to
-     *            <code>UpdateAccountAuditConfiguration</code> this parameter is
-     *            required.
+     *            <code>UpdateAccountAuditConfiguration</code>, this parameter
+     *            is required.
      *            </p>
      */
     public void setRoleArn(String roleArn) {
@@ -109,11 +109,11 @@ public void setRoleArn(String roleArn) {
     /**
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
-     * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * information about your devices, policies, certificates, and other items
+     * as required when performing an audit.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required.
      * </p>
      * <p>
@@ -125,13 +125,13 @@ public void setRoleArn(String roleArn) {
      *
      * @param roleArn <p>
      *            The ARN of the role that grants permission to AWS IoT to
-     *            access information about your devices, policies, certificates
-     *            and other items as necessary when performing an audit.
+     *            access information about your devices, policies, certificates,
+     *            and other items as required when performing an audit.
      *            </p>
      *            <p>
      *            On the first call to
-     *            <code>UpdateAccountAuditConfiguration</code> this parameter is
-     *            required.
+     *            <code>UpdateAccountAuditConfiguration</code>, this parameter
+     *            is required.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingRequest.java
new file mode 100644
index 0000000000..35769ca313
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingRequest.java
@@ -0,0 +1,149 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets information about a single audit finding. Properties include the reason
+ * for noncompliance, the severity of the issue, and when the audit that
+ * returned the finding was started.
+ * </p>
+ */
+public class DescribeAuditFindingRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * A unique identifier for a single audit finding. You can use this
+     * identifier to apply mitigation actions to the finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String findingId;
+
+    /**
+     * <p>
+     * A unique identifier for a single audit finding. You can use this
+     * identifier to apply mitigation actions to the finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier for a single audit finding. You can use this
+     *         identifier to apply mitigation actions to the finding.
+     *         </p>
+     */
+    public String getFindingId() {
+        return findingId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for a single audit finding. You can use this
+     * identifier to apply mitigation actions to the finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            A unique identifier for a single audit finding. You can use
+     *            this identifier to apply mitigation actions to the finding.
+     *            </p>
+     */
+    public void setFindingId(String findingId) {
+        this.findingId = findingId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for a single audit finding. You can use this
+     * identifier to apply mitigation actions to the finding.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            A unique identifier for a single audit finding. You can use
+     *            this identifier to apply mitigation actions to the finding.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditFindingRequest withFindingId(String findingId) {
+        this.findingId = findingId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getFindingId() != null)
+            sb.append("findingId: " + getFindingId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getFindingId() == null) ? 0 : getFindingId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeAuditFindingRequest == false)
+            return false;
+        DescribeAuditFindingRequest other = (DescribeAuditFindingRequest) obj;
+
+        if (other.getFindingId() == null ^ this.getFindingId() == null)
+            return false;
+        if (other.getFindingId() != null
+                && other.getFindingId().equals(this.getFindingId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingResult.java
new file mode 100644
index 0000000000..3dabbca654
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditFindingResult.java
@@ -0,0 +1,116 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class DescribeAuditFindingResult implements Serializable {
+    /**
+     * <p>
+     * The findings (results) of the audit.
+     * </p>
+     */
+    private AuditFinding finding;
+
+    /**
+     * <p>
+     * The findings (results) of the audit.
+     * </p>
+     *
+     * @return <p>
+     *         The findings (results) of the audit.
+     *         </p>
+     */
+    public AuditFinding getFinding() {
+        return finding;
+    }
+
+    /**
+     * <p>
+     * The findings (results) of the audit.
+     * </p>
+     *
+     * @param finding <p>
+     *            The findings (results) of the audit.
+     *            </p>
+     */
+    public void setFinding(AuditFinding finding) {
+        this.finding = finding;
+    }
+
+    /**
+     * <p>
+     * The findings (results) of the audit.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param finding <p>
+     *            The findings (results) of the audit.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditFindingResult withFinding(AuditFinding finding) {
+        this.finding = finding;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getFinding() != null)
+            sb.append("finding: " + getFinding());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getFinding() == null) ? 0 : getFinding().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeAuditFindingResult == false)
+            return false;
+        DescribeAuditFindingResult other = (DescribeAuditFindingResult) obj;
+
+        if (other.getFinding() == null ^ this.getFinding() == null)
+            return false;
+        if (other.getFinding() != null && other.getFinding().equals(this.getFinding()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskRequest.java
new file mode 100644
index 0000000000..e4eb105acc
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskRequest.java
@@ -0,0 +1,143 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets information about an audit mitigation task that is used to apply
+ * mitigation actions to a set of audit findings. Properties include the actions
+ * being applied, the audit checks to which they're being applied, the task
+ * status, and aggregated task statistics.
+ * </p>
+ */
+public class DescribeAuditMitigationActionsTaskRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the audit mitigation task.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the audit mitigation task.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the audit mitigation task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskRequest withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeAuditMitigationActionsTaskRequest == false)
+            return false;
+        DescribeAuditMitigationActionsTaskRequest other = (DescribeAuditMitigationActionsTaskRequest) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskResult.java
new file mode 100644
index 0000000000..4268963c69
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeAuditMitigationActionsTaskResult.java
@@ -0,0 +1,688 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class DescribeAuditMitigationActionsTaskResult implements Serializable {
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     */
+    private String taskStatus;
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     */
+    private java.util.Date startTime;
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled.
+     * </p>
+     */
+    private java.util.Date endTime;
+
+    /**
+     * <p>
+     * Aggregate counts of the results when the mitigation tasks were applied to
+     * the findings for this audit mitigation actions task.
+     * </p>
+     */
+    private java.util.Map<String, TaskStatisticsForAuditCheck> taskStatistics;
+
+    /**
+     * <p>
+     * Identifies the findings to which the mitigation actions are applied. This
+     * can be by audit checks, by audit task, or a set of findings.
+     * </p>
+     */
+    private AuditMitigationActionsTaskTarget target;
+
+    /**
+     * <p>
+     * Specifies the mitigation actions that should be applied to specific audit
+     * checks.
+     * </p>
+     */
+    private java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping;
+
+    /**
+     * <p>
+     * Specifies the mitigation actions and their parameters that are applied as
+     * part of this task.
+     * </p>
+     */
+    private java.util.List<MitigationAction> actionsDefinition;
+
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @return <p>
+     *         The current status of the task.
+     *         </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public String getTaskStatus() {
+        return taskStatus;
+    }
+
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current status of the task.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+    }
+
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current status of the task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public DescribeAuditMitigationActionsTaskResult withTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current status of the task.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+    }
+
+    /**
+     * <p>
+     * The current status of the task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            The current status of the task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public DescribeAuditMitigationActionsTaskResult withTaskStatus(
+            AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the task was started.
+     *         </p>
+     */
+    public java.util.Date getStartTime() {
+        return startTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     *
+     * @param startTime <p>
+     *            The date and time when the task was started.
+     *            </p>
+     */
+    public void setStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was started.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param startTime <p>
+     *            The date and time when the task was started.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the task was completed or canceled.
+     *         </p>
+     */
+    public java.util.Date getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled.
+     * </p>
+     *
+     * @param endTime <p>
+     *            The date and time when the task was completed or canceled.
+     *            </p>
+     */
+    public void setEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+    }
+
+    /**
+     * <p>
+     * The date and time when the task was completed or canceled.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endTime <p>
+     *            The date and time when the task was completed or canceled.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Aggregate counts of the results when the mitigation tasks were applied to
+     * the findings for this audit mitigation actions task.
+     * </p>
+     *
+     * @return <p>
+     *         Aggregate counts of the results when the mitigation tasks were
+     *         applied to the findings for this audit mitigation actions task.
+     *         </p>
+     */
+    public java.util.Map<String, TaskStatisticsForAuditCheck> getTaskStatistics() {
+        return taskStatistics;
+    }
+
+    /**
+     * <p>
+     * Aggregate counts of the results when the mitigation tasks were applied to
+     * the findings for this audit mitigation actions task.
+     * </p>
+     *
+     * @param taskStatistics <p>
+     *            Aggregate counts of the results when the mitigation tasks were
+     *            applied to the findings for this audit mitigation actions
+     *            task.
+     *            </p>
+     */
+    public void setTaskStatistics(java.util.Map<String, TaskStatisticsForAuditCheck> taskStatistics) {
+        this.taskStatistics = taskStatistics;
+    }
+
+    /**
+     * <p>
+     * Aggregate counts of the results when the mitigation tasks were applied to
+     * the findings for this audit mitigation actions task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param taskStatistics <p>
+     *            Aggregate counts of the results when the mitigation tasks were
+     *            applied to the findings for this audit mitigation actions
+     *            task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withTaskStatistics(
+            java.util.Map<String, TaskStatisticsForAuditCheck> taskStatistics) {
+        this.taskStatistics = taskStatistics;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Aggregate counts of the results when the mitigation tasks were applied to
+     * the findings for this audit mitigation actions task.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into taskStatistics parameter, and
+     * returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param key The key of the entry to be added into taskStatistics.
+     * @param value The corresponding value of the entry to be added into
+     *            taskStatistics.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult addtaskStatisticsEntry(String key,
+            TaskStatisticsForAuditCheck value) {
+        if (null == this.taskStatistics) {
+            this.taskStatistics = new java.util.HashMap<String, TaskStatisticsForAuditCheck>();
+        }
+        if (this.taskStatistics.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.taskStatistics.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into taskStatistics.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DescribeAuditMitigationActionsTaskResult cleartaskStatisticsEntries() {
+        this.taskStatistics = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Identifies the findings to which the mitigation actions are applied. This
+     * can be by audit checks, by audit task, or a set of findings.
+     * </p>
+     *
+     * @return <p>
+     *         Identifies the findings to which the mitigation actions are
+     *         applied. This can be by audit checks, by audit task, or a set of
+     *         findings.
+     *         </p>
+     */
+    public AuditMitigationActionsTaskTarget getTarget() {
+        return target;
+    }
+
+    /**
+     * <p>
+     * Identifies the findings to which the mitigation actions are applied. This
+     * can be by audit checks, by audit task, or a set of findings.
+     * </p>
+     *
+     * @param target <p>
+     *            Identifies the findings to which the mitigation actions are
+     *            applied. This can be by audit checks, by audit task, or a set
+     *            of findings.
+     *            </p>
+     */
+    public void setTarget(AuditMitigationActionsTaskTarget target) {
+        this.target = target;
+    }
+
+    /**
+     * <p>
+     * Identifies the findings to which the mitigation actions are applied. This
+     * can be by audit checks, by audit task, or a set of findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param target <p>
+     *            Identifies the findings to which the mitigation actions are
+     *            applied. This can be by audit checks, by audit task, or a set
+     *            of findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withTarget(
+            AuditMitigationActionsTaskTarget target) {
+        this.target = target;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions that should be applied to specific audit
+     * checks.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies the mitigation actions that should be applied to
+     *         specific audit checks.
+     *         </p>
+     */
+    public java.util.Map<String, java.util.List<String>> getAuditCheckToActionsMapping() {
+        return auditCheckToActionsMapping;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions that should be applied to specific audit
+     * checks.
+     * </p>
+     *
+     * @param auditCheckToActionsMapping <p>
+     *            Specifies the mitigation actions that should be applied to
+     *            specific audit checks.
+     *            </p>
+     */
+    public void setAuditCheckToActionsMapping(
+            java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping) {
+        this.auditCheckToActionsMapping = auditCheckToActionsMapping;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions that should be applied to specific audit
+     * checks.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param auditCheckToActionsMapping <p>
+     *            Specifies the mitigation actions that should be applied to
+     *            specific audit checks.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withAuditCheckToActionsMapping(
+            java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping) {
+        this.auditCheckToActionsMapping = auditCheckToActionsMapping;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions that should be applied to specific audit
+     * checks.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into auditCheckToActionsMapping
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into
+     *            auditCheckToActionsMapping.
+     * @param value The corresponding value of the entry to be added into
+     *            auditCheckToActionsMapping.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult addauditCheckToActionsMappingEntry(String key,
+            java.util.List<String> value) {
+        if (null == this.auditCheckToActionsMapping) {
+            this.auditCheckToActionsMapping = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.auditCheckToActionsMapping.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.auditCheckToActionsMapping.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into auditCheckToActionsMapping.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public DescribeAuditMitigationActionsTaskResult clearauditCheckToActionsMappingEntries() {
+        this.auditCheckToActionsMapping = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions and their parameters that are applied as
+     * part of this task.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies the mitigation actions and their parameters that are
+     *         applied as part of this task.
+     *         </p>
+     */
+    public java.util.List<MitigationAction> getActionsDefinition() {
+        return actionsDefinition;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions and their parameters that are applied as
+     * part of this task.
+     * </p>
+     *
+     * @param actionsDefinition <p>
+     *            Specifies the mitigation actions and their parameters that are
+     *            applied as part of this task.
+     *            </p>
+     */
+    public void setActionsDefinition(java.util.Collection<MitigationAction> actionsDefinition) {
+        if (actionsDefinition == null) {
+            this.actionsDefinition = null;
+            return;
+        }
+
+        this.actionsDefinition = new java.util.ArrayList<MitigationAction>(actionsDefinition);
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions and their parameters that are applied as
+     * part of this task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionsDefinition <p>
+     *            Specifies the mitigation actions and their parameters that are
+     *            applied as part of this task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withActionsDefinition(
+            MitigationAction... actionsDefinition) {
+        if (getActionsDefinition() == null) {
+            this.actionsDefinition = new java.util.ArrayList<MitigationAction>(
+                    actionsDefinition.length);
+        }
+        for (MitigationAction value : actionsDefinition) {
+            this.actionsDefinition.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the mitigation actions and their parameters that are applied as
+     * part of this task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionsDefinition <p>
+     *            Specifies the mitigation actions and their parameters that are
+     *            applied as part of this task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeAuditMitigationActionsTaskResult withActionsDefinition(
+            java.util.Collection<MitigationAction> actionsDefinition) {
+        setActionsDefinition(actionsDefinition);
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskStatus() != null)
+            sb.append("taskStatus: " + getTaskStatus() + ",");
+        if (getStartTime() != null)
+            sb.append("startTime: " + getStartTime() + ",");
+        if (getEndTime() != null)
+            sb.append("endTime: " + getEndTime() + ",");
+        if (getTaskStatistics() != null)
+            sb.append("taskStatistics: " + getTaskStatistics() + ",");
+        if (getTarget() != null)
+            sb.append("target: " + getTarget() + ",");
+        if (getAuditCheckToActionsMapping() != null)
+            sb.append("auditCheckToActionsMapping: " + getAuditCheckToActionsMapping() + ",");
+        if (getActionsDefinition() != null)
+            sb.append("actionsDefinition: " + getActionsDefinition());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskStatus() == null) ? 0 : getTaskStatus().hashCode());
+        hashCode = prime * hashCode + ((getStartTime() == null) ? 0 : getStartTime().hashCode());
+        hashCode = prime * hashCode + ((getEndTime() == null) ? 0 : getEndTime().hashCode());
+        hashCode = prime * hashCode
+                + ((getTaskStatistics() == null) ? 0 : getTaskStatistics().hashCode());
+        hashCode = prime * hashCode + ((getTarget() == null) ? 0 : getTarget().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAuditCheckToActionsMapping() == null) ? 0 : getAuditCheckToActionsMapping()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getActionsDefinition() == null) ? 0 : getActionsDefinition().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeAuditMitigationActionsTaskResult == false)
+            return false;
+        DescribeAuditMitigationActionsTaskResult other = (DescribeAuditMitigationActionsTaskResult) obj;
+
+        if (other.getTaskStatus() == null ^ this.getTaskStatus() == null)
+            return false;
+        if (other.getTaskStatus() != null
+                && other.getTaskStatus().equals(this.getTaskStatus()) == false)
+            return false;
+        if (other.getStartTime() == null ^ this.getStartTime() == null)
+            return false;
+        if (other.getStartTime() != null
+                && other.getStartTime().equals(this.getStartTime()) == false)
+            return false;
+        if (other.getEndTime() == null ^ this.getEndTime() == null)
+            return false;
+        if (other.getEndTime() != null && other.getEndTime().equals(this.getEndTime()) == false)
+            return false;
+        if (other.getTaskStatistics() == null ^ this.getTaskStatistics() == null)
+            return false;
+        if (other.getTaskStatistics() != null
+                && other.getTaskStatistics().equals(this.getTaskStatistics()) == false)
+            return false;
+        if (other.getTarget() == null ^ this.getTarget() == null)
+            return false;
+        if (other.getTarget() != null && other.getTarget().equals(this.getTarget()) == false)
+            return false;
+        if (other.getAuditCheckToActionsMapping() == null
+                ^ this.getAuditCheckToActionsMapping() == null)
+            return false;
+        if (other.getAuditCheckToActionsMapping() != null
+                && other.getAuditCheckToActionsMapping().equals(
+                        this.getAuditCheckToActionsMapping()) == false)
+            return false;
+        if (other.getActionsDefinition() == null ^ this.getActionsDefinition() == null)
+            return false;
+        if (other.getActionsDefinition() != null
+                && other.getActionsDefinition().equals(this.getActionsDefinition()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionRequest.java
new file mode 100644
index 0000000000..d2ed2546f0
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionRequest.java
@@ -0,0 +1,143 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets information about a mitigation action.
+ * </p>
+ */
+public class DescribeMitigationActionRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The friendly name that uniquely identifies the mitigation action.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name that uniquely identifies the mitigation
+     *            action.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name that uniquely identifies the mitigation
+     *            action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionRequest withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeMitigationActionRequest == false)
+            return false;
+        DescribeMitigationActionRequest other = (DescribeMitigationActionRequest) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionResult.java
new file mode 100644
index 0000000000..b1b0eb167a
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeMitigationActionResult.java
@@ -0,0 +1,649 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class DescribeMitigationActionResult implements Serializable {
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     */
+    private String actionType;
+
+    /**
+     * <p>
+     * The ARN that identifies this migration action.
+     * </p>
+     */
+    private String actionArn;
+
+    /**
+     * <p>
+     * A unique identifier for this action.
+     * </p>
+     */
+    private String actionId;
+
+    /**
+     * <p>
+     * The ARN of the IAM role used to apply this action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleArn;
+
+    /**
+     * <p>
+     * Parameters that control how the mitigation action is applied, specific to
+     * the type of mitigation action.
+     * </p>
+     */
+    private MitigationActionParams actionParams;
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was added to your AWS
+     * account.
+     * </p>
+     */
+    private java.util.Date creationDate;
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was last changed.
+     * </p>
+     */
+    private java.util.Date lastModifiedDate;
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The friendly name that uniquely identifies the mitigation action.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name that uniquely identifies the mitigation
+     *            action.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name that uniquely identifies the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name that uniquely identifies the mitigation
+     *            action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @return <p>
+     *         The type of mitigation action.
+     *         </p>
+     * @see MitigationActionType
+     */
+    public String getActionType() {
+        return actionType;
+    }
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            The type of mitigation action.
+     *            </p>
+     * @see MitigationActionType
+     */
+    public void setActionType(String actionType) {
+        this.actionType = actionType;
+    }
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            The type of mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MitigationActionType
+     */
+    public DescribeMitigationActionResult withActionType(String actionType) {
+        this.actionType = actionType;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            The type of mitigation action.
+     *            </p>
+     * @see MitigationActionType
+     */
+    public void setActionType(MitigationActionType actionType) {
+        this.actionType = actionType.toString();
+    }
+
+    /**
+     * <p>
+     * The type of mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            The type of mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MitigationActionType
+     */
+    public DescribeMitigationActionResult withActionType(MitigationActionType actionType) {
+        this.actionType = actionType.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ARN that identifies this migration action.
+     * </p>
+     *
+     * @return <p>
+     *         The ARN that identifies this migration action.
+     *         </p>
+     */
+    public String getActionArn() {
+        return actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN that identifies this migration action.
+     * </p>
+     *
+     * @param actionArn <p>
+     *            The ARN that identifies this migration action.
+     *            </p>
+     */
+    public void setActionArn(String actionArn) {
+        this.actionArn = actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN that identifies this migration action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionArn <p>
+     *            The ARN that identifies this migration action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withActionArn(String actionArn) {
+        this.actionArn = actionArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for this action.
+     * </p>
+     *
+     * @return <p>
+     *         A unique identifier for this action.
+     *         </p>
+     */
+    public String getActionId() {
+        return actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for this action.
+     * </p>
+     *
+     * @param actionId <p>
+     *            A unique identifier for this action.
+     *            </p>
+     */
+    public void setActionId(String actionId) {
+        this.actionId = actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for this action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionId <p>
+     *            A unique identifier for this action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withActionId(String actionId) {
+        this.actionId = actionId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role used to apply this action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The ARN of the IAM role used to apply this action.
+     *         </p>
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role used to apply this action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role used to apply this action.
+     *            </p>
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role used to apply this action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role used to apply this action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters that control how the mitigation action is applied, specific to
+     * the type of mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters that control how the mitigation action is applied,
+     *         specific to the type of mitigation action.
+     *         </p>
+     */
+    public MitigationActionParams getActionParams() {
+        return actionParams;
+    }
+
+    /**
+     * <p>
+     * Parameters that control how the mitigation action is applied, specific to
+     * the type of mitigation action.
+     * </p>
+     *
+     * @param actionParams <p>
+     *            Parameters that control how the mitigation action is applied,
+     *            specific to the type of mitigation action.
+     *            </p>
+     */
+    public void setActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+    }
+
+    /**
+     * <p>
+     * Parameters that control how the mitigation action is applied, specific to
+     * the type of mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionParams <p>
+     *            Parameters that control how the mitigation action is applied,
+     *            specific to the type of mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was added to your AWS
+     * account.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the mitigation action was added to your
+     *         AWS account.
+     *         </p>
+     */
+    public java.util.Date getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was added to your AWS
+     * account.
+     * </p>
+     *
+     * @param creationDate <p>
+     *            The date and time when the mitigation action was added to your
+     *            AWS account.
+     *            </p>
+     */
+    public void setCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was added to your AWS
+     * account.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate <p>
+     *            The date and time when the mitigation action was added to your
+     *            AWS account.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was last changed.
+     * </p>
+     *
+     * @return <p>
+     *         The date and time when the mitigation action was last changed.
+     *         </p>
+     */
+    public java.util.Date getLastModifiedDate() {
+        return lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was last changed.
+     * </p>
+     *
+     * @param lastModifiedDate <p>
+     *            The date and time when the mitigation action was last changed.
+     *            </p>
+     */
+    public void setLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+    }
+
+    /**
+     * <p>
+     * The date and time when the mitigation action was last changed.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param lastModifiedDate <p>
+     *            The date and time when the mitigation action was last changed.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public DescribeMitigationActionResult withLastModifiedDate(java.util.Date lastModifiedDate) {
+        this.lastModifiedDate = lastModifiedDate;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName() + ",");
+        if (getActionType() != null)
+            sb.append("actionType: " + getActionType() + ",");
+        if (getActionArn() != null)
+            sb.append("actionArn: " + getActionArn() + ",");
+        if (getActionId() != null)
+            sb.append("actionId: " + getActionId() + ",");
+        if (getRoleArn() != null)
+            sb.append("roleArn: " + getRoleArn() + ",");
+        if (getActionParams() != null)
+            sb.append("actionParams: " + getActionParams() + ",");
+        if (getCreationDate() != null)
+            sb.append("creationDate: " + getCreationDate() + ",");
+        if (getLastModifiedDate() != null)
+            sb.append("lastModifiedDate: " + getLastModifiedDate());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        hashCode = prime * hashCode + ((getActionType() == null) ? 0 : getActionType().hashCode());
+        hashCode = prime * hashCode + ((getActionArn() == null) ? 0 : getActionArn().hashCode());
+        hashCode = prime * hashCode + ((getActionId() == null) ? 0 : getActionId().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getActionParams() == null) ? 0 : getActionParams().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        hashCode = prime * hashCode
+                + ((getLastModifiedDate() == null) ? 0 : getLastModifiedDate().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof DescribeMitigationActionResult == false)
+            return false;
+        DescribeMitigationActionResult other = (DescribeMitigationActionResult) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        if (other.getActionType() == null ^ this.getActionType() == null)
+            return false;
+        if (other.getActionType() != null
+                && other.getActionType().equals(this.getActionType()) == false)
+            return false;
+        if (other.getActionArn() == null ^ this.getActionArn() == null)
+            return false;
+        if (other.getActionArn() != null
+                && other.getActionArn().equals(this.getActionArn()) == false)
+            return false;
+        if (other.getActionId() == null ^ this.getActionId() == null)
+            return false;
+        if (other.getActionId() != null && other.getActionId().equals(this.getActionId()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        if (other.getActionParams() == null ^ this.getActionParams() == null)
+            return false;
+        if (other.getActionParams() != null
+                && other.getActionParams().equals(this.getActionParams()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        if (other.getLastModifiedDate() == null ^ this.getLastModifiedDate() == null)
+            return false;
+        if (other.getLastModifiedDate() != null
+                && other.getLastModifiedDate().equals(this.getLastModifiedDate()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeScheduledAuditResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeScheduledAuditResult.java
index 2d06cf9f09..d8e9ed3d74 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeScheduledAuditResult.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeScheduledAuditResult.java
@@ -21,8 +21,8 @@
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -46,7 +46,7 @@
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -56,10 +56,10 @@
 
     /**
      * <p>
-     * Which checks are performed during the scheduled audit. (Note that checks
-     * must be enabled for your account. (Use
+     * Which checks are performed during the scheduled audit. Checks must be
+     * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -87,8 +87,8 @@
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -96,8 +96,8 @@
      *
      * @return <p>
      *         How often the scheduled audit takes place. One of "DAILY",
-     *         "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each
-     *         audit is determined by the system.
+     *         "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit
+     *         is determined by the system.
      *         </p>
      * @see AuditFrequency
      */
@@ -108,8 +108,8 @@ public String getFrequency() {
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -117,8 +117,8 @@ public String getFrequency() {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. One of "DAILY",
-     *            "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of
-     *            each audit is determined by the system.
+     *            "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each
+     *            audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -129,8 +129,8 @@ public void setFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -141,8 +141,8 @@ public void setFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. One of "DAILY",
-     *            "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of
-     *            each audit is determined by the system.
+     *            "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each
+     *            audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -156,8 +156,8 @@ public DescribeScheduledAuditResult withFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -165,8 +165,8 @@ public DescribeScheduledAuditResult withFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. One of "DAILY",
-     *            "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of
-     *            each audit is determined by the system.
+     *            "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each
+     *            audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -177,8 +177,8 @@ public void setFrequency(AuditFrequency frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. One of "DAILY", "WEEKLY",
-     * "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
-     * determined by the system.
+     * "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by
+     * the system.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -189,8 +189,8 @@ public void setFrequency(AuditFrequency frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. One of "DAILY",
-     *            "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of
-     *            each audit is determined by the system.
+     *            "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each
+     *            audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -276,7 +276,7 @@ public DescribeScheduledAuditResult withDayOfMonth(String dayOfMonth) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -284,7 +284,7 @@ public DescribeScheduledAuditResult withDayOfMonth(String dayOfMonth) {
      *
      * @return <p>
      *         The day of the week on which the scheduled audit takes place. One
-     *         of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     *         of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      *         </p>
      * @see DayOfWeek
      */
@@ -295,7 +295,7 @@ public String getDayOfWeek() {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -303,7 +303,7 @@ public String getDayOfWeek() {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      *            </p>
      * @see DayOfWeek
      */
@@ -314,7 +314,7 @@ public void setDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -325,7 +325,7 @@ public void setDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -339,7 +339,7 @@ public DescribeScheduledAuditResult withDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -347,7 +347,7 @@ public DescribeScheduledAuditResult withDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      *            </p>
      * @see DayOfWeek
      */
@@ -358,7 +358,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. One of
-     * "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     * "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -369,7 +369,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".
+     *            One of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -382,19 +382,19 @@ public DescribeScheduledAuditResult withDayOfWeek(DayOfWeek dayOfWeek) {
 
     /**
      * <p>
-     * Which checks are performed during the scheduled audit. (Note that checks
-     * must be enabled for your account. (Use
+     * Which checks are performed during the scheduled audit. Checks must be
+     * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
      *
      * @return <p>
-     *         Which checks are performed during the scheduled audit. (Note that
-     *         checks must be enabled for your account. (Use
+     *         Which checks are performed during the scheduled audit. Checks
+     *         must be enabled for your account. (Use
      *         <code>DescribeAccountAuditConfiguration</code> to see the list of
-     *         all checks including those that are enabled or
+     *         all checks, including those that are enabled or use
      *         <code>UpdateAccountAuditConfiguration</code> to select which
      *         checks are enabled.)
      *         </p>
@@ -405,19 +405,19 @@ public DescribeScheduledAuditResult withDayOfWeek(DayOfWeek dayOfWeek) {
 
     /**
      * <p>
-     * Which checks are performed during the scheduled audit. (Note that checks
-     * must be enabled for your account. (Use
+     * Which checks are performed during the scheduled audit. Checks must be
+     * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
      *
      * @param targetCheckNames <p>
-     *            Which checks are performed during the scheduled audit. (Note
-     *            that checks must be enabled for your account. (Use
+     *            Which checks are performed during the scheduled audit. Checks
+     *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -433,10 +433,10 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
 
     /**
      * <p>
-     * Which checks are performed during the scheduled audit. (Note that checks
-     * must be enabled for your account. (Use
+     * Which checks are performed during the scheduled audit. Checks must be
+     * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -445,10 +445,10 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      * together.
      *
      * @param targetCheckNames <p>
-     *            Which checks are performed during the scheduled audit. (Note
-     *            that checks must be enabled for your account. (Use
+     *            Which checks are performed during the scheduled audit. Checks
+     *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -467,10 +467,10 @@ public DescribeScheduledAuditResult withTargetCheckNames(String... targetCheckNa
 
     /**
      * <p>
-     * Which checks are performed during the scheduled audit. (Note that checks
-     * must be enabled for your account. (Use
+     * Which checks are performed during the scheduled audit. Checks must be
+     * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -479,10 +479,10 @@ public DescribeScheduledAuditResult withTargetCheckNames(String... targetCheckNa
      * together.
      *
      * @param targetCheckNames <p>
-     *            Which checks are performed during the scheduled audit. (Note
-     *            that checks must be enabled for your account. (Use
+     *            Which checks are performed during the scheduled audit. Checks
+     *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeSecurityProfileResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeSecurityProfileResult.java
index 2d2063c52e..b25c8642e4 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeSecurityProfileResult.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DescribeSecurityProfileResult.java
@@ -66,7 +66,7 @@
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      */
@@ -431,14 +431,14 @@ public DescribeSecurityProfileResult clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @return <p>
      *         A list of metrics whose data is retained (stored). By default,
      *         data is retained for any metric used in the profile's
-     *         <code>behaviors</code> but it is also retained for any metric
+     *         <code>behaviors</code>, but it is also retained for any metric
      *         specified here.
      *         </p>
      */
@@ -449,14 +449,14 @@ public DescribeSecurityProfileResult clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      */
@@ -472,7 +472,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -482,7 +482,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -503,7 +503,7 @@ public DescribeSecurityProfileResult withAdditionalMetricsToRetain(
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -513,7 +513,7 @@ public DescribeSecurityProfileResult withAdditionalMetricsToRetain(
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeviceCertificateUpdateAction.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeviceCertificateUpdateAction.java
new file mode 100644
index 0000000000..2f903d36c0
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/DeviceCertificateUpdateAction.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Device Certificate Update Action
+ */
+public enum DeviceCertificateUpdateAction {
+
+    DEACTIVATE("DEACTIVATE");
+
+    private String value;
+
+    private DeviceCertificateUpdateAction(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, DeviceCertificateUpdateAction> enumMap;
+    static {
+        enumMap = new HashMap<String, DeviceCertificateUpdateAction>();
+        enumMap.put("DEACTIVATE", DEACTIVATE);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return DeviceCertificateUpdateAction corresponding to the value
+     */
+    public static DeviceCertificateUpdateAction fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/EnableIoTLoggingParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/EnableIoTLoggingParams.java
new file mode 100644
index 0000000000..c41afaedb1
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/EnableIoTLoggingParams.java
@@ -0,0 +1,250 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters used when defining a mitigation action that enable AWS IoT
+ * logging.
+ * </p>
+ */
+public class EnableIoTLoggingParams implements Serializable {
+    /**
+     * <p>
+     * The ARN of the IAM role used for logging.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleArnForLogging;
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     */
+    private String logLevel;
+
+    /**
+     * <p>
+     * The ARN of the IAM role used for logging.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The ARN of the IAM role used for logging.
+     *         </p>
+     */
+    public String getRoleArnForLogging() {
+        return roleArnForLogging;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role used for logging.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArnForLogging <p>
+     *            The ARN of the IAM role used for logging.
+     *            </p>
+     */
+    public void setRoleArnForLogging(String roleArnForLogging) {
+        this.roleArnForLogging = roleArnForLogging;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role used for logging.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArnForLogging <p>
+     *            The ARN of the IAM role used for logging.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public EnableIoTLoggingParams withRoleArnForLogging(String roleArnForLogging) {
+        this.roleArnForLogging = roleArnForLogging;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     *
+     * @return <p>
+     *         Specifies the types of information to be logged.
+     *         </p>
+     * @see LogLevel
+     */
+    public String getLogLevel() {
+        return logLevel;
+    }
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     *
+     * @param logLevel <p>
+     *            Specifies the types of information to be logged.
+     *            </p>
+     * @see LogLevel
+     */
+    public void setLogLevel(String logLevel) {
+        this.logLevel = logLevel;
+    }
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     *
+     * @param logLevel <p>
+     *            Specifies the types of information to be logged.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see LogLevel
+     */
+    public EnableIoTLoggingParams withLogLevel(String logLevel) {
+        this.logLevel = logLevel;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     *
+     * @param logLevel <p>
+     *            Specifies the types of information to be logged.
+     *            </p>
+     * @see LogLevel
+     */
+    public void setLogLevel(LogLevel logLevel) {
+        this.logLevel = logLevel.toString();
+    }
+
+    /**
+     * <p>
+     * Specifies the types of information to be logged.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEBUG, INFO, ERROR, WARN, DISABLED
+     *
+     * @param logLevel <p>
+     *            Specifies the types of information to be logged.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see LogLevel
+     */
+    public EnableIoTLoggingParams withLogLevel(LogLevel logLevel) {
+        this.logLevel = logLevel.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getRoleArnForLogging() != null)
+            sb.append("roleArnForLogging: " + getRoleArnForLogging() + ",");
+        if (getLogLevel() != null)
+            sb.append("logLevel: " + getLogLevel());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getRoleArnForLogging() == null) ? 0 : getRoleArnForLogging().hashCode());
+        hashCode = prime * hashCode + ((getLogLevel() == null) ? 0 : getLogLevel().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof EnableIoTLoggingParams == false)
+            return false;
+        EnableIoTLoggingParams other = (EnableIoTLoggingParams) obj;
+
+        if (other.getRoleArnForLogging() == null ^ this.getRoleArnForLogging() == null)
+            return false;
+        if (other.getRoleArnForLogging() != null
+                && other.getRoleArnForLogging().equals(this.getRoleArnForLogging()) == false)
+            return false;
+        if (other.getLogLevel() == null ^ this.getLogLevel() == null)
+            return false;
+        if (other.getLogLevel() != null && other.getLogLevel().equals(this.getLogLevel()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/IotAnalyticsAction.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/IotAnalyticsAction.java
index 73eba275c8..d91e41bf6e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/IotAnalyticsAction.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/IotAnalyticsAction.java
@@ -19,7 +19,7 @@
 
 /**
  * <p>
- * Sends messge data to an AWS IoT Analytics channel.
+ * Sends message data to an AWS IoT Analytics channel.
  * </p>
  */
 public class IotAnalyticsAction implements Serializable {
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListActiveViolationsRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListActiveViolationsRequest.java
index 44b6901bf1..eb2a918cf6 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListActiveViolationsRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListActiveViolationsRequest.java
@@ -32,7 +32,6 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      */
     private String thingName;
 
@@ -72,7 +71,6 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @return <p>
      *         The name of the thing whose active violations are listed.
@@ -89,7 +87,6 @@ public String getThingName() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing whose active violations are listed.
@@ -109,7 +106,6 @@ public void setThingName(String thingName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing whose active violations are listed.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAttachedPoliciesRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAttachedPoliciesRequest.java
index 3d026310a6..8766cd7bc5 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAttachedPoliciesRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAttachedPoliciesRequest.java
@@ -27,7 +27,7 @@
 public class ListAttachedPoliciesRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The group for which the policies will be listed.
+     * The group or principal for which the policies will be listed.
      * </p>
      */
     private String target;
@@ -61,11 +61,11 @@
 
     /**
      * <p>
-     * The group for which the policies will be listed.
+     * The group or principal for which the policies will be listed.
      * </p>
      *
      * @return <p>
-     *         The group for which the policies will be listed.
+     *         The group or principal for which the policies will be listed.
      *         </p>
      */
     public String getTarget() {
@@ -74,11 +74,11 @@ public String getTarget() {
 
     /**
      * <p>
-     * The group for which the policies will be listed.
+     * The group or principal for which the policies will be listed.
      * </p>
      *
      * @param target <p>
-     *            The group for which the policies will be listed.
+     *            The group or principal for which the policies will be listed.
      *            </p>
      */
     public void setTarget(String target) {
@@ -87,14 +87,14 @@ public void setTarget(String target) {
 
     /**
      * <p>
-     * The group for which the policies will be listed.
+     * The group or principal for which the policies will be listed.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param target <p>
-     *            The group for which the policies will be listed.
+     *            The group or principal for which the policies will be listed.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditFindingsRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditFindingsRequest.java
index 10ab2f26d1..a3f68cbdf0 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditFindingsRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditFindingsRequest.java
@@ -48,7 +48,7 @@
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information identifying the noncompliant resource.
      * </p>
      */
     private ResourceIdentifier resourceIdentifier;
@@ -204,11 +204,11 @@ public ListAuditFindingsRequest withCheckName(String checkName) {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information identifying the noncompliant resource.
      * </p>
      *
      * @return <p>
-     *         Information identifying the non-compliant resource.
+     *         Information identifying the noncompliant resource.
      *         </p>
      */
     public ResourceIdentifier getResourceIdentifier() {
@@ -217,11 +217,11 @@ public ResourceIdentifier getResourceIdentifier() {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information identifying the noncompliant resource.
      * </p>
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the non-compliant resource.
+     *            Information identifying the noncompliant resource.
      *            </p>
      */
     public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
@@ -230,14 +230,14 @@ public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information identifying the noncompliant resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the non-compliant resource.
+     *            Information identifying the noncompliant resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsRequest.java
new file mode 100644
index 0000000000..274f41571c
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsRequest.java
@@ -0,0 +1,493 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets the status of audit mitigation action tasks that were executed.
+ * </p>
+ */
+public class ListAuditMitigationActionsExecutionsRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * Specify this filter to limit results to actions for a specific audit
+     * mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     */
+    private String actionStatus;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String findingId;
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to actions for a specific audit
+     * mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to actions for a specific
+     *         audit mitigation actions task.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to actions for a specific audit
+     * mitigation actions task.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            Specify this filter to limit results to actions for a specific
+     *            audit mitigation actions task.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to actions for a specific audit
+     * mitigation actions task.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            Specify this filter to limit results to actions for a specific
+     *            audit mitigation actions task.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsRequest withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @return <p>
+     *         Specify this filter to limit results to those with a specific
+     *         status.
+     *         </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public String getActionStatus() {
+        return actionStatus;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param actionStatus <p>
+     *            Specify this filter to limit results to those with a specific
+     *            status.
+     *            </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public void setActionStatus(String actionStatus) {
+        this.actionStatus = actionStatus;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param actionStatus <p>
+     *            Specify this filter to limit results to those with a specific
+     *            status.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public ListAuditMitigationActionsExecutionsRequest withActionStatus(String actionStatus) {
+        this.actionStatus = actionStatus;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param actionStatus <p>
+     *            Specify this filter to limit results to those with a specific
+     *            status.
+     *            </p>
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public void setActionStatus(AuditMitigationActionsExecutionStatus actionStatus) {
+        this.actionStatus = actionStatus.toString();
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those with a specific status.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED, SKIPPED,
+     * PENDING
+     *
+     * @param actionStatus <p>
+     *            Specify this filter to limit results to those with a specific
+     *            status.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsExecutionStatus
+     */
+    public ListAuditMitigationActionsExecutionsRequest withActionStatus(
+            AuditMitigationActionsExecutionStatus actionStatus) {
+        this.actionStatus = actionStatus.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to those that were applied
+     *         to a specific audit finding.
+     *         </p>
+     */
+    public String getFindingId() {
+        return findingId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            Specify this filter to limit results to those that were
+     *            applied to a specific audit finding.
+     *            </p>
+     */
+    public void setFindingId(String findingId) {
+        this.findingId = findingId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to those that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            Specify this filter to limit results to those that were
+     *            applied to a specific audit finding.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsRequest withFindingId(String findingId) {
+        this.findingId = findingId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @return <p>
+     *         The maximum number of results to return at one time. The default
+     *         is 25.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId() + ",");
+        if (getActionStatus() != null)
+            sb.append("actionStatus: " + getActionStatus() + ",");
+        if (getFindingId() != null)
+            sb.append("findingId: " + getFindingId() + ",");
+        if (getMaxResults() != null)
+            sb.append("maxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        hashCode = prime * hashCode
+                + ((getActionStatus() == null) ? 0 : getActionStatus().hashCode());
+        hashCode = prime * hashCode + ((getFindingId() == null) ? 0 : getFindingId().hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListAuditMitigationActionsExecutionsRequest == false)
+            return false;
+        ListAuditMitigationActionsExecutionsRequest other = (ListAuditMitigationActionsExecutionsRequest) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        if (other.getActionStatus() == null ^ this.getActionStatus() == null)
+            return false;
+        if (other.getActionStatus() != null
+                && other.getActionStatus().equals(this.getActionStatus()) == false)
+            return false;
+        if (other.getFindingId() == null ^ this.getFindingId() == null)
+            return false;
+        if (other.getFindingId() != null
+                && other.getFindingId().equals(this.getFindingId()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsResult.java
new file mode 100644
index 0000000000..ccad3a7380
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsExecutionsResult.java
@@ -0,0 +1,225 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class ListAuditMitigationActionsExecutionsResult implements Serializable {
+    /**
+     * <p>
+     * A set of task execution results based on the input parameters. Details
+     * include the mitigation action applied, start time, and task status.
+     * </p>
+     */
+    private java.util.List<AuditMitigationActionExecutionMetadata> actionsExecutions;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * A set of task execution results based on the input parameters. Details
+     * include the mitigation action applied, start time, and task status.
+     * </p>
+     *
+     * @return <p>
+     *         A set of task execution results based on the input parameters.
+     *         Details include the mitigation action applied, start time, and
+     *         task status.
+     *         </p>
+     */
+    public java.util.List<AuditMitigationActionExecutionMetadata> getActionsExecutions() {
+        return actionsExecutions;
+    }
+
+    /**
+     * <p>
+     * A set of task execution results based on the input parameters. Details
+     * include the mitigation action applied, start time, and task status.
+     * </p>
+     *
+     * @param actionsExecutions <p>
+     *            A set of task execution results based on the input parameters.
+     *            Details include the mitigation action applied, start time, and
+     *            task status.
+     *            </p>
+     */
+    public void setActionsExecutions(
+            java.util.Collection<AuditMitigationActionExecutionMetadata> actionsExecutions) {
+        if (actionsExecutions == null) {
+            this.actionsExecutions = null;
+            return;
+        }
+
+        this.actionsExecutions = new java.util.ArrayList<AuditMitigationActionExecutionMetadata>(
+                actionsExecutions);
+    }
+
+    /**
+     * <p>
+     * A set of task execution results based on the input parameters. Details
+     * include the mitigation action applied, start time, and task status.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionsExecutions <p>
+     *            A set of task execution results based on the input parameters.
+     *            Details include the mitigation action applied, start time, and
+     *            task status.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsResult withActionsExecutions(
+            AuditMitigationActionExecutionMetadata... actionsExecutions) {
+        if (getActionsExecutions() == null) {
+            this.actionsExecutions = new java.util.ArrayList<AuditMitigationActionExecutionMetadata>(
+                    actionsExecutions.length);
+        }
+        for (AuditMitigationActionExecutionMetadata value : actionsExecutions) {
+            this.actionsExecutions.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of task execution results based on the input parameters. Details
+     * include the mitigation action applied, start time, and task status.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionsExecutions <p>
+     *            A set of task execution results based on the input parameters.
+     *            Details include the mitigation action applied, start time, and
+     *            task status.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsResult withActionsExecutions(
+            java.util.Collection<AuditMitigationActionExecutionMetadata> actionsExecutions) {
+        setActionsExecutions(actionsExecutions);
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsExecutionsResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionsExecutions() != null)
+            sb.append("actionsExecutions: " + getActionsExecutions() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getActionsExecutions() == null) ? 0 : getActionsExecutions().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListAuditMitigationActionsExecutionsResult == false)
+            return false;
+        ListAuditMitigationActionsExecutionsResult other = (ListAuditMitigationActionsExecutionsResult) obj;
+
+        if (other.getActionsExecutions() == null ^ this.getActionsExecutions() == null)
+            return false;
+        if (other.getActionsExecutions() != null
+                && other.getActionsExecutions().equals(this.getActionsExecutions()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksRequest.java
new file mode 100644
index 0000000000..2a07fe43c7
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksRequest.java
@@ -0,0 +1,628 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets a list of audit mitigation action tasks that match the specified
+ * filters.
+ * </p>
+ */
+public class ListAuditMitigationActionsTasksRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to
+     * results for a specific audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     */
+    private String auditTaskId;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String findingId;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     */
+    private String taskStatus;
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that began on or after a
+     * specific date and time.
+     * </p>
+     */
+    private java.util.Date startTime;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were completed or
+     * canceled on or before a specific date and time.
+     * </p>
+     */
+    private java.util.Date endTime;
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to
+     * results for a specific audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to tasks that were applied
+     *         to results for a specific audit.
+     *         </p>
+     */
+    public String getAuditTaskId() {
+        return auditTaskId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to
+     * results for a specific audit.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @param auditTaskId <p>
+     *            Specify this filter to limit results to tasks that were
+     *            applied to results for a specific audit.
+     *            </p>
+     */
+    public void setAuditTaskId(String auditTaskId) {
+        this.auditTaskId = auditTaskId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to
+     * results for a specific audit.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 40<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9\-]+<br/>
+     *
+     * @param auditTaskId <p>
+     *            Specify this filter to limit results to tasks that were
+     *            applied to results for a specific audit.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withAuditTaskId(String auditTaskId) {
+        this.auditTaskId = auditTaskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to tasks that were applied
+     *         to a specific audit finding.
+     *         </p>
+     */
+    public String getFindingId() {
+        return findingId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            Specify this filter to limit results to tasks that were
+     *            applied to a specific audit finding.
+     *            </p>
+     */
+    public void setFindingId(String findingId) {
+        this.findingId = findingId;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were applied to a
+     * specific audit finding.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param findingId <p>
+     *            Specify this filter to limit results to tasks that were
+     *            applied to a specific audit finding.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withFindingId(String findingId) {
+        this.findingId = findingId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @return <p>
+     *         Specify this filter to limit results to tasks that are in a
+     *         specific state.
+     *         </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public String getTaskStatus() {
+        return taskStatus;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            Specify this filter to limit results to tasks that are in a
+     *            specific state.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            Specify this filter to limit results to tasks that are in a
+     *            specific state.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public ListAuditMitigationActionsTasksRequest withTaskStatus(String taskStatus) {
+        this.taskStatus = taskStatus;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            Specify this filter to limit results to tasks that are in a
+     *            specific state.
+     *            </p>
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public void setTaskStatus(AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that are in a specific
+     * state.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>IN_PROGRESS, COMPLETED, FAILED, CANCELED
+     *
+     * @param taskStatus <p>
+     *            Specify this filter to limit results to tasks that are in a
+     *            specific state.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see AuditMitigationActionsTaskStatus
+     */
+    public ListAuditMitigationActionsTasksRequest withTaskStatus(
+            AuditMitigationActionsTaskStatus taskStatus) {
+        this.taskStatus = taskStatus.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @return <p>
+     *         The maximum number of results to return at one time. The default
+     *         is 25.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that began on or after a
+     * specific date and time.
+     * </p>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to tasks that began on or
+     *         after a specific date and time.
+     *         </p>
+     */
+    public java.util.Date getStartTime() {
+        return startTime;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that began on or after a
+     * specific date and time.
+     * </p>
+     *
+     * @param startTime <p>
+     *            Specify this filter to limit results to tasks that began on or
+     *            after a specific date and time.
+     *            </p>
+     */
+    public void setStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that began on or after a
+     * specific date and time.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param startTime <p>
+     *            Specify this filter to limit results to tasks that began on or
+     *            after a specific date and time.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withStartTime(java.util.Date startTime) {
+        this.startTime = startTime;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were completed or
+     * canceled on or before a specific date and time.
+     * </p>
+     *
+     * @return <p>
+     *         Specify this filter to limit results to tasks that were completed
+     *         or canceled on or before a specific date and time.
+     *         </p>
+     */
+    public java.util.Date getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were completed or
+     * canceled on or before a specific date and time.
+     * </p>
+     *
+     * @param endTime <p>
+     *            Specify this filter to limit results to tasks that were
+     *            completed or canceled on or before a specific date and time.
+     *            </p>
+     */
+    public void setEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+    }
+
+    /**
+     * <p>
+     * Specify this filter to limit results to tasks that were completed or
+     * canceled on or before a specific date and time.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param endTime <p>
+     *            Specify this filter to limit results to tasks that were
+     *            completed or canceled on or before a specific date and time.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksRequest withEndTime(java.util.Date endTime) {
+        this.endTime = endTime;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAuditTaskId() != null)
+            sb.append("auditTaskId: " + getAuditTaskId() + ",");
+        if (getFindingId() != null)
+            sb.append("findingId: " + getFindingId() + ",");
+        if (getTaskStatus() != null)
+            sb.append("taskStatus: " + getTaskStatus() + ",");
+        if (getMaxResults() != null)
+            sb.append("maxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken() + ",");
+        if (getStartTime() != null)
+            sb.append("startTime: " + getStartTime() + ",");
+        if (getEndTime() != null)
+            sb.append("endTime: " + getEndTime());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getAuditTaskId() == null) ? 0 : getAuditTaskId().hashCode());
+        hashCode = prime * hashCode + ((getFindingId() == null) ? 0 : getFindingId().hashCode());
+        hashCode = prime * hashCode + ((getTaskStatus() == null) ? 0 : getTaskStatus().hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        hashCode = prime * hashCode + ((getStartTime() == null) ? 0 : getStartTime().hashCode());
+        hashCode = prime * hashCode + ((getEndTime() == null) ? 0 : getEndTime().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListAuditMitigationActionsTasksRequest == false)
+            return false;
+        ListAuditMitigationActionsTasksRequest other = (ListAuditMitigationActionsTasksRequest) obj;
+
+        if (other.getAuditTaskId() == null ^ this.getAuditTaskId() == null)
+            return false;
+        if (other.getAuditTaskId() != null
+                && other.getAuditTaskId().equals(this.getAuditTaskId()) == false)
+            return false;
+        if (other.getFindingId() == null ^ this.getFindingId() == null)
+            return false;
+        if (other.getFindingId() != null
+                && other.getFindingId().equals(this.getFindingId()) == false)
+            return false;
+        if (other.getTaskStatus() == null ^ this.getTaskStatus() == null)
+            return false;
+        if (other.getTaskStatus() != null
+                && other.getTaskStatus().equals(this.getTaskStatus()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        if (other.getStartTime() == null ^ this.getStartTime() == null)
+            return false;
+        if (other.getStartTime() != null
+                && other.getStartTime().equals(this.getStartTime()) == false)
+            return false;
+        if (other.getEndTime() == null ^ this.getEndTime() == null)
+            return false;
+        if (other.getEndTime() != null && other.getEndTime().equals(this.getEndTime()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksResult.java
new file mode 100644
index 0000000000..0fc3c366a1
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditMitigationActionsTasksResult.java
@@ -0,0 +1,216 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class ListAuditMitigationActionsTasksResult implements Serializable {
+    /**
+     * <p>
+     * The collection of audit mitigation tasks that matched the filter
+     * criteria.
+     * </p>
+     */
+    private java.util.List<AuditMitigationActionsTaskMetadata> tasks;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * The collection of audit mitigation tasks that matched the filter
+     * criteria.
+     * </p>
+     *
+     * @return <p>
+     *         The collection of audit mitigation tasks that matched the filter
+     *         criteria.
+     *         </p>
+     */
+    public java.util.List<AuditMitigationActionsTaskMetadata> getTasks() {
+        return tasks;
+    }
+
+    /**
+     * <p>
+     * The collection of audit mitigation tasks that matched the filter
+     * criteria.
+     * </p>
+     *
+     * @param tasks <p>
+     *            The collection of audit mitigation tasks that matched the
+     *            filter criteria.
+     *            </p>
+     */
+    public void setTasks(java.util.Collection<AuditMitigationActionsTaskMetadata> tasks) {
+        if (tasks == null) {
+            this.tasks = null;
+            return;
+        }
+
+        this.tasks = new java.util.ArrayList<AuditMitigationActionsTaskMetadata>(tasks);
+    }
+
+    /**
+     * <p>
+     * The collection of audit mitigation tasks that matched the filter
+     * criteria.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param tasks <p>
+     *            The collection of audit mitigation tasks that matched the
+     *            filter criteria.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksResult withTasks(
+            AuditMitigationActionsTaskMetadata... tasks) {
+        if (getTasks() == null) {
+            this.tasks = new java.util.ArrayList<AuditMitigationActionsTaskMetadata>(tasks.length);
+        }
+        for (AuditMitigationActionsTaskMetadata value : tasks) {
+            this.tasks.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * The collection of audit mitigation tasks that matched the filter
+     * criteria.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param tasks <p>
+     *            The collection of audit mitigation tasks that matched the
+     *            filter criteria.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksResult withTasks(
+            java.util.Collection<AuditMitigationActionsTaskMetadata> tasks) {
+        setTasks(tasks);
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListAuditMitigationActionsTasksResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTasks() != null)
+            sb.append("tasks: " + getTasks() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTasks() == null) ? 0 : getTasks().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListAuditMitigationActionsTasksResult == false)
+            return false;
+        ListAuditMitigationActionsTasksResult other = (ListAuditMitigationActionsTasksResult) obj;
+
+        if (other.getTasks() == null ^ this.getTasks() == null)
+            return false;
+        if (other.getTasks() != null && other.getTasks().equals(this.getTasks()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditTasksRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditTasksRequest.java
index 985fa095a6..f3f50e8255 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditTasksRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListAuditTasksRequest.java
@@ -28,8 +28,8 @@
 public class ListAuditTasksRequest extends AmazonWebServiceRequest implements Serializable {
     /**
      * <p>
-     * The beginning of the time period. Note that audit information is retained
-     * for a limited time (180 days). Requesting a start time prior to what is
+     * The beginning of the time period. Audit information is retained for a
+     * limited time (180 days). Requesting a start time prior to what is
      * retained results in an "InvalidRequestException".
      * </p>
      */
@@ -56,7 +56,8 @@
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -83,16 +84,15 @@
 
     /**
      * <p>
-     * The beginning of the time period. Note that audit information is retained
-     * for a limited time (180 days). Requesting a start time prior to what is
+     * The beginning of the time period. Audit information is retained for a
+     * limited time (180 days). Requesting a start time prior to what is
      * retained results in an "InvalidRequestException".
      * </p>
      *
      * @return <p>
-     *         The beginning of the time period. Note that audit information is
-     *         retained for a limited time (180 days). Requesting a start time
-     *         prior to what is retained results in an
-     *         "InvalidRequestException".
+     *         The beginning of the time period. Audit information is retained
+     *         for a limited time (180 days). Requesting a start time prior to
+     *         what is retained results in an "InvalidRequestException".
      *         </p>
      */
     public java.util.Date getStartTime() {
@@ -101,14 +101,14 @@
 
     /**
      * <p>
-     * The beginning of the time period. Note that audit information is retained
-     * for a limited time (180 days). Requesting a start time prior to what is
+     * The beginning of the time period. Audit information is retained for a
+     * limited time (180 days). Requesting a start time prior to what is
      * retained results in an "InvalidRequestException".
      * </p>
      *
      * @param startTime <p>
-     *            The beginning of the time period. Note that audit information
-     *            is retained for a limited time (180 days). Requesting a start
+     *            The beginning of the time period. Audit information is
+     *            retained for a limited time (180 days). Requesting a start
      *            time prior to what is retained results in an
      *            "InvalidRequestException".
      *            </p>
@@ -119,8 +119,8 @@ public void setStartTime(java.util.Date startTime) {
 
     /**
      * <p>
-     * The beginning of the time period. Note that audit information is retained
-     * for a limited time (180 days). Requesting a start time prior to what is
+     * The beginning of the time period. Audit information is retained for a
+     * limited time (180 days). Requesting a start time prior to what is
      * retained results in an "InvalidRequestException".
      * </p>
      * <p>
@@ -128,8 +128,8 @@ public void setStartTime(java.util.Date startTime) {
      * together.
      *
      * @param startTime <p>
-     *            The beginning of the time period. Note that audit information
-     *            is retained for a limited time (180 days). Requesting a start
+     *            The beginning of the time period. Audit information is
+     *            retained for a limited time (180 days). Requesting a start
      *            time prior to what is retained results in an
      *            "InvalidRequestException".
      *            </p>
@@ -300,7 +300,8 @@ public ListAuditTasksRequest withTaskType(AuditTaskType taskType) {
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -309,7 +310,7 @@ public ListAuditTasksRequest withTaskType(AuditTaskType taskType) {
      * @return <p>
      *         A filter to limit the output to audits with the specified
      *         completion status: can be one of "IN_PROGRESS", "COMPLETED",
-     *         "FAILED" or "CANCELED".
+     *         "FAILED", or "CANCELED".
      *         </p>
      * @see AuditTaskStatus
      */
@@ -320,7 +321,8 @@ public String getTaskStatus() {
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -329,7 +331,7 @@ public String getTaskStatus() {
      * @param taskStatus <p>
      *            A filter to limit the output to audits with the specified
      *            completion status: can be one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @see AuditTaskStatus
      */
@@ -340,7 +342,8 @@ public void setTaskStatus(String taskStatus) {
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -352,7 +355,7 @@ public void setTaskStatus(String taskStatus) {
      * @param taskStatus <p>
      *            A filter to limit the output to audits with the specified
      *            completion status: can be one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -366,7 +369,8 @@ public ListAuditTasksRequest withTaskStatus(String taskStatus) {
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -375,7 +379,7 @@ public ListAuditTasksRequest withTaskStatus(String taskStatus) {
      * @param taskStatus <p>
      *            A filter to limit the output to audits with the specified
      *            completion status: can be one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @see AuditTaskStatus
      */
@@ -386,7 +390,8 @@ public void setTaskStatus(AuditTaskStatus taskStatus) {
     /**
      * <p>
      * A filter to limit the output to audits with the specified completion
-     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".
+     * status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or
+     * "CANCELED".
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -398,7 +403,7 @@ public void setTaskStatus(AuditTaskStatus taskStatus) {
      * @param taskStatus <p>
      *            A filter to limit the output to audits with the specified
      *            completion status: can be one of "IN_PROGRESS", "COMPLETED",
-     *            "FAILED" or "CANCELED".
+     *            "FAILED", or "CANCELED".
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsRequest.java
new file mode 100644
index 0000000000..fc7672a983
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsRequest.java
@@ -0,0 +1,338 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Gets a list of all mitigation actions that match the specified filter
+ * criteria.
+ * </p>
+ */
+public class ListMitigationActionsRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     */
+    private String actionType;
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     */
+    private Integer maxResults;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @return <p>
+     *         Specify a value to limit the result to mitigation actions with a
+     *         specific action type.
+     *         </p>
+     * @see MitigationActionType
+     */
+    public String getActionType() {
+        return actionType;
+    }
+
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            Specify a value to limit the result to mitigation actions with
+     *            a specific action type.
+     *            </p>
+     * @see MitigationActionType
+     */
+    public void setActionType(String actionType) {
+        this.actionType = actionType;
+    }
+
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            Specify a value to limit the result to mitigation actions with
+     *            a specific action type.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MitigationActionType
+     */
+    public ListMitigationActionsRequest withActionType(String actionType) {
+        this.actionType = actionType;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            Specify a value to limit the result to mitigation actions with
+     *            a specific action type.
+     *            </p>
+     * @see MitigationActionType
+     */
+    public void setActionType(MitigationActionType actionType) {
+        this.actionType = actionType.toString();
+    }
+
+    /**
+     * <p>
+     * Specify a value to limit the result to mitigation actions with a specific
+     * action type.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>UPDATE_DEVICE_CERTIFICATE, UPDATE_CA_CERTIFICATE,
+     * ADD_THINGS_TO_THING_GROUP, REPLACE_DEFAULT_POLICY_VERSION,
+     * ENABLE_IOT_LOGGING, PUBLISH_FINDING_TO_SNS
+     *
+     * @param actionType <p>
+     *            Specify a value to limit the result to mitigation actions with
+     *            a specific action type.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see MitigationActionType
+     */
+    public ListMitigationActionsRequest withActionType(MitigationActionType actionType) {
+        this.actionType = actionType.toString();
+        return this;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @return <p>
+     *         The maximum number of results to return at one time. The default
+     *         is 25.
+     *         </p>
+     */
+    public Integer getMaxResults() {
+        return maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     */
+    public void setMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+    }
+
+    /**
+     * <p>
+     * The maximum number of results to return at one time. The default is 25.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>1 - 250<br/>
+     *
+     * @param maxResults <p>
+     *            The maximum number of results to return at one time. The
+     *            default is 25.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListMitigationActionsRequest withMaxResults(Integer maxResults) {
+        this.maxResults = maxResults;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListMitigationActionsRequest withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionType() != null)
+            sb.append("actionType: " + getActionType() + ",");
+        if (getMaxResults() != null)
+            sb.append("maxResults: " + getMaxResults() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionType() == null) ? 0 : getActionType().hashCode());
+        hashCode = prime * hashCode + ((getMaxResults() == null) ? 0 : getMaxResults().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListMitigationActionsRequest == false)
+            return false;
+        ListMitigationActionsRequest other = (ListMitigationActionsRequest) obj;
+
+        if (other.getActionType() == null ^ this.getActionType() == null)
+            return false;
+        if (other.getActionType() != null
+                && other.getActionType().equals(this.getActionType()) == false)
+            return false;
+        if (other.getMaxResults() == null ^ this.getMaxResults() == null)
+            return false;
+        if (other.getMaxResults() != null
+                && other.getMaxResults().equals(this.getMaxResults()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsResult.java
new file mode 100644
index 0000000000..8305929327
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListMitigationActionsResult.java
@@ -0,0 +1,212 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class ListMitigationActionsResult implements Serializable {
+    /**
+     * <p>
+     * A set of actions that matched the specified filter criteria.
+     * </p>
+     */
+    private java.util.List<MitigationActionIdentifier> actionIdentifiers;
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     */
+    private String nextToken;
+
+    /**
+     * <p>
+     * A set of actions that matched the specified filter criteria.
+     * </p>
+     *
+     * @return <p>
+     *         A set of actions that matched the specified filter criteria.
+     *         </p>
+     */
+    public java.util.List<MitigationActionIdentifier> getActionIdentifiers() {
+        return actionIdentifiers;
+    }
+
+    /**
+     * <p>
+     * A set of actions that matched the specified filter criteria.
+     * </p>
+     *
+     * @param actionIdentifiers <p>
+     *            A set of actions that matched the specified filter criteria.
+     *            </p>
+     */
+    public void setActionIdentifiers(
+            java.util.Collection<MitigationActionIdentifier> actionIdentifiers) {
+        if (actionIdentifiers == null) {
+            this.actionIdentifiers = null;
+            return;
+        }
+
+        this.actionIdentifiers = new java.util.ArrayList<MitigationActionIdentifier>(
+                actionIdentifiers);
+    }
+
+    /**
+     * <p>
+     * A set of actions that matched the specified filter criteria.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionIdentifiers <p>
+     *            A set of actions that matched the specified filter criteria.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListMitigationActionsResult withActionIdentifiers(
+            MitigationActionIdentifier... actionIdentifiers) {
+        if (getActionIdentifiers() == null) {
+            this.actionIdentifiers = new java.util.ArrayList<MitigationActionIdentifier>(
+                    actionIdentifiers.length);
+        }
+        for (MitigationActionIdentifier value : actionIdentifiers) {
+            this.actionIdentifiers.add(value);
+        }
+        return this;
+    }
+
+    /**
+     * <p>
+     * A set of actions that matched the specified filter criteria.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionIdentifiers <p>
+     *            A set of actions that matched the specified filter criteria.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListMitigationActionsResult withActionIdentifiers(
+            java.util.Collection<MitigationActionIdentifier> actionIdentifiers) {
+        setActionIdentifiers(actionIdentifiers);
+        return this;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @return <p>
+     *         The token for the next set of results.
+     *         </p>
+     */
+    public String getNextToken() {
+        return nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     */
+    public void setNextToken(String nextToken) {
+        this.nextToken = nextToken;
+    }
+
+    /**
+     * <p>
+     * The token for the next set of results.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param nextToken <p>
+     *            The token for the next set of results.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public ListMitigationActionsResult withNextToken(String nextToken) {
+        this.nextToken = nextToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionIdentifiers() != null)
+            sb.append("actionIdentifiers: " + getActionIdentifiers() + ",");
+        if (getNextToken() != null)
+            sb.append("nextToken: " + getNextToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getActionIdentifiers() == null) ? 0 : getActionIdentifiers().hashCode());
+        hashCode = prime * hashCode + ((getNextToken() == null) ? 0 : getNextToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ListMitigationActionsResult == false)
+            return false;
+        ListMitigationActionsResult other = (ListMitigationActionsResult) obj;
+
+        if (other.getActionIdentifiers() == null ^ this.getActionIdentifiers() == null)
+            return false;
+        if (other.getActionIdentifiers() != null
+                && other.getActionIdentifiers().equals(this.getActionIdentifiers()) == false)
+            return false;
+        if (other.getNextToken() == null ^ this.getNextToken() == null)
+            return false;
+        if (other.getNextToken() != null
+                && other.getNextToken().equals(this.getNextToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListSecurityProfilesForTargetRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListSecurityProfilesForTargetRequest.java
index 0eae04651c..a46b57d2be 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListSecurityProfilesForTargetRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListSecurityProfilesForTargetRequest.java
@@ -46,7 +46,7 @@
 
     /**
      * <p>
-     * If true, return child groups as well.
+     * If true, return child groups too.
      * </p>
      */
     private Boolean recursive;
@@ -160,11 +160,11 @@ public ListSecurityProfilesForTargetRequest withMaxResults(Integer maxResults) {
 
     /**
      * <p>
-     * If true, return child groups as well.
+     * If true, return child groups too.
      * </p>
      *
      * @return <p>
-     *         If true, return child groups as well.
+     *         If true, return child groups too.
      *         </p>
      */
     public Boolean isRecursive() {
@@ -173,11 +173,11 @@ public Boolean isRecursive() {
 
     /**
      * <p>
-     * If true, return child groups as well.
+     * If true, return child groups too.
      * </p>
      *
      * @return <p>
-     *         If true, return child groups as well.
+     *         If true, return child groups too.
      *         </p>
      */
     public Boolean getRecursive() {
@@ -186,11 +186,11 @@ public Boolean getRecursive() {
 
     /**
      * <p>
-     * If true, return child groups as well.
+     * If true, return child groups too.
      * </p>
      *
      * @param recursive <p>
-     *            If true, return child groups as well.
+     *            If true, return child groups too.
      *            </p>
      */
     public void setRecursive(Boolean recursive) {
@@ -199,14 +199,14 @@ public void setRecursive(Boolean recursive) {
 
     /**
      * <p>
-     * If true, return child groups as well.
+     * If true, return child groups too.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param recursive <p>
-     *            If true, return child groups as well.
+     *            If true, return child groups too.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsRequest.java
index ef6815b419..5a69c462fd 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsRequest.java
@@ -23,7 +23,7 @@
  * <p>
  * Lists the Device Defender security profile violations discovered during the
  * given time period. You can use filters to limit the results to those alerts
- * issued for a particular security profile, behavior or thing (device).
+ * issued for a particular security profile, behavior, or thing (device).
  * </p>
  */
 public class ListViolationEventsRequest extends AmazonWebServiceRequest implements Serializable {
@@ -48,7 +48,6 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      */
     private String thingName;
 
@@ -178,7 +177,6 @@ public ListViolationEventsRequest withEndTime(java.util.Date endTime) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @return <p>
      *         A filter to limit results to those alerts caused by the specified
@@ -196,7 +194,6 @@ public String getThingName() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            A filter to limit results to those alerts caused by the
@@ -217,7 +214,6 @@ public void setThingName(String thingName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            A filter to limit results to those alerts caused by the
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsResult.java
index 284ee57fd6..3c68995e2e 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsResult.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ListViolationEventsResult.java
@@ -21,7 +21,7 @@
     /**
      * <p>
      * The security profile violation alerts issued for this account during the
-     * given time frame, potentially filtered by security profile, behavior
+     * given time period, potentially filtered by security profile, behavior
      * violated, or thing (device) violating.
      * </p>
      */
@@ -38,13 +38,13 @@
     /**
      * <p>
      * The security profile violation alerts issued for this account during the
-     * given time frame, potentially filtered by security profile, behavior
+     * given time period, potentially filtered by security profile, behavior
      * violated, or thing (device) violating.
      * </p>
      *
      * @return <p>
      *         The security profile violation alerts issued for this account
-     *         during the given time frame, potentially filtered by security
+     *         during the given time period, potentially filtered by security
      *         profile, behavior violated, or thing (device) violating.
      *         </p>
      */
@@ -55,13 +55,13 @@
     /**
      * <p>
      * The security profile violation alerts issued for this account during the
-     * given time frame, potentially filtered by security profile, behavior
+     * given time period, potentially filtered by security profile, behavior
      * violated, or thing (device) violating.
      * </p>
      *
      * @param violationEvents <p>
      *            The security profile violation alerts issued for this account
-     *            during the given time frame, potentially filtered by security
+     *            during the given time period, potentially filtered by security
      *            profile, behavior violated, or thing (device) violating.
      *            </p>
      */
@@ -77,7 +77,7 @@ public void setViolationEvents(java.util.Collection<ViolationEvent> violationEve
     /**
      * <p>
      * The security profile violation alerts issued for this account during the
-     * given time frame, potentially filtered by security profile, behavior
+     * given time period, potentially filtered by security profile, behavior
      * violated, or thing (device) violating.
      * </p>
      * <p>
@@ -86,7 +86,7 @@ public void setViolationEvents(java.util.Collection<ViolationEvent> violationEve
      *
      * @param violationEvents <p>
      *            The security profile violation alerts issued for this account
-     *            during the given time frame, potentially filtered by security
+     *            during the given time period, potentially filtered by security
      *            profile, behavior violated, or thing (device) violating.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -105,7 +105,7 @@ public ListViolationEventsResult withViolationEvents(ViolationEvent... violation
     /**
      * <p>
      * The security profile violation alerts issued for this account during the
-     * given time frame, potentially filtered by security profile, behavior
+     * given time period, potentially filtered by security profile, behavior
      * violated, or thing (device) violating.
      * </p>
      * <p>
@@ -114,7 +114,7 @@ public ListViolationEventsResult withViolationEvents(ViolationEvent... violation
      *
      * @param violationEvents <p>
      *            The security profile violation alerts issued for this account
-     *            during the given time frame, potentially filtered by security
+     *            during the given time period, potentially filtered by security
      *            profile, behavior violated, or thing (device) violating.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationAction.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationAction.java
new file mode 100644
index 0000000000..6670099270
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationAction.java
@@ -0,0 +1,335 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Describes which changes should be applied as part of a mitigation action.
+ * </p>
+ */
+public class MitigationAction implements Serializable {
+    /**
+     * <p>
+     * A user-friendly name for the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String name;
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     */
+    private String id;
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleArn;
+
+    /**
+     * <p>
+     * The set of parameters for this mitigation action. The parameters vary,
+     * depending on the kind of action you apply.
+     * </p>
+     */
+    private MitigationActionParams actionParams;
+
+    /**
+     * <p>
+     * A user-friendly name for the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         A user-friendly name for the mitigation action.
+     *         </p>
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * <p>
+     * A user-friendly name for the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param name <p>
+     *            A user-friendly name for the mitigation action.
+     *            </p>
+     */
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    /**
+     * <p>
+     * A user-friendly name for the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param name <p>
+     *            A user-friendly name for the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationAction withName(String name) {
+        this.name = name;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         A unique identifier for the mitigation action.
+     *         </p>
+     */
+    public String getId() {
+        return id;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     *
+     * @param id <p>
+     *            A unique identifier for the mitigation action.
+     *            </p>
+     */
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param id <p>
+     *            A unique identifier for the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationAction withId(String id) {
+        this.id = id;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The IAM role ARN used to apply this mitigation action.
+     *         </p>
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The IAM role ARN used to apply this mitigation action.
+     *            </p>
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The IAM role ARN used to apply this mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationAction withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The set of parameters for this mitigation action. The parameters vary,
+     * depending on the kind of action you apply.
+     * </p>
+     *
+     * @return <p>
+     *         The set of parameters for this mitigation action. The parameters
+     *         vary, depending on the kind of action you apply.
+     *         </p>
+     */
+    public MitigationActionParams getActionParams() {
+        return actionParams;
+    }
+
+    /**
+     * <p>
+     * The set of parameters for this mitigation action. The parameters vary,
+     * depending on the kind of action you apply.
+     * </p>
+     *
+     * @param actionParams <p>
+     *            The set of parameters for this mitigation action. The
+     *            parameters vary, depending on the kind of action you apply.
+     *            </p>
+     */
+    public void setActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+    }
+
+    /**
+     * <p>
+     * The set of parameters for this mitigation action. The parameters vary,
+     * depending on the kind of action you apply.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionParams <p>
+     *            The set of parameters for this mitigation action. The
+     *            parameters vary, depending on the kind of action you apply.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationAction withActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getName() != null)
+            sb.append("name: " + getName() + ",");
+        if (getId() != null)
+            sb.append("id: " + getId() + ",");
+        if (getRoleArn() != null)
+            sb.append("roleArn: " + getRoleArn() + ",");
+        if (getActionParams() != null)
+            sb.append("actionParams: " + getActionParams());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getName() == null) ? 0 : getName().hashCode());
+        hashCode = prime * hashCode + ((getId() == null) ? 0 : getId().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getActionParams() == null) ? 0 : getActionParams().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MitigationAction == false)
+            return false;
+        MitigationAction other = (MitigationAction) obj;
+
+        if (other.getName() == null ^ this.getName() == null)
+            return false;
+        if (other.getName() != null && other.getName().equals(this.getName()) == false)
+            return false;
+        if (other.getId() == null ^ this.getId() == null)
+            return false;
+        if (other.getId() != null && other.getId().equals(this.getId()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        if (other.getActionParams() == null ^ this.getActionParams() == null)
+            return false;
+        if (other.getActionParams() != null
+                && other.getActionParams().equals(this.getActionParams()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionIdentifier.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionIdentifier.java
new file mode 100644
index 0000000000..7d2e43018a
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionIdentifier.java
@@ -0,0 +1,260 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Information that identifies a mitigation action. This information is returned
+ * by ListMitigationActions.
+ * </p>
+ */
+public class MitigationActionIdentifier implements Serializable {
+    /**
+     * <p>
+     * The friendly name of the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     */
+    private String actionArn;
+
+    /**
+     * <p>
+     * The date when this mitigation action was created.
+     * </p>
+     */
+    private java.util.Date creationDate;
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The friendly name of the mitigation action.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name of the mitigation action.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name of the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name of the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionIdentifier withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         The IAM role ARN used to apply this mitigation action.
+     *         </p>
+     */
+    public String getActionArn() {
+        return actionArn;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     *
+     * @param actionArn <p>
+     *            The IAM role ARN used to apply this mitigation action.
+     *            </p>
+     */
+    public void setActionArn(String actionArn) {
+        this.actionArn = actionArn;
+    }
+
+    /**
+     * <p>
+     * The IAM role ARN used to apply this mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionArn <p>
+     *            The IAM role ARN used to apply this mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionIdentifier withActionArn(String actionArn) {
+        this.actionArn = actionArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The date when this mitigation action was created.
+     * </p>
+     *
+     * @return <p>
+     *         The date when this mitigation action was created.
+     *         </p>
+     */
+    public java.util.Date getCreationDate() {
+        return creationDate;
+    }
+
+    /**
+     * <p>
+     * The date when this mitigation action was created.
+     * </p>
+     *
+     * @param creationDate <p>
+     *            The date when this mitigation action was created.
+     *            </p>
+     */
+    public void setCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+    }
+
+    /**
+     * <p>
+     * The date when this mitigation action was created.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param creationDate <p>
+     *            The date when this mitigation action was created.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionIdentifier withCreationDate(java.util.Date creationDate) {
+        this.creationDate = creationDate;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName() + ",");
+        if (getActionArn() != null)
+            sb.append("actionArn: " + getActionArn() + ",");
+        if (getCreationDate() != null)
+            sb.append("creationDate: " + getCreationDate());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        hashCode = prime * hashCode + ((getActionArn() == null) ? 0 : getActionArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getCreationDate() == null) ? 0 : getCreationDate().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MitigationActionIdentifier == false)
+            return false;
+        MitigationActionIdentifier other = (MitigationActionIdentifier) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        if (other.getActionArn() == null ^ this.getActionArn() == null)
+            return false;
+        if (other.getActionArn() != null
+                && other.getActionArn().equals(this.getActionArn()) == false)
+            return false;
+        if (other.getCreationDate() == null ^ this.getCreationDate() == null)
+            return false;
+        if (other.getCreationDate() != null
+                && other.getCreationDate().equals(this.getCreationDate()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionParams.java
new file mode 100644
index 0000000000..eb1d70e832
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionParams.java
@@ -0,0 +1,516 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * The set of parameters for this mitigation action. You can specify only one
+ * type of parameter (in other words, you can apply only one action for each
+ * defined mitigation action).
+ * </p>
+ */
+public class MitigationActionParams implements Serializable {
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the
+     * device certificate to inactive.
+     * </p>
+     */
+    private UpdateDeviceCertificateParams updateDeviceCertificateParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the CA
+     * certificate to inactive.
+     * </p>
+     */
+    private UpdateCACertificateParams updateCACertificateParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that moves devices associated
+     * with a certificate to one or more specified thing groups, typically for
+     * quarantine.
+     * </p>
+     */
+    private AddThingsToThingGroupParams addThingsToThingGroupParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that adds a blank policy to
+     * restrict permissions.
+     * </p>
+     */
+    private ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that enables AWS IoT logging at
+     * a specified level of detail.
+     * </p>
+     */
+    private EnableIoTLoggingParams enableIoTLoggingParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that publishes findings to
+     * Amazon SNS. You can implement your own custom actions in response to the
+     * Amazon SNS messages.
+     * </p>
+     */
+    private PublishFindingToSnsParams publishFindingToSnsParams;
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the
+     * device certificate to inactive.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that changes the state
+     *         of the device certificate to inactive.
+     *         </p>
+     */
+    public UpdateDeviceCertificateParams getUpdateDeviceCertificateParams() {
+        return updateDeviceCertificateParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the
+     * device certificate to inactive.
+     * </p>
+     *
+     * @param updateDeviceCertificateParams <p>
+     *            Parameters to define a mitigation action that changes the
+     *            state of the device certificate to inactive.
+     *            </p>
+     */
+    public void setUpdateDeviceCertificateParams(
+            UpdateDeviceCertificateParams updateDeviceCertificateParams) {
+        this.updateDeviceCertificateParams = updateDeviceCertificateParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the
+     * device certificate to inactive.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param updateDeviceCertificateParams <p>
+     *            Parameters to define a mitigation action that changes the
+     *            state of the device certificate to inactive.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withUpdateDeviceCertificateParams(
+            UpdateDeviceCertificateParams updateDeviceCertificateParams) {
+        this.updateDeviceCertificateParams = updateDeviceCertificateParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the CA
+     * certificate to inactive.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that changes the state
+     *         of the CA certificate to inactive.
+     *         </p>
+     */
+    public UpdateCACertificateParams getUpdateCACertificateParams() {
+        return updateCACertificateParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the CA
+     * certificate to inactive.
+     * </p>
+     *
+     * @param updateCACertificateParams <p>
+     *            Parameters to define a mitigation action that changes the
+     *            state of the CA certificate to inactive.
+     *            </p>
+     */
+    public void setUpdateCACertificateParams(UpdateCACertificateParams updateCACertificateParams) {
+        this.updateCACertificateParams = updateCACertificateParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that changes the state of the CA
+     * certificate to inactive.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param updateCACertificateParams <p>
+     *            Parameters to define a mitigation action that changes the
+     *            state of the CA certificate to inactive.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withUpdateCACertificateParams(
+            UpdateCACertificateParams updateCACertificateParams) {
+        this.updateCACertificateParams = updateCACertificateParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that moves devices associated
+     * with a certificate to one or more specified thing groups, typically for
+     * quarantine.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that moves devices
+     *         associated with a certificate to one or more specified thing
+     *         groups, typically for quarantine.
+     *         </p>
+     */
+    public AddThingsToThingGroupParams getAddThingsToThingGroupParams() {
+        return addThingsToThingGroupParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that moves devices associated
+     * with a certificate to one or more specified thing groups, typically for
+     * quarantine.
+     * </p>
+     *
+     * @param addThingsToThingGroupParams <p>
+     *            Parameters to define a mitigation action that moves devices
+     *            associated with a certificate to one or more specified thing
+     *            groups, typically for quarantine.
+     *            </p>
+     */
+    public void setAddThingsToThingGroupParams(
+            AddThingsToThingGroupParams addThingsToThingGroupParams) {
+        this.addThingsToThingGroupParams = addThingsToThingGroupParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that moves devices associated
+     * with a certificate to one or more specified thing groups, typically for
+     * quarantine.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param addThingsToThingGroupParams <p>
+     *            Parameters to define a mitigation action that moves devices
+     *            associated with a certificate to one or more specified thing
+     *            groups, typically for quarantine.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withAddThingsToThingGroupParams(
+            AddThingsToThingGroupParams addThingsToThingGroupParams) {
+        this.addThingsToThingGroupParams = addThingsToThingGroupParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that adds a blank policy to
+     * restrict permissions.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that adds a blank policy
+     *         to restrict permissions.
+     *         </p>
+     */
+    public ReplaceDefaultPolicyVersionParams getReplaceDefaultPolicyVersionParams() {
+        return replaceDefaultPolicyVersionParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that adds a blank policy to
+     * restrict permissions.
+     * </p>
+     *
+     * @param replaceDefaultPolicyVersionParams <p>
+     *            Parameters to define a mitigation action that adds a blank
+     *            policy to restrict permissions.
+     *            </p>
+     */
+    public void setReplaceDefaultPolicyVersionParams(
+            ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams) {
+        this.replaceDefaultPolicyVersionParams = replaceDefaultPolicyVersionParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that adds a blank policy to
+     * restrict permissions.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param replaceDefaultPolicyVersionParams <p>
+     *            Parameters to define a mitigation action that adds a blank
+     *            policy to restrict permissions.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withReplaceDefaultPolicyVersionParams(
+            ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams) {
+        this.replaceDefaultPolicyVersionParams = replaceDefaultPolicyVersionParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that enables AWS IoT logging at
+     * a specified level of detail.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that enables AWS IoT
+     *         logging at a specified level of detail.
+     *         </p>
+     */
+    public EnableIoTLoggingParams getEnableIoTLoggingParams() {
+        return enableIoTLoggingParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that enables AWS IoT logging at
+     * a specified level of detail.
+     * </p>
+     *
+     * @param enableIoTLoggingParams <p>
+     *            Parameters to define a mitigation action that enables AWS IoT
+     *            logging at a specified level of detail.
+     *            </p>
+     */
+    public void setEnableIoTLoggingParams(EnableIoTLoggingParams enableIoTLoggingParams) {
+        this.enableIoTLoggingParams = enableIoTLoggingParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that enables AWS IoT logging at
+     * a specified level of detail.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param enableIoTLoggingParams <p>
+     *            Parameters to define a mitigation action that enables AWS IoT
+     *            logging at a specified level of detail.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withEnableIoTLoggingParams(
+            EnableIoTLoggingParams enableIoTLoggingParams) {
+        this.enableIoTLoggingParams = enableIoTLoggingParams;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that publishes findings to
+     * Amazon SNS. You can implement your own custom actions in response to the
+     * Amazon SNS messages.
+     * </p>
+     *
+     * @return <p>
+     *         Parameters to define a mitigation action that publishes findings
+     *         to Amazon SNS. You can implement your own custom actions in
+     *         response to the Amazon SNS messages.
+     *         </p>
+     */
+    public PublishFindingToSnsParams getPublishFindingToSnsParams() {
+        return publishFindingToSnsParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that publishes findings to
+     * Amazon SNS. You can implement your own custom actions in response to the
+     * Amazon SNS messages.
+     * </p>
+     *
+     * @param publishFindingToSnsParams <p>
+     *            Parameters to define a mitigation action that publishes
+     *            findings to Amazon SNS. You can implement your own custom
+     *            actions in response to the Amazon SNS messages.
+     *            </p>
+     */
+    public void setPublishFindingToSnsParams(PublishFindingToSnsParams publishFindingToSnsParams) {
+        this.publishFindingToSnsParams = publishFindingToSnsParams;
+    }
+
+    /**
+     * <p>
+     * Parameters to define a mitigation action that publishes findings to
+     * Amazon SNS. You can implement your own custom actions in response to the
+     * Amazon SNS messages.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param publishFindingToSnsParams <p>
+     *            Parameters to define a mitigation action that publishes
+     *            findings to Amazon SNS. You can implement your own custom
+     *            actions in response to the Amazon SNS messages.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public MitigationActionParams withPublishFindingToSnsParams(
+            PublishFindingToSnsParams publishFindingToSnsParams) {
+        this.publishFindingToSnsParams = publishFindingToSnsParams;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getUpdateDeviceCertificateParams() != null)
+            sb.append("updateDeviceCertificateParams: " + getUpdateDeviceCertificateParams() + ",");
+        if (getUpdateCACertificateParams() != null)
+            sb.append("updateCACertificateParams: " + getUpdateCACertificateParams() + ",");
+        if (getAddThingsToThingGroupParams() != null)
+            sb.append("addThingsToThingGroupParams: " + getAddThingsToThingGroupParams() + ",");
+        if (getReplaceDefaultPolicyVersionParams() != null)
+            sb.append("replaceDefaultPolicyVersionParams: "
+                    + getReplaceDefaultPolicyVersionParams() + ",");
+        if (getEnableIoTLoggingParams() != null)
+            sb.append("enableIoTLoggingParams: " + getEnableIoTLoggingParams() + ",");
+        if (getPublishFindingToSnsParams() != null)
+            sb.append("publishFindingToSnsParams: " + getPublishFindingToSnsParams());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime
+                * hashCode
+                + ((getUpdateDeviceCertificateParams() == null) ? 0
+                        : getUpdateDeviceCertificateParams().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getUpdateCACertificateParams() == null) ? 0 : getUpdateCACertificateParams()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAddThingsToThingGroupParams() == null) ? 0
+                        : getAddThingsToThingGroupParams().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getReplaceDefaultPolicyVersionParams() == null) ? 0
+                        : getReplaceDefaultPolicyVersionParams().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getEnableIoTLoggingParams() == null) ? 0 : getEnableIoTLoggingParams()
+                        .hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getPublishFindingToSnsParams() == null) ? 0 : getPublishFindingToSnsParams()
+                        .hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof MitigationActionParams == false)
+            return false;
+        MitigationActionParams other = (MitigationActionParams) obj;
+
+        if (other.getUpdateDeviceCertificateParams() == null
+                ^ this.getUpdateDeviceCertificateParams() == null)
+            return false;
+        if (other.getUpdateDeviceCertificateParams() != null
+                && other.getUpdateDeviceCertificateParams().equals(
+                        this.getUpdateDeviceCertificateParams()) == false)
+            return false;
+        if (other.getUpdateCACertificateParams() == null
+                ^ this.getUpdateCACertificateParams() == null)
+            return false;
+        if (other.getUpdateCACertificateParams() != null
+                && other.getUpdateCACertificateParams().equals(this.getUpdateCACertificateParams()) == false)
+            return false;
+        if (other.getAddThingsToThingGroupParams() == null
+                ^ this.getAddThingsToThingGroupParams() == null)
+            return false;
+        if (other.getAddThingsToThingGroupParams() != null
+                && other.getAddThingsToThingGroupParams().equals(
+                        this.getAddThingsToThingGroupParams()) == false)
+            return false;
+        if (other.getReplaceDefaultPolicyVersionParams() == null
+                ^ this.getReplaceDefaultPolicyVersionParams() == null)
+            return false;
+        if (other.getReplaceDefaultPolicyVersionParams() != null
+                && other.getReplaceDefaultPolicyVersionParams().equals(
+                        this.getReplaceDefaultPolicyVersionParams()) == false)
+            return false;
+        if (other.getEnableIoTLoggingParams() == null ^ this.getEnableIoTLoggingParams() == null)
+            return false;
+        if (other.getEnableIoTLoggingParams() != null
+                && other.getEnableIoTLoggingParams().equals(this.getEnableIoTLoggingParams()) == false)
+            return false;
+        if (other.getPublishFindingToSnsParams() == null
+                ^ this.getPublishFindingToSnsParams() == null)
+            return false;
+        if (other.getPublishFindingToSnsParams() != null
+                && other.getPublishFindingToSnsParams().equals(this.getPublishFindingToSnsParams()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionType.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionType.java
new file mode 100644
index 0000000000..40bee6ff75
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/MitigationActionType.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Mitigation Action Type
+ */
+public enum MitigationActionType {
+
+    UPDATE_DEVICE_CERTIFICATE("UPDATE_DEVICE_CERTIFICATE"),
+    UPDATE_CA_CERTIFICATE("UPDATE_CA_CERTIFICATE"),
+    ADD_THINGS_TO_THING_GROUP("ADD_THINGS_TO_THING_GROUP"),
+    REPLACE_DEFAULT_POLICY_VERSION("REPLACE_DEFAULT_POLICY_VERSION"),
+    ENABLE_IOT_LOGGING("ENABLE_IOT_LOGGING"),
+    PUBLISH_FINDING_TO_SNS("PUBLISH_FINDING_TO_SNS");
+
+    private String value;
+
+    private MitigationActionType(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, MitigationActionType> enumMap;
+    static {
+        enumMap = new HashMap<String, MitigationActionType>();
+        enumMap.put("UPDATE_DEVICE_CERTIFICATE", UPDATE_DEVICE_CERTIFICATE);
+        enumMap.put("UPDATE_CA_CERTIFICATE", UPDATE_CA_CERTIFICATE);
+        enumMap.put("ADD_THINGS_TO_THING_GROUP", ADD_THINGS_TO_THING_GROUP);
+        enumMap.put("REPLACE_DEFAULT_POLICY_VERSION", REPLACE_DEFAULT_POLICY_VERSION);
+        enumMap.put("ENABLE_IOT_LOGGING", ENABLE_IOT_LOGGING);
+        enumMap.put("PUBLISH_FINDING_TO_SNS", PUBLISH_FINDING_TO_SNS);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return MitigationActionType corresponding to the value
+     */
+    public static MitigationActionType fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/NonCompliantResource.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/NonCompliantResource.java
index 40025cad76..ee2a92b31c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/NonCompliantResource.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/NonCompliantResource.java
@@ -19,13 +19,13 @@
 
 /**
  * <p>
- * Information about the resource that was non-compliant with the audit check.
+ * Information about the resource that was noncompliant with the audit check.
  * </p>
  */
 public class NonCompliantResource implements Serializable {
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -36,21 +36,21 @@
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information that identifies the noncompliant resource.
      * </p>
      */
     private ResourceIdentifier resourceIdentifier;
 
     /**
      * <p>
-     * Additional information about the non-compliant resource.
+     * Other information about the noncompliant resource.
      * </p>
      */
     private java.util.Map<String, String> additionalInfo;
 
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -58,7 +58,7 @@
      * COGNITO_IDENTITY_POOL, CLIENT_ID, ACCOUNT_SETTINGS
      *
      * @return <p>
-     *         The type of the non-compliant resource.
+     *         The type of the noncompliant resource.
      *         </p>
      * @see ResourceType
      */
@@ -68,7 +68,7 @@ public String getResourceType() {
 
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -76,7 +76,7 @@ public String getResourceType() {
      * COGNITO_IDENTITY_POOL, CLIENT_ID, ACCOUNT_SETTINGS
      *
      * @param resourceType <p>
-     *            The type of the non-compliant resource.
+     *            The type of the noncompliant resource.
      *            </p>
      * @see ResourceType
      */
@@ -86,7 +86,7 @@ public void setResourceType(String resourceType) {
 
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -97,7 +97,7 @@ public void setResourceType(String resourceType) {
      * COGNITO_IDENTITY_POOL, CLIENT_ID, ACCOUNT_SETTINGS
      *
      * @param resourceType <p>
-     *            The type of the non-compliant resource.
+     *            The type of the noncompliant resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -110,7 +110,7 @@ public NonCompliantResource withResourceType(String resourceType) {
 
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -118,7 +118,7 @@ public NonCompliantResource withResourceType(String resourceType) {
      * COGNITO_IDENTITY_POOL, CLIENT_ID, ACCOUNT_SETTINGS
      *
      * @param resourceType <p>
-     *            The type of the non-compliant resource.
+     *            The type of the noncompliant resource.
      *            </p>
      * @see ResourceType
      */
@@ -128,7 +128,7 @@ public void setResourceType(ResourceType resourceType) {
 
     /**
      * <p>
-     * The type of the non-compliant resource.
+     * The type of the noncompliant resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -139,7 +139,7 @@ public void setResourceType(ResourceType resourceType) {
      * COGNITO_IDENTITY_POOL, CLIENT_ID, ACCOUNT_SETTINGS
      *
      * @param resourceType <p>
-     *            The type of the non-compliant resource.
+     *            The type of the noncompliant resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -152,11 +152,11 @@ public NonCompliantResource withResourceType(ResourceType resourceType) {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information that identifies the noncompliant resource.
      * </p>
      *
      * @return <p>
-     *         Information identifying the non-compliant resource.
+     *         Information that identifies the noncompliant resource.
      *         </p>
      */
     public ResourceIdentifier getResourceIdentifier() {
@@ -165,11 +165,11 @@ public ResourceIdentifier getResourceIdentifier() {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information that identifies the noncompliant resource.
      * </p>
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the non-compliant resource.
+     *            Information that identifies the noncompliant resource.
      *            </p>
      */
     public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
@@ -178,14 +178,14 @@ public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
 
     /**
      * <p>
-     * Information identifying the non-compliant resource.
+     * Information that identifies the noncompliant resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the non-compliant resource.
+     *            Information that identifies the noncompliant resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -197,11 +197,11 @@ public NonCompliantResource withResourceIdentifier(ResourceIdentifier resourceId
 
     /**
      * <p>
-     * Additional information about the non-compliant resource.
+     * Other information about the noncompliant resource.
      * </p>
      *
      * @return <p>
-     *         Additional information about the non-compliant resource.
+     *         Other information about the noncompliant resource.
      *         </p>
      */
     public java.util.Map<String, String> getAdditionalInfo() {
@@ -210,11 +210,11 @@ public NonCompliantResource withResourceIdentifier(ResourceIdentifier resourceId
 
     /**
      * <p>
-     * Additional information about the non-compliant resource.
+     * Other information about the noncompliant resource.
      * </p>
      *
      * @param additionalInfo <p>
-     *            Additional information about the non-compliant resource.
+     *            Other information about the noncompliant resource.
      *            </p>
      */
     public void setAdditionalInfo(java.util.Map<String, String> additionalInfo) {
@@ -223,14 +223,14 @@ public void setAdditionalInfo(java.util.Map<String, String> additionalInfo) {
 
     /**
      * <p>
-     * Additional information about the non-compliant resource.
+     * Other information about the noncompliant resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param additionalInfo <p>
-     *            Additional information about the non-compliant resource.
+     *            Other information about the noncompliant resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -242,7 +242,7 @@ public NonCompliantResource withAdditionalInfo(java.util.Map<String, String> add
 
     /**
      * <p>
-     * Additional information about the non-compliant resource.
+     * Other information about the noncompliant resource.
      * </p>
      * <p>
      * The method adds a new key-value pair into additionalInfo parameter, and
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PolicyTemplateName.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PolicyTemplateName.java
new file mode 100644
index 0000000000..1e2a53aafe
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PolicyTemplateName.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Policy Template Name
+ */
+public enum PolicyTemplateName {
+
+    BLANK_POLICY("BLANK_POLICY");
+
+    private String value;
+
+    private PolicyTemplateName(String value) {
+        this.value = value;
+    }
+
+    @Override
+    public String toString() {
+        return value;
+    }
+
+    private static final Map<String, PolicyTemplateName> enumMap;
+    static {
+        enumMap = new HashMap<String, PolicyTemplateName>();
+        enumMap.put("BLANK_POLICY", BLANK_POLICY);
+    }
+
+    /**
+     * Use this in place of valueOf.
+     *
+     * @param value real value
+     * @return PolicyTemplateName corresponding to the value
+     */
+    public static PolicyTemplateName fromValue(String value) {
+        if (value == null || value.isEmpty()) {
+            throw new IllegalArgumentException("Value cannot be null or empty!");
+        } else if (enumMap.containsKey(value)) {
+            return enumMap.get(value);
+        } else {
+            throw new IllegalArgumentException("Cannot create enum from " + value + " value!");
+        }
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PublishFindingToSnsParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PublishFindingToSnsParams.java
new file mode 100644
index 0000000000..42e51e8c96
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PublishFindingToSnsParams.java
@@ -0,0 +1,137 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters to define a mitigation action that publishes findings to Amazon
+ * SNS. You can implement your own custom actions in response to the Amazon SNS
+ * messages.
+ * </p>
+ */
+public class PublishFindingToSnsParams implements Serializable {
+    /**
+     * <p>
+     * The ARN of the topic to which you want to publish the findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 350<br/>
+     */
+    private String topicArn;
+
+    /**
+     * <p>
+     * The ARN of the topic to which you want to publish the findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 350<br/>
+     *
+     * @return <p>
+     *         The ARN of the topic to which you want to publish the findings.
+     *         </p>
+     */
+    public String getTopicArn() {
+        return topicArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the topic to which you want to publish the findings.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 350<br/>
+     *
+     * @param topicArn <p>
+     *            The ARN of the topic to which you want to publish the
+     *            findings.
+     *            </p>
+     */
+    public void setTopicArn(String topicArn) {
+        this.topicArn = topicArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the topic to which you want to publish the findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 350<br/>
+     *
+     * @param topicArn <p>
+     *            The ARN of the topic to which you want to publish the
+     *            findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public PublishFindingToSnsParams withTopicArn(String topicArn) {
+        this.topicArn = topicArn;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTopicArn() != null)
+            sb.append("topicArn: " + getTopicArn());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTopicArn() == null) ? 0 : getTopicArn().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof PublishFindingToSnsParams == false)
+            return false;
+        PublishFindingToSnsParams other = (PublishFindingToSnsParams) obj;
+
+        if (other.getTopicArn() == null ^ this.getTopicArn() == null)
+            return false;
+        if (other.getTopicArn() != null && other.getTopicArn().equals(this.getTopicArn()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PutItemInput.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PutItemInput.java
index 42bff19618..fad06e77fa 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PutItemInput.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/PutItemInput.java
@@ -26,18 +26,18 @@
 public class PutItemInput implements Serializable {
     /**
      * <p>
-     * The table where the message data will be written
+     * The table where the message data will be written.
      * </p>
      */
     private String tableName;
 
     /**
      * <p>
-     * The table where the message data will be written
+     * The table where the message data will be written.
      * </p>
      *
      * @return <p>
-     *         The table where the message data will be written
+     *         The table where the message data will be written.
      *         </p>
      */
     public String getTableName() {
@@ -46,11 +46,11 @@ public String getTableName() {
 
     /**
      * <p>
-     * The table where the message data will be written
+     * The table where the message data will be written.
      * </p>
      *
      * @param tableName <p>
-     *            The table where the message data will be written
+     *            The table where the message data will be written.
      *            </p>
      */
     public void setTableName(String tableName) {
@@ -59,14 +59,14 @@ public void setTableName(String tableName) {
 
     /**
      * <p>
-     * The table where the message data will be written
+     * The table where the message data will be written.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param tableName <p>
-     *            The table where the message data will be written
+     *            The table where the message data will be written.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RelatedResource.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RelatedResource.java
index 31f606f2ba..ba788d10cb 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RelatedResource.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RelatedResource.java
@@ -36,14 +36,14 @@
 
     /**
      * <p>
-     * Information identifying the resource.
+     * Information that identifies the resource.
      * </p>
      */
     private ResourceIdentifier resourceIdentifier;
 
     /**
      * <p>
-     * Additional information about the resource.
+     * Other information about the resource.
      * </p>
      */
     private java.util.Map<String, String> additionalInfo;
@@ -152,11 +152,11 @@ public RelatedResource withResourceType(ResourceType resourceType) {
 
     /**
      * <p>
-     * Information identifying the resource.
+     * Information that identifies the resource.
      * </p>
      *
      * @return <p>
-     *         Information identifying the resource.
+     *         Information that identifies the resource.
      *         </p>
      */
     public ResourceIdentifier getResourceIdentifier() {
@@ -165,11 +165,11 @@ public ResourceIdentifier getResourceIdentifier() {
 
     /**
      * <p>
-     * Information identifying the resource.
+     * Information that identifies the resource.
      * </p>
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the resource.
+     *            Information that identifies the resource.
      *            </p>
      */
     public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
@@ -178,14 +178,14 @@ public void setResourceIdentifier(ResourceIdentifier resourceIdentifier) {
 
     /**
      * <p>
-     * Information identifying the resource.
+     * Information that identifies the resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param resourceIdentifier <p>
-     *            Information identifying the resource.
+     *            Information that identifies the resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -197,11 +197,11 @@ public RelatedResource withResourceIdentifier(ResourceIdentifier resourceIdentif
 
     /**
      * <p>
-     * Additional information about the resource.
+     * Other information about the resource.
      * </p>
      *
      * @return <p>
-     *         Additional information about the resource.
+     *         Other information about the resource.
      *         </p>
      */
     public java.util.Map<String, String> getAdditionalInfo() {
@@ -210,11 +210,11 @@ public RelatedResource withResourceIdentifier(ResourceIdentifier resourceIdentif
 
     /**
      * <p>
-     * Additional information about the resource.
+     * Other information about the resource.
      * </p>
      *
      * @param additionalInfo <p>
-     *            Additional information about the resource.
+     *            Other information about the resource.
      *            </p>
      */
     public void setAdditionalInfo(java.util.Map<String, String> additionalInfo) {
@@ -223,14 +223,14 @@ public void setAdditionalInfo(java.util.Map<String, String> additionalInfo) {
 
     /**
      * <p>
-     * Additional information about the resource.
+     * Other information about the resource.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param additionalInfo <p>
-     *            Additional information about the resource.
+     *            Other information about the resource.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -242,7 +242,7 @@ public RelatedResource withAdditionalInfo(java.util.Map<String, String> addition
 
     /**
      * <p>
-     * Additional information about the resource.
+     * Other information about the resource.
      * </p>
      * <p>
      * The method adds a new key-value pair into additionalInfo parameter, and
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ReplaceDefaultPolicyVersionParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ReplaceDefaultPolicyVersionParams.java
new file mode 100644
index 0000000000..d57fe8859b
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ReplaceDefaultPolicyVersionParams.java
@@ -0,0 +1,190 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters to define a mitigation action that adds a blank policy to restrict
+ * permissions.
+ * </p>
+ */
+public class ReplaceDefaultPolicyVersionParams implements Serializable {
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     */
+    private String templateName;
+
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     *
+     * @return <p>
+     *         The name of the template to be applied. The only supported value
+     *         is <code>BLANK_POLICY</code>.
+     *         </p>
+     * @see PolicyTemplateName
+     */
+    public String getTemplateName() {
+        return templateName;
+    }
+
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     *
+     * @param templateName <p>
+     *            The name of the template to be applied. The only supported
+     *            value is <code>BLANK_POLICY</code>.
+     *            </p>
+     * @see PolicyTemplateName
+     */
+    public void setTemplateName(String templateName) {
+        this.templateName = templateName;
+    }
+
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     *
+     * @param templateName <p>
+     *            The name of the template to be applied. The only supported
+     *            value is <code>BLANK_POLICY</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see PolicyTemplateName
+     */
+    public ReplaceDefaultPolicyVersionParams withTemplateName(String templateName) {
+        this.templateName = templateName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     *
+     * @param templateName <p>
+     *            The name of the template to be applied. The only supported
+     *            value is <code>BLANK_POLICY</code>.
+     *            </p>
+     * @see PolicyTemplateName
+     */
+    public void setTemplateName(PolicyTemplateName templateName) {
+        this.templateName = templateName.toString();
+    }
+
+    /**
+     * <p>
+     * The name of the template to be applied. The only supported value is
+     * <code>BLANK_POLICY</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>BLANK_POLICY
+     *
+     * @param templateName <p>
+     *            The name of the template to be applied. The only supported
+     *            value is <code>BLANK_POLICY</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see PolicyTemplateName
+     */
+    public ReplaceDefaultPolicyVersionParams withTemplateName(PolicyTemplateName templateName) {
+        this.templateName = templateName.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTemplateName() != null)
+            sb.append("templateName: " + getTemplateName());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getTemplateName() == null) ? 0 : getTemplateName().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof ReplaceDefaultPolicyVersionParams == false)
+            return false;
+        ReplaceDefaultPolicyVersionParams other = (ReplaceDefaultPolicyVersionParams) obj;
+
+        if (other.getTemplateName() == null ^ this.getTemplateName() == null)
+            return false;
+        if (other.getTemplateName() != null
+                && other.getTemplateName().equals(this.getTemplateName()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RepublishAction.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RepublishAction.java
index 31975ec1b9..285f6b380d 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RepublishAction.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/RepublishAction.java
@@ -37,6 +37,16 @@
      */
     private String topic;
 
+    /**
+     * <p>
+     * The Quality of Service (QoS) level to use when republishing messages.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>0 - 1<br/>
+     */
+    private Integer qos;
+
     /**
      * <p>
      * The ARN of the IAM role that grants access.
@@ -127,6 +137,63 @@ public RepublishAction withTopic(String topic) {
         return this;
     }
 
+    /**
+     * <p>
+     * The Quality of Service (QoS) level to use when republishing messages.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>0 - 1<br/>
+     *
+     * @return <p>
+     *         The Quality of Service (QoS) level to use when republishing
+     *         messages.
+     *         </p>
+     */
+    public Integer getQos() {
+        return qos;
+    }
+
+    /**
+     * <p>
+     * The Quality of Service (QoS) level to use when republishing messages.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>0 - 1<br/>
+     *
+     * @param qos <p>
+     *            The Quality of Service (QoS) level to use when republishing
+     *            messages.
+     *            </p>
+     */
+    public void setQos(Integer qos) {
+        this.qos = qos;
+    }
+
+    /**
+     * <p>
+     * The Quality of Service (QoS) level to use when republishing messages.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Range: </b>0 - 1<br/>
+     *
+     * @param qos <p>
+     *            The Quality of Service (QoS) level to use when republishing
+     *            messages.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public RepublishAction withQos(Integer qos) {
+        this.qos = qos;
+        return this;
+    }
+
     /**
      * Returns a string representation of this object; useful for testing and
      * debugging.
@@ -141,7 +208,9 @@ public String toString() {
         if (getRoleArn() != null)
             sb.append("roleArn: " + getRoleArn() + ",");
         if (getTopic() != null)
-            sb.append("topic: " + getTopic());
+            sb.append("topic: " + getTopic() + ",");
+        if (getQos() != null)
+            sb.append("qos: " + getQos());
         sb.append("}");
         return sb.toString();
     }
@@ -153,6 +222,7 @@ public int hashCode() {
 
         hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
         hashCode = prime * hashCode + ((getTopic() == null) ? 0 : getTopic().hashCode());
+        hashCode = prime * hashCode + ((getQos() == null) ? 0 : getQos().hashCode());
         return hashCode;
     }
 
@@ -175,6 +245,10 @@ public boolean equals(Object obj) {
             return false;
         if (other.getTopic() != null && other.getTopic().equals(this.getTopic()) == false)
             return false;
+        if (other.getQos() == null ^ this.getQos() == null)
+            return false;
+        if (other.getQos() != null && other.getQos().equals(this.getQos()) == false)
+            return false;
         return true;
     }
 }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ResourceIdentifier.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ResourceIdentifier.java
index ae900c142e..649867bccf 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ResourceIdentifier.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ResourceIdentifier.java
@@ -19,7 +19,7 @@
 
 /**
  * <p>
- * Information identifying the non-compliant resource.
+ * Information that identifies the noncompliant resource.
  * </p>
  */
 public class ResourceIdentifier implements Serializable {
@@ -47,7 +47,7 @@
 
     /**
      * <p>
-     * The ID of the Cognito Identity Pool.
+     * The ID of the Amazon Cognito identity pool.
      * </p>
      */
     private String cognitoIdentityPoolId;
@@ -195,11 +195,11 @@ public ResourceIdentifier withCaCertificateId(String caCertificateId) {
 
     /**
      * <p>
-     * The ID of the Cognito Identity Pool.
+     * The ID of the Amazon Cognito identity pool.
      * </p>
      *
      * @return <p>
-     *         The ID of the Cognito Identity Pool.
+     *         The ID of the Amazon Cognito identity pool.
      *         </p>
      */
     public String getCognitoIdentityPoolId() {
@@ -208,11 +208,11 @@ public String getCognitoIdentityPoolId() {
 
     /**
      * <p>
-     * The ID of the Cognito Identity Pool.
+     * The ID of the Amazon Cognito identity pool.
      * </p>
      *
      * @param cognitoIdentityPoolId <p>
-     *            The ID of the Cognito Identity Pool.
+     *            The ID of the Amazon Cognito identity pool.
      *            </p>
      */
     public void setCognitoIdentityPoolId(String cognitoIdentityPoolId) {
@@ -221,14 +221,14 @@ public void setCognitoIdentityPoolId(String cognitoIdentityPoolId) {
 
     /**
      * <p>
-     * The ID of the Cognito Identity Pool.
+     * The ID of the Amazon Cognito identity pool.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param cognitoIdentityPoolId <p>
-     *            The ID of the Cognito Identity Pool.
+     *            The ID of the Amazon Cognito identity pool.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ScheduledAuditMetadata.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ScheduledAuditMetadata.java
index fae7afb7d2..cd4a082c0b 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ScheduledAuditMetadata.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ScheduledAuditMetadata.java
@@ -43,7 +43,7 @@
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -179,14 +179,14 @@ public ScheduledAuditMetadata withScheduledAuditArn(String scheduledAuditArn) {
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DAILY, WEEKLY, BIWEEKLY, MONTHLY
      *
      * @return <p>
-     *         How often the scheduled audit takes place.
+     *         How often the scheduled audit occurs.
      *         </p>
      * @see AuditFrequency
      */
@@ -196,14 +196,14 @@ public String getFrequency() {
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DAILY, WEEKLY, BIWEEKLY, MONTHLY
      *
      * @param frequency <p>
-     *            How often the scheduled audit takes place.
+     *            How often the scheduled audit occurs.
      *            </p>
      * @see AuditFrequency
      */
@@ -213,7 +213,7 @@ public void setFrequency(String frequency) {
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -223,7 +223,7 @@ public void setFrequency(String frequency) {
      * <b>Allowed Values: </b>DAILY, WEEKLY, BIWEEKLY, MONTHLY
      *
      * @param frequency <p>
-     *            How often the scheduled audit takes place.
+     *            How often the scheduled audit occurs.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -236,14 +236,14 @@ public ScheduledAuditMetadata withFrequency(String frequency) {
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Allowed Values: </b>DAILY, WEEKLY, BIWEEKLY, MONTHLY
      *
      * @param frequency <p>
-     *            How often the scheduled audit takes place.
+     *            How often the scheduled audit occurs.
      *            </p>
      * @see AuditFrequency
      */
@@ -253,7 +253,7 @@ public void setFrequency(AuditFrequency frequency) {
 
     /**
      * <p>
-     * How often the scheduled audit takes place.
+     * How often the scheduled audit occurs.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -263,7 +263,7 @@ public void setFrequency(AuditFrequency frequency) {
      * <b>Allowed Values: </b>DAILY, WEEKLY, BIWEEKLY, MONTHLY
      *
      * @param frequency <p>
-     *            How often the scheduled audit takes place.
+     *            How often the scheduled audit occurs.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskRequest.java
new file mode 100644
index 0000000000..80d371f5d5
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskRequest.java
@@ -0,0 +1,435 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Starts a task that applies a set of mitigation actions to the specified
+ * target.
+ * </p>
+ */
+public class StartAuditMitigationActionsTaskRequest extends AmazonWebServiceRequest implements
+        Serializable {
+    /**
+     * <p>
+     * A unique identifier for the task. You can use this identifier to check
+     * the status of the task or to cancel it.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * Specifies the audit findings to which the mitigation actions are applied.
+     * You can apply them to a type of audit check, to all findings from an
+     * audit, or to a speecific set of findings.
+     * </p>
+     */
+    private AuditMitigationActionsTaskTarget target;
+
+    /**
+     * <p>
+     * For an audit check, specifies which mitigation actions to apply. Those
+     * actions must be defined in your AWS account.
+     * </p>
+     */
+    private java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping;
+
+    /**
+     * <p>
+     * Each audit mitigation task must have a unique client request token. If
+     * you try to start a new task with the same token as a task that already
+     * exists, an exception occurs. If you omit this value, a unique client
+     * request token is generated automatically.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>^[a-zA-Z0-9-_]+$<br/>
+     */
+    private String clientRequestToken;
+
+    /**
+     * <p>
+     * A unique identifier for the task. You can use this identifier to check
+     * the status of the task or to cancel it.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         A unique identifier for the task. You can use this identifier to
+     *         check the status of the task or to cancel it.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the task. You can use this identifier to check
+     * the status of the task or to cancel it.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            A unique identifier for the task. You can use this identifier
+     *            to check the status of the task or to cancel it.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the task. You can use this identifier to check
+     * the status of the task or to cancel it.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            A unique identifier for the task. You can use this identifier
+     *            to check the status of the task or to cancel it.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskRequest withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Specifies the audit findings to which the mitigation actions are applied.
+     * You can apply them to a type of audit check, to all findings from an
+     * audit, or to a speecific set of findings.
+     * </p>
+     *
+     * @return <p>
+     *         Specifies the audit findings to which the mitigation actions are
+     *         applied. You can apply them to a type of audit check, to all
+     *         findings from an audit, or to a speecific set of findings.
+     *         </p>
+     */
+    public AuditMitigationActionsTaskTarget getTarget() {
+        return target;
+    }
+
+    /**
+     * <p>
+     * Specifies the audit findings to which the mitigation actions are applied.
+     * You can apply them to a type of audit check, to all findings from an
+     * audit, or to a speecific set of findings.
+     * </p>
+     *
+     * @param target <p>
+     *            Specifies the audit findings to which the mitigation actions
+     *            are applied. You can apply them to a type of audit check, to
+     *            all findings from an audit, or to a speecific set of findings.
+     *            </p>
+     */
+    public void setTarget(AuditMitigationActionsTaskTarget target) {
+        this.target = target;
+    }
+
+    /**
+     * <p>
+     * Specifies the audit findings to which the mitigation actions are applied.
+     * You can apply them to a type of audit check, to all findings from an
+     * audit, or to a speecific set of findings.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param target <p>
+     *            Specifies the audit findings to which the mitigation actions
+     *            are applied. You can apply them to a type of audit check, to
+     *            all findings from an audit, or to a speecific set of findings.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskRequest withTarget(AuditMitigationActionsTaskTarget target) {
+        this.target = target;
+        return this;
+    }
+
+    /**
+     * <p>
+     * For an audit check, specifies which mitigation actions to apply. Those
+     * actions must be defined in your AWS account.
+     * </p>
+     *
+     * @return <p>
+     *         For an audit check, specifies which mitigation actions to apply.
+     *         Those actions must be defined in your AWS account.
+     *         </p>
+     */
+    public java.util.Map<String, java.util.List<String>> getAuditCheckToActionsMapping() {
+        return auditCheckToActionsMapping;
+    }
+
+    /**
+     * <p>
+     * For an audit check, specifies which mitigation actions to apply. Those
+     * actions must be defined in your AWS account.
+     * </p>
+     *
+     * @param auditCheckToActionsMapping <p>
+     *            For an audit check, specifies which mitigation actions to
+     *            apply. Those actions must be defined in your AWS account.
+     *            </p>
+     */
+    public void setAuditCheckToActionsMapping(
+            java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping) {
+        this.auditCheckToActionsMapping = auditCheckToActionsMapping;
+    }
+
+    /**
+     * <p>
+     * For an audit check, specifies which mitigation actions to apply. Those
+     * actions must be defined in your AWS account.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param auditCheckToActionsMapping <p>
+     *            For an audit check, specifies which mitigation actions to
+     *            apply. Those actions must be defined in your AWS account.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskRequest withAuditCheckToActionsMapping(
+            java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping) {
+        this.auditCheckToActionsMapping = auditCheckToActionsMapping;
+        return this;
+    }
+
+    /**
+     * <p>
+     * For an audit check, specifies which mitigation actions to apply. Those
+     * actions must be defined in your AWS account.
+     * </p>
+     * <p>
+     * The method adds a new key-value pair into auditCheckToActionsMapping
+     * parameter, and returns a reference to this object so that method calls
+     * can be chained together.
+     *
+     * @param key The key of the entry to be added into
+     *            auditCheckToActionsMapping.
+     * @param value The corresponding value of the entry to be added into
+     *            auditCheckToActionsMapping.
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskRequest addauditCheckToActionsMappingEntry(String key,
+            java.util.List<String> value) {
+        if (null == this.auditCheckToActionsMapping) {
+            this.auditCheckToActionsMapping = new java.util.HashMap<String, java.util.List<String>>();
+        }
+        if (this.auditCheckToActionsMapping.containsKey(key))
+            throw new IllegalArgumentException("Duplicated keys (" + key.toString()
+                    + ") are provided.");
+        this.auditCheckToActionsMapping.put(key, value);
+        return this;
+    }
+
+    /**
+     * Removes all the entries added into auditCheckToActionsMapping.
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     */
+    public StartAuditMitigationActionsTaskRequest clearauditCheckToActionsMappingEntries() {
+        this.auditCheckToActionsMapping = null;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Each audit mitigation task must have a unique client request token. If
+     * you try to start a new task with the same token as a task that already
+     * exists, an exception occurs. If you omit this value, a unique client
+     * request token is generated automatically.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>^[a-zA-Z0-9-_]+$<br/>
+     *
+     * @return <p>
+     *         Each audit mitigation task must have a unique client request
+     *         token. If you try to start a new task with the same token as a
+     *         task that already exists, an exception occurs. If you omit this
+     *         value, a unique client request token is generated automatically.
+     *         </p>
+     */
+    public String getClientRequestToken() {
+        return clientRequestToken;
+    }
+
+    /**
+     * <p>
+     * Each audit mitigation task must have a unique client request token. If
+     * you try to start a new task with the same token as a task that already
+     * exists, an exception occurs. If you omit this value, a unique client
+     * request token is generated automatically.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>^[a-zA-Z0-9-_]+$<br/>
+     *
+     * @param clientRequestToken <p>
+     *            Each audit mitigation task must have a unique client request
+     *            token. If you try to start a new task with the same token as a
+     *            task that already exists, an exception occurs. If you omit
+     *            this value, a unique client request token is generated
+     *            automatically.
+     *            </p>
+     */
+    public void setClientRequestToken(String clientRequestToken) {
+        this.clientRequestToken = clientRequestToken;
+    }
+
+    /**
+     * <p>
+     * Each audit mitigation task must have a unique client request token. If
+     * you try to start a new task with the same token as a task that already
+     * exists, an exception occurs. If you omit this value, a unique client
+     * request token is generated automatically.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 64<br/>
+     * <b>Pattern: </b>^[a-zA-Z0-9-_]+$<br/>
+     *
+     * @param clientRequestToken <p>
+     *            Each audit mitigation task must have a unique client request
+     *            token. If you try to start a new task with the same token as a
+     *            task that already exists, an exception occurs. If you omit
+     *            this value, a unique client request token is generated
+     *            automatically.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskRequest withClientRequestToken(String clientRequestToken) {
+        this.clientRequestToken = clientRequestToken;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId() + ",");
+        if (getTarget() != null)
+            sb.append("target: " + getTarget() + ",");
+        if (getAuditCheckToActionsMapping() != null)
+            sb.append("auditCheckToActionsMapping: " + getAuditCheckToActionsMapping() + ",");
+        if (getClientRequestToken() != null)
+            sb.append("clientRequestToken: " + getClientRequestToken());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        hashCode = prime * hashCode + ((getTarget() == null) ? 0 : getTarget().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getAuditCheckToActionsMapping() == null) ? 0 : getAuditCheckToActionsMapping()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getClientRequestToken() == null) ? 0 : getClientRequestToken().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StartAuditMitigationActionsTaskRequest == false)
+            return false;
+        StartAuditMitigationActionsTaskRequest other = (StartAuditMitigationActionsTaskRequest) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        if (other.getTarget() == null ^ this.getTarget() == null)
+            return false;
+        if (other.getTarget() != null && other.getTarget().equals(this.getTarget()) == false)
+            return false;
+        if (other.getAuditCheckToActionsMapping() == null
+                ^ this.getAuditCheckToActionsMapping() == null)
+            return false;
+        if (other.getAuditCheckToActionsMapping() != null
+                && other.getAuditCheckToActionsMapping().equals(
+                        this.getAuditCheckToActionsMapping()) == false)
+            return false;
+        if (other.getClientRequestToken() == null ^ this.getClientRequestToken() == null)
+            return false;
+        if (other.getClientRequestToken() != null
+                && other.getClientRequestToken().equals(this.getClientRequestToken()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskResult.java
new file mode 100644
index 0000000000..6fdefc21f4
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartAuditMitigationActionsTaskResult.java
@@ -0,0 +1,141 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class StartAuditMitigationActionsTaskResult implements Serializable {
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task. This matches the
+     * <code>taskId</code> that you specified in the request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String taskId;
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task. This matches the
+     * <code>taskId</code> that you specified in the request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The unique identifier for the audit mitigation task. This matches
+     *         the <code>taskId</code> that you specified in the request.
+     *         </p>
+     */
+    public String getTaskId() {
+        return taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task. This matches the
+     * <code>taskId</code> that you specified in the request.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the audit mitigation task. This
+     *            matches the <code>taskId</code> that you specified in the
+     *            request.
+     *            </p>
+     */
+    public void setTaskId(String taskId) {
+        this.taskId = taskId;
+    }
+
+    /**
+     * <p>
+     * The unique identifier for the audit mitigation task. This matches the
+     * <code>taskId</code> that you specified in the request.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>1 - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param taskId <p>
+     *            The unique identifier for the audit mitigation task. This
+     *            matches the <code>taskId</code> that you specified in the
+     *            request.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public StartAuditMitigationActionsTaskResult withTaskId(String taskId) {
+        this.taskId = taskId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTaskId() != null)
+            sb.append("taskId: " + getTaskId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getTaskId() == null) ? 0 : getTaskId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof StartAuditMitigationActionsTaskResult == false)
+            return false;
+        StartAuditMitigationActionsTaskResult other = (StartAuditMitigationActionsTaskResult) obj;
+
+        if (other.getTaskId() == null ^ this.getTaskId() == null)
+            return false;
+        if (other.getTaskId() != null && other.getTaskId().equals(this.getTaskId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartOnDemandAuditTaskRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartOnDemandAuditTaskRequest.java
index 9a46963c2f..45fc672c45 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartOnDemandAuditTaskRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/StartOnDemandAuditTaskRequest.java
@@ -30,7 +30,7 @@
      * Which checks are performed during the audit. The checks you specify must
      * be enabled for your account or an exception occurs. Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.
      * </p>
@@ -42,7 +42,7 @@
      * Which checks are performed during the audit. The checks you specify must
      * be enabled for your account or an exception occurs. Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.
      * </p>
@@ -51,7 +51,7 @@
      *         Which checks are performed during the audit. The checks you
      *         specify must be enabled for your account or an exception occurs.
      *         Use <code>DescribeAccountAuditConfiguration</code> to see the
-     *         list of all checks including those that are enabled or
+     *         list of all checks, including those that are enabled or
      *         <code>UpdateAccountAuditConfiguration</code> to select which
      *         checks are enabled.
      *         </p>
@@ -65,7 +65,7 @@
      * Which checks are performed during the audit. The checks you specify must
      * be enabled for your account or an exception occurs. Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.
      * </p>
@@ -74,9 +74,9 @@
      *            Which checks are performed during the audit. The checks you
      *            specify must be enabled for your account or an exception
      *            occurs. Use <code>DescribeAccountAuditConfiguration</code> to
-     *            see the list of all checks including those that are enabled or
-     *            <code>UpdateAccountAuditConfiguration</code> to select which
-     *            checks are enabled.
+     *            see the list of all checks, including those that are enabled
+     *            or <code>UpdateAccountAuditConfiguration</code> to select
+     *            which checks are enabled.
      *            </p>
      */
     public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
@@ -93,7 +93,7 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      * Which checks are performed during the audit. The checks you specify must
      * be enabled for your account or an exception occurs. Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.
      * </p>
@@ -105,9 +105,9 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      *            Which checks are performed during the audit. The checks you
      *            specify must be enabled for your account or an exception
      *            occurs. Use <code>DescribeAccountAuditConfiguration</code> to
-     *            see the list of all checks including those that are enabled or
-     *            <code>UpdateAccountAuditConfiguration</code> to select which
-     *            checks are enabled.
+     *            see the list of all checks, including those that are enabled
+     *            or <code>UpdateAccountAuditConfiguration</code> to select
+     *            which checks are enabled.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -127,7 +127,7 @@ public StartOnDemandAuditTaskRequest withTargetCheckNames(String... targetCheckN
      * Which checks are performed during the audit. The checks you specify must
      * be enabled for your account or an exception occurs. Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.
      * </p>
@@ -139,9 +139,9 @@ public StartOnDemandAuditTaskRequest withTargetCheckNames(String... targetCheckN
      *            Which checks are performed during the audit. The checks you
      *            specify must be enabled for your account or an exception
      *            occurs. Use <code>DescribeAccountAuditConfiguration</code> to
-     *            see the list of all checks including those that are enabled or
-     *            <code>UpdateAccountAuditConfiguration</code> to select which
-     *            checks are enabled.
+     *            see the list of all checks, including those that are enabled
+     *            or <code>UpdateAccountAuditConfiguration</code> to select
+     *            which checks are enabled.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskAlreadyExistsException.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskAlreadyExistsException.java
new file mode 100644
index 0000000000..5038abb019
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskAlreadyExistsException.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import com.amazonaws.AmazonServiceException;
+
+/**
+ * <p>
+ * This exception occurs if you attempt to start a task with the same task-id as
+ * an existing task but with a different clientRequestToken.
+ * </p>
+ */
+public class TaskAlreadyExistsException extends AmazonServiceException {
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * Constructs a new TaskAlreadyExistsException with the specified error
+     * message.
+     *
+     * @param message Describes the error encountered.
+     */
+    public TaskAlreadyExistsException(String message) {
+        super(message);
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatistics.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatistics.java
index d38d5d17bc..8ab84cd0a9 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatistics.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatistics.java
@@ -53,14 +53,14 @@
 
     /**
      * <p>
-     * The number of checks that found non-compliant resources.
+     * The number of checks that found noncompliant resources.
      * </p>
      */
     private Integer nonCompliantChecks;
 
     /**
      * <p>
-     * The number of checks
+     * The number of checks.
      * </p>
      */
     private Integer failedChecks;
@@ -254,11 +254,11 @@ public TaskStatistics withCompliantChecks(Integer compliantChecks) {
 
     /**
      * <p>
-     * The number of checks that found non-compliant resources.
+     * The number of checks that found noncompliant resources.
      * </p>
      *
      * @return <p>
-     *         The number of checks that found non-compliant resources.
+     *         The number of checks that found noncompliant resources.
      *         </p>
      */
     public Integer getNonCompliantChecks() {
@@ -267,11 +267,11 @@ public Integer getNonCompliantChecks() {
 
     /**
      * <p>
-     * The number of checks that found non-compliant resources.
+     * The number of checks that found noncompliant resources.
      * </p>
      *
      * @param nonCompliantChecks <p>
-     *            The number of checks that found non-compliant resources.
+     *            The number of checks that found noncompliant resources.
      *            </p>
      */
     public void setNonCompliantChecks(Integer nonCompliantChecks) {
@@ -280,14 +280,14 @@ public void setNonCompliantChecks(Integer nonCompliantChecks) {
 
     /**
      * <p>
-     * The number of checks that found non-compliant resources.
+     * The number of checks that found noncompliant resources.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param nonCompliantChecks <p>
-     *            The number of checks that found non-compliant resources.
+     *            The number of checks that found noncompliant resources.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -299,11 +299,11 @@ public TaskStatistics withNonCompliantChecks(Integer nonCompliantChecks) {
 
     /**
      * <p>
-     * The number of checks
+     * The number of checks.
      * </p>
      *
      * @return <p>
-     *         The number of checks
+     *         The number of checks.
      *         </p>
      */
     public Integer getFailedChecks() {
@@ -312,11 +312,11 @@ public Integer getFailedChecks() {
 
     /**
      * <p>
-     * The number of checks
+     * The number of checks.
      * </p>
      *
      * @param failedChecks <p>
-     *            The number of checks
+     *            The number of checks.
      *            </p>
      */
     public void setFailedChecks(Integer failedChecks) {
@@ -325,14 +325,14 @@ public void setFailedChecks(Integer failedChecks) {
 
     /**
      * <p>
-     * The number of checks
+     * The number of checks.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param failedChecks <p>
-     *            The number of checks
+     *            The number of checks.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatisticsForAuditCheck.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatisticsForAuditCheck.java
new file mode 100644
index 0000000000..83be6bfb2f
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/TaskStatisticsForAuditCheck.java
@@ -0,0 +1,400 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Provides summary counts of how many tasks for findings are in a particular
+ * state. This information is included in the response from
+ * DescribeAuditMitigationActionsTask.
+ * </p>
+ */
+public class TaskStatisticsForAuditCheck implements Serializable {
+    /**
+     * <p>
+     * The total number of findings to which a task is being applied.
+     * </p>
+     */
+    private Long totalFindingsCount;
+
+    /**
+     * <p>
+     * The number of findings for which at least one of the actions failed when
+     * applied.
+     * </p>
+     */
+    private Long failedFindingsCount;
+
+    /**
+     * <p>
+     * The number of findings for which all mitigation actions succeeded when
+     * applied.
+     * </p>
+     */
+    private Long succeededFindingsCount;
+
+    /**
+     * <p>
+     * The number of findings skipped because of filter conditions provided in
+     * the parameters to the command.
+     * </p>
+     */
+    private Long skippedFindingsCount;
+
+    /**
+     * <p>
+     * The number of findings to which the mitigation action task was canceled
+     * when applied.
+     * </p>
+     */
+    private Long canceledFindingsCount;
+
+    /**
+     * <p>
+     * The total number of findings to which a task is being applied.
+     * </p>
+     *
+     * @return <p>
+     *         The total number of findings to which a task is being applied.
+     *         </p>
+     */
+    public Long getTotalFindingsCount() {
+        return totalFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The total number of findings to which a task is being applied.
+     * </p>
+     *
+     * @param totalFindingsCount <p>
+     *            The total number of findings to which a task is being applied.
+     *            </p>
+     */
+    public void setTotalFindingsCount(Long totalFindingsCount) {
+        this.totalFindingsCount = totalFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The total number of findings to which a task is being applied.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param totalFindingsCount <p>
+     *            The total number of findings to which a task is being applied.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TaskStatisticsForAuditCheck withTotalFindingsCount(Long totalFindingsCount) {
+        this.totalFindingsCount = totalFindingsCount;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which at least one of the actions failed when
+     * applied.
+     * </p>
+     *
+     * @return <p>
+     *         The number of findings for which at least one of the actions
+     *         failed when applied.
+     *         </p>
+     */
+    public Long getFailedFindingsCount() {
+        return failedFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which at least one of the actions failed when
+     * applied.
+     * </p>
+     *
+     * @param failedFindingsCount <p>
+     *            The number of findings for which at least one of the actions
+     *            failed when applied.
+     *            </p>
+     */
+    public void setFailedFindingsCount(Long failedFindingsCount) {
+        this.failedFindingsCount = failedFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which at least one of the actions failed when
+     * applied.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param failedFindingsCount <p>
+     *            The number of findings for which at least one of the actions
+     *            failed when applied.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TaskStatisticsForAuditCheck withFailedFindingsCount(Long failedFindingsCount) {
+        this.failedFindingsCount = failedFindingsCount;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which all mitigation actions succeeded when
+     * applied.
+     * </p>
+     *
+     * @return <p>
+     *         The number of findings for which all mitigation actions succeeded
+     *         when applied.
+     *         </p>
+     */
+    public Long getSucceededFindingsCount() {
+        return succeededFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which all mitigation actions succeeded when
+     * applied.
+     * </p>
+     *
+     * @param succeededFindingsCount <p>
+     *            The number of findings for which all mitigation actions
+     *            succeeded when applied.
+     *            </p>
+     */
+    public void setSucceededFindingsCount(Long succeededFindingsCount) {
+        this.succeededFindingsCount = succeededFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings for which all mitigation actions succeeded when
+     * applied.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param succeededFindingsCount <p>
+     *            The number of findings for which all mitigation actions
+     *            succeeded when applied.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TaskStatisticsForAuditCheck withSucceededFindingsCount(Long succeededFindingsCount) {
+        this.succeededFindingsCount = succeededFindingsCount;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The number of findings skipped because of filter conditions provided in
+     * the parameters to the command.
+     * </p>
+     *
+     * @return <p>
+     *         The number of findings skipped because of filter conditions
+     *         provided in the parameters to the command.
+     *         </p>
+     */
+    public Long getSkippedFindingsCount() {
+        return skippedFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings skipped because of filter conditions provided in
+     * the parameters to the command.
+     * </p>
+     *
+     * @param skippedFindingsCount <p>
+     *            The number of findings skipped because of filter conditions
+     *            provided in the parameters to the command.
+     *            </p>
+     */
+    public void setSkippedFindingsCount(Long skippedFindingsCount) {
+        this.skippedFindingsCount = skippedFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings skipped because of filter conditions provided in
+     * the parameters to the command.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param skippedFindingsCount <p>
+     *            The number of findings skipped because of filter conditions
+     *            provided in the parameters to the command.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TaskStatisticsForAuditCheck withSkippedFindingsCount(Long skippedFindingsCount) {
+        this.skippedFindingsCount = skippedFindingsCount;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The number of findings to which the mitigation action task was canceled
+     * when applied.
+     * </p>
+     *
+     * @return <p>
+     *         The number of findings to which the mitigation action task was
+     *         canceled when applied.
+     *         </p>
+     */
+    public Long getCanceledFindingsCount() {
+        return canceledFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings to which the mitigation action task was canceled
+     * when applied.
+     * </p>
+     *
+     * @param canceledFindingsCount <p>
+     *            The number of findings to which the mitigation action task was
+     *            canceled when applied.
+     *            </p>
+     */
+    public void setCanceledFindingsCount(Long canceledFindingsCount) {
+        this.canceledFindingsCount = canceledFindingsCount;
+    }
+
+    /**
+     * <p>
+     * The number of findings to which the mitigation action task was canceled
+     * when applied.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param canceledFindingsCount <p>
+     *            The number of findings to which the mitigation action task was
+     *            canceled when applied.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public TaskStatisticsForAuditCheck withCanceledFindingsCount(Long canceledFindingsCount) {
+        this.canceledFindingsCount = canceledFindingsCount;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getTotalFindingsCount() != null)
+            sb.append("totalFindingsCount: " + getTotalFindingsCount() + ",");
+        if (getFailedFindingsCount() != null)
+            sb.append("failedFindingsCount: " + getFailedFindingsCount() + ",");
+        if (getSucceededFindingsCount() != null)
+            sb.append("succeededFindingsCount: " + getSucceededFindingsCount() + ",");
+        if (getSkippedFindingsCount() != null)
+            sb.append("skippedFindingsCount: " + getSkippedFindingsCount() + ",");
+        if (getCanceledFindingsCount() != null)
+            sb.append("canceledFindingsCount: " + getCanceledFindingsCount());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode
+                + ((getTotalFindingsCount() == null) ? 0 : getTotalFindingsCount().hashCode());
+        hashCode = prime * hashCode
+                + ((getFailedFindingsCount() == null) ? 0 : getFailedFindingsCount().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getSucceededFindingsCount() == null) ? 0 : getSucceededFindingsCount()
+                        .hashCode());
+        hashCode = prime * hashCode
+                + ((getSkippedFindingsCount() == null) ? 0 : getSkippedFindingsCount().hashCode());
+        hashCode = prime
+                * hashCode
+                + ((getCanceledFindingsCount() == null) ? 0 : getCanceledFindingsCount().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof TaskStatisticsForAuditCheck == false)
+            return false;
+        TaskStatisticsForAuditCheck other = (TaskStatisticsForAuditCheck) obj;
+
+        if (other.getTotalFindingsCount() == null ^ this.getTotalFindingsCount() == null)
+            return false;
+        if (other.getTotalFindingsCount() != null
+                && other.getTotalFindingsCount().equals(this.getTotalFindingsCount()) == false)
+            return false;
+        if (other.getFailedFindingsCount() == null ^ this.getFailedFindingsCount() == null)
+            return false;
+        if (other.getFailedFindingsCount() != null
+                && other.getFailedFindingsCount().equals(this.getFailedFindingsCount()) == false)
+            return false;
+        if (other.getSucceededFindingsCount() == null ^ this.getSucceededFindingsCount() == null)
+            return false;
+        if (other.getSucceededFindingsCount() != null
+                && other.getSucceededFindingsCount().equals(this.getSucceededFindingsCount()) == false)
+            return false;
+        if (other.getSkippedFindingsCount() == null ^ this.getSkippedFindingsCount() == null)
+            return false;
+        if (other.getSkippedFindingsCount() != null
+                && other.getSkippedFindingsCount().equals(this.getSkippedFindingsCount()) == false)
+            return false;
+        if (other.getCanceledFindingsCount() == null ^ this.getCanceledFindingsCount() == null)
+            return false;
+        if (other.getCanceledFindingsCount() != null
+                && other.getCanceledFindingsCount().equals(this.getCanceledFindingsCount()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateAccountAuditConfigurationRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateAccountAuditConfigurationRequest.java
index 755469fdd0..cff5233842 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateAccountAuditConfigurationRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateAccountAuditConfigurationRequest.java
@@ -32,7 +32,7 @@
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
      * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * required when performing an audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -51,12 +51,12 @@
      * <p>
      * Specifies which audit checks are enabled and disabled for this account.
      * Use <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are currently enabled.
+     * checks, including those that are currently enabled.
      * </p>
      * <p>
-     * Note that some data collection may begin immediately when certain checks
-     * are enabled. When a check is disabled, any data collected so far in
-     * relation to the check is deleted.
+     * Some data collection might start immediately when certain checks are
+     * enabled. When a check is disabled, any data collected so far in relation
+     * to the check is deleted.
      * </p>
      * <p>
      * You cannot disable a check if it is used by any scheduled audit. You must
@@ -64,7 +64,7 @@
      * audit itself.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required and must specify at least one enabled check.
      * </p>
      */
@@ -74,7 +74,7 @@
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
      * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * required when performing an audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -83,7 +83,7 @@
      * @return <p>
      *         The ARN of the role that grants permission to AWS IoT to access
      *         information about your devices, policies, certificates and other
-     *         items as necessary when performing an audit.
+     *         items as required when performing an audit.
      *         </p>
      */
     public String getRoleArn() {
@@ -94,7 +94,7 @@ public String getRoleArn() {
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
      * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * required when performing an audit.
      * </p>
      * <p>
      * <b>Constraints:</b><br/>
@@ -103,7 +103,7 @@ public String getRoleArn() {
      * @param roleArn <p>
      *            The ARN of the role that grants permission to AWS IoT to
      *            access information about your devices, policies, certificates
-     *            and other items as necessary when performing an audit.
+     *            and other items as required when performing an audit.
      *            </p>
      */
     public void setRoleArn(String roleArn) {
@@ -114,7 +114,7 @@ public void setRoleArn(String roleArn) {
      * <p>
      * The ARN of the role that grants permission to AWS IoT to access
      * information about your devices, policies, certificates and other items as
-     * necessary when performing an audit.
+     * required when performing an audit.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -126,7 +126,7 @@ public void setRoleArn(String roleArn) {
      * @param roleArn <p>
      *            The ARN of the role that grants permission to AWS IoT to
      *            access information about your devices, policies, certificates
-     *            and other items as necessary when performing an audit.
+     *            and other items as required when performing an audit.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -229,12 +229,12 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      * <p>
      * Specifies which audit checks are enabled and disabled for this account.
      * Use <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are currently enabled.
+     * checks, including those that are currently enabled.
      * </p>
      * <p>
-     * Note that some data collection may begin immediately when certain checks
-     * are enabled. When a check is disabled, any data collected so far in
-     * relation to the check is deleted.
+     * Some data collection might start immediately when certain checks are
+     * enabled. When a check is disabled, any data collected so far in relation
+     * to the check is deleted.
      * </p>
      * <p>
      * You cannot disable a check if it is used by any scheduled audit. You must
@@ -242,20 +242,20 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      * audit itself.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required and must specify at least one enabled check.
      * </p>
      *
      * @return <p>
      *         Specifies which audit checks are enabled and disabled for this
      *         account. Use <code>DescribeAccountAuditConfiguration</code> to
-     *         see the list of all checks including those that are currently
+     *         see the list of all checks, including those that are currently
      *         enabled.
      *         </p>
      *         <p>
-     *         Note that some data collection may begin immediately when certain
-     *         checks are enabled. When a check is disabled, any data collected
-     *         so far in relation to the check is deleted.
+     *         Some data collection might start immediately when certain checks
+     *         are enabled. When a check is disabled, any data collected so far
+     *         in relation to the check is deleted.
      *         </p>
      *         <p>
      *         You cannot disable a check if it is used by any scheduled audit.
@@ -264,8 +264,8 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      *         </p>
      *         <p>
      *         On the first call to <code>UpdateAccountAuditConfiguration</code>
-     *         this parameter is required and must specify at least one enabled
-     *         check.
+     *         , this parameter is required and must specify at least one
+     *         enabled check.
      *         </p>
      */
     public java.util.Map<String, AuditCheckConfiguration> getAuditCheckConfigurations() {
@@ -276,12 +276,12 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      * <p>
      * Specifies which audit checks are enabled and disabled for this account.
      * Use <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are currently enabled.
+     * checks, including those that are currently enabled.
      * </p>
      * <p>
-     * Note that some data collection may begin immediately when certain checks
-     * are enabled. When a check is disabled, any data collected so far in
-     * relation to the check is deleted.
+     * Some data collection might start immediately when certain checks are
+     * enabled. When a check is disabled, any data collected so far in relation
+     * to the check is deleted.
      * </p>
      * <p>
      * You cannot disable a check if it is used by any scheduled audit. You must
@@ -289,19 +289,19 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      * audit itself.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required and must specify at least one enabled check.
      * </p>
      *
      * @param auditCheckConfigurations <p>
      *            Specifies which audit checks are enabled and disabled for this
      *            account. Use <code>DescribeAccountAuditConfiguration</code> to
-     *            see the list of all checks including those that are currently
+     *            see the list of all checks, including those that are currently
      *            enabled.
      *            </p>
      *            <p>
-     *            Note that some data collection may begin immediately when
-     *            certain checks are enabled. When a check is disabled, any data
+     *            Some data collection might start immediately when certain
+     *            checks are enabled. When a check is disabled, any data
      *            collected so far in relation to the check is deleted.
      *            </p>
      *            <p>
@@ -311,8 +311,8 @@ public UpdateAccountAuditConfigurationRequest clearauditNotificationTargetConfig
      *            </p>
      *            <p>
      *            On the first call to
-     *            <code>UpdateAccountAuditConfiguration</code> this parameter is
-     *            required and must specify at least one enabled check.
+     *            <code>UpdateAccountAuditConfiguration</code>, this parameter
+     *            is required and must specify at least one enabled check.
      *            </p>
      */
     public void setAuditCheckConfigurations(
@@ -324,12 +324,12 @@ public void setAuditCheckConfigurations(
      * <p>
      * Specifies which audit checks are enabled and disabled for this account.
      * Use <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are currently enabled.
+     * checks, including those that are currently enabled.
      * </p>
      * <p>
-     * Note that some data collection may begin immediately when certain checks
-     * are enabled. When a check is disabled, any data collected so far in
-     * relation to the check is deleted.
+     * Some data collection might start immediately when certain checks are
+     * enabled. When a check is disabled, any data collected so far in relation
+     * to the check is deleted.
      * </p>
      * <p>
      * You cannot disable a check if it is used by any scheduled audit. You must
@@ -337,7 +337,7 @@ public void setAuditCheckConfigurations(
      * audit itself.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required and must specify at least one enabled check.
      * </p>
      * <p>
@@ -347,12 +347,12 @@ public void setAuditCheckConfigurations(
      * @param auditCheckConfigurations <p>
      *            Specifies which audit checks are enabled and disabled for this
      *            account. Use <code>DescribeAccountAuditConfiguration</code> to
-     *            see the list of all checks including those that are currently
+     *            see the list of all checks, including those that are currently
      *            enabled.
      *            </p>
      *            <p>
-     *            Note that some data collection may begin immediately when
-     *            certain checks are enabled. When a check is disabled, any data
+     *            Some data collection might start immediately when certain
+     *            checks are enabled. When a check is disabled, any data
      *            collected so far in relation to the check is deleted.
      *            </p>
      *            <p>
@@ -362,8 +362,8 @@ public void setAuditCheckConfigurations(
      *            </p>
      *            <p>
      *            On the first call to
-     *            <code>UpdateAccountAuditConfiguration</code> this parameter is
-     *            required and must specify at least one enabled check.
+     *            <code>UpdateAccountAuditConfiguration</code>, this parameter
+     *            is required and must specify at least one enabled check.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -378,12 +378,12 @@ public UpdateAccountAuditConfigurationRequest withAuditCheckConfigurations(
      * <p>
      * Specifies which audit checks are enabled and disabled for this account.
      * Use <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are currently enabled.
+     * checks, including those that are currently enabled.
      * </p>
      * <p>
-     * Note that some data collection may begin immediately when certain checks
-     * are enabled. When a check is disabled, any data collected so far in
-     * relation to the check is deleted.
+     * Some data collection might start immediately when certain checks are
+     * enabled. When a check is disabled, any data collected so far in relation
+     * to the check is deleted.
      * </p>
      * <p>
      * You cannot disable a check if it is used by any scheduled audit. You must
@@ -391,7 +391,7 @@ public UpdateAccountAuditConfigurationRequest withAuditCheckConfigurations(
      * audit itself.
      * </p>
      * <p>
-     * On the first call to <code>UpdateAccountAuditConfiguration</code> this
+     * On the first call to <code>UpdateAccountAuditConfiguration</code>, this
      * parameter is required and must specify at least one enabled check.
      * </p>
      * <p>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateParams.java
new file mode 100644
index 0000000000..b2b7cdbd25
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateParams.java
@@ -0,0 +1,188 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters to define a mitigation action that changes the state of the CA
+ * certificate to inactive.
+ * </p>
+ */
+public class UpdateCACertificateParams implements Serializable {
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     */
+    private String action;
+
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @return <p>
+     *         The action that you want to apply to the CA cerrtificate. The
+     *         only supported value is <code>DEACTIVATE</code>.
+     *         </p>
+     * @see CACertificateUpdateAction
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the CA cerrtificate. The
+     *            only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @see CACertificateUpdateAction
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the CA cerrtificate. The
+     *            only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see CACertificateUpdateAction
+     */
+    public UpdateCACertificateParams withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the CA cerrtificate. The
+     *            only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @see CACertificateUpdateAction
+     */
+    public void setAction(CACertificateUpdateAction action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the CA cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the CA cerrtificate. The
+     *            only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see CACertificateUpdateAction
+     */
+    public UpdateCACertificateParams withAction(CACertificateUpdateAction action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("action: " + getAction());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateCACertificateParams == false)
+            return false;
+        UpdateCACertificateParams other = (UpdateCACertificateParams) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateRequest.java
index ae8d4317aa..68153c8011 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateCACertificateRequest.java
@@ -70,7 +70,7 @@
 
     /**
      * <p>
-     * If true, remove auto registration.
+     * If true, removes auto registration.
      * </p>
      */
     private Boolean removeAutoRegistration;
@@ -424,11 +424,11 @@ public UpdateCACertificateRequest withRegistrationConfig(RegistrationConfig regi
 
     /**
      * <p>
-     * If true, remove auto registration.
+     * If true, removes auto registration.
      * </p>
      *
      * @return <p>
-     *         If true, remove auto registration.
+     *         If true, removes auto registration.
      *         </p>
      */
     public Boolean isRemoveAutoRegistration() {
@@ -437,11 +437,11 @@ public Boolean isRemoveAutoRegistration() {
 
     /**
      * <p>
-     * If true, remove auto registration.
+     * If true, removes auto registration.
      * </p>
      *
      * @return <p>
-     *         If true, remove auto registration.
+     *         If true, removes auto registration.
      *         </p>
      */
     public Boolean getRemoveAutoRegistration() {
@@ -450,11 +450,11 @@ public Boolean getRemoveAutoRegistration() {
 
     /**
      * <p>
-     * If true, remove auto registration.
+     * If true, removes auto registration.
      * </p>
      *
      * @param removeAutoRegistration <p>
-     *            If true, remove auto registration.
+     *            If true, removes auto registration.
      *            </p>
      */
     public void setRemoveAutoRegistration(Boolean removeAutoRegistration) {
@@ -463,14 +463,14 @@ public void setRemoveAutoRegistration(Boolean removeAutoRegistration) {
 
     /**
      * <p>
-     * If true, remove auto registration.
+     * If true, removes auto registration.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
      * together.
      *
      * @param removeAutoRegistration <p>
-     *            If true, remove auto registration.
+     *            If true, removes auto registration.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateDeviceCertificateParams.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateDeviceCertificateParams.java
new file mode 100644
index 0000000000..998956f409
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateDeviceCertificateParams.java
@@ -0,0 +1,188 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * Parameters to define a mitigation action that changes the state of the device
+ * certificate to inactive.
+ * </p>
+ */
+public class UpdateDeviceCertificateParams implements Serializable {
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     */
+    private String action;
+
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @return <p>
+     *         The action that you want to apply to the device cerrtificate. The
+     *         only supported value is <code>DEACTIVATE</code>.
+     *         </p>
+     * @see DeviceCertificateUpdateAction
+     */
+    public String getAction() {
+        return action;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the device cerrtificate.
+     *            The only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @see DeviceCertificateUpdateAction
+     */
+    public void setAction(String action) {
+        this.action = action;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the device cerrtificate.
+     *            The only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeviceCertificateUpdateAction
+     */
+    public UpdateDeviceCertificateParams withAction(String action) {
+        this.action = action;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the device cerrtificate.
+     *            The only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @see DeviceCertificateUpdateAction
+     */
+    public void setAction(DeviceCertificateUpdateAction action) {
+        this.action = action.toString();
+    }
+
+    /**
+     * <p>
+     * The action that you want to apply to the device cerrtificate. The only
+     * supported value is <code>DEACTIVATE</code>.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Allowed Values: </b>DEACTIVATE
+     *
+     * @param action <p>
+     *            The action that you want to apply to the device cerrtificate.
+     *            The only supported value is <code>DEACTIVATE</code>.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     * @see DeviceCertificateUpdateAction
+     */
+    public UpdateDeviceCertificateParams withAction(DeviceCertificateUpdateAction action) {
+        this.action = action.toString();
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getAction() != null)
+            sb.append("action: " + getAction());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getAction() == null) ? 0 : getAction().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateDeviceCertificateParams == false)
+            return false;
+        UpdateDeviceCertificateParams other = (UpdateDeviceCertificateParams) obj;
+
+        if (other.getAction() == null ^ this.getAction() == null)
+            return false;
+        if (other.getAction() != null && other.getAction().equals(this.getAction()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionRequest.java
new file mode 100644
index 0000000000..12779c73db
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionRequest.java
@@ -0,0 +1,292 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+import com.amazonaws.AmazonWebServiceRequest;
+
+/**
+ * <p>
+ * Updates the definition for the specified mitigation action.
+ * </p>
+ */
+public class UpdateMitigationActionRequest extends AmazonWebServiceRequest implements Serializable {
+    /**
+     * <p>
+     * The friendly name for the mitigation action. You can't change the name by
+     * using <code>UpdateMitigationAction</code>. Instead, you must delete and
+     * re-create the mitigation action with the new name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     */
+    private String actionName;
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     */
+    private String roleArn;
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     */
+    private MitigationActionParams actionParams;
+
+    /**
+     * <p>
+     * The friendly name for the mitigation action. You can't change the name by
+     * using <code>UpdateMitigationAction</code>. Instead, you must delete and
+     * re-create the mitigation action with the new name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @return <p>
+     *         The friendly name for the mitigation action. You can't change the
+     *         name by using <code>UpdateMitigationAction</code>. Instead, you
+     *         must delete and re-create the mitigation action with the new
+     *         name.
+     *         </p>
+     */
+    public String getActionName() {
+        return actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name for the mitigation action. You can't change the name by
+     * using <code>UpdateMitigationAction</code>. Instead, you must delete and
+     * re-create the mitigation action with the new name.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name for the mitigation action. You can't change
+     *            the name by using <code>UpdateMitigationAction</code>.
+     *            Instead, you must delete and re-create the mitigation action
+     *            with the new name.
+     *            </p>
+     */
+    public void setActionName(String actionName) {
+        this.actionName = actionName;
+    }
+
+    /**
+     * <p>
+     * The friendly name for the mitigation action. You can't change the name by
+     * using <code>UpdateMitigationAction</code>. Instead, you must delete and
+     * re-create the mitigation action with the new name.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b> - 128<br/>
+     * <b>Pattern: </b>[a-zA-Z0-9_-]+<br/>
+     *
+     * @param actionName <p>
+     *            The friendly name for the mitigation action. You can't change
+     *            the name by using <code>UpdateMitigationAction</code>.
+     *            Instead, you must delete and re-create the mitigation action
+     *            with the new name.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateMitigationActionRequest withActionName(String actionName) {
+        this.actionName = actionName;
+        return this;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @return <p>
+     *         The ARN of the IAM role that is used to apply the mitigation
+     *         action.
+     *         </p>
+     */
+    public String getRoleArn() {
+        return roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role that is used to apply the mitigation
+     *            action.
+     *            </p>
+     */
+    public void setRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+    }
+
+    /**
+     * <p>
+     * The ARN of the IAM role that is used to apply the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     * <p>
+     * <b>Constraints:</b><br/>
+     * <b>Length: </b>20 - 2048<br/>
+     *
+     * @param roleArn <p>
+     *            The ARN of the IAM role that is used to apply the mitigation
+     *            action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateMitigationActionRequest withRoleArn(String roleArn) {
+        this.roleArn = roleArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     *
+     * @return <p>
+     *         Defines the type of action and the parameters for that action.
+     *         </p>
+     */
+    public MitigationActionParams getActionParams() {
+        return actionParams;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     *
+     * @param actionParams <p>
+     *            Defines the type of action and the parameters for that action.
+     *            </p>
+     */
+    public void setActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+    }
+
+    /**
+     * <p>
+     * Defines the type of action and the parameters for that action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionParams <p>
+     *            Defines the type of action and the parameters for that action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateMitigationActionRequest withActionParams(MitigationActionParams actionParams) {
+        this.actionParams = actionParams;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionName() != null)
+            sb.append("actionName: " + getActionName() + ",");
+        if (getRoleArn() != null)
+            sb.append("roleArn: " + getRoleArn() + ",");
+        if (getActionParams() != null)
+            sb.append("actionParams: " + getActionParams());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionName() == null) ? 0 : getActionName().hashCode());
+        hashCode = prime * hashCode + ((getRoleArn() == null) ? 0 : getRoleArn().hashCode());
+        hashCode = prime * hashCode
+                + ((getActionParams() == null) ? 0 : getActionParams().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateMitigationActionRequest == false)
+            return false;
+        UpdateMitigationActionRequest other = (UpdateMitigationActionRequest) obj;
+
+        if (other.getActionName() == null ^ this.getActionName() == null)
+            return false;
+        if (other.getActionName() != null
+                && other.getActionName().equals(this.getActionName()) == false)
+            return false;
+        if (other.getRoleArn() == null ^ this.getRoleArn() == null)
+            return false;
+        if (other.getRoleArn() != null && other.getRoleArn().equals(this.getRoleArn()) == false)
+            return false;
+        if (other.getActionParams() == null ^ this.getActionParams() == null)
+            return false;
+        if (other.getActionParams() != null
+                && other.getActionParams().equals(this.getActionParams()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionResult.java
new file mode 100644
index 0000000000..92be6f19d6
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateMitigationActionResult.java
@@ -0,0 +1,176 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model;
+
+import java.io.Serializable;
+
+public class UpdateMitigationActionResult implements Serializable {
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     */
+    private String actionArn;
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     */
+    private String actionId;
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         The ARN for the new mitigation action.
+     *         </p>
+     */
+    public String getActionArn() {
+        return actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     *
+     * @param actionArn <p>
+     *            The ARN for the new mitigation action.
+     *            </p>
+     */
+    public void setActionArn(String actionArn) {
+        this.actionArn = actionArn;
+    }
+
+    /**
+     * <p>
+     * The ARN for the new mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionArn <p>
+     *            The ARN for the new mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateMitigationActionResult withActionArn(String actionArn) {
+        this.actionArn = actionArn;
+        return this;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     *
+     * @return <p>
+     *         A unique identifier for the mitigation action.
+     *         </p>
+     */
+    public String getActionId() {
+        return actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     *
+     * @param actionId <p>
+     *            A unique identifier for the mitigation action.
+     *            </p>
+     */
+    public void setActionId(String actionId) {
+        this.actionId = actionId;
+    }
+
+    /**
+     * <p>
+     * A unique identifier for the mitigation action.
+     * </p>
+     * <p>
+     * Returns a reference to this object so that method calls can be chained
+     * together.
+     *
+     * @param actionId <p>
+     *            A unique identifier for the mitigation action.
+     *            </p>
+     * @return A reference to this updated object so that method calls can be
+     *         chained together.
+     */
+    public UpdateMitigationActionResult withActionId(String actionId) {
+        this.actionId = actionId;
+        return this;
+    }
+
+    /**
+     * Returns a string representation of this object; useful for testing and
+     * debugging.
+     *
+     * @return A string representation of this object.
+     * @see java.lang.Object#toString()
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        if (getActionArn() != null)
+            sb.append("actionArn: " + getActionArn() + ",");
+        if (getActionId() != null)
+            sb.append("actionId: " + getActionId());
+        sb.append("}");
+        return sb.toString();
+    }
+
+    @Override
+    public int hashCode() {
+        final int prime = 31;
+        int hashCode = 1;
+
+        hashCode = prime * hashCode + ((getActionArn() == null) ? 0 : getActionArn().hashCode());
+        hashCode = prime * hashCode + ((getActionId() == null) ? 0 : getActionId().hashCode());
+        return hashCode;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        if (this == obj)
+            return true;
+        if (obj == null)
+            return false;
+
+        if (obj instanceof UpdateMitigationActionResult == false)
+            return false;
+        UpdateMitigationActionResult other = (UpdateMitigationActionResult) obj;
+
+        if (other.getActionArn() == null ^ this.getActionArn() == null)
+            return false;
+        if (other.getActionArn() != null
+                && other.getActionArn().equals(this.getActionArn()) == false)
+            return false;
+        if (other.getActionId() == null ^ this.getActionId() == null)
+            return false;
+        if (other.getActionId() != null && other.getActionId().equals(this.getActionId()) == false)
+            return false;
+        return true;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateScheduledAuditRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateScheduledAuditRequest.java
index 5ded56bc4e..23a53e1a45 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateScheduledAuditRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateScheduledAuditRequest.java
@@ -21,7 +21,7 @@
 
 /**
  * <p>
- * Updates a scheduled audit, including what checks are performed and how often
+ * Updates a scheduled audit, including which checks are performed and how often
  * the audit takes place.
  * </p>
  */
@@ -29,7 +29,7 @@
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -55,7 +55,7 @@
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -69,7 +69,7 @@
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -90,7 +90,7 @@
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -99,8 +99,8 @@
      *
      * @return <p>
      *         How often the scheduled audit takes place. Can be one of "DAILY",
-     *         "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each
-     *         audit is determined by the system.
+     *         "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit
+     *         is determined by the system.
      *         </p>
      * @see AuditFrequency
      */
@@ -111,7 +111,7 @@ public String getFrequency() {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -120,8 +120,8 @@ public String getFrequency() {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -132,7 +132,7 @@ public void setFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -144,8 +144,8 @@ public void setFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -159,7 +159,7 @@ public UpdateScheduledAuditRequest withFrequency(String frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -168,8 +168,8 @@ public UpdateScheduledAuditRequest withFrequency(String frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @see AuditFrequency
      */
@@ -180,7 +180,7 @@ public void setFrequency(AuditFrequency frequency) {
     /**
      * <p>
      * How often the scheduled audit takes place. Can be one of "DAILY",
-     * "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is
+     * "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is
      * determined by the system.
      * </p>
      * <p>
@@ -192,8 +192,8 @@ public void setFrequency(AuditFrequency frequency) {
      *
      * @param frequency <p>
      *            How often the scheduled audit takes place. Can be one of
-     *            "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start
-     *            time of each audit is determined by the system.
+     *            "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of
+     *            each audit is determined by the system.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -285,7 +285,7 @@ public UpdateScheduledAuditRequest withDayOfMonth(String dayOfMonth) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -294,9 +294,9 @@ public UpdateScheduledAuditRequest withDayOfMonth(String dayOfMonth) {
      *
      * @return <p>
      *         The day of the week on which the scheduled audit takes place. Can
-     *         be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This
-     *         field is required if the "frequency" parameter is set to "WEEKLY"
-     *         or "BIWEEKLY".
+     *         be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".
+     *         This field is required if the "frequency" parameter is set to
+     *         "WEEKLY" or "BIWEEKLY".
      *         </p>
      * @see DayOfWeek
      */
@@ -307,7 +307,7 @@ public String getDayOfWeek() {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -316,7 +316,7 @@ public String getDayOfWeek() {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -329,7 +329,7 @@ public void setDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -341,7 +341,7 @@ public void setDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -357,7 +357,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(String dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -366,7 +366,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(String dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -379,7 +379,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
     /**
      * <p>
      * The day of the week on which the scheduled audit takes place. Can be one
-     * of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is
+     * of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is
      * required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".
      * </p>
      * <p>
@@ -391,7 +391,7 @@ public void setDayOfWeek(DayOfWeek dayOfWeek) {
      *
      * @param dayOfWeek <p>
      *            The day of the week on which the scheduled audit takes place.
-     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or
+     *            Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or
      *            "SAT". This field is required if the "frequency" parameter is
      *            set to "WEEKLY" or "BIWEEKLY".
      *            </p>
@@ -409,7 +409,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -418,7 +418,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      *         Which checks are performed during the scheduled audit. Checks
      *         must be enabled for your account. (Use
      *         <code>DescribeAccountAuditConfiguration</code> to see the list of
-     *         all checks including those that are enabled or
+     *         all checks, including those that are enabled or use
      *         <code>UpdateAccountAuditConfiguration</code> to select which
      *         checks are enabled.)
      *         </p>
@@ -432,7 +432,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -441,7 +441,7 @@ public UpdateScheduledAuditRequest withDayOfWeek(DayOfWeek dayOfWeek) {
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -460,7 +460,7 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -472,7 +472,7 @@ public void setTargetCheckNames(java.util.Collection<String> targetCheckNames) {
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
@@ -494,7 +494,7 @@ public UpdateScheduledAuditRequest withTargetCheckNames(String... targetCheckNam
      * Which checks are performed during the scheduled audit. Checks must be
      * enabled for your account. (Use
      * <code>DescribeAccountAuditConfiguration</code> to see the list of all
-     * checks including those that are enabled or
+     * checks, including those that are enabled or use
      * <code>UpdateAccountAuditConfiguration</code> to select which checks are
      * enabled.)
      * </p>
@@ -506,7 +506,7 @@ public UpdateScheduledAuditRequest withTargetCheckNames(String... targetCheckNam
      *            Which checks are performed during the scheduled audit. Checks
      *            must be enabled for your account. (Use
      *            <code>DescribeAccountAuditConfiguration</code> to see the list
-     *            of all checks including those that are enabled or
+     *            of all checks, including those that are enabled or use
      *            <code>UpdateAccountAuditConfiguration</code> to select which
      *            checks are enabled.)
      *            </p>
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileRequest.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileRequest.java
index fb0c376b10..6e1bd82a31 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileRequest.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileRequest.java
@@ -65,7 +65,7 @@
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      */
@@ -75,7 +75,7 @@
      * <p>
      * If true, delete all <code>behaviors</code> defined for this security
      * profile. If any <code>behaviors</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      */
     private Boolean deleteBehaviors;
@@ -84,7 +84,7 @@
      * <p>
      * If true, delete all <code>alertTargets</code> defined for this security
      * profile. If any <code>alertTargets</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      */
     private Boolean deleteAlertTargets;
@@ -93,7 +93,7 @@
      * <p>
      * If true, delete all <code>additionalMetricsToRetain</code> defined for
      * this security profile. If any <code>additionalMetricsToRetain</code> are
-     * defined in the current invocation an exception occurs.
+     * defined in the current invocation, an exception occurs.
      * </p>
      */
     private Boolean deleteAdditionalMetricsToRetain;
@@ -102,7 +102,7 @@
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      */
@@ -394,14 +394,14 @@ public UpdateSecurityProfileRequest clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @return <p>
      *         A list of metrics whose data is retained (stored). By default,
      *         data is retained for any metric used in the profile's
-     *         <code>behaviors</code> but it is also retained for any metric
+     *         <code>behaviors</code>, but it is also retained for any metric
      *         specified here.
      *         </p>
      */
@@ -412,14 +412,14 @@ public UpdateSecurityProfileRequest clearalertTargetsEntries() {
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      *
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      */
@@ -435,7 +435,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -445,7 +445,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -466,7 +466,7 @@ public UpdateSecurityProfileRequest withAdditionalMetricsToRetain(
     /**
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
-     * retained for any metric used in the profile's <code>behaviors</code> but
+     * retained for any metric used in the profile's <code>behaviors</code>, but
      * it is also retained for any metric specified here.
      * </p>
      * <p>
@@ -476,7 +476,7 @@ public UpdateSecurityProfileRequest withAdditionalMetricsToRetain(
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -492,13 +492,13 @@ public UpdateSecurityProfileRequest withAdditionalMetricsToRetain(
      * <p>
      * If true, delete all <code>behaviors</code> defined for this security
      * profile. If any <code>behaviors</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>behaviors</code> defined for this
      *         security profile. If any <code>behaviors</code> are defined in
-     *         the current invocation an exception occurs.
+     *         the current invocation, an exception occurs.
      *         </p>
      */
     public Boolean isDeleteBehaviors() {
@@ -509,13 +509,13 @@ public Boolean isDeleteBehaviors() {
      * <p>
      * If true, delete all <code>behaviors</code> defined for this security
      * profile. If any <code>behaviors</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>behaviors</code> defined for this
      *         security profile. If any <code>behaviors</code> are defined in
-     *         the current invocation an exception occurs.
+     *         the current invocation, an exception occurs.
      *         </p>
      */
     public Boolean getDeleteBehaviors() {
@@ -526,13 +526,13 @@ public Boolean getDeleteBehaviors() {
      * <p>
      * If true, delete all <code>behaviors</code> defined for this security
      * profile. If any <code>behaviors</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @param deleteBehaviors <p>
      *            If true, delete all <code>behaviors</code> defined for this
      *            security profile. If any <code>behaviors</code> are defined in
-     *            the current invocation an exception occurs.
+     *            the current invocation, an exception occurs.
      *            </p>
      */
     public void setDeleteBehaviors(Boolean deleteBehaviors) {
@@ -543,7 +543,7 @@ public void setDeleteBehaviors(Boolean deleteBehaviors) {
      * <p>
      * If true, delete all <code>behaviors</code> defined for this security
      * profile. If any <code>behaviors</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -552,7 +552,7 @@ public void setDeleteBehaviors(Boolean deleteBehaviors) {
      * @param deleteBehaviors <p>
      *            If true, delete all <code>behaviors</code> defined for this
      *            security profile. If any <code>behaviors</code> are defined in
-     *            the current invocation an exception occurs.
+     *            the current invocation, an exception occurs.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -566,13 +566,13 @@ public UpdateSecurityProfileRequest withDeleteBehaviors(Boolean deleteBehaviors)
      * <p>
      * If true, delete all <code>alertTargets</code> defined for this security
      * profile. If any <code>alertTargets</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>alertTargets</code> defined for this
      *         security profile. If any <code>alertTargets</code> are defined in
-     *         the current invocation an exception occurs.
+     *         the current invocation, an exception occurs.
      *         </p>
      */
     public Boolean isDeleteAlertTargets() {
@@ -583,13 +583,13 @@ public Boolean isDeleteAlertTargets() {
      * <p>
      * If true, delete all <code>alertTargets</code> defined for this security
      * profile. If any <code>alertTargets</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>alertTargets</code> defined for this
      *         security profile. If any <code>alertTargets</code> are defined in
-     *         the current invocation an exception occurs.
+     *         the current invocation, an exception occurs.
      *         </p>
      */
     public Boolean getDeleteAlertTargets() {
@@ -600,13 +600,13 @@ public Boolean getDeleteAlertTargets() {
      * <p>
      * If true, delete all <code>alertTargets</code> defined for this security
      * profile. If any <code>alertTargets</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      *
      * @param deleteAlertTargets <p>
      *            If true, delete all <code>alertTargets</code> defined for this
      *            security profile. If any <code>alertTargets</code> are defined
-     *            in the current invocation an exception occurs.
+     *            in the current invocation, an exception occurs.
      *            </p>
      */
     public void setDeleteAlertTargets(Boolean deleteAlertTargets) {
@@ -617,7 +617,7 @@ public void setDeleteAlertTargets(Boolean deleteAlertTargets) {
      * <p>
      * If true, delete all <code>alertTargets</code> defined for this security
      * profile. If any <code>alertTargets</code> are defined in the current
-     * invocation an exception occurs.
+     * invocation, an exception occurs.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -626,7 +626,7 @@ public void setDeleteAlertTargets(Boolean deleteAlertTargets) {
      * @param deleteAlertTargets <p>
      *            If true, delete all <code>alertTargets</code> defined for this
      *            security profile. If any <code>alertTargets</code> are defined
-     *            in the current invocation an exception occurs.
+     *            in the current invocation, an exception occurs.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -640,14 +640,14 @@ public UpdateSecurityProfileRequest withDeleteAlertTargets(Boolean deleteAlertTa
      * <p>
      * If true, delete all <code>additionalMetricsToRetain</code> defined for
      * this security profile. If any <code>additionalMetricsToRetain</code> are
-     * defined in the current invocation an exception occurs.
+     * defined in the current invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>additionalMetricsToRetain</code>
      *         defined for this security profile. If any
      *         <code>additionalMetricsToRetain</code> are defined in the current
-     *         invocation an exception occurs.
+     *         invocation, an exception occurs.
      *         </p>
      */
     public Boolean isDeleteAdditionalMetricsToRetain() {
@@ -658,14 +658,14 @@ public Boolean isDeleteAdditionalMetricsToRetain() {
      * <p>
      * If true, delete all <code>additionalMetricsToRetain</code> defined for
      * this security profile. If any <code>additionalMetricsToRetain</code> are
-     * defined in the current invocation an exception occurs.
+     * defined in the current invocation, an exception occurs.
      * </p>
      *
      * @return <p>
      *         If true, delete all <code>additionalMetricsToRetain</code>
      *         defined for this security profile. If any
      *         <code>additionalMetricsToRetain</code> are defined in the current
-     *         invocation an exception occurs.
+     *         invocation, an exception occurs.
      *         </p>
      */
     public Boolean getDeleteAdditionalMetricsToRetain() {
@@ -676,14 +676,14 @@ public Boolean getDeleteAdditionalMetricsToRetain() {
      * <p>
      * If true, delete all <code>additionalMetricsToRetain</code> defined for
      * this security profile. If any <code>additionalMetricsToRetain</code> are
-     * defined in the current invocation an exception occurs.
+     * defined in the current invocation, an exception occurs.
      * </p>
      *
      * @param deleteAdditionalMetricsToRetain <p>
      *            If true, delete all <code>additionalMetricsToRetain</code>
      *            defined for this security profile. If any
      *            <code>additionalMetricsToRetain</code> are defined in the
-     *            current invocation an exception occurs.
+     *            current invocation, an exception occurs.
      *            </p>
      */
     public void setDeleteAdditionalMetricsToRetain(Boolean deleteAdditionalMetricsToRetain) {
@@ -694,7 +694,7 @@ public void setDeleteAdditionalMetricsToRetain(Boolean deleteAdditionalMetricsTo
      * <p>
      * If true, delete all <code>additionalMetricsToRetain</code> defined for
      * this security profile. If any <code>additionalMetricsToRetain</code> are
-     * defined in the current invocation an exception occurs.
+     * defined in the current invocation, an exception occurs.
      * </p>
      * <p>
      * Returns a reference to this object so that method calls can be chained
@@ -704,7 +704,7 @@ public void setDeleteAdditionalMetricsToRetain(Boolean deleteAdditionalMetricsTo
      *            If true, delete all <code>additionalMetricsToRetain</code>
      *            defined for this security profile. If any
      *            <code>additionalMetricsToRetain</code> are defined in the
-     *            current invocation an exception occurs.
+     *            current invocation, an exception occurs.
      *            </p>
      * @return A reference to this updated object so that method calls can be
      *         chained together.
@@ -719,14 +719,14 @@ public UpdateSecurityProfileRequest withDeleteAdditionalMetricsToRetain(
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      *
      * @return <p>
      *         The expected version of the security profile. A new version is
      *         generated whenever the security profile is updated. If you
-     *         specify a value that is different than the actual version, a
+     *         specify a value that is different from the actual version, a
      *         <code>VersionConflictException</code> is thrown.
      *         </p>
      */
@@ -738,14 +738,14 @@ public Long getExpectedVersion() {
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      *
      * @param expectedVersion <p>
      *            The expected version of the security profile. A new version is
      *            generated whenever the security profile is updated. If you
-     *            specify a value that is different than the actual version, a
+     *            specify a value that is different from the actual version, a
      *            <code>VersionConflictException</code> is thrown.
      *            </p>
      */
@@ -757,7 +757,7 @@ public void setExpectedVersion(Long expectedVersion) {
      * <p>
      * The expected version of the security profile. A new version is generated
      * whenever the security profile is updated. If you specify a value that is
-     * different than the actual version, a
+     * different from the actual version, a
      * <code>VersionConflictException</code> is thrown.
      * </p>
      * <p>
@@ -767,7 +767,7 @@ public void setExpectedVersion(Long expectedVersion) {
      * @param expectedVersion <p>
      *            The expected version of the security profile. A new version is
      *            generated whenever the security profile is updated. If you
-     *            specify a value that is different than the actual version, a
+     *            specify a value that is different from the actual version, a
      *            <code>VersionConflictException</code> is thrown.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileResult.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileResult.java
index d785e41a38..a04ff8b1c1 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileResult.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/UpdateSecurityProfileResult.java
@@ -66,7 +66,7 @@
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
      * retained for any metric used in the security profile's
-     * <code>behaviors</code> but it is also retained for any metric specified
+     * <code>behaviors</code>, but it is also retained for any metric specified
      * here.
      * </p>
      */
@@ -425,14 +425,14 @@ public UpdateSecurityProfileResult clearalertTargetsEntries() {
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
      * retained for any metric used in the security profile's
-     * <code>behaviors</code> but it is also retained for any metric specified
+     * <code>behaviors</code>, but it is also retained for any metric specified
      * here.
      * </p>
      *
      * @return <p>
      *         A list of metrics whose data is retained (stored). By default,
      *         data is retained for any metric used in the security profile's
-     *         <code>behaviors</code> but it is also retained for any metric
+     *         <code>behaviors</code>, but it is also retained for any metric
      *         specified here.
      *         </p>
      */
@@ -444,14 +444,14 @@ public UpdateSecurityProfileResult clearalertTargetsEntries() {
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
      * retained for any metric used in the security profile's
-     * <code>behaviors</code> but it is also retained for any metric specified
+     * <code>behaviors</code>, but it is also retained for any metric specified
      * here.
      * </p>
      *
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the security profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      */
@@ -468,7 +468,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
      * retained for any metric used in the security profile's
-     * <code>behaviors</code> but it is also retained for any metric specified
+     * <code>behaviors</code>, but it is also retained for any metric specified
      * here.
      * </p>
      * <p>
@@ -478,7 +478,7 @@ public void setAdditionalMetricsToRetain(java.util.Collection<String> additional
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the security profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
@@ -500,7 +500,7 @@ public UpdateSecurityProfileResult withAdditionalMetricsToRetain(
      * <p>
      * A list of metrics whose data is retained (stored). By default, data is
      * retained for any metric used in the security profile's
-     * <code>behaviors</code> but it is also retained for any metric specified
+     * <code>behaviors</code>, but it is also retained for any metric specified
      * here.
      * </p>
      * <p>
@@ -510,7 +510,7 @@ public UpdateSecurityProfileResult withAdditionalMetricsToRetain(
      * @param additionalMetricsToRetain <p>
      *            A list of metrics whose data is retained (stored). By default,
      *            data is retained for any metric used in the security profile's
-     *            <code>behaviors</code> but it is also retained for any metric
+     *            <code>behaviors</code>, but it is also retained for any metric
      *            specified here.
      *            </p>
      * @return A reference to this updated object so that method calls can be
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ViolationEvent.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ViolationEvent.java
index 140ad6aa3e..0d1d790b53 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ViolationEvent.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/ViolationEvent.java
@@ -41,7 +41,6 @@
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      */
     private String thingName;
 
@@ -151,7 +150,6 @@ public ViolationEvent withViolationId(String violationId) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @return <p>
      *         The name of the thing responsible for the violation event.
@@ -168,7 +166,6 @@ public String getThingName() {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing responsible for the violation event.
@@ -188,7 +185,6 @@ public void setThingName(String thingName) {
      * <p>
      * <b>Constraints:</b><br/>
      * <b>Length: </b>1 - 128<br/>
-     * <b>Pattern: </b>[a-zA-Z0-9:_-]+<br/>
      *
      * @param thingName <p>
      *            The name of the thing responsible for the violation event.
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonMarshaller.java
new file mode 100644
index 0000000000..9dedaac3f0
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonMarshaller.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AddThingsToThingGroupParams
+ */
+class AddThingsToThingGroupParamsJsonMarshaller {
+
+    public void marshall(AddThingsToThingGroupParams addThingsToThingGroupParams,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (addThingsToThingGroupParams.getThingGroupNames() != null) {
+            java.util.List<String> thingGroupNames = addThingsToThingGroupParams
+                    .getThingGroupNames();
+            jsonWriter.name("thingGroupNames");
+            jsonWriter.beginArray();
+            for (String thingGroupNamesItem : thingGroupNames) {
+                if (thingGroupNamesItem != null) {
+                    jsonWriter.value(thingGroupNamesItem);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (addThingsToThingGroupParams.getOverrideDynamicGroups() != null) {
+            Boolean overrideDynamicGroups = addThingsToThingGroupParams.getOverrideDynamicGroups();
+            jsonWriter.name("overrideDynamicGroups");
+            jsonWriter.value(overrideDynamicGroups);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AddThingsToThingGroupParamsJsonMarshaller instance;
+
+    public static AddThingsToThingGroupParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AddThingsToThingGroupParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..09138acd86
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AddThingsToThingGroupParamsJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AddThingsToThingGroupParams
+ */
+class AddThingsToThingGroupParamsJsonUnmarshaller implements
+        Unmarshaller<AddThingsToThingGroupParams, JsonUnmarshallerContext> {
+
+    public AddThingsToThingGroupParams unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AddThingsToThingGroupParams addThingsToThingGroupParams = new AddThingsToThingGroupParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("thingGroupNames")) {
+                addThingsToThingGroupParams.setThingGroupNames(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("overrideDynamicGroups")) {
+                addThingsToThingGroupParams.setOverrideDynamicGroups(BooleanJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return addThingsToThingGroupParams;
+    }
+
+    private static AddThingsToThingGroupParamsJsonUnmarshaller instance;
+
+    public static AddThingsToThingGroupParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AddThingsToThingGroupParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonMarshaller.java
index 0d0f85ae83..778082208c 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonMarshaller.java
@@ -25,6 +25,11 @@
 
     public void marshall(AuditFinding auditFinding, AwsJsonWriter jsonWriter) throws Exception {
         jsonWriter.beginObject();
+        if (auditFinding.getFindingId() != null) {
+            String findingId = auditFinding.getFindingId();
+            jsonWriter.name("findingId");
+            jsonWriter.value(findingId);
+        }
         if (auditFinding.getTaskId() != null) {
             String taskId = auditFinding.getTaskId();
             jsonWriter.name("taskId");
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
index 6c2a320f58..8c12babb55 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditFindingJsonUnmarshaller.java
@@ -35,7 +35,10 @@ public AuditFinding unmarshall(JsonUnmarshallerContext context) throws Exception
         reader.beginObject();
         while (reader.hasNext()) {
             String name = reader.nextName();
-            if (name.equals("taskId")) {
+            if (name.equals("findingId")) {
+                auditFinding.setFindingId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("taskId")) {
                 auditFinding.setTaskId(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
             } else if (name.equals("checkName")) {
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonMarshaller.java
new file mode 100644
index 0000000000..0bb2568a54
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonMarshaller.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AuditMitigationActionExecutionMetadata
+ */
+class AuditMitigationActionExecutionMetadataJsonMarshaller {
+
+    public void marshall(
+            AuditMitigationActionExecutionMetadata auditMitigationActionExecutionMetadata,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (auditMitigationActionExecutionMetadata.getTaskId() != null) {
+            String taskId = auditMitigationActionExecutionMetadata.getTaskId();
+            jsonWriter.name("taskId");
+            jsonWriter.value(taskId);
+        }
+        if (auditMitigationActionExecutionMetadata.getFindingId() != null) {
+            String findingId = auditMitigationActionExecutionMetadata.getFindingId();
+            jsonWriter.name("findingId");
+            jsonWriter.value(findingId);
+        }
+        if (auditMitigationActionExecutionMetadata.getActionName() != null) {
+            String actionName = auditMitigationActionExecutionMetadata.getActionName();
+            jsonWriter.name("actionName");
+            jsonWriter.value(actionName);
+        }
+        if (auditMitigationActionExecutionMetadata.getActionId() != null) {
+            String actionId = auditMitigationActionExecutionMetadata.getActionId();
+            jsonWriter.name("actionId");
+            jsonWriter.value(actionId);
+        }
+        if (auditMitigationActionExecutionMetadata.getStatus() != null) {
+            String status = auditMitigationActionExecutionMetadata.getStatus();
+            jsonWriter.name("status");
+            jsonWriter.value(status);
+        }
+        if (auditMitigationActionExecutionMetadata.getStartTime() != null) {
+            java.util.Date startTime = auditMitigationActionExecutionMetadata.getStartTime();
+            jsonWriter.name("startTime");
+            jsonWriter.value(startTime);
+        }
+        if (auditMitigationActionExecutionMetadata.getEndTime() != null) {
+            java.util.Date endTime = auditMitigationActionExecutionMetadata.getEndTime();
+            jsonWriter.name("endTime");
+            jsonWriter.value(endTime);
+        }
+        if (auditMitigationActionExecutionMetadata.getErrorCode() != null) {
+            String errorCode = auditMitigationActionExecutionMetadata.getErrorCode();
+            jsonWriter.name("errorCode");
+            jsonWriter.value(errorCode);
+        }
+        if (auditMitigationActionExecutionMetadata.getMessage() != null) {
+            String message = auditMitigationActionExecutionMetadata.getMessage();
+            jsonWriter.name("message");
+            jsonWriter.value(message);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AuditMitigationActionExecutionMetadataJsonMarshaller instance;
+
+    public static AuditMitigationActionExecutionMetadataJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionExecutionMetadataJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonUnmarshaller.java
new file mode 100644
index 0000000000..b6c2149ce1
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionExecutionMetadataJsonUnmarshaller.java
@@ -0,0 +1,91 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AuditMitigationActionExecutionMetadata
+ */
+class AuditMitigationActionExecutionMetadataJsonUnmarshaller implements
+        Unmarshaller<AuditMitigationActionExecutionMetadata, JsonUnmarshallerContext> {
+
+    public AuditMitigationActionExecutionMetadata unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AuditMitigationActionExecutionMetadata auditMitigationActionExecutionMetadata = new AuditMitigationActionExecutionMetadata();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("taskId")) {
+                auditMitigationActionExecutionMetadata.setTaskId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("findingId")) {
+                auditMitigationActionExecutionMetadata.setFindingId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionName")) {
+                auditMitigationActionExecutionMetadata.setActionName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionId")) {
+                auditMitigationActionExecutionMetadata.setActionId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("status")) {
+                auditMitigationActionExecutionMetadata.setStatus(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("startTime")) {
+                auditMitigationActionExecutionMetadata.setStartTime(DateJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("endTime")) {
+                auditMitigationActionExecutionMetadata.setEndTime(DateJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("errorCode")) {
+                auditMitigationActionExecutionMetadata.setErrorCode(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("message")) {
+                auditMitigationActionExecutionMetadata.setMessage(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return auditMitigationActionExecutionMetadata;
+    }
+
+    private static AuditMitigationActionExecutionMetadataJsonUnmarshaller instance;
+
+    public static AuditMitigationActionExecutionMetadataJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionExecutionMetadataJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonMarshaller.java
new file mode 100644
index 0000000000..cdf295f513
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AuditMitigationActionsTaskMetadata
+ */
+class AuditMitigationActionsTaskMetadataJsonMarshaller {
+
+    public void marshall(AuditMitigationActionsTaskMetadata auditMitigationActionsTaskMetadata,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (auditMitigationActionsTaskMetadata.getTaskId() != null) {
+            String taskId = auditMitigationActionsTaskMetadata.getTaskId();
+            jsonWriter.name("taskId");
+            jsonWriter.value(taskId);
+        }
+        if (auditMitigationActionsTaskMetadata.getStartTime() != null) {
+            java.util.Date startTime = auditMitigationActionsTaskMetadata.getStartTime();
+            jsonWriter.name("startTime");
+            jsonWriter.value(startTime);
+        }
+        if (auditMitigationActionsTaskMetadata.getTaskStatus() != null) {
+            String taskStatus = auditMitigationActionsTaskMetadata.getTaskStatus();
+            jsonWriter.name("taskStatus");
+            jsonWriter.value(taskStatus);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AuditMitigationActionsTaskMetadataJsonMarshaller instance;
+
+    public static AuditMitigationActionsTaskMetadataJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionsTaskMetadataJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonUnmarshaller.java
new file mode 100644
index 0000000000..5446763257
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskMetadataJsonUnmarshaller.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AuditMitigationActionsTaskMetadata
+ */
+class AuditMitigationActionsTaskMetadataJsonUnmarshaller implements
+        Unmarshaller<AuditMitigationActionsTaskMetadata, JsonUnmarshallerContext> {
+
+    public AuditMitigationActionsTaskMetadata unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AuditMitigationActionsTaskMetadata auditMitigationActionsTaskMetadata = new AuditMitigationActionsTaskMetadata();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("taskId")) {
+                auditMitigationActionsTaskMetadata.setTaskId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("startTime")) {
+                auditMitigationActionsTaskMetadata.setStartTime(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("taskStatus")) {
+                auditMitigationActionsTaskMetadata.setTaskStatus(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return auditMitigationActionsTaskMetadata;
+    }
+
+    private static AuditMitigationActionsTaskMetadataJsonUnmarshaller instance;
+
+    public static AuditMitigationActionsTaskMetadataJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionsTaskMetadataJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonMarshaller.java
new file mode 100644
index 0000000000..a37c91defd
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonMarshaller.java
@@ -0,0 +1,77 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO AuditMitigationActionsTaskTarget
+ */
+class AuditMitigationActionsTaskTargetJsonMarshaller {
+
+    public void marshall(AuditMitigationActionsTaskTarget auditMitigationActionsTaskTarget,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (auditMitigationActionsTaskTarget.getAuditTaskId() != null) {
+            String auditTaskId = auditMitigationActionsTaskTarget.getAuditTaskId();
+            jsonWriter.name("auditTaskId");
+            jsonWriter.value(auditTaskId);
+        }
+        if (auditMitigationActionsTaskTarget.getFindingIds() != null) {
+            java.util.List<String> findingIds = auditMitigationActionsTaskTarget.getFindingIds();
+            jsonWriter.name("findingIds");
+            jsonWriter.beginArray();
+            for (String findingIdsItem : findingIds) {
+                if (findingIdsItem != null) {
+                    jsonWriter.value(findingIdsItem);
+                }
+            }
+            jsonWriter.endArray();
+        }
+        if (auditMitigationActionsTaskTarget.getAuditCheckToReasonCodeFilter() != null) {
+            java.util.Map<String, java.util.List<String>> auditCheckToReasonCodeFilter = auditMitigationActionsTaskTarget
+                    .getAuditCheckToReasonCodeFilter();
+            jsonWriter.name("auditCheckToReasonCodeFilter");
+            jsonWriter.beginObject();
+            for (java.util.Map.Entry<String, java.util.List<String>> auditCheckToReasonCodeFilterEntry : auditCheckToReasonCodeFilter
+                    .entrySet()) {
+                java.util.List<String> auditCheckToReasonCodeFilterValue = auditCheckToReasonCodeFilterEntry
+                        .getValue();
+                if (auditCheckToReasonCodeFilterValue != null) {
+                    jsonWriter.name(auditCheckToReasonCodeFilterEntry.getKey());
+                    jsonWriter.beginArray();
+                    for (String auditCheckToReasonCodeFilterValueItem : auditCheckToReasonCodeFilterValue) {
+                        if (auditCheckToReasonCodeFilterValueItem != null) {
+                            jsonWriter.value(auditCheckToReasonCodeFilterValueItem);
+                        }
+                    }
+                    jsonWriter.endArray();
+                }
+            }
+            jsonWriter.endObject();
+        }
+        jsonWriter.endObject();
+    }
+
+    private static AuditMitigationActionsTaskTargetJsonMarshaller instance;
+
+    public static AuditMitigationActionsTaskTargetJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionsTaskTargetJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonUnmarshaller.java
new file mode 100644
index 0000000000..424d3aecdb
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/AuditMitigationActionsTaskTargetJsonUnmarshaller.java
@@ -0,0 +1,71 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO AuditMitigationActionsTaskTarget
+ */
+class AuditMitigationActionsTaskTargetJsonUnmarshaller implements
+        Unmarshaller<AuditMitigationActionsTaskTarget, JsonUnmarshallerContext> {
+
+    public AuditMitigationActionsTaskTarget unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        AuditMitigationActionsTaskTarget auditMitigationActionsTaskTarget = new AuditMitigationActionsTaskTarget();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("auditTaskId")) {
+                auditMitigationActionsTaskTarget.setAuditTaskId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("findingIds")) {
+                auditMitigationActionsTaskTarget.setFindingIds(new ListUnmarshaller<String>(
+                        StringJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("auditCheckToReasonCodeFilter")) {
+                auditMitigationActionsTaskTarget
+                        .setAuditCheckToReasonCodeFilter(new MapUnmarshaller<java.util.List<String>>(
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return auditMitigationActionsTaskTarget;
+    }
+
+    private static AuditMitigationActionsTaskTargetJsonUnmarshaller instance;
+
+    public static AuditMitigationActionsTaskTargetJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new AuditMitigationActionsTaskTargetJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskRequestMarshaller.java
new file mode 100644
index 0000000000..44f82be14e
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskRequestMarshaller.java
@@ -0,0 +1,69 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for CancelAuditMitigationActionsTaskRequest
+ */
+public class CancelAuditMitigationActionsTaskRequestMarshaller
+        implements
+        Marshaller<Request<CancelAuditMitigationActionsTaskRequest>, CancelAuditMitigationActionsTaskRequest> {
+
+    public Request<CancelAuditMitigationActionsTaskRequest> marshall(
+            CancelAuditMitigationActionsTaskRequest cancelAuditMitigationActionsTaskRequest) {
+        if (cancelAuditMitigationActionsTaskRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(CancelAuditMitigationActionsTaskRequest)");
+        }
+
+        Request<CancelAuditMitigationActionsTaskRequest> request = new DefaultRequest<CancelAuditMitigationActionsTaskRequest>(
+                cancelAuditMitigationActionsTaskRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.PUT);
+
+        String uriResourcePath = "/audit/mitigationactions/tasks/{taskId}/cancel";
+        uriResourcePath = uriResourcePath.replace(
+                "{taskId}",
+                (cancelAuditMitigationActionsTaskRequest.getTaskId() == null) ? "" : StringUtils
+                        .fromString(cancelAuditMitigationActionsTaskRequest.getTaskId()));
+        request.setResourcePath(uriResourcePath);
+        request.addHeader("Content-Length", "0");
+        request.setContent(new ByteArrayInputStream(new byte[0]));
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..974125de77
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CancelAuditMitigationActionsTaskResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response CancelAuditMitigationActionsTaskResult
+ */
+public class CancelAuditMitigationActionsTaskResultJsonUnmarshaller implements
+        Unmarshaller<CancelAuditMitigationActionsTaskResult, JsonUnmarshallerContext> {
+
+    public CancelAuditMitigationActionsTaskResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        CancelAuditMitigationActionsTaskResult cancelAuditMitigationActionsTaskResult = new CancelAuditMitigationActionsTaskResult();
+
+        return cancelAuditMitigationActionsTaskResult;
+    }
+
+    private static CancelAuditMitigationActionsTaskResultJsonUnmarshaller instance;
+
+    public static CancelAuditMitigationActionsTaskResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CancelAuditMitigationActionsTaskResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionRequestMarshaller.java
new file mode 100644
index 0000000000..77fd24b748
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionRequestMarshaller.java
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for CreateMitigationActionRequest
+ */
+public class CreateMitigationActionRequestMarshaller implements
+        Marshaller<Request<CreateMitigationActionRequest>, CreateMitigationActionRequest> {
+
+    public Request<CreateMitigationActionRequest> marshall(
+            CreateMitigationActionRequest createMitigationActionRequest) {
+        if (createMitigationActionRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(CreateMitigationActionRequest)");
+        }
+
+        Request<CreateMitigationActionRequest> request = new DefaultRequest<CreateMitigationActionRequest>(
+                createMitigationActionRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/mitigationactions/actions/{actionName}";
+        uriResourcePath = uriResourcePath.replace(
+                "{actionName}",
+                (createMitigationActionRequest.getActionName() == null) ? "" : StringUtils
+                        .fromString(createMitigationActionRequest.getActionName()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (createMitigationActionRequest.getRoleArn() != null) {
+                String roleArn = createMitigationActionRequest.getRoleArn();
+                jsonWriter.name("roleArn");
+                jsonWriter.value(roleArn);
+            }
+            if (createMitigationActionRequest.getActionParams() != null) {
+                MitigationActionParams actionParams = createMitigationActionRequest
+                        .getActionParams();
+                jsonWriter.name("actionParams");
+                MitigationActionParamsJsonMarshaller.getInstance().marshall(actionParams,
+                        jsonWriter);
+            }
+            if (createMitigationActionRequest.getTags() != null) {
+                java.util.List<Tag> tags = createMitigationActionRequest.getTags();
+                jsonWriter.name("tags");
+                jsonWriter.beginArray();
+                for (Tag tagsItem : tags) {
+                    if (tagsItem != null) {
+                        TagJsonMarshaller.getInstance().marshall(tagsItem, jsonWriter);
+                    }
+                }
+                jsonWriter.endArray();
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..748a2f26fb
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateMitigationActionResultJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response CreateMitigationActionResult
+ */
+public class CreateMitigationActionResultJsonUnmarshaller implements
+        Unmarshaller<CreateMitigationActionResult, JsonUnmarshallerContext> {
+
+    public CreateMitigationActionResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        CreateMitigationActionResult createMitigationActionResult = new CreateMitigationActionResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionArn")) {
+                createMitigationActionResult.setActionArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionId")) {
+                createMitigationActionResult.setActionId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return createMitigationActionResult;
+    }
+
+    private static CreateMitigationActionResultJsonUnmarshaller instance;
+
+    public static CreateMitigationActionResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new CreateMitigationActionResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionRequestMarshaller.java
new file mode 100644
index 0000000000..2e29732c2e
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DeleteMitigationActionRequest
+ */
+public class DeleteMitigationActionRequestMarshaller implements
+        Marshaller<Request<DeleteMitigationActionRequest>, DeleteMitigationActionRequest> {
+
+    public Request<DeleteMitigationActionRequest> marshall(
+            DeleteMitigationActionRequest deleteMitigationActionRequest) {
+        if (deleteMitigationActionRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DeleteMitigationActionRequest)");
+        }
+
+        Request<DeleteMitigationActionRequest> request = new DefaultRequest<DeleteMitigationActionRequest>(
+                deleteMitigationActionRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.DELETE);
+
+        String uriResourcePath = "/mitigationactions/actions/{actionName}";
+        uriResourcePath = uriResourcePath.replace(
+                "{actionName}",
+                (deleteMitigationActionRequest.getActionName() == null) ? "" : StringUtils
+                        .fromString(deleteMitigationActionRequest.getActionName()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..85493c008c
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DeleteMitigationActionResultJsonUnmarshaller.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DeleteMitigationActionResult
+ */
+public class DeleteMitigationActionResultJsonUnmarshaller implements
+        Unmarshaller<DeleteMitigationActionResult, JsonUnmarshallerContext> {
+
+    public DeleteMitigationActionResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DeleteMitigationActionResult deleteMitigationActionResult = new DeleteMitigationActionResult();
+
+        return deleteMitigationActionResult;
+    }
+
+    private static DeleteMitigationActionResultJsonUnmarshaller instance;
+
+    public static DeleteMitigationActionResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DeleteMitigationActionResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingRequestMarshaller.java
new file mode 100644
index 0000000000..93be5ba5bf
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeAuditFindingRequest
+ */
+public class DescribeAuditFindingRequestMarshaller implements
+        Marshaller<Request<DescribeAuditFindingRequest>, DescribeAuditFindingRequest> {
+
+    public Request<DescribeAuditFindingRequest> marshall(
+            DescribeAuditFindingRequest describeAuditFindingRequest) {
+        if (describeAuditFindingRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeAuditFindingRequest)");
+        }
+
+        Request<DescribeAuditFindingRequest> request = new DefaultRequest<DescribeAuditFindingRequest>(
+                describeAuditFindingRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/audit/findings/{findingId}";
+        uriResourcePath = uriResourcePath.replace(
+                "{findingId}",
+                (describeAuditFindingRequest.getFindingId() == null) ? "" : StringUtils
+                        .fromString(describeAuditFindingRequest.getFindingId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..1054a6d890
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditFindingResultJsonUnmarshaller.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeAuditFindingResult
+ */
+public class DescribeAuditFindingResultJsonUnmarshaller implements
+        Unmarshaller<DescribeAuditFindingResult, JsonUnmarshallerContext> {
+
+    public DescribeAuditFindingResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        DescribeAuditFindingResult describeAuditFindingResult = new DescribeAuditFindingResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("finding")) {
+                describeAuditFindingResult.setFinding(AuditFindingJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeAuditFindingResult;
+    }
+
+    private static DescribeAuditFindingResultJsonUnmarshaller instance;
+
+    public static DescribeAuditFindingResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeAuditFindingResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskRequestMarshaller.java
new file mode 100644
index 0000000000..a8751b85e0
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskRequestMarshaller.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeAuditMitigationActionsTaskRequest
+ */
+public class DescribeAuditMitigationActionsTaskRequestMarshaller
+        implements
+        Marshaller<Request<DescribeAuditMitigationActionsTaskRequest>, DescribeAuditMitigationActionsTaskRequest> {
+
+    public Request<DescribeAuditMitigationActionsTaskRequest> marshall(
+            DescribeAuditMitigationActionsTaskRequest describeAuditMitigationActionsTaskRequest) {
+        if (describeAuditMitigationActionsTaskRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeAuditMitigationActionsTaskRequest)");
+        }
+
+        Request<DescribeAuditMitigationActionsTaskRequest> request = new DefaultRequest<DescribeAuditMitigationActionsTaskRequest>(
+                describeAuditMitigationActionsTaskRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/audit/mitigationactions/tasks/{taskId}";
+        uriResourcePath = uriResourcePath.replace(
+                "{taskId}",
+                (describeAuditMitigationActionsTaskRequest.getTaskId() == null) ? "" : StringUtils
+                        .fromString(describeAuditMitigationActionsTaskRequest.getTaskId()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..5e74105657
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeAuditMitigationActionsTaskResultJsonUnmarshaller.java
@@ -0,0 +1,88 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeAuditMitigationActionsTaskResult
+ */
+public class DescribeAuditMitigationActionsTaskResultJsonUnmarshaller implements
+        Unmarshaller<DescribeAuditMitigationActionsTaskResult, JsonUnmarshallerContext> {
+
+    public DescribeAuditMitigationActionsTaskResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DescribeAuditMitigationActionsTaskResult describeAuditMitigationActionsTaskResult = new DescribeAuditMitigationActionsTaskResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("taskStatus")) {
+                describeAuditMitigationActionsTaskResult.setTaskStatus(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("startTime")) {
+                describeAuditMitigationActionsTaskResult.setStartTime(DateJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("endTime")) {
+                describeAuditMitigationActionsTaskResult.setEndTime(DateJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("taskStatistics")) {
+                describeAuditMitigationActionsTaskResult
+                        .setTaskStatistics(new MapUnmarshaller<TaskStatisticsForAuditCheck>(
+                                TaskStatisticsForAuditCheckJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("target")) {
+                describeAuditMitigationActionsTaskResult
+                        .setTarget(AuditMitigationActionsTaskTargetJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("auditCheckToActionsMapping")) {
+                describeAuditMitigationActionsTaskResult
+                        .setAuditCheckToActionsMapping(new MapUnmarshaller<java.util.List<String>>(
+                                new ListUnmarshaller<String>(StringJsonUnmarshaller.getInstance()
+                                )
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("actionsDefinition")) {
+                describeAuditMitigationActionsTaskResult
+                        .setActionsDefinition(new ListUnmarshaller<MitigationAction>(
+                                MitigationActionJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeAuditMitigationActionsTaskResult;
+    }
+
+    private static DescribeAuditMitigationActionsTaskResultJsonUnmarshaller instance;
+
+    public static DescribeAuditMitigationActionsTaskResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeAuditMitigationActionsTaskResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionRequestMarshaller.java
new file mode 100644
index 0000000000..bbce253b42
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionRequestMarshaller.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for DescribeMitigationActionRequest
+ */
+public class DescribeMitigationActionRequestMarshaller implements
+        Marshaller<Request<DescribeMitigationActionRequest>, DescribeMitigationActionRequest> {
+
+    public Request<DescribeMitigationActionRequest> marshall(
+            DescribeMitigationActionRequest describeMitigationActionRequest) {
+        if (describeMitigationActionRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(DescribeMitigationActionRequest)");
+        }
+
+        Request<DescribeMitigationActionRequest> request = new DefaultRequest<DescribeMitigationActionRequest>(
+                describeMitigationActionRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/mitigationactions/actions/{actionName}";
+        uriResourcePath = uriResourcePath.replace(
+                "{actionName}",
+                (describeMitigationActionRequest.getActionName() == null) ? "" : StringUtils
+                        .fromString(describeMitigationActionRequest.getActionName()));
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..3458aeddbe
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/DescribeMitigationActionResultJsonUnmarshaller.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response DescribeMitigationActionResult
+ */
+public class DescribeMitigationActionResultJsonUnmarshaller implements
+        Unmarshaller<DescribeMitigationActionResult, JsonUnmarshallerContext> {
+
+    public DescribeMitigationActionResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        DescribeMitigationActionResult describeMitigationActionResult = new DescribeMitigationActionResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionName")) {
+                describeMitigationActionResult.setActionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionType")) {
+                describeMitigationActionResult.setActionType(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionArn")) {
+                describeMitigationActionResult.setActionArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionId")) {
+                describeMitigationActionResult.setActionId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("roleArn")) {
+                describeMitigationActionResult.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionParams")) {
+                describeMitigationActionResult
+                        .setActionParams(MitigationActionParamsJsonUnmarshaller.getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("creationDate")) {
+                describeMitigationActionResult.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("lastModifiedDate")) {
+                describeMitigationActionResult.setLastModifiedDate(DateJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return describeMitigationActionResult;
+    }
+
+    private static DescribeMitigationActionResultJsonUnmarshaller instance;
+
+    public static DescribeMitigationActionResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new DescribeMitigationActionResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonMarshaller.java
new file mode 100644
index 0000000000..bccb551586
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonMarshaller.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO EnableIoTLoggingParams
+ */
+class EnableIoTLoggingParamsJsonMarshaller {
+
+    public void marshall(EnableIoTLoggingParams enableIoTLoggingParams, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (enableIoTLoggingParams.getRoleArnForLogging() != null) {
+            String roleArnForLogging = enableIoTLoggingParams.getRoleArnForLogging();
+            jsonWriter.name("roleArnForLogging");
+            jsonWriter.value(roleArnForLogging);
+        }
+        if (enableIoTLoggingParams.getLogLevel() != null) {
+            String logLevel = enableIoTLoggingParams.getLogLevel();
+            jsonWriter.name("logLevel");
+            jsonWriter.value(logLevel);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static EnableIoTLoggingParamsJsonMarshaller instance;
+
+    public static EnableIoTLoggingParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new EnableIoTLoggingParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..2515a99a63
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/EnableIoTLoggingParamsJsonUnmarshaller.java
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO EnableIoTLoggingParams
+ */
+class EnableIoTLoggingParamsJsonUnmarshaller implements
+        Unmarshaller<EnableIoTLoggingParams, JsonUnmarshallerContext> {
+
+    public EnableIoTLoggingParams unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        EnableIoTLoggingParams enableIoTLoggingParams = new EnableIoTLoggingParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("roleArnForLogging")) {
+                enableIoTLoggingParams.setRoleArnForLogging(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("logLevel")) {
+                enableIoTLoggingParams.setLogLevel(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return enableIoTLoggingParams;
+    }
+
+    private static EnableIoTLoggingParamsJsonUnmarshaller instance;
+
+    public static EnableIoTLoggingParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new EnableIoTLoggingParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsRequestMarshaller.java
new file mode 100644
index 0000000000..51a0750596
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsRequestMarshaller.java
@@ -0,0 +1,83 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListAuditMitigationActionsExecutionsRequest
+ */
+public class ListAuditMitigationActionsExecutionsRequestMarshaller
+        implements
+        Marshaller<Request<ListAuditMitigationActionsExecutionsRequest>, ListAuditMitigationActionsExecutionsRequest> {
+
+    public Request<ListAuditMitigationActionsExecutionsRequest> marshall(
+            ListAuditMitigationActionsExecutionsRequest listAuditMitigationActionsExecutionsRequest) {
+        if (listAuditMitigationActionsExecutionsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListAuditMitigationActionsExecutionsRequest)");
+        }
+
+        Request<ListAuditMitigationActionsExecutionsRequest> request = new DefaultRequest<ListAuditMitigationActionsExecutionsRequest>(
+                listAuditMitigationActionsExecutionsRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/audit/mitigationactions/executions";
+        if (listAuditMitigationActionsExecutionsRequest.getTaskId() != null) {
+            request.addParameter("taskId",
+                    StringUtils.fromString(listAuditMitigationActionsExecutionsRequest.getTaskId()));
+        }
+        if (listAuditMitigationActionsExecutionsRequest.getActionStatus() != null) {
+            request.addParameter("actionStatus", StringUtils
+                    .fromString(listAuditMitigationActionsExecutionsRequest.getActionStatus()));
+        }
+        if (listAuditMitigationActionsExecutionsRequest.getFindingId() != null) {
+            request.addParameter("findingId", StringUtils
+                    .fromString(listAuditMitigationActionsExecutionsRequest.getFindingId()));
+        }
+        if (listAuditMitigationActionsExecutionsRequest.getMaxResults() != null) {
+            request.addParameter("maxResults", StringUtils
+                    .fromInteger(listAuditMitigationActionsExecutionsRequest.getMaxResults()));
+        }
+        if (listAuditMitigationActionsExecutionsRequest.getNextToken() != null) {
+            request.addParameter("nextToken", StringUtils
+                    .fromString(listAuditMitigationActionsExecutionsRequest.getNextToken()));
+        }
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..b3d9403954
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsExecutionsResultJsonUnmarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListAuditMitigationActionsExecutionsResult
+ */
+public class ListAuditMitigationActionsExecutionsResultJsonUnmarshaller implements
+        Unmarshaller<ListAuditMitigationActionsExecutionsResult, JsonUnmarshallerContext> {
+
+    public ListAuditMitigationActionsExecutionsResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        ListAuditMitigationActionsExecutionsResult listAuditMitigationActionsExecutionsResult = new ListAuditMitigationActionsExecutionsResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionsExecutions")) {
+                listAuditMitigationActionsExecutionsResult
+                        .setActionsExecutions(new ListUnmarshaller<AuditMitigationActionExecutionMetadata>(
+                                AuditMitigationActionExecutionMetadataJsonUnmarshaller
+                                        .getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("nextToken")) {
+                listAuditMitigationActionsExecutionsResult.setNextToken(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listAuditMitigationActionsExecutionsResult;
+    }
+
+    private static ListAuditMitigationActionsExecutionsResultJsonUnmarshaller instance;
+
+    public static ListAuditMitigationActionsExecutionsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListAuditMitigationActionsExecutionsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksRequestMarshaller.java
new file mode 100644
index 0000000000..3213516be8
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksRequestMarshaller.java
@@ -0,0 +1,91 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListAuditMitigationActionsTasksRequest
+ */
+public class ListAuditMitigationActionsTasksRequestMarshaller
+        implements
+        Marshaller<Request<ListAuditMitigationActionsTasksRequest>, ListAuditMitigationActionsTasksRequest> {
+
+    public Request<ListAuditMitigationActionsTasksRequest> marshall(
+            ListAuditMitigationActionsTasksRequest listAuditMitigationActionsTasksRequest) {
+        if (listAuditMitigationActionsTasksRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListAuditMitigationActionsTasksRequest)");
+        }
+
+        Request<ListAuditMitigationActionsTasksRequest> request = new DefaultRequest<ListAuditMitigationActionsTasksRequest>(
+                listAuditMitigationActionsTasksRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/audit/mitigationactions/tasks";
+        if (listAuditMitigationActionsTasksRequest.getAuditTaskId() != null) {
+            request.addParameter("auditTaskId",
+                    StringUtils.fromString(listAuditMitigationActionsTasksRequest.getAuditTaskId()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getFindingId() != null) {
+            request.addParameter("findingId",
+                    StringUtils.fromString(listAuditMitigationActionsTasksRequest.getFindingId()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getTaskStatus() != null) {
+            request.addParameter("taskStatus",
+                    StringUtils.fromString(listAuditMitigationActionsTasksRequest.getTaskStatus()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getMaxResults() != null) {
+            request.addParameter("maxResults",
+                    StringUtils.fromInteger(listAuditMitigationActionsTasksRequest.getMaxResults()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getNextToken() != null) {
+            request.addParameter("nextToken",
+                    StringUtils.fromString(listAuditMitigationActionsTasksRequest.getNextToken()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getStartTime() != null) {
+            request.addParameter("startTime",
+                    StringUtils.fromDate(listAuditMitigationActionsTasksRequest.getStartTime()));
+        }
+        if (listAuditMitigationActionsTasksRequest.getEndTime() != null) {
+            request.addParameter("endTime",
+                    StringUtils.fromDate(listAuditMitigationActionsTasksRequest.getEndTime()));
+        }
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..c45d9316c5
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListAuditMitigationActionsTasksResultJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListAuditMitigationActionsTasksResult
+ */
+public class ListAuditMitigationActionsTasksResultJsonUnmarshaller implements
+        Unmarshaller<ListAuditMitigationActionsTasksResult, JsonUnmarshallerContext> {
+
+    public ListAuditMitigationActionsTasksResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        ListAuditMitigationActionsTasksResult listAuditMitigationActionsTasksResult = new ListAuditMitigationActionsTasksResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("tasks")) {
+                listAuditMitigationActionsTasksResult
+                        .setTasks(new ListUnmarshaller<AuditMitigationActionsTaskMetadata>(
+                                AuditMitigationActionsTaskMetadataJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("nextToken")) {
+                listAuditMitigationActionsTasksResult.setNextToken(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listAuditMitigationActionsTasksResult;
+    }
+
+    private static ListAuditMitigationActionsTasksResultJsonUnmarshaller instance;
+
+    public static ListAuditMitigationActionsTasksResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListAuditMitigationActionsTasksResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsRequestMarshaller.java
new file mode 100644
index 0000000000..4d03f9cd0e
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsRequestMarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for ListMitigationActionsRequest
+ */
+public class ListMitigationActionsRequestMarshaller implements
+        Marshaller<Request<ListMitigationActionsRequest>, ListMitigationActionsRequest> {
+
+    public Request<ListMitigationActionsRequest> marshall(
+            ListMitigationActionsRequest listMitigationActionsRequest) {
+        if (listMitigationActionsRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(ListMitigationActionsRequest)");
+        }
+
+        Request<ListMitigationActionsRequest> request = new DefaultRequest<ListMitigationActionsRequest>(
+                listMitigationActionsRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.GET);
+
+        String uriResourcePath = "/mitigationactions/actions";
+        if (listMitigationActionsRequest.getActionType() != null) {
+            request.addParameter("actionType",
+                    StringUtils.fromString(listMitigationActionsRequest.getActionType()));
+        }
+        if (listMitigationActionsRequest.getMaxResults() != null) {
+            request.addParameter("maxResults",
+                    StringUtils.fromInteger(listMitigationActionsRequest.getMaxResults()));
+        }
+        if (listMitigationActionsRequest.getNextToken() != null) {
+            request.addParameter("nextToken",
+                    StringUtils.fromString(listMitigationActionsRequest.getNextToken()));
+        }
+        request.setResourcePath(uriResourcePath);
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..7dbb7f6da8
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ListMitigationActionsResultJsonUnmarshaller.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response ListMitigationActionsResult
+ */
+public class ListMitigationActionsResultJsonUnmarshaller implements
+        Unmarshaller<ListMitigationActionsResult, JsonUnmarshallerContext> {
+
+    public ListMitigationActionsResult unmarshall(JsonUnmarshallerContext context) throws Exception {
+        ListMitigationActionsResult listMitigationActionsResult = new ListMitigationActionsResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionIdentifiers")) {
+                listMitigationActionsResult
+                        .setActionIdentifiers(new ListUnmarshaller<MitigationActionIdentifier>(
+                                MitigationActionIdentifierJsonUnmarshaller.getInstance()
+                        )
+                                .unmarshall(context));
+            } else if (name.equals("nextToken")) {
+                listMitigationActionsResult.setNextToken(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return listMitigationActionsResult;
+    }
+
+    private static ListMitigationActionsResultJsonUnmarshaller instance;
+
+    public static ListMitigationActionsResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ListMitigationActionsResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonMarshaller.java
new file mode 100644
index 0000000000..a5a2729b2f
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonMarshaller.java
@@ -0,0 +1,54 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MitigationActionIdentifier
+ */
+class MitigationActionIdentifierJsonMarshaller {
+
+    public void marshall(MitigationActionIdentifier mitigationActionIdentifier,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (mitigationActionIdentifier.getActionName() != null) {
+            String actionName = mitigationActionIdentifier.getActionName();
+            jsonWriter.name("actionName");
+            jsonWriter.value(actionName);
+        }
+        if (mitigationActionIdentifier.getActionArn() != null) {
+            String actionArn = mitigationActionIdentifier.getActionArn();
+            jsonWriter.name("actionArn");
+            jsonWriter.value(actionArn);
+        }
+        if (mitigationActionIdentifier.getCreationDate() != null) {
+            java.util.Date creationDate = mitigationActionIdentifier.getCreationDate();
+            jsonWriter.name("creationDate");
+            jsonWriter.value(creationDate);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MitigationActionIdentifierJsonMarshaller instance;
+
+    public static MitigationActionIdentifierJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionIdentifierJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonUnmarshaller.java
new file mode 100644
index 0000000000..0f2ef382fc
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionIdentifierJsonUnmarshaller.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MitigationActionIdentifier
+ */
+class MitigationActionIdentifierJsonUnmarshaller implements
+        Unmarshaller<MitigationActionIdentifier, JsonUnmarshallerContext> {
+
+    public MitigationActionIdentifier unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MitigationActionIdentifier mitigationActionIdentifier = new MitigationActionIdentifier();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionName")) {
+                mitigationActionIdentifier.setActionName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionArn")) {
+                mitigationActionIdentifier.setActionArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("creationDate")) {
+                mitigationActionIdentifier.setCreationDate(DateJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return mitigationActionIdentifier;
+    }
+
+    private static MitigationActionIdentifierJsonUnmarshaller instance;
+
+    public static MitigationActionIdentifierJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionIdentifierJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonMarshaller.java
new file mode 100644
index 0000000000..7c41cbbbc0
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonMarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MitigationAction
+ */
+class MitigationActionJsonMarshaller {
+
+    public void marshall(MitigationAction mitigationAction, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (mitigationAction.getName() != null) {
+            String name = mitigationAction.getName();
+            jsonWriter.name("name");
+            jsonWriter.value(name);
+        }
+        if (mitigationAction.getId() != null) {
+            String id = mitigationAction.getId();
+            jsonWriter.name("id");
+            jsonWriter.value(id);
+        }
+        if (mitigationAction.getRoleArn() != null) {
+            String roleArn = mitigationAction.getRoleArn();
+            jsonWriter.name("roleArn");
+            jsonWriter.value(roleArn);
+        }
+        if (mitigationAction.getActionParams() != null) {
+            MitigationActionParams actionParams = mitigationAction.getActionParams();
+            jsonWriter.name("actionParams");
+            MitigationActionParamsJsonMarshaller.getInstance().marshall(actionParams, jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MitigationActionJsonMarshaller instance;
+
+    public static MitigationActionJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonUnmarshaller.java
new file mode 100644
index 0000000000..64572389a9
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionJsonUnmarshaller.java
@@ -0,0 +1,67 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MitigationAction
+ */
+class MitigationActionJsonUnmarshaller implements
+        Unmarshaller<MitigationAction, JsonUnmarshallerContext> {
+
+    public MitigationAction unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MitigationAction mitigationAction = new MitigationAction();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("name")) {
+                mitigationAction.setName(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("id")) {
+                mitigationAction.setId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("roleArn")) {
+                mitigationAction.setRoleArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionParams")) {
+                mitigationAction.setActionParams(MitigationActionParamsJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return mitigationAction;
+    }
+
+    private static MitigationActionJsonUnmarshaller instance;
+
+    public static MitigationActionJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonMarshaller.java
new file mode 100644
index 0000000000..7ef5c934bc
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonMarshaller.java
@@ -0,0 +1,81 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO MitigationActionParams
+ */
+class MitigationActionParamsJsonMarshaller {
+
+    public void marshall(MitigationActionParams mitigationActionParams, AwsJsonWriter jsonWriter)
+            throws Exception {
+        jsonWriter.beginObject();
+        if (mitigationActionParams.getUpdateDeviceCertificateParams() != null) {
+            UpdateDeviceCertificateParams updateDeviceCertificateParams = mitigationActionParams
+                    .getUpdateDeviceCertificateParams();
+            jsonWriter.name("updateDeviceCertificateParams");
+            UpdateDeviceCertificateParamsJsonMarshaller.getInstance().marshall(
+                    updateDeviceCertificateParams, jsonWriter);
+        }
+        if (mitigationActionParams.getUpdateCACertificateParams() != null) {
+            UpdateCACertificateParams updateCACertificateParams = mitigationActionParams
+                    .getUpdateCACertificateParams();
+            jsonWriter.name("updateCACertificateParams");
+            UpdateCACertificateParamsJsonMarshaller.getInstance().marshall(
+                    updateCACertificateParams, jsonWriter);
+        }
+        if (mitigationActionParams.getAddThingsToThingGroupParams() != null) {
+            AddThingsToThingGroupParams addThingsToThingGroupParams = mitigationActionParams
+                    .getAddThingsToThingGroupParams();
+            jsonWriter.name("addThingsToThingGroupParams");
+            AddThingsToThingGroupParamsJsonMarshaller.getInstance().marshall(
+                    addThingsToThingGroupParams, jsonWriter);
+        }
+        if (mitigationActionParams.getReplaceDefaultPolicyVersionParams() != null) {
+            ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams = mitigationActionParams
+                    .getReplaceDefaultPolicyVersionParams();
+            jsonWriter.name("replaceDefaultPolicyVersionParams");
+            ReplaceDefaultPolicyVersionParamsJsonMarshaller.getInstance().marshall(
+                    replaceDefaultPolicyVersionParams, jsonWriter);
+        }
+        if (mitigationActionParams.getEnableIoTLoggingParams() != null) {
+            EnableIoTLoggingParams enableIoTLoggingParams = mitigationActionParams
+                    .getEnableIoTLoggingParams();
+            jsonWriter.name("enableIoTLoggingParams");
+            EnableIoTLoggingParamsJsonMarshaller.getInstance().marshall(enableIoTLoggingParams,
+                    jsonWriter);
+        }
+        if (mitigationActionParams.getPublishFindingToSnsParams() != null) {
+            PublishFindingToSnsParams publishFindingToSnsParams = mitigationActionParams
+                    .getPublishFindingToSnsParams();
+            jsonWriter.name("publishFindingToSnsParams");
+            PublishFindingToSnsParamsJsonMarshaller.getInstance().marshall(
+                    publishFindingToSnsParams, jsonWriter);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static MitigationActionParamsJsonMarshaller instance;
+
+    public static MitigationActionParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..abdd36fa43
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/MitigationActionParamsJsonUnmarshaller.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO MitigationActionParams
+ */
+class MitigationActionParamsJsonUnmarshaller implements
+        Unmarshaller<MitigationActionParams, JsonUnmarshallerContext> {
+
+    public MitigationActionParams unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        MitigationActionParams mitigationActionParams = new MitigationActionParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("updateDeviceCertificateParams")) {
+                mitigationActionParams
+                        .setUpdateDeviceCertificateParams(UpdateDeviceCertificateParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("updateCACertificateParams")) {
+                mitigationActionParams
+                        .setUpdateCACertificateParams(UpdateCACertificateParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("addThingsToThingGroupParams")) {
+                mitigationActionParams
+                        .setAddThingsToThingGroupParams(AddThingsToThingGroupParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("replaceDefaultPolicyVersionParams")) {
+                mitigationActionParams
+                        .setReplaceDefaultPolicyVersionParams(ReplaceDefaultPolicyVersionParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("enableIoTLoggingParams")) {
+                mitigationActionParams
+                        .setEnableIoTLoggingParams(EnableIoTLoggingParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else if (name.equals("publishFindingToSnsParams")) {
+                mitigationActionParams
+                        .setPublishFindingToSnsParams(PublishFindingToSnsParamsJsonUnmarshaller
+                                .getInstance()
+                                .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return mitigationActionParams;
+    }
+
+    private static MitigationActionParamsJsonUnmarshaller instance;
+
+    public static MitigationActionParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new MitigationActionParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonMarshaller.java
new file mode 100644
index 0000000000..1a7ff1d6fb
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO PublishFindingToSnsParams
+ */
+class PublishFindingToSnsParamsJsonMarshaller {
+
+    public void marshall(PublishFindingToSnsParams publishFindingToSnsParams,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (publishFindingToSnsParams.getTopicArn() != null) {
+            String topicArn = publishFindingToSnsParams.getTopicArn();
+            jsonWriter.name("topicArn");
+            jsonWriter.value(topicArn);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static PublishFindingToSnsParamsJsonMarshaller instance;
+
+    public static PublishFindingToSnsParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new PublishFindingToSnsParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..47a9774bda
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/PublishFindingToSnsParamsJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO PublishFindingToSnsParams
+ */
+class PublishFindingToSnsParamsJsonUnmarshaller implements
+        Unmarshaller<PublishFindingToSnsParams, JsonUnmarshallerContext> {
+
+    public PublishFindingToSnsParams unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        PublishFindingToSnsParams publishFindingToSnsParams = new PublishFindingToSnsParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("topicArn")) {
+                publishFindingToSnsParams.setTopicArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return publishFindingToSnsParams;
+    }
+
+    private static PublishFindingToSnsParamsJsonUnmarshaller instance;
+
+    public static PublishFindingToSnsParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new PublishFindingToSnsParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonMarshaller.java
new file mode 100644
index 0000000000..ca1234171f
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO ReplaceDefaultPolicyVersionParams
+ */
+class ReplaceDefaultPolicyVersionParamsJsonMarshaller {
+
+    public void marshall(ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (replaceDefaultPolicyVersionParams.getTemplateName() != null) {
+            String templateName = replaceDefaultPolicyVersionParams.getTemplateName();
+            jsonWriter.name("templateName");
+            jsonWriter.value(templateName);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static ReplaceDefaultPolicyVersionParamsJsonMarshaller instance;
+
+    public static ReplaceDefaultPolicyVersionParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new ReplaceDefaultPolicyVersionParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..c191f88415
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceDefaultPolicyVersionParamsJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO ReplaceDefaultPolicyVersionParams
+ */
+class ReplaceDefaultPolicyVersionParamsJsonUnmarshaller implements
+        Unmarshaller<ReplaceDefaultPolicyVersionParams, JsonUnmarshallerContext> {
+
+    public ReplaceDefaultPolicyVersionParams unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        ReplaceDefaultPolicyVersionParams replaceDefaultPolicyVersionParams = new ReplaceDefaultPolicyVersionParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("templateName")) {
+                replaceDefaultPolicyVersionParams.setTemplateName(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return replaceDefaultPolicyVersionParams;
+    }
+
+    private static ReplaceDefaultPolicyVersionParamsJsonUnmarshaller instance;
+
+    public static ReplaceDefaultPolicyVersionParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new ReplaceDefaultPolicyVersionParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonMarshaller.java
index e0ff32aba4..35441b2993 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonMarshaller.java
@@ -36,6 +36,11 @@ public void marshall(RepublishAction republishAction, AwsJsonWriter jsonWriter)
             jsonWriter.name("topic");
             jsonWriter.value(topic);
         }
+        if (republishAction.getQos() != null) {
+            Integer qos = republishAction.getQos();
+            jsonWriter.name("qos");
+            jsonWriter.value(qos);
+        }
         jsonWriter.endObject();
     }
 
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
index 91e6d89451..596741139a 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/RepublishActionJsonUnmarshaller.java
@@ -42,6 +42,9 @@ public RepublishAction unmarshall(JsonUnmarshallerContext context) throws Except
             } else if (name.equals("topic")) {
                 republishAction.setTopic(StringJsonUnmarshaller.getInstance()
                         .unmarshall(context));
+            } else if (name.equals("qos")) {
+                republishAction.setQos(IntegerJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
             } else {
                 reader.skipValue();
             }
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskRequestMarshaller.java
new file mode 100644
index 0000000000..b333edb3c6
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskRequestMarshaller.java
@@ -0,0 +1,118 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for StartAuditMitigationActionsTaskRequest
+ */
+public class StartAuditMitigationActionsTaskRequestMarshaller
+        implements
+        Marshaller<Request<StartAuditMitigationActionsTaskRequest>, StartAuditMitigationActionsTaskRequest> {
+
+    public Request<StartAuditMitigationActionsTaskRequest> marshall(
+            StartAuditMitigationActionsTaskRequest startAuditMitigationActionsTaskRequest) {
+        if (startAuditMitigationActionsTaskRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(StartAuditMitigationActionsTaskRequest)");
+        }
+
+        Request<StartAuditMitigationActionsTaskRequest> request = new DefaultRequest<StartAuditMitigationActionsTaskRequest>(
+                startAuditMitigationActionsTaskRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.POST);
+
+        String uriResourcePath = "/audit/mitigationactions/tasks/{taskId}";
+        uriResourcePath = uriResourcePath.replace(
+                "{taskId}",
+                (startAuditMitigationActionsTaskRequest.getTaskId() == null) ? "" : StringUtils
+                        .fromString(startAuditMitigationActionsTaskRequest.getTaskId()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (startAuditMitigationActionsTaskRequest.getTarget() != null) {
+                AuditMitigationActionsTaskTarget target = startAuditMitigationActionsTaskRequest
+                        .getTarget();
+                jsonWriter.name("target");
+                AuditMitigationActionsTaskTargetJsonMarshaller.getInstance().marshall(target,
+                        jsonWriter);
+            }
+            if (startAuditMitigationActionsTaskRequest.getAuditCheckToActionsMapping() != null) {
+                java.util.Map<String, java.util.List<String>> auditCheckToActionsMapping = startAuditMitigationActionsTaskRequest
+                        .getAuditCheckToActionsMapping();
+                jsonWriter.name("auditCheckToActionsMapping");
+                jsonWriter.beginObject();
+                for (java.util.Map.Entry<String, java.util.List<String>> auditCheckToActionsMappingEntry : auditCheckToActionsMapping
+                        .entrySet()) {
+                    java.util.List<String> auditCheckToActionsMappingValue = auditCheckToActionsMappingEntry
+                            .getValue();
+                    if (auditCheckToActionsMappingValue != null) {
+                        jsonWriter.name(auditCheckToActionsMappingEntry.getKey());
+                        jsonWriter.beginArray();
+                        for (String auditCheckToActionsMappingValueItem : auditCheckToActionsMappingValue) {
+                            if (auditCheckToActionsMappingValueItem != null) {
+                                jsonWriter.value(auditCheckToActionsMappingValueItem);
+                            }
+                        }
+                        jsonWriter.endArray();
+                    }
+                }
+                jsonWriter.endObject();
+            }
+            if (startAuditMitigationActionsTaskRequest.getClientRequestToken() != null) {
+                String clientRequestToken = startAuditMitigationActionsTaskRequest
+                        .getClientRequestToken();
+                jsonWriter.name("clientRequestToken");
+                jsonWriter.value(clientRequestToken);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..b766e00220
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/StartAuditMitigationActionsTaskResultJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response StartAuditMitigationActionsTaskResult
+ */
+public class StartAuditMitigationActionsTaskResultJsonUnmarshaller implements
+        Unmarshaller<StartAuditMitigationActionsTaskResult, JsonUnmarshallerContext> {
+
+    public StartAuditMitigationActionsTaskResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        StartAuditMitigationActionsTaskResult startAuditMitigationActionsTaskResult = new StartAuditMitigationActionsTaskResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("taskId")) {
+                startAuditMitigationActionsTaskResult.setTaskId(StringJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return startAuditMitigationActionsTaskResult;
+    }
+
+    private static StartAuditMitigationActionsTaskResultJsonUnmarshaller instance;
+
+    public static StartAuditMitigationActionsTaskResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new StartAuditMitigationActionsTaskResultJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskAlreadyExistsExceptionUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskAlreadyExistsExceptionUnmarshaller.java
new file mode 100644
index 0000000000..94b3135c71
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskAlreadyExistsExceptionUnmarshaller.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.AmazonServiceException;
+import com.amazonaws.http.JsonErrorResponseHandler.JsonErrorResponse;
+import com.amazonaws.transform.JsonErrorUnmarshaller;
+import com.amazonaws.services.iot.model.TaskAlreadyExistsException;
+
+public class TaskAlreadyExistsExceptionUnmarshaller extends JsonErrorUnmarshaller {
+
+    public TaskAlreadyExistsExceptionUnmarshaller() {
+        super(TaskAlreadyExistsException.class);
+    }
+
+    @Override
+    public boolean match(JsonErrorResponse error) throws Exception {
+        return error.getErrorCode().equals("TaskAlreadyExistsException");
+    }
+
+    @Override
+    public AmazonServiceException unmarshall(JsonErrorResponse error) throws Exception {
+
+        TaskAlreadyExistsException e = (TaskAlreadyExistsException) super.unmarshall(error);
+        e.setErrorCode("TaskAlreadyExistsException");
+
+        return e;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonMarshaller.java
new file mode 100644
index 0000000000..89fc30aefe
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonMarshaller.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO TaskStatisticsForAuditCheck
+ */
+class TaskStatisticsForAuditCheckJsonMarshaller {
+
+    public void marshall(TaskStatisticsForAuditCheck taskStatisticsForAuditCheck,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (taskStatisticsForAuditCheck.getTotalFindingsCount() != null) {
+            Long totalFindingsCount = taskStatisticsForAuditCheck.getTotalFindingsCount();
+            jsonWriter.name("totalFindingsCount");
+            jsonWriter.value(totalFindingsCount);
+        }
+        if (taskStatisticsForAuditCheck.getFailedFindingsCount() != null) {
+            Long failedFindingsCount = taskStatisticsForAuditCheck.getFailedFindingsCount();
+            jsonWriter.name("failedFindingsCount");
+            jsonWriter.value(failedFindingsCount);
+        }
+        if (taskStatisticsForAuditCheck.getSucceededFindingsCount() != null) {
+            Long succeededFindingsCount = taskStatisticsForAuditCheck.getSucceededFindingsCount();
+            jsonWriter.name("succeededFindingsCount");
+            jsonWriter.value(succeededFindingsCount);
+        }
+        if (taskStatisticsForAuditCheck.getSkippedFindingsCount() != null) {
+            Long skippedFindingsCount = taskStatisticsForAuditCheck.getSkippedFindingsCount();
+            jsonWriter.name("skippedFindingsCount");
+            jsonWriter.value(skippedFindingsCount);
+        }
+        if (taskStatisticsForAuditCheck.getCanceledFindingsCount() != null) {
+            Long canceledFindingsCount = taskStatisticsForAuditCheck.getCanceledFindingsCount();
+            jsonWriter.name("canceledFindingsCount");
+            jsonWriter.value(canceledFindingsCount);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static TaskStatisticsForAuditCheckJsonMarshaller instance;
+
+    public static TaskStatisticsForAuditCheckJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new TaskStatisticsForAuditCheckJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonUnmarshaller.java
new file mode 100644
index 0000000000..0fb14a6922
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/TaskStatisticsForAuditCheckJsonUnmarshaller.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO TaskStatisticsForAuditCheck
+ */
+class TaskStatisticsForAuditCheckJsonUnmarshaller implements
+        Unmarshaller<TaskStatisticsForAuditCheck, JsonUnmarshallerContext> {
+
+    public TaskStatisticsForAuditCheck unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        TaskStatisticsForAuditCheck taskStatisticsForAuditCheck = new TaskStatisticsForAuditCheck();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("totalFindingsCount")) {
+                taskStatisticsForAuditCheck.setTotalFindingsCount(LongJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("failedFindingsCount")) {
+                taskStatisticsForAuditCheck.setFailedFindingsCount(LongJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("succeededFindingsCount")) {
+                taskStatisticsForAuditCheck.setSucceededFindingsCount(LongJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("skippedFindingsCount")) {
+                taskStatisticsForAuditCheck.setSkippedFindingsCount(LongJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("canceledFindingsCount")) {
+                taskStatisticsForAuditCheck.setCanceledFindingsCount(LongJsonUnmarshaller
+                        .getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return taskStatisticsForAuditCheck;
+    }
+
+    private static TaskStatisticsForAuditCheckJsonUnmarshaller instance;
+
+    public static TaskStatisticsForAuditCheckJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new TaskStatisticsForAuditCheckJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonMarshaller.java
new file mode 100644
index 0000000000..ca9eb3649e
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO UpdateCACertificateParams
+ */
+class UpdateCACertificateParamsJsonMarshaller {
+
+    public void marshall(UpdateCACertificateParams updateCACertificateParams,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (updateCACertificateParams.getAction() != null) {
+            String action = updateCACertificateParams.getAction();
+            jsonWriter.name("action");
+            jsonWriter.value(action);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static UpdateCACertificateParamsJsonMarshaller instance;
+
+    public static UpdateCACertificateParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateCACertificateParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..bc766e22b8
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateCACertificateParamsJsonUnmarshaller.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO UpdateCACertificateParams
+ */
+class UpdateCACertificateParamsJsonUnmarshaller implements
+        Unmarshaller<UpdateCACertificateParams, JsonUnmarshallerContext> {
+
+    public UpdateCACertificateParams unmarshall(JsonUnmarshallerContext context) throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        UpdateCACertificateParams updateCACertificateParams = new UpdateCACertificateParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("action")) {
+                updateCACertificateParams.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return updateCACertificateParams;
+    }
+
+    private static UpdateCACertificateParamsJsonUnmarshaller instance;
+
+    public static UpdateCACertificateParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateCACertificateParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonMarshaller.java
new file mode 100644
index 0000000000..60ff57adb4
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonMarshaller.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.util.json.AwsJsonWriter;
+
+/**
+ * JSON marshaller for POJO UpdateDeviceCertificateParams
+ */
+class UpdateDeviceCertificateParamsJsonMarshaller {
+
+    public void marshall(UpdateDeviceCertificateParams updateDeviceCertificateParams,
+            AwsJsonWriter jsonWriter) throws Exception {
+        jsonWriter.beginObject();
+        if (updateDeviceCertificateParams.getAction() != null) {
+            String action = updateDeviceCertificateParams.getAction();
+            jsonWriter.name("action");
+            jsonWriter.value(action);
+        }
+        jsonWriter.endObject();
+    }
+
+    private static UpdateDeviceCertificateParamsJsonMarshaller instance;
+
+    public static UpdateDeviceCertificateParamsJsonMarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateDeviceCertificateParamsJsonMarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonUnmarshaller.java
new file mode 100644
index 0000000000..2a4cc567d9
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateDeviceCertificateParamsJsonUnmarshaller.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for POJO UpdateDeviceCertificateParams
+ */
+class UpdateDeviceCertificateParamsJsonUnmarshaller implements
+        Unmarshaller<UpdateDeviceCertificateParams, JsonUnmarshallerContext> {
+
+    public UpdateDeviceCertificateParams unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        AwsJsonReader reader = context.getReader();
+        if (!reader.isContainer()) {
+            reader.skipValue();
+            return null;
+        }
+        UpdateDeviceCertificateParams updateDeviceCertificateParams = new UpdateDeviceCertificateParams();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("action")) {
+                updateDeviceCertificateParams.setAction(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+        return updateDeviceCertificateParams;
+    }
+
+    private static UpdateDeviceCertificateParamsJsonUnmarshaller instance;
+
+    public static UpdateDeviceCertificateParamsJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateDeviceCertificateParamsJsonUnmarshaller();
+        return instance;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionRequestMarshaller.java
new file mode 100644
index 0000000000..a1833df8ae
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionRequestMarshaller.java
@@ -0,0 +1,94 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import static com.amazonaws.util.StringUtils.UTF8;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.OutputStreamWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+
+import com.amazonaws.AmazonClientException;
+import com.amazonaws.Request;
+import com.amazonaws.DefaultRequest;
+import com.amazonaws.http.HttpMethodName;
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.Marshaller;
+import com.amazonaws.util.BinaryUtils;
+import com.amazonaws.util.StringUtils;
+import com.amazonaws.util.StringInputStream;
+import com.amazonaws.util.json.AwsJsonWriter;
+import com.amazonaws.util.json.JsonUtils;
+
+/**
+ * JSON request marshaller for UpdateMitigationActionRequest
+ */
+public class UpdateMitigationActionRequestMarshaller implements
+        Marshaller<Request<UpdateMitigationActionRequest>, UpdateMitigationActionRequest> {
+
+    public Request<UpdateMitigationActionRequest> marshall(
+            UpdateMitigationActionRequest updateMitigationActionRequest) {
+        if (updateMitigationActionRequest == null) {
+            throw new AmazonClientException(
+                    "Invalid argument passed to marshall(UpdateMitigationActionRequest)");
+        }
+
+        Request<UpdateMitigationActionRequest> request = new DefaultRequest<UpdateMitigationActionRequest>(
+                updateMitigationActionRequest, "AWSIot");
+        request.setHttpMethod(HttpMethodName.PATCH);
+
+        String uriResourcePath = "/mitigationactions/actions/{actionName}";
+        uriResourcePath = uriResourcePath.replace(
+                "{actionName}",
+                (updateMitigationActionRequest.getActionName() == null) ? "" : StringUtils
+                        .fromString(updateMitigationActionRequest.getActionName()));
+        request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (updateMitigationActionRequest.getRoleArn() != null) {
+                String roleArn = updateMitigationActionRequest.getRoleArn();
+                jsonWriter.name("roleArn");
+                jsonWriter.value(roleArn);
+            }
+            if (updateMitigationActionRequest.getActionParams() != null) {
+                MitigationActionParams actionParams = updateMitigationActionRequest
+                        .getActionParams();
+                jsonWriter.name("actionParams");
+                MitigationActionParamsJsonMarshaller.getInstance().marshall(actionParams,
+                        jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
+        if (!request.getHeaders().containsKey("Content-Type")) {
+            request.addHeader("Content-Type", "application/x-amz-json-1.0");
+        }
+
+        return request;
+    }
+}
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionResultJsonUnmarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionResultJsonUnmarshaller.java
new file mode 100644
index 0000000000..a781d5920e
--- /dev/null
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/UpdateMitigationActionResultJsonUnmarshaller.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License").
+ * You may not use this file except in compliance with the License.
+ * A copy of the License is located at
+ *
+ *  http://aws.amazon.com/apache2.0
+ *
+ * or in the "license" file accompanying this file. This file is distributed
+ * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
+ * express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+
+package com.amazonaws.services.iot.model.transform;
+
+import com.amazonaws.services.iot.model.*;
+import com.amazonaws.transform.SimpleTypeJsonUnmarshallers.*;
+import com.amazonaws.transform.*;
+import com.amazonaws.util.json.AwsJsonReader;
+
+/**
+ * JSON unmarshaller for response UpdateMitigationActionResult
+ */
+public class UpdateMitigationActionResultJsonUnmarshaller implements
+        Unmarshaller<UpdateMitigationActionResult, JsonUnmarshallerContext> {
+
+    public UpdateMitigationActionResult unmarshall(JsonUnmarshallerContext context)
+            throws Exception {
+        UpdateMitigationActionResult updateMitigationActionResult = new UpdateMitigationActionResult();
+
+        AwsJsonReader reader = context.getReader();
+        reader.beginObject();
+        while (reader.hasNext()) {
+            String name = reader.nextName();
+            if (name.equals("actionArn")) {
+                updateMitigationActionResult.setActionArn(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else if (name.equals("actionId")) {
+                updateMitigationActionResult.setActionId(StringJsonUnmarshaller.getInstance()
+                        .unmarshall(context));
+            } else {
+                reader.skipValue();
+            }
+        }
+        reader.endObject();
+
+        return updateMitigationActionResult;
+    }
+
+    private static UpdateMitigationActionResultJsonUnmarshaller instance;
+
+    public static UpdateMitigationActionResultJsonUnmarshaller getInstance() {
+        if (instance == null)
+            instance = new UpdateMitigationActionResultJsonUnmarshaller();
+        return instance;
+    }
+}
