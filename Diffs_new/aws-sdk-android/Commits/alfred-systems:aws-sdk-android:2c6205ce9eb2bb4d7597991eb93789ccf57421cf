diff --git a/.gitignore b/.gitignore
index 4bac238810..020b04e3ee 100644
--- a/.gitignore
+++ b/.gitignore
@@ -36,6 +36,7 @@ captures/
 
 # IntelliJ
 *.iml
+.idea/
 .idea/workspace.xml
 .idea/tasks.xml
 .idea/gradle.xml
diff --git a/aws-android-sdk-auth-core/src/main/AndroidManifest.xml b/aws-android-sdk-auth-core/src/main/AndroidManifest.xml
index dc65d007c4..f340734cd4 100644
--- a/aws-android-sdk-auth-core/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-core/src/main/AndroidManifest.xml
@@ -2,4 +2,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
 		  package="com.amazonaws.mobile.auth.core">
 
-<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" /></manifest>
+<!--<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" />-->
+</manifest>
diff --git a/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml b/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
index ff6f6eca8a..029a77e1c4 100644
--- a/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
@@ -6,4 +6,5 @@
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
-<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" /></manifest>
+<!--<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" />-->
+</manifest>
diff --git a/aws-android-sdk-auth-google/src/main/AndroidManifest.xml b/aws-android-sdk-auth-google/src/main/AndroidManifest.xml
index 40a3a31289..98011638cb 100644
--- a/aws-android-sdk-auth-google/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-google/src/main/AndroidManifest.xml
@@ -10,4 +10,5 @@
     <uses-permission android:name="android.permission.GET_ACCOUNTS" />
     <uses-permission android:name="android.permission.USE_CREDENTIALS" />
  
-<uses-sdk android:minSdkVersion="23" android:targetSdkVersion="25" /></manifest>
+<!--<uses-sdk android:minSdkVersion="23" android:targetSdkVersion="25" />-->
+</manifest>
diff --git a/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml b/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml
index a62ce74523..58acbd1beb 100644
--- a/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml
@@ -13,5 +13,6 @@
              android:screenOrientation="portrait"
              android:configChanges="keyboard|keyboardHidden|orientation|screenSize"/>
     </application>
-<uses-sdk android:minSdkVersion="23" android:targetSdkVersion="25" /></manifest>
+<!--<uses-sdk android:minSdkVersion="23" android:targetSdkVersion="25" />-->
+</manifest>
 
diff --git a/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml b/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml
index 34c3d4d236..f9408ddd30 100644
--- a/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml
@@ -36,4 +36,5 @@
              android:screenOrientation="portrait"
              android:configChanges="keyboard|keyboardHidden|orientation|screenSize" />
      </application>
-<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" /></manifest>
+<!--<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" />-->
+</manifest>
diff --git a/aws-android-sdk-cognitoauth/src/main/AndroidManifest.xml b/aws-android-sdk-cognitoauth/src/main/AndroidManifest.xml
index 69f0180346..f2964d60e3 100644
--- a/aws-android-sdk-cognitoauth/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-cognitoauth/src/main/AndroidManifest.xml
@@ -5,6 +5,6 @@
  
      <application android:allowBackup="true"/>
 
-     <uses-sdk android:minSdkVersion="15"
-               android:targetSdkVersion="25" />
+     <!--<uses-sdk android:minSdkVersion="15"-->
+               <!--android:targetSdkVersion="25" />-->
  </manifest>
diff --git a/aws-android-sdk-mobile-client/src/main/AndroidManifest.xml b/aws-android-sdk-mobile-client/src/main/AndroidManifest.xml
index 690de1aa4f..0532b99154 100644
--- a/aws-android-sdk-mobile-client/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-mobile-client/src/main/AndroidManifest.xml
@@ -3,8 +3,8 @@
            xmlns:amazon="http://schemas.amazon.com/apk/res/android"
            package="com.amazonaws.mobile.client">
 
-    <uses-sdk android:minSdkVersion="15"
-              android:targetSdkVersion="27"/>
+    <!--<uses-sdk android:minSdkVersion="15"-->
+              <!--android:targetSdkVersion="27"/>-->
 
     <uses-permission android:name="android.permission.INTERNET"/>
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
index ade69e60f0..3ed6454cad 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferNetworkLossHandler.java
@@ -22,12 +22,12 @@
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 
-import com.amazonaws.services.s3.AmazonS3;
-
 import com.amazonaws.logging.Log;
 import com.amazonaws.logging.LogFactory;
+import com.amazonaws.services.s3.AmazonS3;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
 /**
@@ -92,7 +92,7 @@ public static synchronized TransferNetworkLossHandler getInstance(Context contex
      * @return handler object
      * @throws TransferUtilityException when the singleton instance is null.
      */
-    public static synchronized TransferNetworkLossHandler getInstance() 
+    public static synchronized TransferNetworkLossHandler getInstance()
             throws TransferUtilityException {
         if (transferNetworkLossHandler == null) {
             final String errorMessage = "TransferNetworkLossHandler is not created. "
@@ -154,7 +154,7 @@ boolean isNetworkConnected() {
      */
     private synchronized void resumeAllTransfersOnNetworkAvailability() {
         final TransferState[] transferStates = new TransferState[] {
-            TransferState.WAITING_FOR_NETWORK
+                TransferState.WAITING_FOR_NETWORK
         };
 
         LOGGER.debug("Loading transfers from database...");
@@ -209,11 +209,18 @@ private synchronized void resumeAllTransfersOnNetworkAvailability() {
      * Pause all running transfers and set the state to WAITING_FOR_NETWORK.
      */
     private synchronized void pauseAllTransfersDueToNetworkInterruption() {
-        for (final TransferRecord transferRecord : updater.getTransfers().values()) {
+        HashMap<Integer, TransferRecord> map = new HashMap<>();
+        map.putAll(updater.getTransfers());
+
+        for (final TransferRecord transferRecord : map.values()) {
+            if (transferRecord == null) {
+                continue;
+            }
             final AmazonS3 s3 = S3ClientReference.get(transferRecord.id);
-            if (s3 != null && 
-                transferRecord != null && 
-                transferRecord.pauseIfRequiredForNetworkInterruption(s3, updater, connManager)) {
+            if (s3 == null) {
+                continue;
+            }
+            if (transferRecord.pauseIfRequiredForNetworkInterruption(s3, updater, connManager)) {
                 updater.updateState(transferRecord.id, TransferState.WAITING_FOR_NETWORK);
             }
         }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
index 709d69495f..4559e02ef0 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
@@ -19,7 +19,6 @@
 import android.app.Service;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.content.pm.ApplicationInfo;
 import android.net.ConnectivityManager;
 import android.os.Build;
 import android.os.IBinder;
@@ -27,10 +26,6 @@
 import com.amazonaws.logging.Log;
 import com.amazonaws.logging.LogFactory;
 
-import java.io.FileDescriptor;
-import java.io.PrintWriter;
-import java.util.Map;
-
 /**
  * TransferService is limited to the following functionality:
  * Registers a listener with Android OS for network connectivity
@@ -137,14 +132,14 @@ public int onStartCommand(Intent intent, int flags, int startId) {
          * b) An identifier for the ongoing notification c) Flag that determines if the notification
          * needs to be removed when the service is moved out of the foreground state.
          */
-        if (Build.VERSION.SDK_INT >= ANDROID_OREO) {
+        if (Build.VERSION.SDK_INT >= ANDROID_OREO && intent != null) {
             try {
                 synchronized (this) {
                     final Notification userProvidedNotification = (Notification) intent.getParcelableExtra(INTENT_KEY_NOTIFICATION);
                     if (userProvidedNotification != null) {
                         // Get the notification Id from the intent, if it's null, the default notification Id will be returned.
                         ongoingNotificationId = (int) intent.getIntExtra(INTENT_KEY_NOTIFICATION_ID, ongoingNotificationId);
-                        
+
                         // Get removeNotification from the intent, if it's null, removeNotification will be returned.
                         removeNotification = (boolean) intent.getBooleanExtra(INTENT_KEY_REMOVE_NOTIFICATION, removeNotification);
 
@@ -153,7 +148,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                         startForeground(ongoingNotificationId, userProvidedNotification);
                     } else {
                         LOGGER.error("No notification is passed in the intent. "
-                            + "Unable to transition to foreground.");
+                                + "Unable to transition to foreground.");
                     }
                 }
             } catch (Exception ex) {
@@ -217,21 +212,4 @@ public void onDestroy() {
         super.onDestroy();
     }
 
-    @Override
-    protected void dump(FileDescriptor fd, PrintWriter writer, String[] args) {
-        // only available when the application is debuggable
-        if ((getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) == 0) {
-            return;
-        }
-
-        writer.printf("network status: %s\n", transferNetworkLossHandler.isNetworkConnected());
-        final Map<Integer, TransferRecord> transfers = TransferStatusUpdater.getInstance(this).getTransfers();
-        writer.printf("# of active transfers: %d\n", transfers.size());
-        for (final TransferRecord transfer : transfers.values()) {
-            writer.printf("bucket: %s, key: %s, status: %s, total size: %d, current: %d\n",
-                    transfer.bucketName, transfer.key, transfer.state, transfer.bytesTotal,
-                    transfer.bytesCurrent);
-        }
-        writer.flush();
-    }
 }
