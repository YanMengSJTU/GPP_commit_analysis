diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
index 6036367272..6200dfcb8e 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferService.java
@@ -323,7 +323,7 @@ void execCommand(Intent intent) {
                      * @Anchorer
                      * while resuming a transfer, if the transfer is null, create a new one, and trigger a state callback instantly. (for UI display)
                      */
-                    updater.updateState(id, transfer.state);
+                    updater.triggerStateChangeCallback(id, transfer.state);
                 } else {
                     LOGGER.error("Can't find transfer: " + id);
                 }
diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
index 6c99378751..208aa90fac 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferStatusUpdater.java
@@ -188,6 +188,30 @@ public void run() {
         });
     }
 
+    /**
+     * Trigger onStateChanged Callback for specific transfer
+     * @param id    Transfer id
+     * @param newState  new state
+     */
+    void triggerStateChangeCallback(final int id, final TransferState newState) {
+        final List<TransferListener> list = LISTENERS.get(id);
+        if (list == null || list.isEmpty()) {
+            return;
+        }
+
+        mainHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                for (final TransferListener l : list) {
+                    l.onStateChanged(id, newState);
+                }
+                if (TransferState.COMPLETED.equals(newState)) {
+                    list.clear();
+                }
+            }
+        });
+    }
+
     /**
      * Updates the transfer progress of a transfer. It will trigger
      * {@link TransferListener#onProgressChanged(int, long, long)} of associated
