diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
index 5f5b9d2f60..852f05c040 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/CreateTopicRuleRequestMarshaller.java
@@ -60,6 +60,27 @@
                 (createTopicRuleRequest.getRuleName() == null) ? "" : StringUtils
                         .fromString(createTopicRuleRequest.getRuleName()));
         request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (createTopicRuleRequest.getTopicRulePayload() != null) {
+                TopicRulePayload topicRulePayload = createTopicRuleRequest.getTopicRulePayload();
+                jsonWriter.name("topicRulePayload");
+                TopicRulePayloadJsonMarshaller.getInstance().marshall(topicRulePayload, jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
         try {
             StringWriter stringWriter = new StringWriter();
             AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceTopicRuleRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceTopicRuleRequestMarshaller.java
index 9dfbdb1794..c1577ad312 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceTopicRuleRequestMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/ReplaceTopicRuleRequestMarshaller.java
@@ -56,6 +56,27 @@
                 (replaceTopicRuleRequest.getRuleName() == null) ? "" : StringUtils
                         .fromString(replaceTopicRuleRequest.getRuleName()));
         request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (replaceTopicRuleRequest.getTopicRulePayload() != null) {
+                TopicRulePayload topicRulePayload = replaceTopicRuleRequest.getTopicRulePayload();
+                jsonWriter.name("topicRulePayload");
+                TopicRulePayloadJsonMarshaller.getInstance().marshall(topicRulePayload, jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
         try {
             StringWriter stringWriter = new StringWriter();
             AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
diff --git a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SetLoggingOptionsRequestMarshaller.java b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SetLoggingOptionsRequestMarshaller.java
index c25054b534..fabd103879 100644
--- a/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SetLoggingOptionsRequestMarshaller.java
+++ b/aws-android-sdk-iot/src/main/java/com/amazonaws/services/iot/model/transform/SetLoggingOptionsRequestMarshaller.java
@@ -53,6 +53,29 @@
 
         String uriResourcePath = "/loggingOptions";
         request.setResourcePath(uriResourcePath);
+        try {
+            StringWriter stringWriter = new StringWriter();
+            AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
+            jsonWriter.beginObject();
+
+            if (setLoggingOptionsRequest.getLoggingOptionsPayload() != null) {
+                LoggingOptionsPayload loggingOptionsPayload = setLoggingOptionsRequest
+                        .getLoggingOptionsPayload();
+                jsonWriter.name("loggingOptionsPayload");
+                LoggingOptionsPayloadJsonMarshaller.getInstance().marshall(loggingOptionsPayload,
+                        jsonWriter);
+            }
+
+            jsonWriter.endObject();
+            jsonWriter.close();
+            String snippet = stringWriter.toString();
+            byte[] content = snippet.getBytes(UTF8);
+            request.setContent(new StringInputStream(snippet));
+            request.addHeader("Content-Length", Integer.toString(content.length));
+        } catch (Throwable t) {
+            throw new AmazonClientException(
+                    "Unable to marshall request to JSON: " + t.getMessage(), t);
+        }
         try {
             StringWriter stringWriter = new StringWriter();
             AwsJsonWriter jsonWriter = JsonUtils.getJsonWriter(stringWriter);
