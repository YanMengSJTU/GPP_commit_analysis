diff --git a/library/src/main/src/com/androidsocialnetworks/lib/SocialNetwork.java b/library/src/main/src/com/androidsocialnetworks/lib/SocialNetwork.java
index df35832..89f5563 100644
--- a/library/src/main/src/com/androidsocialnetworks/lib/SocialNetwork.java
+++ b/library/src/main/src/com/androidsocialnetworks/lib/SocialNetwork.java
@@ -137,6 +137,10 @@ public void requestPostMessage(String message) {
 		requestPostMessage(message, null);
 	}
 
+	public void requestPostMessageWithLink(String message, String link, OnPostingCompleteListener onPostingCompleteListener) {
+		registerListener(REQUEST_POST_MESSAGE, onPostingCompleteListener);
+	}
+
 	public void requestPostMessage(String message, OnPostingCompleteListener onPostingCompleteListener) {
 		registerListener(REQUEST_POST_MESSAGE, onPostingCompleteListener);
 	}
diff --git a/library/src/main/src/com/androidsocialnetworks/lib/impl/FacebookSocialNetwork.java b/library/src/main/src/com/androidsocialnetworks/lib/impl/FacebookSocialNetwork.java
index 5861ba9..dac2aca 100644
--- a/library/src/main/src/com/androidsocialnetworks/lib/impl/FacebookSocialNetwork.java
+++ b/library/src/main/src/com/androidsocialnetworks/lib/impl/FacebookSocialNetwork.java
@@ -22,6 +22,7 @@
 import com.androidsocialnetworks.lib.listener.OnRequestSocialPersonCompleteListener;
 import com.facebook.FacebookAuthorizationException;
 import com.facebook.FacebookOperationCanceledException;
+import com.facebook.HttpMethod;
 import com.facebook.Request;
 import com.facebook.Response;
 import com.facebook.Session;
@@ -48,6 +49,7 @@
 	private SessionState mSessionState;
 	private String mPhotoPath;
 	private String mStatus;
+	private String mLink;
 	private PendingAction mPendingAction = PendingAction.NONE;
 	private Session.StatusCallback mSessionStatusCallback = new StatusCallback() {
 		@Override
@@ -168,6 +170,14 @@ public void requestPostMessage(String message, OnPostingCompleteListener onPosti
 		performPublish(PendingAction.POST_STATUS_UPDATE);
 	}
 
+	@Override
+	public void requestPostMessageWithLink(String message, String link, OnPostingCompleteListener onPostingCompleteListener) {
+		super.requestPostMessage(message, onPostingCompleteListener);
+		mStatus = message;
+		mLink = link;
+		performPublish(PendingAction.POST_LINK);
+	}
+
 	@Override
 	public void requestPostPhoto(File photo, String message, OnPostingCompleteListener onPostingCompleteListener) {
 		super.requestPostPhoto(photo, message, onPostingCompleteListener);
@@ -339,6 +349,27 @@ private void handlePendingAction() {
 		case POST_STATUS_UPDATE:
 			postStatusUpdate(mStatus);
 			break;
+		case POST_LINK:
+			postStatusUpdateWithLink(mStatus, mLink);
+			break;
+		}
+	}
+
+	private void postStatusUpdateWithLink(String message, String link) {
+		if (isConnected() && hasPublishPermission()) {
+			Bundle b = new Bundle(2);
+			b.putString("message", message);
+			b.putString("link", link);
+			Request request = new Request(Session.getActiveSession(), "me/feed", b, HttpMethod.POST);
+			request.setCallback(new Request.Callback() {
+				@Override
+				public void onCompleted(Response response) {
+					publishSuccess(REQUEST_POST_MESSAGE, response.getError() == null ? null : response.getError().getErrorMessage());
+				}
+			});
+			request.executeAsync();
+		} else {
+			mPendingAction = PendingAction.POST_LINK;
 		}
 	}
 
@@ -386,6 +417,6 @@ private void publishSuccess(String requestID, String error) {
 	}
 
 	private enum PendingAction {
-		NONE, POST_PHOTO, POST_STATUS_UPDATE
+		NONE, POST_PHOTO, POST_STATUS_UPDATE, POST_LINK
 	}
 }
diff --git a/library/src/main/src/com/androidsocialnetworks/lib/impl/TwitterSocialNetwork.java b/library/src/main/src/com/androidsocialnetworks/lib/impl/TwitterSocialNetwork.java
index cef6ef3..5fe8b42 100644
--- a/library/src/main/src/com/androidsocialnetworks/lib/impl/TwitterSocialNetwork.java
+++ b/library/src/main/src/com/androidsocialnetworks/lib/impl/TwitterSocialNetwork.java
@@ -140,6 +140,11 @@ public void requestSocialPerson(String userID, OnRequestSocialPersonCompleteList
 		executeRequest(new RequestGetPersonAsyncTask(), args, REQUEST_GET_PERSON);
 	}
 
+	@Override
+	public void requestPostMessageWithLink(String message, String link, OnPostingCompleteListener onPostingCompleteListener) {
+		requestPostMessage(message, onPostingCompleteListener);
+	}
+
 	@Override
 	public void requestPostMessage(String message, OnPostingCompleteListener onPostingCompleteListener) {
 		super.requestPostMessage(message, onPostingCompleteListener);
