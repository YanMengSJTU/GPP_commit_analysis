diff --git a/sample-app-subscriptions/build.gradle b/sample-app-subscriptions/build.gradle
new file mode 100644
index 00000000..d893f87f
--- /dev/null
+++ b/sample-app-subscriptions/build.gradle
@@ -0,0 +1,30 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion rootProject.ext.compileSdkVersion
+    buildToolsVersion rootProject.ext.buildToolsVersion
+
+    defaultConfig {
+        minSdkVersion rootProject.ext.minSdkVersion
+        targetSdkVersion rootProject.ext.targetSdkVersion
+        versionCode 1
+        versionName '1.0'
+    }
+
+    lintOptions {
+        lintConfig file('lint.xml')
+    }
+    
+    compileOptions {
+        sourceCompatibility rootProject.ext.sourceCompatibility
+        targetCompatibility rootProject.ext.sourceCompatibility
+    }
+}
+
+repositories {
+    mavenCentral()
+}
+
+dependencies {
+    compile project(':rxandroid-subscriptions')
+}
diff --git a/sample-app-subscriptions/lint.xml b/sample-app-subscriptions/lint.xml
new file mode 100644
index 00000000..71962854
--- /dev/null
+++ b/sample-app-subscriptions/lint.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<lint>
+    <!--
+        Since this is just a sample app, there are a number of minor
+        lint checks that really don't matter.
+    -->
+
+    <issue id="IconMissingDensityFolder" severity="ignore" />
+    <issue id="HardcodedText" severity="ignore" />
+</lint>
\ No newline at end of file
diff --git a/sample-app-subscriptions/src/main/AndroidManifest.xml b/sample-app-subscriptions/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..212b8cb2
--- /dev/null
+++ b/sample-app-subscriptions/src/main/AndroidManifest.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="rx.android.samples.subscriptions" >
+
+    <application
+        android:allowBackup="true"
+        android:icon="@drawable/ic_launcher"
+        android:theme="@style/AppTheme"
+        android:label="@string/app_name">
+
+        <activity android:name="rx.android.samples.AutoUnsubscribeActivity"
+                  android:label="Rx Sample">
+
+            <intent-filter>
+                <category android:name="android.intent.category.LAUNCHER"/>
+                <category android:name="android.intent.category.DEFAULT"/>
+                <action android:name="android.intent.action.MAIN"/>
+            </intent-filter>
+        </activity>
+
+    </application>
+
+</manifest>
diff --git a/sample-app-subscriptions/src/main/java/rx/android/samples/AutoUnsubscribeActivity.java b/sample-app-subscriptions/src/main/java/rx/android/samples/AutoUnsubscribeActivity.java
new file mode 100644
index 00000000..16fc2dc1
--- /dev/null
+++ b/sample-app-subscriptions/src/main/java/rx/android/samples/AutoUnsubscribeActivity.java
@@ -0,0 +1,113 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package rx.android.samples;
+
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.HandlerThread;
+import android.util.Log;
+import android.widget.TextView;
+
+import rx.Observable;
+import rx.Subscriber;
+import rx.Subscription;
+import rx.android.lifecycle.LifecycleEvent;
+import rx.android.samples.subscriptions.R;
+import rx.android.schedulers.HandlerScheduler;
+import rx.exceptions.OnErrorThrowable;
+
+import static android.os.Process.THREAD_PRIORITY_BACKGROUND;
+
+public class AutoUnsubscribeActivity extends RxActivity {
+    private static final String TAG = AutoUnsubscribeActivity.class.getSimpleName();
+
+    private Handler backgroundHandler;
+    private TextView textView;
+    private Subscription subscription;
+
+    @Override protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.main_activity);
+        BackgroundThread backgroundThread = new BackgroundThread();
+        backgroundThread.start();
+        backgroundHandler = new Handler(backgroundThread.getLooper());
+        textView = (TextView) findViewById(R.id.scheduler_example);
+    }
+
+    @Override protected void onStart() {
+        super.onStart();
+        subscription = subscriptions().with(neverEnding())
+                .subscribeOn(HandlerScheduler.from(backgroundHandler))
+                        // Observe until Stop
+                .observeUntil(LifecycleEvent.STOP)
+                        // Be notified on the main thread
+                .observeOnMainThread()
+                .subscribe(new Subscriber<String>() {
+                    @Override public void onCompleted() {
+                        Log.d(TAG, "onCompleted()");
+                    }
+
+                    @Override public void onError(Throwable e) {
+                        Log.e(TAG, "onError()", e);
+                    }
+
+                    @Override public void onNext(String string) {
+                        textView.setText(string);
+                    }
+                });
+    }
+
+    @Override protected void onPause() {
+        super.onPause();
+        // Should still be subscribed
+        Log.d(TAG, "onPause unsubscribed? " + subscription.isUnsubscribed());
+    }
+
+    @Override protected void onStop() {
+        super.onStop();
+        // Should be unsubscribed
+        Log.d(TAG, "onStop unsubscribed? " + subscription.isUnsubscribed());
+    }
+
+    @Override protected void onDestroy() {
+        super.onDestroy();
+        backgroundHandler.getLooper().quit();
+    }
+
+    static Observable<String> neverEnding() {
+        return Observable.create(new Observable.OnSubscribe<String>() {
+            @Override public void call(Subscriber<? super String> subscriber) {
+                // Do a bunch of stuff until unsubscribed
+                for (int i = 0; ; i++) {
+                    try {
+                        Thread.sleep(200);
+                    } catch (InterruptedException e) {
+                        throw OnErrorThrowable.from(e);
+                    }
+                    subscriber.onNext(Integer.toString(i));
+                    if (subscriber.isUnsubscribed()) {
+                        break;
+                    }
+                }
+                Log.d(TAG, "unsubscribed. breaking out");
+            }
+        });
+    }
+
+    static class BackgroundThread extends HandlerThread {
+        BackgroundThread() {
+            super("SchedulerSample-BackgroundThread", THREAD_PRIORITY_BACKGROUND);
+        }
+    }
+}
diff --git a/sample-app-subscriptions/src/main/java/rx/android/samples/RxActivity.java b/sample-app-subscriptions/src/main/java/rx/android/samples/RxActivity.java
new file mode 100644
index 00000000..abf4f2de
--- /dev/null
+++ b/sample-app-subscriptions/src/main/java/rx/android/samples/RxActivity.java
@@ -0,0 +1,85 @@
+/*
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package rx.android.samples;
+
+import android.os.Bundle;
+
+import rx.Observable;
+import rx.android.lifecycle.LifecycleEvent;
+import rx.android.lifecycle.LifecycleProducer;
+import rx.android.lifecycle.LifecycleSubscriptions;
+
+/**
+ * An Activity with reactive extensions.
+ */
+public class RxActivity extends android.app.Activity {
+
+    private final LifecycleProducer producer = LifecycleProducer.create();
+    private final LifecycleSubscriptions subscriptions;
+
+    public RxActivity() {
+        this.subscriptions = createSubscriptions();
+        if (!subscriptions.setProducer(producer)) {
+            throw new IllegalStateException("subclass must not set producer");
+        }
+    }
+
+    protected LifecycleSubscriptions createSubscriptions() {
+        return LifecycleSubscriptions.observeActivity();
+    }
+
+    public LifecycleSubscriptions subscriptions() {
+        return subscriptions;
+    }
+
+    public Observable<LifecycleEvent> lifecycle() {
+        return producer.asObservable();
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        producer.onCreate();
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+        producer.onStart();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        producer.onResume();
+    }
+
+    @Override
+    protected void onPause() {
+        producer.onPause();
+        super.onPause();
+    }
+
+    @Override
+    protected void onStop() {
+        producer.onStop();
+        super.onStop();
+    }
+
+    @Override
+    protected void onDestroy() {
+        producer.onDestroy();
+        super.onDestroy();
+    }
+}
diff --git a/sample-app-subscriptions/src/main/res/drawable-hdpi/ic_launcher.png b/sample-app-subscriptions/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 00000000..96a442e5
Binary files /dev/null and b/sample-app-subscriptions/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/sample-app-subscriptions/src/main/res/drawable-mdpi/ic_launcher.png b/sample-app-subscriptions/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 00000000..359047df
Binary files /dev/null and b/sample-app-subscriptions/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/sample-app-subscriptions/src/main/res/drawable-xhdpi/ic_launcher.png b/sample-app-subscriptions/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 00000000..71c6d760
Binary files /dev/null and b/sample-app-subscriptions/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/sample-app-subscriptions/src/main/res/drawable-xxhdpi/ic_launcher.png b/sample-app-subscriptions/src/main/res/drawable-xxhdpi/ic_launcher.png
new file mode 100644
index 00000000..4df18946
Binary files /dev/null and b/sample-app-subscriptions/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/sample-app-subscriptions/src/main/res/layout/main_activity.xml b/sample-app-subscriptions/src/main/res/layout/main_activity.xml
new file mode 100644
index 00000000..7c550246
--- /dev/null
+++ b/sample-app-subscriptions/src/main/res/layout/main_activity.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin">
+
+    <TextView
+        android:id="@+id/scheduler_example"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Run Schedulers Example"
+        />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/sample-app-subscriptions/src/main/res/values-w820dp/dimens.xml b/sample-app-subscriptions/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 00000000..63fc8164
--- /dev/null
+++ b/sample-app-subscriptions/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/sample-app-subscriptions/src/main/res/values/dimens.xml b/sample-app-subscriptions/src/main/res/values/dimens.xml
new file mode 100644
index 00000000..a0171a70
--- /dev/null
+++ b/sample-app-subscriptions/src/main/res/values/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+
+    </resources>
diff --git a/sample-app-subscriptions/src/main/res/values/strings.xml b/sample-app-subscriptions/src/main/res/values/strings.xml
new file mode 100644
index 00000000..14f8420c
--- /dev/null
+++ b/sample-app-subscriptions/src/main/res/values/strings.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="app_name">RxJava Android Samples</string>
+
+</resources>
diff --git a/sample-app-subscriptions/src/main/res/values/styles.xml b/sample-app-subscriptions/src/main/res/values/styles.xml
new file mode 100644
index 00000000..b07e6794
--- /dev/null
+++ b/sample-app-subscriptions/src/main/res/values/styles.xml
@@ -0,0 +1,12 @@
+<resources>
+
+    <style name="AppTheme" parent="android:Theme.Holo.Light">
+        <item name="android:textViewStyle">@style/TextViewStyle</item>
+
+    </style>
+
+    <style name="TextViewStyle" parent="android:Widget.TextView">
+        <item name="android:textAppearance">@android:style/TextAppearance.DeviceDefault.Large</item>
+    </style>
+
+</resources>
diff --git a/settings.gradle b/settings.gradle
index 2bffa65b..27ebb5dd 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,4 @@
 rootProject.name='rxandroid-root'
 
 include ':rxandroid', ':rxandroid-subscriptions'
-include ':sample-app'
+include ':sample-app', ':sample-app-subscriptions'
