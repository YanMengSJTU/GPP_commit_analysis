diff --git a/rxandroid/src/main/java/rx/android/schedulers/AndroidSchedulers.java b/rxandroid/src/main/java/rx/android/schedulers/AndroidSchedulers.java
index aed23edc..d1605d58 100644
--- a/rxandroid/src/main/java/rx/android/schedulers/AndroidSchedulers.java
+++ b/rxandroid/src/main/java/rx/android/schedulers/AndroidSchedulers.java
@@ -18,6 +18,7 @@
 
 import rx.Scheduler;
 import rx.android.plugins.RxAndroidPlugins;
+import rx.schedulers.Schedulers;
 
 /** Android-specific Schedulers. */
 public final class AndroidSchedulers {
@@ -39,9 +40,27 @@ public static Scheduler mainThread() {
         return scheduler != null ? scheduler : MainThreadSchedulerHolder.MAIN_THREAD_SCHEDULER;
     }
 
+    /**
+     * A {@link Scheduler} which executes actions on the current thread
+     */
     public static Scheduler currentThread() {
         Scheduler scheduler =
                 RxAndroidPlugins.getInstance().getSchedulersHook().getCurrentThreadScheduler();
-        return scheduler != null ? scheduler : new HandlerScheduler(new Handler(Looper.myLooper()));
+        return scheduler != null ? scheduler : getCurrentThreadScheduler();
+    }
+
+    /**
+     * {@link HandlerScheduler} if looper is initialized for current thread,
+     * {@link Schedulers#trampoline()} otherwise
+     */
+    private static Scheduler getCurrentThreadScheduler() {
+        Looper myLooper = Looper.myLooper();
+        if(myLooper == null) {
+            return Schedulers.trampoline();
+        } else if(myLooper == Looper.getMainLooper()) {
+            return MainThreadSchedulerHolder.MAIN_THREAD_SCHEDULER;
+        } else {
+            return new HandlerScheduler(new Handler(myLooper));
+        }
     }
 }
