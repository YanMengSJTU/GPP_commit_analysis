diff --git a/sample-app/build.gradle b/sample-app/build.gradle
index c1d05969..f69ecae7 100644
--- a/sample-app/build.gradle
+++ b/sample-app/build.gradle
@@ -27,4 +27,9 @@ repositories {
 
 dependencies {
     compile project(':rxandroid')
+    compile files('src/main/libs/okhttp-2.3.0.jar')
+    compile files('src/main/libs/okio-1.4.0.jar')
+    compile files('src/main/libs/stetho-1.1.0.jar')
+    compile files('src/main/libs/stetho-okhttp-1.1.1.jar')
+    compile files('src/main/libs/commons-cli-1.2.jar')
 }
diff --git a/sample-app/src/main/AndroidManifest.xml b/sample-app/src/main/AndroidManifest.xml
index cd569f0e..9fcded0d 100644
--- a/sample-app/src/main/AndroidManifest.xml
+++ b/sample-app/src/main/AndroidManifest.xml
@@ -2,10 +2,14 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="rx.android.samples" >
 
+   <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+
     <application
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:theme="@style/AppTheme"
+        android:name=".MyApp"
         android:label="@string/app_name">
 
         <activity android:name=".MainActivity"
diff --git a/sample-app/src/main/java/rx/android/samples/MainActivity.java b/sample-app/src/main/java/rx/android/samples/MainActivity.java
index 7052fbba..d83a2f52 100644
--- a/sample-app/src/main/java/rx/android/samples/MainActivity.java
+++ b/sample-app/src/main/java/rx/android/samples/MainActivity.java
@@ -4,19 +4,24 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.HandlerThread;
-import android.os.Message;
+
 import android.util.Log;
 import android.view.View;
 
 import java.util.concurrent.TimeUnit;
 
 import rx.Observable;
+import rx.Scheduler;
 import rx.Subscriber;
+
+import rx.android.samples.http.OkHttp;
 import rx.android.schedulers.AndroidSchedulers;
 import rx.android.schedulers.HandlerScheduler;
 import rx.exceptions.OnErrorThrowable;
 import rx.functions.Action1;
 import rx.functions.Func0;
+import rx.functions.Func1;
+import rx.schedulers.Schedulers;
 
 import static android.os.Process.THREAD_PRIORITY_BACKGROUND;
 
@@ -35,14 +40,21 @@
         BackgroundThread backgroundThread = new BackgroundThread();
         backgroundThread.start();
         backgroundHandler = new Handler(backgroundThread.getLooper());
-        Handler   testHandle = new Handler(){
 
-        };
-        mObservable.subscribeOn(AndroidSchedulers.mainThread())
-                    .observeOn(AndroidSchedulers.mainThread()).subscribe(mSubscriber);
+        mObservable.subscribeOn(Schedulers.io())
+                .observeOn(AndroidSchedulers.mainThread())
+                .map(new Func1<String, Integer>() {
+                    @Override
+                    public Integer call(String s) {
+                        System.out.println("call="+s);
+                        return Integer.parseInt(s);
+                    }
+                })
+                .subscribe(mSubscriber);
 
         findViewById(R.id.scheduler_example).setOnClickListener(new View.OnClickListener() {
-            @Override public void onClick(View v) {
+            @Override
+            public void onClick(View v) {
                 onRunSchedulerExampleButtonClicked();
             }
         });
@@ -94,14 +106,17 @@ void onRunSchedulerExampleButtonClicked() {
     Observable<String>   mObservable = Observable.create(new Observable.OnSubscribe<String>() {
         @Override
         public void call(Subscriber<? super String> subscriber) {
-             subscriber.onNext("测试完了");
-             System.out.println("线程：" + Thread.currentThread().getId());
-             subscriber.onCompleted();
+            subscriber.onNext("123");
+            System.out.println("线程1：" + Thread.currentThread().getId());
+
+
+            OkHttp.downFile("http://114.215.108.130/EIMSKFB/rootImage/waterMeter/objectEntity/1242/objectVideo/141video9070120150723154414710.mp4",subscriber);
+
         }
     }) ;
 
 
-    Subscriber<String>  mSubscriber  =  new Subscriber<String>() {
+    Subscriber<Integer>  mSubscriber  =  new Subscriber<Integer>() {
         @Override
         public void onCompleted() {
             System.out.println("onCompleted");
@@ -113,8 +128,8 @@ public void onError(Throwable e) {
         }
 
         @Override
-        public void onNext(String s) {
-            System.out.println("线程："+Thread.currentThread().getId());
+        public void onNext(Integer s) {
+            System.out.println("线程2："+Thread.currentThread().getId());
            System.out.println(s);
         }
     };
diff --git a/sample-app/src/main/java/rx/android/samples/MyApp.java b/sample-app/src/main/java/rx/android/samples/MyApp.java
new file mode 100644
index 00000000..48b70ae8
--- /dev/null
+++ b/sample-app/src/main/java/rx/android/samples/MyApp.java
@@ -0,0 +1,25 @@
+package rx.android.samples;
+
+import android.app.Application;
+
+import com.facebook.stetho.Stetho;
+
+/**
+ *  
+ * User: Geek_Soledad(msdx.android@qq.com) 
+ * Date: 2015-07-24 
+ * Time: 11:31 
+ *  
+ */
+public class MyApp  extends Application{
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        System.out.println("MyApp--->>>>>");
+        Stetho.initialize(Stetho.newInitializerBuilder(this).
+                enableDumpapp(Stetho.defaultDumperPluginsProvider(this))
+                .enableWebKitInspector(Stetho.defaultInspectorModulesProvider(this)).build());
+
+    }
+}
diff --git a/sample-app/src/main/java/rx/android/samples/http/OkHttp.java b/sample-app/src/main/java/rx/android/samples/http/OkHttp.java
new file mode 100644
index 00000000..4d4c0c33
--- /dev/null
+++ b/sample-app/src/main/java/rx/android/samples/http/OkHttp.java
@@ -0,0 +1,122 @@
+package rx.android.samples.http;
+
+import android.os.Environment;
+
+import com.facebook.stetho.okhttp.StethoInterceptor;
+import com.squareup.okhttp.Callback;
+import com.squareup.okhttp.OkHttpClient;
+import com.squareup.okhttp.Request;
+import com.squareup.okhttp.RequestBody;
+import com.squareup.okhttp.Response;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.lang.reflect.Field;
+import java.util.UUID;
+
+import rx.Observable;
+import rx.Subscriber;
+
+/**
+ *  
+ * User: Geek_Soledad(msdx.android@qq.com) 
+ * Date: 2015-07-24 
+ * Time: 11:27 
+ *
+ */
+public class OkHttp {
+
+      public static OkHttpClient mOkHttpClient = null;
+
+    public static final int minTime = 15;
+    public static final int maxTime = 45;
+
+    static {
+        mOkHttpClient = new OkHttpClient();
+
+        mOkHttpClient.networkInterceptors().add(new StethoInterceptor());
+
+    }
+
+
+    public static void doPost(RequestBody requestBody, String url
+                            ) {
+
+        Request request = new Request.Builder().url(url).post(requestBody)
+                .build();
+
+        Response response;
+        try {
+            response = mOkHttpClient.newCall(request).execute();
+            int  requestcode = response.code();
+            if (response.isSuccessful()) {
+                try {
+                    JSONObject resultJsonObject = new JSONObject(response.body().string());
+
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+
+            }
+        } catch (IOException e) {
+
+            e.printStackTrace();
+
+        }
+
+    }
+
+
+    public  static    String  getUuid(){
+        UUID  uuid = UUID.randomUUID();
+        return  uuid.toString();
+    }
+
+
+    public   static     void   downFile(final String  url,final  Subscriber<? super String> subscriber){
+        Request   request = new Request.Builder().tag(getUuid()).url(url).build();
+        mOkHttpClient.newCall(request).enqueue(new Callback() {
+            @Override
+            public void onFailure(Request request, IOException e) {
+
+            }
+
+            @Override
+            public void onResponse(Response response) throws IOException {
+                   if(response.isSuccessful()){
+                       File   file  =  new File(Environment.getExternalStorageDirectory().getAbsolutePath()+File.separator+"temp");
+
+                       String filename = url.substring(url.lastIndexOf('/') + 1, url.length());
+                      File  downloadFile = new File(file.getAbsolutePath()+File.separator+filename);
+                       FileOutputStream   buffer = new FileOutputStream(downloadFile);
+                       InputStream instream  = response.body().byteStream();
+                       try {
+                           if(null != instream){
+                               byte[] tmp = new byte[BUFFER_SIZE];
+                               int l, count = 0;
+                               // do not send messages if request has been cancelled
+                               while ((l = instream.read(tmp)) != -1 && !Thread.currentThread().isInterrupted()) {
+                                   count += l;
+                                   buffer.write(tmp, 0, l);
+
+                               }
+                               subscriber.onNext("12233");
+                           }
+                       } catch (IOException e) {
+                           subscriber.onError(e);
+                           e.printStackTrace();
+                       }
+
+                   }
+            }
+        });
+    }
+    protected static final int BUFFER_SIZE = 4096;
+
+}
+
diff --git a/sample-app/src/main/libs/commons-cli-1.2.jar b/sample-app/src/main/libs/commons-cli-1.2.jar
new file mode 100644
index 00000000..ce4b9fff
Binary files /dev/null and b/sample-app/src/main/libs/commons-cli-1.2.jar differ
diff --git a/sample-app/src/main/libs/okhttp-2.3.0.jar b/sample-app/src/main/libs/okhttp-2.3.0.jar
new file mode 100644
index 00000000..56696223
Binary files /dev/null and b/sample-app/src/main/libs/okhttp-2.3.0.jar differ
diff --git a/sample-app/src/main/libs/okio-1.4.0.jar b/sample-app/src/main/libs/okio-1.4.0.jar
new file mode 100644
index 00000000..e41569b4
Binary files /dev/null and b/sample-app/src/main/libs/okio-1.4.0.jar differ
diff --git a/sample-app/src/main/libs/stetho-1.1.0.jar b/sample-app/src/main/libs/stetho-1.1.0.jar
new file mode 100644
index 00000000..c2785bf9
Binary files /dev/null and b/sample-app/src/main/libs/stetho-1.1.0.jar differ
diff --git a/sample-app/src/main/libs/stetho-okhttp-1.1.1.jar b/sample-app/src/main/libs/stetho-okhttp-1.1.1.jar
new file mode 100644
index 00000000..2b934415
Binary files /dev/null and b/sample-app/src/main/libs/stetho-okhttp-1.1.1.jar differ
