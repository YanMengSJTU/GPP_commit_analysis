diff --git a/DaoGenerator/src-generator-testentities/de/greenrobot/daogenerator/gentest/TestDaoGenerator.java b/DaoGenerator/src-generator-testentities/de/greenrobot/daogenerator/gentest/TestDaoGenerator.java
index 434cf50a..41487a1c 100644
--- a/DaoGenerator/src-generator-testentities/de/greenrobot/daogenerator/gentest/TestDaoGenerator.java
+++ b/DaoGenerator/src-generator-testentities/de/greenrobot/daogenerator/gentest/TestDaoGenerator.java
@@ -212,8 +212,9 @@ protected void createExtendsImplements() {
         Entity entity = schema.addEntity("ExtendsImplementsEntity");
         entity.addIdProperty();
         entity.addStringProperty("text");
-        entity.setSuperclass("TestSuperclass");
-        entity.implementsInterface("TestInterface");
+        entity.setSuperclass("Object");
+//        entity.setSuperclass("TestSuperclass");
+//        entity.implementsInterface("TestInterface");
         entity.implementsSerializable();
     }
 
diff --git a/DaoGenerator/src-template/dao-unit-test.ftl b/DaoGenerator/src-template/dao-unit-test.ftl
index 376cf431..4dd67a57 100644
--- a/DaoGenerator/src-template/dao-unit-test.ftl
+++ b/DaoGenerator/src-template/dao-unit-test.ftl
@@ -32,6 +32,14 @@ import ${entity.javaPackageDao}.${entity.classNameDao};
 public class ${entity.classNameTest} extends <#if
 isStringPK>AbstractDaoTestStringPk<${entity.classNameDao}, ${entity.className}><#else>AbstractDaoTestLongPk<${entity.classNameDao}, ${entity.className}></#if> {
 
+	<#list entity.properties as property>
+	<#if property.notNull>
+	<#if property.propertyName != entity.pkProperty.propertyName>
+	private ${property.javaType} ${property.propertyName};
+	</#if>
+	</#if>
+	</#list>
+	
     public ${entity.classNameTest}() {
         super(${entity.classNameDao}.class);
     }
@@ -42,12 +50,14 @@ isStringPK>AbstractDaoTestStringPk<${entity.classNameDao}, ${entity.className}><
 <#if entity.pkProperty??>
         entity.set${entity.pkProperty.propertyName?cap_first}(key);
 </#if>
-<#list entity.properties as property>
-<#if property.notNull>
-        entity.set${property.propertyName?cap_first}();
-</#if> 
-</#list>
-        return entity;
+		<#list entity.properties as property>
+		<#if property.notNull>
+		<#if property.propertyName != entity.pkProperty.propertyName>
+		entity.set${property.propertyName?cap_first}(${property.propertyName});
+		</#if> 
+		</#if> 
+		</#list>
+		return entity;
     }
 
 }
diff --git a/DaoGenerator/src-template/dao.ftl b/DaoGenerator/src-template/dao.ftl
index 9b58600a..fe2b537f 100644
--- a/DaoGenerator/src-template/dao.ftl
+++ b/DaoGenerator/src-template/dao.ftl
@@ -172,10 +172,9 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
     @Override
     public ${entity.pkType} readKey(ResultSet resultSet, int offset) throws SQLException {
 <#if entity.pkProperty??>
-    	int index = 1;
-        return <#if !entity.pkProperty.notNull>JDBCUtils.isNull(resultSet, offset + index) ? null : </#if><#if
+        return <#if !entity.pkProperty.notNull>JDBCUtils.isNull(resultSet, offset + 1) ? null : </#if><#if
             entity.pkProperty.propertyType == "Byte">(byte) </#if><#if
-            entity.pkProperty.propertyType == "Date">new java.util.Date(</#if>resultSet.get${toCursorType[entity.pkProperty.propertyType]}(offset + index++)<#if
+            entity.pkProperty.propertyType == "Date">new java.util.Date(</#if>resultSet.get${toCursorType[entity.pkProperty.propertyType]}(offset + 1)<#if
             entity.pkProperty.propertyType == "Boolean"> != 0</#if><#if
             entity.pkProperty.propertyType == "Date">)</#if>;
 <#else>
diff --git a/DaoGenerator/src-template/entity.ftl b/DaoGenerator/src-template/entity.ftl
index 75eea1f5..32c6a69a 100644
--- a/DaoGenerator/src-template/entity.ftl
+++ b/DaoGenerator/src-template/entity.ftl
@@ -52,7 +52,7 @@ import ${additionalImport};
  * Entity mapped to table ${entity.tableName}.
  */
 public class ${entity.className}<#if
-entity.superclass?has_content> extends ${entity.superclass} </#if><#if
+entity.superclass?has_content> extends ${entity.superclass}</#if><#if
 entity.interfacesToImplement?has_content> implements <#list entity.interfacesToImplement
 as ifc>${ifc}<#if ifc_has_next>, </#if></#list></#if> {
 
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
index 41714d61..1c7ee1ec 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
@@ -17,9 +17,14 @@
  */
 package de.greenrobot.daogenerator;
 
-import de.greenrobot.daogenerator.Property.PropertyBuilder;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+import java.util.TreeSet;
 
-import java.util.*;
+import de.greenrobot.daogenerator.Property.PropertyBuilder;
 
 /**
  * Model class for an entity: a Java data object mapped to a data base table. A new entity is added to a {@link Schema}
@@ -456,7 +461,7 @@ void init2ndPass() {
             pkProperty = propertiesPk.get(0);
             pkType = schema.mapToJavaTypeNullable(pkProperty.getPropertyType());
         } else {
-            pkType = "Void";
+            pkType = "Long"; // this used to be Void but Void is not a Long as expected by the super type AbstractDao<SqliteMaster, Long>
         }
 
         propertiesColumns = new ArrayList<Property>(properties);
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
index 02823975..6726c4b4 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
@@ -140,8 +140,7 @@ protected void bindValues(PreparedStatement statement, AbcdefEntity entity) thro
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
index 3907a45e..81e5b4fb 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
@@ -78,8 +78,7 @@ protected void attachEntity(AnActiveEntity entity) {
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
index d7b9677c..d217a447 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
@@ -63,8 +63,7 @@ protected void bindValues(PreparedStatement statement, AutoincrementEntity entit
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
index 9e7fd277..f2981a0e 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
@@ -73,8 +73,7 @@ protected void bindValues(PreparedStatement statement, DateEntity entity) throws
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntity.java b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntity.java
index bac2555f..2666c047 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntity.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntity.java
@@ -5,7 +5,7 @@
 /**
  * Entity mapped to table EXTENDS_IMPLEMENTS_ENTITY.
  */
-public class ExtendsImplementsEntity extends TestSuperclass  implements TestInterface, java.io.Serializable {
+public class ExtendsImplementsEntity extends Object implements java.io.Serializable {
 
 	private static final long serialVersionUID = 1L;
 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
index 6b1a4428..ec74be18 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
@@ -70,8 +70,7 @@ protected void bindValues(PreparedStatement statement, ExtendsImplementsEntity e
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
index c4fce469..bd67ecf9 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
@@ -100,8 +100,7 @@ protected void attachEntity(RelationEntity entity) {
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
index 13838bb3..8f33a5e2 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
@@ -126,8 +126,7 @@ protected void bindValues(PreparedStatement statement, SimpleEntity entity) thro
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
index dd735aa2..1d491f7a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
@@ -86,8 +86,7 @@ protected void bindValues(PreparedStatement statement, SimpleEntityNotNull entit
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return resultSet.getLong(offset + index++);
+        return resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
index ed202705..f0eda3b4 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
@@ -126,8 +126,7 @@ protected void bindValues(PreparedStatement statement, SpecialNamesEntity entity
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
index 0dd6e514..d03e5749 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
@@ -16,7 +16,7 @@
 /** 
  * DAO for table SQLITE_MASTER.
 */
-public class SqliteMasterDao extends AbstractDao<SqliteMaster, Void> {
+public class SqliteMasterDao extends AbstractDao<SqliteMaster, Long> {
 
     public static final String TABLENAME = "SQLITE_MASTER";
 
@@ -73,7 +73,7 @@ protected void bindValues(PreparedStatement statement, SqliteMaster entity) thro
 
     /** @inheritdoc */
     @Override
-    public Void readKey(ResultSet resultSet, int offset) throws SQLException {
+    public Long readKey(ResultSet resultSet, int offset) throws SQLException {
         return null;
     }    
 
@@ -104,14 +104,14 @@ public void readEntity(ResultSet resultSet, SqliteMaster entity, int offset) thr
     
     /** @inheritdoc */
     @Override
-    protected Void updateKeyAfterInsert(SqliteMaster entity, long rowId) {
+    protected Long updateKeyAfterInsert(SqliteMaster entity, long rowId) {
         // Unsupported or missing PK type
         return null;
     }
     
     /** @inheritdoc */
     @Override
-    public Void getKey(SqliteMaster entity) {
+    public Long getKey(SqliteMaster entity) {
         return null;
     }
 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
index 5725bf3c..b8e418ca 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
@@ -70,8 +70,7 @@ protected void bindValues(PreparedStatement statement, StringKeyValueEntity enti
     /** @inheritdoc */
     @Override
     public String readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getString(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getString(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
index ec4f7ec2..f581a7c4 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
@@ -116,8 +116,7 @@ protected void bindValues(PreparedStatement statement, TestEntity entity) throws
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
index ccfed9c0..01c18e8c 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
@@ -78,8 +78,7 @@ protected void attachEntity(ToManyEntity entity) {
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
index c44a6510..f908f398 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
@@ -91,8 +91,7 @@ protected void bindValues(PreparedStatement statement, ToManyTargetEntity entity
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
index 22082d94..4b4a24a8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
@@ -84,8 +84,7 @@ protected void attachEntity(TreeEntity entity) {
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
index f2c973b3..4c803e4a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
@@ -63,8 +63,7 @@ protected void bindValues(PreparedStatement statement, KeepEntity entity) throws
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
index 8d1ce6cc..212602d0 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
@@ -74,8 +74,7 @@ protected void bindValues(PreparedStatement statement, ToManyTarget2 entity) thr
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
index 8644eb99..e0e68bd8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
@@ -85,8 +85,7 @@ protected void attachEntity(RelationSource2 entity) {
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
index b8814897..b6df83e9 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
@@ -65,8 +65,7 @@ protected void bindValues(PreparedStatement statement, ToOneTarget2 entity) thro
     /** @inheritdoc */
     @Override
     public Long readKey(ResultSet resultSet, int offset) throws SQLException {
-    	int index = 1;
-        return JDBCUtils.isNull(resultSet, offset + index) ? null : resultSet.getLong(offset + index++);
+        return JDBCUtils.isNull(resultSet, offset + 1) ? null : resultSet.getLong(offset + 1);
     }    
 
     /** @inheritdoc */
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/AbcdefEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/AbcdefEntityTest.java
index 4994b6f4..b2596a91 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/AbcdefEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/AbcdefEntityTest.java
@@ -7,6 +7,7 @@
 
 public class AbcdefEntityTest extends AbstractDaoTestLongPk<AbcdefEntityDao, AbcdefEntity> {
 
+	
     public AbcdefEntityTest() {
         super(AbcdefEntityDao.class);
     }
@@ -15,7 +16,7 @@ public AbcdefEntityTest() {
     protected AbcdefEntity createEntity(Long key) {
         AbcdefEntity entity = new AbcdefEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/AnActiveEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/AnActiveEntityTest.java
index e4fd33d8..98c662d3 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/AnActiveEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/AnActiveEntityTest.java
@@ -7,6 +7,7 @@
 
 public class AnActiveEntityTest extends AbstractDaoTestLongPk<AnActiveEntityDao, AnActiveEntity> {
 
+	
     public AnActiveEntityTest() {
         super(AnActiveEntityDao.class);
     }
@@ -15,7 +16,7 @@ public AnActiveEntityTest() {
     protected AnActiveEntity createEntity(Long key) {
         AnActiveEntity entity = new AnActiveEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/AutoincrementEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/AutoincrementEntityTest.java
index 384b8e82..11129312 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/AutoincrementEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/AutoincrementEntityTest.java
@@ -7,6 +7,7 @@
 
 public class AutoincrementEntityTest extends AbstractDaoTestLongPk<AutoincrementEntityDao, AutoincrementEntity> {
 
+	
     public AutoincrementEntityTest() {
         super(AutoincrementEntityDao.class);
     }
@@ -15,7 +16,7 @@ public AutoincrementEntityTest() {
     protected AutoincrementEntity createEntity(Long key) {
         AutoincrementEntity entity = new AutoincrementEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/DateEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/DateEntityTest.java
index 78a1b07d..aa93f5c3 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/DateEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/DateEntityTest.java
@@ -7,6 +7,8 @@
 
 public class DateEntityTest extends AbstractDaoTestLongPk<DateEntityDao, DateEntity> {
 
+	private java.util.Date dateNotNull;
+	
     public DateEntityTest() {
         super(DateEntityDao.class);
     }
@@ -15,8 +17,8 @@ public DateEntityTest() {
     protected DateEntity createEntity(Long key) {
         DateEntity entity = new DateEntity();
         entity.setId(key);
-        entity.setDateNotNull();
-        return entity;
+		entity.setDateNotNull(dateNotNull);
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/ExtendsImplementsEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/ExtendsImplementsEntityTest.java
index c9366717..7cd22108 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/ExtendsImplementsEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/ExtendsImplementsEntityTest.java
@@ -7,6 +7,7 @@
 
 public class ExtendsImplementsEntityTest extends AbstractDaoTestLongPk<ExtendsImplementsEntityDao, ExtendsImplementsEntity> {
 
+	
     public ExtendsImplementsEntityTest() {
         super(ExtendsImplementsEntityDao.class);
     }
@@ -15,7 +16,7 @@ public ExtendsImplementsEntityTest() {
     protected ExtendsImplementsEntity createEntity(Long key) {
         ExtendsImplementsEntity entity = new ExtendsImplementsEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/RelationEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/RelationEntityTest.java
index 7e71f2ba..e7ff7884 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/RelationEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/RelationEntityTest.java
@@ -7,6 +7,8 @@
 
 public class RelationEntityTest extends AbstractDaoTestLongPk<RelationEntityDao, RelationEntity> {
 
+	private long testIdNotNull;
+	
     public RelationEntityTest() {
         super(RelationEntityDao.class);
     }
@@ -15,8 +17,8 @@ public RelationEntityTest() {
     protected RelationEntity createEntity(Long key) {
         RelationEntity entity = new RelationEntity();
         entity.setId(key);
-        entity.setTestIdNotNull();
-        return entity;
+		entity.setTestIdNotNull(testIdNotNull);
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityNotNullTest.java b/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityNotNullTest.java
index 7fff526a..55908bf4 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityNotNullTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityNotNullTest.java
@@ -7,6 +7,16 @@
 
 public class SimpleEntityNotNullTest extends AbstractDaoTestLongPk<SimpleEntityNotNullDao, SimpleEntityNotNull> {
 
+	private boolean simpleBoolean;
+	private byte simpleByte;
+	private short simpleShort;
+	private int simpleInt;
+	private long simpleLong;
+	private float simpleFloat;
+	private double simpleDouble;
+	private String simpleString;
+	private byte[] simpleByteArray;
+	
     public SimpleEntityNotNullTest() {
         super(SimpleEntityNotNullDao.class);
     }
@@ -15,17 +25,16 @@ public SimpleEntityNotNullTest() {
     protected SimpleEntityNotNull createEntity(Long key) {
         SimpleEntityNotNull entity = new SimpleEntityNotNull();
         entity.setId(key);
-        entity.setId();
-        entity.setSimpleBoolean();
-        entity.setSimpleByte();
-        entity.setSimpleShort();
-        entity.setSimpleInt();
-        entity.setSimpleLong();
-        entity.setSimpleFloat();
-        entity.setSimpleDouble();
-        entity.setSimpleString();
-        entity.setSimpleByteArray();
-        return entity;
+		entity.setSimpleBoolean(simpleBoolean);
+		entity.setSimpleByte(simpleByte);
+		entity.setSimpleShort(simpleShort);
+		entity.setSimpleInt(simpleInt);
+		entity.setSimpleLong(simpleLong);
+		entity.setSimpleFloat(simpleFloat);
+		entity.setSimpleDouble(simpleDouble);
+		entity.setSimpleString(simpleString);
+		entity.setSimpleByteArray(simpleByteArray);
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityTest.java
index d4a0ce68..f82471f6 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/SimpleEntityTest.java
@@ -7,6 +7,7 @@
 
 public class SimpleEntityTest extends AbstractDaoTestLongPk<SimpleEntityDao, SimpleEntity> {
 
+	
     public SimpleEntityTest() {
         super(SimpleEntityDao.class);
     }
@@ -15,7 +16,7 @@ public SimpleEntityTest() {
     protected SimpleEntity createEntity(Long key) {
         SimpleEntity entity = new SimpleEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/SpecialNamesEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/SpecialNamesEntityTest.java
index 8430b720..7c55568c 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/SpecialNamesEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/SpecialNamesEntityTest.java
@@ -7,6 +7,7 @@
 
 public class SpecialNamesEntityTest extends AbstractDaoTestLongPk<SpecialNamesEntityDao, SpecialNamesEntity> {
 
+	
     public SpecialNamesEntityTest() {
         super(SpecialNamesEntityDao.class);
     }
@@ -15,7 +16,7 @@ public SpecialNamesEntityTest() {
     protected SpecialNamesEntity createEntity(Long key) {
         SpecialNamesEntity entity = new SpecialNamesEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java b/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
index 9cd4cc22..19629159 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
@@ -7,6 +7,7 @@
 
 public class SqliteMasterTest extends AbstractDaoTestLongPk<SqliteMasterDao, SqliteMaster> {
 
+	
     public SqliteMasterTest() {
         super(SqliteMasterDao.class);
     }
@@ -14,7 +15,7 @@ public SqliteMasterTest() {
     @Override
     protected SqliteMaster createEntity(Long key) {
         SqliteMaster entity = new SqliteMaster();
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/StringKeyValueEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/StringKeyValueEntityTest.java
index 2480d8a8..c142c641 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/StringKeyValueEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/StringKeyValueEntityTest.java
@@ -7,6 +7,7 @@
 
 public class StringKeyValueEntityTest extends AbstractDaoTestStringPk<StringKeyValueEntityDao, StringKeyValueEntity> {
 
+	
     public StringKeyValueEntityTest() {
         super(StringKeyValueEntityDao.class);
     }
@@ -15,7 +16,7 @@ public StringKeyValueEntityTest() {
     protected StringKeyValueEntity createEntity(String key) {
         StringKeyValueEntity entity = new StringKeyValueEntity();
         entity.setKey(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/TestEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/TestEntityTest.java
index 92c094a6..6598bf21 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/TestEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/TestEntityTest.java
@@ -7,6 +7,9 @@
 
 public class TestEntityTest extends AbstractDaoTestLongPk<TestEntityDao, TestEntity> {
 
+	private int simpleInt;
+	private String simpleStringNotNull;
+	
     public TestEntityTest() {
         super(TestEntityDao.class);
     }
@@ -15,9 +18,9 @@ public TestEntityTest() {
     protected TestEntity createEntity(Long key) {
         TestEntity entity = new TestEntity();
         entity.setId(key);
-        entity.setSimpleInt();
-        entity.setSimpleStringNotNull();
-        return entity;
+		entity.setSimpleInt(simpleInt);
+		entity.setSimpleStringNotNull(simpleStringNotNull);
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/ToManyEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/ToManyEntityTest.java
index b8d7f48b..d261fc11 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/ToManyEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/ToManyEntityTest.java
@@ -7,6 +7,7 @@
 
 public class ToManyEntityTest extends AbstractDaoTestLongPk<ToManyEntityDao, ToManyEntity> {
 
+	
     public ToManyEntityTest() {
         super(ToManyEntityDao.class);
     }
@@ -15,7 +16,7 @@ public ToManyEntityTest() {
     protected ToManyEntity createEntity(Long key) {
         ToManyEntity entity = new ToManyEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/ToManyTargetEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/ToManyTargetEntityTest.java
index fc5a9df3..de622c57 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/ToManyTargetEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/ToManyTargetEntityTest.java
@@ -7,6 +7,7 @@
 
 public class ToManyTargetEntityTest extends AbstractDaoTestLongPk<ToManyTargetEntityDao, ToManyTargetEntity> {
 
+	
     public ToManyTargetEntityTest() {
         super(ToManyTargetEntityDao.class);
     }
@@ -15,7 +16,7 @@ public ToManyTargetEntityTest() {
     protected ToManyTargetEntity createEntity(Long key) {
         ToManyTargetEntity entity = new ToManyTargetEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/TreeEntityTest.java b/DaoTest/src/de/greenrobot/daotest/entity/TreeEntityTest.java
index ce8c26e6..fc465e42 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/TreeEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/TreeEntityTest.java
@@ -7,6 +7,7 @@
 
 public class TreeEntityTest extends AbstractDaoTestLongPk<TreeEntityDao, TreeEntity> {
 
+	
     public TreeEntityTest() {
         super(TreeEntityDao.class);
     }
@@ -15,7 +16,7 @@ public TreeEntityTest() {
     protected TreeEntity createEntity(Long key) {
         TreeEntity entity = new TreeEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
diff --git a/DaoTest/src/de/greenrobot/daotest2/entity/KeepEntityTest.java b/DaoTest/src/de/greenrobot/daotest2/entity/KeepEntityTest.java
index 3d331242..d7596a0c 100644
--- a/DaoTest/src/de/greenrobot/daotest2/entity/KeepEntityTest.java
+++ b/DaoTest/src/de/greenrobot/daotest2/entity/KeepEntityTest.java
@@ -7,6 +7,7 @@
 
 public class KeepEntityTest extends AbstractDaoTestLongPk<KeepEntityDao, KeepEntity> {
 
+	
     public KeepEntityTest() {
         super(KeepEntityDao.class);
     }
@@ -15,7 +16,7 @@ public KeepEntityTest() {
     protected KeepEntity createEntity(Long key) {
         KeepEntity entity = new KeepEntity();
         entity.setId(key);
-        return entity;
+		return entity;
     }
 
 }
