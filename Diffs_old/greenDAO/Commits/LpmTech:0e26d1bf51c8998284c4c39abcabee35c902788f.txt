diff --git a/DaoCore/.gitignore b/DaoCore/.gitignore
index 5200a9fa..b8ed6510 100644
--- a/DaoCore/.gitignore
+++ b/DaoCore/.gitignore
@@ -2,4 +2,3 @@
 /bin
 /release
 /build
-/gradle.properties
diff --git a/DaoCore/build.gradle b/DaoCore/build.gradle
index e7baa728..4b754f0c 100644
--- a/DaoCore/build.gradle
+++ b/DaoCore/build.gradle
@@ -1,26 +1,4 @@
-apply plugin: 'android-library'
-
-android {
-    compileSdkVersion 22
-    buildToolsVersion "22.0.1"
-
-    defaultConfig {
-        minSdkVersion 8
-        targetSdkVersion 18
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
-        }
-    }
-
-    lintOptions {
-        abortOnError false
-    }
-}
-
+apply plugin: 'java'
 apply plugin: 'maven'
 apply plugin: 'signing'
 
@@ -40,13 +18,17 @@ if(isSnapshot) {
 repositories {
     mavenCentral()
 }
+configurations {
+    provided
+    deployerJars
+}
 
 dependencies {
-    //provided 'com.google.android:android:4.1.1.4'
-    //provided 'com.google.android:android-test:4.1.1.4'
-    //provided 'com.google.android:annotations:4.1.1.4'
-    //provided 'com.google.android:support-v4:r7'
+    provided 'com.google.android:android:4.1.1.4'
+    provided 'com.google.android:android-test:4.1.1.4'
+    provided 'com.google.android:annotations:4.1.1.4'
     //provided 'com.google.android:support-v4:r7'
+    provided 'com.google.android:support-v4:r7'
 
     provided files('libs/sqlcipher.jar')
 }
@@ -55,4 +37,6 @@ sourceSets {
     main {
         compileClasspath += configurations.provided
     }
-}
\ No newline at end of file
+}
+
+apply from: './upload.gradle'
\ No newline at end of file
diff --git a/DaoCore/gradle.properties b/DaoCore/gradle.properties
new file mode 100644
index 00000000..1eb430fb
--- /dev/null
+++ b/DaoCore/gradle.properties
@@ -0,0 +1,18 @@
+VERSION_NAME=3.0.0
+VERSION_CODE=9999
+GROUP=eu.codlab
+POM_ARTIFACT_ID=greendao
+
+POM_NAME=greendao fork from original
+POM_PACKAGING=aar
+
+POM_DESCRIPTION=Forked library from the original greendao from greenrobot
+POM_URL=https://github.com/Codlabtech/greenDAO
+POM_SCM_URL=https://github.com/Codlabtech/greenDAO
+POM_SCM_CONNECTION=scm:git@github.com:codlabtech/greenDAO.git
+POM_SCM_DEV_CONNECTION=scm:git@github.com:codlabtech/greenDAO.git
+POM_LICENCE_NAME=The Apache Software License, Version 2.0
+POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
+POM_LICENCE_DIST=repo
+POM_DEVELOPER_ID=codlab / original greenrobot
+POM_DEVELOPER_NAME=Kevin Le Perf
diff --git a/DaoCore/upload.gradle b/DaoCore/upload.gradle
new file mode 100644
index 00000000..9981effb
--- /dev/null
+++ b/DaoCore/upload.gradle
@@ -0,0 +1,117 @@
+/*
+ * Copyright 2013 Chris Banes
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+apply plugin: 'maven'
+apply plugin: 'signing'
+
+def isReleaseBuild() {
+    return VERSION_NAME.contains("SNAPSHOT") == false
+}
+
+def getReleaseRepositoryUrl() {
+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
+            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+}
+
+def getSnapshotRepositoryUrl() {
+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
+            : "https://oss.sonatype.org/content/repositories/snapshots/"
+}
+
+def getRepositoryUsername() {
+    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
+}
+
+def getRepositoryPassword() {
+    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
+}
+
+uploadArchives {
+    repositories {
+        mavenDeployer {
+            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
+
+            pom.groupId = GROUP
+            pom.artifactId = POM_ARTIFACT_ID
+            pom.version = VERSION_NAME
+
+            repository(url: getReleaseRepositoryUrl()) {
+                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+            }
+            snapshotRepository(url: getSnapshotRepositoryUrl()) {
+                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+            }
+
+
+            pom.project {
+                name POM_NAME
+                packaging POM_PACKAGING
+                description POM_DESCRIPTION
+                url POM_URL
+
+                scm {
+                    url POM_SCM_URL
+                    connection POM_SCM_CONNECTION
+                    developerConnection POM_SCM_DEV_CONNECTION
+                }
+
+                licenses {
+                    license {
+                        name POM_LICENCE_NAME
+                        url POM_LICENCE_URL
+                        distribution POM_LICENCE_DIST
+                    }
+                }
+
+                developers {
+                    developer {
+                        id POM_DEVELOPER_ID
+                        name POM_DEVELOPER_NAME
+                    }
+                }
+            }
+        }
+    }
+}
+
+signing {
+    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
+    sign configurations.archives
+}
+
+javadoc {
+    failOnError = false
+    title = "greenDAO Generator ${version} API"
+    // Unfinished APIs:
+    excludes = ['de/greenrobot/daogenerator/*']
+    options.bottom = 'Available under the GPLv3 - <i>Copyright &#169; 2011-2015 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
+}
+
+task javadocJar(type: Jar, dependsOn: javadoc) {
+    classifier = 'javadoc'
+    from 'build/docs/javadoc'
+}
+
+task sourcesJar(type: Jar) {
+    from sourceSets.main.allSource
+    classifier = 'sources'
+}
+
+artifacts {
+    archives jar
+    archives javadocJar
+    archives sourcesJar
+}
\ No newline at end of file
diff --git a/DaoGenerator/.gitignore b/DaoGenerator/.gitignore
index 90ffd1f9..db821824 100644
--- a/DaoGenerator/.gitignore
+++ b/DaoGenerator/.gitignore
@@ -1,5 +1,4 @@
 /test-out
 /release
 /bin
-/gradle.properties
 /build
diff --git a/DaoGenerator/gradle.properties b/DaoGenerator/gradle.properties
new file mode 100644
index 00000000..5fcb2aa9
--- /dev/null
+++ b/DaoGenerator/gradle.properties
@@ -0,0 +1,18 @@
+VERSION_NAME=3.0.0
+VERSION_CODE=9999
+GROUP=eu.codlab
+POM_ARTIFACT_ID=daogenerator
+
+POM_NAME=DaoGenerator fork from original
+POM_PACKAGING=jar
+
+POM_DESCRIPTION=Forked library from the original DaoGenerator from greenrobot
+POM_URL=https://github.com/Codlabtech/greenDAO
+POM_SCM_URL=https://github.com/Codlabtech/greenDAO
+POM_SCM_CONNECTION=scm:git@github.com:codlabtech/greenDAO.git
+POM_SCM_DEV_CONNECTION=scm:git@github.com:codlabtech/greenDAO.git
+POM_LICENCE_NAME=The Apache Software License, Version 2.0
+POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
+POM_LICENCE_DIST=repo
+POM_DEVELOPER_ID=codlab / original greenrobot
+POM_DEVELOPER_NAME=Kevin Le Perf
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 6a01e479..31e0715c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,3 +1,18 @@
+buildscript {
+    repositories {
+        jcenter()
+        maven {
+            url 'https://repos.zeroturnaround.com/nexus/content/repositories/zt-public-releases'
+        }
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.zeroturnaround.jrebel.android:jr-android-gradle:0.9.+'
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
 subprojects {
     repositories {
         mavenCentral()
