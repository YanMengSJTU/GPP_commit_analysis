diff --git a/DaoGenerator/src-template/dao-unit-test.ftl b/DaoGenerator/src-template/dao-unit-test.ftl
index 27f00825..8cd898b2 100644
--- a/DaoGenerator/src-template/dao-unit-test.ftl
+++ b/DaoGenerator/src-template/dao-unit-test.ftl
@@ -19,20 +19,27 @@ along with greenDAO Generator.  If not, see <http://www.gnu.org/licenses/>.
 -->
 package ${entity.javaPackageTest};
 
+<#assign isStringPK = entity.pkProperty?? && entity.pkProperty.propertyType == "String" />
+<#if isStringPK>
+import de.greenrobot.dao.test.AbstractDaoTestStringPk;
+<#else>
 import de.greenrobot.dao.test.AbstractDaoTestLongPk;
+</#if>
+
 import ${entity.javaPackage}.${entity.className};
 import ${entity.javaPackageDao}.${entity.classNameDao};
 
-public class ${entity.classNameTest} extends AbstractDaoTestLongPk<${entity.classNameDao}, ${entity.className}> {
+public class ${entity.classNameTest} extends <#if
+isStringPK>AbstractDaoTestStringPk<${entity.classNameDao}, ${entity.className}><#else>AbstractDaoTestLongPk<${entity.classNameDao}, ${entity.className}></#if> {
 
     public ${entity.classNameTest}() {
         super(${entity.classNameDao}.class);
     }
 
     @Override
-    protected ${entity.className} createEntity(Long key) {
+    protected ${entity.className} createEntity(<#if isStringPK>String<#else>Long</#if> key) {
         ${entity.className} entity = new ${entity.className}();
-        entity.setId(key);
+        entity.set${entity.pkProperty.propertyName?cap_first}(key);
 <#list entity.properties as property>
 <#if property.notNull>
         entity.set${property.propertyName?cap_first}();
diff --git a/DaoGenerator/src-template/dao.ftl b/DaoGenerator/src-template/dao.ftl
index d3d8508e..18f09cc2 100644
--- a/DaoGenerator/src-template/dao.ftl
+++ b/DaoGenerator/src-template/dao.ftl
@@ -243,7 +243,6 @@ as property>${property.columnName}<#if property_has_next>,</#if></#list>);");
         entity.set${entity.pkProperty.propertyName?cap_first}(rowId);
         return rowId;
 <#else>
-        // TODO XXX Only Long PKs are supported currently
         return null;
 </#if>
 </#if>
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
index 7f31e811..7394c87b 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
@@ -91,7 +91,6 @@ public void readEntity(Cursor cursor, StringKeyValueEntity entity, int offset) {
     
     @Override
     protected String updateKeyAfterInsert(StringKeyValueEntity entity, long rowId) {
-        // TODO XXX Only Long PKs are supported currently
         return null;
     }
     
diff --git a/README.md b/README.md
index 2772b117..57bb83be 100644
--- a/README.md
+++ b/README.md
@@ -6,7 +6,7 @@ Home page, documentation, and support links: http://greendao-orm.com/
 
 Release History
 ---------------
-### Next version (unreleased): Minor features
+### Next version (unreleased): Feature release
 * Limited support of String PKs
 * Added CountQuery for creating SELECT COUNT (*) queries with QueryBuilder
 * Added getDatabase in DaoMaster, DaoSession, and Dao
