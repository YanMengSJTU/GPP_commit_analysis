diff --git a/daogenerator/src-template/entity-base.ftl b/daogenerator/src-template/entity-base.ftl
index d02c1348..fb460d15 100644
--- a/daogenerator/src-template/entity-base.ftl
+++ b/daogenerator/src-template/entity-base.ftl
@@ -57,23 +57,27 @@ ${keepIncludes!}
 abstract public class ${entity.classNameBase}<#if
 entity.superclassEntity?has_content> extends ${entity.superclassEntity.className}<#elseif
 entity.superclass?has_content> extends ${entity.superclass}</#if> {
-
 <#list entity.properties as property>
+
 <#if property.notNull && complexTypes?seq_contains(property.propertyType)>
     /** Not-null value. */
 </#if>
     <@print_annotations property.fieldAnnotations, "    "/>
     protected ${property.javaType} ${property.propertyName};
 </#list>
-
 <#if entity.active>
+<#if !entity.superclassEntity?has_content>
+
     /** Used to resolve relations */
     protected transient DaoSession daoSession;
+</#if>
+<#if !entity.skipDaoGeneration>
 
     /** Used for active entity operations. */
     protected transient ${entity.classNameDao} myDao;
-
+</#if>
 <#list entity.toOneRelations as toOne>
+
     <@print_annotations toOne.fieldAnnotations, "    "/>
     protected ${toOne.targetEntity.className} ${toOne.name};
 <#if toOne.useFkProperty>
@@ -81,9 +85,9 @@ entity.superclass?has_content> extends ${entity.superclass}</#if> {
 <#else>
     protected boolean ${toOne.name}__refreshed;
 </#if>
-
 </#list>
 <#list entity.toManyRelations as toMany>
+
     <@print_annotations toMany.fieldAnnotations, "    "/>
     protected List<${toMany.targetEntity.className}> ${toMany.name};
 </#list>
@@ -139,8 +143,15 @@ property>${property.propertyName}<#if property_has_next>, </#if></#list>);
 <#if entity.active>
     /** called by internal mechanisms, do not call yourself. */
     public void __setDaoSession(DaoSession daoSession) {
+        <#if entity.superclassEntity?has_content>
+        super.__setDaoSession(daoSession);
+        <#else>
         this.daoSession = daoSession;
+        </#if>
+        <#if !entity.skipDaoGeneration>
+
         myDao = daoSession != null ? daoSession.get${entity.classNameDao?cap_first}() : null;
+        </#if>
     }
 
 </#if>
@@ -263,7 +274,7 @@ property>${property.propertyName}<#if property_has_next>, </#if></#list>);
 ########## Active entity operations ######
 ##########################################
 -->
-<#if entity.active>
+<#if entity.active && !entity.skipDaoGeneration>
     /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
     public void delete() {
         if (myDao == null) {
diff --git a/daogenerator/src-template/entity.ftl b/daogenerator/src-template/entity.ftl
index 050cf95f..d41b3675 100644
--- a/daogenerator/src-template/entity.ftl
+++ b/daogenerator/src-template/entity.ftl
@@ -1,4 +1,3 @@
-<#include "*/annotation.ftl">
 <#--
 Copyright (C) 2011 Markus Junginger, greenrobot (http://greenrobot.de)
 
@@ -15,13 +14,8 @@ GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 -->
+<#include "*/annotation.ftl">
 package ${entity.javaPackage};
-
-<#if entity.additionalImportsEntity?has_content>
-<#list entity.additionalImportsEntity as additionalImport>
-import ${additionalImport};
-</#list>
-</#if>
 <#if entity.hasKeepSections>
 
 // THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS
@@ -32,6 +26,7 @@ ${keepIncludes!}
 </#if>
 // KEEP INCLUDES END
 <#else>
+
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.
 </#if>
 
diff --git a/daogenerator/src/de/greenrobot/daogenerator/DaoGenerator.java b/daogenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
index 71315720..5d1eaeaf 100644
--- a/daogenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
+++ b/daogenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
@@ -20,6 +20,7 @@
 import java.io.File;
 import java.io.FileWriter;
 import java.io.IOException;
+import java.io.StringWriter;
 import java.io.Writer;
 import java.util.HashMap;
 import java.util.List;
@@ -111,8 +112,8 @@ public void generateAll(Schema schema, String outDir, String outDirModel, String
                 generate(templateDao, outDirFile, entity.getJavaPackageDao(), entity.getClassNameDao(), schema, entity);
             }
             if (!entity.isProtobuf() && !entity.isSkipGeneration()) {
-                //generate(templateEntity, outDirFile, entity.getJavaPackage(), entity.getClassName(), schema, entity);
-                generate(templateEntity, outDirModelFile, entity.getJavaPackage(), entity.getClassName(), schema, entity);
+                generate(templateEntity, outDirFile, entity.getJavaPackage(), entity.getClassName(), schema, entity);
+                //generate(templateEntity, outDirModelFile, entity.getJavaPackage(), entity.getClassName(), schema, entity);
                 generate(templateEntityBase, outDirFile, entity.getJavaPackage(), entity.getClassNameBase(), schema, entity);
             }
             if (outDirTestFile != null && !entity.isSkipGenerationTest()) {
@@ -171,8 +172,11 @@ private void generate(Template template, File outDirFile, String javaPackage, St
             }
 
             Writer writer = new FileWriter(file);
+            StringWriter w = new StringWriter();
             try {
                 template.process(root, writer);
+                template.process(root, w);
+                String s = w.toString();
                 writer.flush();
                 System.out.println("Written " + file.getCanonicalPath());
             } finally {
diff --git a/daogenerator/src/de/greenrobot/daogenerator/Entity.java b/daogenerator/src/de/greenrobot/daogenerator/Entity.java
index 68550494..f8680427 100644
--- a/daogenerator/src/de/greenrobot/daogenerator/Entity.java
+++ b/daogenerator/src/de/greenrobot/daogenerator/Entity.java
@@ -667,7 +667,7 @@ private void init3rdPassRelations() {
     }
 
     private void init3rdPassAdditionalImports() {
-        if (active && !javaPackage.equals(javaPackageDao)) {
+        if (active && !skipDaoGeneration && !javaPackage.equals(javaPackageDao)) {
             additionalImportsEntity.add(javaPackageDao + "." + classNameDao);
         }
 
