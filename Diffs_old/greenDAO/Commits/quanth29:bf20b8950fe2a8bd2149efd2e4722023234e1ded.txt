diff --git a/DaoCore/src/de/greenrobot/dao/GreenDaoListAdapter.java b/DaoCore/src/de/greenrobot/dao/GreenDaoListAdapter.java
index 7c0b4474..260d354c 100644
--- a/DaoCore/src/de/greenrobot/dao/GreenDaoListAdapter.java
+++ b/DaoCore/src/de/greenrobot/dao/GreenDaoListAdapter.java
@@ -6,19 +6,20 @@
 import android.widget.BaseAdapter;
 
 public abstract class GreenDaoListAdapter<T extends HasId<Long>> extends BaseAdapter {
-	
+
     protected boolean dataValid;
     protected LazyList<T> lazyList;
     protected Context context;
 
     public GreenDaoListAdapter(Context context, LazyList<T> lazyList) {
-    	this.lazyList = lazyList;
+        this.lazyList = lazyList;
         this.dataValid = lazyList != null;
         this.context = context;
     }
 
     /**
      * Returns the list backing this adapter.
+     *
      * @return the list.
      */
     public LazyList<T> getLazyList() {
@@ -32,7 +33,7 @@ public GreenDaoListAdapter(Context context, LazyList<T> lazyList) {
     public int getCount() {
         return dataValid && lazyList != null ? lazyList.size() : 0;
     }
-    
+
     /**
      * @see android.widget.ListAdapter#getItem(int)
      */
@@ -47,13 +48,13 @@ public T getItem(int position) {
     @Override
     public long getItemId(int position) {
         if (dataValid && lazyList != null) {
-        	T item = lazyList.get(position);
-            return item!=null ? item.getId() : 0;
+            T item = lazyList.get(position);
+            return item != null ? item.getId() : 0;
         } else {
             return 0;
         }
     }
-    
+
     @Override
     public boolean hasStableIds() {
         return true;
@@ -63,16 +64,16 @@ public boolean hasStableIds() {
      * @see android.widget.ListAdapter#getView(int, View, ViewGroup)
      */
     public View getView(int position, View convertView, ViewGroup parent) {
-    	
+
         if (!dataValid) {
             throw new IllegalStateException("this should only be called when lazylist is populated");
         }
-        
+
         T item = lazyList.get(position);
         if (item == null) {
             throw new IllegalStateException("Item at position " + position + " is null");
         }
-        
+
         View v = convertView == null ? newView(context, item, parent) : convertView;
         bindView(v, context, item);
         return v;
@@ -80,9 +81,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
     @Override
     public View getDropDownView(int position, View convertView, ViewGroup parent) {
-    	
+
         if (dataValid) {
-        	T item = lazyList.get(position);
+            T item = lazyList.get(position);
             View v = convertView == null ? newDropDownView(context, item, parent) : convertView;
             bindView(v, context, item);
             return v;
@@ -90,21 +91,23 @@ public View getDropDownView(int position, View convertView, ViewGroup parent) {
             return null;
         }
     }
-    
+
     /**
      * Makes a new view to hold the data contained in the item.
+     *
      * @param context Interface to application's global information
-     * @param item  The object that contains the data
-     * @param parent The parent to which the new view is attached to
+     * @param item    The object that contains the data
+     * @param parent  The parent to which the new view is attached to
      * @return the newly created view.
      */
     public abstract View newView(Context context, T item, ViewGroup parent);
 
     /**
      * Makes a new drop down view to hold the data contained in the item.
+     *
      * @param context Interface to application's global information
-     * @param item  The object that contains the data
-     * @param parent The parent to which the new view is attached to
+     * @param item    The object that contains the data
+     * @param parent  The parent to which the new view is attached to
      * @return the newly created view.
      */
     public View newDropDownView(Context context, T item, ViewGroup parent) {
@@ -113,9 +116,10 @@ public View newDropDownView(Context context, T item, ViewGroup parent) {
 
     /**
      * Bind an existing view to the data data contained in the item.
-     * @param view Existing view, returned earlier by newView
+     *
+     * @param view    Existing view, returned earlier by newView
      * @param context Interface to application's global information
-     * @param item The object that contains the data
+     * @param item    The object that contains the data
      */
     public abstract void bindView(View view, Context context, T item);
 
