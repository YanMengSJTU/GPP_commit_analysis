diff --git a/DaoGenerator/src-template/dao-user.ftl b/DaoGenerator/src-template/dao-user.ftl
new file mode 100644
index 00000000..85af7817
--- /dev/null
+++ b/DaoGenerator/src-template/dao-user.ftl
@@ -0,0 +1,41 @@
+<#--
+
+Copyright (C) 2011 Markus Junginger, greenrobot (http://greenrobot.de)     
+                                                                           
+This file is part of greenDAO Generator.                                   
+                                                                           
+greenDAO Generator is free software: you can redistribute it and/or modify 
+it under the terms of the GNU General Public License as published by       
+the Free Software Foundation, either version 3 of the License, or          
+(at your option) any later version.                                        
+greenDAO Generator is distributed in the hope that it will be useful,      
+but WITHOUT ANY WARRANTY; without even the implied warranty of             
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              
+GNU General Public License for more details.                               
+                                                                           
+You should have received a copy of the GNU General Public License          
+along with greenDAO Generator.  If not, see <http://www.gnu.org/licenses/>.
+
+-->
+package ${entity.javaPackageDao};
+
+import de.greenrobot.dao.internal.DaoConfig;
+import ${schema.defaultJavaPackageDao}.DaoSession;
+import ${entity.javaPackage}.${entity.classNameDao};
+
+// THIS CODE IS GENERATED BY greenDAO ON INITIAL SETUP OF USER-SPECIFIED DAO.
+// YOU SHOULD CUSTOMIZE THIS CLASS FURTHER ACCORDING TO YOUR NEEDS -- REMOVAL
+// OF THESE COMMENTS IS HIGHLY ADVISED ONCE YOU'VE DONE THAT.
+/** 
+ * User-specified DAO for table ${entity.tableName}.
+ */
+public class ${entity.classNameUserDao} extends ${entity.classNameDao} {
+
+    public ${entity.classNameUserDao}(DaoConfig config) {
+        super(config);
+    }
+    
+    public ${entity.classNameUserDao}(DaoConfig config, DaoSession daoSession) {
+        super(config, daoSession);
+    }
+}
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java b/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
index 75071eef..2e171fcb 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/DaoGenerator.java
@@ -43,6 +43,7 @@
     private Pattern patternKeepMethods;
 
     private Template templateDao;
+    private Template templateDaoUser;
     private Template templateDaoMaster;
     private Template templateDaoSession;
     private Template templateEntity;
@@ -63,6 +64,7 @@ public DaoGenerator() throws IOException {
         config.setObjectWrapper(new DefaultObjectWrapper());
 
         templateDao = config.getTemplate("dao.ftl");
+        templateDaoUser = config.getTemplate("dao-user.ftl");
         templateDaoMaster = config.getTemplate("dao-master.ftl");
         templateDaoSession = config.getTemplate("dao-session.ftl");
         templateEntity = config.getTemplate("entity.ftl");
@@ -99,7 +101,9 @@ public void generateAll(Schema schema, String outDir, String outDirTest) throws
 
         List<Entity> entities = schema.getEntities();
         for (Entity entity : entities) {
-            generate(templateDao, outDirFile, entity.getJavaPackageDao(), entity.getClassNameDao(), schema, entity);
+            final String javaPackage = entity.getJavaPackageDao();
+            final String classNameDao = entity.getClassNameDao();
+            generate(templateDao, outDirFile, javaPackage, classNameDao, schema, entity);
             if (!entity.isProtobuf() && !entity.isSkipGeneration()) {
                 generate(templateEntity, outDirFile, entity.getJavaPackage(), entity.getClassName(), schema, entity);
             }
@@ -119,6 +123,15 @@ public void generateAll(Schema schema, String outDir, String outDirTest) throws
                 generate(templateContentProvider, outDirFile, entity.getJavaPackage(), entity.getClassName()
                         + "ContentProvider", schema, entity, additionalObjectsForTemplate);
             }
+
+            // Auto-generate user-specified DAO classes on first run.
+            final String classNameUserDao = entity.getClassNameUserDao();
+            if (!classNameDao.equals(classNameUserDao)) {
+                File userDaoFile = toJavaFilename(outDirFile, javaPackage, classNameUserDao);
+                if (!userDaoFile.exists()) {
+                    generate(templateDaoUser, outDirFile, javaPackage, classNameUserDao, schema, entity);
+                }
+            }
         }
         generate(templateDaoMaster, outDirFile, schema.getDefaultJavaPackageDao(), "DaoMaster", schema, null);
         generate(templateDaoSession, outDirFile, schema.getDefaultJavaPackageDao(), "DaoSession", schema, null);
