diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
index a1dc4a37..6adb65f3 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
@@ -48,7 +48,7 @@ public AbcdefEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'ABCDEF_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'ABCDEF_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'A' INTEGER," + // 1: a
                 "'B' INTEGER," + // 2: b
@@ -60,8 +60,7 @@ public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
                 "'H' INTEGER," + // 8: h
                 "'J' INTEGER," + // 9: j
                 "'I' INTEGER," + // 10: i
-                "'K' INTEGER);"; // 11: k
-        db.execSQL(sql);
+                "'K' INTEGER);"); // 11: k
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
index 7ffdaad7..6001a7b8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
@@ -41,10 +41,9 @@ public AnActiveEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'AN_ACTIVE_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'AN_ACTIVE_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'TEXT' TEXT);"; // 1: text
-        db.execSQL(sql);
+                "'TEXT' TEXT);"); // 1: text
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
index 13d46d3b..97fe8ed3 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
@@ -37,9 +37,8 @@ public AutoincrementEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'AUTOINCREMENT_ENTITY' (" + //
-                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT );"; // 0: id
-        db.execSQL(sql);
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'AUTOINCREMENT_ENTITY' (" + //
+                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT );"); // 0: id
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
index dff3b23a..c54f11f1 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
@@ -39,11 +39,10 @@ public DateEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'DATE_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'DATE_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'DATE' INTEGER," + // 1: date
-                "'DATE_NOT_NULL' INTEGER NOT NULL );"; // 2: dateNotNull
-        db.execSQL(sql);
+                "'DATE_NOT_NULL' INTEGER NOT NULL );"); // 2: dateNotNull
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
index a9dd00ea..01e8f727 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
@@ -38,10 +38,9 @@ public ExtendsImplementsEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'EXTENDS_IMPLEMENTS_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'EXTENDS_IMPLEMENTS_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'TEXT' TEXT);"; // 1: text
-        db.execSQL(sql);
+                "'TEXT' TEXT);"); // 1: text
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
index 288f0e30..0a7118c8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
@@ -48,14 +48,13 @@ public RelationEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'RELATION_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'RELATION_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'PARENT_ID' INTEGER," + // 1: parentId
                 "'TEST_ID' INTEGER," + // 2: testId
                 "'TEST_ID_NOT_NULL' INTEGER NOT NULL ," + // 3: testIdNotNull
                 "'SIMPLE_STRING' TEXT," + // 4: simpleString
-                "'WITHOUT_PROPERTY_TEST_ID' INTEGER);"; // 5: testWithoutProperty
-        db.execSQL(sql);
+                "'WITHOUT_PROPERTY_TEST_ID' INTEGER);"); // 5: testWithoutProperty
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
index 2eb9012e..97f83a8f 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
@@ -46,7 +46,7 @@ public SimpleEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SIMPLE_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SIMPLE_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'SIMPLE_BOOLEAN' INTEGER," + // 1: simpleBoolean
                 "'SIMPLE_BYTE' INTEGER," + // 2: simpleByte
@@ -56,8 +56,7 @@ public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
                 "'SIMPLE_FLOAT' REAL," + // 6: simpleFloat
                 "'SIMPLE_DOUBLE' REAL," + // 7: simpleDouble
                 "'SIMPLE_STRING' TEXT," + // 8: simpleString
-                "'SIMPLE_BYTE_ARRAY' BLOB);"; // 9: simpleByteArray
-        db.execSQL(sql);
+                "'SIMPLE_BYTE_ARRAY' BLOB);"); // 9: simpleByteArray
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
index e8a94f95..07728606 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
@@ -46,7 +46,7 @@ public SimpleEntityNotNullDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SIMPLE_ENTITY_NOT_NULL' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SIMPLE_ENTITY_NOT_NULL' (" + //
                 "'_id' INTEGER PRIMARY KEY NOT NULL ," + // 0: id
                 "'SIMPLE_BOOLEAN' INTEGER NOT NULL ," + // 1: simpleBoolean
                 "'SIMPLE_BYTE' INTEGER NOT NULL ," + // 2: simpleByte
@@ -56,8 +56,7 @@ public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
                 "'SIMPLE_FLOAT' REAL NOT NULL ," + // 6: simpleFloat
                 "'SIMPLE_DOUBLE' REAL NOT NULL ," + // 7: simpleDouble
                 "'SIMPLE_STRING' TEXT NOT NULL ," + // 8: simpleString
-                "'SIMPLE_BYTE_ARRAY' BLOB NOT NULL );"; // 9: simpleByteArray
-        db.execSQL(sql);
+                "'SIMPLE_BYTE_ARRAY' BLOB NOT NULL );"); // 9: simpleByteArray
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
index 7341acee..5e02edbd 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
@@ -46,7 +46,7 @@ public SpecialNamesEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SPECIAL_NAMES_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'SPECIAL_NAMES_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'COUNT' TEXT," + // 1: count
                 "'SELECT' TEXT," + // 2: select
@@ -56,8 +56,7 @@ public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
                 "'DISTINCT' TEXT," + // 6: distinct
                 "'ON' TEXT," + // 7: on
                 "'INDEX' TEXT," + // 8: index
-                "'ORDER' INTEGER);"; // 9: order
-        db.execSQL(sql);
+                "'ORDER' INTEGER);"); // 9: order
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
index ba5910d6..e2c1a9ab 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
@@ -38,10 +38,9 @@ public StringKeyValueEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'STRING_KEY_VALUE_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'STRING_KEY_VALUE_ENTITY' (" + //
                 "'KEY' TEXT PRIMARY KEY NOT NULL ," + // 0: key
-                "'VALUE' TEXT);"; // 1: value
-        db.execSQL(sql);
+                "'VALUE' TEXT);"); // 1: value
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
index 96a1f4c7..a409c974 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
@@ -45,7 +45,7 @@ public TestEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TEST_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TEST_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
                 "'SIMPLE_INT' INTEGER NOT NULL ," + // 1: simpleInt
                 "'SIMPLE_INTEGER' INTEGER," + // 2: simpleInteger
@@ -54,13 +54,12 @@ public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
                 "'INDEXED_STRING' TEXT," + // 5: indexedString
                 "'INDEXED_STRING_ASC_UNIQUE' TEXT," + // 6: indexedStringAscUnique
                 "'SIMPLE_DATE' INTEGER," + // 7: simpleDate
-                "'SIMPLE_BOOLEAN' INTEGER);"; // 8: simpleBoolean
+                "'SIMPLE_BOOLEAN' INTEGER);"); // 8: simpleBoolean
         // Add Indexes
-        sql += "CREATE INDEX IDX_TEST_ENTITY_INDEXED_STRING ON TEST_ENTITY" +
-                " (INDEXED_STRING);";
-        sql += "CREATE UNIQUE INDEX IDX_TEST_ENTITY_INDEXED_STRING_ASC_UNIQUE ON TEST_ENTITY" +
-                " (INDEXED_STRING_ASC_UNIQUE);";
-        db.execSQL(sql);
+        db.execSQL("CREATE INDEX IDX_TEST_ENTITY_INDEXED_STRING ON TEST_ENTITY" +
+                " (INDEXED_STRING);");
+        db.execSQL("CREATE UNIQUE INDEX IDX_TEST_ENTITY_INDEXED_STRING_ASC_UNIQUE ON TEST_ENTITY" +
+                " (INDEXED_STRING_ASC_UNIQUE);");
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
index a4cb13d2..92feaeb2 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
@@ -41,10 +41,9 @@ public ToManyEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'SOURCE_JOIN_PROPERTY' TEXT);"; // 1: sourceJoinProperty
-        db.execSQL(sql);
+                "'SOURCE_JOIN_PROPERTY' TEXT);"); // 1: sourceJoinProperty
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
index 0cfac6a7..f0ef040c 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
@@ -47,12 +47,11 @@ public ToManyTargetEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_TARGET_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_TARGET_ENTITY' (" + //
                 "'TO_MANY_ID' INTEGER," + // 0: toManyId
                 "'TO_MANY_ID_DESC' INTEGER," + // 1: toManyIdDesc
                 "'_id' INTEGER PRIMARY KEY ," + // 2: id
-                "'TARGET_JOIN_PROPERTY' TEXT);"; // 3: targetJoinProperty
-        db.execSQL(sql);
+                "'TARGET_JOIN_PROPERTY' TEXT);"); // 3: targetJoinProperty
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
index 44c530b2..be93b170 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
@@ -47,10 +47,9 @@ public TreeEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TREE_ENTITY' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TREE_ENTITY' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'PARENT_ID' INTEGER);"; // 1: parentId
-        db.execSQL(sql);
+                "'PARENT_ID' INTEGER);"); // 1: parentId
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
index f66d7188..9f2a0708 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
@@ -37,9 +37,8 @@ public KeepEntityDao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'KEEP_ENTITY' (" + //
-                "'_id' INTEGER PRIMARY KEY );"; // 0: id
-        db.execSQL(sql);
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'KEEP_ENTITY' (" + //
+                "'_id' INTEGER PRIMARY KEY );"); // 0: id
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
index 3d1c8b69..606ebf24 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
@@ -42,10 +42,9 @@ public ToManyTarget2Dao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_TARGET2' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_MANY_TARGET2' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'FK_ID' INTEGER);"; // 1: fkId
-        db.execSQL(sql);
+                "'FK_ID' INTEGER);"); // 1: fkId
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
index 8f33d910..ad486df8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
@@ -48,10 +48,9 @@ public RelationSource2Dao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'RELATION_SOURCE2' (" + //
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'RELATION_SOURCE2' (" + //
                 "'_id' INTEGER PRIMARY KEY ," + // 0: id
-                "'TO_ONE_ID' INTEGER);"; // 1: toOneId
-        db.execSQL(sql);
+                "'TO_ONE_ID' INTEGER);"); // 1: toOneId
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
index e5f5c101..7a327a72 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
@@ -39,9 +39,8 @@ public ToOneTarget2Dao(DaoConfig config, DaoSession daoSession) {
 
     /** Creates the underlying database table. */
     public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
-        String sql = "CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_ONE_TARGET2' (" + //
-                "'_id' INTEGER PRIMARY KEY );"; // 0: id
-        db.execSQL(sql);
+        db.execSQL("CREATE TABLE " + (ifNotExists? "IF NOT EXISTS ": "") + "'TO_ONE_TARGET2' (" + //
+                "'_id' INTEGER PRIMARY KEY );"); // 0: id
     }
 
     /** Drops the underlying database table. */
diff --git a/DaoTest/src/de/greenrobot/daotest/IndexTest.java b/DaoTest/src/de/greenrobot/daotest/IndexTest.java
new file mode 100644
index 00000000..bc9c9c0a
--- /dev/null
+++ b/DaoTest/src/de/greenrobot/daotest/IndexTest.java
@@ -0,0 +1,44 @@
+package de.greenrobot.daotest;
+
+import java.util.List;
+
+import junit.framework.Assert;
+
+import de.greenrobot.dao.DaoLog;
+import de.greenrobot.dao.test.AbstractDaoTest;
+import de.greenrobot.daotest.SqliteMaster;
+import de.greenrobot.daotest.SqliteMasterDao;
+import de.greenrobot.daotest.SqliteMasterDao.Properties;
+
+public class IndexTest extends AbstractDaoTest<SqliteMasterDao, SqliteMaster, Void> {
+
+    public IndexTest() {
+        super(SqliteMasterDao.class);
+    }
+
+    public void testIndexesCreated() {
+        Assert.assertEquals(0, getIndexes().size());
+
+        TestEntityDao.createTable(db, true);
+        List<SqliteMaster> indexes = getIndexes();
+        Assert.assertEquals(2, indexes.size());
+
+        SqliteMaster index1 = indexes.get(0);
+        SqliteMaster index2 = indexes.get(1);
+        Assert.assertEquals(TestEntityDao.TABLENAME, index1.getTableName());
+        Assert.assertEquals(TestEntityDao.TABLENAME, index2.getTableName());
+        Assert.assertEquals("IDX_TEST_ENTITY_INDEXED_STRING", index1.getName());
+        Assert.assertEquals("IDX_TEST_ENTITY_INDEXED_STRING_ASC_UNIQUE", index2.getName());
+
+        for (SqliteMaster index : indexes) {
+            DaoLog.v(index.toString());
+        }
+    }
+
+    private List<SqliteMaster> getIndexes() {
+        String where = "WHERE " + Properties.Type.columnName + "=? ORDER BY " + Properties.Name.columnName;
+        List<SqliteMaster> indexes = dao.queryRaw(where, "index");
+        return indexes;
+    }
+
+}
diff --git a/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java b/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
index 45fc23c9..8cb26bf5 100644
--- a/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/entity/SqliteMasterTest.java
@@ -14,11 +14,6 @@ public SqliteMasterTest() {
         super(SqliteMasterDao.class);
     }
 
-    protected SqliteMaster createEntity(Void key) {
-        SqliteMaster entity = new SqliteMaster();
-        return entity;
-    }
-
     public void testLoadAll() {
         List<SqliteMaster> all = dao.loadAll();
         for (SqliteMaster meta : all) {
