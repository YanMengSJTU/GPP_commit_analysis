diff --git a/DaoGenerator/src-test/org/greenrobot/greendao/generator/SimpleDaoGeneratorTest.java b/DaoGenerator/src-test/org/greenrobot/greendao/generator/SimpleDaoGeneratorTest.java
index 7567169d..846ffb67 100644
--- a/DaoGenerator/src-test/org/greenrobot/greendao/generator/SimpleDaoGeneratorTest.java
+++ b/DaoGenerator/src-test/org/greenrobot/greendao/generator/SimpleDaoGeneratorTest.java
@@ -53,11 +53,16 @@ public void testMinimalSchema() throws Exception {
 
     @Test
     public void testDbName() {
-        assertEquals("NORMAL", DaoUtil.dbName("normal"));
-        assertEquals("NORMAL", DaoUtil.dbName("Normal"));
-        assertEquals("CAMEL_CASE", DaoUtil.dbName("CamelCase"));
-        assertEquals("CAMEL_CASE_THREE", DaoUtil.dbName("CamelCaseThree"));
-        assertEquals("CAMEL_CASE_XXXX", DaoUtil.dbName("CamelCaseXXXX"));
+        assertEquals("NORMAL", DaoUtil.dbName("normal", false));
+        assertEquals("NORMAL", DaoUtil.dbName("Normal", false));
+        assertEquals("CAMEL_CASE", DaoUtil.dbName("CamelCase", false));
+        assertEquals("CAMEL_CASE_THREE", DaoUtil.dbName("CamelCaseThree", false));
+        assertEquals("CAMEL_CASE_XXXX", DaoUtil.dbName("CamelCaseXXXX", false));
+        assertEquals("NORMAL", DaoUtil.dbName("normal", true));
+        assertEquals("NORMAL", DaoUtil.dbName("Normal", true));
+        assertEquals("CAMELCASE", DaoUtil.dbName("CamelCase", true));
+        assertEquals("CAMELCASETHREE", DaoUtil.dbName("CamelCaseThree", true));
+        assertEquals("CAMELCASEXXXX", DaoUtil.dbName("CamelCaseXXXX", true));
     }
 
     @Test(expected = RuntimeException.class)
diff --git a/DaoGenerator/src/org/greenrobot/greendao/generator/DaoUtil.java b/DaoGenerator/src/org/greenrobot/greendao/generator/DaoUtil.java
index 45d9b2d2..9887154c 100644
--- a/DaoGenerator/src/org/greenrobot/greendao/generator/DaoUtil.java
+++ b/DaoGenerator/src/org/greenrobot/greendao/generator/DaoUtil.java
@@ -27,14 +27,16 @@
 
 /** Internal API */
 public class DaoUtil {
-    public static String dbName(String javaName) {
+    public static String dbName(String javaName, boolean useCamelCaseNameWithoutInsertions) {
         StringBuilder builder = new StringBuilder(javaName);
-        for (int i = 1; i < builder.length(); i++) {
-            boolean lastWasUpper = Character.isUpperCase(builder.charAt(i - 1));
-            boolean isUpper = Character.isUpperCase(builder.charAt(i));
-            if (isUpper && !lastWasUpper) {
-                builder.insert(i, '_');
-                i++;
+        if(!useCamelCaseNameWithoutInsertions) {
+            for (int i = 1; i < builder.length(); i++) {
+                boolean lastWasUpper = Character.isUpperCase(builder.charAt(i - 1));
+                boolean isUpper = Character.isUpperCase(builder.charAt(i));
+                if (isUpper && !lastWasUpper) {
+                    builder.insert(i, '_');
+                    i++;
+                }
             }
         }
         return builder.toString().toUpperCase();
diff --git a/DaoGenerator/src/org/greenrobot/greendao/generator/Entity.java b/DaoGenerator/src/org/greenrobot/greendao/generator/Entity.java
index e660259a..8dddfc2b 100644
--- a/DaoGenerator/src/org/greenrobot/greendao/generator/Entity.java
+++ b/DaoGenerator/src/org/greenrobot/greendao/generator/Entity.java
@@ -558,7 +558,7 @@ void init2ndPass() {
 
     protected void init2ndPassNamesWithDefaults() {
         if (tableName == null) {
-            tableName = DaoUtil.dbName(className);
+            tableName = DaoUtil.dbName(className, schema.isUseCamelCaseNameWithoutInsertions());
             nonDefaultTableName = false;
         }
 
diff --git a/DaoGenerator/src/org/greenrobot/greendao/generator/Property.java b/DaoGenerator/src/org/greenrobot/greendao/generator/Property.java
index f2b362bf..39509883 100644
--- a/DaoGenerator/src/org/greenrobot/greendao/generator/Property.java
+++ b/DaoGenerator/src/org/greenrobot/greendao/generator/Property.java
@@ -404,7 +404,7 @@ void init2ndPass() {
             columnType = schema.mapToDbType(propertyType);
         }
         if (columnName == null) {
-            columnName = DaoUtil.dbName(propertyName);
+            columnName = DaoUtil.dbName(propertyName, schema.isUseCamelCaseNameWithoutInsertions());
             nonDefaultColumnName = false;
         } else if (primaryKey && propertyType == PropertyType.Long && columnName.equals("_id")) {
             nonDefaultColumnName = false;
diff --git a/DaoGenerator/src/org/greenrobot/greendao/generator/Schema.java b/DaoGenerator/src/org/greenrobot/greendao/generator/Schema.java
index a15f8595..91220758 100644
--- a/DaoGenerator/src/org/greenrobot/greendao/generator/Schema.java
+++ b/DaoGenerator/src/org/greenrobot/greendao/generator/Schema.java
@@ -42,6 +42,7 @@
     private Map<PropertyType, String> propertyToJavaTypeNullable;
     private boolean hasKeepSectionsByDefault;
     private boolean useActiveEntitiesByDefault;
+    private boolean useCamelCaseNameWithoutInsertions;
     private final String name;
     private final String prefix;
 
@@ -66,6 +67,8 @@ public void enableActiveEntitiesByDefault() {
         useActiveEntitiesByDefault = true;
     }
 
+    public void enableCamelCaseNameWithoutInsertions() { useCamelCaseNameWithoutInsertions = true; }
+
     private void initTypeMappings() {
         propertyToDbType = new HashMap<>();
         propertyToDbType.put(PropertyType.Boolean, "INTEGER");
@@ -180,6 +183,8 @@ public boolean isUseActiveEntitiesByDefault() {
         return useActiveEntitiesByDefault;
     }
 
+    public boolean isUseCamelCaseNameWithoutInsertions() { return useCamelCaseNameWithoutInsertions; }
+
     public String getName() {
         return name;
     }
