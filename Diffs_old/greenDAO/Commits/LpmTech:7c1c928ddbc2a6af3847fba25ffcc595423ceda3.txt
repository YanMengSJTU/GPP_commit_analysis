diff --git a/DaoCore/build.gradle b/DaoCore/build.gradle
index ace871bd..e7baa728 100644
--- a/DaoCore/build.gradle
+++ b/DaoCore/build.gradle
@@ -1,4 +1,26 @@
-apply plugin: 'java'
+apply plugin: 'android-library'
+
+android {
+    compileSdkVersion 22
+    buildToolsVersion "22.0.1"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 18
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+}
+
 apply plugin: 'maven'
 apply plugin: 'signing'
 
@@ -19,120 +41,18 @@ repositories {
     mavenCentral()
 }
 
-// provided is not supported in Gradle 1.4, see http://issues.gradle.org/browse/GRADLE-784
-// Like this, it won't appear at all in the POM
-configurations {
-    provided
-    deployerJars
-}
-
 dependencies {
-    provided 'com.google.android:android:4.1.1.4'
-    provided 'com.google.android:android-test:4.1.1.4'
-    provided 'com.google.android:annotations:4.1.1.4'
-    provided 'com.google.android:support-v4:r7'
-    provided 'com.google.android:support-v4:r7'
+    //provided 'com.google.android:android:4.1.1.4'
+    //provided 'com.google.android:android-test:4.1.1.4'
+    //provided 'com.google.android:annotations:4.1.1.4'
+    //provided 'com.google.android:support-v4:r7'
+    //provided 'com.google.android:support-v4:r7'
 
     provided files('libs/sqlcipher.jar')
-
-    // deployerJars 'org.apache.maven.wagon:wagon-webdav-jackrabbit:2.4'
-    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
 }
 
 sourceSets {
     main {
         compileClasspath += configurations.provided
     }
-}
-
-javadoc {
-    failOnError = false
-    classpath += configurations.provided
-    title = " greenDAO ${version} API"
-	options.bottom = 'Available under the Apache License, Version 2.0 - <i>Copyright &#169; 2011-2013 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
-	excludes = ['de/greenrobot/dao/internal','de/greenrobot/dao/Internal*']
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from 'build/docs/javadoc'
-}
-
-task sourcesJar(type: Jar) {
-    from sourceSets.main.allSource
-    classifier = 'sources'
-}
-
-artifacts {
-    archives jar
-    archives javadocJar
-    archives sourcesJar
-}
-
-signing {
-    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
-    project.hasProperty('signing.secretKeyRingFile')) {
-        sign configurations.archives
-    } else {
-        println "Signing information missing/incomplete for ${project.name}"
-    }
-}
-
-uploadArchives {
-    repositories {
-        mavenDeployer {
-            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername') 
-                && project.hasProperty('preferedPassword')) {
-                configuration = configurations.deployerJars
-                repository(url: preferedRepo) {
-                    authentication(userName: preferedUsername, password: preferedPassword)
-                }
-            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-                repository(url: sonatypeRepositoryUrl) {
-                    authentication(userName: sonatypeUsername, password: sonatypePassword)
-                }
-            } else {
-                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
-            }
-
-            pom.project {
-               name 'greenDAO'
-               packaging 'jar'
-               description 'greenDAO is a light and fast ORM for Android'
-               url 'http://greendao-orm.com'
-
-               scm {
-                   url 'https://github.com/greenrobot/greenDAO'
-                   connection 'scm:git@github.com:greenrobot/greenDAO.git'
-                   developerConnection 'scm:git@github.com:greenrobot/greenDAO.git'
-               }
-
-               licenses {
-                   license {
-                       name 'The Apache Software License, Version 2.0'
-                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
-                       distribution 'repo'
-                   }
-               }
-
-               developers {
-                   developer {
-                       id 'greenrobot'
-                       name 'greenrobot'
-                   }
-               }
-               
-               issueManagement {
-                   system 'GitHub Issues'
-                   url 'https://github.com/greenrobot/greenDAO/issues'
-               }
-               
-               organization {
-                   name 'greenrobot'
-                   url 'http://greenrobot.de'
-               }
-           }
-        }
-    }
 }
\ No newline at end of file
diff --git a/DaoCore/AndroidManifest.xml b/DaoCore/src/main/AndroidManifest.xml
similarity index 100%
rename from DaoCore/AndroidManifest.xml
rename to DaoCore/src/main/AndroidManifest.xml
diff --git a/DaoCore/src/de/greenrobot/dao/database/AndroidSQLiteDatabase.java b/DaoCore/src/main/java/de/greenrobot/dao/database/AndroidSQLiteDatabase.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/AndroidSQLiteDatabase.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/AndroidSQLiteDatabase.java
diff --git a/DaoCore/src/de/greenrobot/dao/database/AndroidSQLiteStatement.java b/DaoCore/src/main/java/de/greenrobot/dao/database/AndroidSQLiteStatement.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/AndroidSQLiteStatement.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/AndroidSQLiteStatement.java
diff --git a/DaoCore/src/de/greenrobot/dao/database/Database.java b/DaoCore/src/main/java/de/greenrobot/dao/database/Database.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/Database.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/Database.java
diff --git a/DaoCore/src/de/greenrobot/dao/database/DatabaseStatement.java b/DaoCore/src/main/java/de/greenrobot/dao/database/DatabaseStatement.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/DatabaseStatement.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/DatabaseStatement.java
diff --git a/DaoCore/src/de/greenrobot/dao/database/SQLCipherDatabase.java b/DaoCore/src/main/java/de/greenrobot/dao/database/SQLCipherDatabase.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/SQLCipherDatabase.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/SQLCipherDatabase.java
diff --git a/DaoCore/src/de/greenrobot/dao/database/SQLCipherStatement.java b/DaoCore/src/main/java/de/greenrobot/dao/database/SQLCipherStatement.java
similarity index 100%
rename from DaoCore/src/de/greenrobot/dao/database/SQLCipherStatement.java
rename to DaoCore/src/main/java/de/greenrobot/dao/database/SQLCipherStatement.java
diff --git a/DaoGenerator/build.gradle b/DaoGenerator/build.gradle
index faa4a724..d66676f4 100644
--- a/DaoGenerator/build.gradle
+++ b/DaoGenerator/build.gradle
@@ -58,94 +58,5 @@ test {
     }
 }
 
-javadoc {
-    failOnError = false
-    title = "greenDAO Generator ${version} API"
-    // Unfinished APIs:
-    excludes = ['de/greenrobot/daogenerator/Query*']
-    options.bottom = 'Available under the GPLv3 - <i>Copyright &#169; 2011-2015 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from 'build/docs/javadoc'
-}
-
-task sourcesJar(type: Jar) {
-    from sourceSets.main.allSource
-    classifier = 'sources'
-}
-
-artifacts {
-    archives jar
-    archives javadocJar
-    archives sourcesJar
-}
-
-signing {
-    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
-    project.hasProperty('signing.secretKeyRingFile')) {
-        sign configurations.archives
-    } else {
-        println "Signing information missing/incomplete for ${project.name}"
-    }
-}
-
-uploadArchives {
-    repositories {
-        mavenDeployer {
-            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername') 
-                && project.hasProperty('preferedPassword')) {
-                configuration = configurations.deployerJars
-                repository(url: preferedRepo) {
-                    authentication(userName: preferedUsername, password: preferedPassword)
-                }
-            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-                repository(url: sonatypeRepositoryUrl) {
-                    authentication(userName: sonatypeUsername, password: sonatypePassword)
-                }
-            } else {
-                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
-            }
-
-            pom.project {
-               name 'greenDAO Generator'
-               packaging 'jar'
-               description 'Code generator for greenDAO, the light and fast ORM for Android'
-               url 'http://greendao-orm.com'
 
-               scm {
-                   url 'https://github.com/greenrobot/greenDAO'
-                   connection 'scm:git@github.com:greenrobot/greenDAO.git'
-                   developerConnection 'scm:git@github.com:greenrobot/greenDAO.git'
-               }
-
-               licenses {
-                   license {
-                       name 'GNU General Public License, Version 3'
-                       url 'http://www.gnu.org/licenses/gpl.txt'
-                       distribution 'repo'
-                   }
-               }
-
-               developers {
-                   developer {
-                       id 'greenrobot'
-                       name 'greenrobot'
-                   }
-               }
-               
-               issueManagement {
-                   system 'GitHub Issues'
-                   url 'https://github.com/greenrobot/greenDAO/issues'
-               }
-               
-               organization {
-                   name 'greenrobot'
-                   url 'http://greenrobot.de'
-               }
-           }
-        }
-    }
-}
\ No newline at end of file
+apply from: './upload.gradle'
\ No newline at end of file
diff --git a/DaoGenerator/upload.gradle b/DaoGenerator/upload.gradle
new file mode 100644
index 00000000..93ae4cd8
--- /dev/null
+++ b/DaoGenerator/upload.gradle
@@ -0,0 +1,118 @@
+/*
+ * Copyright 2013 Chris Banes
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+apply plugin: 'maven'
+apply plugin: 'signing'
+
+def isReleaseBuild() {
+    return VERSION_NAME.contains("SNAPSHOT") == false
+}
+
+def getReleaseRepositoryUrl() {
+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
+            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+}
+
+def getSnapshotRepositoryUrl() {
+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
+            : "https://oss.sonatype.org/content/repositories/snapshots/"
+}
+
+def getRepositoryUsername() {
+    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
+}
+
+def getRepositoryPassword() {
+    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
+}
+
+uploadArchives {
+    repositories {
+        mavenDeployer {
+            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
+
+            pom.groupId = GROUP
+            pom.artifactId = POM_ARTIFACT_ID
+            pom.version = VERSION_NAME
+
+            repository(url: getReleaseRepositoryUrl()) {
+                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+            }
+            snapshotRepository(url: getSnapshotRepositoryUrl()) {
+                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+            }
+
+
+            pom.project {
+                name POM_NAME
+                packaging POM_PACKAGING
+                description POM_DESCRIPTION
+                url POM_URL
+
+                scm {
+                    url POM_SCM_URL
+                    connection POM_SCM_CONNECTION
+                    developerConnection POM_SCM_DEV_CONNECTION
+                }
+
+                licenses {
+                    license {
+                        name POM_LICENCE_NAME
+                        url POM_LICENCE_URL
+                        distribution POM_LICENCE_DIST
+                    }
+                }
+
+                developers {
+                    developer {
+                        id POM_DEVELOPER_ID
+                        name POM_DEVELOPER_NAME
+                    }
+                }
+            }
+        }
+    }
+}
+
+signing {
+    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
+    sign configurations.archives
+}
+
+
+javadoc {
+    failOnError = false
+    title = "greenDAO Generator ${version} API"
+    // Unfinished APIs:
+    excludes = ['de/greenrobot/daogenerator/Query*']
+    options.bottom = 'Available under the GPLv3 - <i>Copyright &#169; 2011-2015 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
+}
+
+task javadocJar(type: Jar, dependsOn: javadoc) {
+    classifier = 'javadoc'
+    from 'build/docs/javadoc'
+}
+
+task sourcesJar(type: Jar) {
+    from sourceSets.main.allSource
+    classifier = 'sources'
+}
+
+artifacts {
+    archives jar
+    archives javadocJar
+    archives sourcesJar
+}
\ No newline at end of file
