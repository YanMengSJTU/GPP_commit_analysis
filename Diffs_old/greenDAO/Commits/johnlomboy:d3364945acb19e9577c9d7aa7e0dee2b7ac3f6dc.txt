diff --git a/DaoGenerator/src-template/entity-base.ftl b/DaoGenerator/src-template/entity-base.ftl
index c4ace395..582f931f 100644
--- a/DaoGenerator/src-template/entity-base.ftl
+++ b/DaoGenerator/src-template/entity-base.ftl
@@ -289,17 +289,33 @@ property>${property.javaType} ${property.propertyName}<#if property_has_next>, <
             return;//both came from db, no need to run this.
         }
         <#list entity.properties as property>
+
             <#if property.serialized??>
         //serialized
-        if(other.get${property.serialized.propertyName?cap_first}() != null) {
+                <#if property.constant >
+        //constant serialized field
+        if(${property.propertyName} == null && ${property.serialized.propertyName} == null) {
+                <#else>
+                if(other.get${property.serialized.propertyName?cap_first}() != null) {
+                </#if>
             set${property.serialized.propertyName?cap_first}(other.get${property.serialized.propertyName?cap_first}());
         }
             <#elseif property.enumarated??>
+                <#if property.constant >
+        //constant property
+        if(${property.propertyName} == null && ${property.enumarated.propertyName} == null) {
+                <#else>
         if(other.get${property.enumarated.propertyName?cap_first}() != null) {
+                </#if>
             set${property.enumarated.propertyName?cap_first}(other.get${property.enumarated.propertyName?cap_first}());
         }
             <#else>
+                <#if property.constant >
+        //constant property field
+        if(${property.propertyName} == null) {
+                <#else>
         if(other.${property.propertyName} != null) {
+                </#if>
             this.${property.propertyName} = other.${property.propertyName};
         }
             </#if>
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/EnumProperty.java b/DaoGenerator/src/de/greenrobot/daogenerator/EnumProperty.java
index 6a0db5f6..c9eab698 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/EnumProperty.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/EnumProperty.java
@@ -34,6 +34,15 @@ public String getClassName() {
         return className;
     }
 
+    public EnumProperty constant() {
+        property.setConstant(true);
+        return this;
+    }
+
+    public boolean isConstant() {
+        return property.isConstant();
+    }
+
     public List<Annotation> getSetterAnnotations() {
         return setterAnnotations;
     }
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
index fbe07604..d8ae8f33 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
@@ -23,6 +23,10 @@
 /** Model class for an entity's property: a Java property mapped to a data base column. */
 public class Property {
 
+    public void setConstant(boolean constant) {
+        this.constant = constant;
+    }
+
     public static class PropertyBuilder {
         private final Property property;
 
@@ -97,6 +101,11 @@ public PropertyBuilder notNull() {
             return this;
         }
 
+        public PropertyBuilder constant() {
+            property.constant = true;
+            return this;
+        }
+
         public PropertyBuilder index() {
             Index index = new Index();
             index.addProperty(property);
@@ -146,6 +155,8 @@ public Property getProperty() {
 
     private boolean unique;
     private boolean notNull;
+    //means this field does never change. helpful for creating much more efficient updateNotNulls
+    private boolean constant;
     private SerializedProperty serialized;
     private EnumProperty enumarated;
 
@@ -225,6 +236,10 @@ public boolean isNotNull() {
         return notNull;
     }
 
+    public boolean isConstant() {
+        return constant;
+    }
+
     public String getJavaType() {
         return javaType;
     }
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java b/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
index b5fc7b83..3ecc2106 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
@@ -71,10 +71,19 @@ public String getClassName() {
         return className;
     }
 
+    public SerializedProperty constant() {
+        property.setConstant(true);
+        return this;
+    }
+
+    public boolean isConstant() {
+        return property.isConstant();
+    }
+
     public List<Annotation> getFieldAnnotations() {
         return fieldAnnotations;
     }
-    
+
     public List<Annotation> getSetterAnnotations() {
         return setterAnnotations;
     }
@@ -82,7 +91,7 @@ public String getClassName() {
     public List<Annotation> getGetterAnnotations() {
         return getterAnnotations;
     }
-    
+
     public SerializedProperty addSetterAnnotation(Annotation annotation) {
         setterAnnotations.add(annotation);
         return this;
