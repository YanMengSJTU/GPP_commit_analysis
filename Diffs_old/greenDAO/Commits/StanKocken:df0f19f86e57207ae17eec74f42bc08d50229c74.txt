diff --git a/DaoGenerator/src-template/entity.ftl b/DaoGenerator/src-template/entity.ftl
index 0e383d84..c6645d0c 100644
--- a/DaoGenerator/src-template/entity.ftl
+++ b/DaoGenerator/src-template/entity.ftl
@@ -22,6 +22,10 @@ along with greenDAO Generator.  If not, see <http://www.gnu.org/licenses/>.
 <#assign complexTypes = ["String", "ByteArray", "Date"]/>
 package ${entity.javaPackage};
 
+<#if entity.implParcelable>
+import android.os.Parcel;
+import android.os.Parcelable;
+</#if>
 <#if entity.toManyRelations?has_content>
 import java.util.List;
 </#if>
@@ -279,6 +283,48 @@ ${property.javaDocSetter}
     }
 
 </#if>
+
+<#if entity.implParcelable>
+    //Parcelable
+    protected ${entity.className} (Parcel in) {
+        <#list entity.properties as property>
+        <#if property.parcelableTypeInEntity == "Boolean">
+        ${property.propertyName} = in.readByte() != 0;
+        <#else>
+        ${property.propertyName} = in.read${property.parcelableTypeInEntity}();
+        </#if>
+        </#list>
+    }
+
+    public static final Creator<${entity.className}> CREATOR = new Creator<${entity.className}>() {
+        @Override
+        public ${entity.className} createFromParcel(Parcel in) {
+            return new ${entity.className}(in);
+        }
+
+        @Override
+        public ${entity.className}[] newArray(int size) {
+            return new ${entity.className}[size];
+        }
+    };
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        <#list entity.properties as property>
+        <#if property.parcelableTypeInEntity == "Boolean">
+        dest.writeByte((byte) (${property.propertyName} ? 1 : 0));
+        <#else>
+        dest.write${property.parcelableTypeInEntity}(${property.propertyName});
+        </#if>
+        </#list>
+    }
+    //Parcelable END
+</#if>
 <#if entity.hasKeepSections>
     // KEEP METHODS - put your custom methods here
 ${keepMethods!}    // KEEP METHODS END
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
index da865a42..bc6ef28c 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
@@ -75,6 +75,8 @@
     private Boolean active;
     private Boolean hasKeepSections;
 
+    private boolean implParcelable;
+
     Entity(Schema schema, String className) {
         this.schema = schema;
         this.className = className;
@@ -93,6 +95,14 @@
         constructors = true;
     }
 
+    public void setImplParcelable(boolean impl){
+        implParcelable = impl;
+    }
+
+    public boolean getImplParcelable(){
+        return implParcelable;
+    }
+
     public PropertyBuilder addBooleanProperty(String propertyName) {
         return addProperty(PropertyType.Boolean, propertyName);
     }
@@ -437,6 +447,9 @@ public void setHasKeepSections(Boolean hasKeepSections) {
     }
 
     public List<String> getInterfacesToImplement() {
+        if(implParcelable && !interfacesToImplement.contains("Parcelable")){
+            interfacesToImplement.add("Parcelable");
+        }
         return interfacesToImplement;
     }
 
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
index 14534df5..675acdf5 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Property.java
@@ -257,6 +257,18 @@ public String getJavaTypeInEntity() {
         }
     }
 
+    public String getParcelableTypeInEntity(){
+        String javaType = getJavaTypeInEntity();
+        if("Integer".equals(javaType)){
+            javaType = "Int";
+        }
+        if(Character.isLowerCase(javaType.charAt(0))){
+            javaType = new StringBuilder().append(Character.toUpperCase(javaType.charAt(0))).append(javaType.substring(1)).toString();
+        }
+
+        return javaType;
+    }
+
     public int getOrdinal() {
         return ordinal;
     }
