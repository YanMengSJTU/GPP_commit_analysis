diff --git a/DaoCore/src/de/greenrobot/dao/test/DbTest.java b/DaoCore/src/de/greenrobot/dao/test/DbTest.java
index 55da19a5..9f869170 100644
--- a/DaoCore/src/de/greenrobot/dao/test/DbTest.java
+++ b/DaoCore/src/de/greenrobot/dao/test/DbTest.java
@@ -20,11 +20,12 @@
 import java.sql.SQLException;
 import java.util.Random;
 
+
 import android.app.Application;
 import android.app.Instrumentation;
 import android.test.AndroidTestCase;
 import de.greenrobot.dao.DbUtils;
-import de.greenrobot.dao.JDBCUtils;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 /**
  * Base class for database related testing, which prepares an in-memory or an file-based DB (using the test {@link
diff --git a/DaoCore/src/de/greenrobot/platform/android/util/SQLiteUtil.java b/DaoCore/src/de/greenrobot/platform/android/util/SQLiteUtil.java
new file mode 100644
index 00000000..529f88bf
--- /dev/null
+++ b/DaoCore/src/de/greenrobot/platform/android/util/SQLiteUtil.java
@@ -0,0 +1,29 @@
+package de.greenrobot.platform.android.util;
+
+import java.sql.Connection;
+import java.sql.SQLException;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+
+public class SQLiteUtil
+{	
+	public static SQLiteDatabase from(Connection connection, Context context)
+	{
+		SQLiteDatabase db = null;
+		if (connection != null)
+		{
+			try
+			{
+				String dbname = connection.getCatalog();
+				db = context.openOrCreateDatabase(dbname, 0, null);
+			}
+			catch ( SQLException e )
+			{
+				throw new RuntimeException( "can not get database name", e );
+			}
+		}
+		return db;
+	}
+	
+}
diff --git a/DaoCore/src/de/greenrobot/dao/JDBCUtils.java b/DaoCore/src/de/greenrobot/platform/java/util/JDBCUtils.java
similarity index 98%
rename from DaoCore/src/de/greenrobot/dao/JDBCUtils.java
rename to DaoCore/src/de/greenrobot/platform/java/util/JDBCUtils.java
index 640f338a..e70568d5 100644
--- a/DaoCore/src/de/greenrobot/dao/JDBCUtils.java
+++ b/DaoCore/src/de/greenrobot/platform/java/util/JDBCUtils.java
@@ -1,4 +1,4 @@
-package de.greenrobot.dao;
+package de.greenrobot.platform.java.util;
 
 import java.io.File;
 import java.sql.Connection;
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
index 3b6c73d7..040cfba1 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AbcdefEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntity.java b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntity.java
index fe526f5e..8a2be01e 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntity.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntity.java
@@ -2,7 +2,7 @@
 
 import java.sql.SQLException;
 
-import de.greenrobot.daotest.DaoSession;
+import de.greenrobot.dao.AbstractDao;
 import de.greenrobot.dao.DaoException;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
index eb16640f..f21eab26 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AnActiveEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
index 9c32260a..50564116 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/AutoincrementEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/DaoMaster.java b/DaoTest/src-gen/de/greenrobot/daotest/DaoMaster.java
index 13cf9d67..bb77f261 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/DaoMaster.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/DaoMaster.java
@@ -9,24 +9,8 @@
 import android.database.sqlite.SQLiteOpenHelper;
 import android.util.Log;
 import de.greenrobot.dao.AbstractDaoMaster;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.identityscope.IdentityScopeType;
-
-import de.greenrobot.daotest.SimpleEntityDao;
-import de.greenrobot.daotest.SimpleEntityNotNullDao;
-import de.greenrobot.daotest.TestEntityDao;
-import de.greenrobot.daotest.RelationEntityDao;
-import de.greenrobot.daotest.DateEntityDao;
-import de.greenrobot.daotest.SpecialNamesEntityDao;
-import de.greenrobot.daotest.AbcdefEntityDao;
-import de.greenrobot.daotest.ToManyTargetEntityDao;
-import de.greenrobot.daotest.ToManyEntityDao;
-import de.greenrobot.daotest.TreeEntityDao;
-import de.greenrobot.daotest.AnActiveEntityDao;
-import de.greenrobot.daotest.ExtendsImplementsEntityDao;
-import de.greenrobot.daotest.StringKeyValueEntityDao;
-import de.greenrobot.daotest.AutoincrementEntityDao;
-import de.greenrobot.daotest.SqliteMasterDao;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
index e5e5200a..4c740a0c 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/DateEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
index 0e0201e3..d0eb5998 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ExtendsImplementsEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntity.java b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntity.java
index 2489269c..7ab954f1 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntity.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntity.java
@@ -2,7 +2,7 @@
 
 import java.sql.SQLException;
 
-import de.greenrobot.daotest.DaoSession;
+import de.greenrobot.dao.AbstractDao;
 import de.greenrobot.dao.DaoException;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
index 4c5d57ff..752cf633 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/RelationEntityDao.java
@@ -9,10 +9,10 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.dao.internal.SqlUtils;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityContentProvider.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityContentProvider.java
index 3aff19da..98f3be7f 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityContentProvider.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityContentProvider.java
@@ -1,6 +1,18 @@
 package de.greenrobot.daotest;
 
+import java.sql.Connection;
+
+import android.content.ContentProvider;
+import android.content.ContentResolver;
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.UriMatcher;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteQueryBuilder;
 import android.net.Uri;
+import de.greenrobot.dao.DaoLog;
+import de.greenrobot.platform.android.util.SQLiteUtil;
 
 /* Copy this code snippet into your AndroidManifest.xml inside the <application> element:
 
@@ -10,104 +22,105 @@
 */
 
 ////TODO check if this class is really necessary
-public class SimpleEntityContentProvider {//extends ContentProvider {
+public class SimpleEntityContentProvider extends ContentProvider {
 
     public static final String AUTHORITY = "de.greenrobot.daotest";
     public static final String BASE_PATH = "SimpleEntity";
     public static final Uri CONTENT_URI = Uri.parse("content://" + AUTHORITY + "/" + BASE_PATH);
-//    public static final String CONTENT_TYPE = ContentResolver.CURSOR_DIR_BASE_TYPE
-//            + "/" + BASE_PATH;
-//    public static final String CONTENT_ITEM_TYPE = ContentResolver.CURSOR_ITEM_BASE_TYPE
-//            + "/" + BASE_PATH;
-//            
-//    private static final String TABLENAME = SimpleEntityDao.TABLENAME;
-//    private static final String PK = SimpleEntityDao.Properties.Id.columnName;
-//
-//    private static final int SIMPLEENTITY_DIR = 0;
-//    private static final int SIMPLEENTITY_ID = 1;
-//
-//    private static final UriMatcher sURIMatcher;
-//     
-//    static {
-//        sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);      
-//        sURIMatcher.addURI(AUTHORITY, BASE_PATH, SIMPLEENTITY_DIR);
-//        sURIMatcher.addURI(AUTHORITY, BASE_PATH + "/#", SIMPLEENTITY_ID);
-//    }
-//    
-//    /** 
-//    * This must be set from outside, it's recommended to do this inside your Application object.
-//    * Subject to change (static isn't nice).
-//    */
+    public static final String CONTENT_TYPE = ContentResolver.CURSOR_DIR_BASE_TYPE
+            + "/" + BASE_PATH;
+    public static final String CONTENT_ITEM_TYPE = ContentResolver.CURSOR_ITEM_BASE_TYPE
+            + "/" + BASE_PATH;
+            
+    private static final String TABLENAME = SimpleEntityDao.TABLENAME;
+    private static final String PK = SimpleEntityDao.Properties.Id.columnName;
+
+    private static final int SIMPLEENTITY_DIR = 0;
+    private static final int SIMPLEENTITY_ID = 1;
+
+    private static final UriMatcher sURIMatcher;
+     
+    static {
+        sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);      
+        sURIMatcher.addURI(AUTHORITY, BASE_PATH, SIMPLEENTITY_DIR);
+        sURIMatcher.addURI(AUTHORITY, BASE_PATH + "/#", SIMPLEENTITY_ID);
+    }
+    
+    /** 
+    * This must be set from outside, it's recommended to do this inside your Application object.
+    * Subject to change (static isn't nice).
+    */
     public static DaoSession daoSession;
-//    
-//    @Override
-//    public boolean onCreate() {
-//        // if(daoSession == null) {
-//        //     throw new IllegalStateException("DaoSession must be set before content provider is created");
-//        // }
-//        DaoLog.d("Content Provider started: " + CONTENT_URI);
-//        return true;
-//    }
-//    
-//    protected Connection getConnection() {
-//        if(daoSession == null) {
-//            throw new IllegalStateException("DaoSession must be set during content provider is active");
-//        }
-//        return daoSession.getConnection();
-//    }
-//        
-//    @Override
-//    public Uri insert(Uri uri, ContentValues values) {
-//        throw new UnsupportedOperationException("This content provider is readonly");
-//    }
-//
-//    @Override
-//    public int delete(Uri uri, String selection, String[] selectionArgs) {
-//        throw new UnsupportedOperationException("This content provider is readonly");
-//    }
-//    
-//    @Override
-//    public int update(Uri uri, ContentValues values, String selection,
-//            String[] selectionArgs) {
-//        throw new UnsupportedOperationException("This content provider is readonly");
-//    }
-// 
-////    @Override
-////    public Cursor query(Uri uri, String[] projection, String selection,
-////            String[] selectionArgs, String sortOrder) {
-////
-////        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();
-////        int uriType = sURIMatcher.match(uri);
-////        switch (uriType) {
-////        case SIMPLEENTITY_DIR:
-////            queryBuilder.setTables(TABLENAME);
-////            break;
-////        case SIMPLEENTITY_ID:
-////            queryBuilder.setTables(TABLENAME);
-////            queryBuilder.appendWhere(PK + "="
-////                    + uri.getLastPathSegment());
-////            break;
-////        default:
-////            throw new IllegalArgumentException("Unknown URI: " + uri);
-////        }
-////
-////        Connection connection = getConnection();
-////        Cursor cursor = queryBuilder.query(db, projection, selection,
-////                selectionArgs, null, null, sortOrder);
-////        cursor.setNotificationUri(getContext().getContentResolver(), uri);
-////
-////        return cursor;
-////    }
-//    
-//    @Override
-//    public final String getType(Uri uri) {
-//        switch (sURIMatcher.match(uri)) {
-//        case SIMPLEENTITY_DIR:
-//            return CONTENT_TYPE;
-//        case SIMPLEENTITY_ID:
-//            return CONTENT_ITEM_TYPE;
-//        default :
-//            throw new IllegalArgumentException("Unsupported URI: " + uri);
-//        }
-//    }
+    
+    @Override
+    public boolean onCreate() {
+        // if(daoSession == null) {
+        //     throw new IllegalStateException("DaoSession must be set before content provider is created");
+        // }
+        DaoLog.d("Content Provider started: " + CONTENT_URI);
+        return true;
+    }
+    
+    protected Connection getConnection() {
+        if(daoSession == null) {
+            throw new IllegalStateException("DaoSession must be set during content provider is active");
+        }
+        return daoSession.getConnection();
+    }
+        
+    @Override
+    public Uri insert(Uri uri, ContentValues values) {
+        throw new UnsupportedOperationException("This content provider is readonly");
+    }
+
+    @Override
+    public int delete(Uri uri, String selection, String[] selectionArgs) {
+        throw new UnsupportedOperationException("This content provider is readonly");
+    }
+    
+    @Override
+    public int update(Uri uri, ContentValues values, String selection,
+            String[] selectionArgs) {
+        throw new UnsupportedOperationException("This content provider is readonly");
+    }
+ 
+    @Override
+    public Cursor query(Uri uri, String[] projection, String selection,
+            String[] selectionArgs, String sortOrder) {
+
+        SQLiteQueryBuilder queryBuilder = new SQLiteQueryBuilder();
+        int uriType = sURIMatcher.match(uri);
+        switch (uriType) {
+        case SIMPLEENTITY_DIR:
+            queryBuilder.setTables(TABLENAME);
+            break;
+        case SIMPLEENTITY_ID:
+            queryBuilder.setTables(TABLENAME);
+            queryBuilder.appendWhere(PK + "="
+                    + uri.getLastPathSegment());
+            break;
+        default:
+            throw new IllegalArgumentException("Unknown URI: " + uri);
+        }
+
+        Connection connection = getConnection();
+        SQLiteDatabase db = SQLiteUtil.from(connection, getContext());
+        Cursor cursor = queryBuilder.query(db, projection, selection,
+                selectionArgs, null, null, sortOrder);
+        cursor.setNotificationUri(getContext().getContentResolver(), uri);
+
+        return cursor;
+    }
+    
+    @Override
+    public final String getType(Uri uri) {
+        switch (sURIMatcher.match(uri)) {
+        case SIMPLEENTITY_DIR:
+            return CONTENT_TYPE;
+        case SIMPLEENTITY_ID:
+            return CONTENT_ITEM_TYPE;
+        default :
+            throw new IllegalArgumentException("Unsupported URI: " + uri);
+        }
+    }
 }
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
index e0ebb1f5..6e73d231 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
index fbca3c8e..3bcc7adf 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SimpleEntityNotNullDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
index 0d3ceb27..b9f08b43 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SpecialNamesEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
index 3a68e1de..838f4888 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/SqliteMasterDao.java
@@ -5,9 +5,9 @@
 import java.sql.SQLException;
 
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
index 59215bde..854be5ae 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/StringKeyValueEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
index 72eb44bc..711b2c9c 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TestEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
index d3a2282b..6baefd40 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyEntityDao.java
@@ -7,9 +7,9 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
index edafc550..855d145a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/ToManyTargetEntityDao.java
@@ -8,11 +8,11 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.dao.query.Query;
 import de.greenrobot.dao.query.QueryBuilder;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntity.java b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntity.java
index 52accf78..2820b803 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntity.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntity.java
@@ -2,7 +2,8 @@
 
 import java.sql.SQLException;
 import java.util.List;
-import de.greenrobot.daotest.DaoSession;
+
+import de.greenrobot.dao.AbstractDao;
 import de.greenrobot.dao.DaoException;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
index d68000ef..8357aaca 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest/TreeEntityDao.java
@@ -9,12 +9,12 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.dao.internal.SqlUtils;
 import de.greenrobot.dao.query.Query;
 import de.greenrobot.dao.query.QueryBuilder;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/DaoMaster.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/DaoMaster.java
index 582e859b..342fbd26 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/DaoMaster.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/DaoMaster.java
@@ -9,11 +9,8 @@
 import android.util.Log;
 import de.greenrobot.dao.AbstractDaoMaster;
 import de.greenrobot.dao.identityscope.IdentityScopeType;
-
-import de.greenrobot.daotest2.dao.KeepEntityDao;
-import de.greenrobot.daotest2.dao.ToManyTarget2Dao;
-import de.greenrobot.daotest2.to1_specialdao.ToOneTarget2Dao;
 import de.greenrobot.daotest2.specialdao.RelationSource2Dao;
+import de.greenrobot.daotest2.to1_specialdao.ToOneTarget2Dao;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
index b5b02b12..40ebce17 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/KeepEntityDao.java
@@ -6,10 +6,10 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.daotest2.KeepEntity;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
index a0fdadae..2c88068a 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/dao/ToManyTarget2Dao.java
@@ -7,12 +7,12 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.dao.query.Query;
 import de.greenrobot.dao.query.QueryBuilder;
 import de.greenrobot.daotest2.ToManyTarget2;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
index 29e99710..fac9b87c 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/specialdao/RelationSource2Dao.java
@@ -8,13 +8,13 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.dao.internal.SqlUtils;
 import de.greenrobot.daotest2.dao.DaoSession;
 import de.greenrobot.daotest2.specialentity.RelationSource2;
 import de.greenrobot.daotest2.to1_specialentity.ToOneTarget2;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/specialentity/RelationSource2.java b/DaoTest/src-gen/de/greenrobot/daotest2/specialentity/RelationSource2.java
index 2c237909..f72725d9 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/specialentity/RelationSource2.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/specialentity/RelationSource2.java
@@ -2,10 +2,11 @@
 
 import java.sql.SQLException;
 import java.util.List;
-import de.greenrobot.daotest2.dao.DaoSession;
-import de.greenrobot.dao.DaoException;
 
+import de.greenrobot.dao.AbstractDao;
+import de.greenrobot.dao.DaoException;
 import de.greenrobot.daotest2.ToManyTarget2;
+import de.greenrobot.daotest2.dao.DaoSession;
 import de.greenrobot.daotest2.dao.ToManyTarget2Dao;
 import de.greenrobot.daotest2.specialdao.RelationSource2Dao;
 import de.greenrobot.daotest2.to1_specialdao.ToOneTarget2Dao;
diff --git a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
index 9b1bf68a..b1ea4ea8 100644
--- a/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
+++ b/DaoTest/src-gen/de/greenrobot/daotest2/to1_specialdao/ToOneTarget2Dao.java
@@ -6,11 +6,11 @@
 
 import android.database.sqlite.SQLiteDatabase;
 import de.greenrobot.dao.AbstractDao;
-import de.greenrobot.dao.JDBCUtils;
 import de.greenrobot.dao.Property;
 import de.greenrobot.dao.internal.DaoConfig;
 import de.greenrobot.daotest2.dao.DaoSession;
 import de.greenrobot.daotest2.to1_specialentity.ToOneTarget2;
+import de.greenrobot.platform.java.util.JDBCUtils;
 
 // THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
 /** 
diff --git a/DaoTest/src/de/greenrobot/daotest/DbTestTest.java b/DaoTest/src/de/greenrobot/daotest/DbTestTest.java
index 1ec6d84f..657408fc 100644
--- a/DaoTest/src/de/greenrobot/daotest/DbTestTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/DbTestTest.java
@@ -1,8 +1,8 @@
 package de.greenrobot.daotest;
 
+import junit.framework.AssertionFailedError;
 import android.app.Application;
 import de.greenrobot.dao.test.DbTest;
-import junit.framework.AssertionFailedError;
 
 public class DbTestTest extends DbTest {
     public static class MyApp extends Application {
diff --git a/DaoTest/src/de/greenrobot/daotest/contentprovider/SimpleEntityContentProviderTest.java b/DaoTest/src/de/greenrobot/daotest/contentprovider/SimpleEntityContentProviderTest.java
index f0821cdc..c2e22c21 100644
--- a/DaoTest/src/de/greenrobot/daotest/contentprovider/SimpleEntityContentProviderTest.java
+++ b/DaoTest/src/de/greenrobot/daotest/contentprovider/SimpleEntityContentProviderTest.java
@@ -21,7 +21,6 @@
 
 import android.database.Cursor;
 import android.test.suitebuilder.annotation.Suppress;
-
 import de.greenrobot.dao.test.AbstractDaoSessionTest;
 import de.greenrobot.daotest.DaoMaster;
 import de.greenrobot.daotest.DaoSession;
