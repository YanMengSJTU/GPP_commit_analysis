diff --git a/DaoCore/src/de/greenrobot/dao/annotations/SerializedField.java b/DaoCore/src/de/greenrobot/dao/annotations/SerializedField.java
new file mode 100644
index 00000000..0d8b441c
--- /dev/null
+++ b/DaoCore/src/de/greenrobot/dao/annotations/SerializedField.java
@@ -0,0 +1,11 @@
+package de.greenrobot.dao.annotations;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+/**
+ * add this annotation to a field that will be serialized into db
+ */
+@Retention(RetentionPolicy.RUNTIME)
+public @interface SerializedField {
+}
diff --git a/DaoGenerator/src-template/entity-base.ftl b/DaoGenerator/src-template/entity-base.ftl
index 259d62d8..c4ace395 100644
--- a/DaoGenerator/src-template/entity-base.ftl
+++ b/DaoGenerator/src-template/entity-base.ftl
@@ -85,6 +85,7 @@ as ifc>${ifc}<#if ifc_has_next>, </#if></#list></#if> {
 <#if  entity.serializedProperties?has_content>
     //denormalized properties
     <#list entity.serializedProperties as serialized>
+    <@print_annotations serialized.fieldAnnotations, "    "/>
     private ${serialized.className} ${serialized.propertyName};
     </#list>
 </#if>
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
index 22da5ebd..70575492 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/Entity.java
@@ -691,6 +691,10 @@ private void init3rdPassAdditionalImports() {
         for(Property property : properties) {
             checkAdditionalImportsProperty(property);
         }
+        
+        for(SerializedProperty property : serializedProperties) {
+            checkAdditionalImportsSerializedProperty(property);
+        }
 
         checkAddionalImportsAnnotaion(annotations);
 
@@ -708,6 +712,12 @@ private void checkAdditionalImportsProperty(Property property) {
         checkAddionalImportsAnnotaion(property.getGetterAnnotations());
         checkAddionalImportsAnnotaion(property.getSetterAnnotations());
     }
+    
+    private void checkAdditionalImportsSerializedProperty(SerializedProperty property) {
+        checkAddionalImportsAnnotaion(property.getFieldAnnotations());
+        checkAddionalImportsAnnotaion(property.getGetterAnnotations());
+        checkAddionalImportsAnnotaion(property.getSetterAnnotations());
+    }
 
     private void checkAddionalImportsAnnotaion(List<Annotation> annotations) {
         for(Annotation annotation : annotations) {
diff --git a/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java b/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
index b5c9ca6f..b5fc7b83 100644
--- a/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
+++ b/DaoGenerator/src/de/greenrobot/daogenerator/SerializedProperty.java
@@ -16,6 +16,7 @@
     protected String genericClassName;
     protected List<String> imports = new ArrayList<String>();
 
+    private List<Annotation> fieldAnnotations = new ArrayList<Annotation>();
     private List<Annotation> setterAnnotations = new ArrayList<Annotation>();
     private List<Annotation> getterAnnotations = new ArrayList<Annotation>();
 
@@ -25,6 +26,7 @@ public SerializedProperty(Property property, String propertyName, String classNa
         this.className = className;
         setGenericClassNameFromClassName(className);
         property.setSerialized(this);
+        fieldAnnotations.add(new Annotation("SerializedField").withPackage("de.greenrobot.dao.annotations.SerializedField"));
     }
 
     private static Map<String, String> genericMapping = new HashMap<String, String>();
@@ -69,6 +71,10 @@ public String getClassName() {
         return className;
     }
 
+    public List<Annotation> getFieldAnnotations() {
+        return fieldAnnotations;
+    }
+    
     public List<Annotation> getSetterAnnotations() {
         return setterAnnotations;
     }
@@ -76,7 +82,7 @@ public String getClassName() {
     public List<Annotation> getGetterAnnotations() {
         return getterAnnotations;
     }
-
+    
     public SerializedProperty addSetterAnnotation(Annotation annotation) {
         setterAnnotations.add(annotation);
         return this;
