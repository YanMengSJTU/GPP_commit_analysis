diff --git a/client/src/main/java/org/asynchttpclient/DefaultRequest.java b/client/src/main/java/org/asynchttpclient/DefaultRequest.java
index 4cabb4179..4a7720bcc 100644
--- a/client/src/main/java/org/asynchttpclient/DefaultRequest.java
+++ b/client/src/main/java/org/asynchttpclient/DefaultRequest.java
@@ -55,6 +55,7 @@
   private final Realm realm;
   private final File file;
   private final Boolean followRedirect;
+  private final Integer maxRedirects;
   private final int requestTimeout;
   private final int readTimeout;
   private final long rangeOffset;
@@ -83,6 +84,7 @@ public DefaultRequest(String method,
                         Realm realm,
                         File file,
                         Boolean followRedirect,
+                        Integer maxRedirects,
                         int requestTimeout,
                         int readTimeout,
                         long rangeOffset,
@@ -108,6 +110,7 @@ public DefaultRequest(String method,
     this.realm = realm;
     this.file = file;
     this.followRedirect = followRedirect;
+    this.maxRedirects = maxRedirects;
     this.requestTimeout = requestTimeout;
     this.readTimeout = readTimeout;
     this.rangeOffset = rangeOffset;
@@ -215,6 +218,12 @@ public File getFile() {
   public Boolean getFollowRedirect() {
     return followRedirect;
   }
+  
+  /* add by @anexplore */
+  @Override
+  public Integer getMaxRedirects() {
+    return maxRedirects;
+  }
 
   @Override
   public int getRequestTimeout() {
diff --git a/client/src/main/java/org/asynchttpclient/Request.java b/client/src/main/java/org/asynchttpclient/Request.java
index 0bcf3ae71..4bc58233e 100644
--- a/client/src/main/java/org/asynchttpclient/Request.java
+++ b/client/src/main/java/org/asynchttpclient/Request.java
@@ -150,7 +150,13 @@
    * @return if this request is to follow redirects. Non null values means "override config value".
    */
   Boolean getFollowRedirect();
-
+  
+  /**
+   * add by @anexplore
+   * @return max redirect count for this request
+   */
+  Integer getMaxRedirects();
+  
   /**
    * @return the request timeout. Non zero values means "override config value".
    */
diff --git a/client/src/main/java/org/asynchttpclient/RequestBuilderBase.java b/client/src/main/java/org/asynchttpclient/RequestBuilderBase.java
index 4a8a9e447..8303976d3 100644
--- a/client/src/main/java/org/asynchttpclient/RequestBuilderBase.java
+++ b/client/src/main/java/org/asynchttpclient/RequestBuilderBase.java
@@ -81,6 +81,7 @@
   protected Realm realm;
   protected File file;
   protected Boolean followRedirect;
+  protected Integer maxRedirects;
   protected int requestTimeout;
   protected int readTimeout;
   protected long rangeOffset;
@@ -498,6 +499,11 @@ public T setFollowRedirect(boolean followRedirect) {
     this.followRedirect = followRedirect;
     return asDerivedType();
   }
+  
+  public T setMaxRedirects(int maxRedirects) {
+    this.maxRedirects = maxRedirects;
+    return asDerivedType();
+  }
 
   public T setRequestTimeout(int requestTimeout) {
     this.requestTimeout = requestTimeout;
@@ -575,6 +581,7 @@ public T setSignatureCalculator(SignatureCalculator signatureCalculator) {
     rb.realm = this.realm;
     rb.file = this.file;
     rb.followRedirect = this.followRedirect;
+    rb.maxRedirects = this.maxRedirects;
     rb.requestTimeout = this.requestTimeout;
     rb.rangeOffset = this.rangeOffset;
     rb.charset = this.charset;
@@ -637,6 +644,7 @@ public Request build() {
             rb.realm,
             rb.file,
             rb.followRedirect,
+            rb.maxRedirects,
             rb.requestTimeout,
             rb.readTimeout,
             rb.rangeOffset,
