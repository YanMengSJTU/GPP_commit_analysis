diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index a2a1d8ecf..4f4b043b0 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -2480,21 +2480,25 @@ public void setContent(ChannelBuffer content) {
                     h.onBodyPartReceived(rp);
 
                     NettyWebSocket webSocket = NettyWebSocket.class.cast(h.onCompleted());
-                   
-                    if(pendingOpcode == OPCODE_BINARY) {
-                        webSocket.onBinaryFragment(rp.getBodyPartBytes(),frame.isFinalFragment());
-                    }
-                    else {
-                        webSocket.onTextFragment(frame.getBinaryData().toString(UTF8),frame.isFinalFragment());
-                    }
 
-                    if (CloseWebSocketFrame.class.isAssignableFrom(frame.getClass())) {
-                        try {
-                            webSocket.onClose(CloseWebSocketFrame.class.cast(frame).getStatusCode(), CloseWebSocketFrame.class.cast(frame).getReasonText());
-                        } catch (Throwable t) {
-                            // Swallow any exception that may comes from a Netty version released before 3.4.0
-                            log.trace("", t);
+                    if (webSocket != null) {
+                        if(pendingOpcode == OPCODE_BINARY) {
+                            webSocket.onBinaryFragment(rp.getBodyPartBytes(),frame.isFinalFragment());
+                        }
+                        else {
+                            webSocket.onTextFragment(frame.getBinaryData().toString(UTF8),frame.isFinalFragment());
                         }
+
+                        if (CloseWebSocketFrame.class.isAssignableFrom(frame.getClass())) {
+                            try {
+                                webSocket.onClose(CloseWebSocketFrame.class.cast(frame).getStatusCode(), CloseWebSocketFrame.class.cast(frame).getReasonText());
+                            } catch (Throwable t) {
+                                // Swallow any exception that may comes from a Netty version released before 3.4.0
+                                log.trace("", t);
+                            }
+                        }
+                    } else {
+                        log.debug("UpgradeHandler returned a null NettyWebSocket ");
                     }
                 }
             } else {
@@ -2514,8 +2518,10 @@ public void onError(ChannelHandlerContext ctx, ExceptionEvent e) {
                 WebSocketUpgradeHandler h = WebSocketUpgradeHandler.class.cast(nettyResponse.getAsyncHandler());
 
                 NettyWebSocket webSocket = NettyWebSocket.class.cast(h.onCompleted());
-                webSocket.onError(e.getCause());
-                webSocket.close();
+                if (webSocket != null) {
+                    webSocket.onError(e.getCause());
+                    webSocket.close();
+                }
             } catch (Throwable t) {
                 log.error("onError", t);
             }
