diff --git a/client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java b/client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java
index 4f7ae708f..63a407ef8 100755
--- a/client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java
+++ b/client/src/main/java/org/asynchttpclient/netty/request/NettyRequestFactory.java
@@ -187,7 +187,7 @@ public NettyRequest newNettyRequest(Request request, boolean performConnectReque
               .set(SEC_WEBSOCKET_VERSION, "13");
 
       if (!headers.contains(ORIGIN)) {
-        headers.set(ORIGIN, computeOriginHeader(uri));
+        headers.set(ORIGIN, originHeader(uri));
       }
 
     } else if (!headers.contains(CONNECTION)) {
diff --git a/client/src/main/java/org/asynchttpclient/util/HttpUtils.java b/client/src/main/java/org/asynchttpclient/util/HttpUtils.java
index 6d4e7aa68..5be8c1c5b 100644
--- a/client/src/main/java/org/asynchttpclient/util/HttpUtils.java
+++ b/client/src/main/java/org/asynchttpclient/util/HttpUtils.java
@@ -154,7 +154,7 @@ public static String hostHeader(Request request, Uri uri) {
     }
   }
 
-  public static String computeOriginHeader(Uri uri) {
+  public static String originHeader(Uri uri) {
     StringBuilder sb = StringBuilderPool.DEFAULT.stringBuilder();
     sb.append(uri.isSecured() ? "https://" : "http://").append(uri.getHost());
     if (uri.getExplicitPort() != uri.getSchemeDefaultPort()) {
diff --git a/client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java b/client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java
index 77eed2dc7..0a8d7fa24 100644
--- a/client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java
+++ b/client/src/test/java/org/asynchttpclient/util/HttpUtilsTest.java
@@ -209,31 +209,31 @@ public void formUrlEncodingShouldSupportNonUtf8Charset() throws Exception {
 
   @Test
   public void computeOriginForPlainUriWithImplicitPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("ws://foo.com/bar")), "http://foo.com");
+    assertEquals(HttpUtils.originHeader(Uri.create("ws://foo.com/bar")), "http://foo.com");
   }
 
   @Test
   public void computeOriginForPlainUriWithDefaultPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("ws://foo.com:80/bar")), "http://foo.com");
+    assertEquals(HttpUtils.originHeader(Uri.create("ws://foo.com:80/bar")), "http://foo.com");
   }
 
   @Test
   public void computeOriginForPlainUriWithNonDefaultPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("ws://foo.com:81/bar")), "http://foo.com:81");
+    assertEquals(HttpUtils.originHeader(Uri.create("ws://foo.com:81/bar")), "http://foo.com:81");
   }
 
   @Test
   public void computeOriginForSecuredUriWithImplicitPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("wss://foo.com/bar")), "https://foo.com");
+    assertEquals(HttpUtils.originHeader(Uri.create("wss://foo.com/bar")), "https://foo.com");
   }
 
   @Test
   public void computeOriginForSecuredUriWithDefaultPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("wss://foo.com:443/bar")), "https://foo.com");
+    assertEquals(HttpUtils.originHeader(Uri.create("wss://foo.com:443/bar")), "https://foo.com");
   }
 
   @Test
   public void computeOriginForSecuredUriWithNonDefaultPort() {
-    assertEquals(HttpUtils.computeOriginHeader(Uri.create("wss://foo.com:444/bar")), "https://foo.com:444");
+    assertEquals(HttpUtils.originHeader(Uri.create("wss://foo.com:444/bar")), "https://foo.com:444");
   }
 }
