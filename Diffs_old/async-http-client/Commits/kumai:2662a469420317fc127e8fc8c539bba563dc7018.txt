diff --git a/src/main/java/com/ning/http/multipart/FilePart.java b/src/main/java/com/ning/http/multipart/FilePart.java
index ac6c1972b..41b7e7025 100644
--- a/src/main/java/com/ning/http/multipart/FilePart.java
+++ b/src/main/java/com/ning/http/multipart/FilePart.java
@@ -147,8 +147,8 @@ public FilePart(String name, String fileName, File file, String contentType, Str
      */
     protected void sendDispositionHeader(OutputStream out) throws IOException {
         String filename = this.source.getFileName();
+        super.sendDispositionHeader(out);
         if (filename != null) {
-            super.sendDispositionHeader(out);
             out.write(FILE_NAME_BYTES);
             out.write(QUOTE_BYTES);
             out.write(MultipartEncodingUtil.getAsciiBytes(filename));
diff --git a/src/main/java/com/ning/http/multipart/MultipartBody.java b/src/main/java/com/ning/http/multipart/MultipartBody.java
index 55799a326..2fadcc36e 100644
--- a/src/main/java/com/ning/http/multipart/MultipartBody.java
+++ b/src/main/java/com/ning/http/multipart/MultipartBody.java
@@ -578,18 +578,21 @@ private long writeToTarget(WritableByteChannel target, ByteArrayOutputStream byt
                     final SocketChannel channel = (SocketChannel) target;
                     channel.register(selector, SelectionKey.OP_WRITE);
 
-                    while (written < byteWriter.size() && selector.select() != 0) {
+                    while (written < byteWriter.size()) {
+                        selector.select(1000);
+                        maxSpin++;
                         final Set<SelectionKey> selectedKeys = selector.selectedKeys();
 
                         for (SelectionKey key : selectedKeys) {
                             if (key.isWritable()) {
                                 written += target.write(message);
+                                maxSpin = 0;
                             }
                         }
-                    }
 
-                    if (written < byteWriter.size()) {
-                        throw new IOException("Unable to write on channel " + target);
+                        if (maxSpin >= 10) {
+                            throw new IOException("Unable to write on channel " + target);
+                        }
                     }
                 } finally {
                     selector.close();
