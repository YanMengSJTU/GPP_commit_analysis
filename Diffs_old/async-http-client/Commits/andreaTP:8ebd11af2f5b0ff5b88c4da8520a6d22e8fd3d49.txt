diff --git a/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/pool/DefaultChannelPool.java b/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/pool/DefaultChannelPool.java
index 495a24f45..df8da8602 100644
--- a/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/pool/DefaultChannelPool.java
+++ b/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/channel/pool/DefaultChannelPool.java
@@ -17,6 +17,7 @@
 
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.Enumeration;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
@@ -189,10 +190,13 @@ public void run(Timeout timeout) throws Exception {
                 return;
 
             try {
-                if (LOGGER.isDebugEnabled())
-                    for (String key : partitions.keySet()) {
-                        LOGGER.debug("Entry count for : {} : {}", key, partitions.get(key).size());
-                    }
+                if (LOGGER.isDebugEnabled()) {
+                	Enumeration<String> keyEnum = partitions.keys();
+                	while (keyEnum.hasMoreElements()) {
+                		String key = keyEnum.nextElement();
+                		LOGGER.debug("Entry count for : {} : {}", key, partitions.get(key).size());
+                	}
+                }
 
                 long start = millisTime();
                 int closedCount = 0;
diff --git a/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/pool/DefaultChannelPool.java b/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/pool/DefaultChannelPool.java
index b9e5b7a05..0696772dd 100755
--- a/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/pool/DefaultChannelPool.java
+++ b/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/channel/pool/DefaultChannelPool.java
@@ -22,6 +22,7 @@
 
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.Enumeration;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
@@ -198,10 +199,13 @@ public void run(Timeout timeout) throws Exception {
                 return;
 
             try {
-                if (LOGGER.isDebugEnabled())
-                    for (String key : partitions.keySet()) {
-                        LOGGER.debug("Entry count for : {} : {}", key, partitions.get(key).size());
-                    }
+                if (LOGGER.isDebugEnabled()) {
+                	Enumeration<String> keyEnum = partitions.keys();
+                	while (keyEnum.hasMoreElements()) {
+                		String key = keyEnum.nextElement();
+                		LOGGER.debug("Entry count for : {} : {}", key, partitions.get(key).size());
+                	}
+                }
 
                 long start = millisTime();
                 int closedCount = 0;
