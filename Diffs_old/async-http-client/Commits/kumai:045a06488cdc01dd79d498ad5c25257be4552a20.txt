diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java b/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
index 13a84ba88..1a21b6793 100755
--- a/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
@@ -278,6 +278,9 @@ V getContent() throws ExecutionException {
     }
 
     public final void done(Callable callable) {
+
+        Throwable exception = null;
+
         try {
             cancelReaper();
 
@@ -290,16 +293,21 @@ public final void done(Callable callable) {
                 try {
                     callable.call();
                 } catch (Exception ex) {
-                    throw new RuntimeException(ex);
+                    exception = ex;
                 }
             }
         } catch (ExecutionException t) {
             return;
         } catch (RuntimeException t) {
-            exEx.compareAndSet(null, new ExecutionException(t));
+            exception = t.getCause() != null ? t.getCause() : t;
+
         } finally {
             latch.countDown();
         }
+
+        if (exception != null)
+            exEx.compareAndSet(null, new ExecutionException(exception));
+
         super.done();
     }
 
diff --git a/src/test/java/com/ning/http/client/async/ConnectionPoolTest.java b/src/test/java/com/ning/http/client/async/ConnectionPoolTest.java
index 1a329be84..a5bcdf743 100644
--- a/src/test/java/com/ning/http/client/async/ConnectionPoolTest.java
+++ b/src/test/java/com/ning/http/client/async/ConnectionPoolTest.java
@@ -303,7 +303,7 @@ public Response onCompleted(Response response) throws Exception {
             } catch (ExecutionException ex) {
                 assertNotNull(ex);
                 assertNotNull(ex.getCause());
-                assertEquals(ex.getCause().getCause().getClass(), IOException.class);
+                assertEquals(ex.getCause().getClass(), IOException.class);
                 assertEquals(count.get(), 1);
             }
         } finally {
diff --git a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyConnectionPoolTest.java b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyConnectionPoolTest.java
index 4eabd6c65..c810843d6 100644
--- a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyConnectionPoolTest.java
+++ b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyConnectionPoolTest.java
@@ -18,15 +18,11 @@
 import static org.testng.Assert.assertNull;
 import static org.testng.Assert.fail;
 
-import java.io.IOException;
-import java.util.concurrent.ExecutionException;
 import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicInteger;
 
 import org.glassfish.grizzly.Connection;
 import org.testng.annotations.Test;
 
-import com.ning.http.client.AsyncCompletionHandler;
 import com.ning.http.client.AsyncHttpClient;
 import com.ning.http.client.AsyncHttpClientConfig;
 import com.ning.http.client.ConnectionsPool;
@@ -178,36 +174,4 @@ public void multipleMaxConnectionOpenTest() throws Throwable {
             c.close();
         }
     }
-
-    @Override
-    @Test
-    public void win7DisconnectTest() throws Throwable {
-        final AtomicInteger count = new AtomicInteger(0);
-
-        AsyncCompletionHandler<Response> handler = new AsyncCompletionHandlerAdapter() {
-
-            @Override
-            public Response onCompleted(Response response) throws Exception {
-
-                count.incrementAndGet();
-                StackTraceElement e = new StackTraceElement("sun.nio.ch.SocketDispatcher", "read0", null, -1);
-                IOException t = new IOException();
-                t.setStackTrace(new StackTraceElement[] { e });
-                throw t;
-            }
-        };
-
-        AsyncHttpClient client = getAsyncHttpClient(new AsyncHttpClientConfig.Builder().build());
-        try {
-            client.prepareGet(getTargetUrl()).execute(handler).get();
-            fail("Must have received an exception");
-        } catch (ExecutionException ex) {
-            assertNotNull(ex);
-            assertNotNull(ex.getCause());
-            assertEquals(ex.getCause().getClass(), IOException.class);
-            assertEquals(count.get(), 1);
-        } finally {
-            client.close();
-        }
-    }
 }
