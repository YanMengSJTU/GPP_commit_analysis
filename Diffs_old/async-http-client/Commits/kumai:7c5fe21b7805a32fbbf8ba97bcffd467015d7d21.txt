diff --git a/src/test/java/com/ning/http/client/async/BasicAuthTest.java b/src/test/java/com/ning/http/client/async/BasicAuthTest.java
index 289907427..9a2d0a2d2 100644
--- a/src/test/java/com/ning/http/client/async/BasicAuthTest.java
+++ b/src/test/java/com/ning/http/client/async/BasicAuthTest.java
@@ -23,8 +23,6 @@
 import com.ning.http.client.HttpResponseStatus;
 import com.ning.http.client.Realm;
 import com.ning.http.client.Response;
-import com.ning.http.client.SimpleAsyncHttpClient;
-import com.ning.http.client.consumers.AppendableBodyConsumer;
 import com.ning.http.client.generators.InputStreamBodyGenerator;
 
 import org.apache.log4j.ConsoleAppender;
@@ -75,8 +73,6 @@
 
     private Server server2;
     
-    public abstract String getProviderClass();
-
     @BeforeClass(alwaysRun = true)
     @Override
     public void setUpGlobal() throws Exception {
@@ -479,15 +475,19 @@ public AbstractHandler configureHandler() throws Exception {
 
     @Test(groups = { "standalone", "default_provider" })
     public void stringBuilderBodyConsumerTest() throws Throwable {
-        SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setProviderClass(getProviderClass()).setRealmPrincipal(user).setRealmPassword(admin).setUrl(getTargetUrl()).setHeader("Content-Type", "text/html").build();
+        AsyncHttpClient client = getAsyncHttpClient(null);
+        
         try {
-            StringBuilder s = new StringBuilder();
-            Future<Response> future = client.post(new InputStreamBodyGenerator(new ByteArrayInputStream(MY_MESSAGE.getBytes())), new AppendableBodyConsumer(s));
+            AsyncHttpClient.BoundRequestBuilder r = client.preparePost(getTargetUrl())
+                    .setHeader("Content-Type", "text/html")
+                    .setBody(new InputStreamBodyGenerator(new ByteArrayInputStream(MY_MESSAGE.getBytes())))
+                    .setRealm((new Realm.RealmBuilder()).setPrincipal(user).setPassword(admin).build());
+            Future<Response> f = r.execute();
 
             System.out.println("waiting for response");
-            Response response = future.get();
+            Response response = f.get();
             assertEquals(response.getStatusCode(), 200);
-            assertEquals(s.toString(), MY_MESSAGE);
+            assertEquals(response.getResponseBody(), MY_MESSAGE);
             assertEquals(response.getStatusCode(), HttpServletResponse.SC_OK);
             assertNotNull(response.getHeader("X-Auth"));
         } finally {
diff --git a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicAuthTest.java b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicAuthTest.java
index abea45483..7cca1aa82 100644
--- a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicAuthTest.java
+++ b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyBasicAuthTest.java
@@ -17,7 +17,6 @@
 import com.ning.http.client.AsyncHttpClientConfig;
 import com.ning.http.client.async.BasicAuthTest;
 import com.ning.http.client.async.ProviderUtil;
-import com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider;
 
 public class GrizzlyBasicAuthTest extends BasicAuthTest {
 
@@ -25,8 +24,4 @@
     public AsyncHttpClient getAsyncHttpClient(AsyncHttpClientConfig config) {
         return ProviderUtil.grizzlyProvider(config);
     }
-
-    public String getProviderClass() {
-        return GrizzlyAsyncHttpProvider.class.getName();
-    }
 }
diff --git a/src/test/java/com/ning/http/client/async/netty/NettyBasicAuthTest.java b/src/test/java/com/ning/http/client/async/netty/NettyBasicAuthTest.java
index 025741246..feb1f6115 100644
--- a/src/test/java/com/ning/http/client/async/netty/NettyBasicAuthTest.java
+++ b/src/test/java/com/ning/http/client/async/netty/NettyBasicAuthTest.java
@@ -16,7 +16,6 @@
 import com.ning.http.client.AsyncHttpClientConfig;
 import com.ning.http.client.async.BasicAuthTest;
 import com.ning.http.client.async.ProviderUtil;
-import com.ning.http.client.providers.netty.NettyAsyncHttpProvider;
 
 public class NettyBasicAuthTest extends BasicAuthTest {
 
@@ -24,8 +23,4 @@
     public AsyncHttpClient getAsyncHttpClient(AsyncHttpClientConfig config) {
         return ProviderUtil.nettyProvider(config);
     }
-    
-    public String getProviderClass() {
-        return NettyAsyncHttpProvider.class.getName();
-    }
 }
