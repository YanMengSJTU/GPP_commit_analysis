diff --git a/src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java b/src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java
index 0f849674e..8e37eefff 100755
--- a/src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java
+++ b/src/test/java/com/ning/http/client/async/AsyncProvidersBasicTest.java
@@ -70,9 +70,9 @@
     public void asyncProviderEncodingTest() throws Throwable {
         AsyncHttpClient client = getAsyncHttpClient(null);
         try {
-            Request request = new RequestBuilder("GET").setUrl("http://foo.com/foo.html?q=+%20x").build();
+            Request request = new RequestBuilder("GET").setUrl(getTargetUrl() + "?q=+%20x").build();
             String requestUrl = request.getUrl();
-            Assert.assertEquals(requestUrl, "http://foo.com/foo.html?q=%20%20x");
+            Assert.assertEquals(requestUrl, getTargetUrl() + "?q=%20%20x");
             Future<String> responseFuture = client.executeRequest(request, new AsyncCompletionHandler<String>() {
                 @Override
                 public String onCompleted(Response response) throws Exception {
@@ -87,7 +87,7 @@ public void onThrowable(Throwable t) {
 
             });
             String url = responseFuture.get();
-            Assert.assertEquals(url, "http://foo.com/foo.html?q=%20%20x");
+            Assert.assertEquals(url, getTargetUrl() + "?q=%20%20x");
         } finally {
             client.close();
         }
@@ -97,7 +97,7 @@ public void onThrowable(Throwable t) {
     public void asyncProviderEncodingTest2() throws Throwable {
         AsyncHttpClient client = getAsyncHttpClient(null);
         try {
-            Request request = new RequestBuilder("GET").setUrl("http://foo.com/foo.html").addQueryParameter("q", "a b").build();
+            Request request = new RequestBuilder("GET").setUrl(getTargetUrl() + "").addQueryParameter("q", "a b").build();
 
             Future<String> responseFuture = client.executeRequest(request, new AsyncCompletionHandler<String>() {
                 @Override
@@ -113,7 +113,7 @@ public void onThrowable(Throwable t) {
 
             });
             String url = responseFuture.get();
-            Assert.assertEquals(url, "http://foo.com/foo.html?q=a%20b");
+            Assert.assertEquals(url, getTargetUrl() + "?q=a%20b");
         } finally {
             client.close();
         }
@@ -123,7 +123,7 @@ public void onThrowable(Throwable t) {
     public void emptyRequestURI() throws Throwable {
         AsyncHttpClient client = getAsyncHttpClient(null);
         try {
-            Request request = new RequestBuilder("GET").setUrl("http://foo.com").build();
+            Request request = new RequestBuilder("GET").setUrl(getTargetUrl()).build();
 
             Future<String> responseFuture = client.executeRequest(request, new AsyncCompletionHandler<String>() {
                 @Override
@@ -139,7 +139,7 @@ public void onThrowable(Throwable t) {
 
             });
             String url = responseFuture.get();
-            Assert.assertEquals(url, "http://foo.com/");
+            Assert.assertEquals(url, getTargetUrl());
         } finally {
             client.close();
         }
