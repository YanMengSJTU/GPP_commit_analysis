diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index 94e46626d..04913840e 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -438,6 +438,7 @@ private Channel verifyChannelPipeline(Channel channel, String scheme) throws IOE
     protected final <T> void writeRequest(final Channel channel, final AsyncHttpClientConfig config, final NettyResponseFuture<T> future) {
 
         HttpRequest nettyRequest = future.getNettyRequest();
+        boolean ssl = channel.getPipeline().get(SslHandler.class) != null;
 
         try {
             /**
@@ -511,7 +512,7 @@ private Channel verifyChannelPipeline(Channel channel, String scheme) throws IOE
                             fileLength = raf.length();
 
                             ChannelFuture writeFuture;
-                            if (channel.getPipeline().get(SslHandler.class) != null) {
+                            if (ssl) {
                                 writeFuture = channel.write(new ChunkedFile(raf, 0, fileLength, 8192));
                             } else {
                                 final FileRegion region = new OptimizedFileRegion(raf, 0, fileLength);
@@ -547,7 +548,7 @@ public void operationComplete(ChannelFuture cf) {
                         }
 
                         ChannelFuture writeFuture;
-                        if (channel.getPipeline().get(SslHandler.class) == null && (body instanceof RandomAccessBody)) {
+                        if (!ssl && body instanceof RandomAccessBody) {
                             BodyFileRegion bodyFileRegion = new BodyFileRegion((RandomAccessBody) body);
                             writeFuture = channel.write(bodyFileRegion);
                         } else {
