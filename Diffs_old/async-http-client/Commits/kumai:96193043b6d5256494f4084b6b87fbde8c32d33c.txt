diff --git a/src/main/java/com/ning/http/multipart/MultipartBody.java b/src/main/java/com/ning/http/multipart/MultipartBody.java
index 88ee5da2e..c3004e469 100644
--- a/src/main/java/com/ning/http/multipart/MultipartBody.java
+++ b/src/main/java/com/ning/http/multipart/MultipartBody.java
@@ -80,7 +80,7 @@ public long read(ByteBuffer buffer) throws IOException {
             int maxLength = buffer.capacity();
 
             if (startPart == parts.size() && endWritten) {
-                return overallLength;
+                return -1;
             }
 
             boolean full = false;
@@ -437,9 +437,9 @@ private ByteArrayOutputStream generateFileStart(FilePart filePart)
     private long handleFilePart(WritableByteChannel target, FilePart filePart) throws IOException {
     	FilePartStallHandler handler = new FilePartStallHandler(
     		filePart.getStalledTime(), filePart);
-    	
+
     	handler.start();
-    	
+
         if (FilePartSource.class.isAssignableFrom(filePart.getSource().getClass())) {
             int length = 0;
 
@@ -464,7 +464,7 @@ private long handleFilePart(WritableByteChannel target, FilePart filePart) throw
                 	}
                     try {
                         nWrite = fc.transferTo(fileLength, l, target);
-                       
+
                         if (nWrite == 0) {
                             logger.info("Waiting for writing...");
                             try {
@@ -496,7 +496,7 @@ private long handleFilePart(WritableByteChannel target, FilePart filePart) throw
                 }
             }
             handler.completed();
-            
+
             fc.close();
 
             length += handleFileEnd(target, filePart);
@@ -556,7 +556,7 @@ private long handleMultiPart(WritableByteChannel target, Part currentPart) throw
             return handleStringPart(target, (StringPart) currentPart);
         } else if (currentPart.getClass().equals(FilePart.class)) {
             FilePart filePart = (FilePart) currentPart;
-            
+
             return handleFilePart(target, filePart);
         }
         return 0;
