diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index 4a0e4ac4d..1722c6e0c 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -818,7 +818,7 @@ else if (uri.getRawQuery() != null)
                     nettyRequest.setHeader(HttpHeaders.Names.CONTENT_LENGTH, String.valueOf(mre.getContentLength()));
 
                 } else if (request.getEntityWriter() != null) {
-                    int length = getPredefinedContentLength(request, nettyRequest);
+                    int length = (int) request.getContentLength();
 
                     if (length == -1) {
                         length = MAX_BUFFERED_BYTES;
@@ -1609,15 +1609,6 @@ protected static boolean abortOnWriteCloseException(Throwable cause) {
         return false;
     }
 
-    private final static int getPredefinedContentLength(Request request, HttpRequest r) {
-        int length = (int) request.getContentLength();
-        if (length == -1 && r.getHeader(HttpHeaders.Names.CONTENT_LENGTH) != null) {
-            length = Integer.valueOf(r.getHeader(HttpHeaders.Names.CONTENT_LENGTH));
-        }
-
-        return length;
-    }
-
     public static <T> NettyResponseFuture<T> newFuture(URI uri, Request request, AsyncHandler<T> asyncHandler, HttpRequest nettyRequest, AsyncHttpClientConfig config, NettyAsyncHttpProvider provider, ProxyServer proxyServer) {
 
         NettyResponseFuture<T> f = new NettyResponseFuture<T>(uri,//
