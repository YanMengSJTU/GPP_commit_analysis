diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java b/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
index ab43dc91c..171a2bda6 100755
--- a/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyResponseFuture.java
@@ -241,15 +241,17 @@ public V get(long l, TimeUnit tu) throws InterruptedException, TimeoutException,
                 } catch (Throwable t) {
                     // Ignore
                 }
-                TimeoutException te = new TimeoutException(String.format("No response received after %s", l));
                 if (!throwableCalled.getAndSet(true)) {
                     try {
-                        asyncHandler.onThrowable(te);
-                    } catch (Throwable t) {
-                        logger.debug("asyncHandler.onThrowable", t);
+                        TimeoutException te = new TimeoutException(String.format("No response received after %s", l));
+                        try {
+                            asyncHandler.onThrowable(te);
+                        } catch (Throwable t) {
+                            logger.debug("asyncHandler.onThrowable", t);
+                        }
+                        throw new ExecutionException(te);
                     } finally {
                         cancelReaper();
-                        throw new ExecutionException(te);
                     }
                 }
             }
@@ -278,12 +280,14 @@ V getContent() throws ExecutionException {
             } catch (Throwable ex) {
                 if (!throwableCalled.getAndSet(true)) {
                     try {
-                        asyncHandler.onThrowable(ex);
-                    } catch (Throwable t) {
-                        logger.debug("asyncHandler.onThrowable", t);
+                        try {
+                            asyncHandler.onThrowable(ex);
+                        } catch (Throwable t) {
+                            logger.debug("asyncHandler.onThrowable", t);
+                        }
+                        throw new RuntimeException(ex);
                     } finally {
                         cancelReaper();
-                        throw new RuntimeException(ex);
                     }
                 }
             }
