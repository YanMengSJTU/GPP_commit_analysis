diff --git a/src/test/java/com/ning/http/client/async/BasicAuthTest.java b/src/test/java/com/ning/http/client/async/BasicAuthTest.java
index 0886b887c..00ac83840 100644
--- a/src/test/java/com/ning/http/client/async/BasicAuthTest.java
+++ b/src/test/java/com/ning/http/client/async/BasicAuthTest.java
@@ -474,7 +474,7 @@ public AbstractHandler configureHandler() throws Exception {
     }
 
     @Test(groups = { "standalone", "default_provider" })
-    public void StringBuilderBodyConsumerTest() throws Throwable {
+    public void stringBuilderBodyConsumerTest() throws Throwable {
         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setRealmPrincipal(user).setRealmPassword(admin).setUrl(getTargetUrl()).setHeader("Content-Type", "text/html").build();
         try {
             StringBuilder s = new StringBuilder();
diff --git a/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java b/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java
index 27d1248c8..cde839a97 100644
--- a/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java
+++ b/src/test/java/com/ning/http/client/async/SimpleAsyncHttpClientTest.java
@@ -40,7 +40,7 @@
     private final static String MY_MESSAGE = "my message";
 
     @Test(groups = { "standalone", "default_provider" })
-    public void inpuStreamBodyConsumerTest() throws Throwable {
+    public void inputStreamBodyConsumerTest() throws Throwable {
 
         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setIdleConnectionInPoolTimeoutInMs(100).setMaximumConnectionsTotal(50).setRequestTimeoutInMs(5 * 60 * 1000).setUrl(getTargetUrl()).setHeader("Content-Type", "text/html").build();
         try {
@@ -56,7 +56,7 @@ public void inpuStreamBodyConsumerTest() throws Throwable {
     }
 
     @Test(groups = { "standalone", "default_provider" })
-    public void StringBuilderBodyConsumerTest() throws Throwable {
+    public void stringBuilderBodyConsumerTest() throws Throwable {
 
         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setIdleConnectionInPoolTimeoutInMs(100).setMaximumConnectionsTotal(50).setRequestTimeoutInMs(5 * 60 * 1000).setUrl(getTargetUrl()).setHeader("Content-Type", "text/html").build();
         try {
@@ -73,7 +73,7 @@ public void StringBuilderBodyConsumerTest() throws Throwable {
     }
 
     @Test(groups = { "standalone", "default_provider" })
-    public void ByteArrayOutputStreamBodyConsumerTest() throws Throwable {
+    public void byteArrayOutputStreamBodyConsumerTest() throws Throwable {
 
         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setIdleConnectionInPoolTimeoutInMs(100).setMaximumConnectionsTotal(50).setRequestTimeoutInMs(5 * 60 * 1000).setUrl(getTargetUrl()).setHeader("Content-Type", "text/html").build();
         try {
@@ -90,7 +90,7 @@ public void ByteArrayOutputStreamBodyConsumerTest() throws Throwable {
     }
 
     @Test(groups = { "standalone", "default_provider" })
-    public void RequestByteArrayOutputStreamBodyConsumerTest() throws Throwable {
+    public void requestByteArrayOutputStreamBodyConsumerTest() throws Throwable {
 
         SimpleAsyncHttpClient client = new SimpleAsyncHttpClient.Builder().setUrl(getTargetUrl()).build();
         try {
