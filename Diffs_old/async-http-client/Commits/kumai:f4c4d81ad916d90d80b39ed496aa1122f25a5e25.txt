diff --git a/src/main/java/com/ning/http/client/consumers/AppendableBodyConsumer.java b/src/main/java/com/ning/http/client/consumers/AppendableBodyConsumer.java
index ef04f9b8d..e2976facb 100644
--- a/src/main/java/com/ning/http/client/consumers/AppendableBodyConsumer.java
+++ b/src/main/java/com/ning/http/client/consumers/AppendableBodyConsumer.java
@@ -41,7 +41,10 @@ public AppendableBodyConsumer(Appendable appendable) {
      */
     /* @Override */
     public void consume(ByteBuffer byteBuffer) throws IOException {
-        appendable.append(new String(byteBuffer.array(), encoding));
+        appendable.append(new String(byteBuffer.array(),
+                                     byteBuffer.arrayOffset() + byteBuffer.position(),
+                                     byteBuffer.remaining(),
+                                     encoding));
     }
 
     /**
diff --git a/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java b/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java
index ad8b7e288..02a12d65f 100644
--- a/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java
+++ b/src/main/java/com/ning/http/client/consumers/FileBodyConsumer.java
@@ -35,7 +35,9 @@ public FileBodyConsumer(RandomAccessFile file) {
     /* @Override */
     public void consume(ByteBuffer byteBuffer) throws IOException {
         // TODO: Channel.transferFrom may be a good idea to investigate.
-        file.write(byteBuffer.array());
+        file.write(byteBuffer.array(),
+                   byteBuffer.arrayOffset() + byteBuffer.position(),
+                   byteBuffer.remaining());
     }
 
     /**
diff --git a/src/main/java/com/ning/http/client/consumers/OutputStreamBodyConsumer.java b/src/main/java/com/ning/http/client/consumers/OutputStreamBodyConsumer.java
index d1e806ca4..9f8c93aec 100644
--- a/src/main/java/com/ning/http/client/consumers/OutputStreamBodyConsumer.java
+++ b/src/main/java/com/ning/http/client/consumers/OutputStreamBodyConsumer.java
@@ -34,7 +34,9 @@ public OutputStreamBodyConsumer(OutputStream outputStream) {
      */
     /* @Override */
     public void consume(ByteBuffer byteBuffer) throws IOException {
-        outputStream.write(byteBuffer.array());
+        outputStream.write(byteBuffer.array(),
+                           byteBuffer.arrayOffset() + byteBuffer.position(),
+                           byteBuffer.remaining());
     }
 
     /**
