diff --git a/src/main/java/com/ning/http/client/AsyncHttpClient.java b/src/main/java/com/ning/http/client/AsyncHttpClient.java
index f8a3d9d5c..ccc5285c1 100755
--- a/src/main/java/com/ning/http/client/AsyncHttpClient.java
+++ b/src/main/java/com/ning/http/client/AsyncHttpClient.java
@@ -28,6 +28,7 @@
 import java.io.Closeable;
 import java.io.IOException;
 import java.io.InputStream;
+import java.lang.reflect.InvocationTargetException;
 import java.util.Collection;
 import java.util.Map;
 import java.util.concurrent.ExecutorService;
@@ -576,6 +577,16 @@ private final static AsyncHttpProvider loadDefaultProvider(String className, Asy
                     new Class[]{AsyncHttpClientConfig.class}).newInstance(new Object[]{config});
         } catch (Throwable t) {
 
+            if (t instanceof InvocationTargetException) {
+                final InvocationTargetException ite = (InvocationTargetException) t;
+                if (logger.isErrorEnabled()) {
+                    logger.error(
+                            "Unable to instantiate provider {}.  Trying other providers.",
+                            className);
+                    logger.error(ite.getCause().toString(), ite.getCause());
+                }
+            }
+        	
             // Let's try with another classloader
             try {
                 Class<AsyncHttpProvider> providerClass = (Class<AsyncHttpProvider>)
diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index 04913840e..8fcc82252 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -240,10 +240,10 @@ public NettyAsyncHttpProvider(AsyncHttpClientConfig config) {
         secureBootstrap = new ClientBootstrap(socketChannelFactory);
         webSocketBootstrap = new ClientBootstrap(socketChannelFactory);
         secureWebSocketBootstrap = new ClientBootstrap(socketChannelFactory);
-        configureNetty();
-
         this.config = config;
 
+        configureNetty();
+
         // This is dangerous as we can't catch a wrong typed ConnectionsPool
         ConnectionsPool<String, Channel> cp = (ConnectionsPool<String, Channel>) config.getConnectionsPool();
         if (cp == null && config.getAllowPoolingConnection()) {
