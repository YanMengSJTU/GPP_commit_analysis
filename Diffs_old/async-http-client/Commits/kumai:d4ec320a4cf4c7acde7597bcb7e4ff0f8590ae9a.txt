diff --git a/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java b/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java
index a147bbe48..e5b8a2073 100644
--- a/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java
+++ b/src/main/java/com/ning/http/client/AsyncHttpClientConfig.java
@@ -447,9 +447,29 @@ public boolean isRemoveQueryParamOnRedirect() {
      * Return true if one of the {@link java.util.concurrent.ExecutorService} has been shutdown.
      *
      * @return true if one of the {@link java.util.concurrent.ExecutorService} has been shutdown.
+     *
+     * @deprecated use #isValid
      */
     public boolean isClosed() {
-        return applicationThreadPool.isShutdown() || reaper.isShutdown();
+        return !isValid();
+    }
+
+    /**
+     * @return <code>true</code> if both the application and reaper thread pools
+     *  haven't yet been shutdown.
+     *
+     * @since 1.7.21
+     */
+    public boolean isValid() {
+        boolean atpRunning = true;
+        try {
+            atpRunning = applicationThreadPool.isShutdown();
+        } catch (Exception ignore) {
+            // isShutdown() will thrown an exception in an EE7 environment
+            // when using a ManagedExecutorService.
+            // When this is the case, we assume it's running.
+        }
+        return (atpRunning && !reaper.isShutdown());
     }
 
     /**
@@ -1123,10 +1143,6 @@ public Thread newThread(Runnable r) {
                         });
             }
 
-            if (applicationThreadPool.isShutdown()) {
-                throw new IllegalStateException("ExecutorServices closed");
-            }
-
             if (proxyServerSelector == null && useProxySelector) {
                 proxyServerSelector = ProxyUtils.getJdkDefaultProxyServerSelector();
             }
