diff --git a/src/main/java/com/ning/http/client/providers/netty/ResponseHeaders.java b/src/main/java/com/ning/http/client/providers/netty/ResponseHeaders.java
index 0db2b3233..3e552c9da 100644
--- a/src/main/java/com/ning/http/client/providers/netty/ResponseHeaders.java
+++ b/src/main/java/com/ning/http/client/providers/netty/ResponseHeaders.java
@@ -22,6 +22,7 @@
 import org.jboss.netty.handler.codec.http.HttpResponse;
 
 import java.net.URI;
+import java.util.Map;
 
 /**
  * A class that represent the HTTP headers.
@@ -48,17 +49,13 @@ public ResponseHeaders(URI uri, HttpResponse response, AsyncHttpProvider provide
 
     private FluentCaseInsensitiveStringsMap computerHeaders() {
         FluentCaseInsensitiveStringsMap h = new FluentCaseInsensitiveStringsMap();
-        for (String s : response.getHeaderNames()) {
-            for (String header : response.getHeaders(s)) {
-                h.add(s, header);
-            }
+        for (Map.Entry<String, String> header: response.getHeaders()) {
+           h.add(header.getKey(), header.getValue());
         }
 
-        if (trailingHeaders != null && trailingHeaders.getHeaderNames().size() > 0) {
-            for (final String s : trailingHeaders.getHeaderNames()) {
-                for (String header : response.getHeaders(s)) {
-                    h.add(s, header);
-                }
+        if (trailingHeaders != null) {
+            for (Map.Entry<String, String> header:  trailingHeaders.getHeaders()) {
+                h.add(header.getKey(), header.getValue());
             }
         }
 
