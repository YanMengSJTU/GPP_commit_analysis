diff --git a/src/main/java/com/ning/http/client/AsyncHttpClient.java b/src/main/java/com/ning/http/client/AsyncHttpClient.java
index 18e65847d..b90ceced5 100755
--- a/src/main/java/com/ning/http/client/AsyncHttpClient.java
+++ b/src/main/java/com/ning/http/client/AsyncHttpClient.java
@@ -202,6 +202,11 @@ public AsyncHttpClient(String providerClass, AsyncHttpClientConfig config) {
         this.httpProvider = loadDefaultProvider(providerClass,config);
     }
 
+    // LQ
+    public String toString() {
+        return httpProvider.toString();
+    }
+
     public class BoundRequestBuilder extends RequestBuilderBase<BoundRequestBuilder> {
         /**
          * Calculator used for calculating request signature for the request being
diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index 00fb389e2..a2ea35157 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -202,6 +202,14 @@ public NettyAsyncHttpProvider(AsyncHttpClientConfig config) {
         trackConnections = (config.getMaxTotalConnections() != -1);
     }
 
+    // LQ
+    public String toString() {
+        return String.format("NettyAsyncHttpProvider:\n\t- maxConnections: %d\n\t- openChannels: %s\n\t- connectionPools: %s",
+                maxConnections.get(),
+                openChannels.toString(),
+                connectionsPool.toString());
+    }
+
     void configureNetty() {
         if (asyncHttpProviderConfig != null) {
             for (Entry<String, Object> entry : asyncHttpProviderConfig.propertiesSet()) {
