diff --git a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
index e9020c32e..5b482c74d 100644
--- a/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/netty/NettyAsyncHttpProvider.java
@@ -1796,11 +1796,11 @@ public synchronized void run() {
 
                 long now = millisTime();
                 if (nettyResponseFuture.hasRequestTimedOut(now)) {
-                    long age = (now - nettyResponseFuture.getStart()) / 1000000;
+                    long age = now - nettyResponseFuture.getStart();
                     expire("Request reached time out of " + nettyResponseFuture.getRequestTimeoutInMs() + " ms after " + age + " ms");
 
                 } else if (nettyResponseFuture.hasConnectionIdleTimedOut(now)) {
-                    long age = (now - nettyResponseFuture.getStart()) / 1000000;
+                    long age = now - nettyResponseFuture.getStart();
                     expire("Request reached idle time out of " + nettyResponseFuture.getIdleConnectionTimeoutInMs() + " ms after " + age + " ms");
                 }
 
diff --git a/src/test/java/com/ning/http/client/async/PerRequestTimeoutTest.java b/src/test/java/com/ning/http/client/async/PerRequestTimeoutTest.java
index 22655effc..599775a71 100644
--- a/src/test/java/com/ning/http/client/async/PerRequestTimeoutTest.java
+++ b/src/test/java/com/ning/http/client/async/PerRequestTimeoutTest.java
@@ -52,9 +52,7 @@
 public abstract class PerRequestTimeoutTest extends AbstractBasicTest {
     private static final String MSG = "Enough is enough.";
 
-    protected String getExpectedTimeoutMessage() {
-        return "No response received after 100";
-    }
+    protected abstract void checkTimeoutMessage(String message);
 
     @Override
     public AbstractHandler configureHandler() throws Exception {
@@ -111,7 +109,7 @@ public void testRequestTimeout() throws IOException {
             fail("Interrupted.", e);
         } catch (ExecutionException e) {
             assertTrue(e.getCause() instanceof TimeoutException);
-            assertEquals(e.getCause().getMessage(), getExpectedTimeoutMessage());
+            checkTimeoutMessage(e.getCause().getMessage());
         } catch (TimeoutException e) {
             fail("Timeout.", e);
         } finally {
@@ -133,7 +131,7 @@ public void testGlobalDefaultPerRequestInfiniteTimeout() throws IOException {
             fail("Interrupted.", e);
         } catch (ExecutionException e) {
             assertTrue(e.getCause() instanceof TimeoutException);
-            assertEquals(e.getCause().getMessage(), getExpectedTimeoutMessage());
+            checkTimeoutMessage(e.getCause().getMessage());
         } finally {
             client.close();
         }
@@ -151,7 +149,7 @@ public void testGlobalRequestTimeout() throws IOException {
             fail("Interrupted.", e);
         } catch (ExecutionException e) {
             assertTrue(e.getCause() instanceof TimeoutException);
-            assertEquals(e.getCause().getMessage(), getExpectedTimeoutMessage());
+            checkTimeoutMessage(e.getCause().getMessage());
         } catch (TimeoutException e) {
             fail("Timeout.", e);
         } finally {
diff --git a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyPerRequestTimeoutTest.java b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyPerRequestTimeoutTest.java
index e13d10ac4..6c1ce2d3b 100644
--- a/src/test/java/com/ning/http/client/async/grizzly/GrizzlyPerRequestTimeoutTest.java
+++ b/src/test/java/com/ning/http/client/async/grizzly/GrizzlyPerRequestTimeoutTest.java
@@ -13,6 +13,8 @@
 
 package com.ning.http.client.async.grizzly;
 
+import static org.testng.Assert.assertEquals;
+
 import com.ning.http.client.AsyncHttpClient;
 import com.ning.http.client.AsyncHttpClientConfig;
 import com.ning.http.client.async.PerRequestTimeoutTest;
@@ -21,8 +23,8 @@
 public class GrizzlyPerRequestTimeoutTest extends PerRequestTimeoutTest {
 
     @Override
-    protected String getExpectedTimeoutMessage() {
-        return "Timeout exceeded";
+    protected void checkTimeoutMessage(String message) {
+        assertEquals("Timeout exceeded", message);
     }
 
     @Override
diff --git a/src/test/java/com/ning/http/client/async/netty/NettyPerRequestTimeoutTest.java b/src/test/java/com/ning/http/client/async/netty/NettyPerRequestTimeoutTest.java
index 6b74df734..aa42d7f46 100644
--- a/src/test/java/com/ning/http/client/async/netty/NettyPerRequestTimeoutTest.java
+++ b/src/test/java/com/ning/http/client/async/netty/NettyPerRequestTimeoutTest.java
@@ -12,12 +12,19 @@
  */
 package com.ning.http.client.async.netty;
 
+import static org.testng.Assert.assertTrue;
+
 import com.ning.http.client.AsyncHttpClient;
 import com.ning.http.client.AsyncHttpClientConfig;
 import com.ning.http.client.async.PerRequestTimeoutTest;
 import com.ning.http.client.async.ProviderUtil;
 
 public class NettyPerRequestTimeoutTest extends PerRequestTimeoutTest {
+
+    protected void checkTimeoutMessage(String message) {
+        assertTrue(message.startsWith("Request reached time out of 100 ms after "));
+    }
+
     @Override
     public AsyncHttpClient getAsyncHttpClient(AsyncHttpClientConfig config) {
         return ProviderUtil.nettyProvider(config);
