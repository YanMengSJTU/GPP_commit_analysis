diff --git a/api/src/main/java/org/asynchttpclient/AsyncHandlerExtensions.java b/api/src/main/java/org/asynchttpclient/AsyncHandlerExtensions.java
index 36cf71a47..178c7244f 100644
--- a/api/src/main/java/org/asynchttpclient/AsyncHandlerExtensions.java
+++ b/api/src/main/java/org/asynchttpclient/AsyncHandlerExtensions.java
@@ -66,4 +66,9 @@
      * Notify the callback after DNS resolution has completed.
      */
     void onDnsResolved(InetSocketAddress remoteAddress);
+
+    /**
+     * Notify the callback when the SSL handshake performed to establish an HTTPS connection has been completed.
+     */
+    void onSslHandshakeCompleted();
 }
diff --git a/api/src/main/java/org/asynchttpclient/AsyncHttpClient.java b/api/src/main/java/org/asynchttpclient/AsyncHttpClient.java
index 841592e66..0b3b35d55 100755
--- a/api/src/main/java/org/asynchttpclient/AsyncHttpClient.java
+++ b/api/src/main/java/org/asynchttpclient/AsyncHttpClient.java
@@ -214,7 +214,7 @@
     /**
      * Prepare an HTTP client DELETE request.
      *
-     * @param url A well formed URL.
+     * @param url A well formed URL.asda
      * @return {@link RequestBuilder}
      */
     BoundRequestBuilder prepareDelete(String url);
diff --git a/api/src/test/java/org/asynchttpclient/async/util/EventCollectingHandler.java b/api/src/test/java/org/asynchttpclient/async/util/EventCollectingHandler.java
index abd3054d8..0023d51ec 100644
--- a/api/src/test/java/org/asynchttpclient/async/util/EventCollectingHandler.java
+++ b/api/src/test/java/org/asynchttpclient/async/util/EventCollectingHandler.java
@@ -103,4 +103,9 @@ public void onRetry() {
     public void onDnsResolved(InetSocketAddress remoteAddress) {
         firedEvents.add("DnsResolved");
     }
+
+    @Override
+    public void onSslHandshakeCompleted() {
+        firedEvents.add("SslHandshakeCompleted");
+    }
 }
diff --git a/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java b/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java
index 4f7d7540d..c35dae038 100644
--- a/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java
+++ b/providers/netty3/src/main/java/org/asynchttpclient/providers/netty3/request/NettyConnectListener.java
@@ -17,6 +17,7 @@
 
 import java.net.ConnectException;
 
+import org.asynchttpclient.AsyncHandler;
 import org.asynchttpclient.AsyncHandlerExtensions;
 import org.asynchttpclient.providers.netty.commons.future.StackTraceInspector;
 import org.asynchttpclient.providers.netty3.channel.ChannelManager;
@@ -88,11 +89,16 @@ private void onFutureSuccess(final Channel channel) throws ConnectException {
             sslHandler.handshake().addListener(new ChannelFutureListener() {
                 
                 @Override
-                public void operationComplete(ChannelFuture future) throws Exception {
-                    if (future.isSuccess())
+                public void operationComplete(ChannelFuture handshakeFuture) throws Exception {
+                    if (handshakeFuture.isSuccess()){
+                        final AsyncHandler<T> asyncHandler = future.getAsyncHandler();
+                        if (asyncHandler instanceof AsyncHandlerExtensions)
+                            AsyncHandlerExtensions.class.cast(asyncHandler).onSslHandshakeCompleted();
+
                         writeRequest(channel);
+                    }
                     else
-                        onFutureFailure(channel, future.getCause());
+                        onFutureFailure(channel, handshakeFuture.getCause());
                 }
             });
         
diff --git a/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyBasicHttpsTest.java b/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyBasicHttpsTest.java
index 1e66ae126..f4f75944d 100644
--- a/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyBasicHttpsTest.java
+++ b/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyBasicHttpsTest.java
@@ -41,6 +41,7 @@ public void testNormalEventsFired() throws InterruptedException, TimeoutExceptio
                     "PoolConnection",
                     "OpenConnection",
                     "DnsResolved",
+                    "SslHandshakeCompleted",
                     "ConnectionOpen",
                     "SendRequest",
                     "HeaderWriteCompleted",
diff --git a/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java b/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java
index a11a9226c..33589b8ac 100755
--- a/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java
+++ b/providers/netty4/src/main/java/org/asynchttpclient/providers/netty4/request/NettyConnectListener.java
@@ -23,6 +23,7 @@
 
 import java.net.ConnectException;
 
+import org.asynchttpclient.AsyncHandler;
 import org.asynchttpclient.AsyncHandlerExtensions;
 import org.asynchttpclient.providers.netty.commons.future.StackTraceInspector;
 import org.asynchttpclient.providers.netty4.channel.ChannelManager;
@@ -87,12 +88,17 @@ private void onFutureSuccess(final Channel channel) throws ConnectException {
         if (sslHandler != null) {
             sslHandler.handshakeFuture().addListener(new GenericFutureListener<Future<Channel>>() {
                 @Override
-                public void operationComplete(Future<Channel> future) throws Exception {
+                public void operationComplete(Future<Channel> handshakeFuture) throws Exception {
                  
-                    if (future.isSuccess())
+                    if (handshakeFuture.isSuccess()){
+                        final AsyncHandler<T> asyncHandler = future.getAsyncHandler();
+                        if (asyncHandler instanceof AsyncHandlerExtensions)
+                            AsyncHandlerExtensions.class.cast(asyncHandler).onSslHandshakeCompleted();
+
                         writeRequest(channel);
+                    }
                     else
-                        onFutureFailure(channel, future.cause());
+                        onFutureFailure(channel, handshakeFuture.cause());
                 }
             });
         
diff --git a/providers/netty4/src/test/java/org/asynchttpclient/providers/netty4/NettyBasicHttpsTest.java b/providers/netty4/src/test/java/org/asynchttpclient/providers/netty4/NettyBasicHttpsTest.java
index 9d56e0987..3b62c3bcd 100644
--- a/providers/netty4/src/test/java/org/asynchttpclient/providers/netty4/NettyBasicHttpsTest.java
+++ b/providers/netty4/src/test/java/org/asynchttpclient/providers/netty4/NettyBasicHttpsTest.java
@@ -41,6 +41,7 @@ public void testNormalEventsFired() throws InterruptedException, TimeoutExceptio
                     "PoolConnection",
                     "OpenConnection",
                     "DnsResolved",
+                    "SslHandshakeCompleted",
                     "ConnectionOpen",
                     "SendRequest",
                     "HeaderWriteCompleted",
