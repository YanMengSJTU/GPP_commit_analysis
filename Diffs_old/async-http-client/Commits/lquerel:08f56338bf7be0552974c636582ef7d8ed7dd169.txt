diff --git a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java
index e19f7012f..07534d406 100644
--- a/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java
+++ b/src/main/java/com/ning/http/client/providers/jdk/JDKAsyncHttpProvider.java
@@ -317,7 +317,7 @@ public T call() throws Exception {
 
                     int byteToRead = urlConnection.getContentLength();
                     InputStream stream = is;
-                    if (byteToRead <= 0) {
+                    /* if (byteToRead <= 0) */ {  // content-length is not always defined properly by servers
                         int[] lengthWrapper = new int[1];
                         byte[] bytes = AsyncHttpProviderUtils.readFully(is, lengthWrapper);
                         stream = new ByteArrayInputStream(bytes, 0, lengthWrapper[0]);
diff --git a/src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java b/src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java
index 120950a3b..9a32b8e03 100644
--- a/src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java
+++ b/src/main/java/com/ning/http/util/AsyncHttpProviderUtils.java
@@ -431,6 +431,11 @@ public static Cookie parseCookie(String value) {
             }
         }
 
+        // Normalization of maxAge (LQ)
+        if( maxAge < -1 ) {
+            maxAge = -1;
+        }
+        
         return new Cookie(domain, cookieName, cookieValue, path, maxAge, secure);
     }
 
diff --git a/src/main/java/com/ning/http/util/UTF8UrlEncoder.java b/src/main/java/com/ning/http/util/UTF8UrlEncoder.java
index 9077a783e..e06d9ee08 100644
--- a/src/main/java/com/ning/http/util/UTF8UrlEncoder.java
+++ b/src/main/java/com/ning/http/util/UTF8UrlEncoder.java
@@ -74,6 +74,11 @@ public static StringBuilder appendEncoded(StringBuilder sb, String input)
     
     private final static void appendSingleByteEncoded(StringBuilder sb, int value)
     {
+        // The space char must be converted into a + (some servers doesn't support the %20 notation for space)  
+        if (value == 32) {
+            sb.append('+');
+            return;
+        }     
         sb.append('%');
         sb.append(HEX[value >> 4]);
         sb.append(HEX[value & 0xF]);
