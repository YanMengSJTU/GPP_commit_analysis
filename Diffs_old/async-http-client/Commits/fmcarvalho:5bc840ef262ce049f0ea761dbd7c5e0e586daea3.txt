diff --git a/README.md b/README.md
index cbd817f13..8931b8eda 100644
--- a/README.md
+++ b/README.md
@@ -67,6 +67,26 @@ asyncHttpClient.prepareGet("http://www.example.com/").execute(new AsyncCompletio
 
 (this will also fully read `Response` in memory before calling `onCompleted`)
 
+Alternatively you may use continuations (through Java 8 class `CompletableFuture<T>`) to accomplish asynchronous (non-blocking) solution. The equivalent continuation approach to the previous example is:
+
+```java
+import org.asynchttpclient.*;
+import java.util.concurrent.CompletableFuture;
+
+import static org.asynchttpclient.Dsl.asyncHttpClient;
+
+AsyncHttpClient asyncHttpClient = asyncHttpClient();
+CompletableFuture<Response> promise = asyncHttpClient
+            .prepareGet("http://www.example.com/")
+            .execute()
+            .toCompletableFuture()
+            .exceptionally(t -> { /* Something wrong happened... */  } )
+            .thenApply(resp -> { /*  Do something with the Response */ return resp; });
+promise.join(); // wait for completion
+```
+
+You may get the complete maven project for this simple demo from [org.asynchttpclient.example](https://github.com/AsyncHttpClient/async-http-client/tree/master/example/src/main/java/org/asynchttpclient/example)
+
 You can also mix Future with AsyncHandler to only retrieve part of the asynchronous response
 
 ```java
diff --git a/example/pom.xml b/example/pom.xml
new file mode 100644
index 000000000..a7e57a541
--- /dev/null
+++ b/example/pom.xml
@@ -0,0 +1,21 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <groupId>org.asynchttpclient</groupId>
+        <artifactId>async-http-client-project</artifactId>
+        <version>2.0.11-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>async-http-client-example</artifactId>
+    <name>Asynchronous Http Client Example</name>
+    <packaging>jar</packaging>
+    <description>
+        The Async Http Client example.
+    </description>
+    <dependencies>
+        <dependency>
+            <groupId>org.asynchttpclient</groupId>
+            <artifactId>async-http-client</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+    </dependencies>
+</project>
diff --git a/example/src/main/java/org/asynchttpclient/example/completable/CompletableFutures.java b/example/src/main/java/org/asynchttpclient/example/completable/CompletableFutures.java
new file mode 100644
index 000000000..172876113
--- /dev/null
+++ b/example/src/main/java/org/asynchttpclient/example/completable/CompletableFutures.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2016 AsyncHttpClient Project. All rights reserved.
+ *
+ * Ning licenses this file to you under the Apache License, version 2.0
+ * (the "License"); you may not use this file except in compliance with the
+ * License.  You may obtain a copy of the License at:
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
+ * License for the specific language governing permissions and limitations
+ * under the License.
+ *
+ */
+package org.asynchttpclient.example.completable;
+
+import org.asynchttpclient.AsyncHttpClient;
+import org.asynchttpclient.Response;
+
+import java.io.IOException;
+
+import static org.asynchttpclient.Dsl.asyncHttpClient;
+
+public class CompletableFutures {
+    public static void main(String[] args) throws IOException {
+        try(AsyncHttpClient asyncHttpClient = asyncHttpClient()) {
+            asyncHttpClient
+                    .prepareGet("http://www.example.com/")
+                    .execute()
+                    .toCompletableFuture()
+                    .thenApply(Response::getResponseBody)
+                    .thenAccept(System.out::println)
+                    .join();
+        }
+    }
+}
diff --git a/pom.xml b/pom.xml
index f015764f2..3e7a27762 100644
--- a/pom.xml
+++ b/pom.xml
@@ -215,6 +215,7 @@
 		<module>netty-bp</module>
 		<module>client</module>
 		<module>extras</module>
+		<module>example</module>
 	</modules>
 	<dependencyManagement>
 		<dependencies>
