diff --git a/client/src/main/java/org/asynchttpclient/netty/request/WriteProgressListener.java b/client/src/main/java/org/asynchttpclient/netty/request/WriteProgressListener.java
index 6abe955e0..7fc3ec4a6 100755
--- a/client/src/main/java/org/asynchttpclient/netty/request/WriteProgressListener.java
+++ b/client/src/main/java/org/asynchttpclient/netty/request/WriteProgressListener.java
@@ -45,7 +45,9 @@ public void operationProgressed(ChannelProgressiveFuture f, long progress, long
             if (total < 0) {
                 total = expectedTotal;
             }
-            progressAsyncHandler.onContentWriteProgress(progress - lastLastProgress, progress, total);
+            if (progress != lastLastProgress) {
+                progressAsyncHandler.onContentWriteProgress(progress - lastLastProgress, progress, total);
+            }
         }
     }
 }
diff --git a/client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java b/client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java
index b208308fe..b1f246244 100755
--- a/client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java
+++ b/client/src/main/java/org/asynchttpclient/netty/request/body/BodyChunkedInput.java
@@ -57,6 +57,7 @@ public ByteBuf readChunk(ByteBufAllocator alloc) throws Exception {
 
         ByteBuf buffer = alloc.buffer(chunkSize);
         Body.BodyState state = body.transferTo(buffer);
+        progress += buffer.writerIndex();
         switch (state) {
         case STOP:
             endOfInput = true;
