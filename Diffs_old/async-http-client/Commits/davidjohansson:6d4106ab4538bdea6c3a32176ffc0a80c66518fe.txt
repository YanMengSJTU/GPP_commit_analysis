diff --git a/client/src/main/java/org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody.java b/client/src/main/java/org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody.java
index 042052c0f..e8f97cca2 100644
--- a/client/src/main/java/org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody.java
+++ b/client/src/main/java/org/asynchttpclient/netty/request/body/NettyReactiveStreamsBody.java
@@ -22,6 +22,7 @@
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.util.NoSuchElementException;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.asynchttpclient.netty.NettyResponseFuture;
 import org.asynchttpclient.netty.util.ByteBufUtils;
@@ -107,6 +108,7 @@ private static MessageDigest newMd5() {
 
 		private final Channel channel;
 		private final NettyResponseFuture<?> future;
+		private final AtomicBoolean firstCall = new AtomicBoolean(true);
 
 		public NettySubscriber(Channel channel, NettyResponseFuture<?> future) {
 			super(channel.eventLoop());
@@ -118,6 +120,9 @@ public NettySubscriber(Channel channel, NettyResponseFuture<?> future) {
 		
 		@Override
 		public void onNext(HttpContent t) {
+			if (firstCall.getAndSet(false)) {
+				new Exception().printStackTrace();
+			}
 			LOGGER.debug(">>>>>>>>>>>>onNext with {} bytes", t.content().readableBytes());
 			if (t.content().isReadable()) {
 				byte[] bytes = ByteBufUtils.byteBuf2Bytes(t.content().duplicate());
