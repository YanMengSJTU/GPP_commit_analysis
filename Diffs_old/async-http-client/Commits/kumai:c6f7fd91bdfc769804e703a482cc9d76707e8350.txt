diff --git a/src/main/java/com/ning/http/client/FluentStringsMap.java b/src/main/java/com/ning/http/client/FluentStringsMap.java
index 5c7142861..0ca87cab4 100644
--- a/src/main/java/com/ning/http/client/FluentStringsMap.java
+++ b/src/main/java/com/ning/http/client/FluentStringsMap.java
@@ -16,6 +16,8 @@
  */
 package com.ning.http.client;
 
+import static com.ning.http.util.MiscUtil.isNonEmpty;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
@@ -61,7 +63,7 @@ public FluentStringsMap(Map<String, Collection<String>> src) {
      * @return This object
      */
     public FluentStringsMap add(String key, String... values) {
-        if ((values != null) && (values.length > 0)) {
+        if (isNonEmpty(values)) {
             add(key, Arrays.asList(values));
         }
         return this;
diff --git a/src/main/java/com/ning/http/client/RequestBuilderBase.java b/src/main/java/com/ning/http/client/RequestBuilderBase.java
index d9cb4965c..fb50cc668 100644
--- a/src/main/java/com/ning/http/client/RequestBuilderBase.java
+++ b/src/main/java/com/ning/http/client/RequestBuilderBase.java
@@ -49,11 +49,11 @@
 
     private static final class RequestImpl implements Request {
         private String method;
-        private URI originalUri = null;
-        private URI uri = null;
-        private URI rawUri = null;
-        private InetAddress address = null;
-        private InetAddress localAddress = null;
+        private URI originalUri;
+        private URI uri;
+        private URI rawUri;
+        private InetAddress address;
+        private InetAddress localAddress;
         private FluentCaseInsensitiveStringsMap headers = new FluentCaseInsensitiveStringsMap();
         private Collection<Cookie> cookies = new ArrayList<Cookie>();
         private byte[] byteData;
@@ -71,9 +71,9 @@
         private File file;
         private Boolean followRedirects;
         private PerRequestConfig perRequestConfig;
-        private long rangeOffset = 0;
+        private long rangeOffset;
         public String charset;
-        private boolean useRawUrl = false;
+        private boolean useRawUrl;
         private ConnectionPoolKeyStrategy connectionPoolKeyStrategy = DefaultConnectionPoolStrategy.INSTANCE;
 
         public RequestImpl(boolean useRawUrl) {
@@ -93,9 +93,9 @@ public RequestImpl(Request prototype) {
                 this.streamData = prototype.getStreamData();
                 this.entityWriter = prototype.getEntityWriter();
                 this.bodyGenerator = prototype.getBodyGenerator();
-                this.params = (prototype.getParams() == null ? null : new FluentStringsMap(prototype.getParams()));
-                this.queryParams = (prototype.getQueryParams() == null ? null : new FluentStringsMap(prototype.getQueryParams()));
-                this.parts = (prototype.getParts() == null ? null : new ArrayList<Part>(prototype.getParts()));
+                this.params = prototype.getParams() == null ? null : new FluentStringsMap(prototype.getParams());
+                this.queryParams = prototype.getQueryParams() == null ? null : new FluentStringsMap(prototype.getQueryParams());
+                this.parts = prototype.getParts() == null ? null : new ArrayList<Part>(prototype.getParts());
                 this.virtualHost = prototype.getVirtualHost();
                 this.length = prototype.getContentLength();
                 this.proxyServer = prototype.getProxyServer();
diff --git a/src/main/java/com/ning/http/util/MiscUtil.java b/src/main/java/com/ning/http/util/MiscUtil.java
index dea244fd7..54e472cf9 100644
--- a/src/main/java/com/ning/http/util/MiscUtil.java
+++ b/src/main/java/com/ning/http/util/MiscUtil.java
@@ -23,6 +23,10 @@ private MiscUtil() {
     public static boolean isNonEmpty(String string) {
         return string != null && string.length() != 0;
     }
+    
+    public static boolean isNonEmpty(Object[] array) {
+        return array != null && array.length != 0;
+    }
 
     public static boolean isNonEmpty(Collection<?> collection) {
         return collection != null && !collection.isEmpty();
