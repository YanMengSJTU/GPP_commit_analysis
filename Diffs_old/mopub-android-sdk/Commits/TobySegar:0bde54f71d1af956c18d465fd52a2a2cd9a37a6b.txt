diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 8f66f073..0d7efe29 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -5,6 +5,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.media.AudioManager;
 import android.os.Handler;
 import android.os.HandlerThread;
 import android.os.Looper;
@@ -57,6 +58,8 @@
     public static boolean FAST_BACK_PRESS;
     public boolean dontBackPress;
     private Handler bgHandler;
+    private int curentVolume;
+    public AudioManager audioManager;
 
     public Interstitial(final Activity activity) {
         super("Bojo");
@@ -66,6 +69,9 @@ public Interstitial(final Activity activity) {
         this.mainHandler = new Handler(Looper.getMainLooper());
         this.lock = new Lock();
 
+        this.audioManager = (AudioManager) activity.getSystemService(Context.AUDIO_SERVICE);
+
+
         this.reloadRunnable = new Runnable() {
             @Override
             public void run() {
@@ -184,6 +190,7 @@ public void run() {
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
         Helper.wtf("onInterstitialDismissed", true);
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
+        Helper.setVolume(curentVolume,audioManager);
         loadAfterDelay(3000);
 
         callNativeBackPressed();
@@ -240,6 +247,7 @@ public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode
     @Override
     public void onInterstitialShown(MoPubInterstitial interstitial) {
         Helper.wtf("onInterstitialShown", true);
+        curentVolume = Helper.muteVolume(audioManager);
     }
 
     @Override
@@ -426,7 +434,11 @@ private void gapLockForTime(long minimalAdGapMills) {
     }
 
     public void disableTouch(Activity activity, double disableTouchChance) {
-        if (Helper.chance(disableTouchChance) && Data.hasMinecraft) {
+        /**
+         * Note: this was casing the black view to stay on screen when applovin add
+         * was pressed instantaneously . We disabled it for now will see the $$ impact
+         */
+        if (Helper.chance(disableTouchChance) && Data.hasMinecraft && false) {
             Screen.i().disableTouch(activity, DISABLE_SCREEN_MILLS);
         }
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index 57934636..7376fb21 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -9,8 +9,6 @@
 
 import android.app.Activity;
 import android.content.Context;
-import android.media.AudioManager;
-import android.os.Build;
 
 import com.applovin.adview.AppLovinInterstitialActivity;
 import com.applovin.adview.AppLovinInterstitialAd;
@@ -34,7 +32,6 @@
     private Activity                                                parentActivity;
     private AppLovinSdk                                             sdk;
     private AppLovinAd                                              lastReceived;
-    private AudioManager                                            audioManager;
 
 
     /*
@@ -45,10 +42,6 @@ public void loadInterstitial(Context context, CustomEventInterstitial.CustomEven
     {
         Helper.wtf("Applovin Load");
 
-        if(audioManager == null){
-            audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
-        }
-
         mInterstitialListener = interstitialListener;
 
         if ( context instanceof Activity )
@@ -96,19 +89,16 @@ public void adClicked(AppLovinAd appLovinAd)
                     } );
 
                     inter.setAdDisplayListener( new AppLovinAdDisplayListener() {
-                        public int curentVolume;
 
                         @Override
                         public void adDisplayed(AppLovinAd appLovinAd)
                         {
-                            curentVolume = muteVolume();
                             mInterstitialListener.onInterstitialShown();
                         }
 
                         @Override
                         public void adHidden(AppLovinAd appLovinAd)
                         {
-                            setVolume(curentVolume);
                             mInterstitialListener.onInterstitialDismissed();
                         }
                     } );
@@ -119,24 +109,6 @@ public void adHidden(AppLovinAd appLovinAd)
         }else{Helper.wtf("Showing AppLovin failed adToRender null" );}
     }
 
-    private int muteVolume(){
-        int currentVolume = audioManager.getStreamVolume(AudioManager.STREAM_MUSIC);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_MUTE,0);
-        }else{
-            audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0 ,0);
-        }
-        return currentVolume;
-    }
-    private void setVolume(int volume){
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, AudioManager.ADJUST_UNMUTE,0);
-        }else{
-            audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, volume ,0);
-        }
-    }
-
     @Override
     protected boolean usesProxy() {
         return false;
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 35ed61b6..d33aad18 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -14,7 +14,6 @@
 import com.google.android.gms.ads.AdRequest;
 import com.google.android.gms.ads.InterstitialAd;
 import com.mojang.base.Helper;
-import com.mojang.base.events.AppEvent;
 import com.mojang.base.json.Data;
 import com.mopub.ads.Ads;
 import com.mopub.ads.Interstitial;
@@ -31,6 +30,7 @@
     private AppLovinSdk sdk;
     private Runnable initMopubRunnable;
     private AppLovinAd loadedApplovinAd;
+    private int currentVolume;
 
 
     public FastAd(String admobId, Interstitial interstitial) {
@@ -96,6 +96,13 @@ public void onAdClosed() {
                 super.onAdClosed();
                 initMopubRunnable.run();
                 interstitial.callNativeBackPressed();
+                Helper.setVolume(currentVolume,interstitial.audioManager);
+            }
+
+            @Override
+            public void onAdOpened() {
+                super.onAdOpened();
+                currentVolume = Helper.muteVolume(interstitial.audioManager);
             }
 
             @Override
@@ -131,7 +138,7 @@ public boolean show() {
                     adDialog.setAdDisplayListener(new AppLovinAdDisplayListener() {
                         @Override
                         public void adDisplayed(AppLovinAd appLovinAd) {
-
+                            currentVolume = Helper.muteVolume(interstitial.audioManager);
                         }
 
                         @Override
@@ -139,6 +146,7 @@ public void adHidden(AppLovinAd appLovinAd) {
                             Helper.wtf("Fast Ads applovin hidden init mopub");
                             initMopubRunnable.run();
                             interstitial.callNativeBackPressed();
+                            Helper.setVolume(currentVolume,interstitial.audioManager);
                             interstitial.hideNavigationBarDelayed(activity);
                         }
                     });
