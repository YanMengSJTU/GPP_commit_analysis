diff --git a/CHANGELOG.md b/CHANGELOG.md
index 7d91bfe0..20e1b5a8 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+## Version 4.17.0 (September 27, 2017)
+- Rewarded Ads can now send up optional custom data through the server completion url. See `MoPubRewardedVideos#showRewardedVideo(String, String)`.
+- Updated Facebook native adapter to ignore clicks on whitespace as per Facebook policy.
+
 #### Version 4.16.1 (August 24, 2017)
 - Fixed issue where null javascript was being passed to AVID video sessions.
 
diff --git a/README.md b/README.md
index 4467ae49..97b656d5 100644
--- a/README.md
+++ b/README.md
@@ -18,7 +18,7 @@ Thank you for submitting pull requests to the MoPub Android GitHub repository. O
 
 ## Disclosures
 
-MoPub v4.16 SDK integrates technology from our partners Integral Ad Science, Inc. (“IAS”) and Moat, Inc. (“Moat”) in order to support viewability measurement and other proprietary reporting that [IAS](https://integralads.com/capabilities/viewability/) and [Moat](https://moat.com/analytics) provide to their advertiser and publisher clients. You have the option to remove or disable this technology by following the [opt-out instructions](#disableViewability) below.  
+MoPub SDK 4.16 and above integrates technology from our partners Integral Ad Science, Inc. (“IAS”) and Moat, Inc. (“Moat”) in order to support viewability measurement and other proprietary reporting that [IAS](https://integralads.com/capabilities/viewability/) and [Moat](https://moat.com/analytics) provide to their advertiser and publisher clients. You have the option to remove or disable this technology by following the [opt-out instructions](#disableViewability) below.  
 
 If you do not remove or disable IAS's and/or Moat’s technology in accordance with these instructions, you agree that IAS's [privacy policy](https://integralads.com/privacy-policy/) and [license](https://integralads.com/sdk-license-agreement) and Moat’s [privacy policy](https://moat.com/privacy),  [terms](https://moat.com/terms), and [license](https://moat.com/sdklicense.txt), respectively, apply to your integration of these partners' technologies into your application.
 
@@ -38,7 +38,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        compile('com.mopub:mopub-sdk:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk:4.17.0@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        compile('com.mopub:mopub-sdk-banner:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk-banner:4.17.0@aar') {
             transitive = true
         }
         
         // For interstitials
-        compile('com.mopub:mopub-sdk-interstitial:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk-interstitial:4.17.0@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        compile('com.mopub:mopub-sdk-rewardedvideo:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk-rewardedvideo:4.17.0@aar') {
             transitive = true
         }
 
         // For native static (images).
-        compile('com.mopub:mopub-sdk-native-static:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk-native-static:4.17.0@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        compile('com.mopub:mopub-sdk-native-video:4.16.1@aar') {
+        compile('com.mopub:mopub-sdk-native-video:4.17.0@aar') {
             transitive = true
         }
     }
@@ -107,13 +107,8 @@ The MoPub SDK is available via:
 ## New in this Version
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
-- Added support for viewability measurement from IAS (AVID library) and Moat.  
-    - **Important:** New dependencies were included in this release; please update your `build.gradle`'s repositories block to include `maven { url "https://s3.amazonaws.com/moat-sdk-builds" }`. Note that the AVID library is provided on JCenter, so no additional steps must be taken -- it will be included automatically. See [Upgrading from 4.15.0 and Prior](#upgradeRepositoryViewability) for more details.
-    - To disable this feature, see below section on [Disabling Viewability Measurement](#disableViewability).
-- Interstitials are now loaded offscreen instead of in a separate WebView.
-- Rewarded Videos have a new init method. See `MoPubRewardedVideos.initializeRewardedVideo(Activity, List<Class<? extends CustomEventRewardedVideo>>, MediationSettings...)`. Pass in a list of networks to initialize, and MoPub will initialize those networks with the settings from the previous ad request, persisted across app close.
-- Upgraded our ExoPlayer dependency to 2.4.4.
-- Fixed issue where null javascript was being passed to AVID video sessions.
+- Rewarded Ads can now send up optional custom data through the server completion url. See `MoPubRewardedVideos#showRewardedVideo(String, String)`.
+- Updated Facebook native adapter to ignore clicks on whitespace as per Facebook policy.
 
 ## Requirements
 
@@ -136,7 +131,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    compile('com.mopub:mopub-sdk:4.16.1@aar') {
+    compile('com.mopub:mopub-sdk:4.17.0@aar') {
         transitive = true
     }
 }
@@ -145,7 +140,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    compile('com.mopub:mopub-sdk:4.16.1@aar') {
+    compile('com.mopub:mopub-sdk:4.17.0@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
diff --git a/build.gradle b/build.gradle
index 6eacd222..a801dad2 100644
--- a/build.gradle
+++ b/build.gradle
@@ -11,5 +11,5 @@ buildscript {
 }
 
 task wrapper(type: Wrapper) {
-    gradleVersion = '2.14.1'
+    gradleVersion = '4.2.1'
 }
diff --git a/extras/src/com/mopub/mobileads/AdColonyInterstitial.java b/extras/src/com/mopub/mobileads/AdColonyInterstitial.java
index 3312cc45..f0b08021 100644
--- a/extras/src/com/mopub/mobileads/AdColonyInterstitial.java
+++ b/extras/src/com/mopub/mobileads/AdColonyInterstitial.java
@@ -3,6 +3,8 @@
 import android.app.Activity;
 import android.content.Context;
 import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.util.Log;
 
 import com.adcolony.sdk.AdColony;
@@ -11,8 +13,12 @@
 import com.adcolony.sdk.AdColonyZone;
 import com.mopub.common.util.Json;
 
+import java.util.Arrays;
 import java.util.Map;
 
+/**
+ * Please reference the Supported Mediation Partner page at http://bit.ly/2mqsuFH for the latest version and ad format certifications.
+ */
 public class AdColonyInterstitial extends CustomEventInterstitial {
     private static final String TAG = "AdColonyInterstitial";
     /*
@@ -39,17 +45,21 @@
     private AdColonyInterstitialListener mAdColonyInterstitialListener;
     private final Handler mHandler;
     private com.adcolony.sdk.AdColonyInterstitial mAdColonyInterstitial;
+    private static String[] previousAdColonyAllZoneIds;
 
     public AdColonyInterstitial() {
         mHandler = new Handler();
     }
 
     @Override
-    protected void loadInterstitial(Context context,
-                                    CustomEventInterstitialListener customEventInterstitialListener,
-                                    Map<String, Object> localExtras,
-                                    Map<String, String> serverExtras) {
-        if (!(context instanceof Activity)) {
+    protected void loadInterstitial(@NonNull Context context,
+            @NonNull CustomEventInterstitialListener customEventInterstitialListener,
+            @Nullable Map<String, Object> localExtras,
+            @NonNull Map<String, String> serverExtras) {
+        if (context == null
+                || !(context instanceof Activity)
+                || customEventInterstitialListener == null
+                || serverExtras == null) {
             customEventInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
             return;
         }
@@ -67,10 +77,15 @@ protected void loadInterstitial(Context context,
             allZoneIds = extractAllZoneIds(serverExtras);
             zoneId = serverExtras.get(ZONE_ID_KEY);
         }
-
+        AdColonyAppOptions adColonyAppOptions = AdColonyAppOptions.getMoPubAppOptions(clientOptions);
         mAdColonyInterstitialListener = getAdColonyInterstitialListener();
         if (!isAdColonyConfigured()) {
-            AdColony.configure((Activity) context, getAppOptions(clientOptions), appId, allZoneIds);
+            AdColony.configure((Activity) context, adColonyAppOptions, appId, allZoneIds);
+        } else if ((shouldReconfigure(previousAdColonyAllZoneIds, allZoneIds))) {
+            // Need to check the zone IDs sent from the MoPub portal and reconfigure if they are
+            // different than the zones we initially called AdColony.configure() with
+            AdColony.configure((Activity) context, adColonyAppOptions, appId, allZoneIds);
+            previousAdColonyAllZoneIds = allZoneIds;
         }
 
         AdColony.requestInterstitial(zoneId, mAdColonyInterstitialListener);
@@ -101,35 +116,6 @@ protected void onInvalidate() {
         }
     }
 
-    private AdColonyAppOptions getAppOptions(String clientOptions) {
-        if (clientOptions == null || clientOptions.isEmpty()) {
-            return null;
-        }
-        AdColonyAppOptions adColonyAppOptions = new AdColonyAppOptions();
-        String[] allOptions = clientOptions.split(",");
-        for (String option : allOptions) {
-            String optionNameAndValue[] = option.split(":");
-            if (optionNameAndValue.length == 2) {
-                switch (optionNameAndValue[0]) {
-                    case "store":
-                        adColonyAppOptions.setOriginStore(optionNameAndValue[1]);
-                        break;
-                    case "version":
-                        adColonyAppOptions.setAppVersion(optionNameAndValue[1]);
-                        break;
-                    default:
-                        Log.e(TAG, "AdColony client options in wrong format - please check your MoPub dashboard");
-                        return null;
-                }
-            } else {
-                Log.e(TAG, "AdColony client options in wrong format - please check your MoPub dashboard");
-                return null;
-            }
-        }
-
-        return adColonyAppOptions;
-    }
-
     private boolean isAdColonyConfigured() {
         return !AdColony.getSDKVersion().isEmpty();
     }
@@ -140,7 +126,7 @@ private AdColonyInterstitialListener getAdColonyInterstitialListener() {
         } else {
             return new AdColonyInterstitialListener() {
                 @Override
-                public void onRequestFilled(com.adcolony.sdk.AdColonyInterstitial adColonyInterstitial) {
+                public void onRequestFilled(@NonNull com.adcolony.sdk.AdColonyInterstitial adColonyInterstitial) {
                     mAdColonyInterstitial = adColonyInterstitial;
                     Log.d(TAG, "AdColony interstitial ad has been successfully loaded.");
                     mHandler.post(new Runnable() {
@@ -152,7 +138,7 @@ public void run() {
                 }
 
                 @Override
-                public void onRequestNotFilled(AdColonyZone zone) {
+                public void onRequestNotFilled(@NonNull AdColonyZone zone) {
                     Log.d(TAG, "AdColony interstitial ad has no fill.");
                     mHandler.post(new Runnable() {
                         @Override
@@ -163,7 +149,7 @@ public void run() {
                 }
 
                 @Override
-                public void onClosed(com.adcolony.sdk.AdColonyInterstitial ad) {
+                public void onClosed(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
                     Log.d(TAG, "AdColony interstitial ad has been dismissed.");
                     mHandler.post(new Runnable() {
                         @Override
@@ -174,7 +160,7 @@ public void run() {
                 }
 
                 @Override
-                public void onOpened(com.adcolony.sdk.AdColonyInterstitial ad) {
+                public void onOpened(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
                     Log.d(TAG, "AdColony interstitial ad shown: " + ad.getZoneID());
                     mHandler.post(new Runnable() {
                         @Override
@@ -185,23 +171,13 @@ public void run() {
                 }
 
                 @Override
-                public void onExpiring(com.adcolony.sdk.AdColonyInterstitial ad) {
+                public void onExpiring(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
                     Log.d(TAG, "AdColony interstitial ad is expiring; requesting new ad");
                     AdColony.requestInterstitial(ad.getZoneID(), mAdColonyInterstitialListener);
                 }
 
                 @Override
-                public void onLeftApplication(com.adcolony.sdk.AdColonyInterstitial ad) {
-                    mHandler.post(new Runnable() {
-                        @Override
-                        public void run() {
-                            mCustomEventInterstitialListener.onLeaveApplication();
-                        }
-                    });
-                }
-
-                @Override
-                public void onClicked(com.adcolony.sdk.AdColonyInterstitial ad) {
+                public void onClicked(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
                     mCustomEventInterstitialListener.onInterstitialClicked();
                 }
             };
@@ -209,12 +185,30 @@ public void onClicked(com.adcolony.sdk.AdColonyInterstitial ad) {
     }
 
     private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(CLIENT_OPTIONS_KEY)
+        return extras != null
+                && extras.containsKey(CLIENT_OPTIONS_KEY)
                 && extras.containsKey(APP_ID_KEY)
                 && extras.containsKey(ALL_ZONE_IDS_KEY)
                 && extras.containsKey(ZONE_ID_KEY);
     }
 
+    private static boolean shouldReconfigure(String[] previousZones, String[] newZones) {
+        // If AdColony is configured already, but previousZones is null, then that means AdColony
+        // was configured with the AdColonyRewardedVideo adapter so attempt to configure with
+        // the ids in newZones. They will be ignored within the AdColony SDK if the zones are
+        // the same as the zones that the other adapter called AdColony.configure() with.
+        if (previousZones == null) {
+            return true;
+        } else if (newZones == null) {
+            return false;
+        } else if (previousZones.length != newZones.length) {
+            return true;
+        }
+        Arrays.sort(previousZones);
+        Arrays.sort(newZones);
+        return !Arrays.equals(previousZones, newZones);
+    }
+
     private String[] extractAllZoneIds(Map<String, String> serverExtras) {
         String[] result = Json.jsonArrayToStringArray(serverExtras.get(ALL_ZONE_IDS_KEY));
 
@@ -225,10 +219,4 @@ private boolean extrasAreValid(Map<String, String> extras) {
 
         return result;
     }
-
-    @Deprecated
-    // For testing
-    public static String getAdUnitId(MoPubInterstitial interstitial) {
-        return interstitial.getMoPubInterstitialView().getAdUnitId();
-    }
 }
diff --git a/extras/src/com/mopub/mobileads/AdColonyRewardedVideo.java b/extras/src/com/mopub/mobileads/AdColonyRewardedVideo.java
index 8d81a6f7..accb01f2 100644
--- a/extras/src/com/mopub/mobileads/AdColonyRewardedVideo.java
+++ b/extras/src/com/mopub/mobileads/AdColonyRewardedVideo.java
@@ -22,13 +22,14 @@
 import com.mopub.common.MoPubReward;
 import com.mopub.common.util.Json;
 
+import java.util.Arrays;
 import java.util.Map;
 import java.util.WeakHashMap;
 import java.util.concurrent.ScheduledThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
 /**
- * A custom event for showing AdColony rewarded videos.
+ * Please reference the Supported Mediation Partner page at http://bit.ly/2mqsuFH for the latest version and ad format certifications.
  */
 public class AdColonyRewardedVideo extends CustomEventRewardedVideo {
     private static final String TAG = "AdColonyRewardedVideo";
@@ -54,6 +55,7 @@
 
     private static boolean sInitialized = false;
     private static LifecycleListener sLifecycleListener = new BaseLifecycleListener();
+    private static String[] previousAdColonyAllZoneIds;
 
     AdColonyInterstitial mAd;
     private String mZoneId;
@@ -108,8 +110,8 @@ protected void onInvalidate() {
 
     @Override
     public boolean checkAndInitializeSdk(@NonNull final Activity launcherActivity,
-                                         @NonNull final Map<String, Object> localExtras,
-                                         @NonNull final Map<String, String> serverExtras) throws Exception {
+            @NonNull final Map<String, Object> localExtras,
+            @NonNull final Map<String, String> serverExtras) throws Exception {
         synchronized (AdColonyRewardedVideo.class) {
             if (sInitialized) {
                 return false;
@@ -127,9 +129,9 @@ public boolean checkAndInitializeSdk(@NonNull final Activity launcherActivity,
             }
 
             setUpGlobalSettings();
-            setAppOptions(adColonyClientOptions);
-
+            mAdColonyAppOptions = AdColonyAppOptions.getMoPubAppOptions(adColonyClientOptions);
             if (!isAdColonyConfigured()) {
+                previousAdColonyAllZoneIds = adColonyAllZoneIds;
                 AdColony.configure(launcherActivity, mAdColonyAppOptions, adColonyAppId, adColonyAllZoneIds);
             }
 
@@ -140,13 +142,24 @@ public boolean checkAndInitializeSdk(@NonNull final Activity launcherActivity,
 
     @Override
     protected void loadWithSdkInitialized(@NonNull final Activity activity,
-                                          @NonNull final Map<String, Object> localExtras,
-                                          @NonNull final Map<String, String> serverExtras) throws Exception {
-
+            @NonNull final Map<String, Object> localExtras,
+            @NonNull final Map<String, String> serverExtras) throws Exception {
         mZoneId = DEFAULT_ZONE_ID;
         if (extrasAreValid(serverExtras)) {
             mZoneId = serverExtras.get(ZONE_ID_KEY);
+            String adColonyClientOptions = serverExtras.get(CLIENT_OPTIONS_KEY);
+            String adColonyAppId = serverExtras.get(APP_ID_KEY);
+            String[] adColonyAllZoneIds = extractAllZoneIds(serverExtras);
+
+            // Need to check the zone IDs sent from the MoPub portal and reconfigure if they are
+            // different than the zones we initially called AdColony.configure() with
+            if (shouldReconfigure(previousAdColonyAllZoneIds, adColonyAllZoneIds)) {
+                mAdColonyAppOptions = AdColonyAppOptions.getMoPubAppOptions(adColonyClientOptions);
+                AdColony.configure(activity, mAdColonyAppOptions, adColonyAppId, adColonyAllZoneIds);
+                previousAdColonyAllZoneIds = adColonyAllZoneIds;
+            }
         }
+
         Object adUnitObject = localExtras.get(DataKeys.AD_UNIT_ID_KEY);
         if (adUnitObject != null && adUnitObject instanceof String) {
             mAdUnitId = (String) adUnitObject;
@@ -160,40 +173,28 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
         scheduleOnVideoReady();
     }
 
+    private static boolean shouldReconfigure(String[] previousZones, String[] newZones) {
+        // If AdColony is configured already, but previousZones is null, then that means AdColony
+        // was configured with the AdColonyInterstitial adapter so attempt to configure with
+        // the ids in newZones. They will be ignored within the AdColony SDK if the zones are
+        // the same as the zones that the other adapter called AdColony.configure() with.
+        if (previousZones == null) {
+            return true;
+        } else if (newZones == null) {
+            return false;
+        } else if (previousZones.length != newZones.length) {
+            return true;
+        }
+        Arrays.sort(previousZones);
+        Arrays.sort(newZones);
+        return !Arrays.equals(previousZones, newZones);
+    }
+
     private void setUpAdOptions() {
         mAdColonyAdOptions.enableConfirmationDialog(getConfirmationDialogFromSettings());
         mAdColonyAdOptions.enableResultsDialog(getResultsDialogFromSettings());
     }
 
-    private void setAppOptions(String clientOptions) {
-        if(android.text.TextUtils.isEmpty(clientOptions)) {
-            Log.d(TAG, "AdColony client options are not configured on the MoPub dashboard");
-            return;
-        }
-
-        String[] allOptions = clientOptions.split(",");
-        for (String option : allOptions) {
-            String optionNameAndValue[] = option.split(":");
-            if (optionNameAndValue.length == 2) {
-                switch (optionNameAndValue[0]) {
-                    case "store":
-                        mAdColonyAppOptions.setOriginStore(optionNameAndValue[1]);
-                        break;
-                    case "version":
-                        mAdColonyAppOptions.setAppVersion(optionNameAndValue[1]);
-                        break;
-                    default:
-                        Log.e(TAG, "AdColony client options in wrong format - please check your MoPub dashboard");
-                        return;
-                }
-            } else {
-                Log.e(TAG, "AdColony client options is not recognized - please check your MoPub " +
-                        "dashboard");
-                return;
-            }
-        }
-    }
-
     private boolean isAdColonyConfigured() {
         return !AdColony.getSDKVersion().isEmpty();
     }
@@ -216,7 +217,8 @@ public void showVideo() {
     }
 
     private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(CLIENT_OPTIONS_KEY)
+        return extras != null
+                && extras.containsKey(CLIENT_OPTIONS_KEY)
                 && extras.containsKey(APP_ID_KEY)
                 && extras.containsKey(ALL_ZONE_IDS_KEY)
                 && extras.containsKey(ZONE_ID_KEY);
@@ -303,7 +305,7 @@ private boolean isAdAvailable(String zoneId) {
         }
 
         @Override
-        public void onReward(AdColonyReward a) {
+        public void onReward(@NonNull AdColonyReward a) {
             MoPubReward reward;
             if (a.success()) {
                 Log.d(TAG, "AdColonyReward name: " + a.getRewardName());
@@ -321,12 +323,12 @@ public void onReward(AdColonyReward a) {
         }
 
         @Override
-        public void onRequestFilled(com.adcolony.sdk.AdColonyInterstitial adColonyInterstitial) {
+        public void onRequestFilled(@NonNull com.adcolony.sdk.AdColonyInterstitial adColonyInterstitial) {
             sZoneIdToAdMap.put(adColonyInterstitial.getZoneID(), adColonyInterstitial);
         }
 
         @Override
-        public void onRequestNotFilled(AdColonyZone zone) {
+        public void onRequestNotFilled(@NonNull AdColonyZone zone) {
             Log.d(TAG, "AdColony rewarded ad has no fill.");
             MoPubRewardedVideoManager.onRewardedVideoLoadFailure(
                     AdColonyRewardedVideo.class,
@@ -335,7 +337,7 @@ public void onRequestNotFilled(AdColonyZone zone) {
         }
 
         @Override
-        public void onClosed(com.adcolony.sdk.AdColonyInterstitial ad) {
+        public void onClosed(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
             Log.d(TAG, "AdColony rewarded ad has been dismissed.");
             MoPubRewardedVideoManager.onRewardedVideoClosed(
                     AdColonyRewardedVideo.class,
@@ -343,7 +345,7 @@ public void onClosed(com.adcolony.sdk.AdColonyInterstitial ad) {
         }
 
         @Override
-        public void onOpened(com.adcolony.sdk.AdColonyInterstitial ad) {
+        public void onOpened(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
             Log.d(TAG, "AdColony rewarded ad shown: " + ad.getZoneID());
             MoPubRewardedVideoManager.onRewardedVideoStarted(
                     AdColonyRewardedVideo.class,
@@ -351,13 +353,13 @@ public void onOpened(com.adcolony.sdk.AdColonyInterstitial ad) {
         }
 
         @Override
-        public void onExpiring(com.adcolony.sdk.AdColonyInterstitial ad) {
+        public void onExpiring(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
             Log.d(TAG, "AdColony rewarded ad is expiring; requesting new ad");
             AdColony.requestInterstitial(ad.getZoneID(), ad.getListener(), mAdOptions);
         }
 
         @Override
-        public void onClicked(com.adcolony.sdk.AdColonyInterstitial ad) {
+        public void onClicked(@NonNull com.adcolony.sdk.AdColonyInterstitial ad) {
             MoPubRewardedVideoManager.onRewardedVideoClicked(
                     AdColonyRewardedVideo.class,
                     ad.getZoneID());
diff --git a/extras/src/com/mopub/nativeads/FacebookNative.java b/extras/src/com/mopub/nativeads/FacebookNative.java
index c15bc2eb..9c87ec96 100644
--- a/extras/src/com/mopub/nativeads/FacebookNative.java
+++ b/extras/src/com/mopub/nativeads/FacebookNative.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.view.View;
+import android.view.ViewGroup;
 
 import com.facebook.ads.Ad;
 import com.facebook.ads.AdError;
@@ -127,6 +128,23 @@ private boolean extrasAreValid(final Map<String, String> serverExtras) {
         return (placementId != null && placementId.length() > 0);
     }
 
+    private static void registerChildViewsForInteraction(final View view, final NativeAd nativeAd) {
+        if (nativeAd == null) {
+            return;
+        }
+
+        if (view instanceof ViewGroup && ((ViewGroup) view).getChildCount() > 0) {
+            final ViewGroup vg = (ViewGroup) view;
+            final List<View> clickableViews = new ArrayList<>();
+            for (int i = 0; i < vg.getChildCount(); i++) {
+                clickableViews.add(vg.getChildAt(i));
+            }
+            nativeAd.registerViewForInteraction(view, clickableViews);
+        } else {
+            nativeAd.registerViewForInteraction(view);
+        }
+    }
+
     static class FacebookStaticNativeAd extends StaticNativeAd implements AdListener {
         private static final String SOCIAL_CONTEXT_FOR_AD = "socialContextForAd";
 
@@ -229,7 +247,7 @@ public void onLoggingImpression(final Ad ad) {
         // BaseForwardingNativeAd
         @Override
         public void prepare(final View view) {
-            mNativeAd.registerViewForInteraction(view);
+            registerChildViewsForInteraction(view, mNativeAd);
         }
 
         @Override
@@ -413,7 +431,7 @@ public void onLoggingImpression(final Ad ad) {
         // BaseForwardingNativeAd
         @Override
         public void prepare(final View view) {
-            mNativeAd.registerViewForInteraction(view);
+            registerChildViewsForInteraction(view, mNativeAd);
         }
 
         @Override
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 8b60e124..4ea3fafa 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-bin.zip
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 2d875f3e..3b683af2 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.mopub.simpleadsdemo"
-      android:versionCode="54"
-      android:versionName="4.16.1">
+      android:versionCode="55"
+      android:versionName="4.17.0">
     <uses-sdk android:minSdkVersion="16"
               android:targetSdkVersion="24"/>
 
@@ -10,7 +10,7 @@
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
-    <!-- For MRAID 2 -->
+    <!--WRITE_EXTERNAL_STORAGE is optional and only required for MRAID 2.0 storePicture ads.-->
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application android:icon="@drawable/icon" android:label="@string/app_name"
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index ab212831..60c67400 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -10,7 +10,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '4.16.1'
+project.version = '4.17.0'
 
 android {
     compileSdkVersion 25
@@ -18,7 +18,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 54
+        versionCode 55
         versionName version
         minSdkVersion 16
         targetSdkVersion 25
diff --git a/mopub-sample/res/layout/interstitial_detail_fragment.xml b/mopub-sample/res/layout/interstitial_detail_fragment.xml
index 37aebae5..6f060ff6 100644
--- a/mopub-sample/res/layout/interstitial_detail_fragment.xml
+++ b/mopub-sample/res/layout/interstitial_detail_fragment.xml
@@ -37,6 +37,16 @@
         android:imeOptions="actionDone"
         android:singleLine="true" />
 
+    <EditText
+        android:id="@+id/custom_data_field"
+        android:visibility="gone"
+        android:hint="@string/custom_data"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:inputType="text|textFilter|textShortMessage"
+        android:imeOptions="actionDone"
+        android:singleLine="true" />
+
     <LinearLayout
         android:orientation="horizontal"
         android:layout_width="match_parent"
@@ -50,7 +60,7 @@
             android:layout_weight="1" />
 
         <Button
-            android:id="@+id/interstitial_show_button"
+            android:id="@+id/show_button"
             android:text="@string/show_ad"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
diff --git a/mopub-sample/res/values/strings.xml b/mopub-sample/res/values/strings.xml
index 661d725a..98143ede 100644
--- a/mopub-sample/res/values/strings.xml
+++ b/mopub-sample/res/values/strings.xml
@@ -2,6 +2,7 @@
 <resources>
     <string name="app_name">MoPub Sample App</string>
     <string name="keywords">Keywords (optional)</string>
+    <string name="custom_data">Custom Data (optional)</string>
     <string name="load_ad">Load Ad</string>
     <string name="refresh_ad">Refresh Ad</string>
     <string name="switch_layout">Switch Layout</string>
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
index ca780f7e..8d870afd 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
@@ -1,31 +1,61 @@
 package com.mopub.simpleadsdemo;
 
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.view.View;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.TextView;
 
+/**
+ * ViewHolder data object that parses and stores named child Views for sample app DetailFragments,
+ * e.g. {@link InterstitialDetailFragment}.
+ */
 class DetailFragmentViewHolder {
-    final TextView mDescriptionView;
-    final Button mLoadButton;
-    final TextView mAdUnitIdView;
-    final EditText mKeywordsField;
+    @NonNull final TextView mDescriptionView;
+    @NonNull final Button mLoadButton;
+    @Nullable final Button mShowButton;
+    @NonNull final TextView mAdUnitIdView;
+    @NonNull final EditText mKeywordsField;
+    @Nullable final EditText mCustomDataField;
 
-    DetailFragmentViewHolder(final TextView descriptionView, final TextView adUnitIdView,
-            final EditText keywordsField, final Button loadButton) {
+    /**
+     * Internal constructor. Use {@link #fromView(View)} to create instances of this class.
+     *
+     * @param descriptionView Displays ad full name, e.g. "MoPub Banner Sample"
+     * @param adUnitIdView Displays adUnitId
+     * @param loadButton Loads an ad. For non-cached ad formats, this will also display the ad
+     * @param showButton Displays an ad. (optional, only defined for interstitial and rewarded ads)
+     * @param keywordsField Keyword entry field. This is eventually passed in the 'q' query
+     *                      parameter in the ad request
+     * @param customDataField Custom data entry field. Used to include arbitrary data to rewarded
+     *                        completion URLs. View visibility defaults to {@link View#GONE}.
+     *                        (optional, only defined for rewarded ads)
+     */
+    private DetailFragmentViewHolder(
+            @NonNull final TextView descriptionView,
+            @NonNull final TextView adUnitIdView,
+            @NonNull final Button loadButton,
+            @Nullable final Button showButton,
+            @NonNull final EditText keywordsField,
+            @Nullable final EditText customDataField) {
         mDescriptionView = descriptionView;
         mAdUnitIdView = adUnitIdView;
-        mKeywordsField = keywordsField;
         mLoadButton = loadButton;
+        mShowButton = showButton;
+        mKeywordsField = keywordsField;
+        mCustomDataField = customDataField;
     }
 
-    static DetailFragmentViewHolder fromView(final View view) {
+    static DetailFragmentViewHolder fromView(@NonNull final View view) {
         final TextView descriptionView = (TextView) view.findViewById(R.id.description);
         final TextView adUnitIdView = (TextView) view.findViewById(R.id.ad_unit_id);
-        final EditText keywordsField = (EditText) view.findViewById(R.id.keywords_field);
         final Button loadButton = (Button) view.findViewById(R.id.load_button);
+        final Button showButton = (Button) view.findViewById(R.id.show_button);
+        final EditText keywordsField = (EditText) view.findViewById(R.id.keywords_field);
+        final EditText customDataField = (EditText) view.findViewById(R.id.custom_data_field);
 
-        return new DetailFragmentViewHolder(descriptionView, adUnitIdView,
-                keywordsField, loadButton);
+        return new DetailFragmentViewHolder(descriptionView, adUnitIdView, loadButton, showButton,
+                keywordsField, customDataField);
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
index 8c2fb463..f27ab6bb 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
@@ -43,7 +43,7 @@ public void onClick(View view) {
                 mMoPubInterstitial.load();
             }
         });
-        mShowButton = (Button) view.findViewById(R.id.interstitial_show_button);
+        mShowButton = views.mShowButton;
         mShowButton.setEnabled(false);
         mShowButton.setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
index fd15cba6..09dd3818 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
@@ -77,7 +77,7 @@ public void onClick(View view) {
                 }
             }
         });
-        mShowButton = (Button) view.findViewById(R.id.interstitial_show_button);
+        mShowButton = views.mShowButton;
         mShowButton.setEnabled(false);
         mShowButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -85,9 +85,17 @@ public void onClick(View view) {
                 if (mAdUnitId == null) {
                     return;
                 }
-                MoPubRewardedVideos.showRewardedVideo(mAdUnitId);
+
+                final String customData = (views.mCustomDataField != null)
+                        ? views.mCustomDataField.getText().toString()
+                        : null;
+
+                MoPubRewardedVideos.showRewardedVideo(mAdUnitId, customData);
             }
         });
+        if (views.mCustomDataField != null) {
+            views.mCustomDataField.setVisibility(View.VISIBLE);
+        }
 
         return view;
     }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
index 9b9d5a6f..be2193a9 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
@@ -17,11 +17,13 @@
     public static final String AD_WIDTH = "com_mopub_ad_width";
     public static final String AD_HEIGHT = "com_mopub_ad_height";
 
+    // Native fields
+    public static final String IMPRESSION_MIN_VISIBLE_PERCENT = "Impression-Min-Visible-Percent";
+    public static final String IMPRESSION_VISIBLE_MS = "Impression-Visible-Ms";
+
     // Native Video fields
     public static final String PLAY_VISIBLE_PERCENT = "Play-Visible-Percent";
     public static final String PAUSE_VISIBLE_PERCENT = "Pause-Visible-Percent";
-    public static final String IMPRESSION_MIN_VISIBLE_PERCENT = "Impression-Min-Visible-Percent";
-    public static final String IMPRESSION_VISIBLE_MS = "Impression-Visible-Ms";
     public static final String MAX_BUFFER_MS = "Max-Buffer-Ms";
     public static final String EVENT_DETAILS = "Event-Details";
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index 17034713..dee2664f 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -13,7 +13,7 @@
 import static com.mopub.common.ExternalViewabilitySessionManager.ViewabilityVendor;
 
 public class MoPub {
-    public static final String SDK_VERSION = "4.16.1";
+    public static final String SDK_VERSION = "4.17.0";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
index 88e1304a..9c45e515 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
@@ -27,11 +27,13 @@
     ACCEPT_LANGUAGE("Accept-Language"),
     BROWSER_AGENT("X-Browser-Agent"),
 
+    // Native fields
+    IMPRESSION_MIN_VISIBLE_PERCENT("X-Impression-Min-Visible-Percent"),
+    IMPRESSION_VISIBLE_MS("X-Impression-Visible-Ms"),
+
     // Native Video fields
     PLAY_VISIBLE_PERCENT("X-Play-Visible-Percent"),
     PAUSE_VISIBLE_PERCENT("X-Pause-Visible-Percent"),
-    IMPRESSION_MIN_VISIBLE_PERCENT("X-Impression-Min-Visible-Percent"),
-    IMPRESSION_VISIBLE_MS("X-Impression-Visible-Ms"),
     MAX_BUFFER_MS("X-Max-Buffer-Ms"),
 
     // Rewarded Ad fields
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
index f8c4dbbe..45287b98 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
@@ -238,16 +238,24 @@ public Listener getListener() {
             serverExtras.put(DataKeys.SCROLLABLE_KEY, Boolean.toString(isScrollable));
             serverExtras.put(DataKeys.CREATIVE_ORIENTATION_KEY, extractHeader(headers, ResponseHeader.ORIENTATION));
         }
+        if (AdType.STATIC_NATIVE.equals(adTypeString) || AdType.VIDEO_NATIVE.equals(adTypeString)) {
+            final String impressionMinVisiblePercent = extractPercentHeaderString(headers,
+                    ResponseHeader.IMPRESSION_MIN_VISIBLE_PERCENT);
+            final String impressionVisibleMS = extractHeader(headers,
+                    ResponseHeader.IMPRESSION_VISIBLE_MS);
+            if (!TextUtils.isEmpty(impressionMinVisiblePercent)) {
+                serverExtras.put(DataKeys.IMPRESSION_MIN_VISIBLE_PERCENT,
+                        impressionMinVisiblePercent);
+            }
+            if (!TextUtils.isEmpty(impressionVisibleMS)) {
+                serverExtras.put(DataKeys.IMPRESSION_VISIBLE_MS, impressionVisibleMS);
+            }
+        }
         if (AdType.VIDEO_NATIVE.equals(adTypeString)) {
             serverExtras.put(DataKeys.PLAY_VISIBLE_PERCENT,
                     extractPercentHeaderString(headers, ResponseHeader.PLAY_VISIBLE_PERCENT));
             serverExtras.put(DataKeys.PAUSE_VISIBLE_PERCENT,
                     extractPercentHeaderString(headers, ResponseHeader.PAUSE_VISIBLE_PERCENT));
-            serverExtras.put(DataKeys.IMPRESSION_MIN_VISIBLE_PERCENT,
-                    extractPercentHeaderString(headers,
-                            ResponseHeader.IMPRESSION_MIN_VISIBLE_PERCENT));
-            serverExtras.put(DataKeys.IMPRESSION_VISIBLE_MS, extractHeader(headers,
-                    ResponseHeader.IMPRESSION_VISIBLE_MS));
             serverExtras.put(DataKeys.MAX_BUFFER_MS, extractHeader(headers,
                     ResponseHeader.MAX_BUFFER_MS));
 
diff --git a/mopub-sdk/mopub-sdk-native-static/build.gradle b/mopub-sdk/mopub-sdk-native-static/build.gradle
index 2cbd1198..221bf769 100644
--- a/mopub-sdk/mopub-sdk-native-static/build.gradle
+++ b/mopub-sdk/mopub-sdk-native-static/build.gradle
@@ -2,8 +2,8 @@ apply from: '../shared-build.gradle'
 
 dependencies {
     compile project(':mopub-sdk:mopub-sdk-base')
-    compile 'com.android.support:recyclerview-v7:25.3.1'
-    compile 'com.facebook.fresco:fresco:1.3.0'
+    compile 'com.android.support:recyclerview-v7:26.1.0'
+    compile 'com.facebook.fresco:fresco:1.5.0'
 }
 
 project.description = 'MoPub Android SDK - Native Static'
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
index f583c3c1..2a7cb103 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
@@ -45,6 +45,26 @@ protected void loadNativeAd(@NonNull final Context context,
                         new NativeClickHandler(context),
                         customEventNativeListener);
 
+        if (serverExtras.containsKey(DataKeys.IMPRESSION_MIN_VISIBLE_PERCENT)) {
+            try {
+                moPubStaticNativeAd.setImpressionMinPercentageViewed(Integer.parseInt(
+                        serverExtras.get(DataKeys.IMPRESSION_MIN_VISIBLE_PERCENT)));
+            } catch (final NumberFormatException e) {
+                MoPubLog.d("Unable to format min visible percent: " +
+                        serverExtras.get(DataKeys.IMPRESSION_MIN_VISIBLE_PERCENT));
+            }
+        }
+
+        if (serverExtras.containsKey(DataKeys.IMPRESSION_VISIBLE_MS)) {
+            try {
+                moPubStaticNativeAd.setImpressionMinTimeViewed(
+                        Integer.parseInt(serverExtras.get(DataKeys.IMPRESSION_VISIBLE_MS)));
+            } catch (final NumberFormatException e) {
+                MoPubLog.d("Unable to format min time: " +
+                        serverExtras.get(DataKeys.IMPRESSION_VISIBLE_MS));
+            }
+        }
+
         try {
             moPubStaticNativeAd.loadAd();
         } catch (IllegalArgumentException e) {
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
index e306e1fe..d4ed19ef 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
@@ -14,7 +14,8 @@
  * This the base class for implementations of the static native ad format.
  */
 public abstract class StaticNativeAd extends BaseNativeAd implements ImpressionInterface, ClickInterface {
-    private static final int IMPRESSION_MIN_PERCENTAGE_VIEWED = 50;
+    private static final int DEFAULT_IMPRESSION_MIN_TIME_VIEWED_MS = 1000;
+    private static final int DEFAULT_IMPRESSION_MIN_PERCENTAGE_VIEWED = 50;
 
     static final double MIN_STAR_RATING = 0;
     static final double MAX_STAR_RATING = 5;
@@ -33,12 +34,14 @@
     // Impression logistics
     private boolean mImpressionRecorded;
     private int mImpressionMinTimeViewed;
+    private int mImpressionMinPercentageViewed;
 
     // Extras
     @NonNull private final Map<String, Object> mExtras;
 
     public StaticNativeAd() {
-        mImpressionMinTimeViewed = 1000;
+        mImpressionMinTimeViewed = DEFAULT_IMPRESSION_MIN_TIME_VIEWED_MS;
+        mImpressionMinPercentageViewed = DEFAULT_IMPRESSION_MIN_PERCENTAGE_VIEWED;
 
         mExtras = new HashMap<String, Object>();
     }
@@ -200,9 +203,31 @@ final public void addExtra(@NonNull final String key, @Nullable final Object val
         mExtras.put(key, value);
     }
 
+    /**
+     * Sets the minimum time for the ad to be on screen before impression trackers are fired.
+     * This int must be greater than 0.
+     *
+     * @param impressionMinTimeViewed Time in milliseconds (ignored if negative or 0).
+     */
     final public void setImpressionMinTimeViewed(final int impressionMinTimeViewed) {
-        if (impressionMinTimeViewed >= 0) {
+        if (impressionMinTimeViewed > 0) {
             mImpressionMinTimeViewed = impressionMinTimeViewed;
+        } else {
+            MoPubLog.d("Ignoring non-positive impressionMinTimeViewed");
+        }
+    }
+
+    /**
+     * Sets the minimum percent of the ad to be on screen before impression trackers are fired.
+     * This must be a percentage between 0 and 100, inclusive.
+     *
+     * @param impressionMinPercentageViewed Percent of ad (must be between 0 and 100 inclusive).
+     */
+    final public void setImpressionMinPercentageViewed(final int impressionMinPercentageViewed) {
+        if (impressionMinPercentageViewed >= 0 && impressionMinPercentageViewed <= 100) {
+            mImpressionMinPercentageViewed = impressionMinPercentageViewed;
+        } else {
+            MoPubLog.d("Ignoring impressionMinTimeViewed that's not a percent [0, 100]");
         }
     }
 
@@ -233,7 +258,7 @@ public void recordImpression(@NonNull final View view) { }
      */
     @Override
     final public int getImpressionMinPercentageViewed() {
-        return IMPRESSION_MIN_PERCENTAGE_VIEWED;
+        return mImpressionMinPercentageViewed;
     }
 
     /**
diff --git a/mopub-sdk/mopub-sdk-native-video/build.gradle b/mopub-sdk/mopub-sdk-native-video/build.gradle
index 6e83c328..ef5fa24a 100644
--- a/mopub-sdk/mopub-sdk-native-video/build.gradle
+++ b/mopub-sdk/mopub-sdk-native-video/build.gradle
@@ -2,7 +2,7 @@ apply from: '../shared-build.gradle'
 
 dependencies {
     compile project(':mopub-sdk:mopub-sdk-native-static')
-    compile 'com.google.android.exoplayer:exoplayer:r2.4.4'
+    compile 'com.google.android.exoplayer:exoplayer:r2.5.3'
 }
 
 project.description = 'MoPub Android SDK - Native Video'
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
index 35985303..c7228b7c 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
@@ -64,6 +64,8 @@
     private static final String CURRENCIES_JSON_REWARDS_MAP_KEY = "rewards";
     private static final String CURRENCIES_JSON_REWARD_NAME_KEY = "name";
     private static final String CURRENCIES_JSON_REWARD_AMOUNT_KEY = "amount";
+    @VisibleForTesting
+    static final int CUSTOM_DATA_MAX_LENGTH_BYTES = 8192;
 
     /**
      * This must an integer because the backend only supports int types for api version.
@@ -392,33 +394,48 @@ public static boolean hasVideo(@NonNull String adUnitId) {
     }
 
     public static void showVideo(@NonNull String adUnitId) {
-        if (sInstance != null) {
-            final CustomEventRewardedAd customEvent = sInstance.mRewardedAdData.getCustomEvent(adUnitId);
-            if (isPlayable(adUnitId, customEvent)) {
-                // If there are rewards available but no reward is selected, fail over.
-                if (!sInstance.mRewardedAdData.getAvailableRewards(adUnitId).isEmpty()
-                        && sInstance.mRewardedAdData.getMoPubReward(adUnitId) == null) {
-                    sInstance.failover(adUnitId, MoPubErrorCode.REWARD_NOT_SELECTED);
-                    return;
-                }
+        showVideo(adUnitId, null);
+    }
 
-                sInstance.mRewardedAdData.updateCustomEventLastShownRewardMapping(
-                        customEvent.getClass(),
-                        sInstance.mRewardedAdData.getMoPubReward(adUnitId));
-                sInstance.mRewardedAdData.setCurrentlyShowingAdUnitId(adUnitId);
-                sInstance.mAdRequestStatus.markPlayed(adUnitId);
-                customEvent.show();
-            } else {
-                if (sInstance.mAdRequestStatus.isLoading(adUnitId)) {
-                    MoPubLog.d("Rewarded ad is not ready to be shown yet.");
-                } else {
-                    MoPubLog.d("No rewarded ad loading or loaded.");
-                }
+    public static void showVideo(@NonNull String adUnitId,
+            @Nullable String customData) {
+        if (sInstance == null) {
+            logErrorNotInitialized();
+            return;
+        }
+
+        if (customData != null && customData.length() > CUSTOM_DATA_MAX_LENGTH_BYTES) {
+            MoPubLog.w(String.format(
+                    Locale.US,
+                    "Provided rewarded ad custom data parameter longer than supported" +
+                            "(%d bytes, %d maximum)",
+                    customData.length(), CUSTOM_DATA_MAX_LENGTH_BYTES));
+        }
 
-                sInstance.failover(adUnitId, MoPubErrorCode.VIDEO_NOT_AVAILABLE);
+        final CustomEventRewardedAd customEvent = sInstance.mRewardedAdData.getCustomEvent(adUnitId);
+        if (isPlayable(adUnitId, customEvent)) {
+            // If there are rewards available but no reward is selected, fail over.
+            if (!sInstance.mRewardedAdData.getAvailableRewards(adUnitId).isEmpty()
+                    && sInstance.mRewardedAdData.getMoPubReward(adUnitId) == null) {
+                sInstance.failover(adUnitId, MoPubErrorCode.REWARD_NOT_SELECTED);
+                return;
             }
+
+            sInstance.mRewardedAdData.updateCustomEventLastShownRewardMapping(
+                    customEvent.getClass(),
+                    sInstance.mRewardedAdData.getMoPubReward(adUnitId));
+            sInstance.mRewardedAdData.updateAdUnitToCustomDataMapping(adUnitId, customData);
+            sInstance.mRewardedAdData.setCurrentlyShowingAdUnitId(adUnitId);
+            sInstance.mAdRequestStatus.markPlayed(adUnitId);
+            customEvent.show();
         } else {
-            logErrorNotInitialized();
+            if (sInstance.mAdRequestStatus.isLoading(adUnitId)) {
+                MoPubLog.d("Rewarded ad is not ready to be shown yet.");
+            } else {
+                MoPubLog.d("No rewarded ad loading or loaded.");
+            }
+
+            sInstance.failover(adUnitId, MoPubErrorCode.VIDEO_NOT_AVAILABLE);
         }
     }
 
@@ -846,7 +863,7 @@ void onRewardedVideoCompleted(@NonNull final Class<T> customEventClass,
         rewardOnServer(currentlyShowingAdUnitId);
     }
 
-    private static void rewardOnServer(final String currentlyShowingAdUnitId) {
+    private static void rewardOnServer(@Nullable final String currentlyShowingAdUnitId) {
         final String serverCompletionUrl = sInstance.mRewardedAdData.getServerCompletionUrl(
                 currentlyShowingAdUnitId);
         if (!TextUtils.isEmpty(serverCompletionUrl)) {
@@ -863,20 +880,33 @@ public void run() {
                             ? Integer.toString(MoPubReward.DEFAULT_REWARD_AMOUNT)
                             : Integer.toString(reward.getAmount());
 
+                    final CustomEventRewardedAd customEvent =
+                            sInstance.mRewardedAdData.getCustomEvent(currentlyShowingAdUnitId);
+                    final String className = (customEvent == null || customEvent.getClass() == null)
+                            ? null
+                            : customEvent.getClass().getName();
+
+                    final String customData = sInstance.mRewardedAdData.getCustomData(
+                            currentlyShowingAdUnitId);
+
                     RewardedVideoCompletionRequestHandler.makeRewardedVideoCompletionRequest(
                             sInstance.mContext,
                             serverCompletionUrl,
                             sInstance.mRewardedAdData.getCustomerId(),
                             rewardName,
-                            rewardAmount);
+                            rewardAmount,
+                            className,
+                            customData);
                 }
             });
         }
     }
 
     private static <T extends CustomEventRewardedAd> void rewardOnClient(
-            @NonNull final Class<T> customEventClass, final String thirdPartyId,
-            @NonNull final MoPubReward moPubReward, final String currentlyShowingAdUnitId) {
+            @NonNull final Class<T> customEventClass,
+            @Nullable final String thirdPartyId,
+            @NonNull final MoPubReward moPubReward,
+            @Nullable final String currentlyShowingAdUnitId) {
         postToInstance(new Runnable() {
             @Override
             public void run() {
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
index 0b1faccb..17a641e8 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
@@ -73,6 +73,13 @@ public static void showRewardedVideo(@NonNull String adUnitId) {
         MoPubRewardedVideoManager.showVideo(adUnitId);
     }
 
+    @ReflectionTarget
+    public static void showRewardedVideo(@NonNull String adUnitId, @Nullable String customData) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.showVideo(adUnitId, customData);
+    }
+
     @ReflectionTarget
     public static Set<MoPubReward> getAvailableRewards(@NonNull String adUnitId) {
         Preconditions.checkNotNull(adUnitId);
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedAdData.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedAdData.java
index 7c51b0bb..c9cec328 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedAdData.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedAdData.java
@@ -32,6 +32,8 @@
     @NonNull
     private final Map<String, String> mAdUnitToServerCompletionUrlMap;
     @NonNull
+    private final Map<String, String> mAdUnitToCustomDataMap;
+    @NonNull
     private final Map<Class<? extends CustomEventRewardedAd>, MoPubReward> mCustomEventToRewardMap;
     @NonNull
     private final Map<TwoPartKey, Set<String>> mCustomEventToMoPubIdMap;
@@ -46,12 +48,13 @@
         mAdUnitToRewardMap = new TreeMap<String, MoPubReward>();
         mAdUnitToAvailableRewardsMap = new TreeMap<String, Set<MoPubReward>>();
         mAdUnitToServerCompletionUrlMap = new TreeMap<String, String>();
+        mAdUnitToCustomDataMap = new TreeMap<String, String>();
         mCustomEventToRewardMap = new HashMap<Class<? extends CustomEventRewardedAd>, MoPubReward>();
         mCustomEventToMoPubIdMap = new HashMap<TwoPartKey, Set<String>>();
     }
 
     @Nullable
-    CustomEventRewardedAd getCustomEvent(@NonNull String moPubId) {
+    CustomEventRewardedAd getCustomEvent(@Nullable String moPubId) {
         return mAdUnitToCustomEventMap.get(moPubId);
     }
 
@@ -60,6 +63,11 @@ MoPubReward getMoPubReward(@Nullable String moPubId) {
         return mAdUnitToRewardMap.get(moPubId);
     }
 
+    @Nullable
+    String getCustomData(@Nullable String moPubId) {
+        return mAdUnitToCustomDataMap.get(moPubId);
+    }
+
     void addAvailableReward(
             @NonNull String moPubId,
             @Nullable String currencyName,
@@ -271,6 +279,13 @@ void setCurrentlyShowingAdUnitId(@Nullable final String currentAdUnitId) {
         mCurrentlyShowingAdUnitId = currentAdUnitId;
     }
 
+    void updateAdUnitToCustomDataMapping(@NonNull final String moPubId,
+            @Nullable String customData) {
+        Preconditions.NoThrow.checkNotNull(moPubId);
+
+        mAdUnitToCustomDataMap.put(moPubId, customData);
+    }
+
     @Nullable
     String getCurrentlyShowingAdUnitId() {
         return mCurrentlyShowingAdUnitId;
@@ -292,6 +307,7 @@ void clear() {
         mAdUnitToRewardMap.clear();
         mAdUnitToAvailableRewardsMap.clear();
         mAdUnitToServerCompletionUrlMap.clear();
+        mAdUnitToCustomDataMap.clear();
         mCustomEventToRewardMap.clear();
         mCustomEventToMoPubIdMap.clear();
         mCurrentlyShowingAdUnitId = null;
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
index 0cb0c34d..a046e41e 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
@@ -40,6 +40,8 @@
     private static final String API_VERSION_KEY = "&v=";
     private static final String REWARD_NAME_KEY = "&rcn=";
     private static final String REWARD_AMOUNT_KEY = "&rca=";
+    private static final String CUSTOM_EVENT_CLASS_NAME_KEY = "&cec=";
+    private static final String CUSTOM_DATA_KEY = "&rcd=";
 
     @NonNull private final String mUrl;
     @NonNull private final Handler mHandler;
@@ -51,15 +53,21 @@
             @NonNull final String url,
             @Nullable final String customerId,
             @NonNull final String rewardName,
-            @NonNull final String rewardAmount) {
-        this(context, url, customerId, rewardName, rewardAmount, new Handler());
+            @NonNull final String rewardAmount,
+            @Nullable final String className,
+            @Nullable final String customData) {
+        this(context, url, customerId, rewardName, rewardAmount, className, customData,
+                new Handler());
     }
 
+    @VisibleForTesting
     RewardedVideoCompletionRequestHandler(@NonNull final Context context,
             @NonNull final String url,
             @Nullable final String customerId,
             @NonNull final String rewardName,
             @NonNull final String rewardAmount,
+            @Nullable final String className,
+            @Nullable final String customData,
             @NonNull final Handler handler) {
         Preconditions.checkNotNull(context);
         Preconditions.checkNotNull(url);
@@ -67,7 +75,7 @@
         Preconditions.checkNotNull(rewardAmount);
         Preconditions.checkNotNull(handler);
 
-        mUrl = appendParameters(url, customerId, rewardName, rewardAmount);
+        mUrl = appendParameters(url, customerId, rewardName, rewardAmount, className, customData);
         mRetryCount = 0;
         mHandler = handler;
         mRequestQueue = Networking.getRequestQueue(context);
@@ -122,13 +130,17 @@ public static void makeRewardedVideoCompletionRequest(@Nullable final Context co
             @Nullable final String url,
             @Nullable final String customerId,
             @NonNull final String rewardName,
-            @NonNull final String rewardAmount) {
-        if (context == null || TextUtils.isEmpty(url) || rewardName == null || rewardAmount == null) {
+            @NonNull final String rewardAmount,
+            @Nullable final String rewardedAd,
+            @Nullable final String customData) {
+        if (context == null || TextUtils.isEmpty(url) || rewardName == null ||
+                rewardAmount == null) {
             return;
         }
 
         new RewardedVideoCompletionRequestHandler(context, url, customerId, rewardName,
-                rewardAmount).makeRewardedVideoCompletionRequest();
+                rewardAmount, rewardedAd, customData)
+                .makeRewardedVideoCompletionRequest();
     }
 
     static int getTimeout(int retryCount) {
@@ -142,17 +154,29 @@ static int getTimeout(int retryCount) {
     private static String appendParameters(@NonNull final String url,
             @Nullable final String customerId,
             @NonNull final String rewardName,
-            @NonNull final String rewardAmount) {
+            @NonNull final String rewardAmount,
+            @Nullable final String className,
+            @Nullable final String customData) {
         Preconditions.checkNotNull(url);
         Preconditions.checkNotNull(rewardName);
         Preconditions.checkNotNull(rewardAmount);
 
-        return url +
-                CUSTOMER_ID_KEY + (customerId == null ? "" : Uri.encode(customerId)) +
-                REWARD_NAME_KEY + Uri.encode(rewardName) +
-                REWARD_AMOUNT_KEY + Uri.encode(rewardAmount) +
-                SDK_VERSION_KEY + Uri.encode(MoPub.SDK_VERSION) +
-                API_VERSION_KEY + MoPubRewardedVideoManager.API_VERSION;
+        final StringBuilder stringBuilder = new StringBuilder(url);
+        stringBuilder
+                .append(CUSTOMER_ID_KEY).append((customerId == null) ? "" : Uri.encode(customerId))
+                .append(REWARD_NAME_KEY).append(Uri.encode(rewardName))
+                .append(REWARD_AMOUNT_KEY).append(Uri.encode(rewardAmount))
+                .append(SDK_VERSION_KEY).append(Uri.encode(MoPub.SDK_VERSION))
+                // Does not need to be encoded as it's an int
+                .append(API_VERSION_KEY).append(MoPubRewardedVideoManager.API_VERSION)
+                .append(CUSTOM_EVENT_CLASS_NAME_KEY)
+                .append((className == null) ? "" : Uri.encode(className));
+
+        if (!TextUtils.isEmpty(customData)) {
+            stringBuilder.append(CUSTOM_DATA_KEY).append(Uri.encode(customData));
+        }
+
+        return stringBuilder.toString();
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 70e26f9c..61e1780b 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -10,19 +10,19 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '4.16.1'
+project.version = '4.17.0'
 
 android {
-    compileSdkVersion 25
-    buildToolsVersion '25.0.2'
+    compileSdkVersion 26
+    buildToolsVersion '26.0.1'
     lintOptions { abortOnError false }
     useLibrary 'org.apache.http.legacy'
 
     defaultConfig {
-        versionCode 54
+        versionCode 55
         versionName version
         minSdkVersion 16
-        targetSdkVersion 25
+        targetSdkVersion 26
         consumerProguardFiles project(':mopub-sdk').file('proguard.txt')
     }
 
diff --git a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
index ff8a3bce..1c5c87c1 100644
--- a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
+++ b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.mopub.sdk.android:mopub
-fabric-version=4.16.1+kit
+fabric-version=4.17.0+kit
 fabric-build-type=source
