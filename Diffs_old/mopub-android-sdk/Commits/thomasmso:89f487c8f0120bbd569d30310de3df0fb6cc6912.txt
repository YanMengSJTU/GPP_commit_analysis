diff --git a/extras/src/com/mopub/mobileads/AppLovinBanner.java b/extras/src/com/mopub/mobileads/AppLovinBanner.java
index 548aa564..ca2d971b 100644
--- a/extras/src/com/mopub/mobileads/AppLovinBanner.java
+++ b/extras/src/com/mopub/mobileads/AppLovinBanner.java
@@ -13,6 +13,7 @@
 import com.applovin.sdk.AppLovinAdSize;
 import com.applovin.sdk.AppLovinErrorCodes;
 import com.applovin.sdk.AppLovinSdk;
+import com.mopub.common.logging.MoPubLog;
 
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationHandler;
@@ -32,8 +33,6 @@
 public class AppLovinBanner
         extends CustomEventBanner
 {
-    private static final boolean LOGGING_ENABLED = true;
-
     private static final int BANNER_STANDARD_HEIGHT         = 50;
     private static final int BANNER_HEIGHT_OFFSET_TOLERANCE = 10;
 
@@ -80,8 +79,6 @@ public void failedToReceiveAd(final int errorCode)
                 {
                     log( ERROR, "Failed to load banner ad with code: " + errorCode );
                     customEventBannerListener.onBannerFailed( toMoPubErrorCode( errorCode ) );
-
-                    // TODO: Add support for backfilling on regular ad request if invalid zone entered
                 }
             } );
             adView.setAdDisplayListener( new AppLovinAdDisplayListener()
@@ -224,9 +221,13 @@ private static void log(final int priority, final String message)
 
     private static void log(final int priority, final String message, final Throwable th)
     {
-        if ( LOGGING_ENABLED )
+        if ( priority == DEBUG )
+        {
+            MoPubLog.d( "AppLovinBanner: " + message );
+        }
+        else
         {
-            Log.println( priority, "AppLovinBanner", message + ( ( th == null ) ? "" : Log.getStackTraceString( th ) ) );
+            MoPubLog.e( "AppLovinBanner: " + message + ( ( th == null ) ? "" : Log.getStackTraceString( th ) ) );
         }
     }
 
@@ -238,7 +239,7 @@ private static MoPubErrorCode toMoPubErrorCode(final int applovinErrorCode)
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.UNSPECIFIED_ERROR )
         {
-            return MoPubErrorCode.NETWORK_INVALID_STATE;
+            return MoPubErrorCode.UNSPECIFIED;
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.NO_NETWORK )
         {
diff --git a/extras/src/com/mopub/mobileads/AppLovinInterstitial.java b/extras/src/com/mopub/mobileads/AppLovinInterstitial.java
index f0f25535..d6f221cd 100644
--- a/extras/src/com/mopub/mobileads/AppLovinInterstitial.java
+++ b/extras/src/com/mopub/mobileads/AppLovinInterstitial.java
@@ -3,7 +3,6 @@
 import android.app.Activity;
 import android.content.Context;
 import android.text.TextUtils;
-import android.util.Log;
 
 import com.applovin.adview.AppLovinInterstitialAd;
 import com.applovin.adview.AppLovinInterstitialAdDialog;
@@ -15,6 +14,7 @@
 import com.applovin.sdk.AppLovinAdVideoPlaybackListener;
 import com.applovin.sdk.AppLovinErrorCodes;
 import com.applovin.sdk.AppLovinSdk;
+import com.mopub.common.logging.MoPubLog;
 
 import java.lang.reflect.Method;
 import java.util.HashMap;
@@ -35,8 +35,7 @@
         extends CustomEventInterstitial
         implements AppLovinAdLoadListener, AppLovinAdDisplayListener, AppLovinAdClickListener, AppLovinAdVideoPlaybackListener
 {
-    private static final boolean LOGGING_ENABLED = true;
-    private static final String  DEFAULT_ZONE    = "";
+    private static final String DEFAULT_ZONE = "";
 
     private CustomEventInterstitialListener listener;
     private Context                         context;
@@ -154,8 +153,6 @@ public void failedToReceiveAd(final int errorCode)
     {
         log( ERROR, "Interstitial failed to load with error: " + errorCode );
         listener.onInterstitialFailed( toMoPubErrorCode( errorCode ) );
-
-        // TODO: Add support for backfilling on regular ad request if invalid zone entered
     }
 
     //
@@ -261,9 +258,13 @@ private AppLovinInterstitialAdDialog createInterstitial(final Context context, f
 
     private static void log(final int priority, final String message)
     {
-        if ( LOGGING_ENABLED )
+        if ( priority == DEBUG )
         {
-            Log.println( priority, "AppLovinInterstitial", message );
+            MoPubLog.d( "AppLovinInterstitial: " + message );
+        }
+        else
+        {
+            MoPubLog.e( "AppLovinInterstitial: " + message );
         }
     }
 
@@ -275,7 +276,7 @@ private static MoPubErrorCode toMoPubErrorCode(final int applovinErrorCode)
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.UNSPECIFIED_ERROR )
         {
-            return MoPubErrorCode.NETWORK_INVALID_STATE;
+            return MoPubErrorCode.UNSPECIFIED;
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.NO_NETWORK )
         {
diff --git a/extras/src/com/mopub/mobileads/AppLovinNative.java b/extras/src/com/mopub/mobileads/AppLovinNative.java
index 13294a15..47d6d8cb 100644
--- a/extras/src/com/mopub/mobileads/AppLovinNative.java
+++ b/extras/src/com/mopub/mobileads/AppLovinNative.java
@@ -4,7 +4,6 @@
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import android.view.View;
 
 import com.applovin.nativeAds.AppLovinNativeAd;
@@ -12,6 +11,7 @@
 import com.applovin.sdk.AppLovinErrorCodes;
 import com.applovin.sdk.AppLovinPostbackListener;
 import com.applovin.sdk.AppLovinSdk;
+import com.mopub.common.logging.MoPubLog;
 import com.mopub.nativeads.CustomEventNative;
 import com.mopub.nativeads.NativeErrorCode;
 import com.mopub.nativeads.NativeImageHelper;
@@ -34,8 +34,7 @@
         extends CustomEventNative
         implements AppLovinNativeAdLoadListener
 {
-    private static final boolean LOGGING_ENABLED = true;
-    private static final Handler uiHandler       = new Handler( Looper.getMainLooper() );
+    private static final Handler uiHandler = new Handler( Looper.getMainLooper() );
 
     private CustomEventNativeListener nativeListener;
     private Context                   context;
@@ -193,9 +192,13 @@ public void destroy()
 
     private static void log(final int priority, final String message)
     {
-        if ( LOGGING_ENABLED )
+        if ( priority == DEBUG )
         {
-            Log.println( priority, "AppLovinNative", message );
+            MoPubLog.d( "AppLovinNative: " + message );
+        }
+        else
+        {
+            MoPubLog.e( "AppLovinNative: " + message );
         }
     }
 
@@ -207,7 +210,7 @@ private static NativeErrorCode toMoPubErrorCode(final int applovinErrorCode)
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.UNSPECIFIED_ERROR )
         {
-            return NativeErrorCode.NETWORK_INVALID_STATE;
+            return NativeErrorCode.UNSPECIFIED;
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.NO_NETWORK )
         {
diff --git a/extras/src/com/mopub/mobileads/AppLovinRewardedVideo.java b/extras/src/com/mopub/mobileads/AppLovinRewardedVideo.java
index c579be9e..f995b9eb 100644
--- a/extras/src/com/mopub/mobileads/AppLovinRewardedVideo.java
+++ b/extras/src/com/mopub/mobileads/AppLovinRewardedVideo.java
@@ -3,7 +3,6 @@
 import android.app.Activity;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.util.Log;
 
 import com.applovin.adview.AppLovinIncentivizedInterstitial;
 import com.applovin.sdk.AppLovinAd;
@@ -16,6 +15,7 @@
 import com.applovin.sdk.AppLovinSdk;
 import com.mopub.common.LifecycleListener;
 import com.mopub.common.MoPubReward;
+import com.mopub.common.logging.MoPubLog;
 
 import java.lang.reflect.Method;
 import java.util.HashMap;
@@ -34,8 +34,7 @@
         extends CustomEventRewardedVideo
         implements AppLovinAdLoadListener, AppLovinAdDisplayListener, AppLovinAdClickListener, AppLovinAdVideoPlaybackListener, AppLovinAdRewardListener
 {
-    private static final boolean LOGGING_ENABLED = true;
-    private static final String  DEFAULT_ZONE    = "";
+    private static final String DEFAULT_ZONE = "";
 
     // A map of Zone -> `AppLovinIncentivizedInterstitial` to be shared by instances of the custom event.
     // This prevents skipping of ads as this adapter will be re-created and preloaded (along with underlying `AppLovinIncentivizedInterstitial`)
@@ -43,6 +42,7 @@
     private static final Map<String, AppLovinIncentivizedInterstitial> GLOBAL_INCENTIVIZED_INTERSTITIAL_ADS = new HashMap<String, AppLovinIncentivizedInterstitial>();
 
     private static boolean initialized;
+    private String zoneId;
 
     private AppLovinIncentivizedInterstitial incentivizedInterstitial;
     private Activity                         parentActivity;
@@ -81,7 +81,6 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity, @NonNull
         parentActivity = activity;
 
         // Zones support is available on AppLovin SDK 7.5.0 and higher
-        final String zoneId;
         if ( AppLovinSdk.VERSION_CODE >= 750 && serverExtras != null && serverExtras.containsKey( "zone_id" ) )
         {
             zoneId = serverExtras.get( "zone_id" );
@@ -129,7 +128,7 @@ protected void showVideo()
         else
         {
             log( ERROR, "Failed to show an AppLovin rewarded video before one was loaded" );
-            MoPubRewardedVideoManager.onRewardedVideoPlaybackError( this.getClass(), "", MoPubErrorCode.VIDEO_PLAYBACK_ERROR );
+            MoPubRewardedVideoManager.onRewardedVideoPlaybackError( this.getClass(), getAdNetworkId(), MoPubErrorCode.VIDEO_PLAYBACK_ERROR );
         }
     }
 
@@ -145,7 +144,10 @@ protected boolean hasVideoAvailable()
 
     @Override
     @NonNull
-    protected String getAdNetworkId() { return ""; }
+    protected String getAdNetworkId()
+    {
+        return zoneId;
+    }
 
     @Override
     protected void onInvalidate() {}
@@ -158,16 +160,14 @@ protected void onInvalidate() {}
     public void adReceived(final AppLovinAd ad)
     {
         log( DEBUG, "Rewarded video did load ad: " + ad.getAdIdNumber() );
-        MoPubRewardedVideoManager.onRewardedVideoLoadSuccess( this.getClass(), "" );
+        MoPubRewardedVideoManager.onRewardedVideoLoadSuccess( this.getClass(), getAdNetworkId() );
     }
 
     @Override
     public void failedToReceiveAd(final int errorCode)
     {
         log( DEBUG, "Rewarded video failed to load with error: " + errorCode );
-        MoPubRewardedVideoManager.onRewardedVideoLoadFailure( this.getClass(), "", toMoPubErrorCode( errorCode ) );
-
-        // TODO: Add support for backfilling on regular ad request if invalid zone entered
+        MoPubRewardedVideoManager.onRewardedVideoLoadFailure( this.getClass(), getAdNetworkId(), toMoPubErrorCode( errorCode ) );
     }
 
     //
@@ -178,7 +178,7 @@ public void failedToReceiveAd(final int errorCode)
     public void adDisplayed(final AppLovinAd ad)
     {
         log( DEBUG, "Rewarded video displayed" );
-        MoPubRewardedVideoManager.onRewardedVideoStarted( this.getClass(), "" );
+        MoPubRewardedVideoManager.onRewardedVideoStarted( this.getClass(), getAdNetworkId() );
     }
 
     @Override
@@ -189,10 +189,10 @@ public void adHidden(final AppLovinAd ad)
         if ( fullyWatched && reward != null )
         {
             log( DEBUG, "Rewarded" + reward.getAmount() + " " + reward.getLabel() );
-            MoPubRewardedVideoManager.onRewardedVideoCompleted( this.getClass(), "", reward );
+            MoPubRewardedVideoManager.onRewardedVideoCompleted( this.getClass(), getAdNetworkId(), reward );
         }
 
-        MoPubRewardedVideoManager.onRewardedVideoClosed( this.getClass(), "" );
+        MoPubRewardedVideoManager.onRewardedVideoClosed( this.getClass(), getAdNetworkId() );
     }
 
     //
@@ -203,7 +203,7 @@ public void adHidden(final AppLovinAd ad)
     public void adClicked(final AppLovinAd ad)
     {
         log( DEBUG, "Rewarded video clicked" );
-        MoPubRewardedVideoManager.onRewardedVideoClicked( this.getClass(), "" );
+        MoPubRewardedVideoManager.onRewardedVideoClicked( this.getClass(), getAdNetworkId() );
     }
 
     //
@@ -250,7 +250,7 @@ public void userRewardRejected(final AppLovinAd appLovinAd, final Map map)
     public void userDeclinedToViewAd(final AppLovinAd appLovinAd)
     {
         log( DEBUG, "User declined to view rewarded video" );
-        MoPubRewardedVideoManager.onRewardedVideoClosed( this.getClass(), "" );
+        MoPubRewardedVideoManager.onRewardedVideoClosed( this.getClass(), getAdNetworkId() );
     }
 
     @Override
@@ -279,7 +279,7 @@ private AppLovinIncentivizedInterstitial createIncentivizedInterstitialForZoneId
         catch ( Throwable th )
         {
             log( ERROR, "Unable to load ad for zone: " + zoneId + "..." );
-            MoPubRewardedVideoManager.onRewardedVideoLoadFailure( getClass(), "", MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR );
+            MoPubRewardedVideoManager.onRewardedVideoLoadFailure( getClass(), getAdNetworkId(), MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR );
         }
 
         return incent;
@@ -291,9 +291,13 @@ private AppLovinIncentivizedInterstitial createIncentivizedInterstitialForZoneId
 
     private static void log(final int priority, final String message)
     {
-        if ( LOGGING_ENABLED )
+        if ( priority == DEBUG )
         {
-            Log.println( priority, "AppLovinRewardedVideo", message );
+            MoPubLog.d( "AppLovinRewardedVideo: " + message );
+        }
+        else
+        {
+            MoPubLog.e( "AppLovinRewardedVideo: " + message );
         }
     }
 
@@ -305,7 +309,7 @@ private static MoPubErrorCode toMoPubErrorCode(final int applovinErrorCode)
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.UNSPECIFIED_ERROR )
         {
-            return MoPubErrorCode.NETWORK_INVALID_STATE;
+            return MoPubErrorCode.UNSPECIFIED;
         }
         else if ( applovinErrorCode == AppLovinErrorCodes.NO_NETWORK )
         {
