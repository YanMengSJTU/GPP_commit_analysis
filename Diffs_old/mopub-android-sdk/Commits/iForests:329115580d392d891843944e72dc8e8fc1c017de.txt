diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8dce1b5f..b1207041 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+## Version 5.9.1 (September 23, 2019)
+- **Bug Fixes**
+  - Now sends ad width in pixels instead of dips when setting a `MoPubAdSize`.
+
 ## Version 5.9.0 (September 16, 2019)
 - **Features**
   - Certified against Android 10.
diff --git a/README.md b/README.md
index e69ef120..bc4c6d06 100644
--- a/README.md
+++ b/README.md
@@ -37,7 +37,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        implementation('com.mopub:mopub-sdk:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk:5.9.1@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        implementation('com.mopub:mopub-sdk-banner:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk-banner:5.9.1@aar') {
             transitive = true
         }
         
         // For interstitials
-        implementation('com.mopub:mopub-sdk-interstitial:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk-interstitial:5.9.1@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        implementation('com.mopub:mopub-sdk-rewardedvideo:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk-rewardedvideo:5.9.1@aar') {
             transitive = true
         }
 
         // For native static (images).
-        implementation('com.mopub:mopub-sdk-native-static:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-static:5.9.1@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        implementation('com.mopub:mopub-sdk-native-video:5.9.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-video:5.9.1@aar') {
             transitive = true
         }
     }
@@ -107,16 +107,8 @@ The MoPub SDK is available via:
 ## New in this Version
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
-- **Features**
-  - Certified against Android 10.
-  - Removed support for `tel`, `sms`, `createCalendarEvent`, and `storePicture` functions for MRAID ads.
-  - Upgraded ExoPlayer to 2.10.3.
-  - Migrated to AndroidX. See [https://developer.android.com/jetpack/androidx/migrate] for more information.
-  - Upgraded `targetSdkVersion` and `compileSdkVersion` to 29.
-
 - **Bug Fixes**
-  - SDK location is now prioritized over publisher-specified location.
-  - Fixed a rare crash when layout params are available but the parent view is null.
+  - Now sends ad width in pixels instead of dips when setting a `MoPubAdSize`.
 
 ## Requirements
 
@@ -145,7 +137,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.9.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.9.1@aar') {
         transitive = true
     }
 }
@@ -154,7 +146,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.9.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.9.1@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
@@ -191,4 +183,4 @@ If your app's target SDK is 23 or higher _**and**_ the user's device is running
 
 ## License
 
-We have launched a new license as of version 3.2.0. To view the full license, visit [http://www.mopub.com/legal/sdk-license-agreement/](http://www.mopub.com/legal/sdk-license-agreement/).
+To view the full license, visit [http://www.mopub.com/legal/sdk-license-agreement/](http://www.mopub.com/legal/sdk-license-agreement/).
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index 101b9ff0..e304e893 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -24,7 +24,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '5.9.0'
+project.version = '5.9.1'
 
 android {
     compileSdkVersion 29
@@ -36,7 +36,7 @@ android {
     }
 
     defaultConfig {
-        versionCode 72
+        versionCode 73
         versionName version
         minSdkVersion 16
         targetSdkVersion 29
diff --git a/mopub-sample/res/main/layout/ad_size_dialog.xml b/mopub-sample/res/main/layout/ad_size_dialog.xml
new file mode 100644
index 00000000..f62c5bdb
--- /dev/null
+++ b/mopub-sample/res/main/layout/ad_size_dialog.xml
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="@dimen/padding_large"
+    android:textDirection="locale">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="16dp"
+        android:gravity="center_vertical"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="85dp"
+            android:layout_height="wrap_content"
+            android:text="@string/ad_size_label"
+            android:textSize="@dimen/small_text_size" />
+
+        <Spinner
+            android:id="@+id/ad_size_spinner"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/margin_large"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="85dp"
+            android:layout_height="wrap_content"
+            android:text="@string/ad_size_width_label"
+            android:textSize="@dimen/small_text_size" />
+
+        <Spinner
+            android:id="@+id/ad_size_width_spinner"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1" />
+
+        <EditText
+            android:id="@+id/ad_size_width_edit_text"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:hint="@string/ad_size_dp_hint"
+            android:inputType="number"
+            android:visibility="gone" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/margin_large"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="85dp"
+            android:layout_height="wrap_content"
+            android:text="@string/ad_size_height_label"
+            android:textSize="@dimen/small_text_size" />
+
+        <Spinner
+            android:id="@+id/ad_size_height_spinner"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1" />
+
+        <EditText
+            android:id="@+id/ad_size_height_edit_text"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:hint="@string/ad_size_dp_hint"
+            android:inputType="number"
+            android:visibility="gone" />
+
+    </LinearLayout>
+
+</LinearLayout>
diff --git a/mopub-sample/res/main/layout/banner_detail_fragment.xml b/mopub-sample/res/main/layout/banner_detail_fragment.xml
index 006bf2ea..f2ef9b60 100644
--- a/mopub-sample/res/main/layout/banner_detail_fragment.xml
+++ b/mopub-sample/res/main/layout/banner_detail_fragment.xml
@@ -51,7 +51,7 @@
             android:id="@+id/user_data_keywords_field"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
-            android:layout_weight="3"
+            android:layout_weight="1"
             android:hint="@string/user_data_keywords"
             android:imeOptions="actionDone"
             android:inputType="text|textFilter|textShortMessage"
@@ -65,18 +65,44 @@
             android:text="@string/load_ad" />
     </LinearLayout>
 
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <TextView
+            android:id="@+id/ad_size_info"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:paddingStart="8dp"
+            android:paddingLeft="8dp"
+            android:paddingTop="8dp"
+            android:paddingEnd="8dp"
+            android:paddingRight="8dp"
+            android:text="@string/ad_size_detail_empty_text" />
+
+        <Button
+            android:id="@+id/ad_size_button"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
+            android:singleLine="true"
+            android:text="@string/ad_size_change_button" />
+
+    </LinearLayout>
+
     <com.mopub.mobileads.MoPubView
         android:id="@+id/banner_mopubview"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_gravity="center_horizontal"
         android:layout_marginTop="10dp"
-        app:moPubAdSize="match_view" >
-    </com.mopub.mobileads.MoPubView>
+        app:moPubAdSize="match_view" />
 
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/callbacks_recycler_view"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_marginTop="10dp" />
+
 </LinearLayout>
diff --git a/mopub-sample/res/main/values/strings.xml b/mopub-sample/res/main/values/strings.xml
index 981938b7..b2e68588 100644
--- a/mopub-sample/res/main/values/strings.xml
+++ b/mopub-sample/res/main/values/strings.xml
@@ -4,6 +4,12 @@
     <string name="app_title">MoPub Sample App</string>
     <string name="keywords">Keywords (optional)</string>
     <string name="user_data_keywords">User Data Keywords (optional)</string>
+    <string name="ad_size_label">MoPub Ad Size</string>
+    <string name="ad_size_detail_empty_text">MoPub Ad Size Details</string>
+    <string name="ad_size_change_button">Change Ad Size</string>
+    <string name="ad_size_width_label">Width</string>
+    <string name="ad_size_height_label">Height</string>
+    <string name="ad_size_dp_hint">In dips</string>
     <string name="custom_data">Custom Data (optional)</string>
     <string name="load_ad">Load Ad</string>
     <string name="refresh_ad">Refresh Ad</string>
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
index 0930708f..bc95d94e 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
@@ -4,22 +4,39 @@
 
 package com.mopub.simpleadsdemo;
 
+import android.app.AlertDialog;
+import android.app.Dialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.os.Bundle;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.Spinner;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.fragment.app.DialogFragment;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.LinearLayout;
-
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubView;
 
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import static android.view.View.GONE;
+import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
 import static com.mopub.mobileads.MoPubView.BannerAdListener;
 import static com.mopub.simpleadsdemo.Utils.hideSoftKeyboard;
 import static com.mopub.simpleadsdemo.Utils.logToast;
@@ -32,11 +49,17 @@
  * display the ad.
  */
 public abstract class AbstractBannerDetailFragment extends Fragment implements BannerAdListener {
-    private MoPubView mMoPubView;
+    @Nullable private MoPubView mMoPubView;
     private MoPubSampleAdUnit mMoPubSampleAdUnit;
+    private DetailFragmentViewHolder mViewHolder;
     @Nullable private CallbacksAdapter mCallbacksAdapter;
 
     public abstract MoPubView.MoPubAdSize getAdSize();
+    protected MoPubAdSizeSettings mMoPubAdSizeSettings;
+
+    private static final List<MoPubView.MoPubAdSize> mAdSizes = Arrays.asList(MoPubView.MoPubAdSize.values());
+    private static final List<String> mAdDimensionStrings =
+            Arrays.asList("MATCH_PARENT", "WRAP_CONTENT", "EXACT");
 
     private enum BannerCallbacks {
         LOADED("onBannerLoaded"),
@@ -59,6 +82,46 @@ public String toString() {
         }
     }
 
+    private static class MoPubAdSizeSettings {
+        MoPubView.MoPubAdSize adSize;
+        int width;
+        int height;
+
+        private static final String DETAIL_STRING = "MoPub Ad Size:\nadSize=%s\nw=%s\nh=%s";
+
+        MoPubAdSizeSettings(MoPubView.MoPubAdSize adSize,
+                                   int width,
+                                   int height) {
+            this.adSize = adSize;
+            this.width = width;
+            this.height = height;
+        }
+
+        @NonNull
+        @Override
+        public String toString() {
+            return String.format(DETAIL_STRING,
+                    getAdSizeString(),
+                    getDimensionString(width),
+                    getDimensionString(height));
+        }
+
+        private String getAdSizeString() {
+            return (adSize != null) ? adSize.toString() : null;
+        }
+
+        private String getDimensionString(int dimension) {
+            switch (dimension) {
+                case MATCH_PARENT:
+                    return "MATCH_PARENT";
+                case WRAP_CONTENT:
+                    return "WRAP_CONTENT";
+                default:
+                    return "" + dimension;
+            }
+        }
+    }
+
     @Override
     public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
@@ -70,27 +133,32 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
         final View view = inflater.inflate(R.layout.banner_detail_fragment, container, false);
-        final DetailFragmentViewHolder views = DetailFragmentViewHolder.fromView(view);
+        mViewHolder = DetailFragmentViewHolder.fromView(view);
 
         mMoPubSampleAdUnit = MoPubSampleAdUnit.fromBundle(getArguments());
         mMoPubView = (MoPubView) view.findViewById(R.id.banner_mopubview);
-        LinearLayout.LayoutParams layoutParams =
+        final LinearLayout.LayoutParams layoutParams =
                 (LinearLayout.LayoutParams) mMoPubView.getLayoutParams();
         mMoPubView.setLayoutParams(layoutParams);
         mMoPubView.setAdSize(getAdSize());
 
-        views.mKeywordsField.setText(getArguments().getString(MoPubListFragment.KEYWORDS_KEY, ""));
-        views.mUserDataKeywordsField.setText(getArguments().getString(MoPubListFragment.USER_DATA_KEYWORDS_KEY, ""));
-        hideSoftKeyboard(views.mKeywordsField);
+        mMoPubAdSizeSettings = new MoPubAdSizeSettings(mMoPubView.getAdSize(),
+                layoutParams.width,
+                layoutParams.height);
+        mViewHolder.mAdSizeInfoView.setText(mMoPubAdSizeSettings.toString());
+
+        mViewHolder.mKeywordsField.setText(getArguments().getString(MoPubListFragment.KEYWORDS_KEY, ""));
+        mViewHolder.mUserDataKeywordsField.setText(getArguments().getString(MoPubListFragment.USER_DATA_KEYWORDS_KEY, ""));
+        hideSoftKeyboard(mViewHolder.mKeywordsField);
 
         final String adUnitId = mMoPubSampleAdUnit.getAdUnitId();
-        views.mDescriptionView.setText(mMoPubSampleAdUnit.getDescription());
-        views.mAdUnitIdView.setText(adUnitId);
-        views.mLoadButton.setOnClickListener(new View.OnClickListener() {
+        mViewHolder.mDescriptionView.setText(mMoPubSampleAdUnit.getDescription());
+        mViewHolder.mAdUnitIdView.setText(adUnitId);
+        mViewHolder.mLoadButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                final String keywords = views.mKeywordsField.getText().toString();
-                final String userDataKeywords = views.mUserDataKeywordsField.getText().toString();
+                final String keywords = mViewHolder.mKeywordsField.getText().toString();
+                final String userDataKeywords = mViewHolder.mUserDataKeywordsField.getText().toString();
                 setupMoPubView(adUnitId, keywords, userDataKeywords);
                 mMoPubView.loadAd();
             }
@@ -105,6 +173,13 @@ public void onClick(View view) {
             callbacksView.setAdapter(mCallbacksAdapter);
         }
 
+        mViewHolder.mChangeAdSizeButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                onAdSizeClicked();
+            }
+        });
+
         mMoPubView.setBannerAdListener(this);
         setupMoPubView(adUnitId, null, null);
 
@@ -183,4 +258,225 @@ public void onBannerCollapsed(MoPubView banner) {
         }
         mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.COLLAPSED.toString());
     }
+
+    private void onAdSizeClicked() {
+        final MoPubAdSizeFragment dialogFragment = MoPubAdSizeFragment.newInstance(mMoPubAdSizeSettings);
+        dialogFragment.setTargetFragment(this, 0);
+        dialogFragment.show(getActivity().getSupportFragmentManager(), "adSize");
+    }
+
+    private void onAdSizeSettingsChanged(final MoPubAdSizeSettings moPubAdSizeSettings) {
+        mMoPubAdSizeSettings = moPubAdSizeSettings;
+
+        float density = getResources().getDisplayMetrics().density;
+
+        ViewGroup.LayoutParams params = mMoPubView.getLayoutParams();
+        params.height = (int) (mMoPubAdSizeSettings.height * density);
+        params.width = (int) (mMoPubAdSizeSettings.width * density);
+        mMoPubView.setLayoutParams(params);
+
+        mMoPubView.setAdSize(mMoPubAdSizeSettings.adSize);
+        mViewHolder.mAdSizeInfoView.setText(mMoPubAdSizeSettings.toString());
+    }
+
+    public static class MoPubAdSizeFragment extends DialogFragment {
+        @Nullable Spinner adSizeSpinner;
+        @Nullable Spinner adWidthSpinner;
+        @Nullable Spinner adHeightSpinner;
+
+        @Nullable EditText adWidthEditText;
+        @Nullable EditText adHeightEditText;
+
+        MoPubAdSizeSettings adSizeSettings;
+
+        static AbstractBannerDetailFragment.MoPubAdSizeFragment newInstance(@NonNull final MoPubAdSizeSettings adSizeSettings) {
+            final AbstractBannerDetailFragment.MoPubAdSizeFragment fragment =
+                    new AbstractBannerDetailFragment.MoPubAdSizeFragment();
+            fragment.adSizeSettings = adSizeSettings;
+            return fragment;
+        }
+
+        @Override
+        @NonNull
+        public Dialog onCreateDialog(final Bundle savedInstanceState) {
+            AlertDialog dialog = new AlertDialog.Builder(getActivity())
+                    .setTitle("Set MoPubAdSize")
+                    .setPositiveButton("Save MoPubAdSize", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(final DialogInterface dialogInterface, final int i) {
+                            ((AbstractBannerDetailFragment) getTargetFragment())
+                                    .onAdSizeSettingsChanged(adSizeSettings);
+                            dismiss();
+                        }
+                    })
+                    .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(final DialogInterface dialogInterface, final int i) {
+                            dismiss();
+                        }
+                    })
+                    .setCancelable(true)
+                    .create();
+
+            // Inflate and add our custom layout to the dialog.
+            final View view = dialog.getLayoutInflater()
+                    .inflate(R.layout.ad_size_dialog, null);
+
+            adSizeSpinner = view.findViewById(R.id.ad_size_spinner);
+            adWidthSpinner = view.findViewById(R.id.ad_size_width_spinner);
+            adHeightSpinner = view.findViewById(R.id.ad_size_height_spinner);
+
+            adWidthEditText = view.findViewById(R.id.ad_size_width_edit_text);
+            adHeightEditText = view.findViewById(R.id.ad_size_height_edit_text);
+
+            final List<String> adSizeStrings = new ArrayList<>(mAdSizes.size());
+
+            for (final MoPubView.MoPubAdSize adSize : mAdSizes) {
+                adSizeStrings.add(adSize.name());
+            }
+
+            final ArrayAdapter dimensionArrayAdapter = new ArrayAdapter<>(getActivity(),
+                    android.R.layout.simple_spinner_dropdown_item,
+                    android.R.id.text1,
+                    mAdDimensionStrings);
+
+            adWidthEditText.addTextChangedListener(new TextWatcher() {
+                @Override
+                public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) { }
+
+                @Override
+                public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) { }
+
+                @Override
+                public void afterTextChanged(Editable editable) {
+                    try {
+                        adSizeSettings.width = Integer.parseInt(editable.toString());
+                    } catch (Exception e) {
+                        // Couldn't parse. Likely from a backspace or illegal character.
+                    }
+                }
+            });
+
+            adHeightEditText.addTextChangedListener(new TextWatcher() {
+                @Override
+                public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) { }
+
+                @Override
+                public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) { }
+
+                @Override
+                public void afterTextChanged(Editable editable) {
+                    try {
+                        adSizeSettings.height = Integer.parseInt(editable.toString());
+                    } catch (Exception e) {
+                        // Couldn't parse. Likely from a backspace or illegal character.
+                    }
+                }
+            });
+
+            final AdapterView.OnItemSelectedListener adSizeSelectionListener =
+                    new AdapterView.OnItemSelectedListener() {
+                        @Override
+                        public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+                            adSizeSettings.adSize = MoPubView.MoPubAdSize.valueOf((String) adapterView.getSelectedItem());
+
+                            updateViews();
+                        }
+
+                        @Override
+                        public void onNothingSelected(AdapterView<?> adapterView) {
+                            // STUB
+                        }
+                    };
+
+            final AdapterView.OnItemSelectedListener adWidthSelectionListener =
+                    new AdapterView.OnItemSelectedListener() {
+                        @Override
+                        public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+                            if(mAdDimensionStrings.get(0).equals(adapterView.getSelectedItem())) { // "MATCH_PARENT"
+                                adSizeSettings.width = MATCH_PARENT;
+                            } else if(mAdDimensionStrings.get(1).equals(adapterView.getSelectedItem())) { // "WRAP_CONTENT"
+                                adSizeSettings.width = WRAP_CONTENT;
+                            } else if (adSizeSettings.width < 0) {
+                                adSizeSettings.width = 0;
+                            }
+
+                            updateViews();
+                        }
+
+                        @Override
+                        public void onNothingSelected(AdapterView<?> adapterView) {
+                            // STUB
+                        }
+                    };
+
+            final AdapterView.OnItemSelectedListener adHeightSelectionListener =
+                    new AdapterView.OnItemSelectedListener() {
+                        @Override
+                        public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+                            if(mAdDimensionStrings.get(0).equals(adapterView.getSelectedItem())) { // "MATCH_PARENT"
+                                adSizeSettings.height = MATCH_PARENT;
+                            } else if(mAdDimensionStrings.get(1).equals(adapterView.getSelectedItem())) { // "WRAP_CONTENT"
+                                adSizeSettings.height = WRAP_CONTENT;
+                            } else if (adSizeSettings.height < 0) {
+                                adSizeSettings.height = 0;
+                            }
+
+                            updateViews();
+                        }
+
+                        @Override
+                        public void onNothingSelected(AdapterView<?> adapterView) {
+                            // STUB
+                        }
+                    };
+
+            adSizeSpinner.setAdapter(new ArrayAdapter<>(getActivity(),
+                    android.R.layout.simple_spinner_dropdown_item, android.R.id.text1, adSizeStrings));
+            adSizeSpinner.setOnItemSelectedListener(adSizeSelectionListener);
+
+            adWidthSpinner.setAdapter(dimensionArrayAdapter);
+            adWidthSpinner.setOnItemSelectedListener(adWidthSelectionListener);
+
+            adHeightSpinner.setAdapter(dimensionArrayAdapter);
+            adHeightSpinner.setOnItemSelectedListener(adHeightSelectionListener);
+
+            updateViews();
+
+            dialog.setView(view);
+            return dialog;
+        }
+
+        private void updateViews() {
+            // MoPubAdSize
+            adSizeSpinner.setSelection(mAdSizes.indexOf(adSizeSettings.adSize));
+
+            // View Width
+            if (adSizeSettings.width == MATCH_PARENT) {
+                adWidthEditText.setVisibility(GONE);
+                adWidthSpinner.setSelection(0); // "MATCH_PARENT"
+            } else if (adSizeSettings.width == WRAP_CONTENT) {
+                adWidthEditText.setVisibility(GONE);
+                adWidthSpinner.setSelection(1); // "WRAP_CONTENT"
+            } else {
+                adWidthEditText.setVisibility(View.VISIBLE);
+                adWidthSpinner.setSelection(2); // "EXACT"
+                adWidthEditText.setText("" + adSizeSettings.width);
+            }
+
+            // View Height
+            if (adSizeSettings.height == MATCH_PARENT) {
+                adHeightEditText.setVisibility(GONE);
+                adHeightSpinner.setSelection(0); // "MATCH_PARENT"
+            } else if (adSizeSettings.height == WRAP_CONTENT) {
+                adHeightEditText.setVisibility(GONE);
+                adHeightSpinner.setSelection(1); // "WRAP_CONTENT"
+            } else {
+                adHeightEditText.setVisibility(View.VISIBLE);
+                adHeightSpinner.setSelection(2); // "EXACT"
+                adHeightEditText.setText("" + adSizeSettings.height);
+            }
+
+        }
+    }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
index c83c00e8..bac0d3d7 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/DetailFragmentViewHolder.java
@@ -19,10 +19,12 @@
     @NonNull final TextView mDescriptionView;
     @NonNull final Button mLoadButton;
     @Nullable final Button mShowButton;
+    @NonNull final Button mChangeAdSizeButton;
     @NonNull final TextView mAdUnitIdView;
     @NonNull final EditText mKeywordsField;
     @NonNull final EditText mUserDataKeywordsField;
     @Nullable final EditText mCustomDataField;
+    @NonNull final TextView mAdSizeInfoView;
 
     /**
      * Internal constructor. Use {@link #fromView(View)} to create instances of this class.
@@ -43,28 +45,41 @@ private DetailFragmentViewHolder(
             @NonNull final TextView adUnitIdView,
             @NonNull final Button loadButton,
             @Nullable final Button showButton,
+            @Nullable final Button changeAdSizeButton,
             @NonNull final EditText keywordsField,
             @NonNull final EditText userDataKeywordsField,
-            @Nullable final EditText customDataField) {
+            @Nullable final EditText customDataField,
+            @NonNull final TextView adSizeInfoView) {
         mDescriptionView = descriptionView;
         mAdUnitIdView = adUnitIdView;
         mLoadButton = loadButton;
         mShowButton = showButton;
+        mChangeAdSizeButton = changeAdSizeButton;
         mKeywordsField = keywordsField;
         mUserDataKeywordsField = userDataKeywordsField;
         mCustomDataField = customDataField;
+        mAdSizeInfoView = adSizeInfoView;
     }
 
     static DetailFragmentViewHolder fromView(@NonNull final View view) {
-        final TextView descriptionView = (TextView) view.findViewById(R.id.description);
-        final TextView adUnitIdView = (TextView) view.findViewById(R.id.ad_unit_id);
-        final Button loadButton = (Button) view.findViewById(R.id.load_button);
-        final Button showButton = (Button) view.findViewById(R.id.show_button);
-        final EditText keywordsField = (EditText) view.findViewById(R.id.keywords_field);
-        final EditText userDataKeywordsField = (EditText) view.findViewById(R.id.user_data_keywords_field);
-        final EditText customDataField = (EditText) view.findViewById(R.id.custom_data_field);
+        final TextView descriptionView = view.findViewById(R.id.description);
+        final TextView adUnitIdView = view.findViewById(R.id.ad_unit_id);
+        final Button loadButton = view.findViewById(R.id.load_button);
+        final Button showButton = view.findViewById(R.id.show_button);
+        final Button changeAdSizeButton = view.findViewById(R.id.ad_size_button);
+        final EditText keywordsField = view.findViewById(R.id.keywords_field);
+        final EditText userDataKeywordsField = view.findViewById(R.id.user_data_keywords_field);
+        final EditText customDataField = view.findViewById(R.id.custom_data_field);
+        final TextView adSizeInfoView = view.findViewById(R.id.ad_size_info);
 
-        return new DetailFragmentViewHolder(descriptionView, adUnitIdView, loadButton, showButton,
-                keywordsField, userDataKeywordsField, customDataField);
+        return new DetailFragmentViewHolder(descriptionView,
+                adUnitIdView,
+                loadButton,
+                showButton,
+                changeAdSizeButton,
+                keywordsField,
+                userDataKeywordsField,
+                customDataField,
+                adSizeInfoView);
     }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index dec13812..6d52c01d 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -29,7 +29,7 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.INIT_STARTED;
 
 public class MoPub {
-    public static final String SDK_VERSION = "5.9.0";
+    public static final String SDK_VERSION = "5.9.1";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index b480ad4b..7f780268 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -412,7 +412,8 @@ protected Point resolveAdSize() {
 
         // MoPubAdSize only applies to height
         if (mMoPubAdSize != MoPubAdSize.MATCH_VIEW) {
-            resolvedAdSize.y = mMoPubAdSize.toInt();
+            final float density = mContext.getResources().getDisplayMetrics().density;
+            resolvedAdSize.y = (int) (mMoPubAdSize.toInt() * density);
         } else if (getParent() != null && layoutParams != null && layoutParams.height < 0) {
             resolvedAdSize.y = ((View) getParent()).getHeight();
         }
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 97bd6be7..a010c678 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -14,14 +14,14 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '5.9.0'
+project.version = '5.9.1'
 
 android {
     compileSdkVersion 29
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 72
+        versionCode 73
         versionName version
         minSdkVersion 16
         targetSdkVersion 29
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
index 560fc99a..0b085aed 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
@@ -7,7 +7,9 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
+import android.content.res.Resources;
 import android.graphics.Point;
+import android.util.DisplayMetrics;
 import android.view.View;
 
 import com.mopub.common.test.support.SdkTestRunner;
@@ -30,9 +32,12 @@
 import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_NOT_FOUND;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.eq;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.reset;
+import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
 @Config(shadows = {ShadowReflection.class})
@@ -41,11 +46,11 @@
     private Map<String,String> paramsMap = new HashMap<String, String>();
     private CustomEventBannerAdapter customEventBannerAdapter;
     private AdViewController adViewController;
-    private Context context;
+    private Activity context;
 
     @Before
     public void setup() {
-        context = Robolectric.buildActivity(Activity.class).create().get();
+        context = spy(Robolectric.buildActivity(Activity.class).create().get());
         subject = new MoPubView(context);
         customEventBannerAdapter = TestCustomEventBannerAdapterFactory.getSingletonMock();
         reset(customEventBannerAdapter);
@@ -257,9 +262,78 @@ public void loadAd_withoutRequestedAdSize_shouldSetRequestedAdSizeToZeroZero() t
     }
 
     @Test
-    public void loadAd_withRequestedAdSize_shouldSetRequestedAdSize() throws Exception {
-        final Point point = new Point(0, MoPubView.MoPubAdSize.HEIGHT_50.toInt());
-        subject.loadAd(MoPubView.MoPubAdSize.HEIGHT_50);
+    public void loadAd_withAdSize50Height_withFhdScreen_withDensityOf1_shouldResolveWithHeight50() {
+        final float density = 1.0f;
+        final MoPubView.MoPubAdSize adSize = MoPubView.MoPubAdSize.HEIGHT_50;
+
+        // Set the expected screen dimensions
+        final Resources spyResources = spy(context.getResources());
+        final DisplayMetrics mockDisplayMetrics = mock(DisplayMetrics.class);
+        mockDisplayMetrics.widthPixels = 1080;
+        mockDisplayMetrics.heightPixels = 1920;
+        mockDisplayMetrics.density = density;
+        when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
+        when(context.getResources()).thenReturn(spyResources);
+
+        final Point point = new Point(0, (int)(adSize.toInt() * density));
+        subject.loadAd(adSize);
+        verify(adViewController).setRequestedAdSize(point);
+    }
+
+    @Test
+    public void loadAd_withAdSize90Height_withFhdScreen_withDensityOf1_shouldResolveWithHeight90() {
+        final float density = 1.0f;
+        final MoPubView.MoPubAdSize adSize = MoPubView.MoPubAdSize.HEIGHT_90;
+
+        // Set the expected screen dimensions
+        final Resources spyResources = spy(context.getResources());
+        final DisplayMetrics mockDisplayMetrics = mock(DisplayMetrics.class);
+        mockDisplayMetrics.widthPixels = 1080;
+        mockDisplayMetrics.heightPixels = 1920;
+        mockDisplayMetrics.density = density;
+        when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
+        when(context.getResources()).thenReturn(spyResources);
+
+        final Point point = new Point(0, (int)(adSize.toInt() * density));
+        subject.loadAd(adSize);
+        verify(adViewController).setRequestedAdSize(point);
+    }
+
+    @Test
+    public void loadAd_withAdSize250Height_withFhdScreen_withDensityOf2_shouldResolveWithHeight500() {
+        final float density = 2.0f;
+        final MoPubView.MoPubAdSize adSize = MoPubView.MoPubAdSize.HEIGHT_250;
+
+        // Set the expected screen dimensions
+        final Resources spyResources = spy(context.getResources());
+        final DisplayMetrics mockDisplayMetrics = mock(DisplayMetrics.class);
+        mockDisplayMetrics.widthPixels = 1080;
+        mockDisplayMetrics.heightPixels = 1920;
+        mockDisplayMetrics.density = density;
+        when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
+        when(context.getResources()).thenReturn(spyResources);
+
+        final Point point = new Point(0, (int)(adSize.toInt() * density));
+        subject.loadAd(adSize);
+        verify(adViewController).setRequestedAdSize(point);
+    }
+
+    @Test
+    public void loadAd_withAdSize280Height_withFhdScreen_withDensityOf3_shouldResolveWithHeight840() {
+        final float density = 3.0f;
+        final MoPubView.MoPubAdSize adSize = MoPubView.MoPubAdSize.HEIGHT_280;
+
+        // Set the expected screen dimensions
+        final Resources spyResources = spy(context.getResources());
+        final DisplayMetrics mockDisplayMetrics = mock(DisplayMetrics.class);
+        mockDisplayMetrics.widthPixels = 1080;
+        mockDisplayMetrics.heightPixels = 1920;
+        mockDisplayMetrics.density = density;
+        when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
+        when(context.getResources()).thenReturn(spyResources);
+
+        final Point point = new Point(0, (int)(adSize.toInt() * density));
+        subject.loadAd(adSize);
         verify(adViewController).setRequestedAdSize(point);
     }
 
