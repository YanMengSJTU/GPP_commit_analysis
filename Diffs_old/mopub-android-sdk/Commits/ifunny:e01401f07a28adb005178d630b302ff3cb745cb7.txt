diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java b/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
index 1d3da091..6f87dd9b 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
@@ -11,7 +11,6 @@
 import com.mopub.common.Preconditions.NoThrow;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
-import com.mopub.mobileads.BuildConfig;
 import com.mopub.nativeads.MoPubNativeAdPositioning.MoPubClientPositioning;
 import com.mopub.nativeads.MoPubNativeAdPositioning.MoPubServerPositioning;
 import com.mopub.nativeads.PositioningSource.PositioningListener;
@@ -19,6 +18,7 @@
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Map;
 import java.util.WeakHashMap;
 
 /**
@@ -257,13 +257,17 @@ public void setAdLoadedListener(@Nullable final MoPubNativeAdLoadedListener list
 	/**
 	 * Start loading ads from the MoPub server.
 	 * <p/>
-	 * We recommend using {@link #loadAds(String, RequestParameters)} instead of this method, in
+	 * We recommend using {@link #loadAds(String, RequestParameters,Map<String,Object>)} instead of this method, in
 	 * order to pass targeting information to the server.
 	 *
 	 * @param adUnitId The ad unit ID to use when loading ads.
 	 */
 	public void loadAds(@NonNull final String adUnitId) {
-		loadAds(adUnitId, /* requestParameters */ null);
+		loadAds(adUnitId, /* requestParameters */ null, null);
+	}
+
+	public void loadAds(@NonNull final String adUnitId,@Nullable Map<String,Object> localExtras) {
+		loadAds(adUnitId, /* requestParameters */ null, localExtras);
 	}
 
 	/**
@@ -281,7 +285,7 @@ public void loadAds(@NonNull final String adUnitId) {
 	 * @param requestParameters Targeting information to pass to the ad server.
 	 */
 	public void loadAds(@NonNull final String adUnitId,
-	                    @Nullable final RequestParameters requestParameters) {
+	                    @Nullable final RequestParameters requestParameters,@Nullable Map<String,Object> localExtras) {
 		if (!NoThrow.checkNotNull(adUnitId, "Cannot load ads with a null ad unit ID")) {
 			return;
 		}
@@ -318,7 +322,7 @@ public void onAdsAvailable() {
 			}
 		});
 
-		mAdSource.loadAds(mContext, adUnitId, requestParameters);
+		mAdSource.loadAds(mContext, adUnitId, requestParameters, localExtras);
 	}
 
 	@VisibleForTesting
@@ -543,17 +547,6 @@ public void clearAdView(NativeAdData adData, View adView) {
 			return;
 		}
 		NativeResponse nativeResponse = adData.getAd();
-		WeakReference<View> mappedViewRef = mViewMap.get(nativeResponse);
-		View mappedView = null;
-		if (mappedViewRef != null) {
-			mappedView = mappedViewRef.get();
-		}
-		clearNativeResponse(adView);
-		if (!adView.equals(mappedView)) {
-			if (BuildConfig.DEBUG) {
-				throw new IllegalStateException();
-			}
-		}
 		clearNativeResponse(adView);
 		mViewMap.remove(nativeResponse);
 	}
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java
index 1edc4e50..ce5881b1 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java
@@ -10,6 +10,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Map;
 
 import static com.mopub.nativeads.MoPubNative.MoPubNativeNetworkListener;
 
@@ -144,6 +145,14 @@ void loadAds(@NonNull final Context context,
         loadAds(requestParameters, new MoPubNative(context, adUnitId, mMoPubNativeNetworkListener));
     }
 
+    void loadAds(@NonNull final Context context,
+                 @NonNull final String adUnitId,
+                 final RequestParameters requestParameters,@Nullable Map<String, Object> localExtras) {
+        MoPubNative mopubNative = new MoPubNative(context, adUnitId, mMoPubNativeNetworkListener);
+        mopubNative.setLocalExtras(localExtras);
+        loadAds(requestParameters, mopubNative);
+    }
+
     @VisibleForTesting
     void loadAds(final RequestParameters requestParameters,
              final MoPubNative moPubNative) {
