diff --git a/extras/src/com/mopub/mobileads/IronSourceInterstitial.java b/extras/src/com/mopub/mobileads/IronSourceInterstitial.java
index 1ffa8dde..15ef1c44 100644
--- a/extras/src/com/mopub/mobileads/IronSourceInterstitial.java
+++ b/extras/src/com/mopub/mobileads/IronSourceInterstitial.java
@@ -1,29 +1,26 @@
 package com.mopub.mobileads;
 
-import java.util.Arrays;
-
 import android.app.Activity;
 import android.content.Context;
 import android.os.Handler;
 import android.os.Looper;
-import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 
 import com.ironsource.mediationsdk.IronSource;
-import com.ironsource.mediationsdk.logger.IronSourceError;
-import com.mopub.common.LifecycleListener;
-import com.mopub.common.MoPub;
 import com.ironsource.mediationsdk.config.ConfigFile;
+import com.ironsource.mediationsdk.logger.IronSourceError;
 import com.ironsource.mediationsdk.sdk.InterstitialListener;
+import com.mopub.common.MoPub;
 
+import java.util.Arrays;
 import java.util.Map;
 
-public class IronSourceInterstitial extends CustomEventInterstitial implements InterstitialListener, LifecycleListener {
+public class IronSourceInterstitial extends CustomEventInterstitial implements InterstitialListener {
 
-    private static final String TAG = IronSourceInterstitial.class.getSimpleName();
+    private static final String TAG = "MoPub";
 
-    private static final String ADAPTER_VERSION = "2.5.2";
+    private static final String ADAPTER_VERSION = "2.5.3";
     private static final String ADAPTER_NAME = "Mopub";
 
     private static CustomEventInterstitialListener mMoPubListener;
@@ -53,23 +50,25 @@ protected void loadInterstitial(Context context, CustomEventInterstitialListener
             if (context instanceof Activity) {
                 //Set the Interstitial Listener
                 String applicationKey = "";
-                if (serverExtras.get("applicationKey") != null) {
-                    applicationKey = serverExtras.get("applicationKey");
-                } else if (serverExtras.get("appKey") != null) {
-                    //try appKey if applicationKey doesn't exists (fallback)
-                    applicationKey = serverExtras.get("appKey");
-                }
+                if (serverExtras != null) {
+                    if (serverExtras.get("applicationKey") != null) {
+                        applicationKey = serverExtras.get("applicationKey");
+                    } else if (serverExtras.get("appKey") != null) {
+                        //try appKey if applicationKey doesn't exists (fallback)
+                        applicationKey = serverExtras.get("appKey");
+                    }
 
-                if (serverExtras.get("isTestEnabled") != null) {
-                    isTestEnabled = Boolean.valueOf(serverExtras.get("isTestEnabled"));
-                }
+                    if (serverExtras.get("isTestEnabled") != null) {
+                        isTestEnabled = Boolean.valueOf(serverExtras.get("isTestEnabled"));
+                    }
 
-                if (serverExtras.get("placementName") != null) {
-                    placementName = serverExtras.get("placementName");
-                }
+                    if (serverExtras.get("placementName") != null) {
+                        placementName = serverExtras.get("placementName");
+                    }
 
-                onLog("server extras: " + Arrays.toString(serverExtras.entrySet().toArray()));
+                    onLog("server extras: " + Arrays.toString(serverExtras.entrySet().toArray()));
 
+                }
                 if (!TextUtils.isEmpty(applicationKey)) {
                     initISIronSourceSDK(((Activity) context), applicationKey);
                     //Load ad unit
@@ -79,25 +78,11 @@ protected void loadInterstitial(Context context, CustomEventInterstitialListener
                 }
             } else {
                 onLog("loadInterstitial must be called on an Activity context");
-                sHandler.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        if (mMoPubListener != null) {
-                            mMoPubListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-                        }
-                    }
-                });
+                sendMoPubInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
             }
         } catch (Exception e) {
             onLog(e.toString());
-            sHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    if (mMoPubListener != null) {
-                        mMoPubListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-                    }
-                }
-            });
+            sendMoPubInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
         }
     }
 
@@ -105,32 +90,40 @@ public void run() {
     protected void showInterstitial() {
         onLog("showInterstitial " + placementName);
         try {
-            if (TextUtils.isEmpty(placementName)) {
-                IronSource.showInterstitial();
+            if (IronSource.isInterstitialReady()) {
+                if (TextUtils.isEmpty(placementName)) {
+                    IronSource.showInterstitial();
+                } else {
+                    IronSource.showInterstitial(placementName);
+                }
             } else {
-                IronSource.showInterstitial(placementName);
+                sendMoPubInterstitialFailed(MoPubErrorCode.NO_FILL);
             }
         } catch (Exception e) {
             onLog(e.toString());
-            sHandler.post(new Runnable() {
-                @Override
-                public void run() {
-                    if (mMoPubListener != null) {
-                        mMoPubListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-                    }
-                }
-            });
+            sendMoPubInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
         }
     }
 
     @Override
     protected void onInvalidate() {
         onLog("onInvalidate");
-        // do nothing
+        mMoPubListener = null;
     }
 
     // Mopub API Finish //
 
+    private void sendMoPubInterstitialFailed(final MoPubErrorCode errorCode) {
+        sHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                if (mMoPubListener != null) {
+                    mMoPubListener.onInterstitialFailed(errorCode);
+                }
+            }
+        });
+    }
+
     private synchronized void initISIronSourceSDK(Activity activity, String appKey) {
         if (initState == INIT_NOT_STARTED) {
             onLog("initInterstitial - IronSourceInterstitial");
@@ -180,14 +173,30 @@ public void run() {
     @Override
     public void onInterstitialAdLoadFailed(IronSourceError ironSourceError) {
         onLog("onInterstitialAdLoadFailed:" + ironSourceError.getErrorMessage());
-        sHandler.post(new Runnable() {
-            @Override
-            public void run() {
-                if (mMoPubListener != null) {
-                    mMoPubListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-                }
-            }
-        });
+        sendMoPubInterstitialFailed(getMoPubErrorMessage(ironSourceError));
+    }
+
+    private MoPubErrorCode getMoPubErrorMessage(IronSourceError ironSourceError) {
+        if (ironSourceError == null) {
+            return MoPubErrorCode.INTERNAL_ERROR;
+        }
+        switch (ironSourceError.getErrorCode()) {
+            case IronSourceError.ERROR_CODE_NO_CONFIGURATION_AVAILABLE:
+            case IronSourceError.ERROR_CODE_KEY_NOT_SET:
+            case IronSourceError.ERROR_CODE_INVALID_KEY_VALUE:
+            case IronSourceError.ERROR_CODE_INIT_FAILED:
+                return MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR;
+            case IronSourceError.ERROR_CODE_USING_CACHED_CONFIGURATION:
+                return MoPubErrorCode.VIDEO_CACHE_ERROR;
+            case IronSourceError.ERROR_CODE_NO_ADS_TO_SHOW:
+                return MoPubErrorCode.NETWORK_NO_FILL;
+            case IronSourceError.ERROR_CODE_GENERIC:
+                return MoPubErrorCode.INTERNAL_ERROR;
+            case IronSourceError.ERROR_NO_INTERNET_CONNECTION:
+                return MoPubErrorCode.NO_CONNECTION;
+            default:
+                return MoPubErrorCode.NETWORK_TIMEOUT;
+        }
     }
 
     @Override
@@ -244,46 +253,4 @@ private static void onLog(String message) {
             Log.d(TAG, message);
         }
     }
-
-    // Mopub life cycle events
-    @Override
-    public void onCreate(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onStart(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onPause(@NonNull Activity activity) {
-        IronSource.onPause(activity);
-    }
-
-    @Override
-    public void onResume(@NonNull Activity activity) {
-        IronSource.onResume(activity);
-    }
-
-    @Override
-    public void onRestart(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onStop(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onDestroy(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onBackPressed(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
 }
\ No newline at end of file
diff --git a/extras/src/com/mopub/mobileads/IronSourceRewardedVideo.java b/extras/src/com/mopub/mobileads/IronSourceRewardedVideo.java
index 593c530e..44824a12 100644
--- a/extras/src/com/mopub/mobileads/IronSourceRewardedVideo.java
+++ b/extras/src/com/mopub/mobileads/IronSourceRewardedVideo.java
@@ -1,7 +1,5 @@
 package com.mopub.mobileads;
 
-import java.util.Arrays;
-
 import android.app.Activity;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -17,6 +15,7 @@
 import com.mopub.common.MoPub;
 import com.mopub.common.MoPubReward;
 
+import java.util.Arrays;
 import java.util.Map;
 
 import static com.mopub.mobileads.MoPubRewardedVideoManager.onRewardedVideoClosed;
@@ -26,14 +25,14 @@
 import static com.mopub.mobileads.MoPubRewardedVideoManager.onRewardedVideoPlaybackError;
 import static com.mopub.mobileads.MoPubRewardedVideoManager.onRewardedVideoStarted;
 
-public class IronSourceRewardedVideo extends CustomEventRewardedAd implements LifecycleListener {
+public class IronSourceRewardedVideo extends CustomEventRewardedVideo {
 
     /**
      * private vars
      */
-    private static final String TAG = IronSourceRewardedVideo.class.getSimpleName();
+    private static final String TAG = "MoPub";
 
-    private static final String ADAPTER_VERSION = "2.5.2";
+    private static final String ADAPTER_VERSION = "2.5.3";
     private static final String ADAPTER_NAME = "Mopub";
     private static final String IRON_SOURCE_AD_NETWORK_ID = "ironsrc_id";
 
@@ -51,6 +50,26 @@
         sIronSrcRvListener = new IronSourceRewardedVideoListener();
     }
 
+    @Nullable
+    @Override
+    protected LifecycleListener getLifecycleListener() {
+        return null;
+    }
+
+    @Override
+    protected boolean hasVideoAvailable() {
+        return IronSource.isRewardedVideoAvailable();
+    }
+
+    @Override
+    protected void showVideo() {
+        if (TextUtils.isEmpty(placementName)) {
+            IronSource.showRewardedVideo();
+        } else {
+            IronSource.showRewardedVideo(placementName);
+        }
+    }
+
     /**
      * Activity Lifecycle Helper Methods
      **/
@@ -62,12 +81,6 @@ public static void onActivityResumed(Activity activity) {
         IronSource.onResume(activity);
     }
 
-    @Nullable
-    @Override
-    protected LifecycleListener getLifecycleListener() {
-        return this;
-    }
-
     @NonNull
     @Override
     protected String getAdNetworkId() {
@@ -135,48 +148,6 @@ protected void loadWithSdkInitialized(@NonNull Activity activity, @NonNull Map<S
         }
     }
 
-    //**************************** Mopub life cycle *******************************
-
-    @Override
-    public void onCreate(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onStart(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onPause(@NonNull Activity activity) {
-        IronSource.onPause(activity);
-    }
-
-    @Override
-    public void onResume(@NonNull Activity activity) {
-        IronSource.onResume(activity);
-    }
-
-    @Override
-    public void onRestart(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onStop(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onDestroy(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
-    @Override
-    public void onBackPressed(@NonNull Activity activity) {
-        // not used for ironSource sdk
-    }
-
     //**************************** IronSource RewardedVideoListener Start *******************************
 
     private class IronSourceRewardedVideoListener implements RewardedVideoListener {
@@ -185,8 +156,6 @@ public void onBackPressed(@NonNull Activity activity) {
         @Override
         public void onRewardedVideoAdOpened() {
             onLog("onRewardedVideoAdOpened");
-            rewardName = MoPubReward.NO_REWARD_LABEL;
-            rewardAmount = 0;
             onRewardedVideoStarted(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID);
         }
 
@@ -211,11 +180,13 @@ public void onRewardedVideoAvailabilityChanged(boolean available) {
             onLog("onVideoAvailabilityChanged");
         }
 
+        //Invoked when the video ad starts playing. (Available for: AdColony, Vungle, AppLovin, UnityAds)
         @Override
         public void onRewardedVideoAdStarted() {
             onLog("onVideoStart");
         }
 
+        //Invoked when the video ad finishes playing. (Available for: AdColony, Flurry, Vungle, AppLovin, UnityAds)
         @Override
         public void onRewardedVideoAdEnded() {
             onLog("onVideoEnd");
@@ -237,43 +208,43 @@ public void onRewardedVideoAdRewarded(Placement placement) {
         //Invoked when an Ad failed to display.
         @Override
         public void onRewardedVideoAdShowFailed(IronSourceError ironSourceError) {
-            setMopubErrorMessage(ironSourceError);
             onLog("onRewardedVideoShowFail");
+
+            onRewardedVideoPlaybackError(IronSourceRewardedVideo.class,
+                    IRON_SOURCE_AD_NETWORK_ID,
+                    getMoPubErrorMessage(ironSourceError));
         }
 
     }
 
+    //**************************** IronSource RewardedVideoListener End *******************************
+
     private void onLog(String message) {
         if (isTestEnabled) {
             Log.d(TAG, message);
         }
     }
 
-    private void setMopubErrorMessage(IronSourceError ironSourceError) {
+    private MoPubErrorCode getMoPubErrorMessage(IronSourceError ironSourceError) {
+        if (ironSourceError == null) {
+            return MoPubErrorCode.INTERNAL_ERROR;
+        }
         switch (ironSourceError.getErrorCode()) {
             case IronSourceError.ERROR_CODE_NO_CONFIGURATION_AVAILABLE:
             case IronSourceError.ERROR_CODE_KEY_NOT_SET:
             case IronSourceError.ERROR_CODE_INVALID_KEY_VALUE:
             case IronSourceError.ERROR_CODE_INIT_FAILED:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-                break;
+                return MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR;
             case IronSourceError.ERROR_CODE_USING_CACHED_CONFIGURATION:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.VIDEO_CACHE_ERROR);
-                break;
+                return MoPubErrorCode.VIDEO_CACHE_ERROR;
             case IronSourceError.ERROR_CODE_NO_ADS_TO_SHOW:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.NETWORK_NO_FILL);
-                break;
+                return MoPubErrorCode.NETWORK_NO_FILL;
             case IronSourceError.ERROR_CODE_GENERIC:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.INTERNAL_ERROR);
-                break;
+                return MoPubErrorCode.INTERNAL_ERROR;
             case IronSourceError.ERROR_NO_INTERNET_CONNECTION:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.NO_CONNECTION);
-                break;
+                return MoPubErrorCode.NO_CONNECTION;
             default:
-                onRewardedVideoPlaybackError(IronSourceRewardedVideo.class, IRON_SOURCE_AD_NETWORK_ID, MoPubErrorCode.NETWORK_TIMEOUT);
-                break;
+                return MoPubErrorCode.NETWORK_TIMEOUT;
         }
     }
-
-    //**************************** IronSource RewardedVideoListener End *******************************
 }
