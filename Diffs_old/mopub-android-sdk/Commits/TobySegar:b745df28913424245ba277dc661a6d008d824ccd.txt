diff --git a/CHANGELOG.md b/CHANGELOG.md
index ad9b89df..b8b55c9a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,16 @@
+## Version 4.9.0 (September 1, 2016)
+- Removed the full SDK bundle.
+- Removed Eclipse support.
+- Removed InMobi custom events from extras.
+- Deprecated rewarded video calls from `MoPub.java` and moved them to `MoPubRewardedVideos.java`.
+  - For example, `MoPub#loadRewardedVideo` is deprecated in favor of `MoPubRewardedVideos#loadRewardedVideo`.
+- Bug fixes.
+
+**Modular SDK**
+ - Added the ability to specify which ad formats to include as dependencies (to decrease the overall footprint of the MoPub SDK in your app).
+ - Default behavior remains unchanged and includes access to all ad formats.
+ - **Note:** Maven builds from source are currently unstable and will be reinstated in a future release. Maven developers can still pull the MoPub SDK AAR from JCenter.
+
 ## Version 4.8.0 (August 1, 2016)
 - Changed the behavior of `MoPubInterstitial#load()` while an interstitial is loading or has been successfully loaded. Previously, this would discard the currently-caching or cached interstitial -- now the interstitial will be unaffected and will remain in the cache.
 - `MoPubInterstitial`s can now be shown only once per successful ad load.
diff --git a/README.md b/README.md
index 31ebc99e..93697a57 100644
--- a/README.md
+++ b/README.md
@@ -27,7 +27,48 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        compile('com.mopub:mopub-sdk:4.8.0@aar') {
+        compile('com.mopub:mopub-sdk:4.9.0@aar') {
+            transitive = true
+        }
+    }
+    ```
+
+    ***SDK Modularization***
+
+    With the modular SDK, you can choose to include specific formats to decrease overall SDK footprint in your app. To do so, include the line for any combination of components that you want in your `build.gradle` file as follows:
+
+    ```groovy
+    repositories {
+        // ... other project repositories
+        jcenter()
+    }
+    // ...
+
+    dependencies {
+        // ... other project dependencies
+
+        // For banners
+        compile('com.mopub:mopub-sdk:mopub-sdk-banner:4.9.0@aar') {
+            transitive = true
+        }
+        
+        // For interstitials
+        compile('com.mopub:mopub-sdk:mopub-sdk-interstitial:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For rewarded videos. This will automatically also include interstitials
+        compile('com.mopub:mopub-sdk:mopub-sdk-rewardedvideo:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For native static (images).
+        compile('com.mopub:mopub-sdk:mopub-sdk-native-static:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For native video. This will automatically also include native static
+        compile('com.mopub:mopub-sdk:mopub-sdk-native-video:4.9.0@aar') {
             transitive = true
         }
     }
@@ -39,14 +80,7 @@ The MoPub SDK is available via:
 
     The MoPub SDK is also distributed as zipped source code that you can include in your application.  MoPub provides two prepackaged archives of source code:
 
-    **[MoPub Android Full SDK.zip](http://bit.ly/YUdU9v)**  
-    _Includes everything you need to serve MoPub ads *and* built-in support for Millennial Media third party ad network - [Millennial Media](http://www.millennialmedia.com/) - including the required third party binaries._
-    
-    _**Note:** Millennial Media has updated their minimum supported version of Android to 4.1 (API level 16+). The MoPub Android Full SDK manifest and build.gradle files have been updated accordingly._
-    
-    _**Note:** Millennial Media has deprecated support for Ant/Eclipse; migrating users should use the MoPub Android base SDK and follow [Millennial's Ant/Eclipse Integration Guide](http://docs.millennialmedia.com/android-ad-sdk/ant-eclipse-integration-guide.html)._
-    
-    **[MoPub Android Base SDK.zip](http://bit.ly/YUdWhH)**  
+    **[MoPub Android SDK.zip](http://bit.ly/YUdWhH)**  
     _Includes everything you need to serve MoPub ads.  No third party ad networks are included._
     
     **For additional integration instructions, please see the [Getting Started guide](https://github.com/mopub/mopub-android-sdk/wiki/Getting-Started#requirements-and-dependencies).**
@@ -62,9 +96,17 @@ The MoPub SDK is available via:
 ## New in this Version
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
-- Changed the behavior of `MoPubInterstitial#load()` while an interstitial is loading or has been successfully loaded. Previously, this would discard the currently-caching or cached interstitial -- now the interstitial will be unaffected and will remain in the cache.
-- `MoPubInterstitial`s can now be shown only once per successful ad load.
-- Modified a number of Native Ads APIs (manual integration) to accept Context instead of Activity. Affected classes/methods include: `MoPubNative`, `AdapterHelper`, `CustomEventNative#loadNativeAd()`, and `MoPubAdRenderer#createAdView()`.
+- Removed the full SDK bundle.
+- Removed Eclipse support.
+- Removed InMobi custom events from extras.
+- Deprecated rewarded video calls from `MoPub.java` and moved them to `MoPubRewardedVideos.java`.
+  - For example, `MoPub#loadRewardedVideo` is deprecated in favor of `MoPubRewardedVideos#loadRewardedVideo`.
+- Bug fixes.
+
+**Modular SDK**
+ - Added the ability to specify which ad formats to include as dependencies (to decrease the overall footprint of the MoPub SDK in your app).
+ - Default behavior remains unchanged and includes access to all ad formats.
+ - **Note:** Maven builds from source are currently unstable and will be reinstated in a future release. Maven developers can still pull the MoPub SDK AAR from JCenter.
 
 ## Requirements
 
diff --git a/build.gradle b/build.gradle
index 6a87580d..c5a7da47 100644
--- a/build.gradle
+++ b/build.gradle
@@ -6,6 +6,7 @@ buildscript {
 
     dependencies {
         classpath 'com.android.tools.build:gradle:2.1.2'
+        classpath 'com.novoda:bintray-release:0.3.4'
     }
 }
 
diff --git a/extras/README b/extras/README
deleted file mode 100644
index 5cbc94d1..00000000
--- a/extras/README
+++ /dev/null
@@ -1,9 +0,0 @@
-Google AdSense SDK
-==================
-Although the AdSense SDK for Android is deprecated, you can support it by doing the following:
-
-1) Copy AdSenseAdapter.java under the extras/ folder to mopub-android-sdk/src/com/mopub/mobileads
-2) Place the Google AdSense SDK in mopub-android-sdk/libs
-3) Add GoogleAdView.jar to the Java Build Path in the Properties section of mopub-android-sdk.
-
-*NOTE: At this time, Google does not allow distribution of GoogleAdView.jar so you will need to get that file from Google
diff --git a/extras/src/com/mopub/nativeads/FacebookAdRenderer.java b/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
index c054c9a9..b27b883f 100644
--- a/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
+++ b/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
@@ -20,7 +20,8 @@
  * static and video native ads. This will automatically replace the main image view with the
  * Facebook MediaView that handles showing the main asset.
  */
-public class FacebookAdRenderer implements MoPubAdRenderer<FacebookNative.FacebookVideoEnabledNativeAd> {
+public class FacebookAdRenderer
+        implements MoPubAdRenderer<com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd> {
     private final ViewBinder mViewBinder;
 
     // This is used instead of View.setTag, which causes a memory leak in 2.3
@@ -81,7 +82,7 @@ public View createAdView(final Context context, final ViewGroup parent) {
 
     @Override
     public void renderAdView(final View view,
-            final FacebookNative.FacebookVideoEnabledNativeAd facebookVideoEnabledNativeAd) {
+            final com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd facebookVideoEnabledNativeAd) {
         FacebookNativeViewHolder facebookNativeViewHolder = mViewHolderMap.get(view);
         if (facebookNativeViewHolder == null) {
             facebookNativeViewHolder = FacebookNativeViewHolder.fromViewBinder(view, mViewBinder);
@@ -98,11 +99,11 @@ public void renderAdView(final View view,
     @Override
     public boolean supports(final BaseNativeAd nativeAd) {
         Preconditions.checkNotNull(nativeAd);
-        return nativeAd instanceof FacebookNative.FacebookVideoEnabledNativeAd;
+        return nativeAd instanceof com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd;
     }
 
     private void update(final FacebookNativeViewHolder facebookNativeViewHolder,
-            final FacebookNative.FacebookVideoEnabledNativeAd nativeAd) {
+            final com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd nativeAd) {
         final ImageView mainImageView = facebookNativeViewHolder.getMainImageView();
         NativeRendererHelper.addTextView(facebookNativeViewHolder.getTitleView(),
                 nativeAd.getTitle());
diff --git a/extras/src/com/mopub/nativeads/InMobiNative.java b/extras/src/com/mopub/nativeads/InMobiNative.java
deleted file mode 100644
index d6a0e15e..00000000
--- a/extras/src/com/mopub/nativeads/InMobiNative.java
+++ /dev/null
@@ -1,229 +0,0 @@
-package com.mopub.nativeads;
-
-import android.content.Context;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMNative;
-import com.inmobi.monetization.IMNativeListener;
-import com.mopub.common.logging.MoPubLog;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.json.JSONTokener;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-import static com.mopub.common.util.Json.getJsonValue;
-import static com.mopub.common.util.Numbers.parseDouble;
-import static com.mopub.nativeads.NativeImageHelper.preCacheImages;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-class InMobiNative extends CustomEventNative {
-    private static final String APP_ID_KEY = "app_id";
-
-    // CustomEventNative implementation
-    @Override
-    protected void loadNativeAd(final Context context,
-            final CustomEventNativeListener customEventNativeListener,
-            final Map<String, Object> localExtras,
-            final Map<String, String> serverExtras) {
-
-        final String appId;
-        if (extrasAreValid(serverExtras)) {
-            appId = serverExtras.get(APP_ID_KEY);
-        } else {
-            customEventNativeListener.onNativeAdFailed(NativeErrorCode.NATIVE_ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        InMobi.initialize(context, appId);
-        final InMobiStaticNativeAd inMobiStaticNativeAd =
-                new InMobiStaticNativeAd(context,
-                        new ImpressionTracker(context),
-                        new NativeClickHandler(context),
-                        customEventNativeListener);
-        inMobiStaticNativeAd.setIMNative(new IMNative(inMobiStaticNativeAd));
-        inMobiStaticNativeAd.loadAd();
-    }
-
-    private boolean extrasAreValid(final Map<String, String> serverExtras) {
-        final String placementId = serverExtras.get(APP_ID_KEY);
-        return (placementId != null && placementId.length() > 0);
-    }
-
-    static class InMobiStaticNativeAd extends StaticNativeAd implements IMNativeListener {
-        static final int IMPRESSION_MIN_TIME_VIEWED = 0;
-
-        // Modifiable keys
-        static final String TITLE = "title";
-        static final String DESCRIPTION = "description";
-        static final String SCREENSHOTS = "screenshots";
-        static final String ICON = "icon";
-        static final String LANDING_URL = "landing_url";
-        static final String CTA = "cta";
-        static final String RATING = "rating";
-
-        // Constant keys
-        static final String URL = "url";
-
-        private final Context mContext;
-        private final CustomEventNativeListener mCustomEventNativeListener;
-        private final ImpressionTracker mImpressionTracker;
-        private final NativeClickHandler mNativeClickHandler;
-        private IMNative mImNative;
-
-        InMobiStaticNativeAd(final Context context,
-                final ImpressionTracker impressionTracker,
-                final NativeClickHandler nativeClickHandler,
-                final CustomEventNativeListener customEventNativeListener) {
-            mContext = context.getApplicationContext();
-            mImpressionTracker = impressionTracker;
-            mNativeClickHandler = nativeClickHandler;
-            mCustomEventNativeListener = customEventNativeListener;
-        }
-
-        void setIMNative(final IMNative imNative) {
-            mImNative = imNative;
-        }
-
-        void loadAd() {
-            mImNative.loadAd();
-        }
-
-        // IMNativeListener implementation
-        @Override
-        public void onNativeRequestSucceeded(final IMNative imNative) {
-            if (imNative == null) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-                return;
-            }
-
-            try {
-                parseJson(imNative);
-            } catch (JSONException e) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.INVALID_RESPONSE);
-                return;
-            }
-
-            final List<String> imageUrls = new ArrayList<String>();
-            final String mainImageUrl = getMainImageUrl();
-            if (mainImageUrl != null) {
-                imageUrls.add(mainImageUrl);
-            }
-
-            final String iconUrl = getIconImageUrl();
-            if (iconUrl != null) {
-                imageUrls.add(iconUrl);
-            }
-
-            preCacheImages(mContext, imageUrls, new NativeImageHelper.ImageListener() {
-                @Override
-                public void onImagesCached() {
-                    mCustomEventNativeListener.onNativeAdLoaded(InMobiStaticNativeAd.this);
-                }
-
-                @Override
-                public void onImagesFailedToCache(NativeErrorCode errorCode) {
-                    mCustomEventNativeListener.onNativeAdFailed(errorCode);
-                }
-            });
-        }
-
-        @Override
-        public void onNativeRequestFailed(final IMErrorCode errorCode) {
-            if (errorCode == IMErrorCode.INVALID_REQUEST) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_REQUEST);
-            } else if (errorCode == IMErrorCode.INTERNAL_ERROR || errorCode == IMErrorCode.NETWORK_ERROR) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-            } else if (errorCode == IMErrorCode.NO_FILL) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_NO_FILL);
-            } else {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.UNSPECIFIED);
-            }
-        }
-
-        // Lifecycle Handlers
-        @Override
-        public void prepare(final View view) {
-            if (view != null && view instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view);
-            } else if (view != null && view.getParent() instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view.getParent());
-            } else {
-                Log.e("MoPub", "InMobi did not receive ViewGroup to attachToView, unable to record impressions");
-            }
-            mImpressionTracker.addView(view, this);
-            mNativeClickHandler.setOnClickListener(view, this);
-        }
-
-        @Override
-        public void clear(final View view) {
-            mImpressionTracker.removeView(view);
-            mNativeClickHandler.clearOnClickListener(view);
-        }
-
-        @Override
-        public void destroy() {
-            mImNative.detachFromView();
-            mImpressionTracker.destroy();
-        }
-
-        // Event Handlers
-        @Override
-        public void recordImpression(final View view) {
-            notifyAdImpressed();
-        }
-
-        @Override
-        public void handleClick(final View view) {
-            notifyAdClicked();
-            mNativeClickHandler.openClickDestinationUrl(getClickDestinationUrl(), view);
-            mImNative.handleClick(null);
-        }
-
-        void parseJson(final IMNative imNative) throws JSONException  {
-            final JSONTokener jsonTokener = new JSONTokener(imNative.getContent());
-            final JSONObject jsonObject = new JSONObject(jsonTokener);
-
-            setTitle(getJsonValue(jsonObject, TITLE, String.class));
-            setText(getJsonValue(jsonObject, DESCRIPTION, String.class));
-
-            final JSONObject screenShotJsonObject = getJsonValue(jsonObject, SCREENSHOTS, JSONObject.class);
-            if (screenShotJsonObject != null) {
-                setMainImageUrl(getJsonValue(screenShotJsonObject, URL, String.class));
-            }
-
-            final JSONObject iconJsonObject = getJsonValue(jsonObject, ICON, JSONObject.class);
-            if (iconJsonObject != null) {
-                setIconImageUrl(getJsonValue(iconJsonObject, URL, String.class));
-            }
-
-            final String clickDestinationUrl = getJsonValue(jsonObject, LANDING_URL, String.class);
-            if (clickDestinationUrl == null) {
-                final String errorMessage = "InMobi JSON response missing required key: "
-                        + LANDING_URL + ". Failing over.";
-                MoPubLog.d(errorMessage);
-                throw new JSONException(errorMessage);
-            }
-
-            setClickDestinationUrl(clickDestinationUrl);
-            setCallToAction(getJsonValue(jsonObject, CTA, String.class));
-
-            try {
-                setStarRating(parseDouble(jsonObject.opt(RATING)));
-            } catch (ClassCastException e) {
-                Log.d("MoPub", "Unable to set invalid star rating for InMobi Native.");
-            }
-            setImpressionMinTimeViewed(IMPRESSION_MIN_TIME_VIEWED);
-        }
-
-    }
-}
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java b/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
deleted file mode 100644
index b51fb04c..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.commons.InMobi.LOG_LEVEL;
-import com.inmobi.monetization.IMBanner;
-import com.inmobi.monetization.IMBannerListener;
-import com.inmobi.monetization.IMErrorCode;
-import com.mopub.common.MoPub;
-import com.mopub.common.util.Views;
-import com.mopub.mobileads.CustomEventBanner;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-public class InMobiBanner extends CustomEventBanner implements IMBannerListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadBanner(Context context,
-            CustomEventBannerListener bannerListener,
-            Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mBannerListener = bannerListener;
-        String inMobiAppId = DEFAULT_APP_ID;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-        if (activity == null) {
-            mBannerListener.onBannerFailed(null);
-            return;
-        }
-
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-
-        iMBanner = new IMBanner(activity, inMobiAppId,
-                IMBanner.INMOBI_AD_UNIT_320X50);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMBanner.setRequestParams(map);
-        InMobi.setLogLevel(LOG_LEVEL.VERBOSE);
-        iMBanner.setIMBannerListener(this);
-        iMBanner.setRefreshInterval(-1);
-        iMBanner.loadBanner();
-
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventBannerListener mBannerListener;
-    private IMBanner iMBanner;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventBanner
-     */
-
-    @Override
-    public void onInvalidate() {
-        if (iMBanner != null) {
-            iMBanner.setIMBannerListener(null);
-            Views.removeFromParent(iMBanner);
-            iMBanner.destroy();
-        }
-    }
-
-    @Override
-    public void onBannerInteraction(IMBanner imBanner, Map<String, String> map) {
-        mBannerListener.onBannerClicked();
-    }
-
-    @Override
-    public void onBannerRequestFailed(IMBanner imBanner, IMErrorCode imErrorCode) {
-
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mBannerListener.onBannerFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onBannerRequestSucceeded(IMBanner imBanner) {
-        if (iMBanner != null) {
-            mBannerListener.onBannerLoaded(imBanner);
-
-        } else {
-            mBannerListener.onBannerFailed(null);
-        }
-    }
-
-    @Override
-    public void onDismissBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerCollapsed();
-    }
-
-    @Override
-    public void onLeaveApplication(IMBanner imBanner) {
-
-    }
-
-    @Override
-    public void onShowBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerExpanded();
-    }
-
-}
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java b/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
deleted file mode 100644
index ad45e7d8..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
+++ /dev/null
@@ -1,135 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMInterstitial;
-import com.inmobi.monetization.IMInterstitialListener;
-import com.mopub.common.MoPub;
-import com.mopub.mobileads.CustomEventInterstitial;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK  4.4.1
- */
-public class InMobiInterstitial extends CustomEventInterstitial implements IMInterstitialListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadInterstitial(Context context,
-                                    CustomEventInterstitialListener interstitialListener,
-                                    Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mInterstitialListener = interstitialListener;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-
-        if (activity == null) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-            return;
-        }
-
-        String inMobiAppId = DEFAULT_APP_ID;
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-        this.iMInterstitial = new IMInterstitial(activity, inMobiAppId);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMInterstitial.setRequestParams(map);
-        iMInterstitial.setIMInterstitialListener(this);
-        iMInterstitial.loadInterstitial();
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventInterstitialListener mInterstitialListener;
-    private IMInterstitial iMInterstitial;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventInterstitial
-     */
-
-    @Override
-    public void showInterstitial() {
-        if (iMInterstitial != null
-                && IMInterstitial.State.READY.equals(this.iMInterstitial.getState())) {
-            iMInterstitial.show();
-        }
-    }
-
-    @Override
-    public void onInvalidate() {
-        if (iMInterstitial != null) {
-            iMInterstitial.setIMInterstitialListener(null);
-            iMInterstitial.destroy();
-        }
-    }
-
-    @Override
-    public void onDismissInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialDismissed();
-    }
-
-    @Override
-    public void onInterstitialFailed(IMInterstitial imInterstitial, IMErrorCode imErrorCode) {
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onInterstitialInteraction(IMInterstitial imInterstitial,
-                                          Map<String, String> map) {
-        mInterstitialListener.onInterstitialClicked();
-    }
-
-    @Override
-    public void onInterstitialLoaded(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialLoaded();
-    }
-
-    @Override
-    public void onLeaveApplication(IMInterstitial imInterstitial) {
-
-    }
-
-    @Override
-    public void onShowInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialShown();
-    }
-}
diff --git a/mopub-sample/.classpath b/mopub-sample/.classpath
deleted file mode 100644
index 3c02ddb2..00000000
--- a/mopub-sample/.classpath
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="src" path="src/main/java"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/mopub-sample/.project b/mopub-sample/.project
deleted file mode 100644
index 2ae5c5ab..00000000
--- a/mopub-sample/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>mopub-sample</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 9bdae2d6..f7dd6ffc 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.mopub.simpleadsdemo"
-      android:versionCode="43"
-      android:versionName="4.8.0">
+      android:versionCode="44"
+      android:versionName="4.9.0">
     <uses-sdk android:minSdkVersion="9"
               android:targetSdkVersion="23"/>
 
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index a5b268ba..b123a744 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -7,9 +7,9 @@ repositories {
 
 apply plugin: 'com.android.application'
 
-group = 'com.mopub'
-description = '''MoPub Sample App'''
-version = '4.8.0'
+project.group = 'com.mopub'
+project.description = '''MoPub Sample App'''
+project.version = '4.9.0'
 
 android {
     compileSdkVersion 23
@@ -17,7 +17,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 43
+        versionCode 44
         versionName version
         minSdkVersion 9
         targetSdkVersion 23
diff --git a/mopub-sdk/.classpath b/mopub-sdk/.classpath
deleted file mode 100644
index a4dec28b..00000000
--- a/mopub-sdk/.classpath
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="src" path="src/main/java"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="lib" path="libs/android-support-v4.jar"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/mopub-sdk/.project b/mopub-sdk/.project
deleted file mode 100644
index bd2cd4f9..00000000
--- a/mopub-sdk/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>mopub-sdk</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index 57a6ccc1..dc087560 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -1,119 +1,12 @@
-// This buildscript will assemble the MoPub SDK into an AAR.
-
-buildscript {
-    repositories {
-        mavenCentral()
-        jcenter()
-    }
-
-    dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.2'
-        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
-    }
-}
-
-plugins {
-    id "com.jfrog.bintray" version "1.2"
-}
-
-repositories {
-    mavenCentral()
-    jcenter()
-    flatDir {
-         dirs '../libs'
-    }
-}
-
-configurations {
-    javadocDeps
-}
-
-apply plugin: 'com.android.library'
-apply plugin: 'com.github.dcendents.android-maven'
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '2.10'
-}
-
-group = 'com.mopub'
-description = '''MoPub Android SDK'''
-version = '4.8.0'
-
-android {
-    compileSdkVersion 23
-    buildToolsVersion '23.0.2'
-    lintOptions { abortOnError false }
-    useLibrary 'org.apache.http.legacy'
-
-    defaultConfig {
-        versionCode 43
-        versionName version
-        minSdkVersion 9
-        targetSdkVersion 23
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src/main/java']
-            resources.srcDirs = ['src/main/resources']
-            aidl.srcDirs = ['src/main']
-            renderscript.srcDirs = ['src/main']
-            res.srcDirs = ['res']
-            assets.srcDirs = ['assets']
-        }
-    }
-
-    testOptions {
-        unitTests {
-            // This causes android platform methods from the test JAR
-            // to return null, false, etc instead of throwing an exception.
-            // We should periodically disable this and tackle the broken tests
-            // as it exposes when we are hitting platform APIs in our tests.
-            // If these tests *require* platform APIs we may want to make them
-            // connected tests instead.
-            returnDefaultValues = true
-
-            // Test JVM settings since we have a lot of classes loaded.
-            all {
-                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
-                forkEvery 200
-            }
-        }
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard.txt')
-        }
-      
-        debug {
-            minifyEnabled false
-        }
-    }
-
-    // Note: You will also need a local.properties file to set the location of the SDK in the same 
-    // way that the existing SDK requires, using the sdk.dir property.
-    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no 
-    // difference between the two methods, you can use the one you prefer.
-}
-
+apply from: 'shared-build.gradle'
 
 dependencies {
-    compile 'com.android.support:support-v4:23.1.1'
-    compile 'com.android.support:support-annotations:23.1.1'
-    compile 'com.android.support:recyclerview-v7:23.1.1'
-    compile 'com.mopub.volley:mopub-volley:1.1.0'
-    compile 'com.google.android.exoplayer:exoplayer:r1.5.6'
-    // anchor: additional dependencies
-
-    javadocDeps 'com.google.android.exoplayer:exoplayer:r1.5.6:sources'
-    javadocDeps 'com.mopub.volley:mopub-volley:1.1.0:sources'
-    javadocDeps 'com.android.support:support-v4:23.1.1:sources'
-    javadocDeps 'com.android.support:support-annotations:23.1.1:sources'
-    javadocDeps 'com.android.support:recyclerview-v7:23.1.1:sources'
+    compile project(':mopub-sdk:mopub-sdk-base')
+    compile project(':mopub-sdk:mopub-sdk-banner')
+    compile project(':mopub-sdk:mopub-sdk-interstitial')
+    compile project(':mopub-sdk:mopub-sdk-rewardedvideo')
+    compile project(':mopub-sdk:mopub-sdk-native-static')
+    compile project(':mopub-sdk:mopub-sdk-native-video')
 
     testCompile 'junit:junit:4.10'
     testCompile 'org.robolectric:robolectric:3.0'
@@ -121,110 +14,14 @@ dependencies {
     testCompile 'org.robolectric:shadows-httpclient:3.0'
     testCompile 'com.squareup:fest-android:1.0.7'
     testCompile 'org.mockito:mockito-core:1.9.5'
+    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
+    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
+    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
+    testCompile 'org.powermock:powermock-classloading-xstream:1.6.5'
 }
 
-def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
-def gitUrl = 'https://github.com/mopub/mopub-android-sdk.git'
-// Put your credentials (bintray.user, bintray.apikey) in ~/.gradle/gradle.properties
-bintray {
-    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
-    key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""
-
-    configurations = ['archives']
-    publish = true
-
-    pkg {
-        repo = 'mopub-android-sdk'
-        name = 'mopub-android-sdk'
-
-        userOrg = 'mopub'
-        desc = description
-
-        websiteUrl = siteUrl
-        vcsUrl = gitUrl
-        licenses = ['Apache-2.0']
-
-        version {
-            name = project.version
-        }
-    }
-}
-
-install {
-    repositories.mavenInstaller {
-        pom {
-            project {
-                packaging 'aar'
-
-                name 'MoPub Android SDK'
-                url siteUrl
-
-                licenses {
-                    license {
-                        name 'MoPub SDK License'
-                        url 'http://www.mopub.com/legal/sdk-license-agreement/'
-                    }
-                }
-                developers {
-                    // ID corresponds to GitHub user name
-                    developer {
-                        id 'nathanshayefar'
-                        name 'Nathan Shayefar'
-                        email 'nshayefar@twitter.com'
-                    }
-                    developer {
-                        id 'joeblubaugh'
-                        name 'Joe Blubaugh'
-                        email 'joeblubaugh@twitter.com'
-                    }
-                    developer {
-                        id 'steffanc'
-                        name 'Steffan Chartrand'
-                        email 'schartrand@twitter.com'
-                    }
-                    developer {
-                        id 'aornelas'
-                        name 'Andrés Ornelas'
-                        email 'andres@twitter.com'
-                    }
-                    developer {
-                        id 'bichenwang'
-                        name 'Bichen Wang'
-                        email 'bwang@twitter.com'
-                    }
-                    developer {
-                        id 'nathank33'
-                        name 'Nathan Braun'
-                        email 'nbraun@twitter.com'
-                    }
-                }
-                scm {
-                    connection gitUrl
-                    developerConnection gitUrl
-                    url siteUrl
-                }
-            }
-        }
-    }
-}
-
-task sourcesJar(type: Jar) {
-    from android.sourceSets.main.java.srcDirs
-    classifier = 'sources'
-}
-
-task javadoc(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    classpath += configurations.javadocDeps
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
-
-artifacts {
-    archives javadocJar
-    archives sourcesJar
-}
+project.description = 'MoPub Android SDK'
+project.ext.displayName = 'MoPub Android SDK'
+project.ext.projectName = 'mopub-sdk'
+project.ext.uploadName = 'mopub-android-sdk'
+apply from: 'publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-banner/build.gradle b/mopub-sdk/mopub-sdk-banner/build.gradle
new file mode 100644
index 00000000..011a0db8
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-banner/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+}
+
+project.description = 'MoPub Android SDK - Banner'
+project.ext.displayName = 'MoPub Android SDK - Banner'
+project.ext.projectName = 'mopub-sdk-banner'
+project.ext.uploadName = 'mopub-android-sdk-banner'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..5bf5c16c
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.banner">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBanner.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBanner.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
new file mode 100644
index 00000000..2ced0308
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile 'com.mopub.volley:mopub-volley:1.1.0'
+}
+
+project.description = 'MoPub Android SDK - Base'
+project.ext.displayName = 'MoPub Android SDK - Base'
+project.ext.projectName = 'mopub-sdk-base'
+project.ext.uploadName = 'mopub-android-sdk-base'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..d480f9c5
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.base">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdFormat.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdFormat.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/AdFormat.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdFormat.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdReport.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdReport.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/AdReport.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdReport.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdType.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/AdType.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdType.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BaseLifecycleListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseLifecycleListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/BaseLifecycleListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseLifecycleListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BrowserWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/BrowserWebViewClient.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CacheService.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CacheService.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/CacheService.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CacheService.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CloseableLayout.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CloseableLayout.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Constants.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
similarity index 82%
rename from mopub-sdk/src/main/java/com/mopub/common/Constants.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
index 7c5b1462..99efe98b 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/Constants.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
@@ -1,6 +1,7 @@
 package com.mopub.common;
 
 public class Constants {
+
     private Constants() {}
 
     public static final String HTTP = "http";
@@ -20,4 +21,7 @@ private Constants() {}
     public static final int TEN_MB = 10 * 1024 * 1024;
 
     public static final int UNUSED_REQUEST_CODE = 255;  // Acceptable range is [0, 255]
+
+    public static final String NATIVE_VIDEO_ID = "native_video_id";
+    public static final String NATIVE_VAST_VIDEO_CONFIG = "native_vast_video_config";
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CreativeOrientation.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CreativeOrientation.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/CreativeOrientation.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CreativeOrientation.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DataKeys.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DataKeys.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCache.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCache.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheUtil.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheUtil.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DoubleTimeTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DoubleTimeTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DoubleTimeTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DoubleTimeTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DownloadResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DownloadResponse.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DownloadResponse.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DownloadResponse.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/FullAdType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/FullAdType.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/FullAdType.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/FullAdType.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/GpsHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/GpsHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/HttpResponses.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/HttpResponses.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/HttpResponses.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/HttpResponses.java
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java
new file mode 100644
index 00000000..00dcd8b5
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java
@@ -0,0 +1,16 @@
+package com.mopub.common;
+
+/**
+ * IntentActions are used by a {@link com.mopub.mobileads.BaseBroadcastReceiver}
+ * to relay information about the current state of a custom event activity.
+ */
+public class IntentActions {
+    public static final String ACTION_INTERSTITIAL_FAIL = "com.mopub.action.interstitial.fail";
+    public static final String ACTION_INTERSTITIAL_SHOW = "com.mopub.action.interstitial.show";
+    public static final String ACTION_INTERSTITIAL_DISMISS = "com.mopub.action.interstitial.dismiss";
+    public static final String ACTION_INTERSTITIAL_CLICK = "com.mopub.action.interstitial.click";
+
+    public static final String ACTION_REWARDED_VIDEO_COMPLETE = "com.mopub.action.rewardedvideo.complete";
+
+    private IntentActions() {}
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LifecycleListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LifecycleListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LocationService.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/LocationService.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MediationSettings.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MediationSettings.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MediationSettings.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MediationSettings.java
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
new file mode 100644
index 00000000..bf067481
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -0,0 +1,241 @@
+package com.mopub.common;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.Reflection;
+
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+public class MoPub {
+    public static final String SDK_VERSION = "4.9.0";
+
+    public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
+
+    private static final String MOPUB_REWARDED_VIDEOS =
+            "com.mopub.mobileads.MoPubRewardedVideos";
+    private static final String MOPUB_REWARDED_VIDEO_MANAGER =
+            "com.mopub.mobileads.MoPubRewardedVideoManager";
+    private static final String MOPUB_REWARDED_VIDEO_LISTENER =
+            "com.mopub.mobileads.MoPubRewardedVideoListener";
+    private static final String MOPUB_REWARDED_VIDEO_MANAGER_REQUEST_PARAMETERS =
+            "com.mopub.mobileads.MoPubRewardedVideoManager$RequestParameters";
+
+    private static final int DEFAULT_LOCATION_PRECISION = 6;
+    private static volatile LocationAwareness sLocationLocationAwareness = LocationAwareness.NORMAL;
+    private static volatile int sLocationPrecision = DEFAULT_LOCATION_PRECISION;
+    private static boolean sSearchedForUpdateActivityMethod = false;
+    @Nullable private static Method sUpdateActivityMethod;
+
+    public static LocationAwareness getLocationAwareness() {
+        return sLocationLocationAwareness;
+    }
+
+    public static void setLocationAwareness(LocationAwareness locationAwareness) {
+        sLocationLocationAwareness = locationAwareness;
+    }
+
+    public static int getLocationPrecision() {
+        return sLocationPrecision;
+    }
+
+    /**
+     * Sets the precision to use when the SDK's location awareness is set
+     * to {@link com.mopub.common.MoPub.LocationAwareness#TRUNCATED}.
+     */
+    public static void setLocationPrecision(int precision) {
+        sLocationPrecision = Math.min(Math.max(0, precision), DEFAULT_LOCATION_PRECISION);
+    }
+
+
+    //////// MoPub LifecycleListener messages ////////
+
+    public static void onCreate(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onCreate(activity);
+        updateActivity(activity);
+    }
+
+    public static void onStart(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onStart(activity);
+        updateActivity(activity);
+    }
+
+    public static void onPause(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onPause(activity);
+    }
+
+    public static void onResume(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onResume(activity);
+        updateActivity(activity);
+    }
+
+    public static void onRestart(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onRestart(activity);
+        updateActivity(activity);
+    }
+
+    public static void onStop(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onStop(activity);
+    }
+
+    public static void onDestroy(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onDestroy(activity);
+    }
+
+    public static void onBackPressed(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onBackPressed(activity);
+    }
+
+    ////////// MoPub RewardedVideoControl methods //////////
+    // These methods have been deprecated as of release 4.9 due to SDK modularization. MoPub is
+    // inside of the base module while MoPubRewardedVideos is inside of the rewarded video module.
+    // MoPubRewardedVideos methods must now be called with reflection because the publisher
+    // may have excluded the rewarded video module.
+
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#initializeRewardedVideo instead
+     */
+    @Deprecated
+    public static void initializeRewardedVideo(@NonNull Activity activity, MediationSettings... mediationSettings) {
+        try {
+            new Reflection.MethodBuilder(null, "initializeRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(Activity.class, activity)
+                    .addParam(MediationSettings[].class, mediationSettings)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("initializeRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("initializeRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while initializing rewarded video", e);
+        }
+    }
+
+    @VisibleForTesting
+    static void updateActivity(@NonNull Activity activity) {
+        if (!sSearchedForUpdateActivityMethod) {
+            sSearchedForUpdateActivityMethod = true;
+            try {
+                Class moPubRewardedVideoManagerClass = Class.forName(
+                        MOPUB_REWARDED_VIDEO_MANAGER);
+                sUpdateActivityMethod = Reflection.getDeclaredMethodWithTraversal(
+                        moPubRewardedVideoManagerClass, "updateActivity", Activity.class);
+            } catch (ClassNotFoundException e) {
+                // rewarded video module not included
+            } catch (NoSuchMethodException e) {
+                // rewarded video module not included
+            }
+        }
+
+        if (sUpdateActivityMethod != null) {
+            try {
+                sUpdateActivityMethod.invoke(null, activity);
+            } catch (IllegalAccessException e) {
+                MoPubLog.e("Error while attempting to access the update activity method - this " +
+                        "should not have happened", e);
+            } catch (InvocationTargetException e) {
+                MoPubLog.e("Error while attempting to access the update activity method - this " +
+                        "should not have happened", e);
+            }
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#setRewardedVideoListener instead
+     */
+    @Deprecated
+    public static void setRewardedVideoListener(@Nullable Object listener) {
+        try {
+            Class moPubRewardedVideoListenerClass = Class.forName(
+                    MOPUB_REWARDED_VIDEO_LISTENER);
+            new Reflection.MethodBuilder(null, "setRewardedVideoListener")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(moPubRewardedVideoListenerClass, listener)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("setRewardedVideoListener was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("setRewardedVideoListener was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while setting rewarded video listener", e);
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#loadRewardedVideo instead
+     */
+    @Deprecated
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MediationSettings... mediationSettings) {
+        MoPub.loadRewardedVideo(adUnitId, null, mediationSettings);
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#loadRewardedVideo instead
+     */
+    @Deprecated
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable Object requestParameters,
+            @Nullable MediationSettings... mediationSettings) {
+        try {
+            Class requestParametersClass = Class.forName(
+                    MOPUB_REWARDED_VIDEO_MANAGER_REQUEST_PARAMETERS);
+            new Reflection.MethodBuilder(null, "loadRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .addParam(requestParametersClass, requestParameters)
+                    .addParam(MediationSettings[].class, mediationSettings)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("loadRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("loadRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while loading rewarded video", e);
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#hasRewardedVideo instead
+     */
+    @Deprecated
+    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
+        try {
+            return (boolean) new Reflection.MethodBuilder(null, "hasRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("hasRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("hasRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while checking rewarded video", e);
+        }
+        return false;
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#showRewardedVideo instead
+     */
+    @Deprecated
+    public static void showRewardedVideo(@NonNull String adUnitId) {
+        try {
+            new Reflection.MethodBuilder(null, "showRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("showRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("showRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while showing rewarded video", e);
+        }
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubLifecycleManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubLifecycleManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubLifecycleManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubLifecycleManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/SharedPreferencesHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SharedPreferencesHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/SharedPreferencesHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SharedPreferencesHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlResolutionTask.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlResolutionTask.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/VisibleForTesting.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/VisibleForTesting.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/VisibleForTesting.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/VisibleForTesting.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/BaseEvent.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/BaseEvent.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/ErrorEvent.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ErrorEvent.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/ErrorEvent.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ErrorEvent.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/Event.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/Event.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/Event.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/Event.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventDetails.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDetails.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventDetails.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDetails.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventDispatcher.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDispatcher.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventDispatcher.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDispatcher.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventSampler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSampler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventSampler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSampler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSerializer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSerializer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/LogCatEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/MoPubEvents.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/MoPubEvents.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/MoPubEvents.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/MoPubEvents.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/NoopEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/NoopEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/NoopEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/NoopEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/ScribeEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/logging/MoPubLog.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/logging/MoPubLog.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/AsyncTasks.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/AsyncTasks.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/AsyncTasks.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/AsyncTasks.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/DateAndTime.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DateAndTime.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/DateAndTime.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DateAndTime.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Dips.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Dips.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Dips.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Dips.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Drawables.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Drawables.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Files.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Files.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Files.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Files.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ImageUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ImageUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Intents.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Intents.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Json.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Json.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Json.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Json.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
index 08b4306e..c248acec 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
@@ -25,6 +25,8 @@
 public class ManifestUtils {
     private ManifestUtils() {}
 
+    private static final String MOPUB_ACTIVITY = "com.mopub.mobileads.MoPubActivity";
+    private static final String MRAID_ACTIVITY = "com.mopub.mobileads.MraidActivity";
     private static final List<Class<? extends Activity>> REQUIRED_WEB_VIEW_SDK_ACTIVITIES;
     private static FlagCheckUtil sFlagCheckUtil = new FlagCheckUtil();
 
@@ -36,8 +38,15 @@ private ManifestUtils() {}
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES = new ArrayList<Class<? extends Activity>>(4);
         // As a convenience, full class paths are provided here, in case the MoPub SDK was imported
         // incorrectly and these files were left out.
-        REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MoPubActivity.class);
-        REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MraidActivity.class);
+        try {
+            final Class moPubActivityClass = Class.forName(MOPUB_ACTIVITY);
+            final Class mraidActivityClass = Class.forName(MRAID_ACTIVITY);
+            REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(moPubActivityClass);
+            REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(mraidActivityClass);
+        } catch (ClassNotFoundException e) {
+            MoPubLog.i("ManifestUtils running without interstitial module");
+        }
+
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MraidVideoPlayerActivity.class);
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.common.MoPubBrowser.class);
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/MoPubCollections.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/MoPubCollections.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/MoPubCollections.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/MoPubCollections.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Numbers.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Numbers.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Numbers.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Numbers.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
similarity index 80%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
index 658d5948..5755e559 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
@@ -108,4 +108,22 @@ public static boolean classFound(final String className) {
 
         return constructor.newInstance();
     }
+
+    public static <T> T instantiateClassWithConstructor(@NonNull final String className,
+            @NonNull final Class<? extends T> superClass, @NonNull Class[] classes,
+            @NonNull Object[] parameters)
+            throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException,
+            InvocationTargetException, InstantiationException {
+        Preconditions.checkNotNull(className);
+        Preconditions.checkNotNull(superClass);
+        Preconditions.checkNotNull(classes);
+        Preconditions.checkNotNull(parameters);
+
+        final Class<? extends T> clazz = Class.forName(className).asSubclass(superClass);
+        // noinspection unchecked
+        final Constructor<? extends T> constructor = clazz.getDeclaredConstructor(classes);
+        constructor.setAccessible(true);
+
+        return constructor.newInstance(parameters);
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Streams.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Streams.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Streams.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Streams.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Strings.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Strings.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Strings.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Strings.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Timer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Timer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Utils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Utils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/VersionCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/VersionCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Views.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Views.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Views.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Views.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Visibility.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Visibility.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Visibility.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Visibility.java
diff --git a/mopub-sdk/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/exceptions/UrlParseException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/UrlParseException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/exceptions/UrlParseException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/UrlParseException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertReporter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertReporter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertReporter.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertReporter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdTypeTranslator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
index 1a4dc8b5..a3906be0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
@@ -6,9 +6,8 @@
 import android.content.Intent;
 import android.media.AudioManager;
 
+import com.mopub.common.Constants;
 import com.mopub.common.logging.MoPubLog;
-import com.mopub.nativeads.NativeVideoController;
-import com.mopub.nativeads.NativeVideoViewController;
 
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
@@ -72,8 +71,8 @@ public static Intent createIntentNativeVideo(final Context context, final long n
         final Intent intentVideoPlayerActivity = new Intent(context, MraidVideoPlayerActivity.class);
         intentVideoPlayerActivity.setFlags(FLAG_ACTIVITY_NEW_TASK);
         intentVideoPlayerActivity.putExtra(VIDEO_CLASS_EXTRAS_KEY, "native");
-        intentVideoPlayerActivity.putExtra(NativeVideoViewController.NATIVE_VIDEO_ID, nativeVideoId);
-        intentVideoPlayerActivity.putExtra(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG, vastVideoConfig);
+        intentVideoPlayerActivity.putExtra(Constants.NATIVE_VIDEO_ID, nativeVideoId);
+        intentVideoPlayerActivity.putExtra(Constants.NATIVE_VAST_VIDEO_CONFIG, vastVideoConfig);
         return intentVideoPlayerActivity;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
index d1504467..6bc577f0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
@@ -12,10 +12,9 @@
 import android.widget.RelativeLayout;
 import android.widget.VideoView;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.logging.MoPubLog;
 
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-
 public abstract class BaseVideoViewController {
     private final Context mContext;
     private final RelativeLayout mLayout;
@@ -76,7 +75,7 @@ public ViewGroup getLayout() {
 
     protected void videoError(boolean shouldFinish) {
         MoPubLog.e("Video cannot be played.");
-        broadcastAction(ACTION_INTERSTITIAL_FAIL);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_FAIL);
         if (shouldFinish) {
            mBaseVideoViewControllerListener.onFinish();
         }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
similarity index 84%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index ea850f3e..fcb0c4ab 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -15,11 +15,12 @@
 import android.widget.FrameLayout;
 
 import com.mopub.common.AdFormat;
+import com.mopub.common.AdReport;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.ManifestUtils;
+import com.mopub.common.util.Reflection;
 import com.mopub.common.util.Visibility;
 import com.mopub.mobileads.factories.AdViewControllerFactory;
-import com.mopub.mobileads.factories.CustomEventBannerAdapterFactory;
 
 import java.util.Map;
 import java.util.TreeMap;
@@ -35,9 +36,13 @@
         public void onBannerCollapsed(MoPubView banner);
     }
 
+    private final String CUSTOM_EVENT_BANNER_ADAPTER_FACTORY =
+            "com.mopub.mobileads.factories.CustomEventBannerAdapterFactory";
+
     @Nullable
     protected AdViewController mAdViewController;
-    protected CustomEventBannerAdapter mCustomEventBannerAdapter;
+    // mCustomEventBannerAdapter must be a CustomEventBannerAdapter
+    protected Object mCustomEventBannerAdapter;
 
     private Context mContext;
     private int mScreenVisibility;
@@ -126,11 +131,23 @@ public void destroy() {
         }
 
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
             mCustomEventBannerAdapter = null;
         }
     }
 
+    private void invalidateAdapter() {
+        if (mCustomEventBannerAdapter != null) {
+            try {
+                new Reflection.MethodBuilder(mCustomEventBannerAdapter, "invalidate")
+                        .setAccessible()
+                        .execute();
+            } catch (Exception e) {
+                MoPubLog.e("Error invalidating adapter", e);
+            }
+        }
+    }
+
     Integer getAdTimeoutDelay() {
         return (mAdViewController != null) ? mAdViewController.getAdTimeoutDelay() : null;
     }
@@ -153,18 +170,31 @@ protected void loadCustomEvent(String customEventClassName, Map<String, String>
         }
 
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
         }
 
         MoPubLog.d("Loading custom event adapter.");
 
-        mCustomEventBannerAdapter = CustomEventBannerAdapterFactory.create(
-                this,
-                customEventClassName,
-                serverExtras,
-                mAdViewController.getBroadcastIdentifier(),
-                mAdViewController.getAdReport());
-        mCustomEventBannerAdapter.loadAd();
+        if (Reflection.classFound(CUSTOM_EVENT_BANNER_ADAPTER_FACTORY)) {
+            try {
+                final Class<?> adapterFactoryClass = Class.forName(CUSTOM_EVENT_BANNER_ADAPTER_FACTORY);
+                mCustomEventBannerAdapter = new Reflection.MethodBuilder(null, "create")
+                        .setStatic(adapterFactoryClass)
+                        .addParam(MoPubView.class, this)
+                        .addParam(String.class, customEventClassName)
+                        .addParam(Map.class, serverExtras)
+                        .addParam(long.class, mAdViewController.getBroadcastIdentifier())
+                        .addParam(AdReport.class, mAdViewController.getAdReport())
+                        .execute();
+                new Reflection.MethodBuilder(mCustomEventBannerAdapter, "loadAd")
+                        .setAccessible()
+                        .execute();
+            } catch (Exception e) {
+                MoPubLog.e("Error loading custom event", e);
+            }
+        } else {
+            MoPubLog.e("Could not load custom event -- missing banner module");
+        }
     }
 
     protected void registerClick() {
@@ -204,7 +234,7 @@ private void setAdVisibility(final int visibility) {
 
     protected void adLoaded() {
         MoPubLog.d("adLoaded");
-        
+
         if (mBannerAdListener != null) {
             mBannerAdListener.onBannerLoaded(this);
         }
@@ -330,7 +360,7 @@ public boolean getTesting() {
 
     public void forceRefresh() {
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
             mCustomEventBannerAdapter = null;
         }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
similarity index 80%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
index bbbf6322..ff1bfc63 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
+import android.content.Context;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.os.Bundle;
@@ -11,16 +12,19 @@
 import android.view.Window;
 import android.view.WindowManager;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.Intents;
+import com.mopub.common.util.Reflection;
 import com.mopub.mraid.MraidVideoViewController;
-import com.mopub.nativeads.NativeVideoViewController;
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
+import static com.mopub.mobileads.BaseBroadcastReceiver.broadcastAction;
 
 public class MraidVideoPlayerActivity extends BaseVideoPlayerActivity implements BaseVideoViewController.BaseVideoViewControllerListener {
+    private static final String NATIVE_VIDEO_VIEW_CONTROLLER =
+            "com.mopub.nativeads.NativeVideoViewController";
+
     @Nullable private BaseVideoViewController mBaseVideoController;
     private long mBroadcastIdentifier;
 
@@ -39,7 +43,7 @@ protected void onCreate(Bundle savedInstanceState) {
             // This can happen if the activity was started without valid intent extras. We leave
             // mBaseVideoController set to null, and finish the activity immediately.
 
-            broadcastAction(this, mBroadcastIdentifier, ACTION_INTERSTITIAL_FAIL);
+            broadcastAction(this, mBroadcastIdentifier, IntentActions.ACTION_INTERSTITIAL_FAIL);
             finish();
             return;
         }
@@ -110,7 +114,23 @@ private BaseVideoViewController createVideoViewController(Bundle savedInstanceSt
         } else if ("mraid".equals(clazz)) {
             return new MraidVideoViewController(this, getIntent().getExtras(), savedInstanceState, this);
         } else if ("native".equals(clazz)) {
-            return new NativeVideoViewController(this, getIntent().getExtras(), savedInstanceState, this);
+            final Class[] constructorParameterClasses = { Context.class, Bundle.class, Bundle.class,
+                    BaseVideoViewController.BaseVideoViewControllerListener.class };
+            final Object[] constructorParameterValues =
+                    { this, getIntent().getExtras(), savedInstanceState, this };
+
+            if (!Reflection.classFound(NATIVE_VIDEO_VIEW_CONTROLLER)) {
+                throw new IllegalStateException("Missing native video module");
+            }
+
+            try {
+                return Reflection.instantiateClassWithConstructor(NATIVE_VIDEO_VIEW_CONTROLLER,
+                        BaseVideoViewController.class,
+                        constructorParameterClasses,
+                        constructorParameterValues);
+            } catch (Exception e) {
+                throw new IllegalStateException("Missing native video module");
+            }
         } else {
             throw new IllegalStateException("Unsupported video type: " + clazz);
         }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastErrorCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastErrorCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconConfig.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconConfig.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacro.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacro.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacroHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacroHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMacroHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacroHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastResource.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastResource.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
index 1efde370..2015a857 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
@@ -23,6 +23,7 @@
 import android.widget.RelativeLayout;
 import android.widget.VideoView;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.util.Dips;
@@ -35,9 +36,6 @@
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
 import static com.mopub.common.MoPubBrowser.MOPUB_BROWSER_REQUEST_CODE;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.VastXmlManagerAggregator.ADS_BY_AD_SLOT_ID;
 import static com.mopub.mobileads.VastXmlManagerAggregator.SOCIAL_ACTIONS_AD_SLOT_ID;
 import static com.mopub.network.TrackingRequest.makeVastTrackingHttpRequest;
@@ -142,7 +140,7 @@
             public boolean onTouch(View view, MotionEvent motionEvent) {
                 if (motionEvent.getAction() == MotionEvent.ACTION_UP && shouldAllowClickThrough()) {
                     mIsClosing = true;
-                    broadcastAction(ACTION_INTERSTITIAL_CLICK);
+                    broadcastAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
                     mVastVideoConfig.handleClickForResult(activity,
                             mIsVideoFinishedPlaying ? mDuration : getCurrentPosition(),
                             MOPUB_BROWSER_REQUEST_CODE);
@@ -265,7 +263,7 @@ protected void onCreate() {
         }
 
         mVastVideoConfig.handleImpression(getContext(), getCurrentPosition());
-        broadcastAction(ACTION_INTERSTITIAL_SHOW);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_SHOW);
     }
 
     @Override
@@ -296,7 +294,7 @@ protected void onPause() {
     @Override
     protected void onDestroy() {
         stopRunnables();
-        broadcastAction(ACTION_INTERSTITIAL_DISMISS);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_DISMISS);
 
         mVideoView.onDestroy();
     }
@@ -400,7 +398,7 @@ public void onCompletion(MediaPlayer mp) {
                 videoCompleted(false);
                 mIsVideoFinishedPlaying = true;
                 if (mVastVideoConfig.isRewardedVideo()) {
-                    broadcastAction(RewardedVideoBroadcastReceiver.ACTION_REWARDED_VIDEO_COMPLETE);
+                    broadcastAction(IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
                 }
 
                 // Only fire the completion tracker if we hit all the progress marks. Some Android implementations
@@ -826,7 +824,7 @@ private VastWebView createCompanionVastWebView(@NonNull final Context context,
         companionView.setVastWebViewClickListener(new VastWebView.VastWebViewClickListener() {
             @Override
             public void onVastWebViewClick() {
-                broadcastAction(ACTION_INTERSTITIAL_CLICK);
+                broadcastAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
                 makeVastTrackingHttpRequest(
                         vastCompanionAdConfig.getClickTrackers(),
                         null,
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWebView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWebView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoDownloader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoDownloader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoDownloader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoDownloader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/ViewGestureDetector.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/util/WebViews.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/WebViews.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/util/WebViews.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/WebViews.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/util/XmlUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/XmlUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/util/XmlUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/XmlUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidCommandException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidCommandException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidCommandException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidCommandException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidOrientation.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidOrientation.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidOrientation.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidOrientation.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidScreenMetrics.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/PlacementType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/PlacementType.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/PlacementType.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/PlacementType.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/ViewState.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/ViewState.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/ViewState.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/ViewState.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/AdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/AdResponse.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/BackoffPolicy.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/BackoffPolicy.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/BackoffPolicy.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/BackoffPolicy.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/CustomSSLSocketFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/HeaderUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/HeaderUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MaxWidthImageLoader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MaxWidthImageLoader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MoPubNetworkError.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubNetworkError.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MoPubNetworkError.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubNetworkError.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MoPubRequestQueue.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubRequestQueue.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MoPubRequestQueue.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubRequestQueue.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/Networking.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/Networking.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/Networking.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/Networking.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/RequestManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/RequestManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/RequestQueueHttpStack.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestQueueHttpStack.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/RequestQueueHttpStack.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestQueueHttpStack.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeBackoffPolicy.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequest.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequest.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequestManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequestManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeRequestManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequestManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
index f806a0a9..7d310976 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
@@ -25,6 +25,9 @@
 
 public class TrackingRequest extends Request<Void> {
 
+    // Retrying may cause duplicate impressions
+    private static final int ZERO_RETRIES = 0;
+
     public interface Listener extends Response.ErrorListener {
         void onResponse(@NonNull String url);
     }
@@ -37,7 +40,7 @@ private TrackingRequest(@NonNull final String url, @Nullable final Listener list
         setShouldCache(false);
         setRetryPolicy(new DefaultRetryPolicy(
                 DefaultRetryPolicy.DEFAULT_TIMEOUT_MS,
-                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                ZERO_RETRIES,
                 DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
     }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/build.gradle b/mopub-sdk/mopub-sdk-interstitial/build.gradle
new file mode 100644
index 00000000..fe56e07f
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+}
+
+project.description = 'MoPub Android SDK - Interstitial'
+project.ext.displayName = 'MoPub Android SDK - Interstitial'
+project.ext.projectName = 'mopub-sdk-interstitial'
+project.ext.uploadName = 'mopub-android-sdk-interstitial'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..643b97ff
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.interstitial">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
similarity index 65%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
index 0e19182f..bfe38ea0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
@@ -5,6 +5,8 @@
 import android.content.IntentFilter;
 import android.support.annotation.NonNull;
 
+import com.mopub.common.IntentActions;
+
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 
@@ -12,10 +14,6 @@
     private final CustomEventInterstitialListener mCustomEventInterstitialListener;
 
 
-    public static final String ACTION_INTERSTITIAL_FAIL = "com.mopub.action.interstitial.fail";
-    public static final String ACTION_INTERSTITIAL_SHOW = "com.mopub.action.interstitial.show";
-    public static final String ACTION_INTERSTITIAL_DISMISS = "com.mopub.action.interstitial.dismiss";
-    public static final String ACTION_INTERSTITIAL_CLICK = "com.mopub.action.interstitial.click";
     private static IntentFilter sIntentFilter;
 
 
@@ -29,10 +27,10 @@ public EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEv
     public IntentFilter getIntentFilter() {
         if (sIntentFilter == null) {
             sIntentFilter = new IntentFilter();
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_FAIL);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_SHOW);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_DISMISS);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_CLICK);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_FAIL);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_SHOW);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_DISMISS);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
         }
         return sIntentFilter;
     }
@@ -48,14 +46,14 @@ public void onReceive(Context context, Intent intent) {
         }
 
         final String action = intent.getAction();
-        if (ACTION_INTERSTITIAL_FAIL.equals(action)) {
+        if (IntentActions.ACTION_INTERSTITIAL_FAIL.equals(action)) {
             mCustomEventInterstitialListener.onInterstitialFailed(NETWORK_INVALID_STATE);
-        } else if (ACTION_INTERSTITIAL_SHOW.equals(action)) {
+        } else if (IntentActions.ACTION_INTERSTITIAL_SHOW.equals(action)) {
             mCustomEventInterstitialListener.onInterstitialShown();
-        } else if (ACTION_INTERSTITIAL_DISMISS.equals(action)) {
+        } else if (IntentActions.ACTION_INTERSTITIAL_DISMISS.equals(action)) {
             mCustomEventInterstitialListener.onInterstitialDismissed();
             unregister(this);
-        } else if (ACTION_INTERSTITIAL_CLICK.equals(action)) {
+        } else if (IntentActions.ACTION_INTERSTITIAL_CLICK.equals(action)) {
             mCustomEventInterstitialListener.onInterstitialClicked();
         }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
index 4e3a4480..649ea18f 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
@@ -27,10 +27,10 @@
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_APPEAR;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_CLOSE;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
 import static com.mopub.mobileads.HtmlWebViewClient.MOPUB_FAIL_LOAD;
 import static com.mopub.mobileads.HtmlWebViewClient.MOPUB_FINISH_LOAD;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
similarity index 78%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
index 8d82b33d..92bcde01 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
@@ -19,14 +19,14 @@
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.IDLE;
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.LOADING;
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.READY;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.SHOWING;
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.DESTROYED;
 
 public class MoPubInterstitial implements CustomEventInterstitialAdapter.CustomEventInterstitialAdapterListener {
     @VisibleForTesting
     enum InterstitialState {
         /**
-         * Either waiting for something to happen or already showing an interstitial. There is no
-         * interstitial currently loaded.
+         * Waiting to something to happen. There is no interstitial currently loaded.
          */
         IDLE,
 
@@ -40,6 +40,11 @@
          */
         READY,
 
+        /**
+         * The interstitial is showing.
+         */
+        SHOWING,
+
         /**
          * No longer able to accept events as the internal InterstitialView has been destroyed.
          */
@@ -77,47 +82,45 @@ private boolean attemptStateTransition(@NonNull final InterstitialState endState
      * Attempts to transition to the new state. All state transitions should go through this method.
      * Other methods should not be modifying mCurrentInterstitialState.
      *
-     * @param endState The desired end state.
-     * @param forced   If possible, forces the state to go to a particular state. This is not
-     *                 guaranteed to always set the endState but will allow certain irregular
-     *                 state transitions.
+     * @param endState     The desired end state.
+     * @param forceRefresh Whether or not this is part of a forceRefresh transition. Force
+     *                     refresh can happen from IDLE, LOADING, or READY. It will ignore
+     *                     the currently loading or loaded ad and attempt to load another.
      * @return {@code true} if a state change happened, {@code false} if no state change happened.
      */
     @VisibleForTesting
     boolean attemptStateTransition(@NonNull final InterstitialState endState,
-            boolean forced) {
+            boolean forceRefresh) {
         Preconditions.checkNotNull(endState);
 
         final InterstitialState startState = mCurrentInterstitialState;
 
         /**
-         * There are 32 potential cases. Any combination that is a no op will not be enumerated
-         * and returns false. The usual case goes IDLE -> LOADING -> READY -> IDLE. At any point,
-         * a forced transition into IDLE resets MoPubInterstitial and clears the interstitial
-         * adapter. Also, MoPubInterstitial can be destroyed arbitrarily, and once this is
-         * destroyed, it no longer can perform any state transitions.
+         * There are 50 potential cases. Any combination that is a no op will not be enumerated
+         * and returns false. The usual case goes IDLE -> LOADING -> READY -> SHOWING -> IDLE. At
+         * most points, having the force refresh flag into IDLE resets MoPubInterstitial and clears
+         * the interstitial adapter. This cannot happen while an interstitial is showing. Also,
+         * MoPubInterstitial can be destroyed arbitrarily, and once this is destroyed, it no longer
+         * can perform any state transitions.
          */
         switch (startState) {
             case IDLE:
                 switch(endState) {
-                    case IDLE:
-                        if (!forced) {
-                            // This is the case of trying to show(), but nothing was loaded
-                            MoPubLog.d("No interstitial loading or loaded.");
-                        }
-                        // Forcing into IDLE resets the state, but it has already been reset,
-                        // so this is a no op.
-                        return false;
                     case LOADING:
                         // Going from IDLE to LOADING is the usual load case
                         invalidateInterstitialAdapter();
                         mCurrentInterstitialState = LOADING;
-                        if (forced) {
+                        if (forceRefresh) {
+                            // Force-load means a pub-initiated force refresh.
                             mInterstitialView.forceRefresh();
                         } else {
+                            // Otherwise, do a normal load
                             mInterstitialView.loadAd();
                         }
                         return true;
+                    case SHOWING:
+                        MoPubLog.d("No interstitial loading or loaded.");
+                        return false;
                     case DESTROYED:
                         setInterstitialStateDestroyed();
                         return true;
@@ -127,27 +130,25 @@ boolean attemptStateTransition(@NonNull final InterstitialState endState,
             case LOADING:
                 switch (endState) {
                     case IDLE:
-                        if (forced) {
-                            // Being forced back into idle while loading resets MoPubInterstitial.
-                            invalidateInterstitialAdapter();
-                            mCurrentInterstitialState = IDLE;
-                            return true;
-                        } else {
-                            // No force to IDLE means show(), but this is still loading
-                            MoPubLog.d("Interstitial is not ready to be shown yet.");
-                            return false;
-                        }
+                        // Being forced back into idle while loading resets MoPubInterstitial while
+                        // not forced just means the load failed. Either way, it should reset the
+                        // state back into IDLE.
+                        invalidateInterstitialAdapter();
+                        mCurrentInterstitialState = IDLE;
+                        return true;
                     case LOADING:
-                        if (!forced) {
+                        if (!forceRefresh) {
                             // Cannot load more than one interstitial at a time
                             MoPubLog.d("Already loading an interstitial.");
                         }
-                        // If forced, it means a failover started. This is still loading.
                         return false;
                     case READY:
                         // This is the usual load finished transition
                         mCurrentInterstitialState = READY;
                         return true;
+                    case SHOWING:
+                        MoPubLog.d("Interstitial is not ready to be shown yet.");
+                        return false;
                     case DESTROYED:
                         setInterstitialStateDestroyed();
                         return true;
@@ -157,16 +158,13 @@ boolean attemptStateTransition(@NonNull final InterstitialState endState,
             case READY:
                 switch (endState) {
                     case IDLE:
-                        mCurrentInterstitialState = IDLE;
-                        if (forced) {
-                            // This happens on a reset
+                        if (forceRefresh) {
+                            // This happens on a force refresh
                             invalidateInterstitialAdapter();
-                            return true;
-                        } else {
-                            // This is the usual show interstitial when ready
-                            showCustomEventInterstitial();
+                            mCurrentInterstitialState = IDLE;
                             return true;
                         }
+                        return false;
                     case LOADING:
                         // This is to prevent loading another interstitial while one is loaded.
                         MoPubLog.d("Interstitial already loaded. Not loading another.");
@@ -175,6 +173,36 @@ boolean attemptStateTransition(@NonNull final InterstitialState endState,
                             mInterstitialAdListener.onInterstitialLoaded(this);
                         }
                         return false;
+                    case SHOWING:
+                        // This is the usual transition from ready to showing
+                        showCustomEventInterstitial();
+                        mCurrentInterstitialState = SHOWING;
+                        return true;
+                    case DESTROYED:
+                        setInterstitialStateDestroyed();
+                        return true;
+                    default:
+                        return false;
+                }
+            case SHOWING:
+                switch(endState) {
+                    case IDLE:
+                        if (forceRefresh) {
+                            MoPubLog.d("Cannot force refresh while showing an interstitial.");
+                            return false;
+                        }
+                        // This is the usual transition when done showing this interstitial
+                        invalidateInterstitialAdapter();
+                        mCurrentInterstitialState = IDLE;
+                        return true;
+                    case LOADING:
+                        if (!forceRefresh) {
+                            MoPubLog.d("Interstitial already showing. Not loading another.");
+                        }
+                        return false;
+                    case SHOWING:
+                        MoPubLog.d("Already showing an interstitial. Cannot show it again.");
+                        return false;
                     case DESTROYED:
                         setInterstitialStateDestroyed();
                         return true;
@@ -205,7 +233,7 @@ public void load() {
     }
 
     public boolean show() {
-        return attemptStateTransition(IDLE);
+        return attemptStateTransition(SHOWING);
     }
 
     public void forceRefresh() {
@@ -318,10 +346,8 @@ public void onCustomEventInterstitialFailed(@NonNull final MoPubErrorCode errorC
             return;
         }
 
-        if (mInterstitialView.loadFailUrl(errorCode)) {
-            attemptStateTransition(LOADING, true);
-        } else {
-            attemptStateTransition(IDLE, true);
+        if (!mInterstitialView.loadFailUrl(errorCode)) {
+            attemptStateTransition(IDLE);
         }
     }
 
@@ -357,6 +383,8 @@ public void onCustomEventInterstitialDismissed() {
             return;
         }
 
+        attemptStateTransition(IDLE);
+
         if (mInterstitialAdListener != null) {
             mInterstitialAdListener.onInterstitialDismissed(this);
         }
@@ -410,7 +438,7 @@ protected void trackImpression() {
 
         @Override
         protected void adFailed(MoPubErrorCode errorCode) {
-            attemptStateTransition(IDLE, true);
+            attemptStateTransition(IDLE);
             if (mInterstitialAdListener != null) {
                 mInterstitialAdListener.onInterstitialFailed(MoPubInterstitial.this, errorCode);
             }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
index 9b21623f..7431b47d 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -31,10 +31,10 @@
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_APPEAR;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_CLOSE;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
 
 public class MraidActivity extends BaseInterstitialActivity {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mraid/MraidInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mraid/MraidInterstitial.java
diff --git a/mopub-sdk/mopub-sdk-native-static/build.gradle b/mopub-sdk/mopub-sdk-native-static/build.gradle
new file mode 100644
index 00000000..26111f70
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-static/build.gradle
@@ -0,0 +1,12 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+    compile 'com.android.support:recyclerview-v7:23.1.1'
+}
+
+project.description = 'MoPub Android SDK - Native Static'
+project.ext.displayName = 'MoPub Android SDK - Native Static'
+project.ext.projectName = 'mopub-sdk-native-static'
+project.ext.uploadName = 'mopub-android-sdk-native-static'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..ee9149e4
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.native_static">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/AdRendererRegistry.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/AdapterHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdapterHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/AdapterHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdapterHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/BaseNativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/BaseNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/BaseNativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/BaseNativeAd.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ClickInterface.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClickInterface.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ClickInterface.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClickInterface.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ClientPositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNative.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNative.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionInterface.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionInterface.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionInterface.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionInterface.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionTracker.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionTracker.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/IntInterval.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/IntInterval.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/IntInterval.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/IntInterval.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
index a0f5b81b..afa9e583 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
@@ -8,7 +8,6 @@
 
 import com.mopub.common.VisibleForTesting;
 import com.mopub.nativeads.MoPubCustomEventNative.MoPubStaticNativeAd;
-import com.mopub.nativeads.MoPubCustomEventVideoNative.MoPubVideoNativeAd;
 import com.mopub.network.AdResponse;
 import com.mopub.network.TrackingRequest;
 
@@ -123,7 +122,7 @@ public boolean isDestroyed() {
      * Returns the {@link BaseNativeAd} object for this {@link NativeAd}. This object is created by
      * a {@link CustomEventNative} subclass after a successful ad request and is specific to the ad
      * source. If it comes from the MoPub Exchange or is a directly-served ad it will be of the type
-     * {@link MoPubStaticNativeAd} or {@link MoPubVideoNativeAd}. If it is returned by a mediated ad
+     * {@link MoPubStaticNativeAd} or MoPubVideoNativeAd. If it is returned by a mediated ad
      * network it may have another type.
      */
     @NonNull
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdData.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdData.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdData.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdData.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeClickHandler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeClickHandler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeErrorCode.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeErrorCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeErrorCode.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeErrorCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeImageHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeImageHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeRendererHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PlacementData.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PlacementData.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PlacementData.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PlacementData.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningRequest.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningRequest.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningRequest.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningRequest.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/RequestParameters.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/RequestParameters.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/RequestParameters.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/RequestParameters.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ServerPositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/SpinningProgressView.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/SpinningProgressView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/SpinningProgressView.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/SpinningProgressView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/TaskManager.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TaskManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/TaskManager.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TaskManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/TimestampWrapper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TimestampWrapper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/TimestampWrapper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TimestampWrapper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ViewBinder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ViewBinder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/VisibilityTracker.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/VisibilityTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/VisibilityTracker.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/VisibilityTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
diff --git a/mopub-sdk/mopub-sdk-native-video/build.gradle b/mopub-sdk/mopub-sdk-native-video/build.gradle
new file mode 100644
index 00000000..224045ef
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-video/build.gradle
@@ -0,0 +1,12 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-native-static')
+    compile 'com.google.android.exoplayer:exoplayer:r1.5.6'
+}
+
+project.description = 'MoPub Android SDK - Native Video'
+project.ext.displayName = 'MoPub Android SDK - Native Video'
+project.ext.projectName = 'mopub-sdk-native-video'
+project.ext.uploadName = 'mopub-android-sdk-native-video'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..dc41fe9a
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.native_video">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaLayout.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaLayout.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaLayout.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaLayout.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewBinder.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewBinder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewBinder.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewBinder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewHolder.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewHolder.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
index 876e2c30..33e80e12 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
@@ -132,7 +132,7 @@ public static NativeVideoController createForId(final long id,
     }
 
     @VisibleForTesting
-    static void setForId(final long id,
+    public static void setForId(final long id,
             @NonNull final NativeVideoController nativeVideoController) {
         sManagerMap.put(id, nativeVideoController);
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
index 99e7c58e..4d8e4e55 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
@@ -16,6 +16,7 @@
 import android.view.ViewGroup.LayoutParams;
 import android.widget.VideoView;
 
+import com.mopub.common.Constants;
 import com.mopub.common.Preconditions;
 import com.mopub.common.UrlAction;
 import com.mopub.common.UrlHandler;
@@ -34,9 +35,6 @@
 
     enum VideoState { NONE, LOADING, BUFFERING, PAUSED, PLAYING, ENDED, FAILED_LOAD }
 
-    @NonNull public static final String NATIVE_VIDEO_ID = "native_video_id";
-    @NonNull public static final String NATIVE_VAST_VIDEO_CONFIG = "native_vast_video_config";
-
     @NonNull private VideoState mVideoState;
     @NonNull private VastVideoConfig mVastVideoConfig;
     @NonNull private final NativeFullScreenVideoView mFullScreenVideoView;
@@ -57,7 +55,7 @@ public NativeVideoViewController(@NonNull final Context context,
         this(context, intentExtras, savedInstanceState, baseVideoViewControllerListener,
                 new NativeFullScreenVideoView(context,
                         context.getResources().getConfiguration().orientation,
-                        ((VastVideoConfig) intentExtras.get(NATIVE_VAST_VIDEO_CONFIG))
+                        ((VastVideoConfig) intentExtras.get(Constants.NATIVE_VAST_VIDEO_CONFIG))
                                 .getCustomCtaText()));
     }
 
@@ -74,9 +72,9 @@ public NativeVideoViewController(@NonNull final Context context,
         Preconditions.checkNotNull(fullScreenVideoView);
 
         mVideoState = VideoState.NONE;
-        mVastVideoConfig = ((VastVideoConfig) intentExtras.get(NATIVE_VAST_VIDEO_CONFIG));
+        mVastVideoConfig = ((VastVideoConfig) intentExtras.get(Constants.NATIVE_VAST_VIDEO_CONFIG));
         mFullScreenVideoView = fullScreenVideoView;
-        final long videoId = (long) intentExtras.get(NATIVE_VIDEO_ID);
+        final long videoId = (long) intentExtras.get(Constants.NATIVE_VIDEO_ID);
         mNativeVideoController = NativeVideoController.getForId(videoId);
 
         // Variables being checked below may be null but if they are it indicates
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/VideoNativeAd.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/VideoNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/VideoNativeAd.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/VideoNativeAd.java
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle b/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle
new file mode 100644
index 00000000..f9ad623a
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-interstitial')
+}
+
+project.description = 'MoPub Android SDK - Rewarded Video'
+project.ext.displayName = 'MoPub Android SDK - Rewarded Video'
+project.ext.projectName = 'mopub-sdk-rewardedvideo'
+project.ext.uploadName = 'mopub-android-sdk-rewardedvideo'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..0e4559c9
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.rewarded_video">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubReward.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/common/MoPubReward.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubReward.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/common/MoPubReward.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
index fab2d5d8..534d2c6a 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
@@ -58,8 +58,7 @@
     @NonNull private final AdRequestStatusMapping mAdRequestStatus;
     @NonNull private final RewardedVideoData mRewardedVideoData;
     @Nullable private MoPubRewardedVideoListener mVideoListener;
-    private final long mBroadcastIdentifier;
-    
+
     @NonNull private final Set<MediationSettings> mGlobalMediationSettings;
     @NonNull private final Map<String, Set<MediationSettings>> mInstanceMediationSettings;
 
@@ -119,8 +118,7 @@ private MoPubRewardedVideoManager(@NonNull Activity mainActivity, MediationSetti
         mInstanceMediationSettings = new HashMap<String, Set<MediationSettings>>();
         mCustomEventTimeoutHandler = new Handler();
         mTimeoutMap = new HashMap<String, Runnable>();
-        mBroadcastIdentifier = Utils.generateUniqueId();
-        
+
         mAdRequestStatus = new AdRequestStatusMapping();
     }
 
@@ -229,6 +227,15 @@ public static void loadVideo(@NonNull final String adUnitId,
             return;
         }
 
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (!TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            MoPubLog.d(String.format(Locale.US, "Did not queue rewarded video request for ad " +
+                    "unit %s. The video is already showing.", adUnitId));
+            return;
+        }
+
+
         // If any instance MediationSettings have been specified, update the internal map.
         // Note: This always clears the MediationSettings for the ad unit, whether or not any
         // MediationSettings have been provided.
@@ -292,7 +299,7 @@ public static void showVideo(@NonNull String adUnitId) {
                 sInstance.mRewardedVideoData.updateCustomEventLastShownRewardMapping(
                         customEvent.getClass(),
                         sInstance.mRewardedVideoData.getMoPubReward(adUnitId));
-                sInstance.mRewardedVideoData.setCurrentAdUnitId(adUnitId);
+                sInstance.mRewardedVideoData.setCurrentlyShowingAdUnitId(adUnitId);
                 sInstance.mAdRequestStatus.markPlayed(adUnitId);
                 customEvent.showVideo();
             } else {
@@ -354,7 +361,8 @@ private void onAdSuccess(AdResponse adResponse, String adUnitId) {
                     adResponse.getRewardedVideoCurrencyAmount());
             localExtras.put(DataKeys.AD_REPORT_KEY,
                     new AdReport(adUnitId, ClientMetadata.getInstance(mContext), adResponse));
-            localExtras.put(DataKeys.BROADCAST_IDENTIFIER_KEY, mBroadcastIdentifier);
+            localExtras.put(DataKeys.BROADCAST_IDENTIFIER_KEY, Utils.generateUniqueId());
+
             localExtras.put(DataKeys.REWARDED_VIDEO_CUSTOMER_ID,
                     mRewardedVideoData.getCustomerId());
             mRewardedVideoData.updateAdUnitRewardMapping(adUnitId,
@@ -476,8 +484,9 @@ protected void forEach(@NonNull final String moPubId) {
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoStarted(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        final String currentAdUnitId = sInstance.mRewardedVideoData.getCurrentAdUnitId();
-        if (TextUtils.isEmpty(currentAdUnitId)) {
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
             postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
                 @Override
                 protected void forEach(@NonNull final String moPubId) {
@@ -488,7 +497,7 @@ protected void forEach(@NonNull final String moPubId) {
             postToInstance(new Runnable() {
                 @Override
                 public void run() {
-                    onRewardedVideoStartedAction(currentAdUnitId);
+                    onRewardedVideoStartedAction(currentlyShowingAdUnitId);
                 }
             });
         }
@@ -507,8 +516,9 @@ private static void onRewardedVideoStartedAction(@NonNull final String adUnitId)
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoPlaybackError(@NonNull final Class<T> customEventClass, final String thirdPartyId, final MoPubErrorCode errorCode) {
-        final String currentAdUnitId = sInstance.mRewardedVideoData.getCurrentAdUnitId();
-        if (TextUtils.isEmpty(currentAdUnitId)) {
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
             postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
                 @Override
                 protected void forEach(@NonNull final String moPubId) {
@@ -519,7 +529,7 @@ protected void forEach(@NonNull final String moPubId) {
             postToInstance(new Runnable() {
                 @Override
                 public void run() {
-                    onRewardedVideoPlaybackErrorAction(currentAdUnitId, errorCode);
+                    onRewardedVideoPlaybackErrorAction(currentlyShowingAdUnitId, errorCode);
                 }
             });
         }
@@ -535,8 +545,9 @@ private static void onRewardedVideoPlaybackErrorAction(@NonNull final String adU
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoClicked(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        final String currentAdUnitId = sInstance.mRewardedVideoData.getCurrentAdUnitId();
-        if (TextUtils.isEmpty(currentAdUnitId)) {
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
             postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
                 @Override
                 protected void forEach(@NonNull final String moPubId) {
@@ -547,7 +558,7 @@ protected void forEach(@NonNull final String moPubId) {
             postToInstance(new Runnable() {
                 @Override
                 public void run() {
-                    onRewardedVideoClickedAction(currentAdUnitId);
+                    onRewardedVideoClickedAction(currentlyShowingAdUnitId);
                 }
             });
         }
@@ -563,8 +574,9 @@ private static void onRewardedVideoClickedAction(@NonNull final String adUnitId)
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoClosed(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        final String currentAdUnitId = sInstance.mRewardedVideoData.getCurrentAdUnitId();
-        if (TextUtils.isEmpty(currentAdUnitId)) {
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
             postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
                 @Override
                 protected void forEach(@NonNull final String moPubId) {
@@ -575,10 +587,11 @@ protected void forEach(@NonNull final String moPubId) {
             postToInstance(new Runnable() {
                 @Override
                 public void run() {
-                    onRewardedVideoClosedAction(currentAdUnitId);
+                    onRewardedVideoClosedAction(currentlyShowingAdUnitId);
                 }
             });
         }
+        sInstance.mRewardedVideoData.setCurrentlyShowingAdUnitId(null);
     }
 
     private static void onRewardedVideoClosedAction(@NonNull final String adUnitId) {
@@ -591,9 +604,10 @@ private static void onRewardedVideoClosedAction(@NonNull final String adUnitId)
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoCompleted(@NonNull final Class<T> customEventClass, final String thirdPartyId, @NonNull final MoPubReward moPubReward) {
         // Unlike other callbacks in this class, only call the listener once with all the MoPubIds in the matching set.
-        final String currentAdUnitId = sInstance.mRewardedVideoData.getCurrentAdUnitId();
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
         final String serverCompletionUrl = sInstance.mRewardedVideoData.getServerCompletionUrl(
-                currentAdUnitId);
+                currentlyShowingAdUnitId);
         if (TextUtils.isEmpty(serverCompletionUrl)) {
             postToInstance(new Runnable() {
                 @Override
@@ -601,11 +615,21 @@ public void run() {
                     final MoPubReward chosenReward = chooseReward(
                             sInstance.mRewardedVideoData.getLastShownMoPubReward(customEventClass),
                             moPubReward);
-                    final Set<String> moPubIds = sInstance.mRewardedVideoData.getMoPubIdsForAdNetwork(
-                            customEventClass, thirdPartyId);
-                    Set<String> rewarded = new HashSet<String>(moPubIds);
+
+                    Set<String> rewardedIds = new HashSet<String>();
+                    if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+                        final Set<String> moPubIds = sInstance.mRewardedVideoData.getMoPubIdsForAdNetwork(
+                                customEventClass, thirdPartyId);
+                        rewardedIds.addAll(moPubIds);
+                    } else {
+                        // If we know which ad unit is showing, only reward the currently showing
+                        // ad unit.
+                        rewardedIds.add(currentlyShowingAdUnitId);
+                    }
+
                     if (sInstance.mVideoListener != null) {
-                        sInstance.mVideoListener.onRewardedVideoCompleted(rewarded, chosenReward);
+                        sInstance.mVideoListener.onRewardedVideoCompleted(rewardedIds,
+                                chosenReward);
                     }
                 }
             });
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
new file mode 100644
index 00000000..7380fbf2
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
@@ -0,0 +1,53 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.MediationSettings;
+import com.mopub.common.Preconditions;
+
+/**
+ * MoPubRewardedVideos is a utility class that holds controller methods for other MoPub rewarded
+ * video classes.
+ */
+public class MoPubRewardedVideos {
+
+    public static void initializeRewardedVideo(@NonNull Activity activity,
+            MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(activity);
+
+        MoPubRewardedVideoManager.init(activity, mediationSettings);
+    }
+
+    public static void setRewardedVideoListener(@Nullable MoPubRewardedVideoListener listener) {
+        MoPubRewardedVideoManager.setVideoListener(listener);
+    }
+
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.loadVideo(adUnitId, null, mediationSettings);
+    }
+
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MoPubRewardedVideoManager.RequestParameters requestParameters,
+            @Nullable MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.loadVideo(adUnitId, requestParameters, mediationSettings);
+    }
+
+    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+
+        return MoPubRewardedVideoManager.hasVideo(adUnitId);
+    }
+
+    public static void showRewardedVideo(@NonNull String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.showVideo(adUnitId);
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
similarity index 85%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
index e53712e2..4ec3c111 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
@@ -6,9 +6,10 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.mopub.common.IntentActions;
+
 public class RewardedVideoBroadcastReceiver extends BaseBroadcastReceiver {
 
-    public static final String ACTION_REWARDED_VIDEO_COMPLETE = "com.mopub.action.rewardedvideo.complete";
     private static IntentFilter sIntentFilter;
 
     @Nullable
@@ -26,7 +27,7 @@ public RewardedVideoBroadcastReceiver(
     public IntentFilter getIntentFilter() {
         if (sIntentFilter == null) {
             sIntentFilter = new IntentFilter();
-            sIntentFilter.addAction(ACTION_REWARDED_VIDEO_COMPLETE);
+            sIntentFilter.addAction(IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
         }
         return sIntentFilter;
     }
@@ -42,7 +43,7 @@ public void onReceive(@NonNull final Context context, @NonNull final Intent inte
         }
 
         final String action = intent.getAction();
-        if (ACTION_REWARDED_VIDEO_COMPLETE.equals(action)) {
+        if (IntentActions.ACTION_REWARDED_VIDEO_COMPLETE.equals(action)) {
             mRewardedVideoListener.onVideoComplete();
             unregister(this);
         }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
index 64c5473a..1023820d 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
@@ -7,6 +7,7 @@
 
 import com.mopub.common.MoPubReward;
 import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
 
 import java.util.Collections;
 import java.util.HashMap;
@@ -33,7 +34,7 @@
     @NonNull
     private final Set<CustomEventRewardedVideo.CustomEventRewardedVideoListener> mAdNetworkListeners;
     @Nullable
-    private String mCurrentAdUnitId;
+    private String mCurrentlyShowingAdUnitId;
     @Nullable
     private String mCustomerId;
 
@@ -183,13 +184,13 @@ void associateCustomEventWithMoPubId(
         moPubIds.add(moPubId);
     }
 
-    void setCurrentAdUnitId(@Nullable final String currentAdUnitId) {
-        mCurrentAdUnitId = currentAdUnitId;
+    void setCurrentlyShowingAdUnitId(@Nullable final String currentAdUnitId) {
+        mCurrentlyShowingAdUnitId = currentAdUnitId;
     }
 
     @Nullable
-    String getCurrentAdUnitId() {
-        return mCurrentAdUnitId;
+    String getCurrentlyShowingAdUnitId() {
+        return mCurrentlyShowingAdUnitId;
     }
 
     void setCustomerId(@Nullable final String customerId) {
@@ -201,6 +202,19 @@ String getCustomerId() {
         return mCustomerId;
     }
 
+    @VisibleForTesting
+    @Deprecated
+    void clear() {
+        mAdUnitToCustomEventMap.clear();
+        mAdUnitToRewardMap.clear();
+        mAdUnitToServerCompletionUrlMap.clear();
+        mCustomEventToRewardMap.clear();
+        mCustomEventToMoPubIdMap.clear();
+        mAdNetworkListeners.clear();
+        mCurrentlyShowingAdUnitId = null;
+        mCustomerId = null;
+    }
+
     private static class TwoPartKey extends Pair<Class<? extends CustomEventRewardedVideo>, String> {
         @NonNull
         final Class<? extends CustomEventRewardedVideo> customEventClass;
diff --git a/mopub-sdk/publisher.gradle b/mopub-sdk/publisher.gradle
new file mode 100644
index 00000000..ee0f09ea
--- /dev/null
+++ b/mopub-sdk/publisher.gradle
@@ -0,0 +1,63 @@
+apply plugin: 'com.android.library'
+apply plugin: 'com.novoda.bintray-release'
+
+def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
+def gitUrl = 'https://github.com/mopub/mopub-android-sdk.git'
+def bintrayRepo = 'mopub-android-sdk'
+def bintrayUserOrg = 'mopub'
+// Put your credentials (bintray.user, bintray.apikey) in ~/.gradle/gradle.properties
+
+if (JavaVersion.current().isJava8Compatible()) {
+    allprojects {
+        tasks.withType(Javadoc) {
+            // The javadoc task in Java 8 is too strict and throws unnecessary syntax errors
+            // if our comments fail to abide by the new standard.
+            options.addStringOption('Xdoclint:none', '-quiet')
+        }
+    }
+}
+
+android.libraryVariants.all { variant ->
+    def name = variant.buildType.name
+    def task = project.tasks.create "jar${name.capitalize()}", Jar
+
+    task.dependsOn variant.javaCompile
+    task.from variant.javaCompile.destinationDir
+    artifacts.add('archives', task);
+}
+
+android.libraryVariants.all { variant ->
+    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
+        title = project.ext.displayName
+        description "Generates Javadoc for $variant.name."
+        source = variant.javaCompile.source
+        classpath += files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
+        classpath += project.configurations.compile
+
+        options {
+            links "http://docs.oracle.com/javase/7/docs/api/"
+            linksOffline "https://developer.android.com/reference","${android.sdkDirectory}/docs/reference"
+        }
+
+        exclude '**/BuildConfig.java'
+        exclude '**/R.java'
+    }
+}
+
+publish {
+    repoName = bintrayRepo
+    userOrg = bintrayUserOrg
+    groupId = project.group
+    artifactId = project.ext.projectName
+    uploadName = project.ext.uploadName
+    version = project.version
+    description = project.description
+    website = siteUrl
+    repository = gitUrl
+
+    bintrayUser = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
+    bintrayKey = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""
+
+    autoPublish = true
+    dryRun = false
+}
diff --git a/mopub-sdk/res/.README b/mopub-sdk/res/.README
deleted file mode 100644
index 902f3db1..00000000
--- a/mopub-sdk/res/.README
+++ /dev/null
@@ -1 +0,0 @@
-This res directory exists to allow building on Eclipse.
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
new file mode 100644
index 00000000..9b65bf09
--- /dev/null
+++ b/mopub-sdk/shared-build.gradle
@@ -0,0 +1,79 @@
+apply plugin: 'com.android.library'
+
+repositories {
+    mavenCentral()
+    jcenter()
+    flatDir {
+        dirs project(':mopub-sdk').file('../libs')
+    }
+}
+
+project.group = 'com.mopub'
+project.version = '4.9.0'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
+    lintOptions { abortOnError false }
+    useLibrary 'org.apache.http.legacy'
+
+    defaultConfig {
+        versionCode 44
+        versionName version
+        minSdkVersion 9
+        targetSdkVersion 23
+        consumerProguardFiles project(':mopub-sdk').file('proguard.txt')
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'src/main/AndroidManifest.xml'
+            java.srcDirs = ['src/main/java']
+            resources.srcDirs = ['src/main/resources']
+            aidl.srcDirs = ['src/main']
+            renderscript.srcDirs = ['src/main']
+            res.srcDirs = ['res']
+            assets.srcDirs = ['assets']
+        }
+    }
+
+    testOptions {
+        unitTests {
+            // This causes android platform methods from the test JAR
+            // to return null, false, etc instead of throwing an exception.
+            // We should periodically disable this and tackle the broken tests
+            // as it exposes when we are hitting platform APIs in our tests.
+            // If these tests *require* platform APIs we may want to make them
+            // connected tests instead.
+            returnDefaultValues = true
+
+            // Test JVM settings since we have a lot of classes loaded.
+            all {
+                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
+                forkEvery 200
+            }
+        }
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'),
+                    project(':mopub-sdk').file('proguard.txt')
+        }
+
+        debug {
+            minifyEnabled false
+        }
+    }
+
+    // Note: You will also need a local.properties file to set the location of the SDK in the same
+    // way that the existing SDK requires, using the sdk.dir property.
+    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no
+    // difference between the two methods, you can use the one you prefer.
+}
+
+dependencies {
+    compile 'com.android.support:support-v4:23.1.1'
+    compile 'com.android.support:support-annotations:23.1.1'
+}
diff --git a/mopub-sdk/AndroidManifest.xml b/mopub-sdk/src/main/AndroidManifest.xml
similarity index 100%
rename from mopub-sdk/AndroidManifest.xml
rename to mopub-sdk/src/main/AndroidManifest.xml
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
deleted file mode 100644
index c753e61e..00000000
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
+++ /dev/null
@@ -1,110 +0,0 @@
-package com.mopub.common;
-
-import android.app.Activity;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-
-import com.mopub.mobileads.MoPubRewardedVideoListener;
-import com.mopub.mobileads.MoPubRewardedVideoManager;
-import com.mopub.mobileads.MoPubRewardedVideoManager.RequestParameters;
-
-public class MoPub {
-    public static final String SDK_VERSION = "4.8.0";
-
-    public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
-
-    private static final int DEFAULT_LOCATION_PRECISION = 6;
-    private static volatile LocationAwareness sLocationLocationAwareness = LocationAwareness.NORMAL;
-    private static volatile int sLocationPrecision = DEFAULT_LOCATION_PRECISION;
-
-    public static LocationAwareness getLocationAwareness() {
-        return sLocationLocationAwareness;
-    }
-
-    public static void setLocationAwareness(LocationAwareness locationAwareness) {
-        sLocationLocationAwareness = locationAwareness;
-    }
-
-    public static int getLocationPrecision() {
-        return sLocationPrecision;
-    }
-
-    /**
-     * Sets the precision to use when the SDK's location awareness is set
-     * to {@link com.mopub.common.MoPub.LocationAwareness#TRUNCATED}.
-     */
-    public static void setLocationPrecision(int precision) {
-        sLocationPrecision = Math.min(Math.max(0, precision), DEFAULT_LOCATION_PRECISION);
-    }
-
-
-    //////// MoPub LifecycleListener messages ////////
-
-    public static void onCreate(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onCreate(activity);
-        updateActivity(activity);
-    }
-
-    public static void onStart(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onStart(activity);
-        updateActivity(activity);
-    }
-
-    public static void onPause(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onPause(activity);
-    }
-
-    public static void onResume(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onResume(activity);
-        updateActivity(activity);
-    }
-
-    public static void onRestart(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onRestart(activity);
-        updateActivity(activity);
-    }
-
-    public static void onStop(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onStop(activity);
-    }
-
-    public static void onDestroy(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onDestroy(activity);
-    }
-
-    public static void onBackPressed(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onBackPressed(activity);
-    }
-
-    ////////// MoPub RewardedVideoControl methods //////////
-    public static void initializeRewardedVideo(@NonNull Activity activity, MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.init(activity, mediationSettings);
-    }
-
-    private static void updateActivity(@NonNull Activity activity) {
-        MoPubRewardedVideoManager.updateActivity(activity);
-    }
-
-    public static void setRewardedVideoListener(@Nullable MoPubRewardedVideoListener listener) {
-        MoPubRewardedVideoManager.setVideoListener(listener);
-    }
-
-    public static void loadRewardedVideo(@NonNull String adUnitId,
-            @Nullable MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.loadVideo(adUnitId, null, mediationSettings);
-    }
-
-    public static void loadRewardedVideo(@NonNull String adUnitId,
-            @Nullable RequestParameters requestParameters,
-            @Nullable MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.loadVideo(adUnitId, requestParameters, mediationSettings);
-    }
-
-    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
-        return MoPubRewardedVideoManager.hasVideo(adUnitId);
-    }
-
-    public static void showRewardedVideo(@NonNull String adUnitId) {
-        MoPubRewardedVideoManager.showVideo(adUnitId);
-    }
-}
diff --git a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
index 7607dd22..511b8e04 100644
--- a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
+++ b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.mopub.sdk.android:mopub
-fabric-version=4.8.0+kit
+fabric-version=4.9.0+kit
 fabric-build-type=source
diff --git a/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java b/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java
new file mode 100644
index 00000000..b54eb796
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java
@@ -0,0 +1,188 @@
+package com.mopub.common;
+
+import android.app.Activity;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.common.util.Reflection;
+import com.mopub.mobileads.BuildConfig;
+import com.mopub.mobileads.MoPubRewardedVideoListener;
+import com.mopub.mobileads.MoPubRewardedVideoManager;
+import com.mopub.mobileads.MoPubRewardedVideos;
+
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.powermock.core.classloader.annotations.PowerMockIgnore;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+import org.powermock.modules.junit4.rule.PowerMockRule;
+import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.powermock.api.mockito.PowerMockito.mock;
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+import static org.powermock.api.mockito.PowerMockito.verifyStatic;
+import static org.powermock.api.mockito.PowerMockito.when;
+
+// If you encounter a VerifyError with PowerMock then you need to set Android Studio to use
+// JDK version 7u79 or later. Go to File > Project Structure > [Platform Settings] > SDK to
+// change the JDK version.
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21)
+@PowerMockIgnore({ "org.mockito.*", "org.robolectric.*", "android.*" })
+@PrepareForTest({MoPubRewardedVideoManager.class})
+public class MoPubTest {
+
+    private Activity mActivity;
+    private MediationSettings[] mMediationSettings;
+    private String mAdUnitId;
+    private MoPubRewardedVideoListener mockRewardedVideoListener;
+    private MoPubRewardedVideoManager.RequestParameters mockRequestParameters;
+
+    @Rule
+    public PowerMockRule rule = new PowerMockRule();
+
+    @Before
+    public void setup() {
+        mActivity = Robolectric.buildActivity(Activity.class).create().get();
+        mMediationSettings = new MediationSettings[0];
+        mAdUnitId = "123";
+
+        mockRewardedVideoListener = mock(MoPubRewardedVideoListener.class);
+        mockRequestParameters = mock(MoPubRewardedVideoManager.RequestParameters.class);
+
+        mockStatic(MoPubRewardedVideoManager.class);
+    }
+
+    @Test
+    public void initializeRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "initializeRewardedVideo", Activity.class, MediationSettings[].class)).isNotNull();
+    }
+
+    @Test
+    public void initializeRewardedVideo_withValidParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.initializeRewardedVideo(mActivity, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.init(mActivity, mMediationSettings);
+    }
+
+    @Test
+    public void updateActivity_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideoManager.class,
+                "updateActivity", Activity.class)).isNotNull();
+    }
+
+    @Test
+    public void updateActivity_withValidActivity_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.updateActivity(mActivity);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.updateActivity(mActivity);
+    }
+
+    @Test
+    public void setRewardedVideoListener_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "setRewardedVideoListener", MoPubRewardedVideoListener.class)).isNotNull();
+    }
+
+    @Test
+    public void setRewardedVideoListener_withValidListener_shouldSetMoPubRewardedVideoManagerListener() throws Exception {
+        MoPub.setRewardedVideoListener(mockRewardedVideoListener);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.setVideoListener(mockRewardedVideoListener);
+    }
+
+    @Test
+    public void setRewardedVideoListener_withNullListener_shouldCallMoPubRewardedVideoManagerListenerWithNull() throws Exception {
+        MoPub.setRewardedVideoListener(null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.setVideoListener(null);
+    }
+
+    @Test
+    public void loadRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "loadRewardedVideo", String.class,
+                MoPubRewardedVideoManager.RequestParameters.class,
+                MediationSettings[].class)).isNotNull();
+    }
+
+    @Test
+    public void loadRewardedVideo_withTwoNonNullParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withTwoParameters_withNullMediationSettings_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, (MediationSettings[]) null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, (MediationSettings[]) null);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeNonNullParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, mockRequestParameters, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, mockRequestParameters, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeParameters_withNullRequestParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, null, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeParameters_withNullRequestParameters_withNullMediationSettings_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, null, (MediationSettings[]) null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, (MediationSettings[]) null);
+    }
+
+    @Test
+    public void hasRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "hasRewardedVideo", String.class)).isNotNull();
+    }
+
+    @Test
+    public void hasRewardedVideo_withValidAdUnitId_shouldReturnTrue() throws Exception {
+        when(MoPubRewardedVideoManager.hasVideo(mAdUnitId)).thenReturn(true);
+
+        assertThat(MoPub.hasRewardedVideo(mAdUnitId)).isTrue();
+    }
+
+    @Test
+    public void hasRewardedVideo_withInvalidAdUnitId_shouldReturnFalse() throws Exception {
+        assertThat(MoPub.hasRewardedVideo("fakeId")).isFalse();
+    }
+
+    @Test
+    public void showRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "showRewardedVideo", String.class)).isNotNull();
+    }
+
+    @Test
+    public void showRewardedVideo_withNonNullAdUnitId_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.showRewardedVideo(mAdUnitId);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.showVideo(mAdUnitId);
+    }
+
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java b/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
index 9f3cf277..19552de1 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
@@ -4,13 +4,16 @@
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.MoPub;
 import com.mopub.common.MoPubHttpUrlConnection;
+import com.mopub.common.Preconditions;
 import com.mopub.common.event.EventDispatcher;
 import com.mopub.common.event.MoPubEvents;
 import com.mopub.common.factories.MethodBuilderFactory;
 import com.mopub.common.util.AsyncTasks;
 import com.mopub.common.util.DateAndTime;
+import com.mopub.common.util.Reflection;
 import com.mopub.common.util.test.support.ShadowAsyncTasks;
 import com.mopub.common.util.test.support.ShadowMoPubHttpUrlConnection;
+import com.mopub.common.util.test.support.ShadowReflection;
 import com.mopub.common.util.test.support.TestDateAndTime;
 import com.mopub.common.util.test.support.TestMethodBuilderFactory;
 import com.mopub.mobileads.factories.AdViewControllerFactory;
@@ -58,6 +61,7 @@ public InstrumentationConfiguration createClassLoaderConfig() {
         InstrumentationConfiguration.Builder builder = InstrumentationConfiguration.newBuilder();
         builder.addInstrumentedClass(AsyncTasks.class.getName());
         builder.addInstrumentedClass(MoPubHttpUrlConnection.class.getName());
+        builder.addInstrumentedClass(Reflection.class.getName());
         // To mitigate: https://github.com/robolectric/robolectric/issues/2129
         builder.addInstrumentedPackage("org.xyz.testMp");
         return builder.build();
@@ -73,6 +77,10 @@ public InstrumentationConfiguration createClassLoaderConfig() {
         public void prepareTest(Object test) {
             ClientMetadata.clearForTesting();
 
+            // Precondition exceptions should not be thrown during tests so that we can test
+            // for unexpected behavior even after failing a precondition.
+            Preconditions.NoThrow.setStrictMode(false);
+
             DateAndTime.setInstance(new TestDateAndTime());
             CustomEventBannerFactory.setInstance(new TestCustomEventBannerFactory());
             CustomEventInterstitialFactory.setInstance(new TestCustomEventInterstitialFactory());
@@ -89,6 +97,7 @@ public void prepareTest(Object test) {
 
             ShadowAsyncTasks.reset();
             ShadowMoPubHttpUrlConnection.reset();
+            ShadowReflection.reset();
             MoPubEvents.setEventDispatcher(mock(EventDispatcher.class));
             MoPub.setLocationAwareness(LocationAwareness.NORMAL);
             MoPub.setLocationPrecision(6);
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
index 8db4a294..a42b716d 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
@@ -62,6 +62,8 @@ public void tearDown() throws Exception {
         setDebugMode(false);
         // This may have been set to a mock during testing. Reset this class back to normal
         ManifestUtils.setFlagCheckUtil(new ManifestUtils.FlagCheckUtil());
+
+        addInterstitialModule();
     }
 
     @Test
@@ -108,6 +110,21 @@ public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldN
         assertThat(ShadowLog.getLogs()).isEmpty();
     }
 
+    @Test
+    public void displayWarningForMissingActivities_withoutInterstitialModule_withoutInterstitialActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
+        removeInterstitialModule();
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+
+        ShadowLog.setupLogging();
+        setDebugMode(true);
+
+        ManifestUtils.displayWarningForMissingActivities(context, requiredWebViewSdkActivities);
+
+        assertThat(ShadowToast.getLatestToast()).isNull();
+        assertThat(ShadowLog.getLogs()).isEmpty();
+    }
+
     @Test
      public void displayWarningForMissingActivities_withOneMissingActivity_shouldLogOnlyThatOne() throws Exception {
         RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
@@ -363,6 +380,15 @@ public void getRequiredWebViewSdkActivities_shouldIncludeRequiredActivities() th
         );
     }
 
+    @Test
+    public void getRequiredWebViewSdkActivities_withoutInterstitialModule_shouldNotHaveAllRequiredActivities() throws Exception {
+        removeInterstitialModule();
+        assertThat(requiredWebViewSdkActivities).containsOnly(
+                MraidVideoPlayerActivity.class,
+                MoPubBrowser.class
+        );
+    }
+
     @SuppressWarnings("unchecked")
     @Test
     public void getRequiredNativeSdkActivities_shouldIncludeRequiredActivities() throws Exception {
@@ -371,6 +397,24 @@ public void getRequiredNativeSdkActivities_shouldIncludeRequiredActivities() thr
         );
     }
 
+    private void addInterstitialModule() {
+        Class moPubActivityClass = com.mopub.mobileads.MoPubActivity.class;
+        Class mraidActivityClass = com.mopub.mobileads.MraidActivity.class;
+        if (!ManifestUtils.getRequiredWebViewSdkActivities().contains(moPubActivityClass)) {
+            ManifestUtils.getRequiredWebViewSdkActivities().add(moPubActivityClass);
+        }
+        if (!ManifestUtils.getRequiredWebViewSdkActivities().contains(mraidActivityClass)) {
+            ManifestUtils.getRequiredWebViewSdkActivities().add(mraidActivityClass);
+        }
+    }
+
+    private void removeInterstitialModule() {
+        Class moPubActivityClass = com.mopub.mobileads.MoPubActivity.class;
+        Class mraidActivityClass = com.mopub.mobileads.MraidActivity.class;
+        ManifestUtils.getRequiredWebViewSdkActivities().remove(moPubActivityClass);
+        ManifestUtils.getRequiredWebViewSdkActivities().remove(mraidActivityClass);
+    }
+
     private void setDebugMode(boolean enabled) {
         final ApplicationInfo applicationInfo = context.getApplicationInfo();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
index b36ae026..781d273a 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
@@ -9,6 +9,9 @@
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 
+import java.math.BigDecimal;
+import java.math.BigInteger;
+
 import static com.mopub.common.util.Reflection.MethodBuilder;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.fest.assertions.api.Assertions.fail;
@@ -158,4 +161,48 @@ public void execute_withAccessibility_shouldRunPrivateMethods() throws Exception
 
         assertThat(result).isEqualTo(-1);
     }
+
+    @Test
+    public void instantiateClassWithConstructor_withCorrectParameters_shouldInstiantiateObject() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+        Number integer = Reflection.instantiateClassWithConstructor("java.lang.Integer",
+                Number.class, classes, parameters);
+
+        assertThat(integer).isEqualTo(new Integer(30));
+    }
+
+    @Test
+    public void instantiateClassWithConstructor_withCorrectMultipleParameters_shouldInstiantiateObject() throws Exception {
+        Class[] classes = {BigInteger.class, int.class};
+        Object[] parameters = {new BigInteger("10"), 5};
+        Number bigDecimal = Reflection.instantiateClassWithConstructor("java.math.BigDecimal",
+                Number.class, classes, parameters);
+
+        assertThat(bigDecimal).isEqualTo(new BigDecimal(new BigInteger("10"), 5));
+    }
+
+    @Test(expected = ClassCastException.class)
+    public void instantiateClassWithConstructor_withInvalidSuperClass_shouldThrowException() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.Integer", String.class, classes, parameters);
+    }
+
+    @Test(expected = ClassNotFoundException.class)
+    public void instantiateClassWithConstructor_withClassNotFound_shouldThrowException() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.FakeClass123", Integer.class, classes, parameters);
+    }
+
+    @Test(expected = Exception.class)
+    public void instantiateClassWithConstructor_withMismatchingClassParameters_shouldThrowException() throws Exception {
+        Class[] classes = {boolean.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.Integer", Number.class, classes, parameters);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java b/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java
new file mode 100644
index 00000000..3446601f
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java
@@ -0,0 +1,33 @@
+package com.mopub.common.util.test.support;
+
+import com.mopub.common.util.Reflection;
+
+import org.robolectric.annotation.Implementation;
+import org.robolectric.annotation.Implements;
+import org.robolectric.util.ReflectionHelpers;
+
+import static org.robolectric.internal.Shadow.directlyOn;
+
+@Implements(Reflection.class)
+public class ShadowReflection {
+    private static boolean sNextClassNotFound;
+
+    public static void reset() {
+        sNextClassNotFound = false;
+    }
+
+    @Implementation
+    public static boolean classFound(final String className) throws Exception {
+        if (sNextClassNotFound) {
+            sNextClassNotFound = false;
+            return false;
+        }
+
+        return directlyOn(Reflection.class, "classFound",
+                new ReflectionHelpers.ClassParameter<>(String.class, className));
+    }
+
+    public static void setNextClassNotFound(final boolean nextNotFound) {
+        sNextClassNotFound = nextNotFound;
+    }
+}
\ No newline at end of file
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
index d5bb4ec5..e5f40f61 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
@@ -23,10 +23,10 @@
 import java.util.Set;
 
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
index df8821fe..d641f19c 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
@@ -23,8 +23,8 @@
 import static com.mopub.common.DataKeys.REDIRECT_URL_KEY;
 import static com.mopub.common.DataKeys.SCROLLABLE_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
index 14308b95..10dd9951 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
@@ -34,10 +34,10 @@
 import static com.mopub.common.DataKeys.REDIRECT_URL_KEY;
 import static com.mopub.common.DataKeys.SCROLLABLE_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.UNSPECIFIED;
 import static org.fest.assertions.api.Assertions.assertThat;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
index baa6c57c..c81d7166 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
@@ -1,6 +1,7 @@
 package com.mopub.mobileads;
 
 import android.app.Activity;
+import android.support.annotation.NonNull;
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.test.support.TestAdViewControllerFactory;
@@ -22,6 +23,11 @@
 import static com.mopub.mobileads.MoPubErrorCode.CANCELLED;
 import static com.mopub.mobileads.MoPubErrorCode.INTERNAL_ERROR;
 import static com.mopub.mobileads.MoPubErrorCode.UNSPECIFIED;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.DESTROYED;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.IDLE;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.LOADING;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.READY;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.SHOWING;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
@@ -29,7 +35,6 @@
 import static org.mockito.Mockito.reset;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.verifyZeroInteractions;
-
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MoPubInterstitialTest {
@@ -69,6 +74,7 @@ public void setUp() throws Exception {
     public void forceRefresh_shouldResetInterstitialViewAndMarkNotDestroyed() throws Exception {
         subject.setInterstitialView(interstitialView);
         subject.onCustomEventInterstitialLoaded();
+        subject.setCurrentInterstitialState(READY);
         subject.forceRefresh();
 
         assertThat(subject.isReady()).isFalse();
@@ -338,352 +344,345 @@ public void adFailed_shouldNotifyInterstitialAdListener() throws Exception {
     @Test
     public void attemptStateTransition_withIdleStartState() {
         /**
-         * IDLE can go to LOADING when load is called. IDLE can also go to DESTROYED if the
-         * interstitial view is destroyed.
+         * IDLE can go to LOADING when load or forceRefresh is called. IDLE can also go to
+         * DESTROYED if the interstitial view is destroyed.
          */
 
         subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        boolean stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, false);
+        subject.setCurrentInterstitialState(IDLE);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, true);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setInterstitialView(interstitialView);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, false);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.LOADING);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
         verify(customEventInterstitialAdapter).invalidate();
         verify(interstitialView).loadAd();
 
-        reset(customEventInterstitialAdapter, interstitialView);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setInterstitialView(interstitialView);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, true);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.LOADING);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
         verify(customEventInterstitialAdapter).invalidate();
         verify(interstitialView).forceRefresh();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, false);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(READY, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, true);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(READY, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, false);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.IDLE);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, true);
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
     }
 
     @Test
     public void attemptStateTransition_withLoadingStartState() {
         /**
-         * LOADING can go to IDLE if and only if it's a hard reset to IDLE. LOADING should go to
-         * READY when the interstitial is done loading. LOADING can go to DESTROYED if the
-         * interstitial view is destroyed.
+         * LOADING can go to IDLE if a force refresh happens. LOADING can also go into IDLE if an
+         * ad failed to load. LOADING should go to READY when the interstitial is done loading.
+         * LOADING can go to DESTROYED if the interstitial view is destroyed.
          */
 
         subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        boolean stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, false);
-        assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.LOADING);
-        verifyZeroInteractions(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(LOADING);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, true);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, false);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.LOADING);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, true);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.LOADING);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, false);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(READY, false);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, true);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(READY, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, false);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.LOADING);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, true);
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
     }
 
     @Test
     public void attemptStateTransition_withReadyStartState() {
         /**
-         * This state should succeed for going to IDLE. When it's forced, it's implicitly resetting
-         * the internals into ready state. If it's not forced, this is when the interstitial is
-         * shown. Also, READY can go into DESTROYED.
+         * This state should succeed for going to SHOWING. It is also possible to force refresh from
+         * here into IDLE. Also, READY can go into DESTROYED.
          */
 
         subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        boolean stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, false);
-        assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
-        verify(customEventInterstitialAdapter).showInterstitial();
+        subject.setCurrentInterstitialState(READY);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, true);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.IDLE);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
         verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, false);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
         verify(interstitialAdListener).onInterstitialLoaded(subject);
 
-        reset(customEventInterstitialAdapter, interstitialAdListener);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, true);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
         verify(interstitialAdListener).onInterstitialLoaded(subject);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, false);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(READY, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, true);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(READY, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.READY);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, false);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verify(customEventInterstitialAdapter).showInterstitial();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verify(customEventInterstitialAdapter).showInterstitial();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.READY);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, true);
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
         assertThat(stateDidChange).isTrue();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verify(customEventInterstitialAdapter).invalidate();
     }
 
+    @Test
+    public void attemptStateTransition_withShowingStartState() {
+        /**
+         * When the interstitial is dismissed, this should transition to IDLE. Otherwise, block
+         * other transitions except to DESTROYED. You cannot force refresh while an interstitial
+         * is showing.
+         */
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(SHOWING);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+    }
     @Test
     public void attemptStateTransition_withDestroyedStartState() {
         // All state transitions should fail if starting from a destroyed state
         subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        boolean stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, false);
+        subject.setCurrentInterstitialState(DESTROYED);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.IDLE, true);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, false);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.LOADING, true);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, false);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(READY, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.READY, true);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(READY, true);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, false);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
         verifyZeroInteractions(customEventInterstitialAdapter);
 
-        reset(customEventInterstitialAdapter);
-        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
-        subject.setCurrentInterstitialState(MoPubInterstitial.InterstitialState.DESTROYED);
-        stateDidChange = subject.attemptStateTransition(
-                MoPubInterstitial.InterstitialState.DESTROYED, true);
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
         assertThat(stateDidChange).isFalse();
-        assertThat(subject.getCurrentInterstitialState()).isEqualTo(
-                MoPubInterstitial.InterstitialState.DESTROYED);
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
     }
 
     private void loadCustomEvent() {
@@ -706,4 +705,12 @@ private void assertShowsCustomEventInterstitial(boolean shouldBeReady) {
             verify(customEventInterstitialAdapter, never()).showInterstitial();
         }
     }
+
+    private void resetMoPubInterstitial(
+            @NonNull final MoPubInterstitial.InterstitialState interstitialState) {
+        reset(customEventInterstitialAdapter, interstitialAdListener, interstitialView);
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setInterstitialView(interstitialView);
+        subject.setCurrentInterstitialState(interstitialState);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
index 4d392c6e..112b3ff3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
@@ -6,6 +6,7 @@
 import android.support.annotation.Nullable;
 
 import com.mopub.common.AdType;
+import com.mopub.common.DataKeys;
 import com.mopub.common.LifecycleListener;
 import com.mopub.common.MoPubReward;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -20,6 +21,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.mockito.ArgumentCaptor;
 import org.mockito.ArgumentMatcher;
 import org.mockito.Mock;
 import org.mockito.invocation.InvocationOnMock;
@@ -29,6 +31,7 @@
 import org.robolectric.shadows.ShadowLooper;
 
 import java.util.Map;
+import java.util.Set;
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
@@ -39,6 +42,7 @@
 import static org.mockito.Mockito.reset;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
+import static org.mockito.Mockito.verifyZeroInteractions;
 import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
@@ -46,6 +50,8 @@
 public class
         MoPubRewardedVideoManagerTest {
 
+    public static final String MOPUB_REWARD = "mopub_reward";
+
     @Mock
     MoPubRequestQueue mockRequestQueue;
     @Mock
@@ -77,6 +83,7 @@ public Object answer(final InvocationOnMock invocationOnMock) throws Throwable {
     public void tearDown() {
         // Unpause the main looper in case a test terminated while the looper was paused.
         ShadowLooper.unPauseMainLooper();
+        MoPubRewardedVideoManager.getRewardedVideoData().clear();
     }
 
     @Test
@@ -109,6 +116,22 @@ public void loadVideo_withCustomerIdInRequestParameters_shouldSetCustomerId() {
         ShadowLooper.unPauseMainLooper();
     }
 
+    @Test
+    public void loadVideo_withVideoAlreadyShowing_shouldNotLoadVideo() {
+        // To simulate that a video is showing
+        MoPubRewardedVideoManager.getRewardedVideoData().setCurrentlyShowingAdUnitId("testAdUnit");
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+
+        ShadowLooper.unPauseMainLooper();
+
+        verifyZeroInteractions(mockRequestQueue);
+    }
+
     @Test
     public void callbackMethods_withNullListener_shouldNotError() {
         // Clients can set RVM null.
@@ -129,10 +152,14 @@ public void callbackMethods_withNullListener_shouldNotError() {
 
         ShadowLooper.unPauseMainLooper();
 
-        MoPubRewardedVideoManager.onRewardedVideoClicked(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoClosed(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, "id!",
+        MoPubRewardedVideoManager.onRewardedVideoClicked(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoClosed(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID,
                 MoPubReward.success("test", 111));
 
         // The test passed because none of the above calls thew an exception even though the listener is null.
@@ -217,7 +244,7 @@ public void onAdSuccess_shouldInstantiateCustomEvent_andLoad() {
     public void onAdSuccess_withCustomEventAlreadyLoaded_shouldInvalidateOldCustomEvent() throws Exception {
         final CustomEventRewardedVideo mockCustomEvent = mock(CustomEventRewardedVideo.class);
         MoPubRewardedVideoManager.getRewardedVideoData().updateAdUnitCustomEventMapping(
-                "testAdUnit", mockCustomEvent, null, "id!");
+                "testAdUnit", mockCustomEvent, null, TestCustomEvent.AD_NETWORK_ID);
 
         AdResponse testResponse = new AdResponse.Builder()
                 .setCustomEventClassName(
@@ -259,6 +286,50 @@ public void onAdSuccess_withCustomEventAlreadyLoaded_shouldInvalidateOldCustomEv
         verifyNoMoreInteractions(mockCustomEvent);
     }
 
+    @Test
+    public void onAdSuccess_shouldHaveUniqueBroadcastIdsSetForEachCustomEvent() throws Exception {
+        AdResponse testResponse = new AdResponse.Builder()
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setAdType(AdType.CUSTOM)
+                .build();
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        // Load the first custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit1", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Get the first custom event's broadcast id
+        TestCustomEvent testCustomEvent1 = (TestCustomEvent)
+                MoPubRewardedVideoManager.getRewardedVideoData().getCustomEvent("testAdUnit1");
+        Long broadcastId1 = (Long) testCustomEvent1.getLocalExtras().get(
+                DataKeys.BROADCAST_IDENTIFIER_KEY);
+        assertThat(broadcastId1).isNotNull();
+
+        ShadowLooper.pauseMainLooper();
+
+        // Load the second custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit2", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Get the second custom event's broadcast id
+        TestCustomEvent testCustomEvent2 = (TestCustomEvent)
+                MoPubRewardedVideoManager.getRewardedVideoData().getCustomEvent("testAdUnit2");
+        Long broadcastId2 = (Long) testCustomEvent2.getLocalExtras().get(
+                DataKeys.BROADCAST_IDENTIFIER_KEY);
+        assertThat(broadcastId2).isNotNull();
+
+        // Make sure they're different
+        assertThat(broadcastId1).isNotEqualTo(broadcastId2);
+    }
+
     @Test
     public void onAdSuccess_shouldUpdateAdUnitRewardMapping() throws Exception {
         AdResponse testResponse = new AdResponse.Builder()
@@ -371,7 +442,7 @@ public void onAdFailure_shouldCallFailCallback() {
 
     @Test
     public void chooseReward_shouldReturnMoPubRewardOverNetworkReward() throws Exception {
-        MoPubReward moPubReward = MoPubReward.success("mopub_reward", 123);
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
         MoPubReward networkReward = MoPubReward.success("network_reward", 456);
 
         MoPubReward chosenReward =
@@ -381,16 +452,70 @@ public void chooseReward_shouldReturnMoPubRewardOverNetworkReward() throws Excep
 
     @Test
     public void chooseReward_withNetworkRewardNotSuccessful_shouldReturnNetworkReward() throws Exception {
-        MoPubReward moPubReward = MoPubReward.success("mopub_reward", 123);
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
         MoPubReward networkReward = MoPubReward.failure();
 
         MoPubReward chosenReward =
                 MoPubRewardedVideoManager.chooseReward(moPubReward, networkReward);
         assertThat(chosenReward).isEqualTo(networkReward);
     }
+    
+    @Test
+    public void onRewardedVideoCompleted_withEmptyServerCompletionUrl_withCurrentlyShowingAdUnitId_shouldNotifyRewardedVideoCompletedForOneAdUnitId() {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        RewardedVideoData rewardedVideoData = MoPubRewardedVideoManager.getRewardedVideoData();
+        rewardedVideoData.setCurrentlyShowingAdUnitId("testAdUnit1");
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit1", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit2", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        // Server completion url empty and custom event has no server reward set
+
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID,
+                moPubReward);
+        
+        ShadowLooper.unPauseMainLooper();
+
+        ArgumentCaptor<Set<String>> rewardedIdsCaptor = ArgumentCaptor.forClass((Class) Set.class);
+        verify(mockVideoListener).onRewardedVideoCompleted(rewardedIdsCaptor.capture(),
+                eq(moPubReward));
+        assertThat(rewardedIdsCaptor.getValue()).containsOnly("testAdUnit1");
+    }
+
+    @Test
+    public void onRewardedVideoCompleted_withEmptyServerCompletionUrl_withNoCurrentlyShowingAdUnitId_shouldNotifyRewardedVideoCompletedForAllAdUnitIds() {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        RewardedVideoData rewardedVideoData = MoPubRewardedVideoManager.getRewardedVideoData();
+        rewardedVideoData.setCurrentlyShowingAdUnitId(null);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit1", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit2", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit3", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        // Server completion url empty and custom event has no server reward set
+
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID,
+                moPubReward);
+
+        ShadowLooper.unPauseMainLooper();
+
+        ArgumentCaptor<Set<String>> rewardedIdsCaptor = ArgumentCaptor.forClass((Class) Set.class);
+        verify(mockVideoListener).onRewardedVideoCompleted(rewardedIdsCaptor.capture(),
+                eq(moPubReward));
+        assertThat(rewardedIdsCaptor.getValue()).containsOnly("testAdUnit1", "testAdUnit2",
+                "testAdUnit3");
+    }
 
     public static class TestCustomEvent extends CustomEventRewardedVideo {
-        protected boolean mPlayable = false;
+        public static final String AD_NETWORK_ID = "id!";
+
+        boolean mPlayable = false;
+        private Map<String, Object> mLocalExtras;
 
         @Nullable
         @Override
@@ -407,7 +532,7 @@ protected LifecycleListener getLifecycleListener() {
         @NonNull
         @Override
         protected String getAdNetworkId() {
-            return "id!";
+            return AD_NETWORK_ID;
         }
 
         @Override
@@ -428,7 +553,9 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
                 @NonNull final Map<String, String> serverExtras) throws Exception {
             // Do nothing because robolectric handlers execute immediately.
             mPlayable = true;
-            MoPubRewardedVideoManager.onRewardedVideoLoadSuccess(TestCustomEvent.class, "id!");
+            MoPubRewardedVideoManager.onRewardedVideoLoadSuccess(TestCustomEvent.class,
+                    TestCustomEvent.AD_NETWORK_ID);
+            mLocalExtras = localExtras;
         }
 
         @Override
@@ -438,7 +565,12 @@ protected boolean hasVideoAvailable() {
 
         @Override
         protected void showVideo() {
-            MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, "id!");
+            MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID);
+        }
+
+        @Nullable
+        Map<String, Object> getLocalExtras() {
+            return mLocalExtras;
         }
     }
 
@@ -448,7 +580,7 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
                 @NonNull final Map<String, Object> localExtras,
                 @NonNull final Map<String, String> serverExtras) throws Exception {
             mPlayable = false;
-            MoPubRewardedVideoManager.onRewardedVideoLoadFailure(NoVideoCustomEvent.class, "id!", MoPubErrorCode.NETWORK_NO_FILL);
+            MoPubRewardedVideoManager.onRewardedVideoLoadFailure(NoVideoCustomEvent.class, TestCustomEvent.AD_NETWORK_ID, MoPubErrorCode.NETWORK_NO_FILL);
         }
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
index 16fd1507..0b440d17 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
@@ -6,9 +6,12 @@
 import android.view.View;
 
 import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.common.util.Reflection;
+import com.mopub.common.util.test.support.ShadowReflection;
 import com.mopub.mobileads.test.support.TestAdViewControllerFactory;
 import com.mopub.mobileads.test.support.TestCustomEventBannerAdapterFactory;
 
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -28,7 +31,7 @@
 import static org.mockito.Mockito.verify;
 
 @RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
+@Config(constants = BuildConfig.class, shadows = {ShadowReflection.class})
 public class MoPubViewTest {
     private MoPubView subject;
     private Map<String,String> paramsMap = new HashMap<String, String>();
@@ -45,6 +48,11 @@ public void setup() {
         adViewController = TestAdViewControllerFactory.getSingletonMock();
     }
 
+    @After
+    public void tearDown() {
+        ShadowReflection.reset();
+    }
+
     @Test
     public void screenStateBroadcastReceiver_withActionUserPresent_shouldUnpauseRefresh() throws Exception {
         broadcastIntent(new Intent(Intent.ACTION_USER_PRESENT));
@@ -191,6 +199,57 @@ public void loadCustomEvent_whenParamsMapIsNull_shouldCallLoadFailUrl() throws E
         verify(customEventBannerAdapter, never()).loadAd();
     }
 
+    @Test
+    public void loadCustomEvent_withTwoCalls_shouldInvalidateAdapterOnce() throws Exception {
+        subject.loadCustomEvent("name", paramsMap);
+        subject.loadCustomEvent("name", paramsMap);
+
+        verify(customEventBannerAdapter).invalidate();
+    }
+
+    @Test
+    public void forceRefresh_withCallToLoadCustomEvent_shouldInvalidateAdapter() throws Exception {
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(customEventBannerAdapter).invalidate();
+    }
+
+    @Test
+    public void loadCustomEvent_withoutBannerModule_shouldNotLoadAd() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+
+        verify(customEventBannerAdapter, never()).loadAd();
+    }
+
+    @Test
+    public void forceRefresh_withoutBannerModule_withCallToLoadCustomEvent_shouldNotInvalidateAdapter() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(customEventBannerAdapter, never()).invalidate();
+    }
+
+    @Test
+    public void forceRefresh_withoutBannerModule_withCallToLoadCustomEvent_shouldForceRefreshAdViewController() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(adViewController).forceRefresh();
+    }
+
+    @Test
+    public void invalidateAdapter_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(CustomEventBannerAdapter.class,
+                "invalidate")).isNotNull();
+    }
+
     private void broadcastIntent(final Intent intent) {
         final List<ShadowApplication.Wrapper> wrappers = ShadowApplication.getInstance().getRegisteredReceivers();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
index dc0602f1..189d3ad8 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
@@ -33,9 +33,9 @@
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
index ef88b18d..8c120a01 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
@@ -1,16 +1,24 @@
 package com.mopub.mobileads;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
+import android.graphics.Bitmap;
+import android.os.Build;
 import android.os.Bundle;
+import android.view.TextureView;
 import android.view.View;
 import android.widget.ImageView;
 
+import com.mopub.common.Constants;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mraid.MraidVideoViewController;
+import com.mopub.nativeads.NativeFullScreenVideoView;
+import com.mopub.nativeads.NativeVideoController;
+import com.mopub.nativeads.NativeVideoViewController;
 
 import org.junit.Before;
 import org.junit.Ignore;
@@ -21,17 +29,22 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowActivity;
 
+import java.lang.reflect.Constructor;
+
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MraidVideoPlayerActivityTest {
     private static final String VAST = "vast";
     private static final String MRAID = "mraid";
+    private static final String NATIVE_VIDEO_VIEW_CONTROLLER =
+            "com.mopub.nativeads.NativeVideoViewController";
 
     private MraidVideoPlayerActivity subject;
     private long testBroadcastIdentifier;
@@ -63,6 +76,13 @@ public void onCreate_withMraidExtraKey_shouldUseMraidVideoViewController() throw
         assertThat(subject.getBaseVideoViewController()).isInstanceOf(MraidVideoViewController.class);
     }
 
+    @Test
+    public void onCreate_withNativeExtraKey_shouldUseNativeVideoViewController() throws Exception {
+        initializeSubjectForNative();
+
+        assertThat(subject.getBaseVideoViewController()).isInstanceOf(NativeVideoViewController.class);
+    }
+
     @Ignore("pending: this is currently impossible to write")
     @Test
     public void onCreate_shouldForwardOnCreateToViewController() throws Exception {
@@ -167,6 +187,16 @@ public void onStartActivityForResult_withNullClass_shouldNotStartAnActivity() th
         assertThat(intentForResult).isNull();
     }
 
+    @Test
+    public void createVideoViewController_withNativeVideoViewControllerReflectionConstructor_shouldExist() throws Exception {
+        final Class<?> nativeVideoViewController = Class.forName(NATIVE_VIDEO_VIEW_CONTROLLER);
+        final Constructor<?> declaredConstructor = nativeVideoViewController.getDeclaredConstructor(
+                Context.class, Bundle.class, Bundle.class,
+                BaseVideoViewController.BaseVideoViewControllerListener.class);
+
+        assertThat(declaredConstructor).isNotNull();
+    }
+
     private void initializeSubjectForMraid() {
         intent.putExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY, "mraid");
 
@@ -188,6 +218,32 @@ private void initializeSubjectForVast() {
                 .get();
     }
 
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
+    private void initializeSubjectForNative() {
+        intent.putExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY, "native");
+
+        NativeFullScreenVideoView mockFullScreenVideoView = mock(NativeFullScreenVideoView.class);
+        NativeVideoController mockVideoController = mock(NativeVideoController.class);
+        VastVideoConfig mockVastVideoConfig = mock(VastVideoConfig.class);
+        TextureView mockTextureView = mock(TextureView.class);
+        Bitmap mockBitmap = mock(Bitmap.class);
+
+        when(mockVastVideoConfig.getCustomCtaText()).thenReturn("Learn More");
+        when(mockFullScreenVideoView.getTextureView()).thenReturn(mockTextureView);
+        when(mockTextureView.getBitmap()).thenReturn(mockBitmap);
+
+        Bundle additionalExtras = new Bundle();
+        additionalExtras.putSerializable(Constants.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
+        additionalExtras.putLong(Constants.NATIVE_VIDEO_ID, 123);
+        NativeVideoController.setForId(123, mockVideoController);
+        intent.putExtras(additionalExtras);
+
+        subject = Robolectric.buildActivity(MraidVideoPlayerActivity.class)
+                .withIntent(intent)
+                .create()
+                .get();
+    }
+
     private void initializeSubjectWithMockViewController() {
         initializeSubjectForMraid();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java
index 64b328a4..97a711ec 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.test.support.SdkTestRunner;
 
 import org.fest.util.Sets;
@@ -41,7 +42,7 @@ public void setUp() throws Exception {
     @Test
     public void constructor_shouldSetIntentFilter() throws Exception {
         Set<String> expectedActions = Sets.newLinkedHashSet(
-                RewardedVideoBroadcastReceiver.ACTION_REWARDED_VIDEO_COMPLETE
+                IntentActions.ACTION_REWARDED_VIDEO_COMPLETE
         );
 
         final IntentFilter intentFilter = subject.getIntentFilter();
@@ -57,7 +58,7 @@ public void constructor_shouldSetIntentFilter() throws Exception {
     public void onReceive_withActionRewardedVideoComplete_shouldNotifyListener() {
         final Intent rewardedVideoCompleteIntent = new Intent();
         rewardedVideoCompleteIntent.setAction(
-                RewardedVideoBroadcastReceiver.ACTION_REWARDED_VIDEO_COMPLETE);
+                IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
         rewardedVideoCompleteIntent.putExtra("broadcastIdentifier", broadcastIdentifier);
 
         subject.onReceive(context, rewardedVideoCompleteIntent);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
index 30c32d09..1fa858ca 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
@@ -29,8 +29,8 @@
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static com.mopub.mobileads.VastManager.VastManagerListener;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
index f7cfbc63..1c063c3a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
@@ -65,9 +65,9 @@
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
 import static com.mopub.common.VolleyRequestMatcher.isUrl;
 import static com.mopub.mobileads.BaseVideoViewController.BaseVideoViewControllerListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.VastVideoViewController.CURRENT_POSITION;
 import static com.mopub.mobileads.VastVideoViewController.DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON;
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
index 3d38b27f..2744dc6e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
@@ -24,9 +24,9 @@
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
index eea82131..f3cd7f58 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
@@ -13,6 +13,7 @@
 import android.view.TextureView.SurfaceTextureListener;
 import android.view.View;
 
+import com.mopub.common.Constants;
 import com.mopub.common.event.EventDetails;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.BaseVideoPlayerActivity;
@@ -524,9 +525,9 @@ public void MediaLayout_clickListener_shouldPrepareToLeaveView_shouldTriggerImpr
                 .isEqualTo(MraidVideoPlayerActivity.class.getName());
         assertThat(startedActivity.getStringExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY))
                 .isEqualTo("native");
-        assertThat(startedActivity.getLongExtra(NativeVideoViewController.NATIVE_VIDEO_ID, 0L))
+        assertThat(startedActivity.getLongExtra(Constants.NATIVE_VIDEO_ID, 0L))
                 .isGreaterThan(0L);
-        assertThat(startedActivity.getSerializableExtra(NativeVideoViewController
+        assertThat(startedActivity.getSerializableExtra(Constants
                 .NATIVE_VAST_VIDEO_CONFIG))
                 .isEqualTo(mockVastVideoConfig);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
index 79307f38..6c35d102 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
@@ -12,6 +12,7 @@
 import android.view.View;
 import android.view.ViewGroup.LayoutParams;
 
+import com.mopub.common.Constants;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.BaseVideoViewController.BaseVideoViewControllerListener;
@@ -63,13 +64,13 @@ public void setUp() {
         activity = Robolectric.buildActivity(Activity.class).create().get();
 
         intentExtras = new Bundle();
-        intentExtras.putLong(NativeVideoViewController.NATIVE_VIDEO_ID, 123);
+        intentExtras.putLong(Constants.NATIVE_VIDEO_ID, 123);
         NativeVideoController.setForId(123, mockVideoController);
 
         when(mockVastVideoConfig.getCustomCtaText()).thenReturn("Learn More");
         when(mockFullScreenVideoView.getTextureView()).thenReturn(mockTextureView);
         when(mockTextureView.getBitmap()).thenReturn(mockBitmap);
-        intentExtras.putSerializable(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
+        intentExtras.putSerializable(Constants.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
 
         subject = new NativeVideoViewController(activity, intentExtras, null,
                 mockBaseVideoViewControllerListener, mockFullScreenVideoView);
@@ -100,7 +101,7 @@ public void constructor_withNullNativeVideoController_shouldThrowNPE() {
 
     @Test(expected = NullPointerException.class)
     public void onCreate_withNullNativeVideoController_shouldThrowNPE() {
-        intentExtras.remove(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG);
+        intentExtras.remove(Constants.NATIVE_VAST_VIDEO_CONFIG);
         subject = new NativeVideoViewController(activity, intentExtras, null,
                 mockBaseVideoViewControllerListener, mockFullScreenVideoView);
     }
diff --git a/mopub-sdk/src/test/resources/robolectric.properties b/mopub-sdk/src/test/resources/robolectric.properties
index dbe9f738..3cbe9a8d 100644
--- a/mopub-sdk/src/test/resources/robolectric.properties
+++ b/mopub-sdk/src/test/resources/robolectric.properties
@@ -1,2 +1,3 @@
 sdk=21
 shadows=com.mopub.nativeads.test.support.MoPubShadowDisplay,com.mopub.nativeads.test.support.MoPubShadowBitmap,com.mopub.mobileads.test.support.ShadowVastVideoView
+manifest=src/main/AndroidManifest.xml
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
index 281d020c..e0667c15 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,3 +1,4 @@
 rootProject.name = 'mopub-android'
-include ':mopub-sdk', ':mopub-sample'
-
+include ':mopub-sdk', ':mopub-sample', ':mopub-sdk:mopub-sdk-base', ':mopub-sdk:mopub-sdk-banner',
+        ':mopub-sdk:mopub-sdk-interstitial', ':mopub-sdk:mopub-sdk-rewardedvideo',
+        ':mopub-sdk:mopub-sdk-native-static', ':mopub-sdk:mopub-sdk-native-video'
