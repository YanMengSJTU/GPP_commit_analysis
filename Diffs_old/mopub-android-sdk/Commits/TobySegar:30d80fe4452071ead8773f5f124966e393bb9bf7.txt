diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index c9c83d92..640ea45b 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -20,6 +20,7 @@
 
 import com.mojang.base.events.InterstitialEvent;
 import com.mojang.base.json.Data;
+import com.jni.ge;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.mobileads.GooglePlayServicesInterstitial;
 import com.mopub.common.ClientMetadata;
@@ -120,7 +121,7 @@ public void onAppEvent(AppEvent appEvent) {
         }
     }
 
-    @Subscribe(priority = 1,threadMode = ThreadMode.MAIN)
+    @Subscribe(priority = 1, threadMode = ThreadMode.MAIN)
     public void onInterstitialEvent(InterstitialEvent event) {
         switch (event.event) {
             case Loaded:
@@ -155,7 +156,7 @@ public void onInterstitialEvent(InterstitialEvent event) {
     }
 
 
-    @Subscribe(priority = 1,threadMode = ThreadMode.MAIN)
+    @Subscribe(priority = 1, threadMode = ThreadMode.MAIN)
     public void onGameEvent(GameEvent gameEvent) {
         switch (gameEvent.event) {
             case PlayerConnected:
@@ -213,9 +214,10 @@ public static void earlyInitialization(Activity activity, final Runnable onIniti
         MobileAds.initialize(activity, GooglePlayServicesInterstitial.getAppId(activity));
     }
 
-    private static String getMopubId(Activity activity){
-        return  Helper.isDebugPackage(activity) ? DEBUG_MOPUB_INTERSTITIAL_ID : Data.Ads.Interstitial.mopubId;
+    private static String getMopubId(Activity activity) {
+        return Helper.isDebugPackage(activity) ? DEBUG_MOPUB_INTERSTITIAL_ID : Data.Ads.Interstitial.mopubId;
     }
+
     private static void initializeMoPub(Activity activity, final Runnable runAfter) {
         if (!MoPub.isSdkInitialized() && Data.Ads.enabled) {
             Logger.Log("::Ads", "::Initializing MoPub");
@@ -230,7 +232,7 @@ public void onInitializationFinished() {
                     });
         } else {
             Logger.Log("::Ads", "::Failed MoPub Initialization because" +
-                    " MoPub.isSdkInitialized() = " + MoPub.isSdkInitialized() + " Data.Ads.enabled " + Data.Ads.enabled +" (caused prolly by restarting activity after ConsentDialog)");
+                    " MoPub.isSdkInitialized() = " + MoPub.isSdkInitialized() + " Data.Ads.enabled " + Data.Ads.enabled + " (caused prolly by restarting activity after ConsentDialog)");
             runAfter.run();
         }
     }
@@ -298,22 +300,17 @@ private void nesmrtelnost(final boolean zapnut, long delay) {
             public void run() {
                 if (Data.hasMinecraft) {
                     try {
-                        if (zapnut) {
-                            interstitial.nesmrtelnostON();
-                        } else {
-                            interstitial.nesmrtelnostOFF();
-                        }
-                        Logger.Log("::Nesmrtelnos = " + zapnut);
-                    } catch (UnsatisfiedLinkError ignored) {
-                        Logger.Log("::!Failed to zapnut nesmrtelnost");
+                        ge.setInvicibility(zapnut);
+                    } catch (Exception e) {
+                        Analytics.i().sendException(e,"nesmrtelnost");
                     }
                 }
             }
-        },delay);
+        }, delay);
     }
 
     private void lockOutSE() {
-        if(Data.country != null && Data.country.equals("SE")){
+        if (Data.country != null && Data.country.equals("SE")) {
             Logger.Log("::Crating SE file");
             FileManager.i().put(FileManager.SE, null);
 
@@ -324,7 +321,7 @@ private void lockOutSE() {
             //sendAnalitics
             Analytics.i().sendOther("SECreated", Data.country);
 
-            Ads.kick("",activity);
+            Ads.kick("", activity);
         }
     }
 
@@ -356,7 +353,7 @@ public void run() {
                         decorView.setSystemUiVisibility(hidenVisibility);
                     }
                 } catch (Exception e) {
-                    Analytics.i().sendException(e,Analytics.getMethodName());
+                    Analytics.i().sendException(e, Analytics.getMethodName());
                 }
             }
         }, 4000);
@@ -374,7 +371,7 @@ public void run() {
                         try {
                             activity.finishAffinity();
                         } catch (Exception e) {
-                            Analytics.i().sendException(e,Analytics.getMethodName());
+                            Analytics.i().sendException(e, Analytics.getMethodName());
                             System.exit(0);
                         }
                     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index bf999a5b..5ffdc508 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -176,10 +176,6 @@ public void run() {
 
     }
 
-    public native void nesmrtelnostON();
-
-    public native void nesmrtelnostOFF();
-
     public void destroy() {
         if (mopubInterstitial != null) {
             mopubInterstitial.destroy();
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
index 37204e2d..f5154555 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -77,7 +77,7 @@ public static void preRenderHtml(@NonNull final Interstitial mraidInterstitial,
         Helper.runOnUiThread(new Runnable() {
             @Override
             public void run() {
-                preRenderHtml(mraidInterstitial, customEventInterstitialListener, htmlData,
+                preRenderHtml(mraidInterstitial, customEventInterstitialListener, getResponseString(adReport),
                         new MraidBridge.MraidWebView(context), broadcastIdentifier,
                         new MraidController(context, adReport, PlacementType.INTERSTITIAL));
             }
