diff --git a/.gitignore b/.gitignore
index 34d15a4f..5c46a08c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -17,3 +17,36 @@ mopub-sdk/mopub-sdk.iml
 mopub-sample/mopub-sample.iml
 robotium-sample/robotium-sample.iml
 
+#built application files
+*.apk
+*.ap_
+
+# files for the dex VM
+*.dex
+
+# Java class files
+*.class
+
+# generated files
+bin/
+gen/
+
+# Local configuration file (sdk path, etc)
+local.properties
+
+# Windows thumbnail db
+Thumbs.db
+
+# OSX files
+.DS_Store
+
+# Eclipse project files
+.classpath
+.project
+
+# Android Studio
+.idea
+#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.
+.gradle
+build/
+
diff --git a/mopub-sdk/.classpath b/mopub-sdk/.classpath
deleted file mode 100644
index a4dec28b..00000000
--- a/mopub-sdk/.classpath
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="src" path="src/main/java"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="lib" path="libs/android-support-v4.jar"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/mopub-sdk/.project b/mopub-sdk/.project
deleted file mode 100644
index bd2cd4f9..00000000
--- a/mopub-sdk/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>mopub-sdk</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
new file mode 100644
index 00000000..36ba9b3a
--- /dev/null
+++ b/mopub-sdk/build.gradle
@@ -0,0 +1,25 @@
+apply plugin: 'android-library'
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19.1.0"
+
+    defaultConfig {
+        applicationId "com.mopub.mobileads"
+        minSdkVersion 11
+        targetSdkVersion 19
+    }
+
+    dependencies {
+        compile 'com.android.support:support-v4:20.0.+'
+        compile 'com.google.android.gms:play-services:5.0.89'
+        compile files('libs/MMSDK-5.3.0.jar')
+    }
+
+    buildTypes {
+        release {
+            runProguard false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+    }
+}
diff --git a/mopub-sdk/build.properties b/mopub-sdk/build.properties
deleted file mode 100644
index ee52d86d..00000000
--- a/mopub-sdk/build.properties
+++ /dev/null
@@ -1,17 +0,0 @@
-# This file is used to override default values used by the Ant build system.
-#
-# This file must be checked in Version Control Systems, as it is
-# integral to the build system of your project.
-
-# This file is only used by the Ant script.
-
-# You can use this to override default values such as
-#  'source.dir' for the location of your java source folder and
-#  'out.dir' for the location of your output folder.
-
-# You can also use it define how the release builds are signed by declaring
-# the following properties:
-#  'key.store' for the location of your keystore and
-#  'key.alias' for the name of the key to use.
-# The password will be asked during the build when you use the 'release' target.
-
diff --git a/mopub-sdk/default.properties b/mopub-sdk/default.properties
deleted file mode 100644
index 64c51277..00000000
--- a/mopub-sdk/default.properties
+++ /dev/null
@@ -1,12 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-# 
-# This file must be checked in Version Control Systems.
-# 
-# To customize properties used by the Ant build system use,
-# "build.properties", and override values to adapt the script to your
-# project structure.
-
-# Project target.
-target=android-4
-android.library=true
diff --git a/mopub-sdk/libs/MMSDK-5.3.0.jar b/mopub-sdk/libs/MMSDK-5.3.0.jar
new file mode 100644
index 00000000..f60fd4b9
Binary files /dev/null and b/mopub-sdk/libs/MMSDK-5.3.0.jar differ
diff --git a/mopub-sdk/pom.xml b/mopub-sdk/pom.xml
deleted file mode 100644
index 2cbbc97f..00000000
--- a/mopub-sdk/pom.xml
+++ /dev/null
@@ -1,136 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>com.mopub.mobileads</groupId>
-        <artifactId>mopub-android</artifactId>
-        <version>1.0</version>
-    </parent>
-
-    <artifactId>mopub-sdk</artifactId>
-    <version>1.0.0-SNAPSHOT</version>
-    <packaging>jar</packaging>
-    <name>MoPub SDK</name>
-    <description>The SDK for MoPub developers.</description>
-
-    <properties>
-        <robolectric.version>2.1</robolectric.version>
-    </properties>
-
-    <dependencies>
-
-        <!--main-->
-        <dependency>
-            <groupId>com.android.support</groupId>
-            <artifactId>support-v4</artifactId>
-            <version>19.1.0</version>
-        </dependency>
-
-        <!--test-->
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpclient</artifactId>
-            <version>4.0.3</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpcore</artifactId>
-            <version>4.0.1</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.squareup</groupId>
-            <artifactId>fest-android</artifactId>
-            <version>1.0.1</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!-- this needs to come above fest-reflect or we pick up the wrong org.fest.util.Strings -->
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-assert-core</artifactId>
-            <version>2.0M9</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-reflect</artifactId>
-            <version>1.4</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.8.2</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-            <version>1.9.5</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!--android & robolectric-->
-        <dependency>
-            <groupId>org.robolectric</groupId>
-            <artifactId>robolectric</artifactId>
-            <version>${robolectric.version}</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>4.1.2</version>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.artifactId}</finalName>
-
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.3.2</version>
-                <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>3.8.2</version>
-                <configuration>
-                    <sdk>
-                        <!-- platform or api level (api level 4 = platform 1.6)-->
-                        <platform>16</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.6</version>
-                <configuration>
-                    <argLine>-Xms512m -Xmx1024m -XX:MaxPermSize=256m</argLine>
-                    <excludes>
-                        <exclude>**/Test*.java</exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/mopub-sdk/proguard.cfg b/mopub-sdk/proguard.cfg
deleted file mode 100644
index e009ace4..00000000
--- a/mopub-sdk/proguard.cfg
+++ /dev/null
@@ -1,44 +0,0 @@
--optimizationpasses 5
--dontusemixedcaseclassnames
--dontskipnonpubliclibraryclasses
--dontpreverify
--verbose
--optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
-
--keep public class * extends android.app.Activity
--keep public class * extends android.app.Application
--keep public class * extends android.app.Service
--keep public class * extends android.content.BroadcastReceiver
--keep public class * extends android.content.ContentProvider
--keep public class * extends android.app.backup.BackupAgentHelper
--keep public class * extends android.preference.Preference
--keep public class com.android.vending.licensing.ILicensingService
-
--keepclasseswithmembernames class * {
-    native <methods>;
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet);
-}
-
--keepclasseswithmembers class * {
-    public <init>(android.content.Context, android.util.AttributeSet, int);
-}
-
--keepclassmembers class * extends android.app.Activity {
-   public void *(android.view.View);
-}
-
--keepclassmembers enum * {
-    public static **[] values();
-    public static ** valueOf(java.lang.String);
-}
-
--keep class * implements android.os.Parcelable {
-    public static final android.os.Parcelable$Creator *;
-}
-
--keep class com.chartboost.sdk.** {
-    *;
-}
diff --git a/mopub-sdk/project.properties b/mopub-sdk/project.properties
deleted file mode 100644
index acfc74eb..00000000
--- a/mopub-sdk/project.properties
+++ /dev/null
@@ -1,12 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-#
-# This file must be checked in Version Control Systems.
-#
-# To customize properties used by the Ant build system use,
-# "ant.properties", and override values to adapt the script to your
-# project structure.
-
-# Project target.
-target=android-16
-android.library=true
diff --git a/mopub-sdk/AndroidManifest.xml b/mopub-sdk/src/main/AndroidManifest.xml
similarity index 100%
rename from mopub-sdk/AndroidManifest.xml
rename to mopub-sdk/src/main/AndroidManifest.xml
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/GooglePlayServicesBanner.java b/mopub-sdk/src/main/java/com/mopub/mobileads/GooglePlayServicesBanner.java
new file mode 100644
index 00000000..f5a26c6a
--- /dev/null
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/GooglePlayServicesBanner.java
@@ -0,0 +1,155 @@
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.google.android.gms.ads.AdListener;
+import com.google.android.gms.ads.AdRequest;
+import com.google.android.gms.ads.AdSize;
+import com.google.android.gms.ads.AdView;
+import com.mopub.common.util.Views;
+
+import java.util.Map;
+
+import static com.google.android.gms.ads.AdSize.BANNER;
+import static com.google.android.gms.ads.AdSize.FULL_BANNER;
+import static com.google.android.gms.ads.AdSize.LEADERBOARD;
+import static com.google.android.gms.ads.AdSize.MEDIUM_RECTANGLE;
+import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR;
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_NO_FILL;
+
+/*
+ * Compatible with version 5.0.77 of the Google Play Services SDK.
+ */
+
+// Note: AdMob ads will now use this class as Google has deprecated the AdMob SDK.
+
+class GooglePlayServicesBanner extends CustomEventBanner {
+    /*
+     * These keys are intended for MoPub internal use. Do not modify.
+     */
+    private static final String AD_UNIT_ID_KEY = "adUnitID";
+    private static final String AD_WIDTH_KEY = "adWidth";
+    private static final String AD_HEIGHT_KEY = "adHeight";
+    private static final String LOCATION_KEY = "location";
+
+    private CustomEventBannerListener mBannerListener;
+    private AdView mGoogleAdView;
+
+    @Override
+    protected void loadBanner(
+            final Context context,
+            final CustomEventBannerListener customEventBannerListener,
+            final Map<String, Object> localExtras,
+            final Map<String, String> serverExtras) {
+        mBannerListener = customEventBannerListener;
+
+        final String adUnitId;
+        final int adWidth;
+        final int adHeight;
+
+        if (extrasAreValid(serverExtras)) {
+            adUnitId = serverExtras.get(AD_UNIT_ID_KEY);
+            adWidth = Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
+            adHeight = Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
+        } else {
+            mBannerListener.onBannerFailed(ADAPTER_CONFIGURATION_ERROR);
+            return;
+        }
+
+        mGoogleAdView = new AdView(context);
+        mGoogleAdView.setAdListener(new AdViewListener());
+        mGoogleAdView.setAdUnitId(adUnitId);
+
+        final AdSize adSize = calculateAdSize(adWidth, adHeight);
+        if (adSize == null) {
+            mBannerListener.onBannerFailed(ADAPTER_CONFIGURATION_ERROR);
+            return;
+        }
+
+        mGoogleAdView.setAdSize(adSize);
+
+        final AdRequest adRequest = new AdRequest.Builder().build();
+
+        mGoogleAdView.loadAd(adRequest);
+    }
+
+    @Override
+    protected void onInvalidate() {
+        Views.removeFromParent(mGoogleAdView);
+        if (mGoogleAdView != null) {
+            mGoogleAdView.setAdListener(null);
+            mGoogleAdView.destroy();
+        }
+    }
+
+    private boolean extrasAreValid(Map<String, String> serverExtras) {
+        try {
+            Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
+            Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
+        } catch (NumberFormatException e) {
+            return false;
+        }
+
+        return serverExtras.containsKey(AD_UNIT_ID_KEY);
+    }
+
+    private AdSize calculateAdSize(int width, int height) {
+        // Use the smallest AdSize that will properly contain the adView
+        if (width <= BANNER.getWidth() && height <= BANNER.getHeight()) {
+            return BANNER;
+        } else if (width <= MEDIUM_RECTANGLE.getWidth() && height <= MEDIUM_RECTANGLE.getHeight()) {
+            return MEDIUM_RECTANGLE;
+        } else if (width <= FULL_BANNER.getWidth() && height <= FULL_BANNER.getHeight()) {
+            return FULL_BANNER;
+        } else if (width <= LEADERBOARD.getWidth() && height <= LEADERBOARD.getHeight()) {
+            return LEADERBOARD;
+        } else {
+            return null;
+        }
+    }
+
+    private class AdViewListener extends AdListener {
+        /*
+         * Google Play Services AdListener implementation
+         */
+        @Override
+        public void onAdClosed() {
+
+        }
+
+        @Override
+        public void onAdFailedToLoad(int errorCode) {
+            Log.d("MoPub", "Google Play Services banner ad failed to load.");
+            if (mBannerListener != null) {
+                mBannerListener.onBannerFailed(NETWORK_NO_FILL);
+            }
+        }
+
+        @Override
+        public void onAdLeftApplication() {
+
+        }
+
+        @Override
+        public void onAdLoaded() {
+            Log.d("MoPub", "Google Play Services banner ad loaded successfully. Showing ad...");
+            if (mBannerListener != null) {
+                mBannerListener.onBannerLoaded(mGoogleAdView);
+            }
+        }
+
+        @Override
+        public void onAdOpened() {
+            Log.d("MoPub", "Google Play Services banner ad clicked.");
+            if (mBannerListener != null) {
+                mBannerListener.onBannerClicked();
+            }
+        }
+    }
+
+    @Deprecated // for testing
+    AdView getGoogleAdView() {
+        return mGoogleAdView;
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java
new file mode 100644
index 00000000..cd49d93f
--- /dev/null
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java
@@ -0,0 +1,153 @@
+/*
+ * Copyright (c) 2011, MoPub Inc.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *
+ * * Redistributions of source code must retain the above copyright
+ *   notice, this list of conditions and the following disclaimer.
+ *
+ * * Redistributions in binary form must reproduce the above copyright
+ *   notice, this list of conditions and the following disclaimer in the
+ *   documentation and/or other materials provided with the distribution.
+ *
+ * * Neither the name of 'MoPub Inc.' nor the names of its contributors
+ *   may be used to endorse or promote products derived from this software
+ *   without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+ * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.location.Location;
+import android.util.Log;
+
+import com.millennialmedia.android.MMAd;
+import com.millennialmedia.android.MMAdView;
+import com.millennialmedia.android.MMException;
+import com.millennialmedia.android.MMRequest;
+import com.millennialmedia.android.MMSDK;
+import com.millennialmedia.android.RequestListener;
+
+import java.util.Map;
+
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_NO_FILL;
+
+/**
+ * Compatible with version 5.3.0 of the Millennial Media SDK.
+ */
+
+class MillennialBanner extends CustomEventBanner {
+    private MMAdView mMillennialAdView;
+    private CustomEventBannerListener mBannerListener;
+    public static final String APID_KEY = "adUnitID";
+    public static final String AD_WIDTH_KEY = "adWidth";
+    public static final String AD_HEIGHT_KEY = "adHeight";
+
+    @Override
+    protected void loadBanner(final Context context, final CustomEventBannerListener customEventBannerListener,
+                              final Map<String, Object> localExtras, final Map<String, String> serverExtras) {
+        mBannerListener = customEventBannerListener;
+
+
+        final String apid;
+        final int width;
+        final int height;
+        if (extrasAreValid(serverExtras)) {
+            apid = serverExtras.get(APID_KEY);
+            width = Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
+            height = Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
+        } else {
+            mBannerListener.onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
+            return;
+        }
+
+        MMSDK.initialize(context);
+
+        mMillennialAdView = new MMAdView(context);
+        mMillennialAdView.setListener(new MillennialBannerRequestListener());
+
+        mMillennialAdView.setApid(apid);
+        mMillennialAdView.setWidth(width);
+        mMillennialAdView.setHeight(height);
+
+        final Location location = (Location) localExtras.get("location");
+        if (location != null) {
+            MMRequest.setUserLocation(location);
+        }
+
+        mMillennialAdView.setMMRequest(new MMRequest());
+        mMillennialAdView.setId(MMSDK.getDefaultAdId());
+        AdViewController.setShouldHonorServerDimensions(mMillennialAdView);
+        mMillennialAdView.getAd();
+    }
+
+    @Override
+    protected void onInvalidate() {
+        mMillennialAdView.setListener(null);
+    }
+
+    private boolean extrasAreValid(final Map<String, String> serverExtras) {
+        try {
+            Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
+            Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
+        } catch (NumberFormatException e) {
+            return false;
+        }
+
+        return serverExtras.containsKey(APID_KEY);
+    }
+
+    class MillennialBannerRequestListener implements RequestListener {
+        @Override
+        public void MMAdOverlayLaunched(final MMAd mmAd) {
+            Log.d("MoPub", "Millennial banner ad Launched.");
+            mBannerListener.onBannerExpanded();
+        }
+
+        @Override
+        public void MMAdOverlayClosed(final MMAd mmAd) {
+            Log.d("MoPub", "Millennial banner ad closed.");
+            mBannerListener.onBannerCollapsed();
+        }
+
+        @Override
+        public void MMAdRequestIsCaching(final MMAd mmAd) {}
+
+        @Override
+        public void requestCompleted(final MMAd mmAd) {
+            Log.d("MoPub", "Millennial banner ad loaded successfully. Showing ad...");
+            mBannerListener.onBannerLoaded(mMillennialAdView);
+        }
+
+        @Override
+        public void requestFailed(final MMAd mmAd, final MMException e) {
+            Log.d("MoPub", "Millennial banner ad failed to load.");
+            mBannerListener.onBannerFailed(NETWORK_NO_FILL);
+        }
+
+        @Override
+        public void onSingleTap(final MMAd mmAd) {
+            mBannerListener.onBannerClicked();
+        }
+    }
+
+    @Deprecated
+    MMAdView getMMAdView() {
+        return mMillennialAdView;
+    }
+}
