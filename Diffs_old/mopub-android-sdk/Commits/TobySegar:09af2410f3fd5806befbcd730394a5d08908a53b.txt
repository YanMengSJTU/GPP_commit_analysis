diff --git a/CHANGELOG.md b/CHANGELOG.md
index 96807e14..970bbe9b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+## Version 5.7.1 (June 3, 2019)
+- **Bug Fixes**
+  - Handle `WebViewClient#onRenderProcessGone` for API 26+ devices so WebView crashes do not take the entire process with it. This only affects MoPub WebViews, and all WebViews in the application must handle this call in order for the process to not be killed.
+
 ## Version 5.7.0 (May 20, 2019)
 - **Features**
   - Impression Level Revenue Data - a data object that includes revenue information associated with each impression.
diff --git a/README.md b/README.md
index fd1fd247..2963a804 100644
--- a/README.md
+++ b/README.md
@@ -37,7 +37,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        implementation('com.mopub:mopub-sdk:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk:5.7.1@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        implementation('com.mopub:mopub-sdk-banner:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk-banner:5.7.1@aar') {
             transitive = true
         }
         
         // For interstitials
-        implementation('com.mopub:mopub-sdk-interstitial:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk-interstitial:5.7.1@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        implementation('com.mopub:mopub-sdk-rewardedvideo:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk-rewardedvideo:5.7.1@aar') {
             transitive = true
         }
 
         // For native static (images).
-        implementation('com.mopub:mopub-sdk-native-static:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-static:5.7.1@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        implementation('com.mopub:mopub-sdk-native-video:5.7.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-video:5.7.1@aar') {
             transitive = true
         }
     }
@@ -107,17 +107,8 @@ The MoPub SDK is available via:
 ## New in this Version
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
-- **Features**
-  - Impression Level Revenue Data - a data object that includes revenue information associated with each impression.
-  - Verizon Ads SDK now supported as a mediated network.
-  - Upgraded Gradle dependency to 5.4.1
-  - Upgraded Robolectric dependency to 4.2.1.
-  - Upgraded com.android.tools.build:gradle to 3.4.0.
-  - Sample app improvements.
-
 - **Bug Fixes**
-  - Handle empty impression trackers in VAST.
-  - Improved impression handling when MoPubView is reattached to the screen.
+  - Handle `WebViewClient#onRenderProcessGone` for API 26+ devices so WebView crashes do not take the entire process with it. This only affects MoPub WebViews, and all WebViews in the application must handle this call in order for the process to not be killed.
 
 ## Requirements
 
@@ -146,7 +137,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.7.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.7.1@aar') {
         transitive = true
     }
 }
@@ -155,7 +146,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.7.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.7.1@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
diff --git a/build.gradle b/build.gradle
index e3aaf275..48829eb5 100644
--- a/build.gradle
+++ b/build.gradle
@@ -9,7 +9,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.4.0'
-        classpath 'com.novoda:bintray-release:0.9'
+        classpath 'com.android.tools.build:gradle:3.4.1'
+        classpath 'com.novoda:bintray-release:0.9.1'
     }
 }
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 87c17497..f08119da 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -16,6 +16,19 @@
         android:name="android.permission.WRITE_EXTERNAL_STORAGE"
         tools:remove="android:maxSdkVersion" />
 
+    <uses-feature
+        android:name="android.hardware.bluetooth"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.camera"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.microphone"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.wifi"
+        android:required="false" />
+
     <application
         android:allowBackup="true"
         android:icon="@drawable/icon"
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index b9a534c6..9b0b3979 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -24,7 +24,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '5.7.0'
+project.version = '5.7.1'
 
 android {
     compileSdkVersion 28
@@ -36,7 +36,7 @@ android {
     }
 
     defaultConfig {
-        versionCode 68
+        versionCode 69
         versionName version
         minSdkVersion 16
         targetSdkVersion 28
@@ -75,6 +75,7 @@ android {
             res.srcDirs = ['res/main']
             assets.srcDirs = ['assets']
         }
+
     }
 
     // Note: You will also need a local.properties file to set the location of the SDK in the same 
@@ -88,6 +89,7 @@ dependencies {
     implementation 'com.adcolony:sdk:3.3.10'
     implementation 'com.google.android.gms:play-services-ads:17.2.0'
     implementation "com.applovin:applovin-sdk:9.4.2"
+    // Commented out since we cannot distribute 3rd party libraries
 //    implementation name: 'chartboost-7.3.1'
     implementation 'com.facebook.android:audience-network-sdk:5.3.0'
     implementation 'com.flurry.android:ads:11.6.0'
@@ -103,6 +105,7 @@ dependencies {
     implementation 'com.mopub.mediation:adcolony:3.3.10.0'
     implementation 'com.mopub.mediation:admob:17.2.0.1'
     implementation 'com.mopub.mediation:applovin:9.4.2.0'
+    // Commented out since we do not include the corresponding library
 //    implementation 'com.mopub.mediation:chartboost:7.3.1.4'
     implementation 'com.mopub.mediation:facebookaudiencenetwork:5.3.0.0'
     implementation 'com.mopub.mediation:flurry:11.6.0.0'
diff --git a/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java b/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
index 19274d1f..d513f43f 100644
--- a/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
+++ b/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
@@ -13,7 +13,7 @@
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
-import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.isEnabled;
 import static android.support.test.espresso.matcher.ViewMatchers.isRoot;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withResourceName;
@@ -98,7 +98,7 @@ public boolean waitForElement(@NonNull final ViewInteraction element, final int
         int i = 0;
         while (i++ < timeoutInSeconds * SAMPLES_PER_SEC) {
             try {
-                element.check(matches(isDisplayed()));
+                element.check(matches(isEnabled()));
                 return true;
             } catch (Exception e) {
                 try {
diff --git a/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java
new file mode 100644
index 00000000..ea944ecc
--- /dev/null
+++ b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java
@@ -0,0 +1,18 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.support.annotation.NonNull;
+
+import com.mopub.common.Preconditions;
+import com.mopub.common.SdkConfiguration;
+
+class SampleActivityUtils {
+    static void addDefaultNetworkConfiguration(@NonNull final SdkConfiguration.Builder builder) {
+        Preconditions.checkNotNull(builder);
+
+        // We have no default networks to initialize
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
index b4954715..c39a0904 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
@@ -22,7 +22,6 @@
 import android.view.MenuItem;
 import android.webkit.WebView;
 
-import com.facebook.ads.AdSettings;
 import com.mopub.common.Constants;
 import com.mopub.common.MoPub;
 import com.mopub.common.SdkConfiguration;
@@ -35,10 +34,7 @@
 import com.mopub.common.privacy.PersonalInfoManager;
 import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Reflection;
-import com.mopub.mobileads.FlurryAdapterConfiguration;
 import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.TapjoyAdapterConfiguration;
-import com.mopub.mobileads.TapjoyInterstitial;
 import com.mopub.network.ImpressionData;
 import com.mopub.network.ImpressionListener;
 import com.mopub.network.ImpressionsEmitter;
@@ -47,9 +43,7 @@
 
 import java.lang.reflect.Field;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 import java.util.concurrent.LinkedBlockingDeque;
 
 import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
@@ -133,16 +127,7 @@ protected void onCreate(Bundle savedInstanceState) {
             configBuilder.withLogLevel(INFO);
         }
 
-        final Map<String, String> flurryConfig = new HashMap<>();
-        flurryConfig.put("apiKey", "VX85BD4YBFNW629NN2SP");
-        configBuilder.withMediatedNetworkConfiguration(FlurryAdapterConfiguration.class.getName(),
-                flurryConfig);
-
-        final Map<String, String> tapjoyConfig = new HashMap<>();
-        tapjoyConfig.put(TapjoyInterstitial.SDK_KEY,
-                "cSOY1BYrRsSyJljkFWPdsgECRpZaaWDkWwXH1N1hIUbz1-c0o-DKATsLtckr");
-        configBuilder.withMediatedNetworkConfiguration(TapjoyAdapterConfiguration.class.getName(),
-                tapjoyConfig);
+        SampleActivityUtils.addDefaultNetworkConfiguration(configBuilder);
 
         MoPub.initializeSdk(this, configBuilder.build(), initSdkListener());
 
@@ -155,8 +140,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // Intercepts all logs including Level.FINEST so we can show a toast
         // that is not normally user-facing. This is only used for native ads.
         LoggingUtils.enableCanaryLogging(this);
-        // For Facebook, request for test ads
-        AdSettings.setTestMode(true);
+
 
         mImpressionListener = createImpressionsListener();
         ImpressionsEmitter.addListener(mImpressionListener);
diff --git a/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
index f888e179..3551c92d 100644
--- a/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
+++ b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
@@ -17,6 +17,7 @@
 import com.mopub.mobileads.AdViewController;
 import com.mopub.mobileads.CustomEventBanner;
 import com.mopub.mobileads.InternalCustomEventBannerListener;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.factories.MraidControllerFactory;
 import com.mopub.mraid.MraidController.MraidListener;
 
@@ -108,6 +109,12 @@ public void onFailedToLoad() {
                 mBannerListener.onBannerFailed(MRAID_LOAD_ERROR);
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(LOAD_FAILED, ADAPTER_NAME, errorCode.getIntCode(), errorCode);
+                mBannerListener.onBannerFailed(errorCode);
+            }
+
             @Override
             public void onExpand() {
                 mBannerListener.onBannerExpanded();
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
index 13ce2bdc..4d08bcb1 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
@@ -6,8 +6,12 @@
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
@@ -20,6 +24,8 @@
 import static com.mopub.common.util.Drawables.RIGHT_ARROW;
 import static com.mopub.common.util.Drawables.UNLEFT_ARROW;
 import static com.mopub.common.util.Drawables.UNRIGHT_ARROW;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 
 class BrowserWebViewClient extends WebViewClient {
 
@@ -98,4 +104,14 @@ public void onPageFinished(WebView view, String url) {
                 : UNRIGHT_ARROW.createDrawable(mMoPubBrowser);
         mMoPubBrowser.getForwardButton().setImageDrawable(forwardImageDrawable);
     }
+
+    @RequiresApi(Build.VERSION_CODES.O)
+    @Override
+    public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+        MoPubLog.log(CUSTOM, (detail != null && detail.didCrash())
+                ? RENDER_PROCESS_GONE_WITH_CRASH
+                : RENDER_PROCESS_GONE_UNSPECIFIED);
+        mMoPubBrowser.finish();
+        return true;
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index a28b3750..f7a5ea74 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -27,7 +27,7 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.INIT_FINISHED;
 
 public class MoPub {
-    public static final String SDK_VERSION = "5.7.0";
+    public static final String SDK_VERSION = "5.7.1";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
index 5c676bb6..61d8ac81 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
@@ -61,6 +61,8 @@ protected void performAction(
                 moPubSchemeListener.onClose();
             } else if ("failLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFailLoad();
+            } else if ("crash".equals(host)) {
+                moPubSchemeListener.onCrash();
             } else {
                 throw new IntentNotResolvableException("Could not handle MoPub Scheme url: " + uri);
             }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
index 03a7ffbd..52b7ec63 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
@@ -59,6 +59,7 @@ void urlHandlingFailed(@NonNull final String url,
         void onFinishLoad();
         void onClose();
         void onFailLoad();
+        void onCrash();
     }
 
     /**
@@ -172,6 +173,8 @@ public void urlHandlingFailed(@NonNull String url, @NonNull UrlAction lastFailed
         @Override public void onClose() { }
 
         @Override public void onFailLoad() { }
+
+        @Override public void onCrash() { }
     };
 
     @NonNull
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
index 20ede80f..2cde1610 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
@@ -11,9 +11,11 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
@@ -28,6 +30,8 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_NO;
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_YES;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 
 class ConsentDialogLayout extends CloseableLayout {
     static int FINISHED_LOADING = 101;
@@ -142,6 +146,15 @@ public void onPageFinished(WebView view, String url) {
             super.onPageFinished(view, url);
         }
 
+        @RequiresApi(Build.VERSION_CODES.O)
+        @Override
+        public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+            MoPubLog.log(CUSTOM, (detail != null && detail.didCrash())
+                    ? RENDER_PROCESS_GONE_WITH_CRASH
+                    : RENDER_PROCESS_GONE_UNSPECIFIED);
+            return true;
+        }
+
         @Override
         public boolean shouldOverrideUrlLoading(WebView view, String url) {
             if (URL_CONSENT_YES.equals(url)) {
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
index c80eb993..fdd9736b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
@@ -82,6 +82,9 @@ public void onFailLoad() {
                         mHtmlWebView.stopLoading();
                         mHtmlWebViewListener.onFailed(UNSPECIFIED);
                     }
+
+                    @Override
+                    public void onCrash() { }
                 })
                 .build().handleUrl(mContext, url, mHtmlWebView.wasClicked());
         return true;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
index b1b43ef8..320c1b75 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
@@ -16,6 +16,8 @@
 
     // Client ad load errors
     INTERNAL_ERROR("Unable to serve ad due to invalid internal state."),
+    RENDER_PROCESS_GONE_WITH_CRASH("Render process for this WebView has crashed."),
+    RENDER_PROCESS_GONE_UNSPECIFIED("Render process is gone for this WebView. Unspecified cause."),
     CANCELLED("Ad request was cancelled."),
     MISSING_AD_UNIT_ID("Unable to serve ad due to missing or empty ad unit ID."),
     NO_CONNECTION("No internet connection detected."),
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
index 57c8daec..259f311e 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
@@ -4,6 +4,7 @@
 
 package com.mopub.mraid;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Color;
 import android.graphics.Rect;
@@ -11,12 +12,14 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.View.OnTouchListener;
 import android.webkit.ConsoleMessage;
 import android.webkit.JsResult;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
@@ -29,6 +32,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.mobileads.BaseWebView;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.ViewGestureDetector;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
 import com.mopub.network.Networking;
@@ -43,6 +47,8 @@
 import java.util.Map;
 
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 import static com.mopub.network.MoPubRequestUtils.getQueryParamMap;
 
 public class MraidBridge {
@@ -53,6 +59,8 @@
 
         void onPageFailedToLoad();
 
+        void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode);
+
         void onVisibilityChanged(boolean isVisible);
 
         boolean onJsAlert(@NonNull String message, @NonNull JsResult result);
@@ -323,6 +331,13 @@ public void onReceivedError(@NonNull WebView view, int errorCode,
             MoPubLog.log(CUSTOM, "Error: " + description);
             super.onReceivedError(view, errorCode, description, failingUrl);
         }
+
+        @RequiresApi(Build.VERSION_CODES.O)
+        @Override
+        public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+            handleRenderProcessGone(detail);
+            return true;
+        }
     };
 
     @VisibleForTesting
@@ -395,6 +410,21 @@ private void handlePageFinished() {
         }
     }
 
+    @VisibleForTesting
+    @TargetApi(Build.VERSION_CODES.O)
+    void handleRenderProcessGone(@Nullable final RenderProcessGoneDetail detail) {
+        final MoPubErrorCode errorCode = (detail != null && detail.didCrash())
+                ? RENDER_PROCESS_GONE_WITH_CRASH
+                : RENDER_PROCESS_GONE_UNSPECIFIED;
+
+        MoPubLog.log(CUSTOM, errorCode);
+        detach();
+
+        if (mMraidBridgeListener != null) {
+            mMraidBridgeListener.onRenderProcessGone(errorCode);
+        }
+    }
+
     @VisibleForTesting
     void runCommand(@NonNull final MraidJavascriptCommand command,
             @NonNull Map<String, String> params)
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
index 636ec4c5..27d40be1 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
@@ -42,6 +42,7 @@
 import com.mopub.common.util.Dips;
 import com.mopub.common.util.Views;
 import com.mopub.mobileads.BaseWebView;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MraidVideoPlayerActivity;
 import com.mopub.mobileads.util.WebViews;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
@@ -49,10 +50,12 @@
 
 import java.lang.ref.WeakReference;
 import java.net.URI;
+import java.util.EnumSet;
 
 import static android.content.pm.ActivityInfo.CONFIG_ORIENTATION;
 import static android.content.pm.ActivityInfo.CONFIG_SCREEN_SIZE;
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.common.util.ManifestUtils.isDebuggable;
 import static com.mopub.common.util.Utils.bitMaskContainsFlag;
 
 public class MraidController {
@@ -61,6 +64,7 @@
     public interface MraidListener {
         void onLoaded(View view);
         void onFailedToLoad();
+        void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode);
         void onExpand();
         void onResize(final boolean toOriginalSize);
         void onOpen();
@@ -122,6 +126,25 @@
     // itself requires an orientation lock.
     @Nullable private Integer mOriginalActivityOrientation;
 
+    @NonNull private UrlHandler.MoPubSchemeListener mDebugSchemeListener
+            = new UrlHandler.MoPubSchemeListener() {
+        @Override
+        public void onFinishLoad() { }
+
+        @Override
+        public void onClose() { }
+
+        @Override
+        public void onFailLoad() { }
+
+        @Override
+        public void onCrash() {
+            if (mMraidWebView != null) {
+                mMraidWebView.loadUrl("chrome://crash");
+            }
+        }
+    };
+
     private boolean mAllowOrientationChange = true;
     private MraidOrientation mForceOrientation = MraidOrientation.NONE;
 
@@ -204,6 +227,11 @@ public void onPageFailedToLoad() {
             }
         }
 
+        @Override
+        public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+            handleRenderProcessGone(errorCode);
+        }
+
         @Override
         public void onVisibilityChanged(final boolean isVisible) {
             // The bridge only receives visibility events if there is no 2 part covering it
@@ -273,6 +301,11 @@ public void onPageFailedToLoad() {
             // no-op for two-part expandables. An expandable failing to load should not trigger failover.
         }
 
+        @Override
+        public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+            handleRenderProcessGone(errorCode);
+        }
+
         @Override
         public void onVisibilityChanged(final boolean isVisible) {
             // The original web view must see the 2-part bridges visibility
@@ -897,6 +930,13 @@ protected void handleClose() {
         }
     }
 
+    @VisibleForTesting
+    void handleRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+        if (mMraidListener != null) {
+            mMraidListener.onRenderProcessGone(errorCode);
+        }
+    }
+
     /*
      * Prefer this method over getAndMemoizeRootView() when the rootView is only being used for
      * screen size calculations (and not for adding/removing anything from the view hierarchy).
@@ -1122,20 +1162,28 @@ void handleOpen(@NonNull final String url) {
             mMraidListener.onOpen();
         }
 
-        UrlHandler.Builder builder = new UrlHandler.Builder();
+        final UrlHandler.Builder builder = new UrlHandler.Builder();
 
         if (mAdReport != null) {
             builder.withDspCreativeId(mAdReport.getDspCreativeId());
         }
 
-        builder.withSupportedUrlActions(
+        final EnumSet<UrlAction> urlActions = EnumSet.of(
                 UrlAction.IGNORE_ABOUT_SCHEME,
                 UrlAction.OPEN_NATIVE_BROWSER,
                 UrlAction.OPEN_IN_APP_BROWSER,
                 UrlAction.HANDLE_SHARE_TWEET,
                 UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                UrlAction.FOLLOW_DEEP_LINK)
-                .build().handleUrl(mContext, url);
+                UrlAction.FOLLOW_DEEP_LINK);
+
+        if (isDebuggable(mContext)) {
+            urlActions.add(UrlAction.HANDLE_MOPUB_SCHEME);
+            builder.withMoPubSchemeListener(mDebugSchemeListener);
+        }
+
+        builder.withSupportedUrlActions(urlActions)
+                .build()
+                .handleUrl(mContext, url);
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
index f5154555..d97083db 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -224,6 +224,12 @@ public void onFailedToLoad() {
                 finish();
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(CUSTOM, "Finishing the activity due to a problem: " + errorCode);
+                finish();
+            }
+
             public void onClose() {
                 MoPubLog.log(WILL_DISAPPEAR);
                 mMraidController.loadJavascript(WEB_VIEW_DID_CLOSE.getJavascript());
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
index b6aca649..0554410b 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
@@ -135,6 +135,12 @@ public void onFailedToLoad() {
                 finish();
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(CUSTOM, "Finishing the activity due to a problem: " + errorCode);
+                finish();
+            }
+
             public void onClose() {
                 mRewardedMraidController.loadJavascript(WEB_VIEW_DID_CLOSE.getJavascript());
                 finish();
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 480dd9b0..536eacb5 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -16,7 +16,7 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '5.7.0'
+project.version = '5.7.1'
 
 android {
     compileSdkVersion 27
@@ -24,7 +24,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 68
+        versionCode 69
         versionName version
         minSdkVersion 16
         targetSdkVersion 27
diff --git a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
index d3c79d61..e49457ee 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
@@ -9,6 +9,8 @@
 import android.content.Intent;
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
+import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 
 import com.mopub.common.test.support.SdkTestRunner;
@@ -18,9 +20,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.atLeastOnce;
 import static org.mockito.Mockito.doCallRealMethod;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
@@ -38,12 +42,14 @@
     private Context context;
     private MoPubBrowser mockMoPubBrowser;
     private WebView mockWebView;
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
 
     @Before
     public void setUp() {
         mockMoPubBrowser = mock(MoPubBrowser.class);
         context = Robolectric.buildActivity(Activity.class).create().get().getApplicationContext();
         mockWebView = mock(WebView.class);
+        mockRenderProcessGoneDetail = mock(RenderProcessGoneDetail.class);
 
         doCallRealMethod().when(mockMoPubBrowser).setWebView(mockWebView);
         doCallRealMethod().when(mockMoPubBrowser).getWebView();
@@ -171,6 +177,13 @@ public void shouldOverrideUrlLoading_withoutMatchingSupporedUrl_shouldReturnFals
         verify(mockMoPubBrowser, never()).finish();
     }
 
+    @Config(minSdk = Build.VERSION_CODES.O)
+    @Test
+    public void onRenderProcessGone_withAtLeastApi26_shouldReturnTrue_shouldFinish() {
+        assertThat(subject.onRenderProcessGone(mockWebView, mockRenderProcessGoneDetail)).isTrue();
+        verify(mockMoPubBrowser).finish();
+    }
+
     private void makeDeeplinkResolvable(String deeplink) {
         shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(Intent.ACTION_VIEW,
                 Uri.parse(deeplink)), new ResolveInfo());
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
index 45efbebe..80f27f6c 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
@@ -5,6 +5,8 @@
 package com.mopub.common.privacy;
 
 import android.app.Activity;
+import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
@@ -16,11 +18,15 @@
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import java.lang.reflect.Field;
 
+import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
 @RunWith(SdkTestRunner.class)
@@ -35,6 +41,7 @@
 
     private ConsentDialogLayout subject;
     private WebViewClient webViewClient;
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
 
     @Before
     public void setUp() throws Exception {
@@ -42,6 +49,7 @@ public void setUp() throws Exception {
         subject = new ConsentDialogLayout(activity);
         Field webClientField = Reflection.getPrivateField(ConsentDialogLayout.class, "webViewClient");
         webViewClient = (WebViewClient) webClientField.get(subject);
+        mockRenderProcessGoneDetail = mock(RenderProcessGoneDetail.class);
     }
 
     @Test
@@ -92,4 +100,10 @@ public void webViewClient_onPageFinished_shouldCall_onLoadProgress() {
 
         verify(pageLoadListener).onLoadProgress(ConsentDialogLayout.FINISHED_LOADING);
     }
+
+    @Config(minSdk = Build.VERSION_CODES.O)
+    @Test
+    public void webViewClient_onRenderProcessGone_withAtLeastApi26_shouldReturnTrue() {
+        assertThat(webViewClient.onRenderProcessGone(mockWebView, mockRenderProcessGoneDetail)).isTrue();
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
index a2ff830a..2c5df7fa 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
@@ -17,6 +17,7 @@
 
 import com.mopub.common.AdReport;
 import com.mopub.common.Constants;
+import com.mopub.common.CreativeOrientation;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mraid.MraidBridge;
 import com.mopub.mraid.MraidBridge.MraidWebView;
@@ -41,6 +42,7 @@
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.eq;
@@ -376,6 +378,12 @@ public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
         verify(broadcastReceiver).onReceive(any(Context.class), eq(expectedIntent));
     }
 
+    @Test
+    public void baseMraidListenerOnRenderProcessGone__shouldCallCustomEventInterstitialOnInterstitialFailed_whenMraidListenerOnFailure() throws Exception {
+
+
+    }
+
     private FrameLayout getContentView() {
         return (FrameLayout) ((ViewGroup) subject.findViewById(android.R.id.content)).getChildAt(0);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
index 699bf188..a17cd159 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
@@ -27,6 +27,7 @@
 
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.MoPubErrorCode.MRAID_LOAD_ERROR;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.eq;
@@ -166,6 +167,15 @@ public void bannerMraidListener_notInstanceOfInternalListener_shouldNotifyBanner
         verify(mockPublicListener).onBannerFailed(MoPubErrorCode.MRAID_LOAD_ERROR);
     }
 
+    @Test
+    public void bannerMraidListener_onRenderProcessGone_shouldNotifyBannerFailed() {
+        final MoPubErrorCode errorCode = RENDER_PROCESS_GONE_WITH_CRASH;
+        MraidListener mraidListener = captureMraidListener();
+        mraidListener.onRenderProcessGone(errorCode);
+
+        verify(mockBannerListener).onBannerFailed(errorCode);
+    }
+
     @Test
     public void trackMpxAndThirdPartyImpressions_shouldFireJavascriptWebViewDidAppear() {
         MraidListener mraidListener = captureMraidListener();
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
index bcea7356..747226e8 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
@@ -8,12 +8,14 @@
 import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebSettings;
 import android.webkit.WebViewClient;
 
 import com.mopub.common.AdReport;
 import com.mopub.common.Constants;
 import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
 import com.mopub.mraid.MraidBridge.MraidWebView;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
@@ -61,6 +63,8 @@
     private MraidWebView mockInterstitialWebView;
     @Mock
     private WebSettings mockWebSettings;
+    @Mock
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
     @Captor
     private ArgumentCaptor<WebViewClient> bannerWebViewClientCaptor;
 
@@ -279,6 +283,12 @@ public void handleShouldOverrideUrl_normalUrl_shouldReturnFalse() {
         assertThat(result).isFalse();
     }
 
+    @Test
+    public void handleRenderProcessGone_shouldDetach_shouldNotifyMraidBridgeListener() {
+        subjectBanner.handleRenderProcessGone(mockRenderProcessGoneDetail);
+        verify(mockBridgeListener).onRenderProcessGone(any(MoPubErrorCode.class));
+    }
+
     @Test(expected = MraidCommandException.class)
     public void runCommand_requiresClick_notClicked_shouldThrowException()
             throws MraidCommandException {
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
index a044eaeb..d3963263 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
@@ -21,6 +21,7 @@
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.common.util.Utils;
 import com.mopub.mobileads.BaseVideoPlayerActivityTest;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MraidVideoPlayerActivity;
 import com.mopub.mobileads.WebViewCacheService;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
@@ -778,6 +779,12 @@ public void handleSetOrientationProperties_forInterstitial_shouldChangeScreenOri
                 .SCREEN_ORIENTATION_LANDSCAPE);
     }
 
+    @Test
+    public void handleRenderProcessGone_shouldNotifyMraidListener() {
+        subject.handleRenderProcessGone(MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH);
+        verify(mockMraidListener).onRenderProcessGone(any(MoPubErrorCode.class));
+    }
+
     @Test
     public void shouldAllowForceOrientation_withNoneOrientation_shouldReturnTrue() throws PackageManager.NameNotFoundException {
         setMockActivityInfo(true, ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED,
