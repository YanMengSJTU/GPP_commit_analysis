diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index 38dfbc06..fd74346b 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -2,7 +2,6 @@
 
 
 import android.app.Activity;
-import android.content.SharedPreferences;
 import android.os.Handler;
 import android.widget.Toast;
 
@@ -10,14 +9,11 @@
 import com.mojang.base.InternetObserver;
 import com.mojang.base.events.AppEvent;
 import com.mojang.base.events.GameEvent;
-import com.mojang.base.json.Data;
 
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 import org.greenrobot.eventbus.ThreadMode;
 
-import java.util.Calendar;
-
 import static com.mojang.base.events.AppEvent.Destroy;
 import static com.mojang.base.events.AppEvent.OfflineAccepted;
 import static com.mojang.base.events.AppEvent.OnlineAccepted;
@@ -37,31 +33,19 @@
  * Controlls how ads are showed
  */
 public class Ads {
-    private final String TAG = this.getClass().getName();
-
     private Interstitial interstitial;
     private int numOfPlayers;
     private int timesBlockChanged;
-    private SharedPreferences sharedPreferences;
-    private Calendar calendar;
-    private static final String FIRST_RUN_DAY_KEY = "FirstRunDay";
-    static final String FIRST_RUN_KEY = "FirstRun";
-    private static final int NUM_FREE_DAYS = 2;
-    final int measureUnit = Calendar.DAY_OF_YEAR;
     private static Ads instance;
 
 
-    public Ads(Interstitial interstitial, SharedPreferences sharedPreferences, Calendar calendar) {
+    public Ads(Interstitial interstitial) {
         this.interstitial = interstitial;
         this.numOfPlayers = 0;
-        this.sharedPreferences = sharedPreferences;
-        this.calendar = calendar;
         if (Ads.instance == null) {
             Ads.instance = this;
         }
 
-        this.interstitial.setFreePeriod(isInFreePeriod(Data.Ads.Interstitial.freePeriodAllowed));
-
         EventBus.getDefault().register(this);
     }
 
@@ -80,9 +64,6 @@ public void onAppEvent(AppEvent appEvent) {
                 interstitial.destroy();
                 break;
             case Pause:
-                final int timeToSleep = 500;
-                Helper.wtf("Sleeping " + timeToSleep);
-                try {Thread.sleep(timeToSleep); } catch (InterruptedException e) { e.printStackTrace(); }
                 break;
             case Stop:
                 interstitial.lock.stopLock();
@@ -111,18 +92,23 @@ public void onGameEvent(GameEvent gameEvent) {
         switch (gameEvent.event) {
             case PlayerConnected:
                 numOfPlayers++;
+                Helper.wtf("Number of players in game = " + numOfPlayers);
                 if (numOfPlayers > 1) interstitial.lock.lockMultiplayer();
                 break;
             case PlayerDisconnected:
-                if (numOfPlayers > 0) numOfPlayers--;
+                if (numOfPlayers > 0) {
+                    numOfPlayers--;
+                    Helper.wtf("Number of players in game = " + numOfPlayers);
+                }
                 if (numOfPlayers == 1) interstitial.lock.unlockMultiplayer();
                 break;
             case PlayerJoinedMultiplayer:
                 interstitial.lock.lockMultiplayer();
+                interstitial.lock.forceOneShowLock();
                 break;
             case GamePlayStart:
                 interstitial.lock.gameUnlock();
-                interstitial.showFastDelayed(5000);
+                interstitial.show(5000);
                 break;
             case LeaveLevel:
                 if (numOfPlayers > 0) numOfPlayers--;
@@ -133,7 +119,6 @@ public void onGameEvent(GameEvent gameEvent) {
                 interstitial.showUnityAdsVideo();
                 break;
             case PauseScreenPushed:
-                Helper.wtf("Setting pausescreen SHowed to true");
                 interstitial.pauseScreenShowed = true;
                 break;
             case BlockChanged:
@@ -156,32 +141,6 @@ public void init() {
         }
     }
 
-    public boolean isInFreePeriod(boolean freePeriodAllowed) {
-        if (Helper.DEBUG) {
-            Helper.wtf(TAG, "isInFreePeriod: false cause debug");
-            return false;
-        }
-        //mark first run
-        final boolean runnedBefore = sharedPreferences.getBoolean(FIRST_RUN_KEY, false);
-        if (!runnedBefore) {
-            int today = calendar.get(measureUnit);
-            SharedPreferences.Editor editor = sharedPreferences.edit();
-            editor.putInt(FIRST_RUN_DAY_KEY, today);
-            editor.putBoolean(FIRST_RUN_KEY, true);
-            editor.apply();
-        }
-
-        if (freePeriodAllowed) {
-            int firstRunDay = sharedPreferences.getInt(FIRST_RUN_DAY_KEY, -1);
-            if (firstRunDay != -1) {
-                int today = calendar.get(measureUnit);
-                int endFreeDay = firstRunDay + NUM_FREE_DAYS;
-                return today >= firstRunDay && today <= endFreeDay;
-            }
-        }
-        return false;
-    }
-
     public static void kick(String text, final Activity activity) {
         if (activity != null) {
             EventBus.getDefault().post(new AppEvent(Stop));
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 88dde63a..eb9fdf4f 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -35,12 +35,11 @@
 public class Interstitial implements MoPubInterstitial.InterstitialAdListener {
 
     private static final long DISABLE_SCREEN_MILLS = 4000;
-    private MoPubInterstitial mopubInterstitial;
+    private @Nullable MoPubInterstitial mopubInterstitial;
     public final Activity minecraftActivity;
 
     private final Handler mainHandler;
     private String TAG = this.getClass().getName();
-    private boolean freePeriod;
     private final Runnable reloadRunnable;
     private double backOffPower = 1;
     private Runnable periodicShowRunnable;
@@ -48,7 +47,6 @@
     private final Runnable gapUnlockRunnable;
     private double periodicMills;
     private FastAd fastAd;
-    private boolean fastAdUsed;
     private boolean onLoadedOnce;
     private boolean periodicScheduled;
     public final Lock lock;
@@ -58,6 +56,7 @@
     public boolean dontBackPress;
     private int curentVolume;
     public AudioManager audioManager;
+    public boolean fastAdShowed;
 
     public Interstitial(final Activity activity) {
         this.minecraftActivity = activity;
@@ -70,7 +69,14 @@ public Interstitial(final Activity activity) {
         this.reloadRunnable = new Runnable() {
             @Override
             public void run() {
-                mopubInterstitial.load();
+                //mopub can be null if we use fast ad late
+                if(mopubInterstitial != null) {
+                    mopubInterstitial.load();
+                    return;
+                }
+                //this means we dont get onLoad ani onDismissed
+                //so we have to try manually again
+                mainHandler.postDelayed(this,5000);
             }
         };
         this.gapUnlockRunnable = new Runnable() {
@@ -132,7 +138,7 @@ public void run() {
         }, delay);
     }
 
-    public static void hideNavBar(Activity activity) {
+    private static void hideNavBar(Activity activity) {
         if (Data.hasMinecraft) {
             View decorView = activity.getWindow().getDecorView();
             int currentVis = decorView.getSystemUiVisibility();
@@ -184,26 +190,13 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
 
         callNativeBackPressed();
         hideNavigationBarDelayed(minecraftActivity);
-        vypniNesmrtelnost(15000);
+        nesmrtelnost(false, 15000);
     }
 
-    private void vypniNesmrtelnost(int delay) {
-        mainHandler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                Helper.wtf("Vypinam Nesmrtelnost");
-                if (Data.hasMinecraft) {
-                    try {
-                        nesmrtelnostOFF();
-                    }catch (UnsatisfiedLinkError ignored){};
-                }
-            }
-        },delay);
-    }
 
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialLoaded", true);
+        Helper.wtf("Interstitial: onInterstitialLoaded", true);
 
         if (!onLoadedOnce) {
             String country = getCountryCode();
@@ -234,10 +227,6 @@ private String getCountryCode() {
         }
     }
 
-    void setFreePeriod(boolean freePeriod) {
-        this.freePeriod = freePeriod;
-    }
-
     @Override
     public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
         Helper.wtf(TAG, "onInterstitialFailed: " + errorCode);
@@ -275,41 +264,51 @@ public boolean show() {
         boolean isMopubNull = mopubInterstitial == null;
         boolean isLocked = lock.isLocked();
         boolean isMopubReady = !isMopubNull && mopubInterstitial.isReady();
-        boolean isFreePeriod = freePeriod;
-        Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isLocked(false) = " + isLocked + "] " + "[isMopubReady(true) = " + isMopubReady + "] [isFreePeriod(false) = " + isFreePeriod + "]");
-        if (!isMopubNull && !isLocked && isMopubReady && !isFreePeriod) {
+        Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isLocked(false) = " + isLocked + "] " + "[isMopubReady(true) = " + isMopubReady + "]");
+        if (!fastAdShowed && fastAd != null && !isLocked) {
+            nesmrtelnost(true);
+            fastAd.show();
+        } else if (!isMopubNull && !isLocked && isMopubReady) {
             Helper.wtf("Showing mopubInterstitial", true);
-            if (Data.hasMinecraft) {
-                try {
-                    nesmrtelnostON();
-                }catch (UnsatisfiedLinkError ignored){}
-            }
+            nesmrtelnost(true);
             showSuccesful = mopubInterstitial.show();
         }
+        lock.forceOneShowUnlock();
         return showSuccesful;
     }
 
-    public native void nesmrtelnostON();
-
-    public native void nesmrtelnostOFF();
+    public void show(int delay) {
+        mainHandler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                show();
+            }
+        }, delay);
+    }
 
-    public void showDelayed(int mills) {
-        mainHandler.postDelayed(showRunnable, mills);
+    private void nesmrtelnost(boolean zapnut) {
+        if (Data.hasMinecraft) try {
+            if (zapnut) nesmrtelnostON();
+            else nesmrtelnostOFF();
+        } catch (UnsatisfiedLinkError ignored) {
+            Helper.wtf("!Failed to zapnut nesmrtelnost");
+        }
+        Helper.wtf("Nesmrtelnos = " + zapnut);
     }
 
-    public void showDelayed(int mills, final Runnable runnable) {
+    private void nesmrtelnost(final boolean zaplnut, int delay) {
         mainHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                if (!show()) {
-                    Helper.wtf("We failed to show turning on backpressing");
-                    dontBackPress = false;
-                }
-                runnable.run();
+                nesmrtelnost(zaplnut);
             }
-        }, mills);
+        }, delay);
     }
 
+    public native void nesmrtelnostON();
+
+    public native void nesmrtelnostOFF();
+
 
     public void destroy() {
         if (mopubInterstitial != null) {
@@ -319,9 +318,8 @@ public void destroy() {
 
 
     public void init(final boolean fromOnlineAccepted) {
-        if (!fromOnlineAccepted && !fastAdUsed && Data.hasMinecraft && Data.Ads.enabled) {
-            Helper.wtf(TAG, "Interstitial init load fast ad");
-            fastAdUsed = true;
+        if (!fromOnlineAccepted && !fastAdShowed && Data.hasMinecraft) {
+            Helper.wtf(TAG, "Interstitial init and load fast ad");
             fastAd = new FastAd(Data.Ads.Interstitial.failoverId, this);
             fastAd.load(minecraftActivity, new Runnable() {
                 @Override
@@ -330,24 +328,11 @@ public void run() {
                     gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
                 }
             });
-        } else {
+        } else if (fromOnlineAccepted) {
             _initDelayed();
         }
     }
 
-    public void showFastDelayed(int mills) {
-        Helper.wtf("Trying fast ad");
-        mainHandler.postDelayed(new Runnable() {
-            @Override
-            public void run() {
-                if (fastAd == null || !fastAd.show()) {
-                    _initDelayed();
-                } else {
-                    _initDelayed();
-                }
-            }
-        }, mills);
-    }
 
     public void showUnityAdsVideo() {
         if (!lock.isMultiplayerLocked()) {
@@ -400,7 +385,7 @@ public void run() {
                     mopubInterstitial.forceRefresh();
                 }
 
-                if (UnityAds.isSupported() && !UnityAds.isInitialized() && Data.Ads.enabled) {
+                if (UnityAds.isSupported() && !UnityAds.isInitialized()) {
                     Helper.wtf("Initing Unity ads");
                     final String _69633 = Helper.convertString("4E6A6B324D7A4D3D");
                     UnityAds.initialize(minecraftActivity, _69633, null, Helper.USE_UNITY_TEST_ADS);
@@ -477,10 +462,11 @@ private void loadAfterDelay(long delay) {
         private boolean internet;
         private boolean gap;
         private boolean game = true;
+        private boolean forceShow;
 
         public boolean isLocked() {
-            Helper.wtf("I", "isLocked: " + "multiplayer [" + multiplayer + "]" + " " + "internet [" + internet + "]" + " " + "gap [" + gap + "]" + " " + "stop [" + stop + "] " + "game [" + game + "]");
-            return multiplayer || internet || gap || game || stop;
+            Helper.wtf("I", "isLocked: " + "forceOneShowLock [" + forceShow + "]" + "multiplayer [" + multiplayer + "]" + " " + "internet [" + internet + "]" + " " + "gap [" + gap + "]" + " " + "stop [" + stop + "] " + "game [" + game + "]");
+            return !forceShow && (multiplayer || internet || gap || game || stop);
         }
 
         public boolean isMultiplayerLocked() {
@@ -503,6 +489,15 @@ public void unlockGap() {
             gap = false;
         }
 
+        public void forceOneShowLock() {
+            Helper.wtf("I", "forceOneShowLock: ");
+            forceShow = true;
+        }
+        public void forceOneShowUnlock() {
+            Helper.wtf("I", "forceOneShowUnlock: ");
+            forceShow = false;
+        }
+
         public void gapLock() {
             Helper.wtf("I", "gapLock: ");
             gap = true;
@@ -537,5 +532,6 @@ public void internetUnlock() {
             Helper.wtf("I", "internetUnlock: ");
             internet = false;
         }
+
     }
 }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index 7376fb21..0c5147c0 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -54,7 +54,7 @@ public void loadInterstitial(Context context, CustomEventInterstitial.CustomEven
             return;
         }
 
-        Helper.wtf("Request received for new interstitial." );
+        Helper.wtf("Applovin: Request received for new interstitial." );
 
         AppLovinSdkSettings setting = new AppLovinSdkSettings();
         setting.setVerboseLogging(Helper.canLog);
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 170431dd..8d6a6804 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -25,12 +25,10 @@
     private final Interstitial interstitial;
     private InterstitialAd mGoogleInterstitialAd;
     private Activity activity;
-    public boolean showed;
     private boolean useApplovin;
     private AppLovinSdk sdk;
     private Runnable initMopubRunnable;
     private AppLovinAd loadedApplovinAd;
-    private int currentVolume;
 
 
     public FastAd(String admobId, Interstitial interstitial) {
@@ -95,14 +93,13 @@ private void loadAdmob() {
             public void onAdClosed() {
                 super.onAdClosed();
                 initMopubRunnable.run();
-                interstitial.callNativeBackPressed();
-                Helper.setVolume(currentVolume,interstitial.audioManager);
+                interstitial.onInterstitialDismissed(null);
             }
 
             @Override
             public void onAdOpened() {
                 super.onAdOpened();
-                currentVolume = Helper.setQuietVolume(interstitial.audioManager);
+                interstitial.onInterstitialShown(null);
             }
 
             @Override
@@ -129,7 +126,7 @@ public void onAdLeftApplication() {
 
     public boolean show() {
         Helper.wtf("FastAd", "show() called with: FastAd");
-        showed = true;
+        interstitial.fastAdShowed = true;
         if (Data.isActivityRunning) {
             if (useApplovin) {
                 if (AppLovinInterstitialAd.isAdReadyToDisplay(activity)) {
@@ -138,16 +135,14 @@ public boolean show() {
                     adDialog.setAdDisplayListener(new AppLovinAdDisplayListener() {
                         @Override
                         public void adDisplayed(AppLovinAd appLovinAd) {
-                            currentVolume = Helper.setQuietVolume(interstitial.audioManager);
+                            interstitial.onInterstitialShown(null);
                         }
 
                         @Override
                         public void adHidden(AppLovinAd appLovinAd) {
                             Helper.wtf("Fast Ads applovin hidden init mopub");
                             initMopubRunnable.run();
-                            interstitial.callNativeBackPressed();
-                            Helper.setVolume(currentVolume,interstitial.audioManager);
-                            interstitial.hideNavigationBarDelayed(activity);
+                            interstitial.onInterstitialDismissed(null);
                         }
                     });
                     adDialog.showAndRender(loadedApplovinAd);
