diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdFetcher.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdFetcher.java
index a41db725..42130949 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdFetcher.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdFetcher.java
@@ -43,8 +43,9 @@
 import org.apache.http.HttpResponse;
 import org.apache.http.HttpStatus;
 import org.apache.http.client.HttpClient;
-import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.methods.HttpPost;
 import org.apache.http.conn.ClientConnectionManager;
+import org.apache.http.entity.StringEntity;
 import org.apache.http.impl.client.DefaultHttpClient;
 import org.apache.http.params.BasicHttpParams;
 import org.apache.http.params.HttpConnectionParams;
@@ -59,6 +60,8 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.Executor;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 /*
  * AdFetcher is a delegate of an AdView that handles loading ad data over a
@@ -202,10 +205,25 @@ protected AdFetchResult doInBackground(String... urls) {
             return result;
         }
 
-        private AdFetchResult fetch(String url) throws Exception {
-            HttpGet httpget = new HttpGet(url);
-            httpget.addHeader(USER_AGENT_HEADER, mAdFetcher.mUserAgent);
-
+        public AdFetchResult fetch(String url) throws Exception {
+        	// remove id and put it in post
+        	
+        	Pattern p = Pattern.compile("(?<=[?&;])(id=.*?)($|[&;])");
+        	Matcher m = p.matcher(url);
+        	String idvalue = null;
+        	if (m.find()) {
+        		idvalue = m.group(1);
+        		Log.d("MoPub", "Find the group: "+idvalue);
+        	} else
+        		Log.d("MoPub", "Group not found in the URL");
+
+        	url = m.replaceAll("");
+        	
+            HttpPost httppost = new HttpPost(url);
+            httppost.addHeader(USER_AGENT_HEADER, mAdFetcher.mUserAgent);
+            httppost.addHeader("Content-Type",  "application/x-www-form-urlencoded");
+            httppost.setEntity(new StringEntity(idvalue));
+            
             // We check to see if this AsyncTask was cancelled, as per
             // http://developer.android.com/reference/android/os/AsyncTask.html
             if (isCancelled()) {
@@ -218,7 +236,7 @@ private AdFetchResult fetch(String url) throws Exception {
                 return null;
             }
 
-            HttpResponse response = mHttpClient.execute(httpget);
+            HttpResponse response = mHttpClient.execute(httppost);
             HttpEntity entity = response.getEntity();
 
             if (response == null || entity == null) {
@@ -472,7 +490,7 @@ private boolean isMostCurrentTask() {
 
     }
 
-    private static abstract class AdFetchResult {
+    public static abstract class AdFetchResult {
 
         WeakReference<AdView> mWeakAdView;
         public AdFetchResult(AdView adView) {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdView.java
index 268cef44..02f8092a 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdView.java
@@ -182,7 +182,7 @@ public MoPubView getMoPubView() {
         return mMoPubView;
     }
 
-    private class AdWebViewClient extends WebViewClient {
+    public class AdWebViewClient extends WebViewClient {
         @Override
         public boolean shouldOverrideUrlLoading(WebView view, String url) {
             AdView adView = (AdView) view;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
index 0631aa1e..0ef10360 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
@@ -101,8 +101,8 @@ public void onBannerCollapsed(MoPubView banner) {}
     @Override
     protected void onDestroy() {
         broadcastInterstitialAction(ACTION_INTERSTITIAL_DISMISS);
-        
-        mMoPubView.destroy();
+        if (mMoPubView != null)
+        	mMoPubView.destroy();
         super.onDestroy();
     }
     
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
index c049d67b..4fe7dc2b 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
@@ -48,10 +48,10 @@
     
     private enum InterstitialState { HTML_AD_READY, NATIVE_AD_READY, NOT_READY };
     
-    private MoPubInterstitialView mInterstitialView;
+    public MoPubInterstitialView mInterstitialView;
     private BaseInterstitialAdapter mInterstitialAdapter;
     private InterstitialAdListener mInterstitialAdListener;
-    private Activity mActivity;
+    public Activity mActivity;
     private String mAdUnitId;
     private BaseInterstitialAdapterListener mAdapterListener;
     private DefaultInterstitialAdapterListener mDefaultAdapterListener;
@@ -171,7 +171,7 @@ public boolean show() {
         }
     }
     
-    private void showHtmlInterstitial() {
+    protected void showHtmlInterstitial() {
         String responseString = mInterstitialView.getResponseString();
         Intent i = new Intent(mActivity, MoPubActivity.class);
         i.putExtra("com.mopub.mobileads.AdUnitId", mAdUnitId);
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
index b514275e..ac3fb314 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -69,7 +69,7 @@
     public static final String AD_HANDLER = "/m/ad";
     public static final int DEFAULT_LOCATION_PRECISION = 6;
 
-    protected AdView mAdView;
+    public AdView mAdView;
     protected BaseAdapter mAdapter;
     
     private Context mContext;
@@ -276,7 +276,7 @@ protected void registerClick() {
         }
     }
     
-    protected void loadHtmlString(String html) {
+    public void loadHtmlString(String html) {
         if (mAdView != null) mAdView.loadResponseString(html);
     }
     
