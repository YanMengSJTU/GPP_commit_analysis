diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
index 1dc7586a..b8248c08 100644
--- a/mopub-sdk/mopub-sdk-base/build.gradle
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -12,14 +12,17 @@ repositories {
 //https://mvnrepository.com/artifact/com.facebook.android/audience-network-sdk
 dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
-    def avidEnabled = project.hasProperty("mopub.avidEnabled") ? project.getProperty("mopub.avidEnabled").toBoolean() : true
-    if (avidEnabled) {
-        compile('com.mopub:libAvid-mopub:3.6.4')
-    }
-    def moatEnabled = project.hasProperty("mopub.moatEnabled") ? project.getProperty("mopub.moatEnabled").toBoolean() : true
-    if (moatEnabled) {
-        compile 'com.moat.analytics.mobile.mpub:moat-mobile-app-kit:2.4.5'
-    }
+    //WE ARE FORCING THESE DEPENDENCIES
+//    def avidEnabled = project.hasProperty("mopub.avidEnabled") ? project.getProperty("mopub.avidEnabled").toBoolean() : true
+//    if (avidEnabled) {
+//        compile('com.mopub:libAvid-mopub:3.6.4')
+//    }
+//    def moatEnabled = project.hasProperty("mopub.moatEnabled") ? project.getProperty("mopub.moatEnabled").toBoolean() : true
+//    if (moatEnabled) {
+//        compile 'com.moat.analytics.mobile.mpub:moat-mobile-app-kit:2.4.5'
+//    }
+    compile('com.mopub:libAvid-mopub:3.6.4')
+    compile 'com.moat.analytics.mobile.mpub:moat-mobile-app-kit:2.4.5'
     compile 'com.mopub.volley:mopub-volley:2.0.0'
     compile project(':base')
     compile 'com.google.android.gms:play-services-ads:15.0.1'
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index 51a10aad..13ef23bf 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -2,7 +2,6 @@
 
 
 import android.app.Activity;
-import android.app.Application;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Handler;
@@ -75,7 +74,7 @@ public Ads(Activity activity, Interstitial interstitial, RewardedVideo rewardedV
 
         if (InternetObserver.isInternetAvaible()) {
             Logger.Log("::start");
-            interstitial.init(false, 4000);
+            interstitial.init();
         } else {
             Logger.Log("::start: No Internet Avaible for ads");
         }
@@ -112,7 +111,7 @@ public void onAppEvent(AppEvent appEvent) {
             case OnlineAccepted:
                 if (InternetObserver.isInternetAvaible()) {
                     interstitial.lock.internetUnlock();
-                    interstitial.init(true, 4000);
+                    interstitial.init();
                 }
                 break;
 
@@ -207,7 +206,8 @@ public void onInitializationFinished() {
                         }
                     });
         } else {
-            Logger.Log("::Ads", "::Failed MoPub Initialization");
+            Logger.Log("::Ads", "::Failed MoPub Initialization because" +
+                    " MoPub.isSdkInitialized() = " + MoPub.isSdkInitialized() + " Data.Ads.enabled " + Data.Ads.enabled );
             runAfter.run();
         }
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index c07f1bda..0b87cab6 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -79,7 +79,7 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
         Logger.Log("::onInterstitialDismissed");
 
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
-        load();
+        load(1000);
     }
 
     @Override
@@ -95,6 +95,7 @@ public void onInterstitialLoaded(MoPubInterstitial interstitial) {
     public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
         EventBus.getDefault().post(new InterstitialEvent(InterstitialEvent.Failed));
         Logger.Log("::onInterstitialFailed: " + errorCode);
+        load(10000);
     }
 
     @Override
@@ -157,7 +158,8 @@ public void run() {
         }
     }
 
-    public void init(boolean fromOnlineAccepted, int delay) {
+    public void init() {
+        int delay = 4000;
         Logger.Log("::Initing Mopub in " + (delay / 1000) + " sec...");
         lock.game = Data.hasMinecraft;
 
@@ -193,7 +195,7 @@ public void run() {
         Helper.runOnWorkerThread(gapLockRunnable, minimalAdGapMills);
     }
 
-    private void load() {
+    private void load(long delay) {
         if (loadRunnable == null) {
             loadRunnable = new Runnable() {
                 @Override
@@ -205,7 +207,7 @@ public void run() {
             };
         }
         Helper.removeFromWorkerThread(loadRunnable);
-        Helper.runOnWorkerThread(loadRunnable, (long) 3000);
+        Helper.runOnWorkerThread(loadRunnable, delay);
     }
 
     private void changePeriodicShowForHighEcpmCountry() {
