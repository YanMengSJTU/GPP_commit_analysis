diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
index c8ee3389..9a7737bb 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
@@ -1,18 +1,26 @@
 package com.mopub.common;
 
+import android.Manifest;
 import android.app.Activity;
+import android.app.DownloadManager;
 import android.content.Intent;
+import android.content.pm.PackageManager;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
 import android.support.annotation.NonNull;
+import android.support.v4.app.ActivityCompat;
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.Window;
+import android.webkit.CookieManager;
 import android.webkit.CookieSyncManager;
+import android.webkit.DownloadListener;
+import android.webkit.URLUtil;
 import android.webkit.WebChromeClient;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
@@ -20,6 +28,7 @@
 import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
+import android.widget.Toast;
 
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.Dips;
@@ -122,6 +131,32 @@ private void initializeWebView() {
 
         // keep track of redirect count https://stackoverflow.com/a/16795181/282502
         mWebView.setWebViewClient(new BrowserWebViewClient(this));
+        mWebView.setDownloadListener(new DownloadListener() {
+            @Override
+            public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimetype, long contentLength) {
+                if (ActivityCompat.checkSelfPermission(MoPubBrowser.this, Manifest.permission.WRITE_EXTERNAL_STORAGE)
+                    == PackageManager.PERMISSION_GRANTED) {
+                    DownloadManager downloadManager = (DownloadManager) getSystemService(DOWNLOAD_SERVICE);
+                    if (downloadManager != null) {
+                        String fileName = URLUtil.guessFileName(url, contentDisposition, mimetype);
+
+                        DownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));
+                        request.setMimeType(mimetype);
+                        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);
+                        request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, fileName);
+                        request.setTitle(fileName);
+
+                        // https://stackoverflow.com/a/33501835/282502
+                        request.addRequestHeader("cookie", CookieManager.getInstance().getCookie(url));
+                        request.addRequestHeader("User-Agent", userAgent);
+
+                        downloadManager.enqueue(request);
+
+                        Toast.makeText(MoPubBrowser.this, "Downloading file...", Toast.LENGTH_SHORT).show();
+                    }
+                }
+            }
+        });
     }
 
     private String getRequestedUrl() {
