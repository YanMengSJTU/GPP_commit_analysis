diff --git a/CHANGELOG.md b/CHANGELOG.md
index 121b5980..7d91bfe0 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,6 @@
+#### Version 4.16.1 (August 24, 2017)
+- Fixed issue where null javascript was being passed to AVID video sessions.
+
 ## Version 4.16.0 (August 23, 2017)
 - Added support for viewability measurement from IAS (AVID library) and Moat.  
   - **Important:** New dependencies were included in this release; please update your `build.gradle`'s repositories block to include `maven { url "https://s3.amazonaws.com/moat-sdk-builds" }`. Note that the AVID library is provided on JCenter, so no additional steps must be taken -- it will be included automatically.
@@ -594,3 +597,4 @@ To allow users to play videos using the native video player:
   - Added support for custom events
   - Added network connectivity check before loading an ad
   - Added `OnAdPresentedOverlay` listener methods
+  
diff --git a/LICENSE b/LICENSE
index bc030538..84c3303f 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,3 +1,3 @@
 The MoPub SDK License can be found at [http://www.mopub.com/legal/sdk-license-agreement/](http://www.mopub.com/legal/sdk-license-agreement/) and the Apache 2.0 License can be found at [http://www.apache.org/licenses/LICENSE-2.0] (http://www.apache.org/licenses/LICENSE-2.0).
 
-Please note that some of the resources in this package are licensed under The Apache 2.0 license, including Disk LRU Cache, Volley, and Exoplayer.
+Please note that some of the resources in this package are licensed under The Apache 2.0 license, including Disk LRU Cache, Volley, and Exoplayer.
\ No newline at end of file
diff --git a/README.md b/README.md
index f86547da..4467ae49 100644
--- a/README.md
+++ b/README.md
@@ -38,7 +38,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        compile('com.mopub:mopub-sdk:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk:4.16.1@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        compile('com.mopub:mopub-sdk-banner:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk-banner:4.16.1@aar') {
             transitive = true
         }
         
         // For interstitials
-        compile('com.mopub:mopub-sdk-interstitial:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk-interstitial:4.16.1@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        compile('com.mopub:mopub-sdk-rewardedvideo:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk-rewardedvideo:4.16.1@aar') {
             transitive = true
         }
 
         // For native static (images).
-        compile('com.mopub:mopub-sdk-native-static:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk-native-static:4.16.1@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        compile('com.mopub:mopub-sdk-native-video:4.16.0@aar') {
+        compile('com.mopub:mopub-sdk-native-video:4.16.1@aar') {
             transitive = true
         }
     }
@@ -113,6 +113,7 @@ Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/mast
 - Interstitials are now loaded offscreen instead of in a separate WebView.
 - Rewarded Videos have a new init method. See `MoPubRewardedVideos.initializeRewardedVideo(Activity, List<Class<? extends CustomEventRewardedVideo>>, MediationSettings...)`. Pass in a list of networks to initialize, and MoPub will initialize those networks with the settings from the previous ad request, persisted across app close.
 - Upgraded our ExoPlayer dependency to 2.4.4.
+- Fixed issue where null javascript was being passed to AVID video sessions.
 
 ## Requirements
 
@@ -135,7 +136,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    compile('com.mopub:mopub-sdk:4.16.0@aar') {
+    compile('com.mopub:mopub-sdk:4.16.1@aar') {
         transitive = true
     }
 }
@@ -144,7 +145,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    compile('com.mopub:mopub-sdk:4.16.0@aar') {
+    compile('com.mopub:mopub-sdk:4.16.1@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 449a53f6..2d875f3e 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.mopub.simpleadsdemo"
-      android:versionCode="53"
-      android:versionName="4.16.0">
+      android:versionCode="54"
+      android:versionName="4.16.1">
     <uses-sdk android:minSdkVersion="16"
               android:targetSdkVersion="24"/>
 
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index d02b7529..ab212831 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -10,7 +10,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '4.16.0'
+project.version = '4.16.1'
 
 android {
     compileSdkVersion 25
@@ -18,7 +18,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 53
+        versionCode 54
         versionName version
         minSdkVersion 16
         targetSdkVersion 25
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AvidViewabilitySession.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AvidViewabilitySession.java
index 53b64f32..2a65e249 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AvidViewabilitySession.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AvidViewabilitySession.java
@@ -257,9 +257,13 @@ public Boolean createVideoSession(@NonNull final Activity activity, @NonNull fin
         // mAvidVideoAdSession = AvidAdSessionManager.startAvidManagedVideoAdSession(activity,
         //         (ExternalAvidAdSessionContext) getAvidAdSessionContextNonDeferred());
         // mAvidVideoAdSession.registerAdView(view, activity);
-        // mAvidVideoAdSession.injectJavascriptResource(videoViewabilityTrackers.get(AVID_KEY));
+        // if (!TextUtils.isEmpty(videoViewabilityTrackers.get(AVID_KEY))) {
+        //     mAvidVideoAdSession.injectJavaScriptResource(videoViewabilityTrackers.get(AVID_KEY));
+        // }
         // for (final String buyerResource : buyerResources) {
-        //     mAvidVideoAdSession.injectJavascriptResource(buyerResource);
+        //     if (buyerResource != null) {
+        //         mAvidVideoAdSession.injectJavaScriptResource(buyerResource);
+        //     }
         // }
 
         try {
@@ -274,16 +278,20 @@ public Boolean createVideoSession(@NonNull final Activity activity, @NonNull fin
                     .addParam(Activity.class, activity)
                     .execute();
 
-            new Reflection.MethodBuilder(mAvidVideoAdSession, "injectJavaScriptResource")
-                    .addParam(String.class, videoViewabilityTrackers.get(AVID_KEY))
-                    .execute();
-
-            for (final String buyerResource : buyerResources) {
+            if (!TextUtils.isEmpty(videoViewabilityTrackers.get(AVID_KEY))) {
                 new Reflection.MethodBuilder(mAvidVideoAdSession, "injectJavaScriptResource")
-                        .addParam(String.class, buyerResource)
+                        .addParam(String.class, videoViewabilityTrackers.get(AVID_KEY))
                         .execute();
             }
 
+            for (final String buyerResource : buyerResources) {
+                if (!TextUtils.isEmpty(buyerResource)) {
+                    new Reflection.MethodBuilder(mAvidVideoAdSession, "injectJavaScriptResource")
+                            .addParam(String.class, buyerResource)
+                            .execute();
+                }
+            }
+
             return true;
         } catch (Exception e) {
             MoPubLog.d("Unable to execute Avid start video session: " + e.getMessage());
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index bd44a852..17034713 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -13,7 +13,7 @@
 import static com.mopub.common.ExternalViewabilitySessionManager.ViewabilityVendor;
 
 public class MoPub {
-    public static final String SDK_VERSION = "4.16.0";
+    public static final String SDK_VERSION = "4.16.1";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index bfb4255b..70e26f9c 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -10,7 +10,7 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '4.16.0'
+project.version = '4.16.1'
 
 android {
     compileSdkVersion 25
@@ -19,7 +19,7 @@ android {
     useLibrary 'org.apache.http.legacy'
 
     defaultConfig {
-        versionCode 53
+        versionCode 54
         versionName version
         minSdkVersion 16
         targetSdkVersion 25
diff --git a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
index f42591da..ff8a3bce 100644
--- a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
+++ b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.mopub.sdk.android:mopub
-fabric-version=4.16.0+kit
+fabric-version=4.16.1+kit
 fabric-build-type=source
