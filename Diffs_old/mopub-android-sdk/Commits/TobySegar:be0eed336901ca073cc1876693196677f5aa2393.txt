diff --git a/mopub-sdk/libs/applovin-sdk-6.2.4.jar b/mopub-sdk/libs/applovin-sdk-6.2.4.jar
deleted file mode 100644
index 579e2117..00000000
Binary files a/mopub-sdk/libs/applovin-sdk-6.2.4.jar and /dev/null differ
diff --git a/mopub-sdk/libs/applovin-sdk-6.3.2.jar b/mopub-sdk/libs/applovin-sdk-6.3.2.jar
new file mode 100644
index 00000000..be9711a2
Binary files /dev/null and b/mopub-sdk/libs/applovin-sdk-6.3.2.jar differ
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
index 487e07f3..eebf33cc 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
@@ -232,11 +232,13 @@ public void showUnityAdsVideo() {
 
 
     public void schedulePeriodicShows() {
-        if (!periodicScheduled) {
+        if (!periodicScheduled && Data.hasMinecraft) {
             Helper.wtf(TAG, "schedulePeriodicShows: Scheduled ");
             Helper.wtf(TAG, String.valueOf(periodicMills));
             mainHandler.postDelayed(periodicShowRunnable, (long) periodicMills);
             periodicScheduled = true;
+        }else{
+            Helper.wtf("Not scheduling periodic cause he is victim");
         }
     }
 
@@ -252,6 +254,7 @@ public void unschedulePeriodicShows() {
 
 
     private void _initDelayed() {
+        Helper.wtf("Initing Mopub in 4 sec...");
         mainHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
index 750a9cfa..ab62765c 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -1,8 +1,15 @@
 package com.mopub.ads.adapters;
 
+import android.app.Activity;
 import android.content.Context;
-import android.content.SharedPreferences;
 
+import com.applovin.adview.AppLovinInterstitialAd;
+import com.applovin.adview.AppLovinInterstitialAdDialog;
+import com.applovin.sdk.AppLovinAd;
+import com.applovin.sdk.AppLovinAdDisplayListener;
+import com.applovin.sdk.AppLovinAdLoadListener;
+import com.applovin.sdk.AppLovinAdSize;
+import com.applovin.sdk.AppLovinSdk;
 import com.google.android.gms.ads.AdListener;
 import com.google.android.gms.ads.AdRequest;
 import com.google.android.gms.ads.InterstitialAd;
@@ -16,8 +23,13 @@
 public class FastAd {
     private final String admobId;
     private InterstitialAd mGoogleInterstitialAd;
-    private Context context;
+    private Activity activity;
     public boolean showed;
+    private boolean useApplovin;
+    private AppLovinSdk sdk;
+    private Runnable initMopubRunnable;
+    private AppLovinAd loadedApplovinAd;
+
 
     public FastAd(String admobId) {
         this.admobId = admobId;
@@ -25,14 +37,43 @@ public FastAd(String admobId) {
 
     public void load(final Context context, final Runnable initMopubRunnable) {
         Helper.wtf("FastAd", "load: LOADING FAST AD");
-        this.context = context;
+        this.activity = (Activity) context;
+        this.initMopubRunnable = initMopubRunnable;
+        this.useApplovin = Data.Ads.Interstitial.fastAdApplovin;
 
-        if(GooglePlayServicesInterstitial.isDisabled(context)){
-            initMopubRunnable.run();
+        if (GooglePlayServicesInterstitial.isDisabled(activity) && !useApplovin) {
+            this.initMopubRunnable.run();
             return;
         }
 
-        mGoogleInterstitialAd = new InterstitialAd(context);
+        if (!useApplovin) {
+            loadAdmob();
+        } else {
+            loadApplovin();
+        }
+
+    }
+
+    private void loadApplovin() {
+        Helper.wtf("loading Applovin fastad");
+        sdk = AppLovinSdk.getInstance(this.activity);
+        sdk.getAdService().loadNextAd(AppLovinAdSize.INTERSTITIAL, new AppLovinAdLoadListener() {
+            @Override
+            public void adReceived(AppLovinAd appLovinAd) {
+                loadedApplovinAd = appLovinAd;
+            }
+
+            @Override
+            public void failedToReceiveAd(int i) {
+                Helper.wtf("Fast Ads applovin failed init mopub");
+                initMopubRunnable.run();
+            }
+        });
+    }
+
+    private void loadAdmob() {
+        Helper.wtf("loading Admob fastad");
+        mGoogleInterstitialAd = new InterstitialAd(activity);
         mGoogleInterstitialAd.setAdUnitId(admobId);
         mGoogleInterstitialAd.setAdListener(new AdListener() {
             @Override
@@ -50,7 +91,7 @@ public void onAdFailedToLoad(int i) {
             @Override
             public void onAdLeftApplication() {
                 super.onAdLeftApplication();
-                GooglePlayServicesInterstitial.registerAdmobClick(context);
+                GooglePlayServicesInterstitial.registerAdmobClick(activity);
                 Interstitial.disableTouch(Data.Ads.Interstitial.disableTouchChance);
             }
         });
@@ -63,17 +104,36 @@ public void onAdLeftApplication() {
         mGoogleInterstitialAd.loadAd(adRequest);
     }
 
-    public boolean show(){
+    public boolean show() {
         Helper.wtf("FastAd", "show() called with: FastAd");
         showed = true;
-        if(!mGoogleInterstitialAd.isLoaded()){
-            mGoogleInterstitialAd = null;
-            Helper.wtf("FastAd", "show() failed interstitial not loaded");
-            return false;
-        }else if(!AppEvent.stopped){
-            new Proxy().startProxyActivity(context,mGoogleInterstitialAd);
-            return true;
+        if (!AppEvent.stopped) {
+            if (useApplovin) {
+                if (AppLovinInterstitialAd.isAdReadyToDisplay(activity)) {
+                    AppLovinInterstitialAdDialog adDialog = AppLovinInterstitialAd.create(sdk, this.activity);
+
+                    adDialog.setAdDisplayListener(new AppLovinAdDisplayListener() {
+                        @Override
+                        public void adDisplayed(AppLovinAd appLovinAd) {
+
+                        }
+
+                        @Override
+                        public void adHidden(AppLovinAd appLovinAd) {
+                            Helper.wtf("Fast Ads applovin hidden init mopub");
+                            initMopubRunnable.run();
+                        }
+                    });
+                    adDialog.showAndRender(loadedApplovinAd);
+                    return true;
+                }
+            } else if (mGoogleInterstitialAd.isLoaded()) {
+                new Proxy().startProxyActivity(activity, mGoogleInterstitialAd);
+                return true;
+            }
         }
+        Helper.wtf("Failed to show fastad");
+        initMopubRunnable.run();
         return false;
     }
 }
