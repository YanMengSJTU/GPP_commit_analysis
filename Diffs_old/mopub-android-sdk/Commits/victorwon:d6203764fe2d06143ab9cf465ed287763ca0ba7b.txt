diff --git a/extras/src/com/mopub/mobileads/HeyZapInterstitial.java b/extras/src/com/mopub/mobileads/HeyZapInterstitial.java
index 93c37bab..823ec536 100644
--- a/extras/src/com/mopub/mobileads/HeyZapInterstitial.java
+++ b/extras/src/com/mopub/mobileads/HeyZapInterstitial.java
@@ -1,5 +1,41 @@
+/*
+ * Copyright (c) 2013, Heyzap Inc.
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *
+ * * Redistributions of source code must retain the above copyright
+ *   notice, this list of conditions and the following disclaimer.
+ *
+ * * Redistributions in binary form must reproduce the above copyright
+ *   notice, this list of conditions and the following disclaimer in the
+ *   documentation and/or other materials provided with the distribution.
+ *
+ * * Neither the name of 'MoPub Inc.' nor the names of its contributors
+ *   may be used to endorse or promote products derived from this software
+ *   without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+ * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
 package com.mopub.mobileads;
 
+import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR;
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_NO_FILL;
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_TIMEOUT;
+
 import java.util.Map;
 
 import android.app.Activity;
@@ -11,99 +47,85 @@
 import com.heyzap.sdk.ads.OnAdDisplayListener;
 
 /*
- * 
+ * Compatible with Heyzap SDK version 5.5.4
  */
-class HeyZapInterstitial extends CustomEventInterstitial implements
-		OnAdDisplayListener {
-
-	private CustomEventInterstitialListener mInterstitialListener;
-
-	private Activity contextActivity;
-
-	/*
-	 * Abstract methods from CustomEventInterstitial
-	 */
-	@Override
-	protected void loadInterstitial(Context context,
-			CustomEventInterstitialListener interstitialListener,
-			Map<String, Object> localExtras, Map<String, String> serverExtras) {
-		Log.d("HeyZap", "loadInterstitial");
-
-		mInterstitialListener = interstitialListener;
-
-		if (context instanceof Activity) {
-			contextActivity = (Activity) context;
-		} else {
-			// You may also pass in an Activity Context in the localExtras map
-			// and retrieve it here.
-			contextActivity = null;
-		}
-
-		if (contextActivity == null) {
-			mInterstitialListener
-					.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-			return;
-		}
-
-		InterstitialOverlay.setDisplayListener(this);
-
-		// no appId to specify as contrast to iOS api, that's why we can move
-		// the start() call into the custom event
-		if (!HeyzapAds.hasStarted())
-			HeyzapAds.start(context, HeyzapAds.DISABLE_AUTOMATIC_FETCH, this);
-		
-		InterstitialOverlay.fetch();
-	}
-
-	@Override
-	protected void showInterstitial() {
-		Log.d("HeyZap", "showInterstitial");
-		if (contextActivity != null) {
-			InterstitialOverlay.display(contextActivity);
-		} else {
-			mInterstitialListener
-					.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-		}
-	}
-
-	@Override
-	protected void onInvalidate() {
-		InterstitialOverlay.setDisplayListener(null);
-		contextActivity = null;
-	}
-
-	@Override
-	public void onShow() {
-		mInterstitialListener.onInterstitialShown();
-	}
-
-	@Override
-	public void onClick() {
-		mInterstitialListener.onInterstitialClicked();
-	}
-
-	@Override
-	public void onHide() {
-		mInterstitialListener.onInterstitialDismissed();
-	}
-
-	@Override
-	public void onFailedToShow() {
-		mInterstitialListener
-				.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-		Log.d("HeyZap", "Failed to show");
-	}
-
-	@Override
-	public void onAvailable() {
-		Log.d("HeyZap", "onAvailable");
-		mInterstitialListener.onInterstitialLoaded();
-	}
 
-	@Override
-	public void onFailedToFetch() {
-		mInterstitialListener
-				.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-		Log.w("HeyZap", "Failed to fetch");
-	}
-}
\ No newline at end of file
+class HeyZapInterstitial extends CustomEventInterstitial implements OnAdDisplayListener {
+
+    private Context context;
+    private CustomEventInterstitialListener mInterstitialListener;
+
+    @Override
+    protected void loadInterstitial(Context context,
+                                    CustomEventInterstitialListener customEventInterstitialListener,
+                                    Map<String, Object> localExtras,
+                                    Map<String, String> serverExtras) {
+        mInterstitialListener = customEventInterstitialListener;
+
+        if (!(context instanceof Activity)) {
+            mInterstitialListener.onInterstitialFailed(ADAPTER_CONFIGURATION_ERROR);
+            return;
+        }
+        
+        this.context = context;
+        
+        if (!HeyzapAds.hasStarted()) {
+        	HeyzapAds.start(context, this);
+        }
+    }
+
+    @Override
+    protected void showInterstitial() {
+    	if (InterstitialOverlay.isAvailable()) {
+    		InterstitialOverlay.display(this.context);
+        } else {
+            Log.d("MoPub", "Tried to show a Heyzap interstitial ad before it finished loading. Please try again.");
+        }
+    }
+
+    @Override
+    protected void onInvalidate() {
+    	InterstitialOverlay.setDisplayListener(null);
+    }
+    
+    @Override
+	public void onShow(String tag) {
+        Log.d("MoPub", "Showing Heyzap interstitial ad.");
+        mInterstitialListener.onInterstitialShown();
+    }
+    
+    /*
+     * AdMob AdListener implementation
+     */
+    
+    @Override
+	public void onClick(String tag) {
+      // TODO: This only tracks clicks accurately if all clicks result in leaving the app.
+        Log.d("MoPub", "Heyzap interstitial ad clicked.");
+        mInterstitialListener.onInterstitialClicked();
+    }
+    
+    @Override
+	public void onHide(String tag) {
+        Log.d("MoPub", "Heyzap interstitial ad dismissed.");
+        mInterstitialListener.onInterstitialDismissed();
+    }
+    
+    @Override
+	public void onFailedToShow(String tag) {
+    	Log.d("MoPub", "Heyzap interstitial ad failed to show.");
+    	mInterstitialListener.onInterstitialFailed(NETWORK_TIMEOUT);
+    }
+    
+    @Override
+	public void onAvailable(String tag) {
+        Log.d("MoPub", "Google AdMob interstitial ad loaded successfully.");
+        mInterstitialListener.onInterstitialLoaded();
+    }
+    
+    @Override
+	public void onFailedToFetch(String tag) {
+        Log.d("MoPub", "Heyzap interstitial ad failed to load.");
+        mInterstitialListener.onInterstitialFailed(NETWORK_NO_FILL);
+    }
+}
diff --git a/extras/src/com/mopub/mobileads/RevMobInterstitial.java b/extras/src/com/mopub/mobileads/RevMobInterstitial.java
index bef24561..f9493eb1 100644
--- a/extras/src/com/mopub/mobileads/RevMobInterstitial.java
+++ b/extras/src/com/mopub/mobileads/RevMobInterstitial.java
@@ -45,16 +45,6 @@ protected void loadInterstitial(Context context,
 			return;
 		}
 
-		/*
-		 * You may also pass this String down in the serverExtras Map by
-		 * specifying Custom Event Data in MoPub's web interface.
-		 */
-		String appId = serverExtras.get(APP_ID_KEY);
-		if (appId != null && appId.length() > 0) {
-			RevMob.start(activity, appId); // if appId is null, we assume it's
-											// already init'ed in the app code.
-		}
-
 		Location location = extractLocation(localExtras);
 		if (location != null) {
 			RevMob.session().setUserLocation(location.getLatitude(), location.getLongitude(),
diff --git a/mopub-sdk/.classpath b/mopub-sdk/.classpath
index 2ec543f4..fb2ae119 100644
--- a/mopub-sdk/.classpath
+++ b/mopub-sdk/.classpath
@@ -11,7 +11,8 @@
 	<classpathentry exported="true" kind="lib" path="libs/InMobiAdNetwork-3.7.1.jar"/>
 	<classpathentry exported="true" kind="lib" path="libs/InMobiCommons-3.7.1.jar"/>
 	<classpathentry exported="true" kind="lib" path="libs/libadapterinmobi.jar"/>
-	<classpathentry exported="true" kind="lib" path="libs/revmob-6.2.6.jar"/>
-	<classpathentry exported="true" kind="lib" path="libs/applovin-sdk-5.0.3.jar"/>
+	<classpathentry exported="true" kind="lib" path="libs/applovin-sdk-5.1.0.jar"/>
+	<classpathentry exported="true" kind="lib" path="libs/heyzap-ads-sdk.jar"/>
+	<classpathentry exported="true" kind="lib" path="libs/revmob-6.3.0.jar"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/mopub-sdk/project.properties b/mopub-sdk/project.properties
index cd040ba5..58ba0d40 100644
--- a/mopub-sdk/project.properties
+++ b/mopub-sdk/project.properties
@@ -10,4 +10,3 @@
 # Project target.
 target=android-13
 android.library=true
-android.library.reference.1=../../heyzap-sdk-5.5.2/android-sdk
