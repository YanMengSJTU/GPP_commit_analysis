diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
index 2d468b39..f07942b7 100644
--- a/mopub-sdk/mopub-sdk-base/build.gradle
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -7,7 +7,8 @@ repositories {
     maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
     maven { url "https://maven.google.com" }
 }
-
+//FACEBOOK
+//https://mvnrepository.com/artifact/com.facebook.android/audience-network-sdk
 dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
     def avidEnabled = project.hasProperty("mopub.avidEnabled") ? project.getProperty("mopub.avidEnabled").toBoolean() : true
@@ -22,6 +23,7 @@ dependencies {
     compile project(':base')
     compile 'com.google.android.gms:play-services-ads:10.0.0'
     compile project(':unity-ads')
+    compile project(':audience-network-sdk-4.26.1')
 }
 
 project.description = 'MoPub Android SDK - Base'
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index 1334e86d..690c5f86 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -172,6 +172,7 @@ private boolean forceAdFromMopubServer(String customEventClassName) {
             boolean isUnityAd = customEventClassName.equals("com.mopub.ads.adapters.UnityAdsMopubEvents");
             boolean isApplovinAd = customEventClassName.equals("com.mopub.ads.adapters.ApplovinInterstitial");
             boolean isAdmobAd = customEventClassName.equals("com.mopub.ads.adapters.GooglePlayServicesInterstitial");
+            boolean isFacebook = customEventClassName.equals("com.mopub.ads.adapters.FacebookInterstitial");
 
             if(Helper.FORCE_ADMOB_ADD && !isAdmobAd){
                 loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
@@ -183,6 +184,11 @@ private boolean forceAdFromMopubServer(String customEventClassName) {
                 return true;
             }
 
+            if(Helper.FORCE_FACEBOOK && !isFacebook){
+                loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
+                return true;
+            }
+
             if(Helper.FORCE_UNITY_ADD && !isUnityAd){
                 loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
                 return true;
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
index f63f3476..847942f1 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
@@ -1,39 +1,62 @@
 package com.mopub.ads.adapters;
 
-//import android.content.Context;
-//import android.util.Log;
-//
-//import com.facebook.ads.Ad;
-//import com.facebook.ads.AdError;
-//import com.facebook.ads.AdSettings;
-//import com.facebook.ads.InterstitialAd;
-//import com.facebook.ads.InterstitialAdListener;
-//import com.mojang.base.Helper;
-//import com.mopub.mobileads.CustomEventInterstitial;
-//import com.mopub.mobileads.MoPubErrorCode;
-//
-//import java.util.Map;
-
 import android.content.Context;
+import android.util.Log;
 
+import com.facebook.ads.Ad;
+import com.facebook.ads.AdError;
+import com.facebook.ads.InterstitialAd;
+import com.facebook.ads.InterstitialAdListener;
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.MoPubInterstitial;
 
 import java.util.Map;
 
 /**
- * Tested with Facebook SDK 4.8.1.
+ * Certified with Facebook Audience Network 4.26.0
  */
-public class FacebookInterstitial extends CustomEventInterstitial implements MoPubInterstitial.InterstitialAdListener {
-    @Override
-    protected void loadInterstitial(Context context, CustomEventInterstitialListener customEventInterstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras) {
+public class FacebookInterstitial extends CustomEventInterstitial implements InterstitialAdListener {
+    public static final String PLACEMENT_ID_KEY = "placement_id";
+
+    private InterstitialAd mFacebookInterstitial;
+    private CustomEventInterstitialListener mInterstitialListener;
+
+    /**
+     * CustomEventInterstitial implementation
+     */
 
+    @Override
+    protected void loadInterstitial(final Context context,
+                                    final CustomEventInterstitialListener customEventInterstitialListener,
+                                    final Map<String, Object> localExtras,
+                                    final Map<String, String> serverExtras) {
+        mInterstitialListener = customEventInterstitialListener;
+
+        final String placementId;
+        if (extrasAreValid(serverExtras)) {
+            placementId = serverExtras.get(PLACEMENT_ID_KEY);
+        } else {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
+            return;
+        }
+
+        mFacebookInterstitial = new InterstitialAd(context, placementId);
+        mFacebookInterstitial.setAdListener(this);
+        mFacebookInterstitial.loadAd();
     }
 
     @Override
     public void showInterstitial() {
-
+        if (mFacebookInterstitial != null && mFacebookInterstitial.isAdLoaded()) {
+            mFacebookInterstitial.show();
+        } else {
+            Log.d("MoPub", "Tried to show a Facebook interstitial ad before it finished loading. Please try again.");
+            if (mInterstitialListener != null) {
+                onError(mFacebookInterstitial, AdError.INTERNAL_ERROR);
+            } else {
+                Log.d("MoPub", "Interstitial listener not instantiated. Please load interstitial again.");
+            }
+        }
     }
 
     @Override
@@ -43,142 +66,64 @@ protected boolean usesProxy() {
 
     @Override
     protected void onInvalidate() {
-
+        if (mFacebookInterstitial != null) {
+            mFacebookInterstitial.destroy();
+            mFacebookInterstitial = null;
+        }
     }
 
-    @Override
-    public void onInterstitialLoaded(MoPubInterstitial interstitial) {
+    /**
+     * InterstitialAdListener implementation
+     */
 
+    @Override
+    public void onAdLoaded(final Ad ad) {
+        Log.d("MoPub", "Facebook interstitial ad loaded successfully.");
+        mInterstitialListener.onInterstitialLoaded();
     }
 
     @Override
-    public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
-
+    public void onError(final Ad ad, final AdError error) {
+        Log.d("MoPub", "Facebook interstitial ad failed to load.");
+        if (error == AdError.NO_FILL) {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+        } else if (error == AdError.INTERNAL_ERROR) {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
+        } else {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
+        }
     }
 
     @Override
-    public void onInterstitialShown(MoPubInterstitial interstitial) {
-
+    public void onInterstitialDisplayed(final Ad ad) {
+        Log.d("MoPub", "Showing Facebook interstitial ad.");
+        mInterstitialListener.onInterstitialShown();
     }
 
     @Override
-    public void onInterstitialClicked(MoPubInterstitial interstitial) {
+    public void onAdClicked(final Ad ad) {
+        Log.d("MoPub", "Facebook interstitial ad clicked.");
+        mInterstitialListener.onInterstitialClicked();
+    }
 
+    @Override
+    public void onLoggingImpression(Ad ad) {
+        Log.d("MoPub", "Facebook interstitial ad logged impression.");
     }
 
     @Override
-    public void onInterstitialDismissed(MoPubInterstitial interstitial) {
+    public void onInterstitialDismissed(final Ad ad) {
+        Log.d("MoPub", "Facebook interstitial ad dismissed.");
+        mInterstitialListener.onInterstitialDismissed();
+    }
+
+    private boolean extrasAreValid(final Map<String, String> serverExtras) {
+        final String placementId = serverExtras.get(PLACEMENT_ID_KEY);
+        return (placementId != null && placementId.length() > 0);
+    }
 
+    @Deprecated // for testing
+    InterstitialAd getInterstitialAd() {
+        return mFacebookInterstitial;
     }
-//    public static final String PLACEMENT_ID_KEY = "placement_id";
-//
-//    private InterstitialAd mFacebookInterstitial;
-//    private CustomEventInterstitialListener mInterstitialListener;
-//
-//    @Override
-//    public void showInterstitial() {
-//        if (mFacebookInterstitial != null && mFacebookInterstitial.isAdLoaded()) {
-//            mFacebookInterstitial.show();
-//        } else {
-//            Helper.wtf("MoPub", "Tried to show a Facebook interstitial ad before it finished loading. Please try again.");
-//            if (mInterstitialListener != null) {
-//                onError(mFacebookInterstitial, AdError.INTERNAL_ERROR);
-//            } else {
-//                Helper.wtf("MoPub", "Interstitial listener not instantiated. Please load interstitial again.");
-//            }
-//        }
-//    }
-//
-//    /**
-//     * InterstitialAdListener implementation
-//     */
-//
-//    @Override
-//    public void onAdLoaded(final Ad ad) {
-//        Helper.wtf("MoPub", "Facebook interstitial ad loaded successfully.");
-//        mInterstitialListener.onInterstitialLoaded();
-//    }
-//
-//    @Override
-//    public void onError(final Ad ad, final AdError error) {
-//        Helper.wtf("MoPub", "Facebook interstitial ad failed to load. " + error.getErrorMessage());
-//        Helper.wtf("Facebook Failed");
-//        if (error == AdError.NO_FILL) {
-//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-//        } else if (error == AdError.INTERNAL_ERROR) {
-//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-//        } else {
-//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-//        }
-//    }
-//
-//    @Override
-//    public void onInterstitialDisplayed(final Ad ad) {
-//        Helper.wtf("MoPub", "Showing Facebook interstitial ad.");
-//        mInterstitialListener.onInterstitialShown();
-//    }
-//
-//    @Override
-//    public void onAdClicked(final Ad ad) {
-//        Helper.wtf("MoPub", "Facebook interstitial ad clicked.");
-//        mInterstitialListener.onInterstitialClicked();
-//    }
-//
-//    @Override
-//    public void onInterstitialDismissed(final Ad ad) {
-//        Helper.wtf("MoPub", "Facebook interstitial ad dismissed.");
-//        mInterstitialListener.onInterstitialDismissed();
-//    }
-//
-//    /**
-//     * CustomEventInterstitial implementation
-//     */
-//    @Override
-//    protected void loadInterstitial(final Context context,
-//                                    final CustomEventInterstitialListener customEventInterstitialListener,
-//                                    final Map<String, Object> localExtras,
-//                                    final Map<String, String> serverExtras) {
-//        mInterstitialListener = customEventInterstitialListener;
-//
-//        Helper.wtf("Facebook Load");
-//
-//        final String placementId;
-//        if (extrasAreValid(serverExtras)) {
-//            placementId = serverExtras.get(PLACEMENT_ID_KEY);
-//        } else {
-//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-//            return;
-//        }
-//        if (Helper.DEBUG) {
-//            AdSettings.addTestDevice("8d3cef1dfffa38d6463891bfd97b478e");
-//            AdSettings.addTestDevice("21f3542e3b4f4a0c5469b674257d2933");
-//        }
-//        mFacebookInterstitial = new InterstitialAd(context, placementId);
-//        mFacebookInterstitial.setAdListener(this);
-//        mFacebookInterstitial.loadAd();
-//    }
-//
-//    @Override
-//    protected boolean usesProxy() {
-//        return true;
-//    }
-//
-//    @Override
-//    protected void onInvalidate() {
-//        if (mFacebookInterstitial != null) {
-//            mFacebookInterstitial.destroy();
-//            mFacebookInterstitial = null;
-//        }
-//    }
-//
-//    private boolean extrasAreValid(final Map<String, String> serverExtras) {
-//        final String placementId = serverExtras.get(PLACEMENT_ID_KEY);
-//        return (placementId != null && placementId.length() > 0);
-//    }
-//
-//    @Deprecated
-//        // for testing
-//    InterstitialAd getInterstitialAd() {
-//        return mFacebookInterstitial;
-//    }
 }
