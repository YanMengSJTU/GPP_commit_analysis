diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
index 126ff4b4..789cab70 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
@@ -27,14 +27,14 @@ private Preconditions() {
      * Ensures the truth of an expression.
      */
     public static void checkArgument(boolean expression) {
-        checkArgumentInternal(expression, true, "Illegal argument.", EMPTY_ARGUMENTS);
+        checkArgumentInternal(expression, false, "Illegal argument.", EMPTY_ARGUMENTS);
     }
 
     /**
      * Ensures the truth of an expression, with an error message.
      */
     public static void checkArgument(boolean expression, String errorMessage) {
-        checkArgumentInternal(expression, true, errorMessage, EMPTY_ARGUMENTS);
+        checkArgumentInternal(expression, false, errorMessage, EMPTY_ARGUMENTS);
     }
 
     /**
@@ -42,21 +42,21 @@ public static void checkArgument(boolean expression, String errorMessage) {
      */
     public static void checkArgument(boolean expression,
             String errorMessageTemplate, Object... errorMessageArgs) {
-        checkArgumentInternal(expression, true, errorMessageTemplate, errorMessageArgs);
+        checkArgumentInternal(expression, false, errorMessageTemplate, errorMessageArgs);
     }
 
     /**
      * Ensures the truth of an expression involving the state of the caller.
      */
     public static void checkState(boolean expression) {
-        checkStateInternal(expression, true, "Illegal state.", EMPTY_ARGUMENTS);
+        checkStateInternal(expression, false, "Illegal state.", EMPTY_ARGUMENTS);
     }
 
     /**
      * Ensures the truth of an expression involving the state of the caller, with an error message.
      */
     public static void checkState(boolean expression, String errorMessage) {
-        checkStateInternal(expression, true, errorMessage, EMPTY_ARGUMENTS);
+        checkStateInternal(expression, false, errorMessage, EMPTY_ARGUMENTS);
     }
 
     /**
@@ -65,7 +65,7 @@ public static void checkState(boolean expression, String errorMessage) {
      */
     public static void checkState(boolean expression,
             String errorMessageTemplate, Object... errorMessageArgs) {
-        checkStateInternal(expression, true, errorMessageTemplate, errorMessageArgs);
+        checkStateInternal(expression, false, errorMessageTemplate, errorMessageArgs);
     }
 
     /**
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
index aaf3ce0c..9792d71f 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
@@ -171,7 +171,7 @@ public boolean onTouch(View v, MotionEvent event) {
         mCloseableAdContainer.addView(dimmingView,
                 new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
 
-        mOrientationBroadcastReceiver.register(mContext);
+//        mOrientationBroadcastReceiver.register(mContext);
 
         mMraidBridge.setMraidBridgeListener(mMraidBridgeListener);
         mTwoPartBridge.setMraidBridgeListener(mTwoPartBridgeListener);
@@ -522,6 +522,9 @@ public void run() {
 
                         int[] location = new int[2];
                         View rootView = getRootView();
+                        if (rootView == null) {
+                            return;
+                        }
                         rootView.getLocationOnScreen(location);
                         mScreenMetrics.setRootViewPosition(location[0], location[1],
                                 rootView.getWidth(),
@@ -581,13 +584,13 @@ public void resume() {
     public void destroy() {
         mScreenMetricsWaiter.cancelLastRequest();
 
-        try {
-            mOrientationBroadcastReceiver.unregister();
-        } catch (IllegalArgumentException e) {
-            if (!e.getMessage().contains("Receiver not registered")) {
-                throw e;
-            } // Else ignore this exception.
-        }
+//        try {
+//            mOrientationBroadcastReceiver.unregister();
+//        } catch (IllegalArgumentException e) {
+//            if (!e.getMessage().contains("Receiver not registered")) {
+//                throw e;
+//            } // Else ignore this exception.
+//        }
 
         // Pause the controller to make sure the video gets stopped.
         if (!mIsPaused) {
@@ -724,7 +727,10 @@ void handleResize(final int widthDips, final int heightDips, final int offsetXDi
             mDefaultAdContainer.setVisibility(View.INVISIBLE);
             mCloseableAdContainer.addView(mMraidWebView,
                     new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
-            getRootView().addView(mCloseableAdContainer, layoutParams);
+            ViewGroup rootView = getRootView();
+            if (rootView != null) {
+                rootView.addView(mCloseableAdContainer, layoutParams);
+            }
         } else if (mViewState == ViewState.RESIZED) {
             mCloseableAdContainer.setLayoutParams(layoutParams);
         }
@@ -772,8 +778,11 @@ void handleExpand(@Nullable URI uri, boolean shouldUseCustomClose)
                 mDefaultAdContainer.setVisibility(View.INVISIBLE);
                 mCloseableAdContainer.addView(mMraidWebView, layoutParams);
             }
-            getRootView().addView(mCloseableAdContainer,
-                    new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+            ViewGroup rootView = getRootView();
+            if (rootView != null) {
+                rootView.addView(mCloseableAdContainer,
+                        new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
+            }
         } else if (mViewState == ViewState.RESIZED) {
             if (isTwoPart) {
                 // Move the ad back to the original container so that when we close the
@@ -821,7 +830,10 @@ void handleClose() {
                         LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
                 mDefaultAdContainer.setVisibility(View.VISIBLE);
             }
-            getRootView().removeView(mCloseableAdContainer);
+            ViewGroup rootView = getRootView();
+            if (rootView != null) {
+                rootView.removeView(mCloseableAdContainer);
+            }
 
             // Set the view state to default
             setViewState(ViewState.DEFAULT);
@@ -831,7 +843,6 @@ void handleClose() {
         }
     }
 
-    @NonNull
     @TargetApi(VERSION_CODES.KITKAT)
     private ViewGroup getRootView() {
         if (mRootView == null) {
@@ -841,6 +852,10 @@ private ViewGroup getRootView() {
                 Preconditions.checkState(mDefaultAdContainer.isAttachedToWindow());
             }
 
+            if(!mDefaultAdContainer.isAttachedToWindow()){
+                return null;
+            }
+
             mRootView = (ViewGroup) mDefaultAdContainer.getRootView().findViewById(
                     android.R.id.content);
         }
