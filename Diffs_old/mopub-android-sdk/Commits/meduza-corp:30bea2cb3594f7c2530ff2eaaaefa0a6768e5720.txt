diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
index 97d4a693..415c9937 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
@@ -6,7 +6,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.event.MoPubEvents;
 import com.mopub.common.logging.MoPubLog;
@@ -16,25 +15,11 @@
 import com.mopub.volley.VolleyError;
 import com.mopub.volley.toolbox.ImageLoader;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
 
 import static android.view.View.OnClickListener;
 import static com.mopub.nativeads.BaseForwardingNativeAd.NativeEventListener;
-import static com.mopub.nativeads.NativeResponse.Parameter.CALL_TO_ACTION;
-import static com.mopub.nativeads.NativeResponse.Parameter.CLICK_DESTINATION;
-import static com.mopub.nativeads.NativeResponse.Parameter.CLICK_TRACKER;
-import static com.mopub.nativeads.NativeResponse.Parameter.ICON_IMAGE;
-import static com.mopub.nativeads.NativeResponse.Parameter.IMPRESSION_TRACKER;
-import static com.mopub.nativeads.NativeResponse.Parameter.MAIN_IMAGE;
-import static com.mopub.nativeads.NativeResponse.Parameter.STAR_RATING;
-import static com.mopub.nativeads.NativeResponse.Parameter.TEXT;
-import static com.mopub.nativeads.NativeResponse.Parameter.TITLE;
+import static com.mopub.nativeads.NativeResponse.Parameter.*;
 
 public class NativeResponse {
     enum Parameter {
@@ -289,18 +274,18 @@ public void destroy() {
     }
 
     // Non Interface Public Methods
-    public void loadMainImage(@Nullable final ImageView imageView) {
-        loadImageView(getMainImageUrl(), imageView);
+    public void loadMainImage(@Nullable final ImageView imageView, @Nullable final View mainImageLayout) {
+        loadImageView(getMainImageUrl(), imageView, mainImageLayout);
     }
 
     public void loadIconImage(@Nullable final ImageView imageView) {
-        loadImageView(getIconImageUrl(), imageView);
+        loadImageView(getIconImageUrl(), imageView, null);
     }
 
     public void loadExtrasImage(final String key, final ImageView imageView) {
         final Object object = getExtra(key);
         if (object != null && object instanceof String) {
-            loadImageView((String) object, imageView);
+            loadImageView((String) object, imageView, null);
         }
     }
 
@@ -317,13 +302,14 @@ public boolean isDestroyed() {
     }
 
     // Helpers
-    private void loadImageView(@Nullable final String url, @Nullable final ImageView imageView) {
+    private void loadImageView(@Nullable final String url, @Nullable final ImageView imageView, @Nullable final View mainImageLayout) {
         if (imageView == null) {
             return;
         }
 
         if (url == null) {
             imageView.setImageDrawable(null);
+            if (mainImageLayout != null) mainImageLayout.setVisibility(View.GONE);
         } else {
             mImageLoader.get(url, new ImageLoader.ImageListener() {
                 @Override
@@ -332,12 +318,14 @@ public void onResponse(final ImageLoader.ImageContainer imageContainer,
                     if (!isImmediate) {
                         MoPubLog.d("Image was not loaded immediately into your ad view. You should call preCacheImages as part of your custom event loading process.");
                     }
+                    if (mainImageLayout != null) mainImageLayout.setVisibility(View.VISIBLE);
                     imageView.setImageBitmap(imageContainer.getBitmap());
                 }
 
                 @Override
                 public void onErrorResponse(final VolleyError volleyError) {
                     MoPubLog.d("Failed to load image.", volleyError);
+                    if (mainImageLayout != null) mainImageLayout.setVisibility(View.GONE);
                     imageView.setImageDrawable(null);
                 }
             });
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeViewHolder.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeViewHolder.java
index a7b99ef0..b08a4d19 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeViewHolder.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeViewHolder.java
@@ -5,7 +5,6 @@
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
-
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 
@@ -15,6 +14,8 @@
     @Nullable TextView callToActionView;
     @Nullable ImageView mainImageView;
     @Nullable ImageView iconImageView;
+    @Nullable
+    View mainImageLayout;
 
     @VisibleForTesting
     static final NativeViewHolder EMPTY_VIEW_HOLDER = new NativeViewHolder();
@@ -31,6 +32,7 @@ static NativeViewHolder fromViewBinder(@NonNull final View view, @NonNull final
             nativeViewHolder.textView = (TextView) view.findViewById(viewBinder.textId);
             nativeViewHolder.callToActionView = (TextView) view.findViewById(viewBinder.callToActionId);
             nativeViewHolder.mainImageView = (ImageView) view.findViewById(viewBinder.mainImageId);
+            nativeViewHolder.mainImageLayout = view.findViewById(viewBinder.mainImageLayout);
             nativeViewHolder.iconImageView = (ImageView) view.findViewById(viewBinder.iconImageId);
             return nativeViewHolder;
         } catch (ClassCastException exception) {
@@ -43,7 +45,7 @@ void update(@NonNull final NativeResponse nativeResponse) {
         addTextView(titleView, nativeResponse.getTitle());
         addTextView(textView, nativeResponse.getText());
         addTextView(callToActionView, nativeResponse.getCallToAction());
-        nativeResponse.loadMainImage(mainImageView);
+        nativeResponse.loadMainImage(mainImageView, mainImageLayout);
         nativeResponse.loadIconImage(iconImageView);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java b/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java
index 0fe30f84..5be5a86e 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java
@@ -14,7 +14,9 @@
         private int callToActionId;
         private int mainImageId;
         private int iconImageId;
-        @NonNull private Map<String, Integer> extras = Collections.emptyMap();
+        private int mainImageLayout;
+        @NonNull
+        private Map<String, Integer> extras = Collections.emptyMap();
 
         public Builder(final int layoutId) {
             this.layoutId = layoutId;
@@ -45,6 +47,12 @@ public final Builder mainImageId(final int mainImageId) {
             return this;
         }
 
+        @NonNull
+        public final Builder mainImageLayout(final int mainImageLayout) {
+            this.mainImageLayout = mainImageLayout;
+            return this;
+        }
+
         @NonNull
         public final Builder iconImageId(final int iconImageId) {
             this.iconImageId = iconImageId;
@@ -75,7 +83,9 @@ public final ViewBinder build() {
     final int callToActionId;
     final int mainImageId;
     final int iconImageId;
-    @NonNull final Map<String, Integer> extras;
+    final int mainImageLayout;
+    @NonNull
+    final Map<String, Integer> extras;
 
     private ViewBinder(@NonNull final Builder builder) {
         this.layoutId = builder.layoutId;
@@ -83,6 +93,7 @@ private ViewBinder(@NonNull final Builder builder) {
         this.textId = builder.textId;
         this.callToActionId = builder.callToActionId;
         this.mainImageId = builder.mainImageId;
+        this.mainImageLayout = builder.mainImageLayout;
         this.iconImageId = builder.iconImageId;
         this.extras = builder.extras;
     }
