diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index 0b26d85f..9a88465a 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -39,8 +39,7 @@
      * Abstract methods from CustomEventInterstitial
      */
     @Override
-    public void loadInterstitial(Context context, CustomEventInterstitial.CustomEventInterstitialListener interstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras)
-    {
+    public void loadInterstitial(Context context, CustomEventInterstitial.CustomEventInterstitialListener interstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras) {
         Logger.Log("::Applovin Load");
 
         mInterstitialListener = interstitialListener;
@@ -52,7 +51,7 @@ public void loadInterstitial(Context context, CustomEventInterstitial.CustomEven
             return;
         }
 
-        Logger.Log("::Applovin: Request received for new interstitial." );
+        Logger.Log("::Applovin: Request received for new interstitial.");
 
         AppLovinSdkSettings setting = new AppLovinSdkSettings();
         setting.setVerboseLogging(Helper.canLog);
@@ -63,15 +62,15 @@ public void loadInterstitial(Context context, CustomEventInterstitial.CustomEven
             key = getKeyFromExtras(serverExtras);
         }
 
-        sdk = AppLovinSdk.getInstance(key,setting, context);
+        sdk = AppLovinSdk.getInstance(key, setting, context);
         sdk.getAdService().loadNextAd(AppLovinAdSize.INTERSTITIAL, this);
 
     }
 
     private String getKeyFromExtras(Map<String, String> serverExtras) {
-        if (serverExtras.containsKey(EXTRAS_KEY)){
+        if (serverExtras.containsKey(EXTRAS_KEY)) {
             serverExtras.get(EXTRAS_KEY);
-        }else if (mInterstitialListener != null){
+        } else if (mInterstitialListener != null) {
             mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
         }
         return null;
@@ -81,8 +80,7 @@ private String getKeyFromExtras(Map<String, String> serverExtras) {
     public void showInterstitial() {
         final AppLovinAd adToRender = lastReceived;
 
-        if ( adToRender != null )
-        {
+        if (adToRender != null) {
             Logger.Log("::Showing AppLovin interstitial ad...");
 
 
@@ -112,12 +110,10 @@ public void adHidden(AppLovinAd appLovinAd) {
 
                     inter.showAndRender(adToRender);
                 }
-                    } );
-
-                    inter.showAndRender( adToRender );
-                }
-            } );
-        }else{Logger.Log("::Showing AppLovin failed adToRender null" );}
+            });
+        } else {
+            Logger.Log("::Showing AppLovin failed adToRender null");
+        }
     }
 
     @Override
@@ -125,6 +121,7 @@ protected boolean usesProxy() {
         return false;
     }
 
+
     @Override
     public void onInvalidate() {
         parentActivity = null;
@@ -132,9 +129,8 @@ public void onInvalidate() {
     }
 
     @Override
-    public void adReceived(AppLovinAd ad)
-    {
-        Logger.Log("::AppLovin interstitial loaded successfully." );
+    public void adReceived(AppLovinAd ad) {
+        Logger.Log("::AppLovin interstitial loaded successfully.");
 
         lastReceived = ad;
 
@@ -150,7 +146,7 @@ public void failedToReceiveAd(final int errorCode) {
         parentActivity.runOnUiThread(new Runnable() {
             public void run() {
                 Logger.Log("::Applovin Fail");
-                    mInterstitialListener.onInterstitialFailed( MoPubErrorCode.NETWORK_NO_FILL );
+                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
             }
         });
     }
