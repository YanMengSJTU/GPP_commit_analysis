diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
index 1317ab36..47f4b6b7 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
@@ -142,7 +142,7 @@ public static ClientMetadata getInstance() {
     public ClientMetadata(Context context) {
         mContext = context.getApplicationContext();
         mConnectivityManager =
-                (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
+                (ConnectivityManager) mContext.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
         mDeviceManufacturer = Build.MANUFACTURER;
         mDeviceModel = Build.MODEL;
         mDeviceProduct = Build.PRODUCT;
@@ -165,7 +165,7 @@ public ClientMetadata(Context context) {
         }
 
         final TelephonyManager telephonyManager =
-                (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);
+                (TelephonyManager) mContext.getApplicationContext().getSystemService(Context.TELEPHONY_SERVICE);
         mNetworkOperatorForUrl = telephonyManager.getNetworkOperator();
         mNetworkOperator = telephonyManager.getNetworkOperator();
         if (telephonyManager.getPhoneType() == TelephonyManager.PHONE_TYPE_CDMA &&
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
index 8e6e5471..c904657d 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
@@ -154,7 +154,7 @@ static Location getLocationFromProvider(@NonNull final Context context,
         }
 
         final LocationManager locationManager =
-                (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
+                (LocationManager) context.getApplicationContext().getSystemService(Context.LOCATION_SERVICE);
         try {
             // noinspection ResourceType
             return locationManager.getLastKnownLocation(provider.toString());
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
index c4395a46..1d124790 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
@@ -33,9 +33,9 @@
 import static com.mopub.common.util.Reflection.MethodBuilder;
 
 public class DeviceUtils {
-    private static final int MAX_MEMORY_CACHE_SIZE = 30 * 1024 * 1024; // 30 MB
-    private static final int MIN_DISK_CACHE_SIZE = 30 * 1024 * 1024; // 30 MB
-    private static final int MAX_DISK_CACHE_SIZE = 100 * 1024 * 1024; // 100 MB
+    private static final int MAX_MEMORY_CACHE_SIZE = 6 * 1024 * 1024; // 12 MB
+    private static final int MIN_DISK_CACHE_SIZE = 10 * 1024 * 1024; // 10 MB
+    private static final int MAX_DISK_CACHE_SIZE = 40 * 1024 * 1024; // 40 MB
 
     private DeviceUtils() {}
 
@@ -84,7 +84,7 @@ public static boolean isNetworkAvailable(@Nullable final Context context) {
         // Otherwise, perform the connectivity check.
         try {
             final ConnectivityManager connnectionManager =
-                    (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+                    (ConnectivityManager) context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
             final NetworkInfo networkInfo = connnectionManager.getActiveNetworkInfo();
             return networkInfo.isConnected();
         } catch (NullPointerException e) {
@@ -93,7 +93,7 @@ public static boolean isNetworkAvailable(@Nullable final Context context) {
     }
 
     public static int memoryCacheSizeBytes(final Context context) {
-        final ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+        final ActivityManager activityManager = (ActivityManager) context.getApplicationContext().getSystemService(Context.ACTIVITY_SERVICE);
         long memoryClass = activityManager.getMemoryClass();
 
         try {
@@ -173,7 +173,7 @@ public static void lockOrientation(@NonNull Activity activity, @NonNull Creative
             return;
         }
 
-        Display display = ((WindowManager) activity.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        Display display = ((WindowManager) activity.getApplicationContext().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         final int currentRotation = display.getRotation();
         final int deviceOrientation = activity.getResources().getConfiguration().orientation;
 
@@ -213,7 +213,7 @@ public static Point getDeviceDimensions(@NonNull final Context context) {
         Integer bestWidthPixels = null;
         Integer bestHeightPixels = null;
 
-        final WindowManager windowManager = (WindowManager) context.getSystemService(
+        final WindowManager windowManager = (WindowManager) context.getApplicationContext().getSystemService(
                 Context.WINDOW_SERVICE);
         final Display display = windowManager.getDefaultDisplay();
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index 387bf7e7..9bd3289b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -40,11 +40,13 @@
 import java.util.Map;
 import java.util.TreeMap;
 import java.util.WeakHashMap;
+import java.util.concurrent.TimeUnit;
 
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 
 public class AdViewController {
 	static final int DEFAULT_REFRESH_TIME_MILLISECONDS = 60000;  // 1 minute
+	static final long DEFAULT_NET_REFRESH_TIME_MILLISECONDS = TimeUnit.SECONDS.toMillis(15);  // 15 seconds
 	static final int MAX_REFRESH_TIME_MILLISECONDS = 600000; // 10 minutes
 	static final int MARKER_OFFSET_COLOR = 0xFF454545;
 	static final double BACKOFF_FACTOR = 1.5;
@@ -154,7 +156,7 @@ void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
 		loadCustomEvent(mMoPubView, adResponse.getCustomEventClassName(),
 				adResponse.getServerExtras());
 		
-		scheduleRefreshTimerIfEnabled(false);
+		scheduleRefreshTimerIfEnabled();
 	}
 	
 	@VisibleForTesting
@@ -247,7 +249,7 @@ private void internalLoadAd() {
 		
 		if (!isNetworkAvailable()) {
 			MoPubLog.d("Can't load an ad because there is no network connectivity.");
-			scheduleRefreshTimerIfEnabled(true);
+			scheduleRefreshTimerIfNetUnavaible();
 			return;
 		}
 		
@@ -409,7 +411,7 @@ private void setAutoRefreshStatus(final boolean newAutoRefreshStatus) {
 		
 		mCurrentAutoRefreshStatus = newAutoRefreshStatus;
 		if (mAdWasLoaded && mCurrentAutoRefreshStatus) {
-			scheduleRefreshTimerIfEnabled(false);
+			scheduleRefreshTimerIfEnabled();
 		} else if (!mCurrentAutoRefreshStatus) {
 			cancelRefreshTimer();
 		}
@@ -523,20 +525,24 @@ void adDidFail(MoPubErrorCode errorCode) {
 			return;
 		}
 		
-		scheduleRefreshTimerIfEnabled(false);
+		scheduleRefreshTimerIfEnabled();
 		moPubView.adFailed(errorCode);
 	}
 	
-	void scheduleRefreshTimerIfEnabled(boolean force) {
+	void scheduleRefreshTimerIfEnabled() {
 		cancelRefreshTimer();
-		if ((mCurrentAutoRefreshStatus && mRefreshTimeMillis != null && mRefreshTimeMillis > 0) || force) {
-			
+		if ((mCurrentAutoRefreshStatus && mRefreshTimeMillis != null && mRefreshTimeMillis > 0)) {
 			mHandler.postDelayed(mRefreshRunnable,
 					Math.min(MAX_REFRESH_TIME_MILLISECONDS,
 							mRefreshTimeMillis * (long) Math.pow(BACKOFF_FACTOR, mBackoffPower)));
 		}
 	}
 	
+	void scheduleRefreshTimerIfNetUnavaible() {
+		cancelRefreshTimer();
+		mHandler.postDelayed(mRefreshRunnable, DEFAULT_NET_REFRESH_TIME_MILLISECONDS);
+	}
+	
 	void setLocalExtras(Map<String, Object> localExtras) {
 		mLocalExtras = (localExtras != null)
 				? new TreeMap<String, Object>(localExtras)
@@ -567,7 +573,7 @@ private boolean isNetworkAvailable() {
 		
 		// Otherwise, perform the connectivity check.
 		ConnectivityManager cm
-				= (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
+				= (ConnectivityManager) mContext.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
 		NetworkInfo networkInfo = cm.getActiveNetworkInfo();
 		return networkInfo != null && networkInfo.isConnected();
 	}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
index a3906be0..6791af15 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
@@ -82,7 +82,7 @@ protected void onDestroy() {
 
         // VideoViews may never release audio focus, leaking the activity. See
         // https://code.google.com/p/android/issues/detail?id=152173.
-        AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
+        AudioManager am = (AudioManager) getApplicationContext().getSystemService(Context.AUDIO_SERVICE);
         if (am != null) {
             am.abandonAudioFocus(null);
         }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
index 9837e067..096e0f36 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
@@ -119,7 +119,7 @@ private void clearWebViewDeadlock(@NonNull final Context context) {
             params.format = PixelFormat.TRANSPARENT;
             params.gravity = Gravity.START | Gravity.TOP;
             final WindowManager windowManager =
-                    (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+                    (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);
 
             windowManager.addView(webView, params);
         }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index faa701f9..b8b80b39 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -379,7 +379,7 @@ protected void adClicked() {
     }
 
     protected void nativeAdLoaded() {
-        if (mAdViewController != null) mAdViewController.scheduleRefreshTimerIfEnabled(false);
+        if (mAdViewController != null) mAdViewController.scheduleRefreshTimerIfEnabled();
         adLoaded();
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
index 45ba6098..8c343417 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
@@ -357,7 +357,7 @@ public void loadContent(@NonNull String htmlData) {
     // onPageLoaded gets fired once the html is loaded into the webView.
     private int getDisplayRotation() {
         WindowManager wm = (WindowManager) mContext
-                .getSystemService(Context.WINDOW_SERVICE);
+                .getApplicationContext().getSystemService(Context.WINDOW_SERVICE);
         return wm.getDefaultDisplay().getRotation();
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
index 99851c23..f8c43116 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
@@ -15,7 +15,7 @@ public MaxWidthImageLoader(final RequestQueue queue, final Context context, fina
         super(queue, imageCache);
 
         // Get Display Options
-        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+        WindowManager wm = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);
         Display display = wm.getDefaultDisplay();
         Point size = new Point();
         display.getSize(size);
