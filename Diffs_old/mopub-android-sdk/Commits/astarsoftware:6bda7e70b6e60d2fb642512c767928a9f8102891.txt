diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 00000000..5dfd1054
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "mopub-sdk-common"]
+	path = mopub-sdk-common
+	url = git@github.com:mopub/mopub-sdk-common.git
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8362ab40..96807e14 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,16 @@
+## Version 5.7.0 (May 20, 2019)
+- **Features**
+  - Impression Level Revenue Data - a data object that includes revenue information associated with each impression.
+  - Verizon Ads SDK now supported as a mediated network.
+  - Upgraded Gradle dependency to 5.4.1
+  - Upgraded Robolectric dependency to 4.2.1.
+  - Upgraded com.android.tools.build:gradle to 3.4.0.
+  - Sample app improvements.
+
+- **Bug Fixes**
+  - Handle empty impression trackers in VAST.
+  - Improved impression handling when MoPubView is reattached to the screen.
+
 ## Version 5.6.0 (March 18, 2019)
 - **Features**
   - Enabled debug logging when using a debug Google Advertising ID (one that ends with "10ca1ad1abe1").
diff --git a/README.md b/README.md
index bb26a9c4..fd1fd247 100644
--- a/README.md
+++ b/README.md
@@ -37,7 +37,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk:5.7.0@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        implementation('com.mopub:mopub-sdk-banner:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-banner:5.7.0@aar') {
             transitive = true
         }
         
         // For interstitials
-        implementation('com.mopub:mopub-sdk-interstitial:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-interstitial:5.7.0@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        implementation('com.mopub:mopub-sdk-rewardedvideo:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-rewardedvideo:5.7.0@aar') {
             transitive = true
         }
 
         // For native static (images).
-        implementation('com.mopub:mopub-sdk-native-static:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-static:5.7.0@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        implementation('com.mopub:mopub-sdk-native-video:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-video:5.7.0@aar') {
             transitive = true
         }
     }
@@ -108,16 +108,16 @@ The MoPub SDK is available via:
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
 - **Features**
-  - Enabled debug logging when using a debug Google Advertising ID (one that ends with "10ca1ad1abe1").
-  - Upgraded ExoPlayer dependency to 2.9.5.
-  - Upgraded MoPub-Volley dependency to 2.1.0.
+  - Impression Level Revenue Data - a data object that includes revenue information associated with each impression.
+  - Verizon Ads SDK now supported as a mediated network.
+  - Upgraded Gradle dependency to 5.4.1
+  - Upgraded Robolectric dependency to 4.2.1.
+  - Upgraded com.android.tools.build:gradle to 3.4.0.
+  - Sample app improvements.
 
 - **Bug Fixes**
-  - Banners no longer refresh when they are expanded. They will resume refreshing when the expanded view is closed.
-  - Setting orientation on an expanded banner no longer locks the orientation after the expanded view is closed.
-  - Improved click detection.           
-  - Catch `MissingWebViewPackageException` in `ConsentDialogLayoutWebView`.
-  - Reduce ANRs by removing synchronization from `Networking#getUserAgent(Context)`.
+  - Handle empty impression trackers in VAST.
+  - Improved impression handling when MoPubView is reattached to the screen.
 
 ## Requirements
 
@@ -146,7 +146,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.7.0@aar') {
         transitive = true
     }
 }
@@ -155,7 +155,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.7.0@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
@@ -170,7 +170,7 @@ mopub.avidEnabled=false
 mopub.moatEnabled=false
 ```
 ##### Disable via API
-If you would like to opt out of viewability measurement but do not want to modify the MoPub SDK, a function is provided for your convenience. At any point, call `MoPub.disableViewability(vendor);`. This method can can be called with any of the enum values available in `ExternalViewabilitySessionManager.ViewabilityVendor`: `AVID` will disable AVID but leave Moat enabled, `MOAT` will disable Moat but leave AVID enabled, and `ALL` will disable all viewability measurement.
+If you would like to opt out of viewability measurement but do not want to modify the MoPub SDK, a function is provided for your convenience. At any point, call `MoPub.disableViewability(vendor);`. This method can be called with any of the enum values available in `ExternalViewabilitySessionManager.ViewabilityVendor`: `AVID` will disable AVID but leave Moat enabled, `MOAT` will disable Moat but leave AVID enabled, and `ALL` will disable all viewability measurement.
 
 ## Working with Android 6.0 Runtime Permissions
 If your app's target SDK is 23 or higher _**and**_ the user's device is running Android 6.0 or higher, you are responsible for supporting [runtime permissions](http://developer.android.com/training/permissions/requesting.html), one of the [changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html) introduced in Android 6.0 (API level 23). In addition to listing any dangerous permissions your app needs in the manifest, your app also has to explicitly request the dangerous permission(s) during runtime by calling method `requestPermissions()` in the [`ActivityCompat`](http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html) class.
diff --git a/build.gradle b/build.gradle
index d023e452..e3aaf275 100644
--- a/build.gradle
+++ b/build.gradle
@@ -13,7 +13,3 @@ buildscript {
         classpath 'com.novoda:bintray-release:0.9'
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '4.10.1'
-}
diff --git a/extras/README.md b/extras/README.md
deleted file mode 100644
index dae4df22..00000000
--- a/extras/README.md
+++ /dev/null
@@ -1,5 +0,0 @@
-# MoPub Android SDK
-
-We are formally separating network adapters from our MoPub SDK. This is to enable an independent release cadence resulting in faster updates and certification cycles. New mediation location is accessible [here](https://github.com/mopub/mopub-android-mediation).  
-
-We have also added an additional tool, making it easy for publishers to get up and running with the mediation integration. Check out https://developers.mopub.com/docs/mediation/integrate/ and integration instructions at https://developers.mopub.com/docs/android/integrating-networks/.
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 13372aef..5c2d1cf0 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 0b6a1e6b..f4d7b2bf 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,5 @@
-#Mon Jan 28 14:39:41 PST 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-bin.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
diff --git a/gradlew b/gradlew
index 9d82f789..b0d6d0ab 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,20 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
+
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
 
 ##############################################################################
 ##
@@ -6,20 +22,38 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -30,6 +64,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,26 +75,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -85,7 +105,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -150,11 +170,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index 41a6cb9e..15e1ee37 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,6 +1,18 @@
-@rem Copyright 2018-2019 Twitter, Inc.
-@rem Licensed under the MoPub SDK License Agreement
-@rem http://www.mopub.com/legal/sdk-license-agreement/
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      http://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
 
 @if "%DEBUG%" == "" @echo off
 @rem ##########################################################################
@@ -12,14 +24,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -50,10 +62,9 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windowz variants
+@rem Get command-line arguments, handling Windows variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -64,11 +75,6 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 3608f60f..87c17497 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,55 +1,86 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="com.mopub.simpleadsdemo"
-      android:versionCode="67"
-      android:versionName="5.6.0">
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.mopub.simpleadsdemo">
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
+    <!-- This is added as a workaround for the manifest merger duplicating exoplayer
+         and play services permissions. -->
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+
     <!--WRITE_EXTERNAL_STORAGE is optional and only required for MRAID 2.0 storePicture ads.-->
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission
+        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
+        tools:remove="android:maxSdkVersion" />
 
     <application
+        android:allowBackup="true"
         android:icon="@drawable/icon"
         android:label="@string/app_name"
         android:networkSecurityConfig="@xml/network_security_config"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-	    <activity android:name="com.mopub.simpleadsdemo.MoPubSampleActivity"
-	            android:label="@string/app_name"
-                android:theme="@style/AppTheme.NoActionBar"
-                android:launchMode="singleTask"
-                android:configChanges="orientation|screenSize">
-	        <intent-filter>
-	            <action android:name="android.intent.action.MAIN" />
-	            <category android:name="android.intent.category.LAUNCHER" />
-	        </intent-filter>
+        <activity
+            android:name="com.mopub.simpleadsdemo.MoPubSampleActivity"
+            android:configChanges="orientation|screenSize"
+            android:label="@string/app_name"
+            android:launchMode="singleTask"
+            android:theme="@style/AppTheme.NoActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
             <intent-filter>
                 <action android:name="android.intent.action.VIEW" />
+
                 <category android:name="android.intent.category.BROWSABLE" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:scheme="mopub"
-                      android:host="load" />
+
+                <data
+                    android:host="load"
+                    android:scheme="mopub" />
             </intent-filter>
-	    </activity>
-        <activity android:name="com.mopub.mobileads.MoPubActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.MraidActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.common.MoPubBrowser"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.RewardedMraidActivity"
-                  android:configChanges="keyboardHidden|orientation|screenSize"/>
-
-        <activity android:name="com.mopub.common.privacy.ConsentDialogActivity"
-                  android:configChanges="keyboardHidden|orientation|screenSize"/>
-
-        <meta-data android:name="com.google.android.gms.version"
-                   android:value="@integer/google_play_services_version" />
+        </activity>
+        <activity
+            android:name="com.mopub.mobileads.MoPubActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+        <activity
+            android:name="com.mopub.mobileads.MraidActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+        <activity
+            android:name="com.mopub.common.MoPubBrowser"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+        <activity
+            android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+        <activity
+            android:name="com.mopub.mobileads.RewardedMraidActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+
+        <activity
+            android:name="com.mopub.common.privacy.ConsentDialogActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+
+        <!-- AppLovin -->
+        <meta-data
+            android:name="applovin.sdk.key"
+            android:value="g9p0buIGwmV205uzWu93fLFLsxAwz_ve9hflay_UiVXiaQf5Iq8yAOI0JTwHSqxcVaL4XLZEs5yQVcWpRelb21" />
+
+        <!-- Google Ads -->
+        <!-- note: this is the sample app id from Google's documentation -->
+        <!-- https://developers.google.com/admob/android/quick-start#update_your_androidmanifestxml -->
+        <meta-data
+            android:name="com.google.android.gms.ads.APPLICATION_ID"
+            android:value="ca-app-pub-3940256099942544~3347511713" />
+
+        <!-- Google Play Services -->
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version" />
+
     </application>
 
 </manifest>
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index 8fbcf38e..f14682f9 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -8,6 +8,15 @@ repositories {
     flatDir {
         dirs '../libs'
     }
+    maven {
+        name "Tapjoy's maven repo"
+        url "https://tapjoy.bintray.com/maven"
+    }
+    maven {
+        url "https://adcolony.bintray.com/AdColony"
+    }
+    maven { url 'https://jitpack.io' }  // For Vungle
+    maven { url "https://dl.bintray.com/ironsource-mobile/android-sdk" } // For IronSource
     maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
 }
 
@@ -15,7 +24,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '5.6.0'
+project.version = '5.7.0'
 
 android {
     compileSdkVersion 28
@@ -27,14 +36,24 @@ android {
     }
 
     defaultConfig {
-        versionCode 67
+        versionCode 68
         versionName version
         minSdkVersion 19
         targetSdkVersion 28
+        multiDexEnabled true
 
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
     }
 
+    flavorDimensions "default"
+    productFlavors {
+        external {
+            versionName "external"
+            dimension "default"
+        }
+
+    }
+
     buildTypes {
         release {
             minifyEnabled true
@@ -53,7 +72,7 @@ android {
             resources.srcDirs = ['src/main/java']
             aidl.srcDirs = ['src/main']
             renderscript.srcDirs = ['src/main']
-            res.srcDirs = ['res']
+            res.srcDirs = ['res/main']
             assets.srcDirs = ['assets']
         }
     }
@@ -65,6 +84,34 @@ android {
 }
 
 dependencies {
+    // Third party Custom Network Adapters
+    implementation 'com.adcolony:sdk:3.3.10'
+    implementation 'com.google.android.gms:play-services-ads:17.2.0'
+    implementation "com.applovin:applovin-sdk:9.4.2"
+//    implementation name: 'chartboost-7.3.1'
+    implementation 'com.facebook.android:audience-network-sdk:5.3.0'
+    implementation 'com.flurry.android:ads:11.6.0'
+    implementation 'com.flurry.android:analytics:11.6.0'
+    implementation 'com.ironsource.sdk:mediationsdk:6.8.3@jar'
+    implementation 'com.tapjoy:tapjoy-android-sdk:12.2.1@aar'
+    implementation 'com.unity3d.ads:unity-ads:3.0.3@aar'
+    implementation 'com.verizon.ads:android-vas-standard-edition:1.0.2'
+    // Vungle and its dependencies.
+    implementation 'com.github.vungle:vungle-android-sdk:6.3.24'
+
+    // MoPub Custom Network Adapters
+    implementation 'com.mopub.mediation:adcolony:3.3.10.0'
+    implementation 'com.mopub.mediation:admob:17.2.0.1'
+    implementation 'com.mopub.mediation:applovin:9.4.2.0'
+//    implementation 'com.mopub.mediation:chartboost:7.3.1.4'
+    implementation 'com.mopub.mediation:facebookaudiencenetwork:5.3.0.0'
+    implementation 'com.mopub.mediation:flurry:11.6.0.0'
+    implementation 'com.mopub.mediation:ironsource:6.8.3.0'
+    implementation 'com.mopub.mediation:tapjoy:12.2.1.1'
+    implementation 'com.mopub.mediation:unityads:3.0.3.0'
+    implementation 'com.mopub.mediation:verizon:1.0.2.1'
+    implementation 'com.mopub.mediation:vungle:6.3.24.2'
+
     implementation 'com.android.support:customtabs:28.0.0'
     implementation 'com.android.support:support-v4:28.0.0'
     implementation 'com.android.support:design:28.0.0'
diff --git a/mopub-sample/res/internal/values/strings.xml b/mopub-sample/res/internal/values/strings.xml
new file mode 100644
index 00000000..03ed05e1
--- /dev/null
+++ b/mopub-sample/res/internal/values/strings.xml
@@ -0,0 +1,222 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--Macaw - Exchange test ad units-->
+    <string name="ad_unit_id_macaw_interstitial_portrait">2971114e05df4bb6bfeb83aefd2cb13f</string>
+    <string name="ad_unit_id_macaw_banner">1901a8606d8a45c9bf2358be5dc220e9</string>
+    <string name="ad_unit_id_macaw_mrect">7dfc45083ef04ea6b7533f1b2b8f5f6b</string>
+    <string name="ad_unit_id_macaw_leaderboard">ad21b1b40cfb45d38ca27e996e538005</string>
+    <string name="ad_unit_id_macaw_interstitial_landscape">181294542e6b4b33bd80cf1563dc4724</string>
+    <string name="ad_unit_id_macaw_tablet_interstitial_portrait">c6380a094a444657836884e12b86e013</string>
+    <string name="ad_unit_id_macaw_tablet_interstitial_landscape">d9f040c7f29a4da6b9262a1d504dc057</string>
+    <string name="ad_unit_id_macaw_skyscraper">f12e1691e6614496a1530b530bde85cc</string>
+    <string name="ad_unit_id_macaw_native">5d73b139cd3f402f8a6767670c4cf6fb</string>
+
+    <!--Release Testing ad units-->
+    <string name="ad_unit_id_rt_banner_image">64561445aa894576b6899e364c3cf003</string>
+    <string name="ad_unit_id_rt_banner_html">977c3ca769ce488293edac7a7a85ce99</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_device">af50074dfa38476d85449391523ba2aa</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_landscape">e31935dc878b412dba363b7b61484df0</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_portrait">5b1917e405a34e238f0816371124590d</string>
+    <string name="ad_unit_id_rt_banner_resizing">26c38be32221456e9b5bdfba15211afe</string>
+
+    <string name="ad_unit_id_rt_mrect_image">560b3ba10bbe485ebc9e37a2e1cbbe4b</string>
+    <string name="ad_unit_id_rt_mrect_html">a0d719ae192748c2959f32235db68daf</string>
+    <string name="ad_unit_id_rt_mrect_expanding_device">4badb91a5c344cbda602a0a83d8937f2</string>
+    <string name="ad_unit_id_rt_mrect_expanding_landscape">01b88873d7c74dff9531ea744c4431e3</string>
+    <string name="ad_unit_id_rt_mrect_expanding_portrait">7b3189920ec646acb8f61d4d5013d7e3</string>
+    <string name="ad_unit_id_rt_mrect_resizing">53373b5f681a42438d9df71aa74165c4</string>
+    <string name="ad_unit_id_rt_mrect_html_video">5a85ad2677c34bffb2ae0b45eb18efdd</string>
+
+    <string name="ad_unit_id_rt_leaderboard_image">ab496e83496243e7b27c6b0636d9e9a2</string>
+    <string name="ad_unit_id_rt_leaderboard_html">37309343b1cc46b6ae5f2f4b0728f4f4</string>
+    <string name="ad_unit_id_rt_leaderboard_mraid_expanding_device">cc630d7fe5bf4f918e98d4f3ab6e0e51</string>
+    <string name="ad_unit_id_rt_leaderboard_mraid_expanding_landscape">cda9d79b0d704407ad1f0a1b6c3b837e</string>
+    <string name="ad_unit_id_rt_leaderboard_mraid_expanding_portrait">4f8a48f1ed4346408e793c3e1b83b2fe</string>
+    <string name="ad_unit_id_rt_leaderboard_mraid_resizing_offscreen">a652687cc74c41e19f4999bac37b854d</string>
+    <string name="ad_unit_id_rt_leaderboard_mraid_resizing_no_offscreen">2ff3c7b2d6234798a01ead84a6afda21</string>
+
+    <string name="ad_unit_id_rt_interstitial_vast_no_ext_companion_landscape">eab0db43a021431c9ae43e6ff1dd8fac</string>
+    <string name="ad_unit_id_rt_interstitial_vast_no_ext_no_companion_landscape">3d752afaad8f41f2a32de0c9e83a6b49</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_device">4e56aa03c3ad48338b70d8cc890553b0</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_landscape">2bc078315efe4edda00d2bae478e894b</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_portrait">0ee47e89697a44789a60b3d83dacd526</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_device">212d6c826d78476f8d01fa32726b4b98</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_landscape">3521c7acd9dd41358a6564cff5eddedf</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_portrait">468abb57b71147559d7bcb972e23c91a</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_no_ext_companion_landscape">abf919e86136493cbe0237f6067ee1eb</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_no_ext_no_companion_landscape">f1faff48504e4e3db51fcecb64a6e12b</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_device">2393fd574c424602a514d0a47cfb82fb</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_landscape">5ccb97c1c11d4453915e3b8c9a10adad</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_portrait">697bb483986f4f77862e589c785f0f8a</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_device">c3630d063505462a92e132cf04ac345b</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_landscape">8521f18a728c4ddd8dacba5ae365919c</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_portrait">21f931b01a24422db56fe43f10123c2e</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_no_ext_companion_landscape">5b8c27f29c324b32b8c1a2f886533334</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_no_ext_no_companion_landscape">d344c1d0fcc24b4cbd23cea9a9b584f6</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_device">fe419b86c7a94c5da8b92c30725e2cac</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_landscape">5dd4cb47c72e42a0a6232480cdfffbeb</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_portrait">cf225b3cbec346faa3f135c92d6ed29a</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_device">371b5b7466f648e0813bcdc6892f4f8d</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_landscape">73969508231d4307bbfa0db2d0a0661e</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_portrait">7ca95e3c3cd743cf9dceb832024a1bb6</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_no_ext_companion_landscape">d02ea0fd104f4cf78dd7923512d708f8</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_no_ext_no_companion_landscape">069a58386a604bde86910864b5c75595</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_device">96c8fae1fc944df48490787d9e0357b0</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_landscape">2b64e0a3fe104d42897cb76f8a3480cb</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_portrait">edaec97a7f294a64b85c5276ef2167e8</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_device">77017a8d78494d26bb4efff5a2afda37</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_landscape">9aea5f9dce844469b6d38067c18c1a03</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_portrait">e2979c25a56b4605aa6220cd44c6ae61</string>
+
+    <string name="ad_unit_id_rt_native_image_default">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom">06f544793ab94b519c64a8935b97fef8</string>
+    <string name="ad_unit_id_rt_native_video_default">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom">28376225b2ea4a34a5dd4d0c258f42b1</string>
+    <string name="ad_unit_id_rt_native_image_default_table">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom_table">576d8faa86bf43ed885086428ec12ab7</string>
+    <string name="ad_unit_id_rt_native_video_default_table">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom_table">a4ec9929ee58404eb95e8376a0666277</string>
+    <string name="ad_unit_id_rt_native_image_default_collection">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom_collection">4d28445bbd95448d9b3fefb6d97fdc41</string>
+    <string name="ad_unit_id_rt_native_video_default_collection">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom_collection">ec2b5696162249c0b54098dd0b69c07a</string>
+
+    <string name="ad_unit_id_rt_interstitial_image_landscape_phone">4477f9af6c9344bd808e992ca007e59d</string>
+    <string name="ad_unit_id_rt_interstitial_image_portrait_phone">5cbfe91d79da4329b286901d6182c74a</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_landscape_phone">f42ae53ecdd4470887672764f12ec835</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_portrait_phone">1252adbc258b4bc788a5e9cfb943f466</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_device_phone">092db09cfb80492787ce53085aac6a28</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_landscape_phone">ef93604eafc3459cab3c79adc5c09049</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_portrait_phone">f9719cc678a741229dacc64f81e87628</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_landscape_phone">3ae5fe30cc8347ccb5af452b9e027eba</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_portrait_phone">66129990cd3948b08c8003a4294e3def</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_device_phone">f2054a24efac4ecf9b6bfd914e06e23c</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_landscape_phone">ca84ae968d2c4bea93899f32eda5b643</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_portrait_phone">7465977860334b348eb2c5d6694948f2</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_device_phone">02b8b6d870934b29b2bff23327493ee0</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_landscape_phone">13026731e30c4717a6b7dcf2487a25ac</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_portrait_phone">4dc7af75c20649e7b0a1001f9aa12085</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_device_phone">84c1c08648ca4314a9824face0c6c04d</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_landscape_phone">f0f5a7c4e0da43a697095a0e957f1f5f</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_portrait_phone">48d51627826d45c2af0a8b6b0246e67c</string>
+
+    <string name="ad_unit_id_rt_interstitial_image_landscape_tablet">7a78e378b2074e00b3f9769166f74fa2</string>
+    <string name="ad_unit_id_rt_interstitial_image_portrait_tablet">bdc5ef94de78401484df684787221b4e</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_landscape_tablet">716ee330cba0402bbea1d245d0ea8176</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_portrait_tablet">5309c6f83dec4f529d534d41ee58098c</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_device_tablet">1d6d1ff7e76b45beb72e7d5f43b177fb</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_landscape_tablet">4a21aec9b6da4c2283868d63017431b6</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_portrait_tablet">adb11b502c1e4d90a5f71754958c8f4f</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_landscape_tablet">9367c4d4b7444bceab89d7df077b9b5f</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_portrait_tablet">6acc18636c214b5696142099916b9ccc</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_device_tablet">7a402b5890ca44a4a28c2a8c02e59db8</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_landscape_tablet">66d700fdee0446a7ad67d3def71da5aa</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_portrait_tablet">c5ce794be004487e8815680cf4ce9f66</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_device_tablet">846d915b5fa74fda8e95c5c9519ec16b</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_landscape_tablet">81c2c5bfd8254f4e9f1cf9f9f3548581</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_portrait_tablet">84cc08ecb0e3415eb6fa399b9dcbcd5b</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_device_tablet">8e658b5231824280833226ba9f0ee433</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_landscape_tablet">d552acc66aec4c4cb85e61d14439b580</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_portrait_tablet">969e1e14f93448b1ad334a7a5e46e512</string>
+
+    <!--Top Grossing-->
+    <string name="ad_unit_id_top_grossing_banner_phone">321da3e82353435cac072116cab84b23</string>
+    <string name="ad_unit_id_top_grossing_mrect_phone">e4ec5b5d8b224ef895d6d93094dc6949</string>
+    <string name="ad_unit_id_top_grossing_interstitial_phone">ebe9132e1ec748ddbc1e333089e95113</string>
+    <string name="ad_unit_id_top_grossing_rewarded_phone">23ba06fc2a9a4b6383812bd7003b3fd9</string>
+    <string name="ad_unit_id_top_grossing_native_phone">554e7a6c341242228f122b653e12417e</string>
+
+    <string name="ad_unit_id_top_grossing_banner_tablet">b87326a1a64746c88b996f0234efd7e3</string>
+    <string name="ad_unit_id_top_grossing_mrect_tablet">be678056f327430b91d62a861cbebd0f</string>
+    <string name="ad_unit_id_top_grossing_leaderboard_tablet">dd85ff2a8dd64318b8fb0a17e35c8f0a</string>
+    <string name="ad_unit_id_top_grossing_interstitial_tablet">1baf215709034ef19ad4cd80e6396e00</string>
+    <string name="ad_unit_id_top_grossing_rewarded_tablet">a83d73f6b65848eb98529a1b168a3708</string>
+    <string name="ad_unit_id_top_grossing_native_tablet">eecebc103df84c0aa0acfb4ea6b93237</string>
+
+    <!--Twitter Audience Platform-->
+    <string name="ad_unit_id_tap_banner">f684d7bf6a104bbdab3993cc291255dd</string>
+    <string name="ad_unit_id_tap_banner_tablet">b4a6dba86aa84c159098335320b22f89</string>
+    <string name="ad_unit_id_tap_interstitial_landscape">bdb933f863d940d4ba0d48c32c31a461</string>
+    <string name="ad_unit_id_tap_interstitial_landscape_tablet">6e554b8347aa41c68df0c1b8024f141c</string>
+    <string name="ad_unit_id_tap_interstitial_portrait">5de9a132df214abcb500c37c447b339c</string>
+    <string name="ad_unit_id_tap_interstitial_portrait_tablet">2905c14f6e4f43b0b9bbaed1705b9296</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_landscape">d3c1cd039dcc4326ad64d4d6fde6a4a5</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_landscape_tablet">2118107dd5bf46409ec2df6b447836dd</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_portrait">efe8c053bf074771b27ea976d82b6a5b</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_portrait_tablet">00b1cf7dcb25410da6e9e6b59f82fc09</string>
+    <string name="ad_unit_id_tap_video_interstitial_device">490a81eec0974e0e9567b87d2fd6b81a</string>
+    <string name="ad_unit_id_tap_video_interstitial_device_tablet">6ea242b72ab849e1a668dbe70715a5f3</string>
+    <string name="ad_unit_id_tap_video_interstitial_landscape">a239770e3b7849988c888a284d7718f0</string>
+    <string name="ad_unit_id_tap_video_interstitial_landscape_tablet">f7eb5bf595964bcc8e047b4a1e7e7817</string>
+    <string name="ad_unit_id_tap_video_interstitial_portrait">28f0dad82c984c5995592f7802b059d7</string>
+    <string name="ad_unit_id_tap_video_interstitial_portrait_tablet">9adfcc1aeb1749dfa90a725d63e6d8b4</string>
+    <string name="ad_unit_id_tap_leaderboard">6a763eac135a446594c530a50c35e5d4</string>
+    <string name="ad_unit_id_tap_mrect">f36e9fdc947d4b4faaeb15aa3e29a2ec</string>
+    <string name="ad_unit_id_tap_mrect_tablet">0f56c33f03754018842aaa794abbe719</string>
+    <string name="ad_unit_id_tap_native_static">09d4e470ca534795b71041c6ca79bac4</string>
+    <string name="ad_unit_id_tap_native_static_tablet">68c0539952f0451093a76c5359d4eecc</string>
+    <string name="ad_unit_id_tap_rewarded_video_device">2cbbe2727b1f43a48abe702fd5900412</string>
+    <string name="ad_unit_id_tap_rewarded_video_device_tablet">ecfb2fe99c754acb8637624c2b522425</string>
+    <string name="ad_unit_id_tap_rewarded_video_landscape">e0cfc0942c7f4fb195dee8456af49149</string>
+    <string name="ad_unit_id_tap_rewarded_video_landscape_tablet">abe2a3157872408289059af8d4f1c9c1</string>
+    <string name="ad_unit_id_tap_rewarded_video_portrait">87fa6ad3da6f4b419bec69e328397c77</string>
+    <string name="ad_unit_id_tap_rewarded_video_portrait_tablet">aa837da50377422d95fe43cd0117d3a7</string>
+
+    <!--AdColony-->
+    <string name="ad_unit_id_adcolony_interstitial">953d93d50ae343168ad44c3c536cdb1a</string>
+    <string name="ad_unit_id_adcolony_rewarded_video">339929134a55413d9c0a85496b250057</string>
+
+    <!--AdMob-->
+    <string name="ad_unit_id_admob_banner">83cff4cec21148cd820470462f6efeca</string>
+    <string name="ad_unit_id_admob_interstitial">278161384e0445b6a6c2d00596caa006</string>
+    <string name="ad_unit_id_admob_rewarded_video">f7cc70b82da549a09f19a73f83bdbfba</string>
+    <string name="ad_unit_id_admob_native">f3ec720ff0e94a81a5bcd4773e98bab9</string>
+
+    <!--AppLovin-->
+    <string name="ad_unit_id_applovin_banner">3bb1e241a91040d79c4194dd476b9c60</string>
+    <string name="ad_unit_id_applovin_interstitial">d960ac7f90d041c8a4d817726a76a2fa</string>
+    <string name="ad_unit_id_applovin_rewarded_video">b28c982f77dd4c68a9e36ab7a1a87c1a</string>
+
+    <!--Chartboost-->
+    <string name="ad_unit_id_chartboost_interstitial">376366b49d324dedae3d5edb360c27b4</string>
+    <string name="ad_unit_id_chartboost_rewarded_video">df605ab15b56400285c99e521ecc2cb1</string>
+
+    <!--Facebook Audience Network-->
+    <string name="ad_unit_id_fan_banner">b40a96dd275e4ce5be2cdf5faa92007d</string>
+    <string name="ad_unit_id_fan_interstitial">9792d876011f4359887d2d26380e8a84</string>
+    <string name="ad_unit_id_fan_rewarded_video">7220c37b8e93499a8f0aff2eb4f0ad3d</string>
+    <string name="ad_unit_id_fan_native">f97733db27f44defbeb39ce495047779</string>
+
+    <!--Flurry-->
+    <string name="ad_unit_id_flurry_interstitial">716519f41a9144ff9c7afc35b80d6ce8</string>
+    <string name="ad_unit_id_flurry_native">17e0b51cac33483f9890fce08bedfed2</string>
+
+    <!--ironSource-->
+    <string name="ad_unit_id_ironsource_interstitial">9556b7f57e724cb4b5eba926b8258e3c</string>
+    <string name="ad_unit_id_ironsource_rewarded_video">885b4f0c25884d468da2c8d657b0d95b</string>
+
+    <!--Tapjoy-->
+    <string name="ad_unit_id_tapjoy_interstitial">aee78cf481994c67b7e7cb983340a5f3</string>
+    <string name="ad_unit_id_tapjoy_rewarded_video">f2be86b5ae52440a83ef24d426074d2e</string>
+
+    <!--Unity Ads-->
+    <string name="ad_unit_id_unity_interstitial">3db70dc7af6d4fb3ababa860bb4b9062</string>
+    <string name="ad_unit_id_unity_rewarded_video">fa84b7823f4147d883f6bb967f8ef15f</string>
+
+    <!--Verizon-->
+    <string name="ad_unit_id_verizon_banner">cdbdbe29679c442aa9b00c4dd41109a5</string>
+    <string name="ad_unit_id_verizon_interstitial">f655c6e61c67465db58fb0665eb86de7</string>
+
+    <!--Vungle-->
+    <string name="ad_unit_id_vungle_interstitial">5635d28cda6c4dab965b9cf7a99d5af5</string>
+    <string name="ad_unit_id_vungle_rewarded_video">e97347b0a04d417ea178d3ec22766490</string>
+</resources>
diff --git a/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..6df2e3c5
Binary files /dev/null and b/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8f141bdd
Binary files /dev/null and b/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..38c3aa82
Binary files /dev/null and b/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..fd11173e
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8d2ff458
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8d2ff458
Binary files /dev/null and b/mopub-sample/res/main/drawable/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/drawable/icon.png b/mopub-sample/res/main/drawable/icon.png
similarity index 100%
rename from mopub-sample/res/drawable/icon.png
rename to mopub-sample/res/main/drawable/icon.png
diff --git a/mopub-sample/res/drawable/logo.png b/mopub-sample/res/main/drawable/logo.png
similarity index 100%
rename from mopub-sample/res/drawable/logo.png
rename to mopub-sample/res/main/drawable/logo.png
diff --git a/mopub-sample/res/drawable/mopub.png b/mopub-sample/res/main/drawable/mopub.png
similarity index 100%
rename from mopub-sample/res/drawable/mopub.png
rename to mopub-sample/res/main/drawable/mopub.png
diff --git a/mopub-sample/res/drawable/side_nav_bar.xml b/mopub-sample/res/main/drawable/side_nav_bar.xml
similarity index 100%
rename from mopub-sample/res/drawable/side_nav_bar.xml
rename to mopub-sample/res/main/drawable/side_nav_bar.xml
diff --git a/mopub-sample/res/drawable/spacer.png b/mopub-sample/res/main/drawable/spacer.png
similarity index 100%
rename from mopub-sample/res/drawable/spacer.png
rename to mopub-sample/res/main/drawable/spacer.png
diff --git a/mopub-sample/res/layout/activity_main.xml b/mopub-sample/res/main/layout/activity_main.xml
similarity index 100%
rename from mopub-sample/res/layout/activity_main.xml
rename to mopub-sample/res/main/layout/activity_main.xml
diff --git a/mopub-sample/res/layout/ad_config_dialog.xml b/mopub-sample/res/main/layout/ad_config_dialog.xml
similarity index 100%
rename from mopub-sample/res/layout/ad_config_dialog.xml
rename to mopub-sample/res/main/layout/ad_config_dialog.xml
diff --git a/mopub-sample/res/layout/ad_configuration_list_item.xml b/mopub-sample/res/main/layout/ad_configuration_list_item.xml
similarity index 100%
rename from mopub-sample/res/layout/ad_configuration_list_item.xml
rename to mopub-sample/res/main/layout/ad_configuration_list_item.xml
diff --git a/mopub-sample/res/layout/ad_unit_list_fragment.xml b/mopub-sample/res/main/layout/ad_unit_list_fragment.xml
similarity index 64%
rename from mopub-sample/res/layout/ad_unit_list_fragment.xml
rename to mopub-sample/res/main/layout/ad_unit_list_fragment.xml
index 05097259..c317b243 100644
--- a/mopub-sample/res/layout/ad_unit_list_fragment.xml
+++ b/mopub-sample/res/main/layout/ad_unit_list_fragment.xml
@@ -7,11 +7,40 @@
     android:paddingBottom="8dp"
     android:textDirection="locale">
 
+    <EditText
+        android:id="@+id/search_bar_et"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_alignParentTop="true"
+        android:autofillHints="@string/filter_ads"
+        android:hint="@string/filter_ads"
+        android:imeActionId="6"
+        android:imeOptions="actionDone"
+        android:inputType="text"
+        android:maxLines="1"
+        android:paddingStart="5dp"
+        android:paddingLeft="5dp"
+        android:paddingEnd="38dp"
+        android:paddingRight="38dp" />
+
+    <Button
+        android:id="@+id/search_bar_clear_button"
+        android:layout_width="26dp"
+        android:layout_height="26dp"
+        android:layout_alignEnd="@id/search_bar_et"
+        android:layout_alignRight="@id/search_bar_et"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="7dp"
+        android:layout_marginRight="7dp"
+        android:background="@drawable/baseline_cancel_black_36" />
+
+
     <ListView
         android:id="@android:id/list"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_above="@id/status_change_notification"
+        android:layout_below="@id/search_bar_et"
         android:layout_marginBottom="10dp" />
 
     <EditText
diff --git a/mopub-sample/res/layout/app_bar_main.xml b/mopub-sample/res/main/layout/app_bar_main.xml
similarity index 100%
rename from mopub-sample/res/layout/app_bar_main.xml
rename to mopub-sample/res/main/layout/app_bar_main.xml
diff --git a/mopub-sample/res/layout/banner_detail_fragment.xml b/mopub-sample/res/main/layout/banner_detail_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/banner_detail_fragment.xml
rename to mopub-sample/res/main/layout/banner_detail_fragment.xml
diff --git a/mopub-sample/res/main/layout/fragment_impressions_info.xml b/mopub-sample/res/main/layout/fragment_impressions_info.xml
new file mode 100644
index 00000000..2e641f5c
--- /dev/null
+++ b/mopub-sample/res/main/layout/fragment_impressions_info.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/infoFragmentId"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/text_no_impressions"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_list"
+        android:textSize="@dimen/sample_text_size"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/impressions_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintBottom_toTopOf="@+id/close_btn"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:listitem="@android:layout/simple_selectable_list_item" />
+
+    <Button
+        android:id="@+id/close_btn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/close"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
+</android.support.constraint.ConstraintLayout>
diff --git a/mopub-sample/res/layout/interstitial_detail_fragment.xml b/mopub-sample/res/main/layout/interstitial_detail_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/interstitial_detail_fragment.xml
rename to mopub-sample/res/main/layout/interstitial_detail_fragment.xml
diff --git a/mopub-sample/res/layout/main.xml b/mopub-sample/res/main/layout/main.xml
similarity index 100%
rename from mopub-sample/res/layout/main.xml
rename to mopub-sample/res/main/layout/main.xml
diff --git a/mopub-sample/res/main/layout/native_ad_fan_list_item.xml b/mopub-sample/res/main/layout/native_ad_fan_list_item.xml
new file mode 100644
index 00000000..e96f0437
--- /dev/null
+++ b/mopub-sample/res/main/layout/native_ad_fan_list_item.xml
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/native_outer_view"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@android:color/white"
+    android:textDirection="locale">
+
+    <com.facebook.ads.AdIconView
+        android:id="@+id/native_icon"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null" />
+
+    <TextView
+        android:id="@+id/native_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginLeft="84dp"
+        android:layout_marginStart="84dp"
+        android:layout_marginTop="32dp"
+        android:textColor="@android:color/darker_gray"
+        android:textStyle="bold" />
+
+    <TextView
+        android:id="@+id/native_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/native_icon"
+        android:layout_marginLeft="10dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp"
+        android:textColor="@android:color/darker_gray" />
+
+
+    <com.facebook.ads.MediaView
+        android:id="@+id/native_media_view"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/native_text"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <Button
+        android:id="@+id/native_cta"
+        android:layout_width="wrap_content"
+        android:layout_height="35dp"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_below="@+id/native_media_view"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="10dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:paddingBottom="10dp"
+        android:text="@string/learn_more"
+        android:textColor="@android:color/black"
+        android:textSize="12sp"
+        android:textStyle="bold" />
+
+    <RelativeLayout
+        android:id="@+id/native_privacy_information_icon_layout"
+        android:layout_width="100dp"
+        android:layout_height="40dp"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentTop="true"
+        android:contentDescription="@string/native_privacy_information_icon_image"
+        android:padding="10dp" />
+
+</RelativeLayout>
diff --git a/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml b/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml
new file mode 100644
index 00000000..096064be
--- /dev/null
+++ b/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml
@@ -0,0 +1,117 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/flurry_native_outer_view"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@android:color/white">
+
+    <ImageView
+        android:id="@+id/flurry_native_icon_image"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginStart="10dp"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null" />
+
+    <TextView
+        android:id="@+id/flurry_native_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp"
+        android:layout_marginTop="32dp"
+        android:textColor="@android:color/darker_gray"
+        android:textStyle="bold" />
+
+    <ImageView
+        android:id="@+id/flurry_star_rating_image"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_native_title"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp" />
+
+    <TextView
+        android:id="@+id/flurry_app_category"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_star_rating_image"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp"
+        android:textColor="@android:color/black" />
+
+    <TextView
+        android:id="@+id/flurry_native_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_native_icon_image"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginStart="10dp"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:textColor="@android:color/darker_gray" />
+
+    <ImageView
+        android:id="@+id/flurry_native_main_image"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_below="@+id/flurry_native_text"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:background="@null"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <FrameLayout
+        android:id="@+id/flurry_native_video_view"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_below="@+id/flurry_native_text"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <ImageView
+        android:id="@+id/flurry_native_brand_logo"
+        android:layout_width="20dp"
+        android:layout_height="20dp"
+        android:layout_below="@+id/flurry_native_main_image"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="15dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:scaleType="fitXY" />
+
+    <Button
+        android:id="@+id/flurry_native_cta"
+        android:layout_width="wrap_content"
+        android:layout_height="35dp"
+        android:layout_below="@+id/flurry_native_main_image"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_marginTop="10dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:paddingBottom="10dp"
+        android:text="@string/learn_more"
+        android:textColor="@android:color/black"
+        android:textSize="12sp"
+        android:textStyle="bold" />
+
+</RelativeLayout>
diff --git a/mopub-sample/res/layout/native_ad_list_item.xml b/mopub-sample/res/main/layout/native_ad_list_item.xml
similarity index 100%
rename from mopub-sample/res/layout/native_ad_list_item.xml
rename to mopub-sample/res/main/layout/native_ad_list_item.xml
diff --git a/mopub-sample/res/layout/native_gallery_content.xml b/mopub-sample/res/main/layout/native_gallery_content.xml
similarity index 100%
rename from mopub-sample/res/layout/native_gallery_content.xml
rename to mopub-sample/res/main/layout/native_gallery_content.xml
diff --git a/mopub-sample/res/layout/native_gallery_fragment.xml b/mopub-sample/res/main/layout/native_gallery_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/native_gallery_fragment.xml
rename to mopub-sample/res/main/layout/native_gallery_fragment.xml
diff --git a/mopub-sample/res/layout/native_list_view_fragment.xml b/mopub-sample/res/main/layout/native_list_view_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/native_list_view_fragment.xml
rename to mopub-sample/res/main/layout/native_list_view_fragment.xml
diff --git a/mopub-sample/res/layout/nav_header_main.xml b/mopub-sample/res/main/layout/nav_header_main.xml
similarity index 100%
rename from mopub-sample/res/layout/nav_header_main.xml
rename to mopub-sample/res/main/layout/nav_header_main.xml
diff --git a/mopub-sample/res/layout/networks_info_fragment.xml b/mopub-sample/res/main/layout/networks_info_fragment.xml
similarity index 93%
rename from mopub-sample/res/layout/networks_info_fragment.xml
rename to mopub-sample/res/main/layout/networks_info_fragment.xml
index 408aa4a6..7dfcb346 100644
--- a/mopub-sample/res/layout/networks_info_fragment.xml
+++ b/mopub-sample/res/main/layout/networks_info_fragment.xml
@@ -2,7 +2,7 @@
 <android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/infoFrarmentId"
+    android:id="@+id/networksFragmentId"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
@@ -12,7 +12,7 @@
         android:layout_height="wrap_content"
         android:text="@string/no_network_adapters_found"
         android:textSize="@dimen/sample_text_size"
-        app:layout_constraintBottom_toTopOf="@id/privacy_close_btn"
+        app:layout_constraintBottom_toTopOf="@id/networks_close_btn"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
diff --git a/mopub-sample/res/layout/privacy_info_divider.xml b/mopub-sample/res/main/layout/privacy_info_divider.xml
similarity index 100%
rename from mopub-sample/res/layout/privacy_info_divider.xml
rename to mopub-sample/res/main/layout/privacy_info_divider.xml
diff --git a/mopub-sample/res/layout/privacy_info_fragment.xml b/mopub-sample/res/main/layout/privacy_info_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/privacy_info_fragment.xml
rename to mopub-sample/res/main/layout/privacy_info_fragment.xml
diff --git a/mopub-sample/res/layout/privacy_info_item.xml b/mopub-sample/res/main/layout/privacy_info_item.xml
similarity index 100%
rename from mopub-sample/res/layout/privacy_info_item.xml
rename to mopub-sample/res/main/layout/privacy_info_item.xml
diff --git a/mopub-sample/res/layout/recycler_view_fragment.xml b/mopub-sample/res/main/layout/recycler_view_fragment.xml
similarity index 100%
rename from mopub-sample/res/layout/recycler_view_fragment.xml
rename to mopub-sample/res/main/layout/recycler_view_fragment.xml
diff --git a/mopub-sample/res/layout/video_ad_list_item.xml b/mopub-sample/res/main/layout/video_ad_list_item.xml
similarity index 100%
rename from mopub-sample/res/layout/video_ad_list_item.xml
rename to mopub-sample/res/main/layout/video_ad_list_item.xml
diff --git a/mopub-sample/res/menu/activity_main_drawer.xml b/mopub-sample/res/main/menu/activity_main_drawer.xml
similarity index 100%
rename from mopub-sample/res/menu/activity_main_drawer.xml
rename to mopub-sample/res/main/menu/activity_main_drawer.xml
diff --git a/mopub-sample/res/main/menu/main.xml b/mopub-sample/res/main/menu/main.xml
new file mode 100644
index 00000000..966d6451
--- /dev/null
+++ b/mopub-sample/res/main/menu/main.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_impressions"
+        android:orderInCategory="100"
+        android:title="@string/impressions_text"
+        app:showAsAction="never" />
+
+    <item
+        android:id="@+id/action_clear_logs"
+        android:orderInCategory="101"
+        android:title="@string/clear_logs"
+        app:showAsAction="never" />
+</menu>
diff --git a/mopub-sample/res/values-sw400dp/dimens.xml b/mopub-sample/res/main/values-sw400dp/dimens.xml
similarity index 100%
rename from mopub-sample/res/values-sw400dp/dimens.xml
rename to mopub-sample/res/main/values-sw400dp/dimens.xml
diff --git a/mopub-sample/res/values-sw600dp/dimens.xml b/mopub-sample/res/main/values-sw600dp/dimens.xml
similarity index 100%
rename from mopub-sample/res/values-sw600dp/dimens.xml
rename to mopub-sample/res/main/values-sw600dp/dimens.xml
diff --git a/mopub-sample/res/values-sw800dp/dimens.xml b/mopub-sample/res/main/values-sw800dp/dimens.xml
similarity index 100%
rename from mopub-sample/res/values-sw800dp/dimens.xml
rename to mopub-sample/res/main/values-sw800dp/dimens.xml
diff --git a/mopub-sample/res/values-v21/styles.xml b/mopub-sample/res/main/values-v21/styles.xml
similarity index 100%
rename from mopub-sample/res/values-v21/styles.xml
rename to mopub-sample/res/main/values-v21/styles.xml
diff --git a/mopub-sample/res/values-v28/styles.xml b/mopub-sample/res/main/values-v28/styles.xml
similarity index 100%
rename from mopub-sample/res/values-v28/styles.xml
rename to mopub-sample/res/main/values-v28/styles.xml
diff --git a/mopub-sample/res/values/colors.xml b/mopub-sample/res/main/values/colors.xml
similarity index 65%
rename from mopub-sample/res/values/colors.xml
rename to mopub-sample/res/main/values/colors.xml
index 9305825e..b81dd08e 100644
--- a/mopub-sample/res/values/colors.xml
+++ b/mopub-sample/res/main/values/colors.xml
@@ -2,7 +2,9 @@
 <resources>
     <color name="colorPrimary">#008577</color>
     <color name="colorPrimaryDark">#00574B</color>
-    <color name="colorAccent">#D81B60</color>
+    <color name="colorAccent">#FF40C4FF</color>
     <color name="colorLightGreay">#46cccccc</color>
     <color name="textDark">#ff070707</color>
+    <color name="listLight">#ffffffff</color>
+    <color name="listDark">#fff2f2f2</color>
 </resources>
diff --git a/mopub-sample/res/values/dimens.xml b/mopub-sample/res/main/values/dimens.xml
similarity index 100%
rename from mopub-sample/res/values/dimens.xml
rename to mopub-sample/res/main/values/dimens.xml
diff --git a/mopub-sample/res/values/drawables.xml b/mopub-sample/res/main/values/drawables.xml
similarity index 100%
rename from mopub-sample/res/values/drawables.xml
rename to mopub-sample/res/main/values/drawables.xml
diff --git a/mopub-sample/res/values/strings.xml b/mopub-sample/res/main/values/strings.xml
similarity index 92%
rename from mopub-sample/res/values/strings.xml
rename to mopub-sample/res/main/values/strings.xml
index 44da6a24..48695da3 100644
--- a/mopub-sample/res/values/strings.xml
+++ b/mopub-sample/res/main/values/strings.xml
@@ -54,4 +54,10 @@
     <string name="network_adapters">Network Adapters</string>
     <string name="pim_is_not_available">getPersonalInformationManager() returned null</string>
     <string name="list_fragment_not_found">Can\'t find MoPubListFragment.</string>
+    <string name="filter_ads">Filter ads</string>
+    <string name="impressions_text">Impressions</string>
+    <string name="clear_logs">Clear logs</string>
+    <string name="empty_list">Empty list</string>
+    <string name="share_impression">Share Impression</string>
+
 </resources>
diff --git a/mopub-sample/res/values/styles.xml b/mopub-sample/res/main/values/styles.xml
similarity index 100%
rename from mopub-sample/res/values/styles.xml
rename to mopub-sample/res/main/values/styles.xml
diff --git a/mopub-sample/res/xml/network_security_config.xml b/mopub-sample/res/main/xml/network_security_config.xml
similarity index 100%
rename from mopub-sample/res/xml/network_security_config.xml
rename to mopub-sample/res/main/xml/network_security_config.xml
diff --git a/mopub-sample/res/menu/main.xml b/mopub-sample/res/menu/main.xml
deleted file mode 100644
index a2411e31..00000000
--- a/mopub-sample/res/menu/main.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-</menu>
diff --git a/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java
new file mode 100644
index 00000000..1aa53bb5
--- /dev/null
+++ b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java
@@ -0,0 +1,59 @@
+package com.mopub.simpleadsdemo;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+
+import com.mopub.common.Preconditions;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LEADERBOARD;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MRECT;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.REWARDED_VIDEO;
+
+enum SampleAppDefaultAdUnits {
+    SAMPLE_BANNER(R.string.ad_unit_id_banner, BANNER, "MoPub Banner Sample"),
+    SAMPLE_MRECT(R.string.ad_unit_id_mrect, MRECT, "MoPub Mrect Sample"),
+    SAMPLE_LEADERBOARD(R.string.ad_unit_id_leaderboard, LEADERBOARD, "MoPub Leaderboard Sample"),
+    SAMPLE_INTERSTITIAL(R.string.ad_unit_id_interstitial, INTERSTITIAL,
+            "MoPub Interstitial Sample"),
+    SAMPLE_REWARDED_VIDEO(R.string.ad_unit_id_rewarded_video, REWARDED_VIDEO,
+            "MoPub Rewarded Video Sample"),
+    SAMPLE_REWARDED_RICH_MEDIA(R.string.ad_unit_id_rewarded_rich_media, REWARDED_VIDEO,
+            "MoPub Rewarded Rich Media Sample"),
+    SAMPLE_NATIVE_LIST_VIEW(R.string.ad_unit_id_native, LIST_VIEW, "MoPub Ad Placer Sample"),
+    SAMPLE_NATIVE_RECYCLER_VIEW(R.string.ad_unit_id_native, RECYCLER_VIEW,
+            "MoPub Recycler View Sample"),
+    SAMPLE_NATIVE_VIEW_PAGER(R.string.ad_unit_id_native, CUSTOM_NATIVE, "MoPub View Pager Sample");
+
+    private int mAdUnitIdStringKey;
+    @NonNull private MoPubSampleAdUnit.AdType mAdType;
+    @NonNull private String mDescription;
+
+    SampleAppDefaultAdUnits(final int adUnitIdStringKey,
+            @NonNull final MoPubSampleAdUnit.AdType adType, @NonNull final String description) {
+        mAdUnitIdStringKey = adUnitIdStringKey;
+        mAdType = adType;
+        mDescription = description;
+    }
+
+    static List<MoPubSampleAdUnit> getDefaultAdUnits(@NonNull final Context context) {
+        Preconditions.checkNotNull(context);
+
+        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<>();
+        for (SampleAppDefaultAdUnits adUnit : SampleAppDefaultAdUnits.values()) {
+            adUnitList.add(
+                    new com.mopub.simpleadsdemo.MoPubSampleAdUnit
+                            .Builder(context.getString(adUnit.mAdUnitIdStringKey), adUnit.mAdType)
+                            .description(adUnit.mDescription)
+                            .build());
+        }
+        return adUnitList;
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
index c6aa5073..03f42e39 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
@@ -25,14 +25,6 @@
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.COLUMN_USER_GENERATED;
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.TABLE_AD_CONFIGURATIONS;
 import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LEADERBOARD;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MRECT;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.REWARDED_VIDEO;
 
 class AdUnitDataSource {
     private Context mContext;
@@ -129,65 +121,14 @@ private void deleteAllAdUnitsWithAdUnitIdAndAdType(@NonNull final String adUnitI
         return adConfigurations;
     }
 
-    List<MoPubSampleAdUnit> getDefaultAdUnits() {
-        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<>();
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_banner), BANNER)
-                        .description("MoPub Banner Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_mrect), MRECT)
-                        .description("MoPub Mrect Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_leaderboard), LEADERBOARD)
-                        .description("MoPub Leaderboard Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_interstitial), INTERSTITIAL)
-                        .description("MoPub Interstitial Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_rewarded_video),
-                        REWARDED_VIDEO)
-                        .description("MoPub Rewarded Video Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_rewarded_rich_media),
-                        REWARDED_VIDEO)
-                        .description("MoPub Rewarded Rich Media Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), LIST_VIEW)
-                        .description("MoPub Ad Placer Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), RECYCLER_VIEW)
-                        .description("MoPub Recycler View Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), CUSTOM_NATIVE)
-                        .description("MoPub View Pager Sample")
-                        .build());
-        return adUnitList;
-    }
-
     private void populateDefaultSampleAdUnits() {
         final HashSet<MoPubSampleAdUnit> allAdUnits = new HashSet<>();
         for (final MoPubSampleAdUnit adUnit : getAllAdUnits()) {
             allAdUnits.add(adUnit);
         }
 
-        for (final MoPubSampleAdUnit defaultAdUnit : getDefaultAdUnits()) {
+        for (final MoPubSampleAdUnit defaultAdUnit :
+                SampleAppDefaultAdUnits.getDefaultAdUnits(mContext)) {
             if (!allAdUnits.contains(defaultAdUnit)) {
                 createDefaultSampleAdUnit(defaultAdUnit);
             }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java
new file mode 100644
index 00000000..c15eec16
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java
@@ -0,0 +1,180 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v7.widget.DividerItemDecoration;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static android.support.v7.widget.DividerItemDecoration.VERTICAL;
+import static android.view.ViewGroup.FOCUS_AFTER_DESCENDANTS;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link ImpressionsInfoFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class ImpressionsInfoFragment extends Fragment {
+    private static final String ARG_IMPRESSIONS_LIST = "list_of_impressions";
+
+    @Nullable
+    private ImpressionsInfoAdapter adapter;
+    private View fragmentView;
+
+    public ImpressionsInfoFragment() {
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameter.
+     *
+     * @param impressions - list of impressions.
+     * @return A new instance of fragment ImpressionsInfoFragment.
+     */
+    public static ImpressionsInfoFragment newInstance(@NonNull ArrayList<String> impressions) {
+        final ImpressionsInfoFragment fragment = new ImpressionsInfoFragment();
+        final Bundle args = new Bundle();
+        args.putStringArrayList(ARG_IMPRESSIONS_LIST, impressions);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        ArrayList<String> impressionsList = null;
+        if (getArguments() != null) {
+            impressionsList = getArguments().getStringArrayList(ARG_IMPRESSIONS_LIST);
+        }
+
+        // Inflate the layout for this fragment
+        fragmentView = inflater.inflate(R.layout.fragment_impressions_info, container, false);
+
+        final RecyclerView recyclerView = fragmentView.findViewById(R.id.impressions_recycler_view);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
+        adapter = new ImpressionsInfoAdapter(container.getContext(), impressionsList);
+        recyclerView.setAdapter(adapter);
+        recyclerView.addItemDecoration(new DividerItemDecoration(recyclerView.getContext(), VERTICAL));
+        recyclerView.setDescendantFocusability(FOCUS_AFTER_DESCENDANTS);
+
+        if (adapter.stringList.size() > 0) {
+            fragmentView.findViewById(R.id.text_no_impressions).setVisibility(View.GONE);
+        }
+
+        final Button closeButton = fragmentView.findViewById(R.id.close_btn);
+        closeButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                final Activity activity = getActivity();
+                if (activity != null) {
+                    activity.onBackPressed();
+                }
+            }
+        });
+
+        return fragmentView;
+    }
+
+    void onClear() {
+        fragmentView.findViewById(R.id.text_no_impressions).setVisibility(View.VISIBLE);
+        if (adapter != null) {
+            adapter.stringList.clear();
+            adapter.notifyDataSetChanged();
+        }
+    }
+
+    /**
+     * RecyclerView adapter for the impression data list
+     */
+    static class ImpressionsInfoAdapter extends RecyclerView.Adapter<ImpressionsInfoAdapter.ImpressionsViewHolder> {
+        private final int mBackgroundLight;
+        private final int mBackgroundDark;
+
+        @NonNull
+        final List<String> stringList;
+
+        ImpressionsInfoAdapter(@NonNull final Context context, @Nullable final List<String> list) {
+            mBackgroundDark = context.getResources().getColor(R.color.listDark);
+            mBackgroundLight = context.getResources().getColor(R.color.listLight);
+
+            if (list != null) {
+                stringList = list;
+            } else {
+                stringList = new ArrayList<>();
+            }
+        }
+
+        @NonNull
+        @Override
+        public ImpressionsViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
+            final View itemView = LayoutInflater.from(viewGroup.getContext())
+                    .inflate(android.R.layout.simple_list_item_1, viewGroup, false);
+            return new ImpressionsViewHolder(itemView);
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull ImpressionsViewHolder viewHolder, int i) {
+            final int color = (i & 1) == 0 ? mBackgroundDark : mBackgroundLight;
+            viewHolder.bindViewHolder(stringList.get(i), color);
+        }
+
+        @Override
+        public int getItemCount() {
+            return stringList.size();
+        }
+
+        /**
+         * ViewHolder
+         */
+        static class ImpressionsViewHolder extends RecyclerView.ViewHolder {
+            @NonNull
+            final TextView infoTextView;
+
+            ImpressionsViewHolder(View itemView) {
+                super(itemView);
+                itemView.setTag(this);
+                infoTextView = itemView.findViewById(android.R.id.text1);
+                infoTextView.setOnLongClickListener(new View.OnLongClickListener() {
+                    @Override
+                    public boolean onLongClick(View v) {
+                        shareImpressionData(infoTextView);
+                        return true;
+                    }
+                });
+            }
+
+            void bindViewHolder(final String text, final int color) {
+                itemView.setBackgroundColor(color);
+                infoTextView.setText(text);
+            }
+
+            private void shareImpressionData(@NonNull final TextView textView) {
+                final Intent impressionIntent = new Intent(android.content.Intent.ACTION_SEND);
+                impressionIntent.setType("text/plain");
+                impressionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                impressionIntent.putExtra(Intent.EXTRA_SUBJECT, "impression data");
+                impressionIntent.putExtra(Intent.EXTRA_TEXT, textView.getText().toString());
+
+                textView.getContext().startActivity(Intent.createChooser(impressionIntent,
+                        textView.getResources().getString(R.string.share_impression)));
+            }
+        }
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
index 7c32e6f7..cc1f861b 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
@@ -15,7 +15,9 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.app.ListFragment;
+import android.text.Editable;
 import android.text.TextUtils;
+import android.text.TextWatcher;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -53,6 +55,8 @@
 
     private MoPubSampleListAdapter mAdapter;
     private AdUnitDataSource mAdUnitDataSource;
+    private EditText mSearchBar;
+    private Button mSearchBarClearButton;
 
     private static final AdType[] adTypes = AdType.values();
 
@@ -104,6 +108,36 @@ public void onClick(final View view) {
             }
         });
 
+        mSearchBar = view.findViewById(R.id.search_bar_et);
+        mSearchBarClearButton = view.findViewById(R.id.search_bar_clear_button);
+
+        mSearchBarClearButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (mSearchBar != null) {
+                    mSearchBar.getText().clear();
+                }
+            }
+        });
+
+        mSearchBar.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+            }
+
+            @Override
+            public void afterTextChanged(final Editable text) {
+                final MoPubSampleListAdapter adapter = mAdapter;
+                if (adapter != null && text != null) {
+                    adapter.getFilter().filter(text.toString());
+                }
+            }
+        });
+
         return view;
     }
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
index a9497feb..b4954715 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
@@ -22,6 +22,7 @@
 import android.view.MenuItem;
 import android.webkit.WebView;
 
+import com.facebook.ads.AdSettings;
 import com.mopub.common.Constants;
 import com.mopub.common.MoPub;
 import com.mopub.common.SdkConfiguration;
@@ -34,18 +35,30 @@
 import com.mopub.common.privacy.PersonalInfoManager;
 import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Reflection;
+import com.mopub.mobileads.FlurryAdapterConfiguration;
 import com.mopub.mobileads.MoPubErrorCode;
+import com.mopub.mobileads.TapjoyAdapterConfiguration;
+import com.mopub.mobileads.TapjoyInterstitial;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
+
+import org.json.JSONException;
 
 import java.lang.reflect.Field;
-import java.lang.reflect.Modifier;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
+import java.util.concurrent.LinkedBlockingDeque;
 
 import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
 import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;
 import static com.mopub.common.Constants.UNUSED_REQUEST_CODE;
 import static com.mopub.common.logging.MoPubLog.LogLevel.DEBUG;
 import static com.mopub.common.logging.MoPubLog.LogLevel.INFO;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM_WITH_THROWABLE;
 
 public class MoPubSampleActivity extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
@@ -78,6 +91,10 @@ private static void setWebDebugging() {
     @Nullable
     private ConsentStatusChangeListener mConsentStatusChangeListener;
 
+    @NonNull
+    private final LinkedBlockingDeque<String> mImpressionsList = new LinkedBlockingDeque<>();
+    private ImpressionListener mImpressionListener;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -108,12 +125,25 @@ protected void onCreate(Bundle savedInstanceState) {
             createMoPubListFragment(getIntent());
         }
 
-        final SdkConfiguration.Builder configBuilder = new SdkConfiguration.Builder("b195f8dd8ded45fe847ad89ed1d016da");
+        final SdkConfiguration.Builder configBuilder = new SdkConfiguration.Builder(
+                "b195f8dd8ded45fe847ad89ed1d016da");
         if (BuildConfig.DEBUG) {
             configBuilder.withLogLevel(DEBUG);
         } else {
             configBuilder.withLogLevel(INFO);
         }
+
+        final Map<String, String> flurryConfig = new HashMap<>();
+        flurryConfig.put("apiKey", "VX85BD4YBFNW629NN2SP");
+        configBuilder.withMediatedNetworkConfiguration(FlurryAdapterConfiguration.class.getName(),
+                flurryConfig);
+
+        final Map<String, String> tapjoyConfig = new HashMap<>();
+        tapjoyConfig.put(TapjoyInterstitial.SDK_KEY,
+                "cSOY1BYrRsSyJljkFWPdsgECRpZaaWDkWwXH1N1hIUbz1-c0o-DKATsLtckr");
+        configBuilder.withMediatedNetworkConfiguration(TapjoyAdapterConfiguration.class.getName(),
+                tapjoyConfig);
+
         MoPub.initializeSdk(this, configBuilder.build(), initSdkListener());
 
         mConsentStatusChangeListener = initConsentChangeListener();
@@ -125,6 +155,11 @@ protected void onCreate(Bundle savedInstanceState) {
         // Intercepts all logs including Level.FINEST so we can show a toast
         // that is not normally user-facing. This is only used for native ads.
         LoggingUtils.enableCanaryLogging(this);
+        // For Facebook, request for test ads
+        AdSettings.setTestMode(true);
+
+        mImpressionListener = createImpressionsListener();
+        ImpressionsEmitter.addListener(mImpressionListener);
     }
 
     @Override
@@ -134,6 +169,8 @@ protected void onDestroy() {
             mPersonalInfoManager.unsubscribeConsentStatusChangeListener(mConsentStatusChangeListener);
         }
         mConsentStatusChangeListener = null;
+
+        ImpressionsEmitter.removeListener(mImpressionListener);
         super.onDestroy();
     }
 
@@ -225,6 +262,7 @@ public void onBackPressed() {
     private static final String PRIVACY_FRAGMENT_TAG = "privacy_info_fragment";
     private static final String NETWORKS_FRAGMENT_TAG = "networks_info_fragment";
     private static final String LIST_FRAGMENT_TAG = "list_fragment";
+    private static final String IMPRESSIONS_FRAGMENT_TAG = "impressions_info_fragment";
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
@@ -267,6 +305,20 @@ private void syncNavigationMenu() {
         }
     }
 
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.action_impressions:
+                onImpressionsMenu();
+                return true;
+            case R.id.action_clear_logs:
+                onClearLogs();
+                return true;
+            default:
+                return super.onContextItemSelected(item);
+        }
+    }
+
     @Override
     public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
         switch (menuItem.getItemId()) {
@@ -302,6 +354,17 @@ public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
         return false;
     }
 
+    private void onImpressionsMenu() {
+        final FragmentManager manager = getSupportFragmentManager();
+        if (manager.findFragmentByTag(IMPRESSIONS_FRAGMENT_TAG) == null) {
+            ImpressionsInfoFragment fragment = ImpressionsInfoFragment.newInstance(new ArrayList<>(mImpressionsList));
+            manager.beginTransaction()
+                    .replace(R.id.fragment_container, fragment, IMPRESSIONS_FRAGMENT_TAG)
+                    .addToBackStack(IMPRESSIONS_FRAGMENT_TAG)
+                    .commit();
+        }
+    }
+
     private void onNavEnvironemnt(boolean production) {
         setEndpoint(production ? PROD_HOST : TEST_HOST);
     }
@@ -320,7 +383,7 @@ private void onNavChangeConsent(boolean grant) {
         final FragmentManager manager = getSupportFragmentManager();
         final MoPubListFragment listFragment = (MoPubListFragment) manager.findFragmentByTag(LIST_FRAGMENT_TAG);
         if (listFragment == null) {
-            MoPubLog.log(MoPubLog.SdkLogEvent.CUSTOM, getString(R.string.list_fragment_not_found));
+            MoPubLog.log(CUSTOM, getString(R.string.list_fragment_not_found));
             return; // fragment is not ready to update the consent
         }
         if (!listFragment.onChangeConsent(grant)) {
@@ -354,7 +417,35 @@ private void setEndpoint(@NonNull String host) {
             Field field = Reflection.getPrivateField(com.mopub.common.Constants.class, "HOST");
             field.set(null, host);
         } catch (Exception e) {
-            MoPubLog.log(MoPubLog.SdkLogEvent.CUSTOM_WITH_THROWABLE, "Can't change HOST.", e);
+            MoPubLog.log(CUSTOM_WITH_THROWABLE, "Can't change HOST.", e);
+        }
+    }
+
+    private void onClearLogs() {
+        FragmentManager manager = getSupportFragmentManager();
+        final ImpressionsInfoFragment fragment = (ImpressionsInfoFragment) manager.findFragmentByTag(IMPRESSIONS_FRAGMENT_TAG);
+        if (fragment != null) {
+            fragment.onClear();
         }
+        mImpressionsList.clear();
+    }
+
+    private ImpressionListener createImpressionsListener() {
+        return new ImpressionListener() {
+            @Override
+            public void onImpression(@NonNull final String adUnitId, @Nullable final ImpressionData impressionData) {
+                MoPubLog.log(CUSTOM, "impression for adUnitId= " + adUnitId);
+
+                if (impressionData == null) {
+                    mImpressionsList.addFirst("adUnitId= " + adUnitId + "\ndata= null");
+                } else {
+                    try {
+                        mImpressionsList.addFirst(impressionData.getJsonRepresentation().toString(2));
+                    } catch (JSONException e) {
+                        MoPubLog.log(CUSTOM_WITH_THROWABLE, "Can't format impression data.", e);
+                    }
+                }
+            }
+        };
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
index 5b728c5b..9236367a 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
@@ -237,4 +237,10 @@ public boolean equals(Object o) {
                 that.mDescription.equals(this.mDescription) &&
                 that.mAdUnitId.equals(this.mAdUnitId);
     }
+
+    @Override
+    @NonNull
+    public String toString() {
+        return mDescription == null ? "" : mDescription;
+    }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
index 187a68be..5e3c7d0f 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
@@ -16,6 +16,11 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubNativeAdLoadedListener;
 import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
@@ -25,6 +30,8 @@
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
+import java.util.Map;
 
 import static com.mopub.nativeads.RequestParameters.NativeAdAsset;
 
@@ -102,10 +109,56 @@ public void onClick(View view) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
+
         // This ad placer is used to automatically insert ads into the ViewPager.
         mStreamAdPlacer = new MoPubStreamAdPlacer(getActivity());
+        mStreamAdPlacer.registerAdRenderer(googlePlayServicesAdRenderer);
+        mStreamAdPlacer.registerAdRenderer(flurryRenderer);
         mStreamAdPlacer.registerAdRenderer(moPubStaticNativeAdRenderer);
         mStreamAdPlacer.registerAdRenderer(moPubVideoNativeAdRenderer);
+        mStreamAdPlacer.registerAdRenderer(facebookAdRenderer);
         mStreamAdPlacer.setAdLoadedListener(this);
 
         mPagerAdapter = new CustomPagerAdapter(getChildFragmentManager(), mStreamAdPlacer);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
index a031a998..aeccf651 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
@@ -13,6 +13,11 @@
 import android.widget.ArrayAdapter;
 import android.widget.ListView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubAdAdapter;
 import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
@@ -21,6 +26,8 @@
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
+import java.util.Map;
 
 import static com.mopub.nativeads.MoPubNativeAdPositioning.MoPubServerPositioning;
 import static com.mopub.nativeads.RequestParameters.NativeAdAsset;
@@ -105,10 +112,55 @@ public void onClick(View view) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
 
         // Register the renderers with the MoPubAdAdapter and then set the adapter on the ListView.
+        mAdAdapter.registerAdRenderer(googlePlayServicesAdRenderer);
+        mAdAdapter.registerAdRenderer(flurryRenderer);
         mAdAdapter.registerAdRenderer(videoAdRenderer);
         mAdAdapter.registerAdRenderer(staticAdRender);
+        mAdAdapter.registerAdRenderer(facebookAdRenderer);
         listView.setAdapter(mAdAdapter);
 
         mAdAdapter.loadAds(mAdConfiguration.getAdUnitId(), mRequestParameters);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
index a67eb059..75b7de1e 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
@@ -18,16 +18,23 @@
 import android.widget.Button;
 import android.widget.TextView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubNativeAdPositioning;
-import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
 import com.mopub.nativeads.MoPubRecyclerAdapter;
+import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
 import com.mopub.nativeads.MoPubVideoNativeAdRenderer;
 import com.mopub.nativeads.RequestParameters;
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
 import java.util.Locale;
+import java.util.Map;
 
 public class NativeRecyclerViewFragment extends Fragment {
     private MoPubRecyclerAdapter mRecyclerAdapter;
@@ -116,8 +123,54 @@ public void onClick(final View v) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
+
+        mRecyclerAdapter.registerAdRenderer(googlePlayServicesAdRenderer);
+        mRecyclerAdapter.registerAdRenderer(flurryRenderer);
         mRecyclerAdapter.registerAdRenderer(moPubStaticNativeAdRenderer);
         mRecyclerAdapter.registerAdRenderer(moPubVideoNativeAdRenderer);
+        mRecyclerAdapter.registerAdRenderer(facebookAdRenderer);
 
         mRecyclerView.setAdapter(mRecyclerAdapter);
         mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index 8b2aaa08..1a9bc08d 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -10,11 +10,12 @@ dependencies {
     api project(':ThirdParty:Java:Android:MoPub:mopub-sdk:mopub-sdk-interstitial')
 
     testImplementation 'junit:junit:4.12'
-    testImplementation 'org.robolectric:robolectric:4.0-beta-1'
+    testImplementation 'org.robolectric:robolectric:4.2.1'
     testImplementation 'org.robolectric:shadows-support-v4:3.3.2'
-    testImplementation 'org.robolectric:shadows-httpclient:4.0-beta-1'
+    testImplementation 'org.robolectric:shadows-httpclient:4.2.1'
     testImplementation 'com.squareup:fest-android:1.0.7'
     testImplementation 'org.mockito:mockito-core:1.10.19'
+    testImplementation 'org.apache.commons:commons-lang3:3.9'
 
     ['powermock-api-mockito',
      'powermock-core',
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
index f7336e6e..be326a15 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
@@ -19,10 +19,10 @@
     FACEBOOK_ADAPTER_CONFIGURATION("com.mopub.mobileads.FacebookAdapterConfiguration"),
     FLURRY_ADAPTER_CONFIGURATION("com.mopub.mobileads.FlurryAdapterConfiguration"),
     IRON_SOURCE_ADAPTER_CONFIGURATION("com.mopub.mobileads.IronSourceAdapterConfiguration"),
-    MILLENNIAL_ADAPTER_CONFIGURATION("com.mopub.mobileads.MillennialAdapterConfiguration"),
     GOOGLE_PLAY_SERVICES_ADAPTER_CONFIGURATION("com.mopub.mobileads.GooglePlayServicesAdapterConfiguration"),
     TAPJOY_ADAPTER_CONFIGURATION("com.mopub.mobileads.TapjoyAdapterConfiguration"),
     UNITY_ADS_ADAPTER_CONFIGURATION("com.mopub.mobileads.UnityAdsAdapterConfiguration"),
+    VERIZON_ADAPTER_CONFIGURATION("com.mopub.mobileads.VerizonAdapterConfiguration"),
     VUNGLE_ADAPTER_CONFIGURATION("com.mopub.mobileads.VungleAdapterConfiguration");
 
     private final String mClassName;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index 84b0d3e3..a28b3750 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -27,7 +27,7 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.INIT_FINISHED;
 
 public class MoPub {
-    public static final String SDK_VERSION = "5.6.0";
+    public static final String SDK_VERSION = "5.7.0";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
index b7f24206..7d17a66c 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
@@ -9,6 +9,7 @@
     BACKOFF_MS("backoff_ms"),
     AD_TIMEOUT("x-ad-timeout-ms"),
     AD_TYPE("x-adtype"),
+    IMPRESSION_DATA("impdata"),
     CLICK_TRACKING_URL("x-clickthrough"),
     CUSTOM_EVENT_DATA("x-custom-event-class-data"),
     CUSTOM_EVENT_NAME("x-custom-event-class-name"),
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index deaf935a..df0705ef 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -31,6 +31,7 @@
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
 import com.mopub.network.MoPubNetworkError;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 import com.mopub.volley.NetworkResponse;
 import com.mopub.volley.Request;
@@ -99,6 +100,7 @@
     private boolean mAdWasLoaded;
     @Nullable private String mAdUnitId;
     @Nullable private Integer mRefreshTimeMillis;
+    @NonNull private String mLastTrackedRequestId;
 
     public static void setShouldHonorServerDimensions(View view) {
         sViewShouldHonorServerDimensions.put(view, true);
@@ -137,6 +139,7 @@ public void run() {
         };
         mRefreshTimeMillis = DEFAULT_REFRESH_TIME_MILLISECONDS;
         mHandler = new Handler();
+        mLastTrackedRequestId = "";
     }
 
     @VisibleForTesting
@@ -483,6 +486,7 @@ void cleanup() {
         mMoPubView = null;
         mContext = null;
         mUrlGenerator = null;
+        mLastTrackedRequestId = "";
 
         // Flag as destroyed. LoadUrlTask checks this before proceeding in its onPostExecute().
         mIsDestroyed = true;
@@ -498,8 +502,19 @@ Integer getAdTimeoutDelay(int defaultValue) {
 
     void trackImpression() {
         if (mAdResponse != null) {
-            TrackingRequest.makeTrackingHttpRequest(mAdResponse.getImpressionTrackingUrls(),
-                    mContext);
+            final String requestId = mAdResponse.getRequestId();
+            // If we have already tracked these impressions, don't do it again
+            if (mLastTrackedRequestId.equals(requestId)) {
+                MoPubLog.log(CUSTOM, "Ignoring duplicate impression.");
+                return;
+            }
+
+            if (requestId != null) {
+                mLastTrackedRequestId = requestId;
+            }
+            TrackingRequest.makeTrackingHttpRequest(mAdResponse.getImpressionTrackingUrls(), mContext);
+
+            new SingleImpression(mAdResponse.getAdUnitId(), mAdResponse.getImpressionData()).sendImpression();
         }
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index 2a35bf22..4c6935c8 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -215,7 +215,7 @@ protected void registerClick() {
     }
 
     protected void trackNativeImpression() {
-        MoPubLog.log(CUSTOM, "Tracking impression for native adapter.");
+        MoPubLog.log(CUSTOM, "Tracking impression. MoPubView internal.");
         if (mAdViewController != null) mAdViewController.trackImpression();
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
index afd2e772..ad295174 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
@@ -147,7 +147,9 @@ String getClickThroughUrl() {
 
         for (final Node trackerNode : trackerNodes) {
             final String trackerUrl = XmlUtils.getNodeValue(trackerNode);
-            companionCreativeViewTrackers.add(new VastTracker(trackerUrl));
+            if (trackerUrl != null) {
+                companionCreativeViewTrackers.add(new VastTracker(trackerUrl));
+            }
         }
 
         return companionCreativeViewTrackers;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
index 0444fa3c..7183bffd 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
@@ -15,7 +15,6 @@
 
 import java.io.Serializable;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 import java.util.TreeMap;
@@ -46,6 +45,8 @@
     private final Integer mRewardedDuration;
     private final boolean mShouldRewardOnClick;
 
+    @Nullable
+    private final ImpressionData mImpressionData;
     @Nullable
     private final String mClickTrackingUrl;
     @NonNull
@@ -102,6 +103,7 @@ private AdResponse(@NonNull Builder builder) {
         mRewardedDuration = builder.rewardedDuration;
         mShouldRewardOnClick = builder.shouldRewardOnClick;
 
+        mImpressionData = builder.impressionData;
         mClickTrackingUrl = builder.clickTrackingUrl;
         mImpressionTrackingUrls = builder.impressionTrackingUrls;
         mFailoverUrl = builder.failoverUrl;
@@ -186,6 +188,11 @@ public boolean shouldRewardOnClick() {
         return mShouldRewardOnClick;
     }
 
+    @Nullable
+    public ImpressionData getImpressionData() {
+        return mImpressionData;
+    }
+
     @Nullable
     public String getClickTrackingUrl() {
         return mClickTrackingUrl;
@@ -283,6 +290,7 @@ public Builder toBuilder() {
                 .setRewardedVideoCompletionUrl(mRewardedVideoCompletionUrl)
                 .setRewardedDuration(mRewardedDuration)
                 .setShouldRewardOnClick(mShouldRewardOnClick)
+                .setImpressionData(mImpressionData)
                 .setClickTrackingUrl(mClickTrackingUrl)
                 .setImpressionTrackingUrls(mImpressionTrackingUrls)
                 .setFailoverUrl(mFailoverUrl)
@@ -314,6 +322,7 @@ public Builder toBuilder() {
         private Integer rewardedDuration;
         private boolean shouldRewardOnClick;
 
+        private ImpressionData impressionData;
         private String clickTrackingUrl;
         private List<String> impressionTrackingUrls = new ArrayList<>();
         private String failoverUrl;
@@ -390,6 +399,11 @@ public Builder setShouldRewardOnClick(final boolean shouldRewardOnClick) {
             return this;
         }
 
+        public Builder setImpressionData(@Nullable ImpressionData impressionData) {
+            this.impressionData = impressionData;
+            return this;
+        }
+
         public Builder setClickTrackingUrl(@Nullable final String clickTrackingUrl) {
             this.clickTrackingUrl = clickTrackingUrl;
             return this;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
index aa46dafa..9169b65b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
@@ -36,6 +36,18 @@ public static String extractHeader(@Nullable final JSONObject headers,
         return headers.optString(responseHeader.getKey());
     }
 
+    @Nullable
+    public static JSONObject extractJsonObjectHeader(@Nullable final JSONObject headers,
+                                                     @NonNull final ResponseHeader responseHeader) {
+        Preconditions.checkNotNull(responseHeader);
+
+        if (headers == null) {
+            return null;
+        }
+
+        return headers.optJSONObject(responseHeader.getKey());
+    }
+
     @Nullable
     public static Integer extractIntegerHeader(JSONObject headers, ResponseHeader responseHeader) {
         return formatIntHeader(extractHeader(headers, responseHeader));
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java
new file mode 100644
index 00000000..50dbfb3f
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java
@@ -0,0 +1,169 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.mobileads.base.BuildConfig;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+
+@SuppressWarnings({"WeakerAccess"})
+public class ImpressionData implements Serializable {
+    private static final long serialVersionUID = BuildConfig.VERSION_CODE;
+
+    public static final String ADUNIT_ID = "adunit_id";
+    public static final String ADUNIT_NAME = "adunit_name";
+    public static final String ADUNIT_FORMAT = "adunit_format";
+    public static final String IMPRESSION_ID = "id";
+    public static final String CURRENCY = "currency";
+    public static final String PUBLISHER_REVENUE = "publisher_revenue";
+    public static final String ADGROUP_ID = "adgroup_id";
+    public static final String ADGROUP_NAME = "adgroup_name";
+    public static final String ADGROUP_TYPE = "adgroup_type";
+    public static final String ADGROUP_PRIORITY = "adgroup_priority";
+    public static final String COUNTRY = "country";
+    public static final String PRECISION = "precision";
+    public static final String NETWORK_NAME = "network_name";
+    public static final String NETWORK_PLACEMENT_ID = "network_placement_id";
+
+    @NonNull
+    private SerializableJson mJson;
+
+    private ImpressionData(@NonNull final JSONObject json) throws JSONException {
+        mJson = new SerializableJson(json);
+    }
+
+    @Nullable
+    static ImpressionData create(@Nullable final JSONObject jsonObject) {
+        if (jsonObject == null) {
+            return null;
+        }
+
+        try {
+            return new ImpressionData(jsonObject);
+        } catch (Exception ex) {
+            MoPubLog.log(CUSTOM, ex.toString());
+        }
+
+        return null;
+    }
+
+    @Nullable
+    public String getAdUnitId() {
+        return mJson.optString(ADUNIT_ID, null);
+    }
+
+    @Nullable
+    public String getAdUnitName() {
+        return mJson.optString(ADUNIT_NAME, null);
+    }
+
+    @Nullable
+    public String getAdUnitFormat() {
+        return mJson.optString(ADUNIT_FORMAT, null);
+    }
+
+    @Nullable
+    public String getImpressionId() {
+        return mJson.optString(IMPRESSION_ID, null);
+    }
+
+    @Nullable
+    public String getCurrency() {
+        return mJson.optString(CURRENCY, null);
+    }
+
+    @Nullable
+    public Double getPublisherRevenue() {
+        try {
+            return mJson.getDouble(PUBLISHER_REVENUE);
+        } catch (Exception ex) {
+            return null;
+        }
+    }
+
+    @Nullable
+    public String getAdGroupId() {
+        return mJson.optString(ADGROUP_ID, null);
+    }
+
+    @Nullable
+    public String getAdGroupName() {
+        return mJson.optString(ADGROUP_NAME, null);
+    }
+
+    @Nullable
+    public String getAdGroupType() {
+        return mJson.optString(ADGROUP_TYPE, null);
+    }
+
+    @Nullable
+    public Integer getAdGroupPriority() {
+        try {
+            return mJson.getInt(ADGROUP_PRIORITY);
+        } catch (Exception ex) {
+            return null;
+        }
+    }
+
+    @Nullable
+    public String getCountry() {
+        return mJson.optString(COUNTRY, null);
+    }
+
+    @Nullable
+    public String getPrecision() {
+        return mJson.optString(PRECISION, null);
+    }
+
+    @Nullable
+    public String getNetworkName() {
+        return mJson.optString(NETWORK_NAME, null);
+    }
+
+    @Nullable
+    public String getNetworkPlacementId() {
+        return mJson.optString(NETWORK_PLACEMENT_ID, null);
+    }
+
+    /**
+     * @return - original JSON object from the server.
+     */
+    @NonNull
+    public JSONObject getJsonRepresentation() {
+        return mJson;
+    }
+
+    private void writeObject(ObjectOutputStream oos) throws IOException {
+        oos.defaultWriteObject();
+        oos.writeUTF(mJson.toString());
+    }
+
+    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException, JSONException {
+        ois.defaultReadObject();
+        mJson = new SerializableJson(ois.readUTF());
+    }
+
+    private static class SerializableJson extends JSONObject implements Serializable {
+        SerializableJson(@NonNull final JSONObject json) throws JSONException {
+            super(json.toString());
+        }
+
+        SerializableJson(@NonNull final String json) throws JSONException {
+            super(json);
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java
new file mode 100644
index 00000000..1db2afac
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java
@@ -0,0 +1,26 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.AnyThread;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+/**
+ * ImpressionListener is an interface to notify the application about ad impressions for all
+ * ad formats.
+ */
+public interface ImpressionListener {
+    /**
+     * SDK will call method onImpression once the ad becomes visible for the first time.
+     *
+     * @param adUnitId  - ad unit ID of the ad.
+     * @param impressionData - extended information about the ad including revenue per impression.
+     *                       This value can be null if impression level revenue data is not enabled
+     *                       for this MoPub account.
+     */
+    @AnyThread
+    void onImpression(@NonNull String adUnitId, @Nullable ImpressionData impressionData);
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java
new file mode 100644
index 00000000..dab4ed1d
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java
@@ -0,0 +1,76 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Single source of impression level revenue data. Implement interface {@link ImpressionListener}
+ * and subscribe to events from ImpressionEmitter to receive detailed impression data.
+ * This class is not linked to the activity lifecycle. It is recommended to subscribe to events
+ * when application starts even before the first activity created.
+ */
+@SuppressWarnings("WeakerAccess")
+public class ImpressionsEmitter {
+    private static final HashSet<ImpressionListener> mListeners = new HashSet<>();
+
+    /**
+     * Call this method to start listening for impression level revenue data events.
+     *
+     * @param listener - {@link ImpressionListener} interface implementation
+     */
+    public static void addListener(@NonNull final ImpressionListener listener) {
+        Preconditions.checkNotNull(listener);
+
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.add(listener);
+        }
+    }
+
+    /**
+     * Call this method to unsubscribe from impression level revenue data events.
+     *
+     * @param listener - previously submitted to addListener() {@link ImpressionListener}
+     */
+    public static void removeListener(@NonNull final ImpressionListener listener) {
+        Preconditions.checkNotNull(listener);
+
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.remove(listener);
+        }
+    }
+
+    /**
+     * MoPub SDK internal method. Should not be used by publishers.
+     */
+    static void send(@NonNull final String adUnitId, @Nullable final ImpressionData impressionData) {
+        Preconditions.checkNotNull(adUnitId);
+
+        Set<ImpressionListener> listenerSet = cloneListeners();
+        for (ImpressionListener listener : listenerSet) {
+            listener.onImpression(adUnitId, impressionData);
+        }
+    }
+
+    private static Set<ImpressionListener> cloneListeners() {
+        synchronized (ImpressionsEmitter.class) {
+            return new HashSet<>(mListeners);
+        }
+    }
+
+    @VisibleForTesting
+    static void clear() {
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.clear();
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
index 73d7e797..e692fd8b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
@@ -47,6 +47,7 @@
 import static com.mopub.network.HeaderUtils.extractBooleanHeader;
 import static com.mopub.network.HeaderUtils.extractHeader;
 import static com.mopub.network.HeaderUtils.extractIntegerHeader;
+import static com.mopub.network.HeaderUtils.extractJsonObjectHeader;
 import static com.mopub.network.HeaderUtils.extractPercentHeaderString;
 import static com.mopub.network.HeaderUtils.extractStringArray;
 
@@ -301,6 +302,9 @@ protected static AdResponse parseSingleAdResponse(@NonNull final Context appCont
         String networkType = extractHeader(jsonHeaders, ResponseHeader.NETWORK_TYPE);
         builder.setNetworkType(networkType);
 
+        JSONObject impressionJson = extractJsonObjectHeader(jsonHeaders, ResponseHeader.IMPRESSION_DATA);
+        builder.setImpressionData(ImpressionData.create(impressionJson));
+
         // X-Clickthrough is parsed into the AdResponse as the click tracker
         // Used by AdViewController, Rewarded Video, Native Adapter, MoPubNative
         String clickTrackingUrl = extractHeader(jsonHeaders, ResponseHeader.CLICK_TRACKING_URL);
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java
new file mode 100644
index 00000000..2e94d2f6
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java
@@ -0,0 +1,31 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+
+public class SingleImpression {
+    @Nullable
+    private final String mAdUnitId;
+    @Nullable
+    private final ImpressionData mImpressionData;
+
+    public SingleImpression(@Nullable String adUnitid, @Nullable ImpressionData data) {
+        mAdUnitId = adUnitid;
+        mImpressionData = data;
+    }
+
+    public void sendImpression() {
+        if (mAdUnitId != null) {
+            ImpressionsEmitter.send(mAdUnitId, mImpressionData);
+        } else {
+            MoPubLog.log(CUSTOM, "SingleImpression ad unit id may not be null.");
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
index b52d3b3a..4bbe3b58 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
@@ -11,6 +11,7 @@
 
 import com.mopub.common.Preconditions;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.Utils;
 import com.mopub.mobileads.VastErrorCode;
 import com.mopub.mobileads.VastMacroHelper;
 import com.mopub.mobileads.VastTracker;
@@ -146,7 +147,7 @@ public static void makeTrackingHttpRequest(@Nullable final String url,
     public static void makeTrackingHttpRequest(@Nullable final String url,
             @Nullable final Context context,
             @Nullable Listener listener) {
-        if (url != null) {
+        if (!TextUtils.isEmpty(url)) {
             makeTrackingHttpRequest(Arrays.asList(url), context, listener);
         }
     }
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
index ca177e07..4e66c876 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
@@ -232,8 +232,7 @@ public void onNativeAdLoaded(@NonNull final BaseNativeAd nativeAd) {
                         }
 
                         mMoPubNativeNetworkListener.onNativeLoad(new NativeAd(context,
-                                        response.getImpressionTrackingUrls(),
-                                        response.getClickTrackingUrl(),
+                                        response,
                                         mAdUnitId,
                                         nativeAd,
                                         renderer)
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
index f9cd79d8..23a33912 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
@@ -13,6 +13,8 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.nativeads.MoPubCustomEventNative.MoPubStaticNativeAd;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 
 import java.util.HashSet;
@@ -59,6 +61,7 @@
     @NonNull private final Set<String> mImpressionTrackers;
     @NonNull private final Set<String> mClickTrackers;
     @NonNull private final String mAdUnitId;
+    @Nullable private ImpressionData mImpressionData;
     @Nullable private MoPubNativeEventListener mMoPubNativeEventListener;
 
     private boolean mRecordedImpression;
@@ -74,6 +77,7 @@ public NativeAd(@NonNull final Context context,
         mContext = context.getApplicationContext();
 
         mAdUnitId = adUnitId;
+        mImpressionData = null;
 
         mImpressionTrackers = new HashSet<String>();
         mImpressionTrackers.addAll(moPubImpressionTrackerUrls);
@@ -99,6 +103,15 @@ public void onAdClicked() {
         mMoPubAdRenderer = moPubAdRenderer;
     }
 
+    NativeAd(@NonNull final Context context,
+             @NonNull final AdResponse adResponse,
+             @NonNull final String adUnitId,
+             @NonNull final BaseNativeAd baseNativeAd,
+             @NonNull final MoPubAdRenderer moPubAdRenderer){
+        this(context, adResponse.getImpressionTrackingUrls(), adResponse.getClickTrackingUrl(), adUnitId, baseNativeAd, moPubAdRenderer);
+        mImpressionData = adResponse.getImpressionData();
+    }
+
     @Override
     public String toString() {
         final StringBuilder stringBuilder = new StringBuilder("\n");
@@ -207,12 +220,14 @@ void recordImpression(@Nullable final View view) {
             return;
         }
 
+        mRecordedImpression = true;
+
         TrackingRequest.makeTrackingHttpRequest(mImpressionTrackers, mContext);
         if (mMoPubNativeEventListener != null) {
             mMoPubNativeEventListener.onImpression(view);
         }
 
-        mRecordedImpression = true;
+        new SingleImpression(mAdUnitId, mImpressionData).sendImpression();
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
index 8746f0d9..79a06f9e 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
@@ -12,6 +12,7 @@
 import com.mopub.common.Preconditions;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 
 import java.util.Collections;
@@ -72,6 +73,9 @@ void trackImpression(@NonNull Context context) {
         TrackingRequest.makeTrackingHttpRequest(
                 getImpressionUrls(),
                 context);
+
+        final String adUnitId = mLastDeliveredResponse.getAdUnitId();
+        new SingleImpression(adUnitId, mLastDeliveredResponse.getImpressionData()).sendImpression();
     }
 
     void trackClick(@NonNull Context context) {
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 9e3623ba..021aedcc 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -13,14 +13,14 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '5.6.0'
+project.version = '5.7.0'
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 67
+        versionCode 68
         versionName version
         minSdkVersion 19
         targetSdkVersion rootProject.ext.targetSdkVersion
diff --git a/mopub-sdk/src/main/AndroidManifest.xml b/mopub-sdk/src/main/AndroidManifest.xml
index 786dbbe6..e1746fda 100644
--- a/mopub-sdk/src/main/AndroidManifest.xml
+++ b/mopub-sdk/src/main/AndroidManifest.xml
@@ -1,8 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.mopub.mobileads"
-    android:versionCode="1"
-    android:versionName="1.0">
-    <application/>
+    package="com.mopub.mobileads">
+
+    <application />
 </manifest>
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
index 09fabb0e..291e14dc 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
@@ -201,6 +201,6 @@ private String generateTestUrl() {
                 "&language=en" +
                 "&gdpr_applies=1" +
                 "&force_gdpr_applies=0" +
-                "&bundle=com.mopub.mobileads";
+                "&bundle=com.mopub.mobileads.test";
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
index 4c8c21e2..c9b001c1 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
@@ -22,6 +22,7 @@
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 
+import java.net.URLEncoder;
 import java.util.Map;
 
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_NO;
@@ -80,7 +81,7 @@ public void constructor_withConsentStatusNull_shouldThrowException() {
     }
 
     @Test
-    public void generateUrlString_withMinimumParametersSet_shouldGenerateValidUrl() {
+    public void generateUrlString_withMinimumParametersSet_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         String validUrl = createTestUrl();
 
         subject = new ConsentDialogUrlGenerator(context, AD_UNIT_ID, UNKNOWN.getValue());
@@ -140,11 +141,11 @@ public void generateUrlString_withGdprAppliesNotSet_shouldNotIncludeGdprParam()
     }
 
     // unit test utils
-    private String createTestUrl() {
+    private String createTestUrl() throws java.io.UnsupportedEncodingException {
         return "https://" + Constants.HOST + "/m/gdpr_consent_dialog" +
                 "?id=" + AD_UNIT_ID +
                 "&current_consent_status=" + UNKNOWN.getValue() +
-                "&nv=" + MoPub.SDK_VERSION +
+                "&nv=" + URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
                 "&language=" + CURRENT_LANGUAGE +
                 "&force_gdpr_applies=" + "0" +
                 "&bundle=" + BUNDLE;
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
index abf57941..3b387f8b 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
@@ -24,6 +24,8 @@
 import org.powermock.modules.junit4.rule.PowerMockRule;
 import org.robolectric.Robolectric;
 
+import java.net.URLEncoder;
+
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.powermock.api.mockito.PowerMockito.mock;
@@ -111,21 +113,23 @@ public void generateUrlString_withAllParams_shouldGenerateFullUrl() {
     }
 
     @Test
-    public void generateUrlString_withMinimumParams_shouldGenerateValidUrl() {
+    public void generateUrlString_withMinimumParams_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         final String url = subject.generateUrlString("minurl");
 
-        assertThat(url).isEqualTo("https://minurl/m/gdpr_sync?nv=" + MoPub.SDK_VERSION +
-        "&current_consent_status=unknown&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track");
+        assertThat(url).isEqualTo("https://minurl/m/gdpr_sync?nv=" +
+                URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
+                "&current_consent_status=unknown&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track");
     }
 
     @Test
-    public void generateUrlString_withExtrasThatShouldBeUrlEncoded_shouldGenerateValidUrl() {
+    public void generateUrlString_withExtrasThatShouldBeUrlEncoded_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         subject = new SyncUrlGenerator(context, ConsentStatus.EXPLICIT_YES.getValue());
         subject.withExtras("!@#$%^&*()_;'[]{}|\\");
 
         final String url = subject.generateUrlString("host");
 
-        assertThat(url).isEqualTo("https://host/m/gdpr_sync?nv=" + MoPub.SDK_VERSION +
+        assertThat(url).isEqualTo("https://host/m/gdpr_sync?nv=" +
+                URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
                 "&current_consent_status=explicit_yes" +
                 "&extras=!%40%23%24%25%5E%26*()_%3B'%5B%5D%7B%7D%7C%5C" +
                 "&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track");
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
index d905659e..243aa17d 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
@@ -7,10 +7,8 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
-import android.content.Intent;
 import android.content.pm.ActivityInfo;
 import android.content.pm.ApplicationInfo;
-import android.content.pm.ResolveInfo;
 
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.logging.MoPubLog;
@@ -23,7 +21,6 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.mockito.Mock;
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
 import org.robolectric.Robolectric;
@@ -49,8 +46,6 @@
     private List<Class<? extends Activity>> requiredWebViewSdkActivities;
     private List<Class<? extends Activity>> requiredNativeSdkActivities;
 
-    @Mock private ResolveInfo mockResolveInfo;
-
     @Before
     public void setUp() throws Exception {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
@@ -120,11 +115,11 @@ public void checSdkActivitiesDeclared_shouldIncludeOneActivityDeclaration() thro
 
     @Test
     public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -138,8 +133,8 @@ public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldN
     @Test
     public void displayWarningForMissingActivities_withoutInterstitialModule_withoutInterstitialActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
         removeInterstitialModule();
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -152,10 +147,10 @@ public void displayWarningForMissingActivities_withoutInterstitialModule_without
 
     @Test
      public void displayWarningForMissingActivities_withOneMissingActivity_shouldLogOnlyThatOne() throws Exception {
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
         // Here, we leave out MoPubBrowser on purpose
 
         ShadowLog.setupLogging();
@@ -218,11 +213,11 @@ public void displayWarningForMisconfiguredActivities_withAllActivitiesConfigured
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(true);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -252,11 +247,11 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(true);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
 
@@ -284,7 +279,7 @@ public void displayWarningForMisconfiguredActivities_withOneMisconfiguredActivit
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         ShadowLog.setupLogging();
 
@@ -304,7 +299,7 @@ public void displayWarningForMisconfiguredActivities_withMisconfiguredActivities
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         setDebugMode(true);
 
@@ -324,7 +319,7 @@ public void displayWarningForMisconfiguredActivities_withMisconfiguredActivities
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         setDebugMode(false);
 
@@ -425,4 +420,12 @@ private void assertLogDoesntInclude(final String... messages) {
             assertThat(logText).doesNotContain(message);
         }
     }
+
+    private static void addActivityToShadowPackageManager(final Context context, final String activityName) {
+        final ActivityInfo activityInfo = new ActivityInfo();
+        activityInfo.targetActivity = activityName;
+        activityInfo.packageName = "com.mopub.mobileads.test";
+        activityInfo.name = activityName;
+        shadowOf(context.getPackageManager()).addOrUpdateActivity(activityInfo);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
index b8c249c5..29b84463 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
@@ -113,7 +113,18 @@ public void constructor_shouldCreateIntentWithImageStringAndParametersAndRespons
         assertThat(message).isEqualTo(AdAlertReporter.MESSAGE);
         assertThat(parameters).isEqualTo(subject.getParameters());
         assertThat(response).isEqualTo(subject.getResponse());
-        assertThat(imageString).isEqualTo("Qml0bWFwICgxMCB4IDEwKSBjcmVhdGVkIGZyb20gQml0bWFwIG9iamVjdCBjb21wcmVzc2VkIGFz\nIEpQRUcgd2l0aCBxdWFsaXR5IDI1\n");
+        assertThat(imageString).isEqualTo("/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDACAWGBwYFCAcGhwkIiAmMFA0MCwsMGJGSjpQdGZ6eHJm\n" +
+                "cG6AkLicgIiuim5woNqirr7EztDOfJri8uDI8LjKzsb/2wBDASIkJDAqMF40NF7GhHCExsbGxsbG\n" +
+                "xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb/wAARCAAKAAoDASIA\n" +
+                "AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA\n" +
+                "AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3\n" +
+                "ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm\n" +
+                "p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA\n" +
+                "AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx\n" +
+                "BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK\n" +
+                "U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3\n" +
+                "uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDn6KKK\n" +
+                "AP/Z\n");
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
index 4e188d01..14284ca0 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
@@ -11,6 +11,8 @@
 import com.mopub.common.util.ResponseHeader;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubNetworkError;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.MultiAdRequest;
@@ -36,6 +38,7 @@
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -147,6 +150,29 @@ public void trackImpression_shouldMakeTrackingRequest() throws JSONException, Mo
         assertThat(request.getUrl()).isEqualTo("impression_tracking_url");
     }
 
+    @Test
+    public void trackImpression_shouldMakeImpressionDataCall() throws JSONException, MoPubNetworkError, NoSuchFieldException, IllegalAccessException {
+        JSONObject serverJson = createAdResponseJson();
+        byte[] body = serverJson.toString().getBytes();
+        NetworkResponse testResponse = new NetworkResponse(body);
+        MultiAdResponse multiAdResponse = new MultiAdResponse(activity, testResponse, AdFormat.BANNER, adUnitId);
+
+        // set subject MultiAdResponse
+        Field field = getPrivateField("mMultiAdResponse");
+        field.set(subject, multiAdResponse);
+
+        // validation for basic AdLoader
+        assertThat(subject.hasMoreAds()).isTrue();
+        subject.loadNextAd(null);
+
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        // call tracking
+        subject.trackImpression(activity);
+
+        verify(listener).onImpression(adUnitId, null);
+    }
+
     @Test
     public void trackImpression_withImpressionTrackingUrlsList_shouldIgnoreSingleImpressionUrl_shouldFireListOfImpressionUrls() throws JSONException, MoPubNetworkError, NoSuchFieldException, IllegalAccessException {
         final JSONObject serverJson = createAdResponseJson();
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
index 1c05287f..380d727c 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
@@ -29,6 +29,9 @@
 import com.mopub.mobileads.test.support.ThreadUtils;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubNetworkError;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.MultiAdRequest;
@@ -78,9 +81,12 @@
     private static final int[] HTML_ERROR_CODES = new int[]{400, 401, 402, 403, 404, 405, 407, 408,
             409, 410, 411, 412, 413, 414, 415, 416, 417, 500, 501, 502, 503, 504, 505};
 
+    private static final String mAdUnitId = "ad_unit_id";
+
     private AdViewController subject;
     @Mock private MoPubView mockMoPubView;
     @Mock private MoPubRequestQueue mockRequestQueue;
+    @Mock private ImpressionData mockImpressionData;
     private Reflection.MethodBuilder methodBuilder;
     private MoPubShadowTelephonyManager shadowTelephonyManager;
     private MoPubShadowConnectivityManager shadowConnectivityManager;
@@ -115,9 +121,11 @@ public void setup() throws Exception {
         methodBuilder = TestMethodBuilderFactory.getSingletonMock();
         reset(methodBuilder);
         response = new AdResponse.Builder()
+                .setAdUnitId(mAdUnitId)
                 .setCustomEventClassName("customEvent")
                 .setClickTrackingUrl("clickUrl")
                 .setImpressionTrackingUrls(Arrays.asList("impressionUrl1", "impressionUrl2"))
+                .setImpressionData(mockImpressionData)
                 .setDimensions(320, 50)
                 .setAdType("html")
                 .setFailoverUrl("failUrl")
@@ -390,6 +398,20 @@ public void trackImpression_noAdResponse_shouldNotAddToQueue() {
         verifyZeroInteractions(mockRequestQueue);
     }
 
+    @Test
+    public void trackImpression_shouldCallImpressonDataListener() {
+        ImpressionListener impressionListener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(impressionListener);
+        subject.onAdLoadSuccess(response);
+        subject.setAdUnitId(mAdUnitId);
+
+        subject.trackImpression();
+
+        verify(impressionListener).onImpression(response.getAdUnitId(), response.getImpressionData());
+        verify(mockRequestQueue).add(argThat(isUrl("impressionUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("impressionUrl2")));
+    }
+
     @Test
     public void registerClick_shouldHttpGetTheClickthroughUrl() {
         subject.onAdLoadSuccess(response);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
index 07cbffee..a8c3fd7e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
@@ -29,6 +29,9 @@ public void setup() throws Exception {
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView1</Tracking>" +
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView2</Tracking>" +
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView3</Tracking>" +
+                "        <Tracking event=\"creativeView\"></Tracking>" + // missing Uri
+                "        <Tracking event=\"creativeView\"/>" + // self-terminating with missing Uri
+                "        <Tracking/>" + // self-terminating with missing Uri
                 "    </TrackingEvents>" +
                 "    <CompanionClickThrough>https://clickthrough</CompanionClickThrough>" +
                 "    <CompanionClickThrough>https://second_clickthrough</CompanionClickThrough>" +
@@ -38,6 +41,8 @@ public void setup() throws Exception {
                 "    <CompanionClickTracking>" +
                 "        <![CDATA[https://clicktrackingTwo]]>" +
                 "    </CompanionClickTracking>" +
+                "    <CompanionClickTracking></CompanionClickTracking>" + // empty tracker
+                "    <CompanionClickTracking/>" + // self-terminating empty tracker
                 "    <RandomUnusedTag>This_is_unused</RandomUnusedTag>" +
                 "</Companion>";
 
@@ -90,7 +95,7 @@ public void getClickThroughUrl_shouldReturnFirstStringUrl() {
     }
 
     @Test
-    public void getClickTrackers_shouldReturnAllUrls() {
+    public void getClickTrackers_shouldReturnAllUrls_shouldNotThrowException() {
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
                 .containsOnly("https://clicktrackingOne",
                         "https://clicktrackingTwo");
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
index de679b52..31ab3568 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
@@ -48,7 +48,6 @@
 import com.mopub.mobileads.test.support.MoPubShadowTelephonyManager;
 import com.mopub.mraid.MraidNativeCommandHandler;
 import com.mopub.network.PlayServicesUrlRewriter;
-import com.mopub.network.RequestRateTracker;
 import com.mopub.network.RequestRateTrackerTest;
 
 import org.junit.After;
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
index 9c4001ab..841071c7 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
@@ -10,6 +10,10 @@
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.nativeads.BaseNativeAd.NativeEventListener;
+import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.Networking;
 
@@ -48,6 +52,7 @@
     @Mock private MoPubRequestQueue mockRequestQueue;
     @Mock private MoPubNativeEventListener mockEventListener;
     @Mock private BaseNativeAd mockBaseNativeAd;
+    @Mock private ImpressionData mockImpressionData;
 
     @Before
     public void setUp() {
@@ -182,6 +187,28 @@ public void recordImpression_whenDestroyed_shouldReturnFast() {
         verifyZeroInteractions(mockEventListener);
     }
 
+    @Test
+    public void recordImpression_shouldCallImpressionCallback() {
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+
+        subject.recordImpression(mockView);
+
+        verify(listener).onImpression("adunit_id", null);
+    }
+
+    @Test
+    public void recordImpression_whenImpressionDataPresent_shouldCallImpressionData() {
+        subject = new NativeAd(activity, mockAdResponse(), "adunit_id", mockBaseNativeAd, mockRenderer);
+
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+
+        subject.recordImpression(mockView);
+
+        verify(listener).onImpression("adunit_id", mockImpressionData);
+    }
+
     @Test
     public void handleClick_shouldTrackClicksOnce() {
         subject.handleClick(mockView);
@@ -205,4 +232,13 @@ public void handleClick_whenDestroyed_shouldReturnFast() {
         verifyZeroInteractions(mockRequestQueue);
         verifyZeroInteractions(mockEventListener);
     }
+
+    private AdResponse mockAdResponse() {
+        AdResponse response = mock(AdResponse.class);
+        when(response.getClickTrackingUrl()).thenReturn("moPubClickTrackerUrl");
+        when(response.getImpressionTrackingUrls())
+                .thenReturn(Arrays.asList("moPubImpressionTrackerUrl1", "moPubImpressionTrackerUrl2"));
+        when(response.getImpressionData()).thenReturn(mockImpressionData);
+        return response;
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
index f4516fd4..0b5c8400 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
@@ -6,6 +6,8 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
 import android.content.res.Resources;
 import android.graphics.Point;
 import android.location.Location;
@@ -52,6 +54,7 @@
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyInt;
 import static org.mockito.Mockito.doAnswer;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.spy;
@@ -61,6 +64,7 @@
 @Config(shadows = {MoPubShadowTelephonyManager.class, MoPubShadowConnectivityManager.class})
 public class NativeUrlGeneratorTest {
     private static final String AD_UNIT_ID = "1234";
+    private static final String TEST_BUNDLE = "test.bundle";
     private static final int TEST_SCREEN_WIDTH = 320;
     private static final int TEST_SCREEN_HEIGHT = 470;
     private static final float TEST_DENSITY = 1.0f;
@@ -75,7 +79,7 @@ public void setup() throws Exception {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
         Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
-        when(context.getPackageName()).thenReturn("testBundle");
+        when(context.getPackageName()).thenReturn(TEST_BUNDLE);
         shadowTelephonyManager = (MoPubShadowTelephonyManager)
                 Shadows.shadowOf((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE));
         shadowConnectivityManager = (MoPubShadowConnectivityManager)
@@ -93,6 +97,14 @@ public void setup() throws Exception {
         when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
         when(context.getResources()).thenReturn(spyResources);
 
+        final Context spyApplicationContext = spy(context.getApplicationContext());
+        when(spyApplicationContext.getPackageName()).thenReturn(TEST_BUNDLE);
+        PackageManager mockPackageManager = mock(PackageManager.class);
+        PackageInfo mockPackageInfo = mock(PackageInfo.class);
+        mockPackageInfo.versionName = BuildConfig.VERSION_NAME;
+        when(mockPackageManager.getPackageInfo(any(String.class), anyInt())).thenReturn(mockPackageInfo);
+        when(spyApplicationContext.getPackageManager()).thenReturn(mockPackageManager);
+
         // Only do this on Android 17+ because getRealSize doesn't exist before then.
         // This is the default pathway.
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
@@ -108,7 +120,6 @@ public Object answer(final InvocationOnMock invocationOnMock) {
                 }
             }).when(mockDisplay).getRealSize(any(Point.class));
             when(mockWindowManager.getDefaultDisplay()).thenReturn(mockDisplay);
-            final Context spyApplicationContext = spy(context.getApplicationContext());
             when(spyApplicationContext.getSystemService(Context.WINDOW_SERVICE)).thenReturn(mockWindowManager);
             when(context.getApplicationContext()).thenReturn(spyApplicationContext);
         }
@@ -434,7 +445,7 @@ public void generateUrlString_withOnlyAdUnitSet_shouldReturnMinimumUrl() {
                         AD_UNIT_ID +
                         "&nv=" + Uri.encode(MoPub.SDK_VERSION) +
                         "&dn=unknown%2Crobolectric%2Crobolectric" +
-                        "&bundle=com.mopub.mobileads" +
+                        "&bundle=" + TEST_BUNDLE +
                         "&z=-0700" +
                         "&o=p" +
                         "&w=" +
diff --git a/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
index 3e83f318..2147d47a 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
@@ -92,4 +92,16 @@ public void extractPercentHeader_shouldReturnPercentValue() throws JSONException
         subject.put(ResponseHeader.HEIGHT.getKey(), "a%");
         assertThat(HeaderUtils.extractPercentHeader(subject, ResponseHeader.HEIGHT)).isNull();
     }
+
+    @Test
+    public void extractJsonObjectHeader_shouldReturnJsonObject() throws JSONException {
+        JSONObject testObject = new JSONObject();
+
+        subject.put(ResponseHeader.IMPRESSION_DATA.getKey(), testObject);
+        assertThat(HeaderUtils.extractJsonObjectHeader(subject, ResponseHeader.IMPRESSION_DATA)).isEqualTo(testObject);
+        assertThat(HeaderUtils.extractJsonObjectHeader(null, ResponseHeader.IMPRESSION_DATA)).isNull();
+
+        subject.remove(ResponseHeader.IMPRESSION_DATA.getKey());
+        assertThat(HeaderUtils.extractJsonObjectHeader(subject, ResponseHeader.IMPRESSION_DATA)).isNull();
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java b/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java
new file mode 100644
index 00000000..ca01cca0
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java
@@ -0,0 +1,140 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.apache.commons.lang3.SerializationUtils;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+
+@RunWith(SdkTestRunner.class)
+public class ImpressionDataTest {
+
+    private ImpressionData subject;
+
+    @Before
+    public void setup() throws JSONException {
+        JSONObject json = new JSONObject(SAMPLE_JSON);
+        subject = ImpressionData.create(json);
+    }
+
+    @Test
+    public void create_withNullJson_shouldReturnNull() {
+        assertNull(ImpressionData.create(null));
+    }
+
+    @Test
+    public void create_withValidJson_shouldReturnValidImpressionData() {
+        assertTrue(equalsToSampleData(subject));
+    }
+
+    @Test
+    public void create_withEmptyJson_shouldReturnValidImpressiondata() {
+        subject = ImpressionData.create(new JSONObject());
+
+        assertNotNull(subject);
+        assertNull(subject.getImpressionId());
+        assertNull(subject.getAdUnitId());
+        assertNull(subject.getAdUnitName());
+        assertNull(subject.getAdUnitFormat());
+        assertNull(subject.getAdGroupId());
+        assertNull(subject.getAdGroupName());
+        assertNull(subject.getAdGroupType());
+        assertNull(subject.getAdGroupPriority());
+        assertNull(subject.getCurrency());
+        assertNull(subject.getCountry());
+        assertNull(subject.getNetworkName());
+        assertNull(subject.getNetworkPlacementId());
+        assertNull(subject.getPublisherRevenue());
+        assertNull(subject.getPrecision());
+        JSONObject jsonObject = subject.getJsonRepresentation();
+        assertFalse(jsonObject.keys().hasNext());
+    }
+
+    @Test
+    public void serialize_desirialize_shouldReturnObjectCopy() {
+        ImpressionData copy = SerializationUtils.clone(subject);
+        equalsToSampleData(copy);
+    }
+
+    @Test
+    public void serialize_deserialize_withUnicodeChars_shouldReturnValidImpressionData() throws JSONException {
+        JSONObject jsonObject = new JSONObject(SAMPLE_JSON);
+        jsonObject.put("country", "Россия");
+        subject = ImpressionData.create(jsonObject);
+        ImpressionData copy = SerializationUtils.clone(subject);
+        assert copy != null;
+        compareObjects(subject, copy);
+    }
+
+    private final String SAMPLE_JSON = "{\n" +
+            "                \"id\": \"test_ID\",\n" +
+            "                \"adunit_id\": \"test_adunit_id\",\n" +
+            "                \"adunit_name\": \"test_adunit_name\",\n" +
+            "                \"adunit_format\": \"test_adunit_format\",\n" +
+            "                \"adgroup_id\": \"test_adgroup_id\",\n" +
+            "                \"adgroup_name\": \"test_adgroup_name\",\n" +
+            "                \"adgroup_type\": \"test_adgroup_type\",\n" +
+            "                \"adgroup_priority\": 9876,\n" +
+            "                \"currency\": \"test_currency\",\n" +
+            "                \"country\": \"test_country\",\n" +
+            "                \"network_name\": \"test_network_name\",\n" +
+            "                \"network_placement_id\": \"test_network_placement_id\",\n" +
+            "                \"publisher_revenue\": 6789,\n" +
+            "                \"precision\": \"test_precision\"\n" +
+            "            }";
+
+    private static boolean equalsToSampleData(ImpressionData data) {
+        assertEquals("test_ID", data.getImpressionId());
+        assertEquals("test_adunit_id", data.getAdUnitId());
+        assertEquals("test_adunit_name", data.getAdUnitName());
+        assertEquals("test_adunit_format", data.getAdUnitFormat());
+        assertEquals("test_adgroup_id", data.getAdGroupId());
+        assertEquals("test_adgroup_name", data.getAdGroupName());
+        assertEquals("test_adgroup_type", data.getAdGroupType());
+        assertEquals(9876, data.getAdGroupPriority().intValue());
+        assertEquals("test_currency", data.getCurrency());
+        assertEquals("test_country", data.getCountry());
+        assertEquals("test_network_name", data.getNetworkName());
+        assertEquals("test_network_placement_id", data.getNetworkPlacementId());
+        assertEquals(6789d, data.getPublisherRevenue(), 0.001);
+        assertEquals("test_precision", data.getPrecision());
+
+        JSONObject json = data.getJsonRepresentation();
+
+        assertEquals("test_ID", json.optString("id"));
+        assertEquals("test_adunit_id", json.optString("adunit_id"));
+        assertEquals("test_adunit_name", json.optString("adunit_name"));
+        assertEquals("test_adunit_format", json.optString("adunit_format"));
+        assertEquals("test_adgroup_id", json.optString("adgroup_id"));
+        assertEquals("test_adgroup_name", json.optString("adgroup_name"));
+        assertEquals("test_adgroup_type", json.optString("adgroup_type"));
+        assertEquals(9876, json.optInt("adgroup_priority"));
+        assertEquals("test_currency", json.optString("currency"));
+        assertEquals("test_country", json.optString("country"));
+        assertEquals("test_network_name", json.optString("network_name"));
+        assertEquals("test_network_placement_id", json.optString("network_placement_id"));
+        assertEquals(6789, json.optDouble("publisher_revenue"), 0.001);
+        assertEquals("test_precision", json.optString("precision"));
+
+        return true;
+    }
+
+    private static void compareObjects(ImpressionData o1, ImpressionData o2) {
+        JSONObject j1 = o1.getJsonRepresentation();
+        JSONObject j2 = o2.getJsonRepresentation();
+        assertEquals(j1.toString(), j2.toString());
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java b/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java
new file mode 100644
index 00000000..c937bea8
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java
@@ -0,0 +1,179 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.After;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+
+@RunWith(SdkTestRunner.class)
+public class ImpressionEmitterTest {
+
+    private static final String mAdUnitId = "ad_unit_id";
+
+    @Mock
+    ImpressionListener listener1;
+    @Mock
+    ImpressionListener listener2;
+    @Mock
+    ImpressionData impression;
+
+    @After
+    public void tearDown() {
+        ImpressionsEmitter.clear();
+    }
+
+    @Test
+    public void send_oneListener_shouldCallListener() {
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+        verify(listener1).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_twoListeners_shouldCallBoth() {
+        ImpressionsEmitter.addListener(listener1);
+        ImpressionsEmitter.addListener(listener2);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1).onImpression(mAdUnitId, impression);
+        verify(listener2).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_removeListener_shouldNotCallAfterRemove() {
+        ImpressionListener l1 = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(l1);
+        ImpressionsEmitter.addListener(listener2);
+        ImpressionsEmitter.removeListener(l1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(l1, never()).onImpression(anyString(), any(ImpressionData.class));
+        verify(listener2).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_addListenerTwice_shouldMakeSingleCallback() {
+        ImpressionsEmitter.addListener(listener1);
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1, times(1)).onImpression(mAdUnitId, impression);
+
+        ImpressionsEmitter.removeListener(listener1);
+        Mockito.reset(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1, never()).onImpression(anyString(), any(ImpressionData.class));
+    }
+
+    @Test
+    public void send_nullImpressionData_shouldCallListener() {
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, null);
+
+        verify(listener1).onImpression(mAdUnitId, null);
+    }
+
+    @Test
+    public void multithreading_shouldNotCrash() {
+        final int THREAD_COUNT = 10;
+        Thread[] testThreads = new Thread[THREAD_COUNT];
+        for (int i = 0; i < THREAD_COUNT; i++) {
+            testThreads[i] = createTestThread();
+        }
+        for (int i = 0; i < THREAD_COUNT; i++) {
+            testThreads[i].start();
+        }
+
+        for (Thread thread : testThreads) {
+            try {
+                thread.join();
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    @Test
+    public void removeListener_whileEmitterIsBusy_shouldNotWaitForEmitter() throws InterruptedException {
+        ImpressionListener listener = createDelayedListener();
+        ImpressionsEmitter.addListener(listener);
+
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                ImpressionsEmitter.send(mAdUnitId, impression);
+            }
+        }).start();
+        Thread.sleep(100);
+
+        long t1 = System.currentTimeMillis();
+        ImpressionsEmitter.removeListener(listener);
+        long t2 = System.currentTimeMillis();
+
+        assertTrue(t2 - t1 < 100);
+    }
+
+    /*
+    Unit test utility functions
+     */
+    private Thread createTestThread() {
+
+        return new Thread(new Runnable() {
+            @Override
+            public void run() {
+                final int SIZE = 100;
+                ImpressionListener[] listeners = new ImpressionListener[SIZE];
+                for (int i = 0; i < SIZE; i++) {
+                    listeners[i] = mock(ImpressionListener.class);
+                    ImpressionsEmitter.addListener(listeners[i]);
+                }
+
+                for (int i = 0; i < 150; i++) {
+                    ImpressionsEmitter.send(mAdUnitId, mock(ImpressionData.class));
+                }
+
+                for (int i = 0; i < SIZE; i++) {
+                    ImpressionsEmitter.removeListener(listeners[i]);
+                }
+            }
+        });
+    }
+
+    private ImpressionListener createDelayedListener() {
+        return new ImpressionListener() {
+            @Override
+            public void onImpression(@NonNull String adUnitId, @Nullable ImpressionData impressionData) {
+                try {
+                    Thread.sleep(1000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+            }
+        };
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java b/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
index 8270b4db..7e2af37d 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
@@ -588,6 +588,42 @@ public void parseNetworkResponse_forBanner_withImpTrackingHeaders_shouldSucceed(
         assertThat(serverExtras.get(DataKeys.HTML_RESPONSE_BODY_KEY)).isEqualToIgnoringCase("content_text");
         assertThat(serverExtras.get(DataKeys.BANNER_IMPRESSION_MIN_VISIBLE_DIPS)).isEqualTo("1");
         assertThat(serverExtras.get(DataKeys.BANNER_IMPRESSION_MIN_VISIBLE_MS)).isEqualTo("2");
+        assertThat(subject.getImpressionData()).isNull();
+    }
+
+    @Test
+    public void parseNetworkResponse_forBanner_withImpressionData_shouldSucceed() throws MoPubNetworkError, JSONException {
+        // add impression data
+        JSONObject metadata = (JSONObject) singleAdResponse.get(ResponseHeader.METADATA.getKey());
+        JSONObject impJson = createImpressionData();
+        metadata.put(ResponseHeader.IMPRESSION_DATA.getKey(), impJson);
+        NetworkResponse networkResponse = new NetworkResponse(singleAdResponse.toString().getBytes());
+
+        AdResponse subject = MultiAdResponse.parseSingleAdResponse(activity.getApplicationContext(),
+                networkResponse,
+                singleAdResponse,
+                adUnitId,
+                AdFormat.BANNER,
+                REQUEST_ID_VALUE);
+
+        assertThat(subject.getAdType()).isEqualTo(AdType.HTML);
+        assertThat(subject.getAdUnitId()).isEqualTo(adUnitId);
+        ImpressionData impressionData = subject.getImpressionData();
+        assert (impressionData != null);
+        assertThat(impressionData.getImpressionId()).isEqualTo(impJson.getString("id"));
+        assertThat(impressionData.getAdUnitId()).isEqualTo(impJson.getString("adunit_id"));
+        assertThat(impressionData.getAdUnitName()).isEqualTo(impJson.getString("adunit_name"));
+        assertThat(impressionData.getAdUnitFormat()).isEqualTo(impJson.getString("adunit_format"));
+        assertThat(impressionData.getAdGroupId()).isEqualTo(impJson.getString("adgroup_id"));
+        assertThat(impressionData.getAdGroupName()).isEqualTo(impJson.getString("adgroup_name"));
+        assertThat(impressionData.getAdGroupType()).isEqualTo(impJson.getString("adgroup_type"));
+        assertThat(impressionData.getAdGroupPriority()).isEqualTo(impJson.getInt("adgroup_priority"));
+        assertThat(impressionData.getCurrency()).isEqualTo(impJson.getString("currency"));
+        assertThat(impressionData.getCountry()).isEqualTo(impJson.getString("country"));
+        assertThat(impressionData.getNetworkName()).isEqualTo(impJson.getString("network_name"));
+        assertThat(impressionData.getNetworkPlacementId()).isEqualTo(impJson.getString("network_placement_id"));
+        assertThat(impressionData.getPublisherRevenue()).isEqualTo(impJson.getDouble("publisher_revenue"));
+        assertThat(impressionData.getPrecision()).isEqualTo(impJson.getString("precision"));
     }
 
     @Test
@@ -1109,6 +1145,26 @@ private static JSONObject createWarmupAdResponse() throws JSONException {
         return jsonObject;
     }
 
+    private static JSONObject createImpressionData() throws JSONException {
+        String jsonString = "{\n" +
+                        "          \"id\": \"impid\",\n" +
+                        "          \"adunit_id\": \"adunitid\",\n" +
+                        "          \"adunit_name\": \"adunitname\",\n" +
+                        "          \"adunit_format\": \"adunitformat\",\n" +
+                        "          \"adgroup_id\": \"adgroupid\",\n" +
+                        "          \"adgroup_name\": \"adgroupname\",\n" +
+                        "          \"adgroup_type\": \"adgrouptype\",\n" +
+                        "          \"adgroup_priority\": 123,\n" +
+                        "          \"currency\": \"USD\",\n" +
+                        "          \"country\": \"USA\",\n" +
+                        "          \"network_name\": \"networkname\",\n" +
+                        "          \"network_placement_id\": \"networkplacementid\",\n" +
+                        "          \"publisher_revenue\": 0.0001,\n" +
+                        "          \"precision\": \"exact\"\n" +
+                        "     }";
+        return new JSONObject(jsonString);
+    }
+
     private static void addBackoffParameters(final JSONObject response, int time, String reason) throws JSONException {
         response.put(ResponseHeader.BACKOFF_MS.getKey(), time);
         response.put(ResponseHeader.BACKOFF_REASON.getKey(), reason);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java b/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java
new file mode 100644
index 00000000..b5d15cc0
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java
@@ -0,0 +1,44 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.verify;
+
+@RunWith(SdkTestRunner.class)
+public class SingleImpressionTest {
+
+    @Test
+    public void sendImpression_makesCallToImpressionEmitter() {
+        ImpressionData data = mock(ImpressionData.class);
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        SingleImpression subject = new SingleImpression("ad_unit_id", data);
+
+        subject.sendImpression();
+
+        verify(listener).onImpression("ad_unit_id", data);
+    }
+
+    @Test
+    public void sendImpression_withNullAdUnitId_shouldNotCallImpressionEmitter() {
+        ImpressionData data = mock(ImpressionData.class);
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        SingleImpression subject = new SingleImpression(null, data);
+
+        subject.sendImpression();
+
+        verify(listener, never()).onImpression(anyString(), any(ImpressionData.class));
+    }
+}
