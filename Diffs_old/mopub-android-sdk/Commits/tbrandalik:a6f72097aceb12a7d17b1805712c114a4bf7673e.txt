diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
index c01a329b..edf7e385 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
@@ -22,6 +22,13 @@
  */
 public class NativeImageHelper {
 
+    private static final String FALSE = Boolean.FALSE.toString();
+
+    /**
+     * Control preloading of images.
+     */
+    public static final java.lang.String PROPERTY_NATIVEADS_PRELOAD = "com.mopub.nativeads.preload";
+
     public interface ImageListener {
         /**
          * Called when images are successfully cached. If you haven't already called {@link
@@ -46,6 +53,11 @@
     public static void preCacheImages(@NonNull final Context context,
             @NonNull final List<String> imageUrls,
             @NonNull final ImageListener imageListener) {
+        // in case we don't want to cache images return immediately
+        if (FALSE.equals(System.getProperty(PROPERTY_NATIVEADS_PRELOAD, "true"))) {
+            imageListener.onImagesCached();
+            return;
+        }
         final ImageLoader imageLoader = Networking.getImageLoader(context);
         // These Atomics are only accessed on the main thread.
         // We use Atomics here so we can change their values while keeping a reference for the inner class.
