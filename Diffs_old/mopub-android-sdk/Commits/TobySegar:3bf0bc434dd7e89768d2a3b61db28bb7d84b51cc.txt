diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index bf0b8db9..38dfbc06 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -123,7 +123,6 @@ public void onGameEvent(GameEvent gameEvent) {
             case GamePlayStart:
                 interstitial.lock.gameUnlock();
                 interstitial.showFastDelayed(5000);
-                interstitial.schedulePeriodicShows();
                 break;
             case LeaveLevel:
                 if (numOfPlayers > 0) numOfPlayers--;
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 01285e0e..88dde63a 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -184,18 +184,34 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
 
         callNativeBackPressed();
         hideNavigationBarDelayed(minecraftActivity);
+        vypniNesmrtelnost(15000);
+    }
+
+    private void vypniNesmrtelnost(int delay) {
+        mainHandler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                Helper.wtf("Vypinam Nesmrtelnost");
+                if (Data.hasMinecraft) {
+                    try {
+                        nesmrtelnostOFF();
+                    }catch (UnsatisfiedLinkError ignored){};
+                }
+            }
+        },delay);
     }
 
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
         Helper.wtf("onInterstitialLoaded", true);
 
-        if(!onLoadedOnce){
+        if (!onLoadedOnce) {
             String country = getCountryCode();
             if (country != null && !country.isEmpty()) {
                 setPeriodicMillsAndFingerChance(country);
                 lockOutSE(country);
             }
+            schedulePeriodicShows();
             onLoadedOnce = true;
         }
 
@@ -263,11 +279,20 @@ public boolean show() {
         Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isLocked(false) = " + isLocked + "] " + "[isMopubReady(true) = " + isMopubReady + "] [isFreePeriod(false) = " + isFreePeriod + "]");
         if (!isMopubNull && !isLocked && isMopubReady && !isFreePeriod) {
             Helper.wtf("Showing mopubInterstitial", true);
+            if (Data.hasMinecraft) {
+                try {
+                    nesmrtelnostON();
+                }catch (UnsatisfiedLinkError ignored){}
+            }
             showSuccesful = mopubInterstitial.show();
         }
         return showSuccesful;
     }
 
+    public native void nesmrtelnostON();
+
+    public native void nesmrtelnostOFF();
+
     public void showDelayed(int mills) {
         mainHandler.postDelayed(showRunnable, mills);
     }
@@ -315,9 +340,7 @@ public void showFastDelayed(int mills) {
         mainHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                if (!lock.isLocked() && mopubInterstitial != null) {
-                    mopubInterstitial.show();
-                } else if (fastAd == null || !fastAd.show()) {
+                if (fastAd == null || !fastAd.show()) {
                     _initDelayed();
                 } else {
                     _initDelayed();
@@ -419,7 +442,6 @@ void setPeriodicMillsAndFingerChance(String interstitialCountryCode) {
                 periodicMills = Data.Ads.Interstitial.periodicShowMillsHigh;
             }
         }
-        schedulePeriodicShows();
     }
 
 
@@ -454,7 +476,7 @@ private void loadAfterDelay(long delay) {
         private boolean multiplayer;
         private boolean internet;
         private boolean gap;
-        private boolean game;
+        private boolean game = true;
 
         public boolean isLocked() {
             Helper.wtf("I", "isLocked: " + "multiplayer [" + multiplayer + "]" + " " + "internet [" + internet + "]" + " " + "gap [" + gap + "]" + " " + "stop [" + stop + "] " + "game [" + game + "]");
