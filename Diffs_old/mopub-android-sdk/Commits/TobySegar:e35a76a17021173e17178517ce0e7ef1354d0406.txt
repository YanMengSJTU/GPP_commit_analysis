diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
index 9bf11658..06960279 100644
--- a/mopub-sdk/mopub-sdk-base/build.gradle
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -13,11 +13,11 @@ dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
     def avidEnabled = project.hasProperty("mopub.avidEnabled") ? project.getProperty("mopub.avidEnabled").toBoolean() : true
     if (avidEnabled) {
-        implementation('com.mopub:libAvid-mopub:3.6.4')
+        compile('com.mopub:libAvid-mopub:3.6.4')
     }
     def moatEnabled = project.hasProperty("mopub.moatEnabled") ? project.getProperty("mopub.moatEnabled").toBoolean() : true
     if (moatEnabled) {
-        implementation 'com.moat.analytics.mobile.mpub:moat-mobile-app-kit:2.4.5'
+        compile 'com.moat.analytics.mobile.mpub:moat-mobile-app-kit:2.4.5'
     }
     compile 'com.mopub.volley:mopub-volley:2.0.0'
     compile project(':base')
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index 06a8d536..d99d27a5 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -230,11 +230,12 @@ void onAdLoadError(final VolleyError error) {
 
         final MoPubErrorCode errorCode = getErrorCodeFromVolleyError(error, mContext);
 
-        if (errorCode == MoPubErrorCode.SERVER_ERROR || errorCode == MoPubErrorCode.NO_FILL) {
-            mBackoffPower++;
-            onAdLoadSuccess(getFailoverResponse());
-            return;
-        }
+        //todo failover uz nepouzivame lebo applovin sucks dick
+//        if (errorCode == MoPubErrorCode.SERVER_ERROR || errorCode == MoPubErrorCode.NO_FILL) {
+//            mBackoffPower++;
+//            onAdLoadSuccess(getFailoverResponse());
+//            return;
+//        }
 
         setNotLoading();
         adDidFail(errorCode);
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index d7f29eaa..e68afb1a 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -3,6 +3,7 @@
 
 import android.app.Activity;
 import android.os.Handler;
+import android.support.annotation.NonNull;
 import android.widget.Toast;
 
 import com.mojang.base.Analytics;
@@ -12,6 +13,13 @@
 import com.mojang.base.events.AppEvent;
 import com.mojang.base.events.GameEvent;
 
+import com.mopub.common.MoPub;
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.privacy.ConsentDialogListener;
+import com.mopub.common.privacy.ConsentStatus;
+import com.mopub.common.privacy.ConsentStatusChangeListener;
+import com.mopub.common.privacy.PersonalInfoManager;
+import com.mopub.mobileads.MoPubErrorCode;
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 import org.greenrobot.eventbus.ThreadMode;
@@ -56,6 +64,35 @@ public Ads(Interstitial interstitial) {
         }
 
         EventBus.getDefault().register(this);
+
+    }
+
+    public static void showMopubConsentDialog(final Runnable doAfterDialog) {
+        if (MoPub.isSdkInitialized()) {
+            // CONSENT DIALOG FOR MOPUB
+            final PersonalInfoManager mPersonalInfoManager = MoPub.getPersonalInformationManager();
+            if (mPersonalInfoManager != null && mPersonalInfoManager.shouldShowConsentDialog()) {
+                mPersonalInfoManager.loadConsentDialog(new ConsentDialogListener() {
+                    @Override
+                    public void onConsentDialogLoaded() {
+                        Logger.Log("::Ads", "::SHOWING CONSENT DIALOG");
+                        if(!mPersonalInfoManager.showConsentDialog()){
+                            doAfterDialog.run();
+                        }
+                    }
+
+                    @Override
+                    public void onConsentDialogLoadFailed(@NonNull MoPubErrorCode moPubErrorCode) {
+                        Logger.Log("::Ads", "::Consent dialog failed to load.");
+                        doAfterDialog.run();
+                    }
+                });
+            }else{
+                doAfterDialog.run();
+            }
+        }else{
+            doAfterDialog.run();
+        }
     }
 
     public static Ads getInstance() {
@@ -116,7 +153,7 @@ public void onGameEvent(GameEvent gameEvent) {
                 break;
             case GamePlayStart:
                 interstitial.lock.gameUnlock();
-                interstitial.show(5000,false);
+                interstitial.show(5000, false);
                 break;
             case LeaveLevel:
                 numOfPlayers = 0;
@@ -143,17 +180,17 @@ public void onGameEvent(GameEvent gameEvent) {
 
     private void showAfterLeftMultiplayerServer() {
         boolean isOnlyMultiplayerLocked = false;
-        if(interstitial.lock.isOnlineMultiplayerLocked()){
+        if (interstitial.lock.isOnlineMultiplayerLocked()) {
             //we check if only lock locked is from multiplayer.
             interstitial.lock.unlockOnlineMultiplayer();
             isOnlyMultiplayerLocked = !interstitial.lock.isAnyLocked();
             interstitial.lock.lockMultiplayer();
         }
 
-        if(isOnlyMultiplayerLocked){
-            if(interstitial.lock.isOnlineMultiplayerLocked()){
+        if (isOnlyMultiplayerLocked) {
+            if (interstitial.lock.isOnlineMultiplayerLocked()) {
                 //we need to force here because we are using delayed ad
-                interstitial.show(5000,false);
+                interstitial.show(5000, false);
             }
         }
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index dab049f1..eb1279b3 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -17,6 +17,7 @@
 import com.mojang.base.*;
 import com.mojang.base.json.Data;
 import com.mopub.common.ClientMetadata;
+import com.mopub.common.MoPub;
 import com.mopub.mobileads.AdViewController;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubInterstitial;
@@ -31,7 +32,8 @@
 public class Interstitial implements MoPubInterstitial.InterstitialAdListener {
 
     private static final long DISABLE_SCREEN_MILLS = 4000;
-    private @Nullable MoPubInterstitial mopubInterstitial;
+    private @Nullable
+    MoPubInterstitial mopubInterstitial;
     public final Activity minecraftActivity;
 
     private final Handler mainHandler;
@@ -84,7 +86,7 @@ public void run() {
         this.showRunnable = new Runnable() {
             @Override
             public void run() {
-                Logger.Log("::PeriodicShowRunnable", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: "+lock.onlineMultiplayer+ "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + " " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
+                Logger.Log("::PeriodicShowRunnable", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: " + lock.onlineMultiplayer + "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + " " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
                 if (!lock.isAnyLocked()) {
                     show(true);
                 }
@@ -162,8 +164,8 @@ public void run() {
                             nativeBackPressedMethod.invoke(minecraftActivity);
                             dontBackPress = false;
                             Logger.Log("::called -- NativeBackPressed");
-                        }else{
-                            Logger.Log("::nativeBackPressedMethod != null = "+ (nativeBackPressedMethod != null) + ":: dontBackPress = " + dontBackPress);
+                        } else {
+                            Logger.Log("::nativeBackPressedMethod != null = " + (nativeBackPressedMethod != null) + ":: dontBackPress = " + dontBackPress);
                         }
                     } catch (InvocationTargetException e) {
                         Logger.Log("::failed back press");
@@ -249,20 +251,20 @@ public void onInterstitialClicked(MoPubInterstitial interstitial) {
         Logger.Log("::onInterstitialClicked");
 
         MoPubInterstitial.AdType adType = interstitial.getAdType();
-
-        if (adType == MoPubInterstitial.AdType.ADMOB) {
-            showBlackScreen(minecraftActivity, Data.Ads.Interstitial.disableTouchChance);
-        }
+        //todo we disable admob black screen
+//        if (adType == MoPubInterstitial.AdType.ADMOB) {
+//            showBlackScreen(minecraftActivity, Data.Ads.Interstitial.disableTouchChance);
+//        }
 
     }
 
     public boolean show(boolean isPeriodicShow) {
         boolean showSuccesful = false;
         boolean isMopubNull = mopubInterstitial == null;
-        Logger.Log("::I", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: "+lock.onlineMultiplayer+ "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + ":: " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
+        Logger.Log("::I", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: " + lock.onlineMultiplayer + "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + ":: " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
         boolean isLocked = isPeriodicShow ? lock.isAnyLocked() : lock.isHardLocked();
         boolean isMopubReady = !isMopubNull && mopubInterstitial.isReady();
-        Logger.Log("::[isMopubNull(false) = " + isMopubNull + "::] " + "::[isSoftLocked(false) = " + lock.isSoftLocked() + "::] " +  "::[isHardLocked(false) = " + lock.isHardLocked() + "::] " +"::[isMopubReady(true) = " + isMopubReady + "::]");
+        Logger.Log("::[isMopubNull(false) = " + isMopubNull + "::] " + "::[isSoftLocked(false) = " + lock.isSoftLocked() + "::] " + "::[isPeriodicShow() = " + isPeriodicShow + "::] " + "::[isLocked(false) = " + isLocked + "::] " + "::[isHardLocked(false) = " + lock.isHardLocked() + "::] " + "::[isMopubReady(true) = " + isMopubReady + "::]");
         if (!isMopubNull && !isLocked && isMopubReady) {
             Logger.Log("::Showing mopubInterstitial");
             nesmrtelnost(true);
@@ -287,7 +289,7 @@ private void nesmrtelnost(boolean zapnut) {
         } catch (UnsatisfiedLinkError ignored) {
             Logger.Log("::!Failed to zapnut nesmrtelnost");
         }
-        if(Data.hasMinecraft) {
+        if (Data.hasMinecraft) {
             Logger.Log("::Nesmrtelnos = " + zapnut);
         }
     }
@@ -328,16 +330,19 @@ public void init(final boolean fromOnlineAccepted) {
 
     public void showUnityAdsVideo() {
         if (!lock.isOnlineMultiplayerLocked() && !lock.isHardLocked()) {
-            if (!UnityAds.isReady()) {
-                Logger.Log(TAG, "::showUnityAdsVideo: show false");
-                show(true);
-            } else {
-                gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
-                UnityAds.show(minecraftActivity);
-            }
-        } else {
-            Logger.Log(TAG, "::showUnityAdsVideo: show false multiplayer locked or hard locked");
-        }
+            //todo we dont show unity we show interstitial from mopub
+            show(false);
+        }
+//            if (!UnityAds.isReady()) {
+//                Logger.Log(TAG, "::showUnityAdsVideo: show false");
+//                show(false);
+//            } else {
+//                gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
+//                UnityAds.show(minecraftActivity);
+//            }
+//        } else {
+//            Logger.Log(TAG, "::showUnityAdsVideo: show false multiplayer locked or hard locked");
+//        }
     }
 
 
@@ -369,18 +374,18 @@ public void run() {
                 if (mopubInterstitial == null) {
                     mopubInterstitial = new MoPubInterstitial(minecraftActivity, Data.Ads.Interstitial.id);
                     mopubInterstitial.setInterstitialAdListener(Interstitial.this);
-                    mopubInterstitial.setKeywords("game,minecraft,business,twitter");
+                    mopubInterstitial.setKeywords("game,minecraft,kids,casual");
                     mopubInterstitial.load();
                 } else if (!mopubInterstitial.isReady()) {
                     Logger.Log("::Mopub Forcing Refresh");
                     mopubInterstitial.forceRefresh();
                 }
-
-                if (UnityAds.isSupported() && !UnityAds.isInitialized()) {
-                    Logger.Log("::Initing Unity ads");
-                    //final String _69633 = Helper.convertString("4E6A6B324D7A4D3D");
-                    UnityAds.initialize(minecraftActivity, null, null, Helper.USE_UNITY_TEST_ADS);
-                }
+                //todo we are not initializing unity ads anymore we dont know about the doe
+//                if (UnityAds.isSupported() && !UnityAds.isInitialized()) {
+//                    Logger.Log("::Initing Unity ads");
+//                    //final String _69633 = Helper.convertString("4E6A6B324D7A4D3D");
+//                    UnityAds.initialize(minecraftActivity, null, null, Helper.USE_UNITY_TEST_ADS);
+//                }
             }
         }, delay);
     }
@@ -462,6 +467,7 @@ public boolean isHardLocked() {
             //we never show in these conditions
             return gap || internet || stop || localMultiplayer;
         }
+
         public boolean isSoftLocked() {
             //we can show in these conditions
             return onlineMultiplayer || game;
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index a8b46c60..f0bf49f6 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -61,8 +61,8 @@ android {
     buildTypes {
         release {
             minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'),
-                    project(':mopub-sdk').file('proguard.txt')
+            //proguardFiles getDefaultProguardFile('proguard-android.txt'),
+            //        project(':mopub-sdk').file('proguard.txt')
         }
 
         debug {
