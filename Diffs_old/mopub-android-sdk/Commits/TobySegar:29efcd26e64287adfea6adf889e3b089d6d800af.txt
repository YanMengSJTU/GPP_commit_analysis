diff --git a/mopub-sdk/mopub-sdk-banner/build.gradle b/mopub-sdk/mopub-sdk-banner/build.gradle
index 7b99e6ef..97134a23 100644
--- a/mopub-sdk/mopub-sdk-banner/build.gradle
+++ b/mopub-sdk/mopub-sdk-banner/build.gradle
@@ -12,8 +12,4 @@ project.description = 'MoPub Android SDK - Banner'
 project.ext.displayName = 'MoPub Android SDK - Banner'
 project.ext.projectName = 'mopub-sdk-banner'
 project.ext.uploadName = 'mopub-android-sdk-banner'
-//apply from: '../publisher.gradle'
-
-android {
-    buildToolsVersion '28.0.3'
-}
\ No newline at end of file
+//apply from: '../publisher.gradle'
\ No newline at end of file
diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
index befa90be..65433245 100644
--- a/mopub-sdk/mopub-sdk-base/build.gradle
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -37,9 +37,8 @@ dependencies {
 
     api 'com.mopub.volley:mopub-volley:2.1.0'
     api project(':base')
-    api 'com.google.android.gms:play-services-ads:15.0.1'
+    api 'com.google.android.gms:play-services-ads:18.2.0'
     api project(':unity-ads')
-    api 'com.flurry.android:ads:11.1.1@aar'
 //Yandex
     //compile 'com.yandex.android:mobmetricalib:3.4.0'
     //compile 'com.yandex.android:mobileads:2.80'
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index a7a44788..8a6127a3 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -132,7 +132,6 @@ public void onInterstitialEvent(InterstitialEvent event) {
                 break;
             case Dismissed:
                 Proxy.lock = true;
-                Analytics.lockedAnalytics = true;
                 Logger.Log("::called -- Dismissed event");
                 Helper.setNormalVolume(activity);
                 hideNavigationBar(activity);
@@ -140,7 +139,6 @@ public void onInterstitialEvent(InterstitialEvent event) {
                 nesmrtelnost(false, 15000);
                 break;
             case Shown:
-                Analytics.lockedAnalytics = true;
                 Helper.setQuietVolume(activity);
                 nesmrtelnost(true, 0);
                 break;
@@ -298,7 +296,7 @@ private void nesmrtelnost(final boolean zapnut, long delay) {
         Helper.runOnUiThread(new Runnable() {
             @Override
             public void run() {
-                if (Data.hasMinecraft) {
+                if (Data.hasMinecraft && !Helper.isDebugPackage(activity)) {
                     try {
                         ge.setInvincibility(zapnut);
                     } catch (Exception e) {
@@ -319,9 +317,9 @@ private void lockOutSE() {
             LromSP.edit().clear().apply();
 
             //sendAnalitics
-            Analytics.i().sendOther("SECreated", Data.country);
+            Analytics.i().sendOther("Sweden Country", Data.country);
 
-            Ads.kick("", activity);
+            Ads.kickFromGame("", activity);
         }
     }
 
@@ -359,7 +357,7 @@ public void run() {
         }, 4000);
     }
 
-    public static void kick(String text, final Activity activity) {
+    public static void kickFromGame(String text, final Activity activity) {
         if (activity != null) {
             EventBus.getDefault().post(new AppEvent(Stop));
             EventBus.getDefault().post(new AppEvent(Destroy));
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index c6465061..6ab705d2 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -47,10 +47,32 @@ public Interstitial(final Activity activity) {
         this.periodicMills = Helper.FasterAds() ? 25000 : Data.Ads.Interstitial.periodicShowMillsLow;
         this.lock = new Lock();
         EventBus.getDefault().register(this);
-        prxy = new Proxy();
+        //prxy = new Proxy();
         i = new Intent(activity, Proxy.class);
     }
 
+    public void init() {
+        int delay = 4000;
+        Logger.Log("::Initing Mopub in " + (delay / 1000) + " sec...");
+        lock.game = Data.hasMinecraft;
+
+        Helper.runOnWorkerThread(new Runnable() {
+            @Override
+            public void run() {
+                if (mopubInterstitial == null) {
+                    String mopubId = Helper.isDebugPackage(activity) ? DEBUG_MOPUB_INTERSTITIAL_ID : Data.Ads.Interstitial.mopubId;
+                    mopubInterstitial = new MoPubInterstitial(activity, mopubId);
+                    mopubInterstitial.setInterstitialAdListener(Interstitial.this);
+                    mopubInterstitial.setKeywords("game,minecraft,kids,casual");
+                    mopubInterstitial.load();
+                } else if (!mopubInterstitial.isReady()) {
+                    Logger.Log("::Mopub Forcing Refresh");
+                    mopubInterstitial.forceRefresh();
+                }
+            }
+        }, delay);
+    }
+
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onGameEvent(GameEvent gameEvent) {
         switch (gameEvent.event) {
@@ -86,6 +108,7 @@ public void onInterstitialEvent(InterstitialEvent intEvent) {
         }
     }
 
+    //<editor-fold desc="Overide Methods Interstitial">
     @Override
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
         Logger.Log("::called -- onInterstitialDismissed");
@@ -98,7 +121,8 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
 
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
         load(1000);
-        if (Proxy.isProxyBeingUsed) {
+        //Old code if proxy usage
+       /* if (Proxy.isProxyBeingUsed) {
 
             proxyFinishRunnable = new Runnable() {
                 @Override
@@ -106,12 +130,11 @@ public void run() {
                     if (Proxy.instance != null) {
                         Proxy.instance.Finish();
                         Proxy.lock = false;
-                        Analytics.lockedAnalytics = false;
                     }
                 }
             };
             Helper.runOnWorkerThread(proxyFinishRunnable, 600);
-        }
+        }*/
     }
 
     @Override
@@ -141,6 +164,7 @@ public void onInterstitialClicked(MoPubInterstitial interstitial) {
         EventBus.getDefault().post(new InterstitialEvent(InterstitialEvent.Clicked));
         Logger.Log("::onInterstitialClicked");
     }
+    //</editor-fold>
 
     public void show(final boolean isPeriodicShow, long delay) {
         Helper.runOnUiThread(new Runnable() {
@@ -153,9 +177,9 @@ public void run() {
                 Logger.Log("::[isMopubNull(false) = " + isMopubNull + "::] " + "::[isSoftLocked(false) = " + lock.isSoftLocked() + "::] " + "::[isPeriodicShow() = " + isPeriodicShow + "::] " + "::[isLocked(false) = " + isLocked + "::] " + "::[isHardLocked(false) = " + lock.isHardLocked() + "::] " + "::[isMopubReady(true) = " + isMopubReady + "::]" + "::[areAdsEnabled(true) = " + Data.Ads.enabled + "::]");
                 if (!isMopubNull && !isLocked && isMopubReady && Data.Ads.enabled) {
                     if (mopubInterstitial.isReady()) {
-                            //We dont proxy anymore in if statement there is OR TRUE
-                        if (mopubInterstitial.getAdType().equals(MoPubInterstitial.AdType.ADMOB) || true)
-                            mopubInterstitial.show();
+                        mopubInterstitial.show();
+                        //<editor-fold desc="Deprecated Proxy Activity">
+                        /* Deprecated Proxy Activity Watch out for Analytics Session because its a second activity
                         else {
                             Runnable proxyStartRunnable = new Runnable() {
                                 @Override
@@ -164,8 +188,8 @@ public void run() {
                                 }
                             };
                             Helper.runOnWorkerThread(proxyStartRunnable);
-                        }
-
+                        }*/
+                        //</editor-fold>
                     } else {
                         Logger.Log("::InterstitialAd not available");
                         Analytics.report("Ads", "InterstitialAdNotAvailable");
@@ -182,8 +206,24 @@ public void destroy() {
         }
     }
 
+    private void load(long delay) {
+        if (loadRunnable == null) {
+            loadRunnable = new Runnable() {
+                @Override
+                public void run() {
+                    if (mopubInterstitial != null) {
+                        mopubInterstitial.load();
+                    }
+                }
+            };
+        }
+        Helper.removeFromWorkerThread(loadRunnable);
+        Helper.runOnWorkerThread(loadRunnable, delay);
+    }
+
+
     private void schedulePeriodicShows() {
-        if (!periodicScheduled) {
+        if (!periodicScheduled) { // Needs to be call only once pretoze sa to same schedulne dokola.
             Logger.Log("::schedulePeriodicShows: Scheduled za " + String.valueOf(periodicMills));
 
             periodicShowRunnable = new Runnable() {
@@ -202,26 +242,14 @@ public void run() {
         }
     }
 
-    public void init() {
-        int delay = 4000;
-        Logger.Log("::Initing Mopub in " + (delay / 1000) + " sec...");
-        lock.game = Data.hasMinecraft;
-
-        Helper.runOnWorkerThread(new Runnable() {
-            @Override
-            public void run() {
-                if (mopubInterstitial == null) {
-                    String mopubId = Helper.isDebugPackage(activity) ? DEBUG_MOPUB_INTERSTITIAL_ID : Data.Ads.Interstitial.mopubId;
-                    mopubInterstitial = new MoPubInterstitial(activity, mopubId);
-                    mopubInterstitial.setInterstitialAdListener(Interstitial.this);
-                    mopubInterstitial.setKeywords("game,minecraft,kids,casual");
-                    mopubInterstitial.load();
-                } else if (!mopubInterstitial.isReady()) {
-                    Logger.Log("::Mopub Forcing Refresh");
-                    mopubInterstitial.forceRefresh();
+    private void changePeriodicShowForHighEcpmCountry() {
+        if (Data.country != null && Data.Ads.Interstitial.highEcpmCountries != null) {
+            for (String highEcpmCountry : Data.Ads.Interstitial.highEcpmCountries) {
+                if (highEcpmCountry.equals(Data.country)) {
+                    periodicMills = Data.Ads.Interstitial.periodicShowMillsHigh;
                 }
             }
-        }, delay);
+        }
     }
 
     private void gapLockForTime(long minimalAdGapMills) {
@@ -239,31 +267,10 @@ public void run() {
         Helper.runOnWorkerThread(gapLockRunnable, minimalAdGapMills);
     }
 
-    private void load(long delay) {
-        if (loadRunnable == null) {
-            loadRunnable = new Runnable() {
-                @Override
-                public void run() {
-                    if (mopubInterstitial != null) {
-                        mopubInterstitial.load();
-                    }
-                }
-            };
-        }
-        Helper.removeFromWorkerThread(loadRunnable);
-        Helper.runOnWorkerThread(loadRunnable, delay);
-    }
 
-    private void changePeriodicShowForHighEcpmCountry() {
-        if (Data.country != null && Data.Ads.Interstitial.highEcpmCountries != null) {
-            for (String highEcpmCountry : Data.Ads.Interstitial.highEcpmCountries) {
-                if (highEcpmCountry.equals(Data.country)) {
-                    periodicMills = Data.Ads.Interstitial.periodicShowMillsHigh;
-                }
-            }
-        }
-    }
 
+    //<editor-fold desc="Random Ass Lock class">
+    //Tato klasa preventuje aby sa ti neshowla ad ked nieco robis.
     public class Lock {
         private boolean stop;
         private boolean onlineMultiplayer;
@@ -360,4 +367,5 @@ public boolean isGapLocked() {
             return gap;
         }
     }
+    //</editor-fold>
 }
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 04842d32..581693e7 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -19,7 +19,8 @@ project.group = 'com.mopub'
 project.version = '5.9.1'
 
 android {
-    compileSdkVersion 29
+    compileSdkVersion 28
+    buildToolsVersion '28.0.3'
     lintOptions { abortOnError false }
 
     defaultConfig {
