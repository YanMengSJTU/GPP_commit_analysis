diff --git a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java b/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
index 5158d05b..79d32f99 100644
--- a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
@@ -40,89 +40,6 @@ public void setUp() throws Exception {
         when(calendarMock.get(subject.measureUnit)).thenReturn(0);
     }
 
-    @Test
-    public void checkIfBuilding_withFastBlockPlacements_shoudReturnTrue() throws Exception{
-        int numberOfElementsToSum = 3; //we check placement times of last two placed blocks
-        int closePlacementDiffereence = 700; //to be considered Build
-        long firstPlaceTime = 100000;
-        long secondPlaceTime = 110000;
-        //we simulate couple of placements with long short time distance between
-        long thirdPlaceTime = secondPlaceTime + closePlacementDiffereence;
-        long forthPlaceTime = secondPlaceTime + closePlacementDiffereence*2;
-        long currentPlaceTime =  secondPlaceTime  + closePlacementDiffereence*3;
-
-
-        long[] placementTimes = new long[]{0,0,firstPlaceTime,secondPlaceTime,thirdPlaceTime,forthPlaceTime};
-
-        subject.checkIfBuilding(placementTimes, numberOfElementsToSum, closePlacementDiffereence, currentPlaceTime);
-
-        assertTrue(subject.isBuilding);
-    }
-
-    @Test
-    public void checkIfBuilding_withLongBlockPlacements_shoudReturnFalse() throws Exception{
-        int numberOfElementsToSum = 3; //we check placement times of last two placed blocks
-        int closePlacementDiffereence = 700; //to be considered Build
-        int longPlacementDifference = 800;
-        //we simulate couple of placements with long time distance between
-        long firstPlaceTime = 100000;
-        long secondPlaceTime = 110000;
-        long thirdPlaceTime = secondPlaceTime + longPlacementDifference;
-        long forthPlaceTime = secondPlaceTime + longPlacementDifference*2;
-        long currentPlaceTime =  secondPlaceTime  + longPlacementDifference*3;
-
-
-        long[] placementTimes = new long[]{0,0,firstPlaceTime,secondPlaceTime,thirdPlaceTime,forthPlaceTime};
-
-        subject.checkIfBuilding(placementTimes, numberOfElementsToSum, closePlacementDiffereence, currentPlaceTime);
-
-        assertFalse(subject.isBuilding);
-    }
-
-    @Test
-    public void showAdIfBuilding_withBuildingTrue__shouldShowInterstitial() throws Exception {
-        subject.isBuilding = true;
-
-        //noinspection ConstantConditions
-        subject.showAdIfBuilding();
-
-        verify(interstitialMock).show();
-    }
-
-    @Test
-    public void showAdIfBuilding_withBuildingTrue_withReadyInterstitial_shouldShowInterstitialOnlyOnce() throws Exception {
-        subject.isBuilding = true;
-        when(interstitialMock.show()).thenReturn(true);
-
-        //noinspection ConstantConditions
-        subject.showAdIfBuilding();
-        subject.showAdIfBuilding();
-
-        verify(interstitialMock, times(1)).show();
-    }
-
-    @Test
-    public void showAdIfBuilding_withBuildingTrue_withFailedInterstitialShow_shouldTryToShowInterstitial() throws Exception {
-        subject.isBuilding = true;
-        when(interstitialMock.show()).thenReturn(false);
-
-        //noinspection ConstantConditions
-        subject.showAdIfBuilding();
-        subject.isBuilding = true;
-        subject.showAdIfBuilding();
-
-        verify(interstitialMock, times(2)).show();
-    }
-
-    @Test
-    public void showAdIfBuilding_withBuildingFalse__shouldNotShowInterstitial() throws Exception {
-        subject.isBuilding = false;
-
-        //noinspection ConstantConditions
-        subject.showAdIfBuilding();
-
-        verify(interstitialMock, never()).show();
-    }
 
     @Test
     public void onStartSleepEventShould_ShowUnityVideo() throws Exception {
diff --git a/mopub-sdk/src/test/java/com/mopub/ads/InterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/ads/InterstitialTest.java
deleted file mode 100644
index 910f30cb..00000000
--- a/mopub-sdk/src/test/java/com/mopub/ads/InterstitialTest.java
+++ /dev/null
@@ -1,57 +0,0 @@
-package com.mopub.ads;
-
-import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.mobileads.BuildConfig;
-import com.mopub.mobileads.MoPubInterstitial;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.robolectric.annotation.Config;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.when;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class InterstitialTest {
-
-    private Interstitial subject;
-    private String interstitialId = "interstitialID";
-    private long minimalAdGapMills = 15000;
-    private double disableTouchChance = 0.0;
-    private double fingerAdChance = 1.0;
-    private List<String> highECPMcountries = new ArrayList<>();
-    @Mock MoPubInterstitial moPubInterstitialMock;
-
-    @Before
-    public void setUp() throws Exception {
-        subject = new Interstitial(null,interstitialId,null,minimalAdGapMills,disableTouchChance,null,highECPMcountries,fingerAdChance);
-    }
-
-    @Test
-    public void onInterstitialLoaded_withInterstitialCountryCodeThat_Is_InHighEcpmCountries_shouldSetCanGetFingerAd_True() throws Exception {
-        String highECPMcountry = "US";
-        highECPMcountries.add(highECPMcountry);
-        when(moPubInterstitialMock.getCountryCode()).thenReturn(highECPMcountry);
-
-        subject.onInterstitialLoaded(moPubInterstitialMock);
-
-        assertTrue(subject.canGetFingerAd);
-    }
-    @Test
-    public void onInterstitialLoaded_withInterstitialCountryCodeThat_IsNot_InHighEcpmCountries_shouldSetCanGetFingerAd_False() throws Exception {
-        String randomCountryCode = "RK";
-        highECPMcountries.clear();
-        when(moPubInterstitialMock.getCountryCode()).thenReturn(randomCountryCode);
-
-        subject.onInterstitialLoaded(moPubInterstitialMock);
-
-        assertFalse(subject.canGetFingerAd);
-    }
-}
\ No newline at end of file
