diff --git a/extras/src/com/mopub/nativeads/InMobiNative.java b/extras/src/com/mopub/nativeads/InMobiNative.java
deleted file mode 100644
index f714b1c0..00000000
--- a/extras/src/com/mopub/nativeads/InMobiNative.java
+++ /dev/null
@@ -1,237 +0,0 @@
-package com.mopub.nativeads;
-
-import android.app.Activity;
-import android.content.Context;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMNative;
-import com.inmobi.monetization.IMNativeListener;
-import com.mopub.common.logging.MoPubLog;
-import com.mopub.network.TrackingRequest;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.json.JSONTokener;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-import static com.mopub.common.util.Json.getJsonValue;
-import static com.mopub.common.util.Numbers.parseDouble;
-import static com.mopub.nativeads.NativeImageHelper.preCacheImages;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-class InMobiNative extends CustomEventNative {
-    private static final String APP_ID_KEY = "app_id";
-
-    // CustomEventNative implementation
-    @Override
-    protected void loadNativeAd(final Context context,
-            final CustomEventNativeListener customEventNativeListener,
-            final Map<String, Object> localExtras,
-            final Map<String, String> serverExtras) {
-
-        if (!(context instanceof Activity)) {
-            customEventNativeListener.onNativeAdFailed(NativeErrorCode.NATIVE_ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-        final Activity activity = (Activity) context;
-
-        final String appId;
-        if (extrasAreValid(serverExtras)) {
-            appId = serverExtras.get(APP_ID_KEY);
-        } else {
-            customEventNativeListener.onNativeAdFailed(NativeErrorCode.NATIVE_ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        InMobi.initialize(activity, appId);
-        final InMobiStaticNativeAd inMobiStaticNativeAd =
-                new InMobiStaticNativeAd(context,
-                        new ImpressionTracker(context),
-                        new NativeClickHandler(context),
-                        customEventNativeListener);
-        inMobiStaticNativeAd.setIMNative(new IMNative(inMobiStaticNativeAd));
-        inMobiStaticNativeAd.loadAd();
-    }
-
-    private boolean extrasAreValid(final Map<String, String> serverExtras) {
-        final String placementId = serverExtras.get(APP_ID_KEY);
-        return (placementId != null && placementId.length() > 0);
-    }
-
-    static class InMobiStaticNativeAd extends StaticNativeAd implements IMNativeListener {
-        static final int IMPRESSION_MIN_TIME_VIEWED = 0;
-
-        // Modifiable keys
-        static final String TITLE = "title";
-        static final String DESCRIPTION = "description";
-        static final String SCREENSHOTS = "screenshots";
-        static final String ICON = "icon";
-        static final String LANDING_URL = "landing_url";
-        static final String CTA = "cta";
-        static final String RATING = "rating";
-
-        // Constant keys
-        static final String URL = "url";
-
-        private final Context mContext;
-        private final CustomEventNativeListener mCustomEventNativeListener;
-        private final ImpressionTracker mImpressionTracker;
-        private final NativeClickHandler mNativeClickHandler;
-        private IMNative mImNative;
-
-        InMobiStaticNativeAd(final Context context,
-                final ImpressionTracker impressionTracker,
-                final NativeClickHandler nativeClickHandler,
-                final CustomEventNativeListener customEventNativeListener) {
-            mContext = context.getApplicationContext();
-            mImpressionTracker = impressionTracker;
-            mNativeClickHandler = nativeClickHandler;
-            mCustomEventNativeListener = customEventNativeListener;
-        }
-
-        void setIMNative(final IMNative imNative) {
-            mImNative = imNative;
-        }
-
-        void loadAd() {
-            mImNative.loadAd();
-        }
-
-        // IMNativeListener implementation
-        @Override
-        public void onNativeRequestSucceeded(final IMNative imNative) {
-            if (imNative == null) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-                return;
-            }
-
-            try {
-                parseJson(imNative);
-            } catch (JSONException e) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.INVALID_RESPONSE);
-                return;
-            }
-
-            final List<String> imageUrls = new ArrayList<String>();
-            final String mainImageUrl = getMainImageUrl();
-            if (mainImageUrl != null) {
-                imageUrls.add(mainImageUrl);
-            }
-
-            final String iconUrl = getIconImageUrl();
-            if (iconUrl != null) {
-                imageUrls.add(iconUrl);
-            }
-
-            preCacheImages(mContext, imageUrls, new NativeImageHelper.ImageListener() {
-                @Override
-                public void onImagesCached() {
-                    mCustomEventNativeListener.onNativeAdLoaded(InMobiStaticNativeAd.this);
-                }
-
-                @Override
-                public void onImagesFailedToCache(NativeErrorCode errorCode) {
-                    mCustomEventNativeListener.onNativeAdFailed(errorCode);
-                }
-            });
-        }
-
-        @Override
-        public void onNativeRequestFailed(final IMErrorCode errorCode) {
-            if (errorCode == IMErrorCode.INVALID_REQUEST) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_REQUEST);
-            } else if (errorCode == IMErrorCode.INTERNAL_ERROR || errorCode == IMErrorCode.NETWORK_ERROR) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-            } else if (errorCode == IMErrorCode.NO_FILL) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_NO_FILL);
-            } else {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.UNSPECIFIED);
-            }
-        }
-
-        // Lifecycle Handlers
-        @Override
-        public void prepare(final View view) {
-            if (view != null && view instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view);
-            } else if (view != null && view.getParent() instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view.getParent());
-            } else {
-                Log.e("MoPub", "InMobi did not receive ViewGroup to attachToView, unable to record impressions");
-            }
-            mImpressionTracker.addView(view, this);
-            mNativeClickHandler.setOnClickListener(view, this);
-        }
-
-        @Override
-        public void clear(final View view) {
-            mImpressionTracker.removeView(view);
-            mNativeClickHandler.clearOnClickListener(view);
-        }
-
-        @Override
-        public void destroy() {
-            mImNative.detachFromView();
-            mImpressionTracker.destroy();
-        }
-
-        // Event Handlers
-        @Override
-        public void recordImpression(final View view) {
-            notifyAdImpressed();
-        }
-
-        @Override
-        public void handleClick(final View view) {
-            notifyAdClicked();
-            mNativeClickHandler.openClickDestinationUrl(getClickDestinationUrl(), view);
-            mImNative.handleClick(null);
-        }
-
-        void parseJson(final IMNative imNative) throws JSONException  {
-            final JSONTokener jsonTokener = new JSONTokener(imNative.getContent());
-            final JSONObject jsonObject = new JSONObject(jsonTokener);
-
-            setTitle(getJsonValue(jsonObject, TITLE, String.class));
-            setText(getJsonValue(jsonObject, DESCRIPTION, String.class));
-
-            final JSONObject screenShotJsonObject = getJsonValue(jsonObject, SCREENSHOTS, JSONObject.class);
-            if (screenShotJsonObject != null) {
-                setMainImageUrl(getJsonValue(screenShotJsonObject, URL, String.class));
-            }
-
-            final JSONObject iconJsonObject = getJsonValue(jsonObject, ICON, JSONObject.class);
-            if (iconJsonObject != null) {
-                setIconImageUrl(getJsonValue(iconJsonObject, URL, String.class));
-            }
-
-            final String clickDestinationUrl = getJsonValue(jsonObject, LANDING_URL, String.class);
-            if (clickDestinationUrl == null) {
-                final String errorMessage = "InMobi JSON response missing required key: "
-                        + LANDING_URL + ". Failing over.";
-                MoPubLog.d(errorMessage);
-                throw new JSONException(errorMessage);
-            }
-
-            setClickDestinationUrl(clickDestinationUrl);
-            setCallToAction(getJsonValue(jsonObject, CTA, String.class));
-
-            try {
-                setStarRating(parseDouble(jsonObject.opt(RATING)));
-            } catch (ClassCastException e) {
-                Log.d("MoPub", "Unable to set invalid star rating for InMobi Native.");
-            }
-            setImpressionMinTimeViewed(IMPRESSION_MIN_TIME_VIEWED);
-        }
-
-    }
-}
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java b/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
deleted file mode 100644
index b51fb04c..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.commons.InMobi.LOG_LEVEL;
-import com.inmobi.monetization.IMBanner;
-import com.inmobi.monetization.IMBannerListener;
-import com.inmobi.monetization.IMErrorCode;
-import com.mopub.common.MoPub;
-import com.mopub.common.util.Views;
-import com.mopub.mobileads.CustomEventBanner;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-public class InMobiBanner extends CustomEventBanner implements IMBannerListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadBanner(Context context,
-            CustomEventBannerListener bannerListener,
-            Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mBannerListener = bannerListener;
-        String inMobiAppId = DEFAULT_APP_ID;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-        if (activity == null) {
-            mBannerListener.onBannerFailed(null);
-            return;
-        }
-
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-
-        iMBanner = new IMBanner(activity, inMobiAppId,
-                IMBanner.INMOBI_AD_UNIT_320X50);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMBanner.setRequestParams(map);
-        InMobi.setLogLevel(LOG_LEVEL.VERBOSE);
-        iMBanner.setIMBannerListener(this);
-        iMBanner.setRefreshInterval(-1);
-        iMBanner.loadBanner();
-
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventBannerListener mBannerListener;
-    private IMBanner iMBanner;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventBanner
-     */
-
-    @Override
-    public void onInvalidate() {
-        if (iMBanner != null) {
-            iMBanner.setIMBannerListener(null);
-            Views.removeFromParent(iMBanner);
-            iMBanner.destroy();
-        }
-    }
-
-    @Override
-    public void onBannerInteraction(IMBanner imBanner, Map<String, String> map) {
-        mBannerListener.onBannerClicked();
-    }
-
-    @Override
-    public void onBannerRequestFailed(IMBanner imBanner, IMErrorCode imErrorCode) {
-
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mBannerListener.onBannerFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onBannerRequestSucceeded(IMBanner imBanner) {
-        if (iMBanner != null) {
-            mBannerListener.onBannerLoaded(imBanner);
-
-        } else {
-            mBannerListener.onBannerFailed(null);
-        }
-    }
-
-    @Override
-    public void onDismissBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerCollapsed();
-    }
-
-    @Override
-    public void onLeaveApplication(IMBanner imBanner) {
-
-    }
-
-    @Override
-    public void onShowBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerExpanded();
-    }
-
-}
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java b/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
deleted file mode 100644
index ad45e7d8..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
+++ /dev/null
@@ -1,135 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMInterstitial;
-import com.inmobi.monetization.IMInterstitialListener;
-import com.mopub.common.MoPub;
-import com.mopub.mobileads.CustomEventInterstitial;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK  4.4.1
- */
-public class InMobiInterstitial extends CustomEventInterstitial implements IMInterstitialListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadInterstitial(Context context,
-                                    CustomEventInterstitialListener interstitialListener,
-                                    Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mInterstitialListener = interstitialListener;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-
-        if (activity == null) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-            return;
-        }
-
-        String inMobiAppId = DEFAULT_APP_ID;
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-        this.iMInterstitial = new IMInterstitial(activity, inMobiAppId);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMInterstitial.setRequestParams(map);
-        iMInterstitial.setIMInterstitialListener(this);
-        iMInterstitial.loadInterstitial();
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventInterstitialListener mInterstitialListener;
-    private IMInterstitial iMInterstitial;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventInterstitial
-     */
-
-    @Override
-    public void showInterstitial() {
-        if (iMInterstitial != null
-                && IMInterstitial.State.READY.equals(this.iMInterstitial.getState())) {
-            iMInterstitial.show();
-        }
-    }
-
-    @Override
-    public void onInvalidate() {
-        if (iMInterstitial != null) {
-            iMInterstitial.setIMInterstitialListener(null);
-            iMInterstitial.destroy();
-        }
-    }
-
-    @Override
-    public void onDismissInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialDismissed();
-    }
-
-    @Override
-    public void onInterstitialFailed(IMInterstitial imInterstitial, IMErrorCode imErrorCode) {
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onInterstitialInteraction(IMInterstitial imInterstitial,
-                                          Map<String, String> map) {
-        mInterstitialListener.onInterstitialClicked();
-    }
-
-    @Override
-    public void onInterstitialLoaded(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialLoaded();
-    }
-
-    @Override
-    public void onLeaveApplication(IMInterstitial imInterstitial) {
-
-    }
-
-    @Override
-    public void onShowInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialShown();
-    }
-}
