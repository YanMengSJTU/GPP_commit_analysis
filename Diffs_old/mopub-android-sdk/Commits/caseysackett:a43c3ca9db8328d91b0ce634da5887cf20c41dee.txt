diff --git a/mopub-sdk/.classpath b/mopub-sdk/.classpath
index aa7faa7a..bd5fd557 100644
--- a/mopub-sdk/.classpath
+++ b/mopub-sdk/.classpath
@@ -6,9 +6,8 @@
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
 	<classpathentry kind="lib" path="libs/android-support-v4.jar"/>
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
-	<classpathentry kind="lib" path="libs/MMSDK.jar"/>
 	<classpathentry kind="lib" path="libs/greystripe-android-sdk-2.3.0.jar"/>
 	<classpathentry kind="lib" path="libs/InMobi-4.1.1.jar"/>
-	<classpathentry kind="lib" path="libs/amazon-ads-5.4.78.jar"/>
+	<classpathentry kind="lib" path="libs/amazon-ads-5.4.146.jar"/>
 	<classpathentry kind="output" path="bin/classes"/>
 </classpath>
diff --git a/mopub-sdk/libs/MMSDK.jar b/mopub-sdk/libs/MMSDK.jar
deleted file mode 100644
index fa2cf8d2..00000000
Binary files a/mopub-sdk/libs/MMSDK.jar and /dev/null differ
diff --git a/mopub-sdk/libs/MillennialBanner.java b/mopub-sdk/libs/MillennialBanner.java
deleted file mode 100644
index 4ba0f3a0..00000000
--- a/mopub-sdk/libs/MillennialBanner.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- * Copyright (c) 2011, MoPub Inc.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met:
- *
- * * Redistributions of source code must retain the above copyright
- *   notice, this list of conditions and the following disclaimer.
- *
- * * Redistributions in binary form must reproduce the above copyright
- *   notice, this list of conditions and the following disclaimer in the
- *   documentation and/or other materials provided with the distribution.
- *
- * * Neither the name of 'MoPub Inc.' nor the names of its contributors
- *   may be used to endorse or promote products derived from this software
- *   without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
- * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
- * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
- * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
- * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-package com.mopub.mobileads;
-
-import android.content.Context;
-import android.location.Location;
-import android.util.Log;
-import com.millennialmedia.android.*;
-
-import java.util.Map;
-
-/**
- * Compatible with version 5.1.0 of the Millennial Media SDK.
- */
-
-class MillennialBanner extends CustomEventBanner {
-    private MMAdView mMillennialAdView;
-    private CustomEventBannerListener mBannerListener;
-    public static final String APID_KEY = "adUnitID";
-    public static final String AD_WIDTH_KEY = "adWidth";
-    public static final String AD_HEIGHT_KEY = "adHeight";
-    private MillennialBroadcastReceiver mBroadcastReceiver;
-
-    @Override
-    protected void loadBanner(Context context, CustomEventBannerListener customEventBannerListener,
-                              Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mBannerListener = customEventBannerListener;
-
-        String apid;
-        int width;
-        int height;
-        if (extrasAreValid(serverExtras)) {
-            apid = serverExtras.get(APID_KEY);
-            width = Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
-            height = Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
-        } else {
-            mBannerListener.onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        MMSDK.initialize(context);
-        MMSDK.setBroadcastEvents(true);
-
-        mBroadcastReceiver = new MillennialBroadcastReceiver();
-        mBroadcastReceiver.register(context);
-
-        mMillennialAdView = new MMAdView(context);
-        mMillennialAdView.setApid(apid);
-        mMillennialAdView.setWidth(width);
-        mMillennialAdView.setHeight(height);
-
-        Location location = (Location) localExtras.get("location");
-        if (location != null) MMRequest.setUserLocation(location);
-
-        mMillennialAdView.setMMRequest(new MMRequest());
-        mMillennialAdView.setId(MMSDK.getDefaultAdId());
-        AdViewController.setShouldHonorServerDimensions(mMillennialAdView);
-        mMillennialAdView.getAd();
-    }
-
-    private boolean extrasAreValid(Map<String, String> serverExtras) {
-        try {
-            Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
-            Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
-        } catch (NumberFormatException e) {
-            return false;
-        }
-
-        return serverExtras.containsKey(APID_KEY);
-    }
-
-    @Override
-    protected void onInvalidate() {
-        mMillennialAdView.setListener(null);
-        mBroadcastReceiver.unregister();
-    }
-
-    class MillennialBroadcastReceiver extends MMBroadcastReceiver {
-        private Context mContext;
-
-        @Override
-        public void getAdSuccess(MMAd ad) {
-            super.getAdSuccess(ad);
-            Log.d("MoPub", "Millennial banner ad loaded successfully. Showing ad...");
-            mBannerListener.onBannerLoaded(mMillennialAdView);
-        }
-
-        @Override
-        public void getAdFailure(MMAd ad) {
-            super.getAdFailure(ad);
-            Log.d("MoPub", "Millennial banner ad failed to load.");
-            mBannerListener.onBannerFailed(MoPubErrorCode.NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void intentStarted(MMAd ad, String intent) {
-            super.intentStarted(ad, intent);
-            Log.d("MoPub", "Millennial banner ad clicked.");
-            mBannerListener.onBannerClicked();
-        }
-
-
-        void register(Context context) {
-            mContext = context;
-            context.registerReceiver(this, MMBroadcastReceiver.createIntentFilter());
-        }
-
-        void unregister() {
-            try {
-                mContext.unregisterReceiver(this);
-            } catch (Exception exception) {
-                Log.d("MoPub", "Unable to unregister MMBroadcastReceiver", exception);
-            } finally {
-                mContext = null;
-            }
-        }
-    }
-
-    @Deprecated
-    MMAdView getMMAdView() {
-        return mMillennialAdView;
-    }
-}
diff --git a/mopub-sdk/libs/MillennialInterstitial.java b/mopub-sdk/libs/MillennialInterstitial.java
deleted file mode 100644
index e3905b1f..00000000
--- a/mopub-sdk/libs/MillennialInterstitial.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Copyright (c) 2011, MoPub Inc.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met:
- *
- * * Redistributions of source code must retain the above copyright
- *   notice, this list of conditions and the following disclaimer.
- *
- * * Redistributions in binary form must reproduce the above copyright
- *   notice, this list of conditions and the following disclaimer in the
- *   documentation and/or other materials provided with the distribution.
- *
- * * Neither the name of 'MoPub Inc.' nor the names of its contributors
- *   may be used to endorse or promote products derived from this software
- *   without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
- * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
- * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
- * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
- * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-package com.mopub.mobileads;
-
-import android.content.Context;
-import android.location.Location;
-import android.util.Log;
-import com.millennialmedia.android.*;
-
-import java.util.Map;
-
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_NO_FILL;
-
-/**
- * Compatible with version 5.1.0 of the Millennial Media SDK.
- */
-
-class MillennialInterstitial extends CustomEventInterstitial {
-    private MMInterstitial mMillennialInterstitial;
-    private CustomEventInterstitialListener mInterstitialListener;
-    public static final String APID_KEY = "adUnitID";
-    private MillennialBroadcastReceiver mBroadcastReceiver;
-
-    @Override
-    protected void loadInterstitial(Context context, CustomEventInterstitialListener customEventInterstitialListener,
-                                    Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mInterstitialListener = customEventInterstitialListener;
-
-        String apid;
-        if (extrasAreValid(serverExtras)) {
-            apid = serverExtras.get(APID_KEY);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        MMSDK.initialize(context);
-        MMSDK.setBroadcastEvents(true);
-
-        mBroadcastReceiver = new MillennialBroadcastReceiver();
-        mBroadcastReceiver.register(context);
-
-        Location location = (Location) localExtras.get("location");
-        if (location != null) MMRequest.setUserLocation(location);
-
-        mMillennialInterstitial = new MMInterstitial(context);
-        if (mMillennialInterstitial.isAdAvailable()) {
-            Log.d("MoPub", "Millennial interstitial ad already loaded.");
-            mInterstitialListener.onInterstitialLoaded();
-        } else {
-            mMillennialInterstitial.setMMRequest(new MMRequest());
-            mMillennialInterstitial.setApid(apid);
-            mMillennialInterstitial.fetch();
-        }
-    }
-
-    @Override
-    protected void showInterstitial() {
-        if (mMillennialInterstitial.isAdAvailable()) {
-            mMillennialInterstitial.display();
-        } else {
-            Log.d("MoPub", "Tried to show a Millennial interstitial ad before it finished loading. Please try again.");
-        }
-    }
-
-    @Override
-    protected void onInvalidate() {
-        mMillennialInterstitial.setListener(null);
-        mBroadcastReceiver.unregister();
-    }
-
-    private boolean extrasAreValid(Map<String, String> serverExtras) {
-        return serverExtras.containsKey(APID_KEY);
-    }
-
-    class MillennialBroadcastReceiver extends MMBroadcastReceiver {
-        private Context mContext;
-
-        @Override
-        public void fetchFinishedCaching(MMAd ad) {
-            super.fetchFinishedCaching(ad);
-            fetchFinished(NETWORK_INVALID_STATE);
-        }
-
-        @Override
-        public void getAdFailure(MMAd ad) {
-            super.getAdFailure(ad);
-            Log.d("MoPub", "Millennial interstitial ad failed to load.");
-            mInterstitialListener.onInterstitialFailed(NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void intentStarted(MMAd ad, String intent) {
-            super.intentStarted(ad, intent);
-            Log.d("MoPub", "Millennial interstitial ad clicked.");
-            mInterstitialListener.onInterstitialClicked();
-        }
-
-        @Override
-        public void fetchFailure(MMAd ad) {
-            super.fetchFailure(ad);
-            fetchFinished(NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void displayStarted(MMAd ad) {
-            super.displayStarted(ad);
-            Log.d("MoPub", "Showing Millennial interstitial ad.");
-            mInterstitialListener.onInterstitialShown();
-        }
-
-        @Override
-        public void overlayClosed(MMAd ad) {
-            super.overlayClosed(ad);
-            Log.d("MoPub", "Millennial interstitial ad dismissed.");
-            mInterstitialListener.onInterstitialDismissed();
-        }
-
-        void register(Context context) {
-            mContext = context;
-            context.registerReceiver(this, MMBroadcastReceiver.createIntentFilter());
-        }
-
-        void unregister() {
-            try {
-                mContext.unregisterReceiver(this);
-            } catch (Exception exception) {
-                Log.d("MoPub", "Unable to unregister MMBroadcastReceiver", exception);
-            } finally {
-                mContext = null;
-            }
-        }
-
-        private void fetchFinished(MoPubErrorCode errorToReport) {
-            if (mMillennialInterstitial.isAdAvailable()) {
-                Log.d("MoPub", "Millennial interstitial ad loaded successfully.");
-                mInterstitialListener.onInterstitialLoaded();
-            } else {
-                Log.d("MoPub", "Millennial interstitial ad failed to load.");
-                mInterstitialListener.onInterstitialFailed(errorToReport);
-            }
-        }
-    }
-}
diff --git a/mopub-sdk/libs/amazon-ads-5.4.146.jar b/mopub-sdk/libs/amazon-ads-5.4.146.jar
new file mode 100644
index 00000000..c93e6912
Binary files /dev/null and b/mopub-sdk/libs/amazon-ads-5.4.146.jar differ
diff --git a/mopub-sdk/libs/amazon-ads-5.4.78.jar b/mopub-sdk/libs/amazon-ads-5.4.78.jar
deleted file mode 100644
index 0c248711..00000000
Binary files a/mopub-sdk/libs/amazon-ads-5.4.78.jar and /dev/null differ
diff --git a/mopub-sdk/libs/android-support-v4.jar b/mopub-sdk/libs/android-support-v4.jar
new file mode 100644
index 00000000..c31cede4
Binary files /dev/null and b/mopub-sdk/libs/android-support-v4.jar differ
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java
deleted file mode 100644
index 620c31a6..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialBanner.java
+++ /dev/null
@@ -1,157 +0,0 @@
-/*
- * Copyright (c) 2011, MoPub Inc.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met:
- *
- * * Redistributions of source code must retain the above copyright
- *   notice, this list of conditions and the following disclaimer.
- *
- * * Redistributions in binary form must reproduce the above copyright
- *   notice, this list of conditions and the following disclaimer in the
- *   documentation and/or other materials provided with the distribution.
- *
- * * Neither the name of 'MoPub Inc.' nor the names of its contributors
- *   may be used to endorse or promote products derived from this software
- *   without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
- * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
- * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
- * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
- * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-package com.mopub.mobileads;
-
-import android.content.Context;
-import android.location.Location;
-import android.util.Log;
-import com.millennialmedia.android.*;
-
-import java.util.Map;
-
-/**
- * Compatible with version 5.1.0 of the Millennial Media SDK.
- */
-
-class MillennialBanner extends CustomEventBanner {
-    private MMAdView mMillennialAdView;
-    private CustomEventBannerListener mBannerListener;
-    public static final String APID_KEY = "adUnitID";
-    public static final String AD_WIDTH_KEY = "adWidth";
-    public static final String AD_HEIGHT_KEY = "adHeight";
-    private MillennialBroadcastReceiver mBroadcastReceiver;
-
-    @Override
-    protected void loadBanner(Context context, CustomEventBannerListener customEventBannerListener,
-                              Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mBannerListener = customEventBannerListener;
-
-        String apid;
-        int width;
-        int height;
-        if (extrasAreValid(serverExtras)) {
-            apid = serverExtras.get(APID_KEY);
-            width = Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
-            height = Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
-        } else {
-            mBannerListener.onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        MMSDK.initialize(context);
-        MMSDK.setBroadcastEvents(true);
-
-        mBroadcastReceiver = new MillennialBroadcastReceiver();
-        mBroadcastReceiver.register(context);
-
-        mMillennialAdView = new MMAdView(context);
-        mMillennialAdView.setApid(apid);
-        mMillennialAdView.setWidth(width);
-        mMillennialAdView.setHeight(height);
-
-        Location location = (Location) localExtras.get("location");
-        if (location != null) MMRequest.setUserLocation(location);
-
-        mMillennialAdView.setMMRequest(new MMRequest());
-        mMillennialAdView.setId(MMSDK.getDefaultAdId());
-        AdViewController.setShouldHonorServerDimensions(mMillennialAdView);
-        mMillennialAdView.getAd();
-    }
-
-    private boolean extrasAreValid(Map<String, String> serverExtras) {
-        try {
-            Integer.parseInt(serverExtras.get(AD_WIDTH_KEY));
-            Integer.parseInt(serverExtras.get(AD_HEIGHT_KEY));
-        } catch (NumberFormatException e) {
-            return false;
-        }
-
-        return serverExtras.containsKey(APID_KEY);
-    }
-
-    @Override
-    protected void onInvalidate() {
-    	if(mMillennialAdView != null) {
-    		mMillennialAdView.setListener(null);
-    	}
-    	if(mBroadcastReceiver != null) {
-    		mBroadcastReceiver.unregister();
-    	}
-    }
-
-    class MillennialBroadcastReceiver extends MMBroadcastReceiver {
-        private Context mContext;
-
-        @Override
-        public void getAdSuccess(MMAd ad) {
-            super.getAdSuccess(ad);
-            Log.d("MoPub", "Millennial banner ad loaded successfully. Showing ad...");
-            mBannerListener.onBannerLoaded(mMillennialAdView);
-        }
-
-        @Override
-        public void getAdFailure(MMAd ad) {
-            super.getAdFailure(ad);
-            Log.d("MoPub", "Millennial banner ad failed to load.");
-            mBannerListener.onBannerFailed(MoPubErrorCode.NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void intentStarted(MMAd ad, String intent) {
-            super.intentStarted(ad, intent);
-            Log.d("MoPub", "Millennial banner ad clicked.");
-            mBannerListener.onBannerClicked();
-        }
-
-
-        void register(Context context) {
-            mContext = context;
-            context.registerReceiver(this, MMBroadcastReceiver.createIntentFilter());
-        }
-
-        void unregister() {
-            try {
-                mContext.unregisterReceiver(this);
-            } catch (Exception exception) {
-                Log.d("MoPub", "Unable to unregister MMBroadcastReceiver", exception);
-            } finally {
-                mContext = null;
-            }
-        }
-    }
-
-    @Deprecated
-    MMAdView getMMAdView() {
-        return mMillennialAdView;
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialInterstitial.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialInterstitial.java
deleted file mode 100644
index e3905b1f..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MillennialInterstitial.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
- * Copyright (c) 2011, MoPub Inc.
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met:
- *
- * * Redistributions of source code must retain the above copyright
- *   notice, this list of conditions and the following disclaimer.
- *
- * * Redistributions in binary form must reproduce the above copyright
- *   notice, this list of conditions and the following disclaimer in the
- *   documentation and/or other materials provided with the distribution.
- *
- * * Neither the name of 'MoPub Inc.' nor the names of its contributors
- *   may be used to endorse or promote products derived from this software
- *   without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
- * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
- * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
- * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
- * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
- * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
- * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
- * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-package com.mopub.mobileads;
-
-import android.content.Context;
-import android.location.Location;
-import android.util.Log;
-import com.millennialmedia.android.*;
-
-import java.util.Map;
-
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_NO_FILL;
-
-/**
- * Compatible with version 5.1.0 of the Millennial Media SDK.
- */
-
-class MillennialInterstitial extends CustomEventInterstitial {
-    private MMInterstitial mMillennialInterstitial;
-    private CustomEventInterstitialListener mInterstitialListener;
-    public static final String APID_KEY = "adUnitID";
-    private MillennialBroadcastReceiver mBroadcastReceiver;
-
-    @Override
-    protected void loadInterstitial(Context context, CustomEventInterstitialListener customEventInterstitialListener,
-                                    Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mInterstitialListener = customEventInterstitialListener;
-
-        String apid;
-        if (extrasAreValid(serverExtras)) {
-            apid = serverExtras.get(APID_KEY);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        MMSDK.initialize(context);
-        MMSDK.setBroadcastEvents(true);
-
-        mBroadcastReceiver = new MillennialBroadcastReceiver();
-        mBroadcastReceiver.register(context);
-
-        Location location = (Location) localExtras.get("location");
-        if (location != null) MMRequest.setUserLocation(location);
-
-        mMillennialInterstitial = new MMInterstitial(context);
-        if (mMillennialInterstitial.isAdAvailable()) {
-            Log.d("MoPub", "Millennial interstitial ad already loaded.");
-            mInterstitialListener.onInterstitialLoaded();
-        } else {
-            mMillennialInterstitial.setMMRequest(new MMRequest());
-            mMillennialInterstitial.setApid(apid);
-            mMillennialInterstitial.fetch();
-        }
-    }
-
-    @Override
-    protected void showInterstitial() {
-        if (mMillennialInterstitial.isAdAvailable()) {
-            mMillennialInterstitial.display();
-        } else {
-            Log.d("MoPub", "Tried to show a Millennial interstitial ad before it finished loading. Please try again.");
-        }
-    }
-
-    @Override
-    protected void onInvalidate() {
-        mMillennialInterstitial.setListener(null);
-        mBroadcastReceiver.unregister();
-    }
-
-    private boolean extrasAreValid(Map<String, String> serverExtras) {
-        return serverExtras.containsKey(APID_KEY);
-    }
-
-    class MillennialBroadcastReceiver extends MMBroadcastReceiver {
-        private Context mContext;
-
-        @Override
-        public void fetchFinishedCaching(MMAd ad) {
-            super.fetchFinishedCaching(ad);
-            fetchFinished(NETWORK_INVALID_STATE);
-        }
-
-        @Override
-        public void getAdFailure(MMAd ad) {
-            super.getAdFailure(ad);
-            Log.d("MoPub", "Millennial interstitial ad failed to load.");
-            mInterstitialListener.onInterstitialFailed(NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void intentStarted(MMAd ad, String intent) {
-            super.intentStarted(ad, intent);
-            Log.d("MoPub", "Millennial interstitial ad clicked.");
-            mInterstitialListener.onInterstitialClicked();
-        }
-
-        @Override
-        public void fetchFailure(MMAd ad) {
-            super.fetchFailure(ad);
-            fetchFinished(NETWORK_NO_FILL);
-        }
-
-        @Override
-        public void displayStarted(MMAd ad) {
-            super.displayStarted(ad);
-            Log.d("MoPub", "Showing Millennial interstitial ad.");
-            mInterstitialListener.onInterstitialShown();
-        }
-
-        @Override
-        public void overlayClosed(MMAd ad) {
-            super.overlayClosed(ad);
-            Log.d("MoPub", "Millennial interstitial ad dismissed.");
-            mInterstitialListener.onInterstitialDismissed();
-        }
-
-        void register(Context context) {
-            mContext = context;
-            context.registerReceiver(this, MMBroadcastReceiver.createIntentFilter());
-        }
-
-        void unregister() {
-            try {
-                mContext.unregisterReceiver(this);
-            } catch (Exception exception) {
-                Log.d("MoPub", "Unable to unregister MMBroadcastReceiver", exception);
-            } finally {
-                mContext = null;
-            }
-        }
-
-        private void fetchFinished(MoPubErrorCode errorToReport) {
-            if (mMillennialInterstitial.isAdAvailable()) {
-                Log.d("MoPub", "Millennial interstitial ad loaded successfully.");
-                mInterstitialListener.onInterstitialLoaded();
-            } else {
-                Log.d("MoPub", "Millennial interstitial ad failed to load.");
-                mInterstitialListener.onInterstitialFailed(errorToReport);
-            }
-        }
-    }
-}
