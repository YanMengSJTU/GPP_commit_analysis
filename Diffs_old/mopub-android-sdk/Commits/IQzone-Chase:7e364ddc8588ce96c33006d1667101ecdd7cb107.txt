diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
index a049e317..4bd31a6e 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -6,6 +6,7 @@
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.os.Handler;
+import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
@@ -127,7 +128,7 @@ public void run() {
             }
         };
         mRefreshTimeMillis = DEFAULT_REFRESH_TIME_MILLISECONDS;
-        mHandler = new Handler();
+        mHandler = new Handler(Looper.getMainLooper());
     }
 
     @VisibleForTesting
@@ -548,12 +549,17 @@ void setAdContentView(final View view) {
         mHandler.post(new Runnable() {
             @Override
             public void run() {
-                MoPubView moPubView = getMoPubView();
-                if (moPubView == null) {
-                    return;
-                }
-                moPubView.removeAllViews();
-                moPubView.addView(view, getAdLayoutParams(view));
+            	MoPubView moPubView = getMoPubView();
+            	if (moPubView == null) {
+            		return;
+            	}
+            	try {
+            		moPubView.removeAllViews();
+	                moPubView.addView(view, getAdLayoutParams(view));
+            	}
+            	catch(Exception e) {
+            		moPubView.adFailed(MoPubErrorCode.INTERNAL_ERROR);
+            	}
             }
         });
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java
index dcdf11bd..70843363 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java
@@ -1,21 +1,24 @@
 package com.mopub.mobileads;
 
+import static com.mopub.common.DataKeys.AD_REPORT_KEY;
+import static com.mopub.mobileads.MoPubErrorCode.INTERNAL_ERROR;
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
+
+import java.util.Map;
+
+import android.app.Activity;
 import android.content.Context;
+import android.os.Looper;
 
 import com.mopub.common.AdReport;
 import com.mopub.common.DataKeys;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.mobileads.factories.HtmlBannerWebViewFactory;
 
-import java.util.Map;
-
-import static com.mopub.common.DataKeys.AD_REPORT_KEY;
-import static com.mopub.mobileads.MoPubErrorCode.INTERNAL_ERROR;
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
-
 public class HtmlBanner extends CustomEventBanner {
 
     private HtmlBannerWebView mHtmlBannerWebView;
+    private Activity mActivity;
 
     @Override
     protected void loadBanner(
@@ -46,15 +49,44 @@ protected void loadBanner(
             return;
         }
 
-        mHtmlBannerWebView = HtmlBannerWebViewFactory.create(context, adReport, customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl);
-        AdViewController.setShouldHonorServerDimensions(mHtmlBannerWebView);
-        mHtmlBannerWebView.loadHtmlResponse(htmlData);
+        if (Looper.myLooper() == Looper.getMainLooper()) {
+        	mHtmlBannerWebView = HtmlBannerWebViewFactory.create(context, adReport, customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl);
+            AdViewController.setShouldHonorServerDimensions(mHtmlBannerWebView);
+            mHtmlBannerWebView.loadHtmlResponse(htmlData);
+        } else {
+        	final Context pContext = context;
+            final CustomEventBannerListener pCustomEventBannerListener = customEventBannerListener;
+            final Boolean pIsScrollable = isScrollable;
+            final String pRedirectUrl = redirectUrl;
+            final String pClickthroughUrl = clickthroughUrl;
+            final String pHtmlData = htmlData;
+            final AdReport pAdReport = adReport;
+            mActivity = (Activity)context; 
+            mActivity.runOnUiThread(new Runnable() {
+    			@Override
+    			public void run() {
+    				mHtmlBannerWebView = HtmlBannerWebViewFactory.create(pContext, pAdReport, pCustomEventBannerListener, pIsScrollable, pRedirectUrl, pClickthroughUrl);
+    		        AdViewController.setShouldHonorServerDimensions(mHtmlBannerWebView);
+    		        mHtmlBannerWebView.loadHtmlResponse(pHtmlData);
+    			}
+    		});
+        }
+        
     }
 
     @Override
     protected void onInvalidate() {
         if (mHtmlBannerWebView != null) {
-            mHtmlBannerWebView.destroy();
+            if (Looper.myLooper() == Looper.getMainLooper()) {
+        		mHtmlBannerWebView.destroy();
+        	} else {
+        		mActivity.runOnUiThread(new Runnable() {
+    				@Override
+    				public void run() {
+    					mHtmlBannerWebView.destroy();
+    				}
+    			});
+        	}
         }
     }
 
