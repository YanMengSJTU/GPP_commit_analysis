diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
index f07942b7..ba303707 100644
--- a/mopub-sdk/mopub-sdk-base/build.gradle
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -23,7 +23,7 @@ dependencies {
     compile project(':base')
     compile 'com.google.android.gms:play-services-ads:10.0.0'
     compile project(':unity-ads')
-    compile project(':audience-network-sdk-4.26.1')
+    //compile project(':audience-network-sdk-4.26.1')
 }
 
 project.description = 'MoPub Android SDK - Base'
diff --git a/mopub-sdk/mopub-sdk-base/libs/heyzap-ads-sdk-9.15.5.jar b/mopub-sdk/mopub-sdk-base/libs/heyzap-ads-sdk-9.15.5.jar
new file mode 100644
index 00000000..0ea89935
Binary files /dev/null and b/mopub-sdk/mopub-sdk-base/libs/heyzap-ads-sdk-9.15.5.jar differ
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
index 847942f1..32c6699c 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FacebookInterstitial.java
@@ -1,129 +1,129 @@
-package com.mopub.ads.adapters;
-
-import android.content.Context;
-import android.util.Log;
-
-import com.facebook.ads.Ad;
-import com.facebook.ads.AdError;
-import com.facebook.ads.InterstitialAd;
-import com.facebook.ads.InterstitialAdListener;
-import com.mopub.mobileads.CustomEventInterstitial;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.Map;
-
-/**
- * Certified with Facebook Audience Network 4.26.0
- */
-public class FacebookInterstitial extends CustomEventInterstitial implements InterstitialAdListener {
-    public static final String PLACEMENT_ID_KEY = "placement_id";
-
-    private InterstitialAd mFacebookInterstitial;
-    private CustomEventInterstitialListener mInterstitialListener;
-
-    /**
-     * CustomEventInterstitial implementation
-     */
-
-    @Override
-    protected void loadInterstitial(final Context context,
-                                    final CustomEventInterstitialListener customEventInterstitialListener,
-                                    final Map<String, Object> localExtras,
-                                    final Map<String, String> serverExtras) {
-        mInterstitialListener = customEventInterstitialListener;
-
-        final String placementId;
-        if (extrasAreValid(serverExtras)) {
-            placementId = serverExtras.get(PLACEMENT_ID_KEY);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        mFacebookInterstitial = new InterstitialAd(context, placementId);
-        mFacebookInterstitial.setAdListener(this);
-        mFacebookInterstitial.loadAd();
-    }
-
-    @Override
-    public void showInterstitial() {
-        if (mFacebookInterstitial != null && mFacebookInterstitial.isAdLoaded()) {
-            mFacebookInterstitial.show();
-        } else {
-            Log.d("MoPub", "Tried to show a Facebook interstitial ad before it finished loading. Please try again.");
-            if (mInterstitialListener != null) {
-                onError(mFacebookInterstitial, AdError.INTERNAL_ERROR);
-            } else {
-                Log.d("MoPub", "Interstitial listener not instantiated. Please load interstitial again.");
-            }
-        }
-    }
-
-    @Override
-    protected boolean usesProxy() {
-        return false;
-    }
-
-    @Override
-    protected void onInvalidate() {
-        if (mFacebookInterstitial != null) {
-            mFacebookInterstitial.destroy();
-            mFacebookInterstitial = null;
-        }
-    }
-
-    /**
-     * InterstitialAdListener implementation
-     */
-
-    @Override
-    public void onAdLoaded(final Ad ad) {
-        Log.d("MoPub", "Facebook interstitial ad loaded successfully.");
-        mInterstitialListener.onInterstitialLoaded();
-    }
-
-    @Override
-    public void onError(final Ad ad, final AdError error) {
-        Log.d("MoPub", "Facebook interstitial ad failed to load.");
-        if (error == AdError.NO_FILL) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-        } else if (error == AdError.INTERNAL_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onInterstitialDisplayed(final Ad ad) {
-        Log.d("MoPub", "Showing Facebook interstitial ad.");
-        mInterstitialListener.onInterstitialShown();
-    }
-
-    @Override
-    public void onAdClicked(final Ad ad) {
-        Log.d("MoPub", "Facebook interstitial ad clicked.");
-        mInterstitialListener.onInterstitialClicked();
-    }
-
-    @Override
-    public void onLoggingImpression(Ad ad) {
-        Log.d("MoPub", "Facebook interstitial ad logged impression.");
-    }
-
-    @Override
-    public void onInterstitialDismissed(final Ad ad) {
-        Log.d("MoPub", "Facebook interstitial ad dismissed.");
-        mInterstitialListener.onInterstitialDismissed();
-    }
-
-    private boolean extrasAreValid(final Map<String, String> serverExtras) {
-        final String placementId = serverExtras.get(PLACEMENT_ID_KEY);
-        return (placementId != null && placementId.length() > 0);
-    }
-
-    @Deprecated // for testing
-    InterstitialAd getInterstitialAd() {
-        return mFacebookInterstitial;
-    }
-}
+//package com.mopub.ads.adapters;
+//
+//import android.content.Context;
+//import android.util.Log;
+//
+//import com.facebook.ads.Ad;
+//import com.facebook.ads.AdError;
+//import com.facebook.ads.InterstitialAd;
+//import com.facebook.ads.InterstitialAdListener;
+//import com.mopub.mobileads.CustomEventInterstitial;
+//import com.mopub.mobileads.MoPubErrorCode;
+//
+//import java.util.Map;
+//
+///**
+// * Certified with Facebook Audience Network 4.26.0
+// */
+//public class FacebookInterstitial extends CustomEventInterstitial implements InterstitialAdListener {
+//    public static final String PLACEMENT_ID_KEY = "placement_id";
+//
+//    private InterstitialAd mFacebookInterstitial;
+//    private CustomEventInterstitialListener mInterstitialListener;
+//
+//    /**
+//     * CustomEventInterstitial implementation
+//     */
+//
+//    @Override
+//    protected void loadInterstitial(final Context context,
+//                                    final CustomEventInterstitialListener customEventInterstitialListener,
+//                                    final Map<String, Object> localExtras,
+//                                    final Map<String, String> serverExtras) {
+//        mInterstitialListener = customEventInterstitialListener;
+//
+//        final String placementId;
+//        if (extrasAreValid(serverExtras)) {
+//            placementId = serverExtras.get(PLACEMENT_ID_KEY);
+//        } else {
+//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
+//            return;
+//        }
+//
+//        mFacebookInterstitial = new InterstitialAd(context, placementId);
+//        mFacebookInterstitial.setAdListener(this);
+//        mFacebookInterstitial.loadAd();
+//    }
+//
+//    @Override
+//    public void showInterstitial() {
+//        if (mFacebookInterstitial != null && mFacebookInterstitial.isAdLoaded()) {
+//            mFacebookInterstitial.show();
+//        } else {
+//            Log.d("MoPub", "Tried to show a Facebook interstitial ad before it finished loading. Please try again.");
+//            if (mInterstitialListener != null) {
+//                onError(mFacebookInterstitial, AdError.INTERNAL_ERROR);
+//            } else {
+//                Log.d("MoPub", "Interstitial listener not instantiated. Please load interstitial again.");
+//            }
+//        }
+//    }
+//
+//    @Override
+//    protected boolean usesProxy() {
+//        return false;
+//    }
+//
+//    @Override
+//    protected void onInvalidate() {
+//        if (mFacebookInterstitial != null) {
+//            mFacebookInterstitial.destroy();
+//            mFacebookInterstitial = null;
+//        }
+//    }
+//
+//    /**
+//     * InterstitialAdListener implementation
+//     */
+//
+//    @Override
+//    public void onAdLoaded(final Ad ad) {
+//        Log.d("MoPub", "Facebook interstitial ad loaded successfully.");
+//        mInterstitialListener.onInterstitialLoaded();
+//    }
+//
+//    @Override
+//    public void onError(final Ad ad, final AdError error) {
+//        Log.d("MoPub", "Facebook interstitial ad failed to load.");
+//        if (error == AdError.NO_FILL) {
+//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+//        } else if (error == AdError.INTERNAL_ERROR) {
+//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
+//        } else {
+//            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
+//        }
+//    }
+//
+//    @Override
+//    public void onInterstitialDisplayed(final Ad ad) {
+//        Log.d("MoPub", "Showing Facebook interstitial ad.");
+//        mInterstitialListener.onInterstitialShown();
+//    }
+//
+//    @Override
+//    public void onAdClicked(final Ad ad) {
+//        Log.d("MoPub", "Facebook interstitial ad clicked.");
+//        mInterstitialListener.onInterstitialClicked();
+//    }
+//
+//    @Override
+//    public void onLoggingImpression(Ad ad) {
+//        Log.d("MoPub", "Facebook interstitial ad logged impression.");
+//    }
+//
+//    @Override
+//    public void onInterstitialDismissed(final Ad ad) {
+//        Log.d("MoPub", "Facebook interstitial ad dismissed.");
+//        mInterstitialListener.onInterstitialDismissed();
+//    }
+//
+//    private boolean extrasAreValid(final Map<String, String> serverExtras) {
+//        final String placementId = serverExtras.get(PLACEMENT_ID_KEY);
+//        return (placementId != null && placementId.length() > 0);
+//    }
+//
+//    @Deprecated // for testing
+//    InterstitialAd getInterstitialAd() {
+//        return mFacebookInterstitial;
+//    }
+//}
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java
new file mode 100644
index 00000000..4ced5bc4
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java
@@ -0,0 +1,128 @@
+package com.mopub.ads.adapters;
+
+
+import android.app.Activity;
+import android.content.Context;
+
+import com.heyzap.sdk.ads.HeyzapAds;
+import com.heyzap.sdk.ads.InterstitialAd;
+import com.mojang.base.Helper;
+import com.mopub.mobileads.CustomEventInterstitial;
+import com.mopub.mobileads.MoPubErrorCode;
+
+import java.util.Map;
+
+public class HeyzapInterstitial extends CustomEventInterstitial implements HeyzapAds.NetworkCallbackListener, HeyzapAds.OnStatusListener {
+    private static final String KEY_ID = "key";
+    private String id;
+    private Activity activity;
+    private CustomEventInterstitialListener mInterstitialListener;
+
+    @Override
+    protected void loadInterstitial(Context context, CustomEventInterstitialListener customEventInterstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras) {
+        mInterstitialListener = customEventInterstitialListener;
+
+        if (context instanceof Activity) {
+            activity = (Activity) context;
+        } else {
+            Helper.wtf("Cound not load heyzap because context is not instance of activity");
+            if (mInterstitialListener != null) {
+                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
+            }
+            return;
+        }
+
+        if (id == null) {
+            id = extractIdFromExtras(serverExtras);
+            HeyzapAds.start(id, activity,HeyzapAds.DISABLE_AUTOMATIC_FETCH,this);
+        }
+
+        InterstitialAd.fetch();
+    }
+
+    private String extractIdFromExtras(Map<String, String> serverExtras) {
+        if (serverExtras.containsKey(KEY_ID)) {
+            return serverExtras.get(KEY_ID);
+        } else {
+            Helper.wtf("Failed to extract key from heyzap server extrass");
+            return null;
+        }
+    }
+
+    @Override
+    public void showInterstitial() {
+        if (InterstitialAd.isAvailable()) {
+            Helper.wtf("Showing Heyzap");
+            InterstitialAd.display(activity);
+        } else {
+            Helper.wtf("Wanted to show heyzap but wasnt avaible");
+        }
+    }
+
+    @Override
+    protected boolean usesProxy() {
+        return false;
+    }
+
+    @Override
+    protected void onInvalidate() {
+
+    }
+
+    @Override
+    public void onNetworkCallback(String s, String s1) {
+        Helper.wtf("Heyzap network callback " + s + " : " + s1);
+    }
+
+    @Override
+    public void onShow(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialShown();
+        }
+    }
+
+    @Override
+    public void onClick(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialClicked();
+        }
+    }
+
+    @Override
+    public void onHide(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialDismissed();
+        }
+    }
+
+    @Override
+    public void onFailedToShow(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
+        }
+    }
+
+    @Override
+    public void onAvailable(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialLoaded();
+        }
+    }
+
+    @Override
+    public void onFailedToFetch(String s) {
+        if (mInterstitialListener != null) {
+            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
+        }
+    }
+
+    @Override
+    public void onAudioStarted() {
+
+    }
+
+    @Override
+    public void onAudioFinished() {
+
+    }
+}
