diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index 389834be..4b23d6cc 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -105,9 +105,9 @@ dependencies {
     compile fileTree(include: ['*.jar'], dir: 'libs')
     compile project(':base')
     compile project(':unity-ads')
-    compile 'com.android.support:support-v4:23.1.1'
-    compile 'com.android.support:support-annotations:23.1.1'
-    compile 'com.android.support:recyclerview-v7:23.1.1'
+    compile 'com.android.support:support-v4:23.3.0'
+    compile 'com.android.support:support-annotations:23.3.0'
+    compile 'com.android.support:recyclerview-v7:23.3.0'
     //compile 'com.facebook.android:audience-network-sdk:4.11.0'
     compile 'com.google.android.gms:play-services-ads:9.0.2'
     compile 'com.mopub.volley:mopub-volley:1.1.0'
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
index 9564dd0c..487e07f3 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
@@ -17,8 +17,8 @@
 import com.mopub.ads.adapters.FastAd;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubInterstitial;
-import com.unity3d.ads.android.IUnityAdsListener;
-import com.unity3d.ads.android.UnityAds;
+import com.unity3d.ads.IUnityAdsListener;
+import com.unity3d.ads.UnityAds;
 
 import java.io.File;
 import java.util.List;
@@ -109,12 +109,14 @@ public void run() {
 
     @Override
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
+        Helper.wtf("onInterstitialDismissed");
         gapLockForTime(minimalAdGapMills);
         loadAfterDelay(3000);
     }
 
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
+        Helper.wtf("onInterstitialLoaded");
         String country = interstitial.getCountryCode();
 
         if (!onLoadedOnce && country != null && !country.isEmpty()) {
@@ -145,11 +147,12 @@ public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode
 
     @Override
     public void onInterstitialShown(MoPubInterstitial interstitial) {
-
+        Helper.wtf("onInterstitialShown");
     }
 
     @Override
     public void onInterstitialClicked(MoPubInterstitial interstitial) {
+        Helper.wtf("onInterstitialClicked");
         disableTouch(disableTouchChance);
     }
 
@@ -216,9 +219,11 @@ public void run() {
 
     public void showUnityAdsVideo() {
         if(!lock.isMultiplayerLocked()) {
-            if (!UnityAds.show()) {
+            if (!UnityAds.isReady()) {
                 Helper.wtf(TAG, "showUnityAdsVideo: show false");
                 show();
+            }else {
+                UnityAds.show(activity);
             }
         }else {
             Helper.wtf(TAG, "showUnityAdsVideo: show false multiplayer locked");
@@ -262,39 +267,9 @@ public void run() {
 
                 if (UnityAds.isSupported()) {
                     UnityAds.setDebugMode(Helper.DEBUG);
-                    UnityAds.setTestMode(Helper.DEBUG);
-                    UnityAds.init(activity, Helper.convertString("4E7A49334E7A453D"), new IUnityAdsListener() {
-                        @Override
-                        public void onHide() {
-                            onInterstitialDismissed(mopubInterstitial);
-                        }
-
-                        @Override
-                        public void onShow() {
-                            onInterstitialShown(mopubInterstitial);
-                        }
-
-                        @Override
-                        public void onVideoStarted() {
-
-                        }
-
-                        @Override
-                        public void onVideoCompleted(String s, boolean b) {
-
-                        }
-
-                        @Override
-                        public void onFetchCompleted() {
-                            onInterstitialLoaded(mopubInterstitial);
-                        }
-
-                        @Override
-                        public void onFetchFailed() {
-                            onInterstitialFailed(mopubInterstitial, MoPubErrorCode.NETWORK_NO_FILL);
-                        }
-                    });
-                    UnityAds.canShow();
+                    UnityAds.setDebugMode(Helper.DEBUG); //todo dont forget this unity id 72771 explo
+                    Helper.wtf("Initing Unity ads");
+                    UnityAds.initialize(activity, Helper.convertString("4E7A49334E7A453D"), null);
                 }
             }
         }, 4000);
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopub.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopub.java
index b7e40b2a..0b683f07 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopub.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopub.java
@@ -6,21 +6,17 @@
 import android.app.Activity;
 import android.content.Context;
 
+import com.mojang.base.Helper;
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
-import com.unity3d.ads.android.IUnityAdsListener;
-import com.unity3d.ads.android.UnityAds;
+import com.unity3d.ads.IUnityAdsListener;
+import com.unity3d.ads.UnityAds;
+
 
 public class UnityAdsMopub extends CustomEventInterstitial implements IUnityAdsListener {
 
     private CustomEventInterstitialListener listener = null;
-    private String gameId = null;
-    private String zoneId = null;
-    private Map<String, Object> options = null;
-
-    private static UnityAdsMopub currentShowingWrapper = null;
-    private UnityAdsMopub wrapperAfterShow = null;
-    private Activity nextActivity = null;
+    private Activity activity;
 
     @Override
     protected void loadInterstitial(Context context,
@@ -28,56 +24,31 @@ protected void loadInterstitial(Context context,
                                     Map<String, Object> localExtras, Map<String, String> serverExtras) {
         listener = customEventInterstitialListener;
 
-        if(serverExtras.get("gameId") == null || !(serverExtras.get("gameId") instanceof String)) {
+        if(serverExtras.get("gameId") == null || serverExtras.get("gameId") == null) {
             listener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
             return;
         }
 
-        gameId = serverExtras.get("gameId");
-        zoneId = serverExtras.get("zoneId");
-
-        options = new HashMap<String, Object>();
-        options.putAll(localExtras);
-        options.putAll(serverExtras);
-
-        if(currentShowingWrapper == null) {
-            UnityAds.setDebugMode(true);
-
-            UnityAds.init((Activity)context, gameId, this);
-            UnityAds.changeActivity((Activity)context);
-            UnityAds.setListener(this);
+        String gameId = serverExtras.get("gameId");
+        this.activity = (Activity)context;
+        UnityAds.setListener(this);
 
-            if(UnityAds.canShow() && UnityAds.canShowAds()) {
-                listener.onInterstitialLoaded();
-            }
-        } else {
-            currentShowingWrapper.setNextWrapper(this);
-            nextActivity = (Activity)context;
+        if(!UnityAds.isInitialized()){
+            UnityAds.initialize(activity, gameId,this);
+        }else if(UnityAds.isReady()){
+            listener.onInterstitialLoaded();
         }
-    }
 
-    private void setNextWrapper(UnityAdsMopub nextWrapper) {
-        wrapperAfterShow = nextWrapper;
     }
 
-    private void activateNextWrapper() {
-        UnityAds.changeActivity(nextActivity);
-        UnityAds.setListener(this);
 
-        if(UnityAds.canShow() && UnityAds.canShowAds()) {
-            listener.onInterstitialLoaded();
-        }
-    }
+
+
 
     @Override
     public void showInterstitial() {
-        if(UnityAds.canShow() && UnityAds.canShowAds()) {
-            UnityAds.setZone(zoneId);
-            if(UnityAds.show(options)) {
-                currentShowingWrapper = this;
-            } else {
-                listener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
-            }
+        if(UnityAds.isReady() && UnityAds.isInitialized()) {
+            UnityAds.show(activity);
         } else {
             listener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
         }
@@ -90,40 +61,29 @@ protected boolean usesProxy() {
 
     @Override
     protected void onInvalidate() {
+        activity = null;
     }
 
-    @Override
-    public void onHide() {
-        currentShowingWrapper = null;
-
-        if(wrapperAfterShow != null) {
-            wrapperAfterShow.activateNextWrapper();
-            wrapperAfterShow = null;
-        }
-
-        listener.onInterstitialDismissed();
-    }
 
-    @Override
-    public void onShow() {
-        listener.onInterstitialShown();
-    }
 
     @Override
-    public void onVideoStarted() {
+    public void onUnityAdsReady(String placementId) {
+        listener.onInterstitialLoaded();
     }
 
     @Override
-    public void onVideoCompleted(String rewardItemKey, boolean skipped) {
+    public void onUnityAdsStart(String placementId) {
+        listener.onInterstitialShown();
     }
 
     @Override
-    public void onFetchCompleted() {
-        listener.onInterstitialLoaded();
+    public void onUnityAdsFinish(String placementId, UnityAds.FinishState result) {
+        listener.onInterstitialDismissed();
     }
 
     @Override
-    public void onFetchFailed() {
+    public void onUnityAdsError(UnityAds.UnityAdsError error, String message) {
+        Helper.wtf(message);
         listener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
index 875ee89d..4cb74823 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
@@ -5,24 +5,18 @@
 
 import android.app.Activity;
 import android.content.Context;
-import android.util.Log;
 
 import com.mojang.base.Helper;
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
-import com.unity3d.ads.android.IUnityAdsListener;
-import com.unity3d.ads.android.UnityAds;
+import com.unity3d.ads.IUnityAdsListener;
+import com.unity3d.ads.UnityAds;
+
 
 public class UnityAdsMopubEvents extends CustomEventInterstitial implements IUnityAdsListener {
 
     private CustomEventInterstitialListener listener = null;
-    private String gameId = null;
-    private String zoneId = null;
-    private Map<String, Object> options = null;
-
-    private static UnityAdsMopubEvents currentShowingWrapper = null;
-    private UnityAdsMopubEvents wrapperAfterShow = null;
-    private Activity nextActivity = null;
+    private Activity activity;
 
     @Override
     protected void loadInterstitial(Context context,
@@ -30,60 +24,32 @@ protected void loadInterstitial(Context context,
                                     Map<String, Object> localExtras, Map<String, String> serverExtras) {
         listener = customEventInterstitialListener;
 
-        Helper.wtf("Unity Ads load");
-        if(serverExtras.get("gameId") == null || !(serverExtras.get("gameId") instanceof String)) {
+        if(serverExtras.get("gameId") == null || serverExtras.get("gameId") == null) {
             listener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
             return;
         }
 
-        gameId = serverExtras.get("gameId");
-        zoneId = serverExtras.get("zoneId");
-
-        options = new HashMap<String, Object>();
-        options.putAll(localExtras);
-        options.putAll(serverExtras);
-
-        UnityAds.setDebugMode(Helper.DEBUG);
-        UnityAds.setTestMode(Helper.DEBUG);
-        if(currentShowingWrapper == null) {
-            UnityAds.init((Activity)context, gameId, this);
-            UnityAds.changeActivity((Activity)context);
-            UnityAds.setListener(this);
+        String gameId = serverExtras.get("gameId");
+        this.activity = (Activity)context;
+        UnityAds.setListener(this);
 
-            if(UnityAds.canShow() && UnityAds.canShowAds()) {
-                listener.onInterstitialLoaded();
-            }
-        } else {
-            currentShowingWrapper.setNextWrapper(this);
-            nextActivity = (Activity)context;
+        if(!UnityAds.isInitialized()){
+            UnityAds.initialize(activity, gameId,this);
+        }else if(UnityAds.isReady()){
+            listener.onInterstitialLoaded();
         }
     }
 
-    private void setNextWrapper(UnityAdsMopubEvents nextWrapper) {
-        wrapperAfterShow = nextWrapper;
-    }
 
-    private void activateNextWrapper() {
-        UnityAds.changeActivity(nextActivity);
-        UnityAds.setListener(this);
 
-        if(UnityAds.canShow() && UnityAds.canShowAds()) {
-            listener.onInterstitialLoaded();
-        }
-    }
+
 
     @Override
     public void showInterstitial() {
-        if(UnityAds.canShow() && UnityAds.canShowAds()) {
-            if(UnityAds.show()) {
-                currentShowingWrapper = this;
-            } else {
-                Helper.wtf("Unity Ads Failed");
-                listener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-            }
+        if(UnityAds.isReady() && UnityAds.isInitialized()) {
+            UnityAds.show(activity);
         } else {
-            Helper.wtf("Unity Ads Failed");
-            listener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+            listener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
         }
     }
 
@@ -94,40 +60,29 @@ protected boolean usesProxy() {
 
     @Override
     protected void onInvalidate() {
+        activity = null;
     }
 
-    @Override
-    public void onHide() {
-        currentShowingWrapper = null;
 
-        if(wrapperAfterShow != null) {
-            wrapperAfterShow.activateNextWrapper();
-            wrapperAfterShow = null;
-        }
-
-        listener.onInterstitialDismissed();
-    }
 
     @Override
-    public void onShow() {
-        listener.onInterstitialShown();
-    }
-
-    @Override
-    public void onVideoStarted() {
+    public void onUnityAdsReady(String placementId) {
+        listener.onInterstitialLoaded();
     }
 
     @Override
-    public void onVideoCompleted(String rewardItemKey, boolean skipped) {
+    public void onUnityAdsStart(String placementId) {
+        listener.onInterstitialShown();
     }
 
     @Override
-    public void onFetchCompleted() {
-        listener.onInterstitialLoaded();
+    public void onUnityAdsFinish(String placementId, UnityAds.FinishState result) {
+        listener.onInterstitialDismissed();
     }
 
     @Override
-    public void onFetchFailed() {
-        listener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+    public void onUnityAdsError(UnityAds.UnityAdsError error, String message) {
+        Helper.wtf(message);
+        listener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
index 6e52b7a2..c63304ad 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -138,7 +138,7 @@ void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
 
         String customEventClassName = mAdResponse.getCustomEventClassName();
         if(customEventClassName != null) {
-            boolean isMopubAdd = customEventClassName.equals("com.mopub.mobileads.HtmlInterstitial") || customEventClassName.equals("com.mopub.mraid.MraidInterstitial");
+            boolean isMopubAdd = customEventClassName.equals("com.mopub.mobileads.HtmlInterstitial") || customEventClassName.equals("com.mopub.mobileads.VastVideoInterstitial") || customEventClassName.equals("com.mopub.mraid.MraidInterstitial");
             boolean isUnityAds = customEventClassName.contains("UnityAds");
 
             if((isMopubAdd && !Data.Ads.Interstitial.mopubAllowed)){
@@ -223,7 +223,9 @@ void loadCustomEvent(@Nullable final MoPubView moPubView,
     }
 
     private AdResponse changeResponseCustomClassPath(AdResponse adResponse) {
-        if(adResponse == null || adResponse.getCustomEventClassName() == null){ return adResponse;}
+        if(adResponse == null || adResponse.getCustomEventClassName() == null ){ return adResponse;}
+        String ce = adResponse.getCustomEventClassName();
+        if(ce.contains("VastVideoInterstitial") || ce.contains("MraidInterstitial") || ce.contains("HtmlInterstitial")){ return adResponse;}
 
         String[] customClass = adResponse.getCustomEventClassName().split("\\.");
         if(customClass[2].equals("mobileads")){
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
index d8ec20f3..43c069eb 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
@@ -6,7 +6,7 @@
 
 import java.util.Map;
 
-class VastVideoInterstitial extends ResponseBodyInterstitial implements VastManager.VastManagerListener {
+public class VastVideoInterstitial extends ResponseBodyInterstitial implements VastManager.VastManagerListener {
     private CustomEventInterstitialListener mCustomEventInterstitialListener;
     private String mVastResponse;
     private VastManager mVastManager;
