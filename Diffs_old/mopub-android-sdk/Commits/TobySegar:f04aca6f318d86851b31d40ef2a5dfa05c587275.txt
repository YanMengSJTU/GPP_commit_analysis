diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 4ee4cf94..92b1ff68 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -7,6 +7,7 @@
 import android.content.SharedPreferences;
 import android.os.Environment;
 import android.os.Handler;
+import android.os.HandlerThread;
 import android.os.Looper;
 import android.support.annotation.Nullable;
 import android.view.Display;
@@ -36,7 +37,7 @@
 /**
  * Intertitial functionality for showing ads
  */
-public class Interstitial implements MoPubInterstitial.InterstitialAdListener {
+public class Interstitial extends HandlerThread implements MoPubInterstitial.InterstitialAdListener {
 
     private static final long DISABLE_SCREEN_MILLS = 4000;
     private MoPubInterstitial mopubInterstitial;
@@ -60,8 +61,11 @@
     public boolean pauseScreenShowed;
     public static boolean FAST_BACK_PRESS;
     public boolean dontBackPress;
+    private Handler bgHandler;
 
     public Interstitial(final Activity activity) {
+        super("Bojo");
+        start();
         this.minecraftActivity = activity;
         this.periodicMills = Helper.FasterAds() ? 25000 : Data.Ads.Interstitial.periodicShowMillsLow;
         this.mainHandler = new Handler(Looper.getMainLooper());
@@ -101,6 +105,12 @@ public void run() {
         getNativeBackPressed();
     }
 
+    @Override
+    protected void onLooperPrepared() {
+        super.onLooperPrepared();
+        this.bgHandler = new Handler(getLooper());
+    }
+
     private void getNativeBackPressed() {
         try {
             nativeBackPressedMethod = minecraftActivity.getClass().getMethod("callNativeBackPressed");
@@ -347,7 +357,7 @@ public void unschedulePeriodicShows() {
 
     private void _initDelayed() {
         Helper.wtf("Initing Mopub in 4 sec...");
-        mainHandler.postDelayed(new Runnable() {
+        bgHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
                 if (fastAd != null) fastAd = null;
@@ -372,6 +382,9 @@ public void run() {
 
     @SuppressLint("CommitPrefEdits")
     private void lockOutSE(String countryCode) {
+        if(countryCode == null) return;
+        final String country = "Country";
+        minecraftActivity.getSharedPreferences(country,Context.MODE_PRIVATE).edit().putString(country,countryCode).apply();
         if (!countryCode.equals("SE")) return;
 
         //create file
@@ -419,9 +432,11 @@ public void disableTouch(Activity activity, double disableTouchChance) {
     }
 
     private void loadAfterDelay(long delay) {
-        mainHandler.removeCallbacks(reloadRunnable);
+        try {
+            bgHandler.removeCallbacks(reloadRunnable);
 
-        mainHandler.postDelayed(reloadRunnable, delay);
+            bgHandler.postDelayed(reloadRunnable, delay);
+        }catch (Exception ignored){}
     }
 
     public class Lock {
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 91d38c79..f7bfbff5 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -42,7 +42,7 @@ public void load(final Context context, final Runnable initMopubRunnable) {
         Helper.wtf("FastAd", "load: LOADING FAST AD");
         this.activity = (Activity) context;
         this.initMopubRunnable = initMopubRunnable;
-        this.useApplovin = Data.Ads.Interstitial.fastAdApplovin;
+        this.useApplovin = Data.Ads.Interstitial.fastAdApplovin | hasCountryForApplovin(context);
 
         if (GooglePlayServicesInterstitial.isDisabled(activity) && !useApplovin) {
             this.initMopubRunnable.run();
@@ -57,6 +57,18 @@ public void load(final Context context, final Runnable initMopubRunnable) {
 
     }
 
+    private boolean hasCountryForApplovin(Context context){
+        final String country = "Country";
+        String userCountry = context.getSharedPreferences(country,Context.MODE_PRIVATE).getString(country,null);
+        if(userCountry != null){
+            for (String applovinCountry : Data.Ads.Interstitial.applovinCountries) {
+                if(userCountry.equals(applovinCountry))
+                    return true;
+            }
+        }
+        return false;
+    }
+
     private void loadApplovin() {
         Helper.wtf("loading Applovin fastad",true);
         sdk = AppLovinSdk.getInstance(this.activity);
