diff --git a/extras/src/com/mopub/mobileads/HTML5AdView.java b/extras/src/com/mopub/mobileads/HTML5AdView.java
deleted file mode 100644
index a564b8fe..00000000
--- a/extras/src/com/mopub/mobileads/HTML5AdView.java
+++ /dev/null
@@ -1,149 +0,0 @@
-package com.mopub.mobileads;
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.media.MediaPlayer;
-import android.media.MediaPlayer.OnCompletionListener;
-import android.media.MediaPlayer.OnErrorListener;
-import android.os.Build;
-import android.util.Log;
-import android.view.Gravity;
-import android.view.View;
-import android.webkit.WebChromeClient;
-import android.webkit.WebChromeClient.CustomViewCallback;
-import android.widget.*;
-import com.mopub.mobileads.util.Dips;
-
-import static android.util.TypedValue.COMPLEX_UNIT_SP;
-import static android.view.View.GONE;
-import static android.view.View.VISIBLE;
-import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
-import static com.mopub.mobileads.resource.Drawables.DEFAULT_VIDEO_POSTER;
-
-@Deprecated
-public class HTML5AdView extends AdViewController {
-
-    private FrameLayout mCustomViewContainer;
-    private View mCustomView;
-    private CustomViewCallback mCustomViewCallback;
-    private View mVideoProgressView;
-
-    static final FrameLayout.LayoutParams COVER_SCREEN_GRAVITY_CENTER =
-            new FrameLayout.LayoutParams(
-                    FrameLayout.LayoutParams.FILL_PARENT,
-                    FrameLayout.LayoutParams.FILL_PARENT,
-                    Gravity.CENTER);
-
-    public HTML5AdView(Context context, MoPubView view) {
-        super(context, view);
-
-        int sdkVersion = (new Integer(Build.VERSION.SDK)).intValue();
-        if (sdkVersion > 7) {
-            getAdWebView().setWebChromeClient(new HTML5WebChromeClient());
-        }
-
-        mCustomViewContainer = new FrameLayout(context);
-        mCustomViewContainer.setVisibility(GONE);
-        mCustomViewContainer.setLayoutParams(COVER_SCREEN_GRAVITY_CENTER);
-    }
-
-    private class HTML5WebChromeClient extends WebChromeClient implements OnCompletionListener,
-            OnErrorListener {
-
-        @TargetApi(7) // equivalent to Build.VERSION_CODES.ECLAIR_MR1
-        @Override
-        public void onShowCustomView(View view, CustomViewCallback callback) {
-            super.onShowCustomView(view, callback);
-
-            getAdWebView().setVisibility(GONE);
-
-            // If a custom view already exists, don't show another one.
-            if (mCustomView != null) {
-                callback.onCustomViewHidden();
-                return;
-            }
-
-            mCustomViewContainer.addView(view, COVER_SCREEN_GRAVITY_CENTER);
-            mCustomView = view;
-            mCustomViewCallback = callback;
-
-            // Display the custom view in the MoPubView's hierarchy.
-            getMoPubView().addView(mCustomViewContainer);
-            mCustomViewContainer.setVisibility(VISIBLE);
-            mCustomViewContainer.bringToFront();
-        }
-
-        @Override
-        public void onHideCustomView() {
-            if (mCustomView == null) return;
-
-            // Hide the custom view.
-            mCustomView.setVisibility(GONE);
-
-            // Remove the custom view from its container.
-            mCustomViewContainer.removeView(mCustomView);
-            mCustomView = null;
-            mCustomViewContainer.setVisibility(GONE);
-            mCustomViewCallback.onCustomViewHidden();
-
-            // Stop displaying the custom view container and unhide the ad view.
-            getMoPubView().removeView(mCustomViewContainer);
-            getAdWebView().setVisibility(VISIBLE);
-        }
-
-        @Override
-        public Bitmap getDefaultVideoPoster() {
-            return DEFAULT_VIDEO_POSTER.decodeImage(getContext()).getBitmap();
-        }
-
-        @Override
-        public View getVideoLoadingProgressView() {
-            if (mVideoProgressView == null) {
-                mVideoProgressView = createVideoProgressView();
-            }
-            return mVideoProgressView;
-        }
-
-        @Override
-        public boolean onError(MediaPlayer arg0, int arg1, int arg2) {
-            Log.d("MoPub", "Video errored!");
-            return false;
-        }
-
-        @Override
-        public void onCompletion(MediaPlayer mp) {
-            mp.stop();
-            mCustomViewCallback.onCustomViewHidden();
-            Log.d("MoPub", "Video completed!");
-        }
-
-        private View createVideoProgressView() {
-            LinearLayout mVideoProgressView = new LinearLayout(getContext());
-            mVideoProgressView.setOrientation(LinearLayout.VERTICAL);
-
-            RelativeLayout.LayoutParams videoLayoutParams = new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
-            videoLayoutParams.addRule(RelativeLayout.CENTER_IN_PARENT);
-            mVideoProgressView.setLayoutParams(videoLayoutParams);
-
-            ProgressBar progressBar = new ProgressBar(getContext(), null, android.R.attr.progressBarStyleLarge);
-            LinearLayout.LayoutParams progressBarLayoutParams = new LinearLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
-            progressBarLayoutParams.gravity = Gravity.CENTER;
-            progressBar.setLayoutParams(progressBarLayoutParams);
-            mVideoProgressView.addView(progressBar);
-
-            TextView textView = new TextView(getContext());
-            LinearLayout.LayoutParams textViewLayoutParams = new LinearLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
-            textViewLayoutParams.gravity = Gravity.CENTER;
-
-            textView.setText("Loading...");
-            textView.setTextSize(COMPLEX_UNIT_SP, 14f);
-            textView.setTextColor(getContext().getResources().getColor(android.R.color.white));
-            textView.setPadding(0, Dips.asIntPixels(5f, getContext()), 0, 0);
-
-            textView.setLayoutParams(textViewLayoutParams);
-            mVideoProgressView.addView(textView);
-            return mVideoProgressView;
-        }
-    }
-}
diff --git a/extras/src/com/mopub/mobileads/customeventclasses/AmazonBanner.java b/extras/src/com/mopub/mobileads/customeventclasses/AmazonBanner.java
new file mode 100644
index 00000000..3fc1446e
--- /dev/null
+++ b/extras/src/com/mopub/mobileads/customeventclasses/AmazonBanner.java
@@ -0,0 +1,119 @@
+package com.mopub.mobileads.customeventclasses;
+
+import java.util.Map;
+
+import android.app.Activity;
+import android.content.Context;
+import android.util.Log;
+import com.amazon.device.ads.AdLayout;
+import com.amazon.device.ads.*;
+
+import android.widget.RelativeLayout;
+import android.widget.FrameLayout;
+import android.view.Gravity;
+import com.mopub.mobileads.CustomEventBanner;
+import com.mopub.mobileads.MoPubErrorCode;
+import com.mopub.mobileads.MoPubView;
+import com.mopub.mobileads.AdViewController;
+
+public class AmazonBanner extends CustomEventBanner implements AdListener {
+    private CustomEventBannerListener mBannerListener;
+    private AdLayout adView;
+    private RelativeLayout adLayoutView;
+    private static final String LOG_TAG = "AmazonAds"; // Tag used to prefix all log messages
+    /*
+     * Abstract methods from CustomEventBanner
+     */
+    @Override
+    public void loadBanner(Context context, CustomEventBannerListener bannerListener,
+            Map<String, Object> localExtras, Map<String, String> serverExtras) {
+        mBannerListener = bannerListener;
+        
+        Activity activity = null;
+        if (context instanceof Activity) {
+            activity = (Activity) context;
+        } else {
+            // You may also pass in an Activity Context in the localExtras map and retrieve it here.
+        }
+        
+        if (activity == null) {
+            mBannerListener.onBannerFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
+            return;
+        }
+        // For debugging purposes enable logging, but disable for production builds
+        AdRegistration.enableLogging( true);
+        // For debugging purposes flag all ad requests as tests, but set to false for production builds
+        AdRegistration.enableTesting( MoPubView.TEST_MODE);
+
+        /*
+         * You may also pass this String down in the serverExtras Map by specifying Custom Event Data
+         * in MoPub's web interface.
+         */
+        String amazonAppId = serverExtras.get("AMAZON_AD_ID");
+        
+        Log.i(LOG_TAG, "Loading Amazon Ad: " +amazonAppId);
+        
+         try {
+            AdRegistration.setAppKey( amazonAppId);
+        } catch (Exception e) {
+            Log.e(LOG_TAG, "Exception thrown: " + e.toString());
+            return;
+        }
+        
+		adView = new AdLayout(activity, AdSize.SIZE_320x50);
+	  
+	    float scale = activity.getApplicationContext().getResources().getDisplayMetrics().density;
+	    adView.setLayoutParams(new FrameLayout.LayoutParams((int) (320 * scale),(int) (50 * scale),Gravity.CENTER));
+   
+		adView.setListener(this);
+		//AdViewController.setShouldHonorServerDimensions(adView);
+		adView.loadAd(new AdTargetingOptions());
+    }
+
+    @Override
+    public void onInvalidate() {
+       adView.setListener(null);
+    }
+
+    
+    /**
+     * This event is called after a rich media ads has collapsed from an expanded state.
+     */
+    @Override
+    public void onAdCollapsed(AdLayout view) {
+        Log.d(LOG_TAG, "Ad collapsed.");
+    }
+
+    /**
+     * This event is called if an ad fails to load.
+     */
+    @Override
+    public void onAdFailedToLoad(AdLayout view, AdError error) {
+        Log.w(LOG_TAG, "Ad failed to load. Code: " + error.getCode() + ", Message: " + error.getMessage());
+          mBannerListener.onBannerFailed(MoPubErrorCode.NETWORK_NO_FILL);
+    }
+
+    /**
+     * This event is called once an ad loads successfully.
+     */
+    @Override
+    public void onAdLoaded(AdLayout view, AdProperties adProperties) {
+        Log.d(LOG_TAG, adProperties.getAdType().toString() + " Ad loaded successfully.");
+         if (adView != null) {
+            Log.d("MoPub", "Amazon banner ad loaded successfully. Showing ad...");
+            mBannerListener.onBannerLoaded(adView);
+          //  mBannerListener.setAdContentView(adView);
+        } else {
+            mBannerListener.onBannerFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
+        }
+    }
+
+    /**
+     * This event is called after a rich media ad expands.
+     */
+    @Override
+    public void onAdExpanded(AdLayout view) {
+        Log.d(LOG_TAG, "Ad expanded.");
+          mBannerListener.onBannerClicked();
+    }
+}
diff --git a/mopub-sdk/libs/GoogleAdMobAdsSdk-6.4.1.jar b/mopub-sdk/libs/GoogleAdMobAdsSdk-6.4.1.jar
new file mode 100755
index 00000000..de667541
Binary files /dev/null and b/mopub-sdk/libs/GoogleAdMobAdsSdk-6.4.1.jar differ
diff --git a/mopub-sdk/libs/InMobiAdNetwork-3.7.1.jar b/mopub-sdk/libs/InMobiAdNetwork-3.7.1.jar
new file mode 100644
index 00000000..935ad59d
Binary files /dev/null and b/mopub-sdk/libs/InMobiAdNetwork-3.7.1.jar differ
diff --git a/mopub-sdk/libs/InMobiCommons-3.7.1.jar b/mopub-sdk/libs/InMobiCommons-3.7.1.jar
new file mode 100644
index 00000000..beace017
Binary files /dev/null and b/mopub-sdk/libs/InMobiCommons-3.7.1.jar differ
diff --git a/mopub-sdk/libs/MMSDK.jar b/mopub-sdk/libs/MMSDK.jar
new file mode 100644
index 00000000..e9c6a79f
Binary files /dev/null and b/mopub-sdk/libs/MMSDK.jar differ
diff --git a/mopub-sdk/libs/amazon-ads-5.1.40.jar b/mopub-sdk/libs/amazon-ads-5.1.40.jar
new file mode 100644
index 00000000..7de90b57
Binary files /dev/null and b/mopub-sdk/libs/amazon-ads-5.1.40.jar differ
diff --git a/mopub-sdk/libs/chartboost.jar b/mopub-sdk/libs/chartboost.jar
new file mode 100644
index 00000000..9e92805f
Binary files /dev/null and b/mopub-sdk/libs/chartboost.jar differ
diff --git a/mopub-sdk/libs/greystripe-android-sdk-2.3.0.jar b/mopub-sdk/libs/greystripe-android-sdk-2.3.0.jar
new file mode 100644
index 00000000..7bb5a12f
Binary files /dev/null and b/mopub-sdk/libs/greystripe-android-sdk-2.3.0.jar differ
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
index dfea5af0..3bae72b7 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -69,6 +69,7 @@
     public static final String HOST = "ads.mopub.com";
     public static final String HOST_FOR_TESTING = "testing.ads.mopub.com";
     public static final String AD_HANDLER = "/m/ad";
+    public static boolean TEST_MODE = false;
     public static final int DEFAULT_LOCATION_PRECISION = 6;
 
     protected AdViewController mAdViewController;
@@ -403,6 +404,7 @@ public void setAdContentView(View view) {
     }
 
     public void setTesting(boolean testing) {
+        TEST_MODE = testing;
         if (mAdViewController != null) mAdViewController.setTesting(testing);
     }
 
