diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/BaseForwardingNativeAd.java b/mopub-sdk/src/main/java/com/mopub/nativeads/BaseForwardingNativeAd.java
index 4f463ba5..2e36cf35 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/BaseForwardingNativeAd.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/BaseForwardingNativeAd.java
@@ -1,6 +1,7 @@
 package com.mopub.nativeads;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
@@ -44,6 +45,8 @@
     @Nullable private String mText;
     @Nullable private Double mStarRating;
 
+    @Nullable private Drawable mDefaultIcon;
+
     // Impression logistics
     @NonNull private final Set<String> mImpressionTrackers;
     private int mImpressionMinTimeViewed;
@@ -141,6 +144,12 @@ final public Double getStarRating() {
         return mStarRating;
     }
 
+    @Nullable
+    @Override
+    public Drawable getDefaultIcon() {
+        return mDefaultIcon;
+    }
+
     /**
      * Returns the minimum viewable percentage of the ad that must be onscreen for it to be
      * considered visible. See {@link BaseForwardingNativeAd#getImpressionMinTimeViewed()} for
@@ -240,6 +249,10 @@ final void setText(@Nullable final String text) {
         mText = text;
     }
 
+    final void setDefaultIcon(@Nullable Drawable defaultIcon) {
+        mDefaultIcon = defaultIcon;
+    }
+
     final void setStarRating(@Nullable final Double starRating) {
         if (starRating == null) {
             mStarRating = null;
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdInterface.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdInterface.java
index 2b52e576..555d52cc 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdInterface.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdInterface.java
@@ -1,5 +1,6 @@
 package com.mopub.nativeads;
 
+import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
@@ -32,6 +33,9 @@
     @Nullable
     Double getStarRating();
 
+    @Nullable
+    Drawable getDefaultIcon();
+
     @NonNull
     Set<String> getImpressionTrackers();
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
index e332c6cf..c9f17706 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeResponse.java
@@ -1,6 +1,7 @@
 package com.mopub.nativeads;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
@@ -160,6 +161,11 @@ public String getIconImageUrl() {
         return mNativeAd.getIconImageUrl();
     }
 
+    @Nullable
+    public Drawable getDefaultIcon() {
+        return mNativeAd.getDefaultIcon();
+    }
+
     @Nullable
     public String getClickDestinationUrl() {
         return mNativeAd.getClickDestinationUrl();
@@ -290,17 +296,17 @@ public void destroy() {
 
     // Non Interface Public Methods
     public void loadMainImage(@Nullable final ImageView imageView) {
-        loadImageView(getMainImageUrl(), imageView);
+        loadImageView(getMainImageUrl(), imageView, null);
     }
 
     public void loadIconImage(@Nullable final ImageView imageView) {
-        loadImageView(getIconImageUrl(), imageView);
+        loadImageView(getIconImageUrl(), imageView, getDefaultIcon());
     }
 
     public void loadExtrasImage(final String key, final ImageView imageView) {
         final Object object = getExtra(key);
         if (object != null && object instanceof String) {
-            loadImageView((String) object, imageView);
+            loadImageView((String) object, imageView, null);
         }
     }
 
@@ -317,13 +323,13 @@ public boolean isDestroyed() {
     }
 
     // Helpers
-    private void loadImageView(@Nullable final String url, @Nullable final ImageView imageView) {
+    private void loadImageView(@Nullable final String url, @Nullable final ImageView imageView, @Nullable final Drawable defaultImage) {
         if (imageView == null) {
             return;
         }
 
         if (url == null) {
-            imageView.setImageDrawable(null);
+            imageView.setImageDrawable(defaultImage);
         } else {
             mImageLoader.get(url, new ImageLoader.ImageListener() {
                 @Override
@@ -338,7 +344,7 @@ public void onResponse(final ImageLoader.ImageContainer imageContainer,
                 @Override
                 public void onErrorResponse(final VolleyError volleyError) {
                     MoPubLog.d("Failed to load image.", volleyError);
-                    imageView.setImageDrawable(null);
+                    imageView.setImageDrawable(defaultImage);
                 }
             });
         }
