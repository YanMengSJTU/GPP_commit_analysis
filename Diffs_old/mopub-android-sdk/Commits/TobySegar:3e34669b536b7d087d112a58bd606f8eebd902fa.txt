diff --git a/mopub-sdk/libs/applovin-sdk-6.2.4.jar b/mopub-sdk/libs/applovin-sdk-6.2.4.jar
new file mode 100644
index 00000000..579e2117
Binary files /dev/null and b/mopub-sdk/libs/applovin-sdk-6.2.4.jar differ
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
new file mode 100644
index 00000000..510ba7f0
--- /dev/null
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -0,0 +1,131 @@
+/**
+ * AppLovin Interstitial SDK Mediation for MoPub
+ *
+ * @author Matt Szaro
+ * @version 1.2
+ **/
+
+package com.mopub.ads.adapters;
+
+import android.app.Activity;
+import android.content.Context;
+import android.util.Log;
+import com.applovin.adview.AppLovinInterstitialAd;
+import com.applovin.adview.AppLovinInterstitialAdDialog;
+import com.applovin.sdk.*;
+import com.mopub.mobileads.CustomEventInterstitial;
+import com.mopub.mobileads.MoPubErrorCode;
+
+import java.util.Map;
+
+public class ApplovinInterstitial extends CustomEventInterstitial implements AppLovinAdLoadListener
+{
+    private CustomEventInterstitial.CustomEventInterstitialListener mInterstitialListener;
+    private Activity                                                parentActivity;
+    private AppLovinSdk                                             sdk;
+    private AppLovinAd                                              lastReceived;
+
+    private static final String TAG = "AppLovinAdapter";
+
+    /*
+     * Abstract methods from CustomEventInterstitial
+     */
+    @Override
+    public void loadInterstitial(Context context, CustomEventInterstitial.CustomEventInterstitialListener interstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras)
+    {
+        mInterstitialListener = interstitialListener;
+
+        if ( context instanceof Activity )
+        {
+            parentActivity = (Activity) context;
+        }
+        else
+        {
+            mInterstitialListener.onInterstitialFailed( MoPubErrorCode.INTERNAL_ERROR );
+            return;
+        }
+
+        Log.d( TAG, "Request received for new interstitial." );
+
+        sdk = AppLovinSdk.getInstance( context );
+        sdk.getAdService().loadNextAd( AppLovinAdSize.INTERSTITIAL, this );
+
+    }
+
+    @Override
+    public void showInterstitial()
+    {
+        final AppLovinAd adToRender = lastReceived;
+
+        if ( adToRender != null )
+        {
+            Log.d( TAG, "Showing AppLovin interstitial ad..." );
+
+            parentActivity.runOnUiThread( new Runnable() {
+                public void run()
+                {
+                    AppLovinInterstitialAdDialog inter = AppLovinInterstitialAd.create(sdk, parentActivity);
+
+                    inter.setAdClickListener( new AppLovinAdClickListener() {
+                        @Override
+                        public void adClicked(AppLovinAd appLovinAd)
+                        {
+                            mInterstitialListener.onLeaveApplication();
+                        }
+                    } );
+
+                    inter.setAdDisplayListener( new AppLovinAdDisplayListener() {
+                        @Override
+                        public void adDisplayed(AppLovinAd appLovinAd)
+                        {
+                            mInterstitialListener.onInterstitialShown();
+                        }
+
+                        @Override
+                        public void adHidden(AppLovinAd appLovinAd)
+                        {
+                            mInterstitialListener.onInterstitialDismissed();
+                        }
+                    } );
+                    inter.showAndRender( adToRender );
+                }
+            } );
+        }
+    }
+
+    @Override
+    protected boolean usesProxy() {
+        return false;
+    }
+
+    @Override
+    public void onInvalidate()
+    {
+
+    }
+
+    @Override
+    public void adReceived(AppLovinAd ad)
+    {
+        Log.d( TAG, "AppLovin interstitial loaded successfully." );
+
+        lastReceived = ad;
+
+        parentActivity.runOnUiThread( new Runnable() {
+            public void run()
+            {
+                mInterstitialListener.onInterstitialLoaded();
+            }
+        } );
+    }
+
+    @Override
+    public void failedToReceiveAd(final int errorCode)
+    {
+        parentActivity.runOnUiThread( new Runnable() {
+            public void run() {
+                    mInterstitialListener.onInterstitialFailed( MoPubErrorCode.NO_FILL );
+            }
+        });
+    }
+}
\ No newline at end of file
