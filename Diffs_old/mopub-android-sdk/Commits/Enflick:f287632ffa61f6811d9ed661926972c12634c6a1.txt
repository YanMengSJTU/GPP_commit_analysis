diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 00000000..5dfd1054
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule "mopub-sdk-common"]
+	path = mopub-sdk-common
+	url = git@github.com:mopub/mopub-sdk-common.git
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8362ab40..30157714 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,37 @@
+## Version 5.8.0 (July 22, 2019)
+- **Features**
+  - Height-based constants have been added to banners and medium rectangles. Call `MoPubView#setAdSize(MoPubAdSize)` before loading an ad or pass in the ad size to `MoPubView#loadAd(MoPubAdSize)` to request an ad of a particular height. See [https://developers.mopub.com/publishers/android/banner/] for more information.
+  - Deprecated skyscraper and leaderboard ad formats. Leaderboards can now be made by setting the `MoPubView` ad size to `MoPubAdSize.HEIGHT_90`.
+  - Renamed the MRect ad format as Medium Rectangle.
+  - Upgraded Robolectric dependency to 4.3.
+  - Updated the icon for the sample app.
+  - Sample app now has visible callbacks.
+  - VAST Videos now play with `device` orientation by default.
+  - The background for interstitials is now black. The background for banners and medium rectangles remain transparent.
+
+- **Bug Fixes**
+  - Improved the look and feel of the sample app on tablets.
+  - Fixed warnings in the `build.gradle` file.
+  - Improved test run speed.
+  - Improved the VAST video selection logic.
+
+## Version 5.7.1 (June 3, 2019)
+- **Bug Fixes**
+  - Handle `WebViewClient#onRenderProcessGone` for API 26+ devices so WebView crashes do not take the entire process with it. This only affects MoPub WebViews, and all WebViews in the application must handle this call in order for the process to not be killed.
+
+## Version 5.7.0 (May 20, 2019)
+- **Features**
+  - Impression Level Revenue Data - a data object that includes revenue information associated with each impression.
+  - Verizon Ads SDK now supported as a mediated network.
+  - Upgraded Gradle dependency to 5.4.1
+  - Upgraded Robolectric dependency to 4.2.1.
+  - Upgraded com.android.tools.build:gradle to 3.4.0.
+  - Sample app improvements.
+
+- **Bug Fixes**
+  - Handle empty impression trackers in VAST.
+  - Improved impression handling when MoPubView is reattached to the screen.
+
 ## Version 5.6.0 (March 18, 2019)
 - **Features**
   - Enabled debug logging when using a debug Google Advertising ID (one that ends with "10ca1ad1abe1").
diff --git a/README.md b/README.md
index bb26a9c4..c739df8f 100644
--- a/README.md
+++ b/README.md
@@ -37,7 +37,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk:5.8.0@aar') {
             transitive = true
         }
     }
@@ -59,27 +59,27 @@ The MoPub SDK is available via:
         // ... other project dependencies
 
         // For banners
-        implementation('com.mopub:mopub-sdk-banner:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-banner:5.8.0@aar') {
             transitive = true
         }
         
         // For interstitials
-        implementation('com.mopub:mopub-sdk-interstitial:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-interstitial:5.8.0@aar') {
             transitive = true
         }
 
         // For rewarded videos. This will automatically also include interstitials
-        implementation('com.mopub:mopub-sdk-rewardedvideo:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-rewardedvideo:5.8.0@aar') {
             transitive = true
         }
 
         // For native static (images).
-        implementation('com.mopub:mopub-sdk-native-static:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-static:5.8.0@aar') {
             transitive = true
         }
 
         // For native video. This will automatically also include native static
-        implementation('com.mopub:mopub-sdk-native-video:5.6.0@aar') {
+        implementation('com.mopub:mopub-sdk-native-video:5.8.0@aar') {
             transitive = true
         }
     }
@@ -108,16 +108,20 @@ The MoPub SDK is available via:
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
 - **Features**
-  - Enabled debug logging when using a debug Google Advertising ID (one that ends with "10ca1ad1abe1").
-  - Upgraded ExoPlayer dependency to 2.9.5.
-  - Upgraded MoPub-Volley dependency to 2.1.0.
+  - Height-based constants have been added to banners and medium rectangles. Call `MoPubView#setAdSize(MoPubAdSize)` before loading an ad or pass in the ad size to `MoPubView#loadAd(MoPubAdSize)` to request an ad of a particular height. See [https://developers.mopub.com/publishers/android/banner/] for more information.
+  - Deprecated skyscraper and leaderboard ad formats. Leaderboards can now be made by setting the `MoPubView` ad size to `MoPubAdSize.HEIGHT_90`.
+  - Renamed the MRect ad format as Medium Rectangle.
+  - Upgraded Robolectric dependency to 4.3.
+  - Updated the icon for the sample app.
+  - Sample app now has visible callbacks.
+  - VAST Videos now play with `device` orientation by default.
+  - The background for interstitials is now black. The background for banners and medium rectangles remain transparent.
 
 - **Bug Fixes**
-  - Banners no longer refresh when they are expanded. They will resume refreshing when the expanded view is closed.
-  - Setting orientation on an expanded banner no longer locks the orientation after the expanded view is closed.
-  - Improved click detection.           
-  - Catch `MissingWebViewPackageException` in `ConsentDialogLayoutWebView`.
-  - Reduce ANRs by removing synchronization from `Networking#getUserAgent(Context)`.
+  - Improved the look and feel of the sample app on tablets.
+  - Fixed warnings in the `build.gradle` file.
+  - Improved test run speed.
+  - Improved the VAST video selection logic.
 
 ## Requirements
 
@@ -146,7 +150,7 @@ Normally, to add the MoPub SDK to your app via JCenter, your `build.gradle` woul
 
 ```	
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.8.0@aar') {
         transitive = true
     }
 }
@@ -155,7 +159,7 @@ Update to the following to exclude one or both viewability vendors:
 
 ```
 dependencies {
-    implementation('com.mopub:mopub-sdk:5.6.0@aar') {
+    implementation('com.mopub:mopub-sdk:5.8.0@aar') {
         transitive = true
         exclude module: 'libAvid-mopub' // To exclude AVID
         exclude module: 'moat-mobile-app-kit' // To exclude Moat
@@ -170,7 +174,7 @@ mopub.avidEnabled=false
 mopub.moatEnabled=false
 ```
 ##### Disable via API
-If you would like to opt out of viewability measurement but do not want to modify the MoPub SDK, a function is provided for your convenience. At any point, call `MoPub.disableViewability(vendor);`. This method can can be called with any of the enum values available in `ExternalViewabilitySessionManager.ViewabilityVendor`: `AVID` will disable AVID but leave Moat enabled, `MOAT` will disable Moat but leave AVID enabled, and `ALL` will disable all viewability measurement.
+If you would like to opt out of viewability measurement but do not want to modify the MoPub SDK, a function is provided for your convenience. At any point, call `MoPub.disableViewability(vendor);`. This method can be called with any of the enum values available in `ExternalViewabilitySessionManager.ViewabilityVendor`: `AVID` will disable AVID but leave Moat enabled, `MOAT` will disable Moat but leave AVID enabled, and `ALL` will disable all viewability measurement.
 
 ## Working with Android 6.0 Runtime Permissions
 If your app's target SDK is 23 or higher _**and**_ the user's device is running Android 6.0 or higher, you are responsible for supporting [runtime permissions](http://developer.android.com/training/permissions/requesting.html), one of the [changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html) introduced in Android 6.0 (API level 23). In addition to listing any dangerous permissions your app needs in the manifest, your app also has to explicitly request the dangerous permission(s) during runtime by calling method `requestPermissions()` in the [`ActivityCompat`](http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html) class.
diff --git a/build.gradle b/build.gradle
index 9e7f4426..48829eb5 100644
--- a/build.gradle
+++ b/build.gradle
@@ -9,11 +9,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.0'
-        classpath 'com.novoda:bintray-release:0.9'
+        classpath 'com.android.tools.build:gradle:3.4.1'
+        classpath 'com.novoda:bintray-release:0.9.1'
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '4.10.1'
-}
diff --git a/extras/README.md b/extras/README.md
deleted file mode 100644
index dae4df22..00000000
--- a/extras/README.md
+++ /dev/null
@@ -1,5 +0,0 @@
-# MoPub Android SDK
-
-We are formally separating network adapters from our MoPub SDK. This is to enable an independent release cadence resulting in faster updates and certification cycles. New mediation location is accessible [here](https://github.com/mopub/mopub-android-mediation).  
-
-We have also added an additional tool, making it easy for publishers to get up and running with the mediation integration. Check out https://developers.mopub.com/docs/mediation/integrate/ and integration instructions at https://developers.mopub.com/docs/android/integrating-networks/.
diff --git a/gradle.properties b/gradle.properties
index 4cc95e10..292f1421 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -3,4 +3,5 @@
 # http://www.mopub.com/legal/sdk-license-agreement/
 
 org.gradle.jvmargs=-Xmx8192m -XX:MaxPermSize=2048m
-org.gradle.daemon=false
+org.gradle.daemon=true
+org.gradle.parallel=true
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 13372aef..5c2d1cf0 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 0b6a1e6b..f4d7b2bf 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,5 @@
-#Mon Jan 28 14:39:41 PST 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-bin.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
diff --git a/gradlew b/gradlew
index 9d82f789..b0d6d0ab 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,20 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
+
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
 
 ##############################################################################
 ##
@@ -6,20 +22,38 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -30,6 +64,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,26 +75,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -85,7 +105,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -150,11 +170,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index 41a6cb9e..15e1ee37 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,6 +1,18 @@
-@rem Copyright 2018-2019 Twitter, Inc.
-@rem Licensed under the MoPub SDK License Agreement
-@rem http://www.mopub.com/legal/sdk-license-agreement/
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      http://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
 
 @if "%DEBUG%" == "" @echo off
 @rem ##########################################################################
@@ -12,14 +24,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -50,10 +62,9 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windowz variants
+@rem Get command-line arguments, handling Windows variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -64,11 +75,6 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 3608f60f..1e0c737e 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,55 +1,104 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="com.mopub.simpleadsdemo"
-      android:versionCode="67"
-      android:versionName="5.6.0">
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.mopub.simpleadsdemo">
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
+    <!-- This is added as a workaround for the manifest merger duplicating exoplayer
+         and play services permissions. -->
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+
     <!--WRITE_EXTERNAL_STORAGE is optional and only required for MRAID 2.0 storePicture ads.-->
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission
+        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
+        tools:remove="android:maxSdkVersion" />
+
+    <uses-feature
+        android:name="android.hardware.bluetooth"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.camera"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.microphone"
+        android:required="false" />
+    <uses-feature
+        android:name="android.hardware.wifi"
+        android:required="false" />
 
     <application
+        android:allowBackup="true"
         android:icon="@drawable/icon"
         android:label="@string/app_name"
         android:networkSecurityConfig="@xml/network_security_config"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-	    <activity android:name="com.mopub.simpleadsdemo.MoPubSampleActivity"
-	            android:label="@string/app_name"
-                android:theme="@style/AppTheme.NoActionBar"
-                android:launchMode="singleTask"
-                android:configChanges="orientation|screenSize">
-	        <intent-filter>
-	            <action android:name="android.intent.action.MAIN" />
-	            <category android:name="android.intent.category.LAUNCHER" />
-	        </intent-filter>
+        <activity
+            android:name="com.mopub.simpleadsdemo.MoPubSampleActivity"
+            android:windowSoftInputMode="stateAlwaysHidden"
+            android:configChanges="orientation|screenSize"
+            android:label="@string/app_name"
+            android:launchMode="singleTask"
+            android:theme="@style/AppTheme.NoActionBar">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
             <intent-filter>
                 <action android:name="android.intent.action.VIEW" />
+
                 <category android:name="android.intent.category.BROWSABLE" />
                 <category android:name="android.intent.category.DEFAULT" />
-                <data android:scheme="mopub"
-                      android:host="load" />
+
+                <data
+                    android:host="load"
+                    android:scheme="mopub" />
             </intent-filter>
-	    </activity>
-        <activity android:name="com.mopub.mobileads.MoPubActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.MraidActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.common.MoPubBrowser"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-                android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity android:name="com.mopub.mobileads.RewardedMraidActivity"
-                  android:configChanges="keyboardHidden|orientation|screenSize"/>
-
-        <activity android:name="com.mopub.common.privacy.ConsentDialogActivity"
-                  android:configChanges="keyboardHidden|orientation|screenSize"/>
-
-        <meta-data android:name="com.google.android.gms.version"
-                   android:value="@integer/google_play_services_version" />
+        </activity>
+        <activity
+            android:name="com.mopub.mobileads.MoPubActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity
+            android:name="com.mopub.mobileads.MraidActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity
+            android:name="com.mopub.common.MoPubBrowser"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+        <activity
+            android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:theme="@style/AppTheme.NoActionBar" />
+        <activity
+            android:name="com.mopub.mobileads.RewardedMraidActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:theme="@style/AppTheme.NoActionBar" />
+
+        <activity
+            android:name="com.mopub.common.privacy.ConsentDialogActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize" />
+
+        <!-- AppLovin -->
+        <meta-data
+            android:name="applovin.sdk.key"
+            android:value="g9p0buIGwmV205uzWu93fLFLsxAwz_ve9hflay_UiVXiaQf5Iq8yAOI0JTwHSqxcVaL4XLZEs5yQVcWpRelb21" />
+
+        <!-- Google Ads -->
+        <!-- note: this is the sample app id from Google's documentation -->
+        <!-- https://developers.google.com/admob/android/quick-start#update_your_androidmanifestxml -->
+        <meta-data
+            android:name="com.google.android.gms.ads.APPLICATION_ID"
+            android:value="ca-app-pub-3940256099942544~3347511713" />
+
+        <!-- Google Play Services -->
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version" />
+
     </application>
 
 </manifest>
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index c85fa548..048745f3 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -8,6 +8,15 @@ repositories {
     flatDir {
         dirs '../libs'
     }
+    maven {
+        name "Tapjoy's maven repo"
+        url "https://tapjoy.bintray.com/maven"
+    }
+    maven {
+        url "https://adcolony.bintray.com/AdColony"
+    }
+    maven { url 'https://jitpack.io' }  // For Vungle
+    maven { url "https://dl.bintray.com/ironsource-mobile/android-sdk" } // For IronSource
     maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
 }
 
@@ -15,7 +24,7 @@ apply plugin: 'com.android.application'
 
 project.group = 'com.mopub'
 project.description = '''MoPub Sample App'''
-project.version = '5.6.0'
+project.version = '5.8.0'
 
 android {
     compileSdkVersion 28
@@ -27,12 +36,23 @@ android {
     }
 
     defaultConfig {
-        versionCode 67
+        versionCode 71
         versionName version
         minSdkVersion 16
         targetSdkVersion 28
+        multiDexEnabled true
 
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+        vectorDrawables.useSupportLibrary = true
+    }
+
+    flavorDimensions "default"
+    productFlavors {
+        external {
+            versionName "external"
+            dimension "default"
+        }
+
     }
 
     buildTypes {
@@ -53,9 +73,10 @@ android {
             resources.srcDirs = ['src/main/java']
             aidl.srcDirs = ['src/main']
             renderscript.srcDirs = ['src/main']
-            res.srcDirs = ['res']
+            res.srcDirs = ['res/main']
             assets.srcDirs = ['assets']
         }
+
     }
 
     // Note: You will also need a local.properties file to set the location of the SDK in the same 
@@ -65,6 +86,36 @@ android {
 }
 
 dependencies {
+    // Third party Custom Network Adapters
+    implementation 'com.adcolony:sdk:3.3.10'
+    implementation 'com.google.android.gms:play-services-ads:17.2.0'
+    implementation "com.applovin:applovin-sdk:9.7.2"
+    // Commented out since we cannot distribute 3rd party libraries
+//    implementation name: 'chartboost-7.3.1'
+    implementation 'com.facebook.android:audience-network-sdk:5.4.0'
+    implementation 'com.flurry.android:ads:11.6.0'
+    implementation 'com.flurry.android:analytics:11.6.0'
+    implementation 'com.ironsource.sdk:mediationsdk:6.8.5@jar'
+    implementation 'com.tapjoy:tapjoy-android-sdk:12.3.1@aar'
+    implementation 'com.unity3d.ads:unity-ads:3.1.0@aar'
+    implementation 'com.verizon.ads:android-vas-standard-edition:1.1.1'
+    // Vungle and its dependencies.
+    implementation 'com.github.vungle:vungle-android-sdk:6.3.24'
+
+    // MoPub Custom Network Adapters
+    implementation 'com.mopub.mediation:adcolony:3.3.10.0'
+    implementation 'com.mopub.mediation:admob:17.2.0.2'
+    implementation 'com.mopub.mediation:applovin:9.7.2.0'
+    // Commented out since we do not include the corresponding library
+//    implementation 'com.mopub.mediation:chartboost:7.3.1.4'
+    implementation 'com.mopub.mediation:facebookaudiencenetwork:5.4.0.0'
+    implementation 'com.mopub.mediation:flurry:11.6.0.2'
+    implementation 'com.mopub.mediation:ironsource:6.8.5.0'
+    implementation 'com.mopub.mediation:tapjoy:12.3.1.0'
+    implementation 'com.mopub.mediation:unityads:3.1.0.0'
+    implementation 'com.mopub.mediation:verizon:1.1.1.1'
+    implementation 'com.mopub.mediation:vungle:6.3.24.4'
+
     implementation 'com.android.support:customtabs:28.0.0'
     implementation 'com.android.support:support-v4:28.0.0'
     implementation 'com.android.support:design:28.0.0'
diff --git a/mopub-sample/res/drawable/icon.png b/mopub-sample/res/drawable/icon.png
deleted file mode 100644
index 5ccc4787..00000000
Binary files a/mopub-sample/res/drawable/icon.png and /dev/null differ
diff --git a/mopub-sample/res/drawable/side_nav_bar.xml b/mopub-sample/res/drawable/side_nav_bar.xml
deleted file mode 100644
index 8ef428d1..00000000
--- a/mopub-sample/res/drawable/side_nav_bar.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-    <gradient
-        android:angle="135"
-        android:centerColor="#009688"
-        android:endColor="#00695C"
-        android:startColor="#4DB6AC"
-        android:type="linear" />
-</shape>
diff --git a/mopub-sample/res/internal/drawable-hdpi/icon.png b/mopub-sample/res/internal/drawable-hdpi/icon.png
new file mode 100755
index 00000000..741da592
Binary files /dev/null and b/mopub-sample/res/internal/drawable-hdpi/icon.png differ
diff --git a/mopub-sample/res/internal/drawable-mdpi/icon.png b/mopub-sample/res/internal/drawable-mdpi/icon.png
new file mode 100755
index 00000000..26490603
Binary files /dev/null and b/mopub-sample/res/internal/drawable-mdpi/icon.png differ
diff --git a/mopub-sample/res/internal/drawable-xhdpi/icon.png b/mopub-sample/res/internal/drawable-xhdpi/icon.png
new file mode 100755
index 00000000..06deb8bd
Binary files /dev/null and b/mopub-sample/res/internal/drawable-xhdpi/icon.png differ
diff --git a/mopub-sample/res/internal/drawable-xxhdpi/icon.png b/mopub-sample/res/internal/drawable-xxhdpi/icon.png
new file mode 100755
index 00000000..a72efeeb
Binary files /dev/null and b/mopub-sample/res/internal/drawable-xxhdpi/icon.png differ
diff --git a/mopub-sample/res/internal/drawable-xxxhdpi/icon.png b/mopub-sample/res/internal/drawable-xxxhdpi/icon.png
new file mode 100755
index 00000000..c794b7b4
Binary files /dev/null and b/mopub-sample/res/internal/drawable-xxxhdpi/icon.png differ
diff --git a/mopub-sample/res/internal/drawable/icon.png b/mopub-sample/res/internal/drawable/icon.png
new file mode 100755
index 00000000..26490603
Binary files /dev/null and b/mopub-sample/res/internal/drawable/icon.png differ
diff --git a/mopub-sample/res/internal/values/strings.xml b/mopub-sample/res/internal/values/strings.xml
new file mode 100644
index 00000000..1fe25ea9
--- /dev/null
+++ b/mopub-sample/res/internal/values/strings.xml
@@ -0,0 +1,212 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="app_name">MoPub INTERNAL</string>
+    <string name="app_title">MoPub Sample App - INTERNAL</string>
+    <!--Macaw - Exchange test ad units-->
+    <string name="ad_unit_id_macaw_interstitial_portrait">2971114e05df4bb6bfeb83aefd2cb13f</string>
+    <string name="ad_unit_id_macaw_banner">1901a8606d8a45c9bf2358be5dc220e9</string>
+    <string name="ad_unit_id_macaw_medium_rectangle">7dfc45083ef04ea6b7533f1b2b8f5f6b</string>
+    <string name="ad_unit_id_macaw_interstitial_landscape">181294542e6b4b33bd80cf1563dc4724</string>
+    <string name="ad_unit_id_macaw_tablet_interstitial_portrait">c6380a094a444657836884e12b86e013</string>
+    <string name="ad_unit_id_macaw_tablet_interstitial_landscape">d9f040c7f29a4da6b9262a1d504dc057</string>
+    <string name="ad_unit_id_macaw_native">5d73b139cd3f402f8a6767670c4cf6fb</string>
+
+    <!--Release Testing ad units-->
+    <string name="ad_unit_id_rt_banner_image">64561445aa894576b6899e364c3cf003</string>
+    <string name="ad_unit_id_rt_banner_html">977c3ca769ce488293edac7a7a85ce99</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_device">af50074dfa38476d85449391523ba2aa</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_landscape">e31935dc878b412dba363b7b61484df0</string>
+    <string name="ad_unit_id_rt_banner_mraid_expanding_portrait">5b1917e405a34e238f0816371124590d</string>
+    <string name="ad_unit_id_rt_banner_resizing">26c38be32221456e9b5bdfba15211afe</string>
+
+    <string name="ad_unit_id_rt_medium_rectangle_image">560b3ba10bbe485ebc9e37a2e1cbbe4b</string>
+    <string name="ad_unit_id_rt_medium_rectangle_html">a0d719ae192748c2959f32235db68daf</string>
+    <string name="ad_unit_id_rt_medium_rectangle_expanding_device">4badb91a5c344cbda602a0a83d8937f2</string>
+    <string name="ad_unit_id_rt_medium_rectangle_expanding_landscape">01b88873d7c74dff9531ea744c4431e3</string>
+    <string name="ad_unit_id_rt_medium_rectangle_expanding_portrait">7b3189920ec646acb8f61d4d5013d7e3</string>
+    <string name="ad_unit_id_rt_medium_rectangle_resizing">53373b5f681a42438d9df71aa74165c4</string>
+    <string name="ad_unit_id_rt_medium_rectangle_html_video">5a85ad2677c34bffb2ae0b45eb18efdd</string>
+
+    <string name="ad_unit_id_rt_interstitial_vast_no_ext_companion_landscape">eab0db43a021431c9ae43e6ff1dd8fac</string>
+    <string name="ad_unit_id_rt_interstitial_vast_no_ext_no_companion_landscape">3d752afaad8f41f2a32de0c9e83a6b49</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_device">4e56aa03c3ad48338b70d8cc890553b0</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_landscape">2bc078315efe4edda00d2bae478e894b</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_companion_portrait">0ee47e89697a44789a60b3d83dacd526</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_device">212d6c826d78476f8d01fa32726b4b98</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_landscape">3521c7acd9dd41358a6564cff5eddedf</string>
+    <string name="ad_unit_id_rt_interstitial_vast_ext_no_companion_portrait">468abb57b71147559d7bcb972e23c91a</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_no_ext_companion_landscape">abf919e86136493cbe0237f6067ee1eb</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_no_ext_no_companion_landscape">f1faff48504e4e3db51fcecb64a6e12b</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_device">2393fd574c424602a514d0a47cfb82fb</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_landscape">5ccb97c1c11d4453915e3b8c9a10adad</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_companion_portrait">697bb483986f4f77862e589c785f0f8a</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_device">c3630d063505462a92e132cf04ac345b</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_landscape">8521f18a728c4ddd8dacba5ae365919c</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_vast_ext_no_companion_portrait">21f931b01a24422db56fe43f10123c2e</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_no_ext_companion_landscape">5b8c27f29c324b32b8c1a2f886533334</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_no_ext_no_companion_landscape">d344c1d0fcc24b4cbd23cea9a9b584f6</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_device">fe419b86c7a94c5da8b92c30725e2cac</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_landscape">5dd4cb47c72e42a0a6232480cdfffbeb</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_companion_portrait">cf225b3cbec346faa3f135c92d6ed29a</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_device">371b5b7466f648e0813bcdc6892f4f8d</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_landscape">73969508231d4307bbfa0db2d0a0661e</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_vast_ext_no_companion_portrait">7ca95e3c3cd743cf9dceb832024a1bb6</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_no_ext_companion_landscape">d02ea0fd104f4cf78dd7923512d708f8</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_no_ext_no_companion_landscape">069a58386a604bde86910864b5c75595</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_device">96c8fae1fc944df48490787d9e0357b0</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_landscape">2b64e0a3fe104d42897cb76f8a3480cb</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_companion_portrait">edaec97a7f294a64b85c5276ef2167e8</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_device">77017a8d78494d26bb4efff5a2afda37</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_landscape">9aea5f9dce844469b6d38067c18c1a03</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_vast_ext_no_companion_portrait">e2979c25a56b4605aa6220cd44c6ae61</string>
+
+    <string name="ad_unit_id_rt_native_image_default">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom">06f544793ab94b519c64a8935b97fef8</string>
+    <string name="ad_unit_id_rt_native_video_default">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom">28376225b2ea4a34a5dd4d0c258f42b1</string>
+    <string name="ad_unit_id_rt_native_image_default_table">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom_table">576d8faa86bf43ed885086428ec12ab7</string>
+    <string name="ad_unit_id_rt_native_video_default_table">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom_table">a4ec9929ee58404eb95e8376a0666277</string>
+    <string name="ad_unit_id_rt_native_image_default_collection">e33263a0d07849858d20718e1f6bd262</string>
+    <string name="ad_unit_id_rt_native_image_custom_collection">4d28445bbd95448d9b3fefb6d97fdc41</string>
+    <string name="ad_unit_id_rt_native_video_default_collection">321fce78cfe643bfb1307f68b4ffbc56</string>
+    <string name="ad_unit_id_rt_native_video_custom_collection">ec2b5696162249c0b54098dd0b69c07a</string>
+
+    <string name="ad_unit_id_rt_interstitial_image_landscape_phone">4477f9af6c9344bd808e992ca007e59d</string>
+    <string name="ad_unit_id_rt_interstitial_image_portrait_phone">5cbfe91d79da4329b286901d6182c74a</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_landscape_phone">f42ae53ecdd4470887672764f12ec835</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_portrait_phone">1252adbc258b4bc788a5e9cfb943f466</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_device_phone">092db09cfb80492787ce53085aac6a28</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_landscape_phone">ef93604eafc3459cab3c79adc5c09049</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_portrait_phone">f9719cc678a741229dacc64f81e87628</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_landscape_phone">3ae5fe30cc8347ccb5af452b9e027eba</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_portrait_phone">66129990cd3948b08c8003a4294e3def</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_device_phone">f2054a24efac4ecf9b6bfd914e06e23c</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_landscape_phone">ca84ae968d2c4bea93899f32eda5b643</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_portrait_phone">7465977860334b348eb2c5d6694948f2</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_device_phone">02b8b6d870934b29b2bff23327493ee0</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_landscape_phone">13026731e30c4717a6b7dcf2487a25ac</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_portrait_phone">4dc7af75c20649e7b0a1001f9aa12085</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_device_phone">84c1c08648ca4314a9824face0c6c04d</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_landscape_phone">f0f5a7c4e0da43a697095a0e957f1f5f</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_portrait_phone">48d51627826d45c2af0a8b6b0246e67c</string>
+
+    <string name="ad_unit_id_rt_interstitial_image_landscape_tablet">7a78e378b2074e00b3f9769166f74fa2</string>
+    <string name="ad_unit_id_rt_interstitial_image_portrait_tablet">bdc5ef94de78401484df684787221b4e</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_landscape_tablet">716ee330cba0402bbea1d245d0ea8176</string>
+    <string name="ad_unit_id_rt_interstitial_html_basic_portrait_tablet">5309c6f83dec4f529d534d41ee58098c</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_device_tablet">1d6d1ff7e76b45beb72e7d5f43b177fb</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_landscape_tablet">4a21aec9b6da4c2283868d63017431b6</string>
+    <string name="ad_unit_id_rt_interstitial_mraid_basic_portrait_tablet">adb11b502c1e4d90a5f71754958c8f4f</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_landscape_tablet">9367c4d4b7444bceab89d7df077b9b5f</string>
+    <string name="ad_unit_id_rt_interstitial_html_video_portrait_tablet">6acc18636c214b5696142099916b9ccc</string>
+
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_device_tablet">7a402b5890ca44a4a28c2a8c02e59db8</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_landscape_tablet">66d700fdee0446a7ad67d3def71da5aa</string>
+    <string name="ad_unit_id_rt_rewarded_legacy_currency_mraid_portrait_tablet">c5ce794be004487e8815680cf4ce9f66</string>
+
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_device_tablet">846d915b5fa74fda8e95c5c9519ec16b</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_landscape_tablet">81c2c5bfd8254f4e9f1cf9f9f3548581</string>
+    <string name="ad_unit_id_rt_rewarded_single_currency_mraid_portrait_tablet">84cc08ecb0e3415eb6fa399b9dcbcd5b</string>
+
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_device_tablet">8e658b5231824280833226ba9f0ee433</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_landscape_tablet">d552acc66aec4c4cb85e61d14439b580</string>
+    <string name="ad_unit_id_rt_rewarded_multi_currency_mraid_portrait_tablet">969e1e14f93448b1ad334a7a5e46e512</string>
+
+    <!--Top Grossing-->
+    <string name="ad_unit_id_top_grossing_banner_phone">321da3e82353435cac072116cab84b23</string>
+    <string name="ad_unit_id_top_grossing_medium_rectangle_phone">e4ec5b5d8b224ef895d6d93094dc6949</string>
+    <string name="ad_unit_id_top_grossing_interstitial_phone">ebe9132e1ec748ddbc1e333089e95113</string>
+    <string name="ad_unit_id_top_grossing_rewarded_phone">23ba06fc2a9a4b6383812bd7003b3fd9</string>
+    <string name="ad_unit_id_top_grossing_native_phone">554e7a6c341242228f122b653e12417e</string>
+
+    <string name="ad_unit_id_top_grossing_banner_tablet">b87326a1a64746c88b996f0234efd7e3</string>
+    <string name="ad_unit_id_top_grossing_medium_rectangle_tablet">be678056f327430b91d62a861cbebd0f</string>
+    <string name="ad_unit_id_top_grossing_interstitial_tablet">1baf215709034ef19ad4cd80e6396e00</string>
+    <string name="ad_unit_id_top_grossing_rewarded_tablet">a83d73f6b65848eb98529a1b168a3708</string>
+    <string name="ad_unit_id_top_grossing_native_tablet">eecebc103df84c0aa0acfb4ea6b93237</string>
+
+    <!--Twitter Audience Platform-->
+    <string name="ad_unit_id_tap_banner">f684d7bf6a104bbdab3993cc291255dd</string>
+    <string name="ad_unit_id_tap_banner_tablet">b4a6dba86aa84c159098335320b22f89</string>
+    <string name="ad_unit_id_tap_interstitial_landscape">bdb933f863d940d4ba0d48c32c31a461</string>
+    <string name="ad_unit_id_tap_interstitial_landscape_tablet">6e554b8347aa41c68df0c1b8024f141c</string>
+    <string name="ad_unit_id_tap_interstitial_portrait">5de9a132df214abcb500c37c447b339c</string>
+    <string name="ad_unit_id_tap_interstitial_portrait_tablet">2905c14f6e4f43b0b9bbaed1705b9296</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_landscape">d3c1cd039dcc4326ad64d4d6fde6a4a5</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_landscape_tablet">2118107dd5bf46409ec2df6b447836dd</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_portrait">efe8c053bf074771b27ea976d82b6a5b</string>
+    <string name="ad_unit_id_tap_tweet_interstitial_portrait_tablet">00b1cf7dcb25410da6e9e6b59f82fc09</string>
+    <string name="ad_unit_id_tap_video_interstitial_device">490a81eec0974e0e9567b87d2fd6b81a</string>
+    <string name="ad_unit_id_tap_video_interstitial_device_tablet">6ea242b72ab849e1a668dbe70715a5f3</string>
+    <string name="ad_unit_id_tap_video_interstitial_landscape">a239770e3b7849988c888a284d7718f0</string>
+    <string name="ad_unit_id_tap_video_interstitial_landscape_tablet">f7eb5bf595964bcc8e047b4a1e7e7817</string>
+    <string name="ad_unit_id_tap_video_interstitial_portrait">28f0dad82c984c5995592f7802b059d7</string>
+    <string name="ad_unit_id_tap_video_interstitial_portrait_tablet">9adfcc1aeb1749dfa90a725d63e6d8b4</string>
+    <string name="ad_unit_id_tap_medium_rectangle">f36e9fdc947d4b4faaeb15aa3e29a2ec</string>
+    <string name="ad_unit_id_tap_medium_rectangle_tablet">0f56c33f03754018842aaa794abbe719</string>
+    <string name="ad_unit_id_tap_native_static">09d4e470ca534795b71041c6ca79bac4</string>
+    <string name="ad_unit_id_tap_native_static_tablet">68c0539952f0451093a76c5359d4eecc</string>
+    <string name="ad_unit_id_tap_rewarded_video_device">2cbbe2727b1f43a48abe702fd5900412</string>
+    <string name="ad_unit_id_tap_rewarded_video_device_tablet">ecfb2fe99c754acb8637624c2b522425</string>
+    <string name="ad_unit_id_tap_rewarded_video_landscape">e0cfc0942c7f4fb195dee8456af49149</string>
+    <string name="ad_unit_id_tap_rewarded_video_landscape_tablet">abe2a3157872408289059af8d4f1c9c1</string>
+    <string name="ad_unit_id_tap_rewarded_video_portrait">87fa6ad3da6f4b419bec69e328397c77</string>
+    <string name="ad_unit_id_tap_rewarded_video_portrait_tablet">aa837da50377422d95fe43cd0117d3a7</string>
+
+    <!--AdColony-->
+    <string name="ad_unit_id_adcolony_interstitial">953d93d50ae343168ad44c3c536cdb1a</string>
+    <string name="ad_unit_id_adcolony_rewarded_video">339929134a55413d9c0a85496b250057</string>
+
+    <!--AdMob-->
+    <string name="ad_unit_id_admob_banner">83cff4cec21148cd820470462f6efeca</string>
+    <string name="ad_unit_id_admob_interstitial">278161384e0445b6a6c2d00596caa006</string>
+    <string name="ad_unit_id_admob_rewarded_video">f7cc70b82da549a09f19a73f83bdbfba</string>
+    <string name="ad_unit_id_admob_native">f3ec720ff0e94a81a5bcd4773e98bab9</string>
+
+    <!--AppLovin-->
+    <string name="ad_unit_id_applovin_banner">3bb1e241a91040d79c4194dd476b9c60</string>
+    <string name="ad_unit_id_applovin_interstitial">d960ac7f90d041c8a4d817726a76a2fa</string>
+    <string name="ad_unit_id_applovin_rewarded_video">b28c982f77dd4c68a9e36ab7a1a87c1a</string>
+
+    <!--Chartboost-->
+    <string name="ad_unit_id_chartboost_interstitial">376366b49d324dedae3d5edb360c27b4</string>
+    <string name="ad_unit_id_chartboost_rewarded_video">df605ab15b56400285c99e521ecc2cb1</string>
+
+    <!--Facebook Audience Network-->
+    <string name="ad_unit_id_fan_banner">b40a96dd275e4ce5be2cdf5faa92007d</string>
+    <string name="ad_unit_id_fan_interstitial">9792d876011f4359887d2d26380e8a84</string>
+    <string name="ad_unit_id_fan_rewarded_video">7220c37b8e93499a8f0aff2eb4f0ad3d</string>
+    <string name="ad_unit_id_fan_native">f97733db27f44defbeb39ce495047779</string>
+
+    <!--Flurry-->
+    <string name="ad_unit_id_flurry_interstitial">716519f41a9144ff9c7afc35b80d6ce8</string>
+    <string name="ad_unit_id_flurry_native">17e0b51cac33483f9890fce08bedfed2</string>
+
+    <!--ironSource-->
+    <string name="ad_unit_id_ironsource_interstitial">9556b7f57e724cb4b5eba926b8258e3c</string>
+    <string name="ad_unit_id_ironsource_rewarded_video">885b4f0c25884d468da2c8d657b0d95b</string>
+
+    <!--Tapjoy-->
+    <string name="ad_unit_id_tapjoy_interstitial">aee78cf481994c67b7e7cb983340a5f3</string>
+    <string name="ad_unit_id_tapjoy_rewarded_video">f2be86b5ae52440a83ef24d426074d2e</string>
+
+    <!--Unity Ads-->
+    <string name="ad_unit_id_unity_interstitial">3db70dc7af6d4fb3ababa860bb4b9062</string>
+    <string name="ad_unit_id_unity_rewarded_video">fa84b7823f4147d883f6bb967f8ef15f</string>
+
+    <!--Verizon-->
+    <string name="ad_unit_id_verizon_banner">cdbdbe29679c442aa9b00c4dd41109a5</string>
+    <string name="ad_unit_id_verizon_interstitial">f655c6e61c67465db58fb0665eb86de7</string>
+
+    <!--Vungle-->
+    <string name="ad_unit_id_vungle_interstitial">5635d28cda6c4dab965b9cf7a99d5af5</string>
+    <string name="ad_unit_id_vungle_rewarded_video">e97347b0a04d417ea178d3ec22766490</string>
+</resources>
diff --git a/mopub-sample/res/layout/nav_header_main.xml b/mopub-sample/res/layout/nav_header_main.xml
deleted file mode 100644
index 2269c832..00000000
--- a/mopub-sample/res/layout/nav_header_main.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:background="@drawable/side_nav_bar"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark">
-
-    <ImageView
-        android:id="@+id/image_mopub_logo"
-        android:layout_width="wrap_content"
-        android:layout_height="70dp"
-        android:layout_marginBottom="@dimen/nav_header_vertical_spacing"
-        android:scaleType="centerInside"
-        app:srcCompat="@drawable/mopub"
-        android:contentDescription="@string/mopub_logo_descr" />
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/nav_header_title"
-        android:layout_marginBottom="@dimen/nav_header_vertical_spacing"
-        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
-
-</LinearLayout>
diff --git a/mopub-sample/res/main/color/button_text_color.xml b/mopub-sample/res/main/color/button_text_color.xml
new file mode 100644
index 00000000..4f7a8e9d
--- /dev/null
+++ b/mopub-sample/res/main/color/button_text_color.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/colorButtonText" android:state_enabled="true" />
+    <item android:color="@color/colorButton" android:state_enabled="false" />
+</selector>
diff --git a/mopub-sample/res/main/color/callbacks_text_view_color.xml b/mopub-sample/res/main/color/callbacks_text_view_color.xml
new file mode 100644
index 00000000..55f5588c
--- /dev/null
+++ b/mopub-sample/res/main/color/callbacks_text_view_color.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/colorText" android:state_enabled="true" />
+    <item android:color="@color/colorTextSecondary" android:state_enabled="false" />
+</selector>
diff --git a/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..6df2e3c5
Binary files /dev/null and b/mopub-sample/res/main/drawable-hdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-hdpi/icon.png b/mopub-sample/res/main/drawable-hdpi/icon.png
new file mode 100755
index 00000000..ef6ea08b
Binary files /dev/null and b/mopub-sample/res/main/drawable-hdpi/icon.png differ
diff --git a/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8f141bdd
Binary files /dev/null and b/mopub-sample/res/main/drawable-mdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-mdpi/icon.png b/mopub-sample/res/main/drawable-mdpi/icon.png
new file mode 100755
index 00000000..47786801
Binary files /dev/null and b/mopub-sample/res/main/drawable-mdpi/icon.png differ
diff --git a/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..38c3aa82
Binary files /dev/null and b/mopub-sample/res/main/drawable-xhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xhdpi/icon.png b/mopub-sample/res/main/drawable-xhdpi/icon.png
new file mode 100755
index 00000000..8fbc5075
Binary files /dev/null and b/mopub-sample/res/main/drawable-xhdpi/icon.png differ
diff --git a/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..fd11173e
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xxhdpi/icon.png b/mopub-sample/res/main/drawable-xxhdpi/icon.png
new file mode 100755
index 00000000..a58faa38
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxhdpi/icon.png differ
diff --git a/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8d2ff458
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxxhdpi/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable-xxxhdpi/icon.png b/mopub-sample/res/main/drawable-xxxhdpi/icon.png
new file mode 100755
index 00000000..5489ee3c
Binary files /dev/null and b/mopub-sample/res/main/drawable-xxxhdpi/icon.png differ
diff --git a/mopub-sample/res/main/drawable/baseline_cancel_black_36.png b/mopub-sample/res/main/drawable/baseline_cancel_black_36.png
new file mode 100755
index 00000000..8d2ff458
Binary files /dev/null and b/mopub-sample/res/main/drawable/baseline_cancel_black_36.png differ
diff --git a/mopub-sample/res/main/drawable/ic_checkmark.xml b/mopub-sample/res/main/drawable/ic_checkmark.xml
new file mode 100644
index 00000000..68f32ec0
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_checkmark.xml
@@ -0,0 +1,14 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M9,20c-0.264,0 -0.52,-0.104 -0.707,-0.293l-4.785,-4.785c-0.39,-0.39 -0.39,-1.023 0,-1.414s1.023,-0.39 1.414,0l3.946,3.945L18.075,4.41c0.32,-0.45 0.94,-0.558 1.395,-0.24 0.45,0.318 0.56,0.942 0.24,1.394L9.817,19.577c-0.17,0.24 -0.438,0.395 -0.732,0.42 -0.028,0.002 -0.057,0.003 -0.085,0.003z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_checkmark_circle.xml b/mopub-sample/res/main/drawable/ic_checkmark_circle.xml
new file mode 100644
index 00000000..597a947e
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_checkmark_circle.xml
@@ -0,0 +1,17 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M15.87,7.91c-0.347,-0.226 -0.813,-0.128 -1.04,0.218l-4.154,6.364 -2.047,-2.05c-0.294,-0.293 -0.77,-0.293 -1.062,0 -0.293,0.292 -0.293,0.768 0,1.06l2.7,2.705c0.145,0.146 0.338,0.22 0.53,0.22s0.383,-0.073 0.53,-0.22c0.062,-0.062 0.416,-0.607 0.416,-0.607l4.343,-6.652c0.226,-0.346 0.128,-0.81 -0.218,-1.038z"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,22.75C6.072,22.75 1.25,17.928 1.25,12S6.072,1.25 12,1.25 22.75,6.072 22.75,12 17.928,22.75 12,22.75zM12,2.75C6.9,2.75 2.75,6.9 2.75,12S6.9,21.25 12,21.25s9.25,-4.15 9.25,-9.25S17.1,2.75 12,2.75z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_globe_stroke.xml b/mopub-sample/res/main/drawable/ic_globe_stroke.xml
new file mode 100644
index 00000000..09819b6d
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_globe_stroke.xml
@@ -0,0 +1,14 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,2C6.486,2 2,6.486 2,12s4.486,10 10,10 10,-4.486 10,-10S17.514,2 12,2zM20.472,11.442c-0.242,0.19 -0.472,0.368 -0.63,0.486 -0.68,-1.265 -1.002,-1.78 -1.256,-2.007 -0.163,-0.145 -0.37,-0.223 -0.78,-0.375 -0.367,-0.136 -1.482,-0.55 -1.65,-0.85 -0.087,-0.153 0.136,-0.602 0.23,-0.793 0.088,-0.177 0.164,-0.33 0.196,-0.497 0.123,-0.646 -0.33,-1.146 -0.728,-1.59 -0.066,-0.072 -0.153,-0.17 -0.23,-0.26 0.335,-0.12 0.862,-0.26 1.42,-0.384 1.95,1.448 3.26,3.704 3.428,6.272zM10.684,3.612c0.076,0.25 0.145,0.5 0.182,0.678 -0.255,0.15 -0.663,0.363 -0.96,0.52 -0.262,0.136 -0.522,0.273 -0.738,0.392 -0.247,0.137 -0.442,0.234 -0.6,0.313 -0.347,0.174 -0.598,0.3 -0.833,0.553 -0.068,0.073 -0.26,0.278 -1.02,1.886l-1.79,-0.656c1.293,-1.94 3.362,-3.31 5.76,-3.685zM12,20.5c-4.687,0 -8.5,-3.813 -8.5,-8.5 0,-1.197 0.25,-2.335 0.7,-3.37 0.47,0.182 1.713,0.66 2.75,1.035 -0.107,0.336 -0.245,0.854 -0.26,1.333 -0.03,0.855 0.502,1.7 0.562,1.792 0.053,0.08 0.12,0.15 0.2,0.207 0.303,0.21 0.687,0.5 0.827,0.616 0.063,0.343 0.166,1.26 0.23,1.833 0.144,1.266 0.175,1.48 0.24,1.65 0.005,0.012 0.514,1.188 1.315,1.188 0.576,-0.003 0.673,-0.206 1.855,-2.688 0.244,-0.512 0.45,-0.95 0.513,-1.058 0.1,-0.144 0.597,-0.61 0.87,-0.83 0.55,-0.442 0.76,-1.82 0.413,-2.682 -0.335,-0.83 -1.92,-2.08 -2.5,-2.195 -0.17,-0.033 -0.43,-0.04 -0.953,-0.053 -0.497,-0.01 -1.25,-0.028 -1.536,-0.09 -0.098,-0.024 -0.314,-0.094 -0.605,-0.196 0.32,-0.668 0.627,-1.28 0.71,-1.4 0.05,-0.052 0.168,-0.112 0.408,-0.234 0.17,-0.086 0.383,-0.192 0.653,-0.34 0.208,-0.116 0.458,-0.247 0.71,-0.38 1.168,-0.612 1.484,-0.8 1.658,-1.082 0.11,-0.177 0.263,-0.44 -0.04,-1.544 1.042,0.027 2.038,0.24 2.955,0.61 -0.89,0.32 -1.024,0.595 -1.106,0.77 -0.367,0.784 0.256,1.475 0.667,1.93 0.096,0.107 0.24,0.268 0.32,0.38l-0.017,0.036c-0.234,0.472 -0.67,1.35 -0.196,2.194 0.406,0.72 1.384,1.13 2.437,1.52 0.134,0.05 0.25,0.092 0.33,0.126 0.16,0.208 0.496,0.79 1,1.735l0.154,0.285c0.078,0.14 0.33,0.505 0.842,0.505 0.167,0 0.363,-0.04 0.59,-0.137 0.032,-0.013 0.083,-0.035 0.18,-0.094C19.72,17.405 16.22,20.5 12,20.5zM8.188,11.05c0.01,-0.285 0.102,-0.646 0.184,-0.907l0.027,0.006c0.397,0.09 1.037,0.11 1.83,0.13 0.32,0.006 0.59,0.008 0.615,0 0.326,0.143 1.355,1 1.483,1.31 0.113,0.28 0.05,0.812 -0.034,1.01 -0.233,0.197 -0.845,0.735 -1.085,1.078 -0.093,0.13 -0.212,0.373 -0.64,1.274 -0.133,0.276 -0.313,0.654 -0.488,1.013 -0.026,-0.225 -0.054,-0.472 -0.08,-0.686 -0.225,-2.003 -0.273,-2.22 -0.42,-2.445 -0.05,-0.078 -0.202,-0.31 -1.135,-0.973 -0.117,-0.213 -0.268,-0.564 -0.26,-0.813z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_information_circle.xml b/mopub-sample/res/main/drawable/ic_information_circle.xml
new file mode 100644
index 00000000..c11b432c
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_information_circle.xml
@@ -0,0 +1,20 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,18.042c-0.553,0 -1,-0.447 -1,-1v-5.5c0,-0.553 0.447,-1 1,-1s1,0.447 1,1v5.5c0,0.553 -0.447,1 -1,1z"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,8.042m-1.25,0a1.25,1.25 0,1 1,2.5 0a1.25,1.25 0,1 1,-2.5 0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,22.75C6.072,22.75 1.25,17.928 1.25,12S6.072,1.25 12,1.25 22.75,6.072 22.75,12 17.928,22.75 12,22.75zM12,2.75C6.9,2.75 2.75,6.9 2.75,12S6.9,21.25 12,21.25s9.25,-4.15 9.25,-9.25S17.1,2.75 12,2.75z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_lock.xml b/mopub-sample/res/main/drawable/ic_lock.xml
new file mode 100644
index 00000000..7f0b58f4
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_lock.xml
@@ -0,0 +1,14 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M19.75,7.31h-1.88C17.68,4.23 15.124,1.784 12,1.784S6.32,4.232 6.13,7.31L4.25,7.31C3.01,7.31 2,8.317 2,9.56L2,19.79c0,1.24 1.01,2.25 2.25,2.25h15.5c1.24,0 2.25,-1.01 2.25,-2.25L22,9.56c0,-1.242 -1.01,-2.25 -2.25,-2.25zM12.75,15.687v1.396c0,0.414 -0.336,0.75 -0.75,0.75s-0.75,-0.336 -0.75,-0.75v-1.396c-0.764,-0.3 -1.307,-1.04 -1.307,-1.91 0,-1.137 0.92,-2.058 2.057,-2.058 1.136,0 2.057,0.92 2.057,2.056 0,0.87 -0.543,1.61 -1.307,1.91zM7.648,7.31C7.838,5.06 9.705,3.284 12,3.284s4.163,1.777 4.352,4.023L7.648,7.307z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_mopub.xml b/mopub-sample/res/main/drawable/ic_mopub.xml
new file mode 100644
index 00000000..4cbe08b4
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_mopub.xml
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="168dp"
+    android:height="50dp"
+    android:viewportWidth="168"
+    android:viewportHeight="50">
+  <path
+      android:pathData="M39,38H32.475V22.609C32.475,22.233 32.426,21.764 32.327,21.202C32.228,20.639 32.013,20.086 31.684,19.54C31.355,18.995 30.877,18.535 30.251,18.159C29.624,17.784 28.768,17.596 27.681,17.596C26.23,17.596 25.044,18.057 24.122,18.977C23.198,19.898 22.737,21.108 22.737,22.609V38H16.213V22.609C16.213,22.233 16.163,21.764 16.065,21.202C15.966,20.639 15.76,20.086 15.447,19.54C15.133,18.995 14.663,18.535 14.038,18.159C13.411,17.784 12.555,17.596 11.467,17.596C9.985,17.596 8.79,18.057 7.884,18.977C6.977,19.898 6.525,21.108 6.525,22.609V38H0V22.761C0,21.091 0.272,19.54 0.816,18.109C1.359,16.676 2.125,15.432 3.114,14.375C4.102,13.319 5.305,12.492 6.723,11.895C8.139,11.299 9.72,11 11.467,11C13.214,11 14.771,11.333 16.139,11.997C17.506,12.662 18.651,13.574 19.574,14.733C20.53,13.574 21.7,12.662 23.083,11.997C24.468,11.333 26,11 27.681,11C29.46,11 31.049,11.291 32.451,11.87C33.851,12.449 35.037,13.259 36.009,14.299C36.981,15.339 37.723,16.574 38.234,18.006C38.744,19.437 39,21.023 39,22.761V38Z"
+      android:fillColor="#1DA1F2"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M54.5,31.95C55.338,31.95 56.128,31.775 56.869,31.425C57.611,31.075 58.263,30.575 58.828,29.925C59.392,29.275 59.836,28.5 60.158,27.6C60.48,26.701 60.641,25.7 60.641,24.6C60.641,23.5 60.48,22.484 60.158,21.55C59.836,20.617 59.392,19.817 58.828,19.15C58.263,18.484 57.611,17.968 56.869,17.6C56.128,17.234 55.338,17.05 54.5,17.05C53.662,17.05 52.863,17.234 52.106,17.6C51.348,17.968 50.695,18.484 50.147,19.15C49.599,19.817 49.164,20.617 48.841,21.55C48.52,22.484 48.358,23.5 48.358,24.6C48.358,25.7 48.52,26.701 48.841,27.6C49.164,28.5 49.599,29.275 50.147,29.925C50.695,30.575 51.348,31.075 52.106,31.425C52.863,31.775 53.662,31.95 54.5,31.95ZM54.476,11C56.21,11 57.831,11.342 59.341,12.026C60.85,12.709 62.175,13.659 63.315,14.875C64.454,16.092 65.354,17.525 66.012,19.175C66.67,20.825 67,22.618 67,24.551C67,26.484 66.67,28.268 66.012,29.901C65.354,31.534 64.454,32.95 63.315,34.15C62.175,35.351 60.85,36.292 59.341,36.976C57.831,37.658 56.21,38 54.476,38C52.742,38 51.12,37.658 49.611,36.976C48.101,36.292 46.784,35.351 45.661,34.15C44.536,32.95 43.645,31.534 42.988,29.901C42.329,28.268 42,26.484 42,24.551C42,22.618 42.329,20.825 42.988,19.175C43.645,17.525 44.536,16.092 45.661,14.875C46.784,13.659 48.101,12.709 49.611,12.026C51.12,11.342 52.742,11 54.476,11Z"
+      android:fillColor="#1DA1F2"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M79.11,31.608H82.852C83.771,31.608 84.641,31.436 85.462,31.092C86.282,30.75 86.989,30.277 87.579,29.676C88.171,29.075 88.639,28.362 88.983,27.538C89.328,26.713 89.5,25.804 89.5,24.807C89.5,23.811 89.328,22.875 88.983,21.999C88.639,21.124 88.171,20.36 87.579,19.707C86.989,19.055 86.3,18.54 85.511,18.162C84.723,17.784 83.886,17.595 83,17.595C82.114,17.595 81.277,17.793 80.489,18.187C79.701,18.582 79.011,19.115 78.42,19.784C77.829,20.454 77.362,21.236 77.017,22.128C76.672,23.021 76.5,23.983 76.5,25.013V50H70V25.013C70,23.09 70.32,21.278 70.96,19.578C71.601,17.878 72.495,16.393 73.644,15.122C74.792,13.852 76.163,12.847 77.756,12.108C79.348,11.37 81.095,11 83,11C84.903,11 86.66,11.37 88.269,12.108C89.877,12.847 91.249,13.843 92.381,15.096C93.513,16.35 94.399,17.809 95.04,19.475C95.68,21.141 96,22.919 96,24.807C96,26.662 95.688,28.405 95.065,30.036C94.441,31.668 93.579,33.084 92.479,34.286C91.379,35.49 90.074,36.443 88.564,37.146C87.054,37.85 85.412,38.202 83.64,38.202H79.11V31.608Z"
+      android:fillColor="#14171A"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M119.213,30.879C118.688,32.313 117.941,33.56 116.97,34.619C115.999,35.679 114.83,36.507 113.462,37.104C112.094,37.701 110.582,38 108.929,38C107.211,38 105.675,37.71 104.323,37.13C102.97,36.549 101.825,35.738 100.887,34.696C99.948,33.654 99.232,32.416 98.739,30.982C98.246,29.547 98,27.958 98,26.217V11H104.299V26.422C104.299,26.798 104.347,27.267 104.443,27.83C104.538,28.394 104.745,28.95 105.063,29.496C105.38,30.042 105.843,30.503 106.447,30.879C107.051,31.255 107.879,31.442 108.929,31.442C110.328,31.442 111.474,30.973 112.365,30.034C113.255,29.094 113.701,27.891 113.701,26.422V11H120V26.217C120,27.891 119.738,29.444 119.213,30.879Z"
+      android:fillColor="#14171A"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M135.64,11.814C137.413,11.814 139.054,12.166 140.565,12.871C142.074,13.576 143.379,14.531 144.479,15.734C145.578,16.938 146.44,18.358 147.064,19.99C147.687,21.625 148,23.369 148,25.226C148,27.083 147.679,28.847 147.04,30.514C146.399,32.183 145.513,33.644 144.381,34.899C143.248,36.155 141.877,37.152 140.269,37.892C138.659,38.631 136.903,39 135,39C133.096,39 131.348,38.631 129.756,37.892C128.163,37.152 126.793,36.155 125.644,34.899C124.494,33.644 123.6,32.165 122.96,30.463C122.321,28.76 122,26.946 122,25.02V0H128.5V25.02C128.5,26.052 128.672,27.015 129.017,27.909C129.362,28.804 129.83,29.585 130.421,30.256C131.011,30.927 131.701,31.452 132.488,31.83C133.277,32.209 134.113,32.397 135,32.397C135.887,32.397 136.723,32.209 137.512,31.83C138.299,31.452 138.988,30.944 139.58,30.308C140.17,29.671 140.638,28.915 140.983,28.038C141.327,27.161 141.5,26.224 141.5,25.226C141.5,24.264 141.327,23.361 140.983,22.518C140.638,21.676 140.17,20.945 139.58,20.326C138.988,19.706 138.282,19.225 137.462,18.882C136.642,18.538 135.771,18.365 134.852,18.365H131.11V11.814H135.64Z"
+      android:fillColor="#14171A"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M168,1.624C167.411,1.908 166.777,2.101 166.111,2.19C166.789,1.75 167.307,1.056 167.549,0.232C166.915,0.639 166.211,0.937 165.462,1.099C164.858,0.418 164,-0.005 163.052,0C161.233,0.011 159.766,1.598 159.776,3.545C159.778,3.821 159.808,4.09 159.866,4.347C157.127,4.217 154.693,2.828 153.058,0.704C152.777,1.227 152.618,1.833 152.621,2.479C152.627,3.702 153.214,4.778 154.101,5.404C153.561,5.389 153.052,5.234 152.607,4.973C152.607,4.987 152.607,5.002 152.607,5.017C152.616,6.724 153.758,8.143 155.267,8.458C154.991,8.54 154.7,8.585 154.4,8.586C154.188,8.588 153.981,8.567 153.78,8.527C154.206,9.925 155.428,10.937 156.869,10.957C155.747,11.909 154.329,12.481 152.786,12.49C152.52,12.492 152.258,12.476 152,12.446C153.463,13.437 155.197,14.011 157.057,14C163.116,13.964 166.401,8.573 166.378,3.915C166.377,3.762 166.373,3.61 166.366,3.459C167.007,2.958 167.562,2.334 168,1.624Z"
+      android:fillColor="#1DA1F2"
+      android:fillType="evenOdd"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_no.xml b/mopub-sample/res/main/drawable/ic_no.xml
new file mode 100644
index 00000000..27c18f92
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_no.xml
@@ -0,0 +1,14 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M12,1.25C6.072,1.25 1.25,6.072 1.25,12S6.072,22.75 12,22.75 22.75,17.928 22.75,12 17.928,1.25 12,1.25zM12,2.75c2.28,0 4.368,0.834 5.982,2.207L4.957,17.982C3.584,16.368 2.75,14.282 2.75,12c0,-5.1 4.15,-9.25 9.25,-9.25zM12,21.25c-2.28,0 -4.368,-0.834 -5.982,-2.207L19.043,6.018c1.373,1.614 2.207,3.7 2.207,5.982 0,5.1 -4.15,9.25 -9.25,9.25z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_revoke_consent.xml b/mopub-sample/res/main/drawable/ic_revoke_consent.xml
new file mode 100644
index 00000000..7f1ac6c2
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_revoke_consent.xml
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="22dp"
+    android:height="22dp"
+    android:viewportWidth="22"
+    android:viewportHeight="22">
+  <path
+      android:pathData="M11,0.25C5.072,0.25 0.25,5.072 0.25,11C0.25,16.928 5.072,21.75 11,21.75C16.928,21.75 21.75,16.928 21.75,11C21.75,5.072 16.928,0.25 11,0.25ZM11,1.75C13.28,1.75 15.368,2.584 16.982,3.957L3.957,16.982C2.584,15.368 1.75,13.282 1.75,11C1.75,5.9 5.9,1.75 11,1.75ZM5.018,18.043C6.632,19.416 8.72,20.25 11,20.25C16.1,20.25 20.25,16.1 20.25,11C20.25,8.718 19.416,6.632 18.043,5.018L5.018,18.043Z"
+      android:fillColor="#657786"
+      android:fillType="evenOdd"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_share_android.xml b/mopub-sample/res/main/drawable/ic_share_android.xml
new file mode 100644
index 00000000..71ea9a48
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_share_android.xml
@@ -0,0 +1,14 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M18.466,14.928c-1.118,0 -2.106,0.525 -2.765,1.328l-6.587,-3.358c0.066,-0.27 0.11,-0.55 0.11,-0.842 0,-0.287 -0.042,-0.562 -0.106,-0.83l6.575,-3.32c0.658,0.81 1.65,1.34 2.774,1.34 1.978,0 3.586,-1.606 3.586,-3.58s-1.608,-3.58 -3.586,-3.58 -3.586,1.606 -3.586,3.58c0,0.314 0.054,0.614 0.13,0.904L8.463,9.876c-0.656,-0.846 -1.672,-1.4 -2.824,-1.4 -1.98,0 -3.588,1.606 -3.588,3.58s1.61,3.58 3.587,3.58c1.146,0 2.158,-0.55 2.815,-1.39l6.56,3.343c-0.08,0.294 -0.135,0.598 -0.135,0.918 0,1.974 1.608,3.58 3.586,3.58s3.586,-1.606 3.586,-3.58 -1.61,-3.58 -3.586,-3.58zM18.466,3.588c1.15,0 2.086,0.932 2.086,2.078s-0.936,2.08 -2.086,2.08 -2.086,-0.934 -2.086,-2.08 0.935,-2.08 2.086,-2.08zM5.64,14.134c-1.15,0 -2.088,-0.933 -2.088,-2.08s0.937,-2.08 2.087,-2.08 2.085,0.935 2.085,2.08 -0.936,2.08 -2.086,2.08zM18.466,20.586c-1.15,0 -2.086,-0.933 -2.086,-2.08s0.936,-2.08 2.086,-2.08 2.086,0.935 2.086,2.08 -0.936,2.08 -2.086,2.08z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/ic_trashcan_stroke.xml b/mopub-sample/res/main/drawable/ic_trashcan_stroke.xml
new file mode 100644
index 00000000..09ec3705
--- /dev/null
+++ b/mopub-sample/res/main/drawable/ic_trashcan_stroke.xml
@@ -0,0 +1,17 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M0,0h24v24H0z"
+      android:strokeAlpha="0"
+      android:fillAlpha="0"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M20.746,5.236h-3.75L16.996,4.25c0,-1.24 -1.01,-2.25 -2.25,-2.25h-5.5c-1.24,0 -2.25,1.01 -2.25,2.25v0.986h-3.75c-0.414,0 -0.75,0.336 -0.75,0.75s0.336,0.75 0.75,0.75h0.368l1.583,13.262c0.216,1.193 1.31,2.027 2.658,2.027h8.282c1.35,0 2.442,-0.834 2.664,-2.072l1.577,-13.217h0.368c0.414,0 0.75,-0.336 0.75,-0.75s-0.335,-0.75 -0.75,-0.75zM8.496,4.25c0,-0.413 0.337,-0.75 0.75,-0.75h5.5c0.413,0 0.75,0.337 0.75,0.75v0.986h-7L8.496,4.25zM17.318,19.73c-0.1,0.55 -0.664,0.795 -1.18,0.795L7.854,20.525c-0.517,0 -1.083,-0.246 -1.175,-0.75L5.126,6.735h13.74L17.32,19.732z"/>
+  <path
+      android:fillColor="#FF000000"
+      android:pathData="M10,17.75c0.414,0 0.75,-0.336 0.75,-0.75v-7c0,-0.414 -0.336,-0.75 -0.75,-0.75s-0.75,0.336 -0.75,0.75v7c0,0.414 0.336,0.75 0.75,0.75zM14,17.75c0.414,0 0.75,-0.336 0.75,-0.75v-7c0,-0.414 -0.336,-0.75 -0.75,-0.75s-0.75,0.336 -0.75,0.75v7c0,0.414 0.336,0.75 0.75,0.75z"/>
+</vector>
diff --git a/mopub-sample/res/main/drawable/icon.png b/mopub-sample/res/main/drawable/icon.png
new file mode 100755
index 00000000..47786801
Binary files /dev/null and b/mopub-sample/res/main/drawable/icon.png differ
diff --git a/mopub-sample/res/drawable/logo.png b/mopub-sample/res/main/drawable/logo.png
similarity index 100%
rename from mopub-sample/res/drawable/logo.png
rename to mopub-sample/res/main/drawable/logo.png
diff --git a/mopub-sample/res/drawable/mopub.png b/mopub-sample/res/main/drawable/mopub.png
similarity index 100%
rename from mopub-sample/res/drawable/mopub.png
rename to mopub-sample/res/main/drawable/mopub.png
diff --git a/mopub-sample/res/main/drawable/mopub_button.xml b/mopub-sample/res/main/drawable/mopub_button.xml
new file mode 100644
index 00000000..85a1f124
--- /dev/null
+++ b/mopub-sample/res/main/drawable/mopub_button.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="16dp" />
+    <solid android:color="@color/colorButton" />
+    <padding
+        android:bottom="0dp"
+        android:left="8dp"
+        android:right="8dp"
+        android:top="0dp" />
+</shape>
diff --git a/mopub-sample/res/main/drawable/mopub_button_custom.xml b/mopub-sample/res/main/drawable/mopub_button_custom.xml
new file mode 100644
index 00000000..939490be
--- /dev/null
+++ b/mopub-sample/res/main/drawable/mopub_button_custom.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/mopub_button"
+        android:state_enabled="true" />
+    <item android:drawable="@drawable/mopub_button_disabled"
+        android:state_enabled="false" />
+    <item android:drawable="@drawable/mopub_button"/>
+</selector>
diff --git a/mopub-sample/res/main/drawable/mopub_button_disabled.xml b/mopub-sample/res/main/drawable/mopub_button_disabled.xml
new file mode 100644
index 00000000..e2bcb517
--- /dev/null
+++ b/mopub-sample/res/main/drawable/mopub_button_disabled.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="16dp" />
+    <solid android:color="@color/colorButtonText" />
+    <stroke
+        android:width="1dp"
+        android:color="@color/colorButton" />
+    <padding
+        android:bottom="0dp"
+        android:left="8dp"
+        android:right="8dp"
+        android:top="0dp" />
+
+</shape>
diff --git a/mopub-sample/res/main/drawable/nav_header_shadow.xml b/mopub-sample/res/main/drawable/nav_header_shadow.xml
new file mode 100644
index 00000000..305f507b
--- /dev/null
+++ b/mopub-sample/res/main/drawable/nav_header_shadow.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:top="1dp">
+        <shape
+            android:dither="true"
+            android:shape="rectangle">
+            <gradient
+                android:angle="270"
+                android:endColor="#00000000"
+                android:startColor="@color/colorDivider" />
+            <size android:height="8dp" />
+        </shape>
+    </item>
+</layer-list>
diff --git a/mopub-sample/res/main/drawable/nav_item_custom.xml b/mopub-sample/res/main/drawable/nav_item_custom.xml
new file mode 100644
index 00000000..e9c6d7de
--- /dev/null
+++ b/mopub-sample/res/main/drawable/nav_item_custom.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@color/colorAccent" android:state_checked="true" />
+    <item android:drawable="@color/colorWhite" android:state_checked="false" />
+    <item android:drawable="@color/colorWhite" />
+</selector>
diff --git a/mopub-sample/res/drawable/spacer.png b/mopub-sample/res/main/drawable/spacer.png
similarity index 100%
rename from mopub-sample/res/drawable/spacer.png
rename to mopub-sample/res/main/drawable/spacer.png
diff --git a/mopub-sample/res/layout/activity_main.xml b/mopub-sample/res/main/layout/activity_main.xml
similarity index 100%
rename from mopub-sample/res/layout/activity_main.xml
rename to mopub-sample/res/main/layout/activity_main.xml
diff --git a/mopub-sample/res/layout/ad_config_dialog.xml b/mopub-sample/res/main/layout/ad_config_dialog.xml
similarity index 77%
rename from mopub-sample/res/layout/ad_config_dialog.xml
rename to mopub-sample/res/main/layout/ad_config_dialog.xml
index 5461b486..14bf94b3 100644
--- a/mopub-sample/res/layout/ad_config_dialog.xml
+++ b/mopub-sample/res/main/layout/ad_config_dialog.xml
@@ -3,21 +3,21 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:orientation="vertical"
-    android:padding="@dimen/sample_text_size"
+    android:padding="@dimen/padding_large"
     android:textDirection="locale">
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginBottom="@dimen/sample_text_size"
+        android:layout_marginBottom="16dp"
         android:gravity="center_vertical"
         android:orientation="horizontal">
 
         <TextView
-            android:layout_width="80sp"
+            android:layout_width="85dp"
             android:layout_height="wrap_content"
             android:text="@string/ad_type"
-            android:textSize="@dimen/sample_text_size" />
+            android:textSize="@dimen/small_text_size" />
 
         <Spinner
             android:id="@+id/add_ad_unit_type"
@@ -29,14 +29,14 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginBottom="@dimen/sample_text_size"
+        android:layout_marginBottom="@dimen/margin_large"
         android:orientation="horizontal">
 
         <TextView
-            android:layout_width="80sp"
+            android:layout_width="85dp"
             android:layout_height="wrap_content"
             android:text="@string/ad_unit_id"
-            android:textSize="@dimen/sample_text_size" />
+            android:textSize="@dimen/small_text_size" />
 
         <EditText
             android:id="@+id/add_ad_unit_id"
@@ -51,14 +51,14 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginBottom="@dimen/sample_text_size"
+        android:layout_marginBottom="@dimen/margin_large"
         android:orientation="horizontal">
 
         <TextView
-            android:layout_width="80sp"
+            android:layout_width="85dp"
             android:layout_height="wrap_content"
             android:text="@string/ad_unit_name"
-            android:textSize="@dimen/sample_text_size" />
+            android:textSize="@dimen/small_text_size" />
 
         <EditText
             android:id="@+id/add_ad_unit_description"
@@ -68,4 +68,4 @@
             android:hint="@string/ad_unit_name_hint" />
     </LinearLayout>
 
-</LinearLayout>
\ No newline at end of file
+</LinearLayout>
diff --git a/mopub-sample/res/layout/ad_configuration_list_item.xml b/mopub-sample/res/main/layout/ad_configuration_list_item.xml
similarity index 91%
rename from mopub-sample/res/layout/ad_configuration_list_item.xml
rename to mopub-sample/res/main/layout/ad_configuration_list_item.xml
index 381568cc..f7203311 100644
--- a/mopub-sample/res/layout/ad_configuration_list_item.xml
+++ b/mopub-sample/res/main/layout/ad_configuration_list_item.xml
@@ -10,7 +10,9 @@
         android:id="@+id/separator"
         style="?android:attr/listSeparatorTextViewStyle"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content" />
+        android:layout_height="56dp"
+        android:textSize="@dimen/sample_text_size"
+        android:background="@color/colorLightGray"/>
 
     <RelativeLayout
         android:layout_width="match_parent"
@@ -28,7 +30,6 @@
             android:paddingTop="8dp"
             android:singleLine="true"
             android:textColor="?android:attr/textColorPrimary"
-            android:textSize="16sp"
             android:textStyle="bold" />
 
         <TextView
@@ -36,14 +37,13 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_below="@id/banner_description"
-            android:layout_marginTop="8dp"
+            android:layout_marginTop="4dp"
             android:paddingEnd="8dp"
             android:paddingLeft="8dp"
             android:paddingRight="8dp"
             android:paddingStart="8dp"
             android:singleLine="true"
             android:textColor="?android:attr/textColorSecondary"
-            android:textSize="14sp"
             android:textStyle="normal" />
 
         <ImageView
diff --git a/mopub-sample/res/layout/ad_unit_list_fragment.xml b/mopub-sample/res/main/layout/ad_unit_list_fragment.xml
similarity index 59%
rename from mopub-sample/res/layout/ad_unit_list_fragment.xml
rename to mopub-sample/res/main/layout/ad_unit_list_fragment.xml
index 05097259..f3f9dc7e 100644
--- a/mopub-sample/res/layout/ad_unit_list_fragment.xml
+++ b/mopub-sample/res/main/layout/ad_unit_list_fragment.xml
@@ -7,11 +7,40 @@
     android:paddingBottom="8dp"
     android:textDirection="locale">
 
+    <EditText
+        android:id="@+id/search_bar_et"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_alignParentTop="true"
+        android:autofillHints="@string/filter_ads"
+        android:hint="@string/filter_ads"
+        android:imeActionId="6"
+        android:imeOptions="actionDone"
+        android:inputType="text"
+        android:maxLines="1"
+        android:paddingStart="5dp"
+        android:paddingLeft="5dp"
+        android:paddingEnd="38dp"
+        android:paddingRight="38dp" />
+
+    <Button
+        android:id="@+id/search_bar_clear_button"
+        android:layout_width="26dp"
+        android:layout_height="26dp"
+        android:layout_alignEnd="@id/search_bar_et"
+        android:layout_alignRight="@id/search_bar_et"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="7dp"
+        android:layout_marginRight="7dp"
+        android:background="@drawable/baseline_cancel_black_36" />
+
+
     <ListView
         android:id="@android:id/list"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_above="@id/status_change_notification"
+        android:layout_below="@id/search_bar_et"
         android:layout_marginBottom="10dp" />
 
     <EditText
@@ -34,8 +63,9 @@
     <Button
         android:id="@+id/add_ad_unit_button"
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_height="@dimen/button_height"
         android:layout_above="@id/version_code"
+        android:layout_alignParentBottom="true"
         android:layout_centerHorizontal="true"
         android:text="@string/add_ad_unit_button" />
 
@@ -44,6 +74,6 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
-        android:layout_centerHorizontal="true"
-        android:textSize="@dimen/detail_text_size" />
+        android:layout_margin="10dp"
+        android:textSize="@dimen/small_text_size" />
 </RelativeLayout>
diff --git a/mopub-sample/res/layout/app_bar_main.xml b/mopub-sample/res/main/layout/app_bar_main.xml
similarity index 100%
rename from mopub-sample/res/layout/app_bar_main.xml
rename to mopub-sample/res/main/layout/app_bar_main.xml
diff --git a/mopub-sample/res/layout/banner_detail_fragment.xml b/mopub-sample/res/main/layout/banner_detail_fragment.xml
similarity index 76%
rename from mopub-sample/res/layout/banner_detail_fragment.xml
rename to mopub-sample/res/main/layout/banner_detail_fragment.xml
index d4050ba1..a8daf621 100644
--- a/mopub-sample/res/layout/banner_detail_fragment.xml
+++ b/mopub-sample/res/main/layout/banner_detail_fragment.xml
@@ -2,6 +2,7 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:orientation="vertical"
     android:textDirection="locale">
 
@@ -16,7 +17,7 @@
         android:paddingTop="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="bold" />
 
     <TextView
@@ -29,7 +30,7 @@
         android:paddingStart="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="normal" />
 
     <EditText
@@ -58,17 +59,24 @@
 
         <Button
             android:id="@+id/load_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
             android:singleLine="true"
             android:text="@string/load_ad" />
     </LinearLayout>
 
     <com.mopub.mobileads.MoPubView
         android:id="@+id/banner_mopubview"
-        android:layout_width="320dp"
-        android:layout_height="50dp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
         android:layout_gravity="center_horizontal"
-        android:layout_marginTop="10dp"></com.mopub.mobileads.MoPubView>
+        android:layout_marginTop="10dp"
+        app:moPubAdSize="match_view" >
+    </com.mopub.mobileads.MoPubView>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/callbacks_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="10dp" />
 </LinearLayout>
diff --git a/mopub-sample/res/main/layout/callback_list_item.xml b/mopub-sample/res/main/layout/callback_list_item.xml
new file mode 100644
index 00000000..8e68a290
--- /dev/null
+++ b/mopub-sample/res/main/layout/callback_list_item.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <TextView
+        android:id="@+id/callback_name_tv"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginLeft="8dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginRight="8dp"
+        android:maxLines="1"
+        android:text=""
+        android:enabled="false"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body2"
+        android:textColor="?android:attr/textColorPrimary"
+        app:layout_constraintEnd_toStartOf="@+id/checkmark_iv"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/checkmark_iv"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginRight="8dp"
+        android:contentDescription="@string/checkmark"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:srcCompat="@drawable/ic_checkmark" />
+
+    <TextView
+        android:id="@+id/additional_data_tv"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginLeft="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginRight="8dp"
+        android:text=""
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
+        android:textColor="?android:attr/textColorSecondary"
+        app:layout_constraintEnd_toStartOf="@+id/checkmark_iv"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/callback_name_tv" />
+
+</android.support.constraint.ConstraintLayout>
diff --git a/mopub-sample/res/main/layout/fragment_impressions_info.xml b/mopub-sample/res/main/layout/fragment_impressions_info.xml
new file mode 100644
index 00000000..e2035481
--- /dev/null
+++ b/mopub-sample/res/main/layout/fragment_impressions_info.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/infoFragmentId"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/text_no_impressions"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_list"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/impressions_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintBottom_toTopOf="@+id/close_btn"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:listitem="@android:layout/simple_selectable_list_item" />
+
+    <Button
+        android:id="@+id/close_btn"
+        android:layout_width="wrap_content"
+        android:layout_height="@dimen/button_height"
+        android:text="@string/close"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
+</android.support.constraint.ConstraintLayout>
diff --git a/mopub-sample/res/layout/interstitial_detail_fragment.xml b/mopub-sample/res/main/layout/interstitial_detail_fragment.xml
similarity index 77%
rename from mopub-sample/res/layout/interstitial_detail_fragment.xml
rename to mopub-sample/res/main/layout/interstitial_detail_fragment.xml
index c467beb6..ee24c441 100644
--- a/mopub-sample/res/layout/interstitial_detail_fragment.xml
+++ b/mopub-sample/res/main/layout/interstitial_detail_fragment.xml
@@ -16,7 +16,7 @@
         android:paddingTop="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="bold" />
 
     <TextView
@@ -29,7 +29,7 @@
         android:paddingStart="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="normal" />
 
     <EditText
@@ -61,22 +61,29 @@
         android:visibility="gone" />
 
     <LinearLayout
-        android:layout_width="match_parent"
+        android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:orientation="horizontal">
+        android:orientation="horizontal"
+        android:layout_gravity="right">
 
         <Button
             android:id="@+id/load_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
+            android:layout_marginRight="4dp"
             android:text="@string/load_ad" />
 
         <Button
             android:id="@+id/show_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
+            android:layout_marginRight="4dp"
             android:text="@string/show_ad" />
     </LinearLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/callbacks_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="10dp" />
 </LinearLayout>
diff --git a/mopub-sample/res/layout/main.xml b/mopub-sample/res/main/layout/main.xml
similarity index 100%
rename from mopub-sample/res/layout/main.xml
rename to mopub-sample/res/main/layout/main.xml
diff --git a/mopub-sample/res/main/layout/native_ad_fan_list_item.xml b/mopub-sample/res/main/layout/native_ad_fan_list_item.xml
new file mode 100644
index 00000000..c4db8591
--- /dev/null
+++ b/mopub-sample/res/main/layout/native_ad_fan_list_item.xml
@@ -0,0 +1,86 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/native_outer_view"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@android:color/white"
+    android:textDirection="locale">
+
+    <com.facebook.ads.AdIconView
+        android:id="@+id/native_icon"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null" />
+
+    <TextView
+        android:id="@+id/native_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginLeft="84dp"
+        android:layout_marginStart="84dp"
+        android:layout_marginTop="32dp"
+        android:textColor="@android:color/darker_gray"
+        android:textStyle="bold" />
+
+    <TextView
+        android:id="@+id/native_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/native_icon"
+        android:layout_marginLeft="10dp"
+        android:layout_marginStart="10dp"
+        android:layout_marginTop="10dp"
+        android:textColor="@android:color/darker_gray" />
+
+
+    <com.facebook.ads.MediaView
+        android:id="@+id/native_media_view"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_below="@+id/native_text"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <Button
+        android:id="@+id/native_cta"
+        android:layout_width="wrap_content"
+        android:layout_height="@dimen/button_height"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_below="@+id/native_media_view"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="10dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:text="@string/learn_more"
+        android:textStyle="bold" />
+
+    <RelativeLayout
+        android:id="@+id/native_privacy_information_icon_layout"
+        android:layout_width="100dp"
+        android:layout_height="40dp"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentTop="true"
+        android:contentDescription="@string/native_privacy_information_icon_image"
+        android:padding="10dp" />
+
+</RelativeLayout>
diff --git a/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml b/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml
new file mode 100644
index 00000000..7e9b0463
--- /dev/null
+++ b/mopub-sample/res/main/layout/native_ad_flurry_list_item.xml
@@ -0,0 +1,114 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/flurry_native_outer_view"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@android:color/white">
+
+    <ImageView
+        android:id="@+id/flurry_native_icon_image"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginStart="10dp"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:background="@null" />
+
+    <TextView
+        android:id="@+id/flurry_native_title"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp"
+        android:layout_marginTop="32dp"
+        android:textColor="@android:color/darker_gray"
+        android:textStyle="bold" />
+
+    <ImageView
+        android:id="@+id/flurry_star_rating_image"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_native_title"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp" />
+
+    <TextView
+        android:id="@+id/flurry_app_category"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_star_rating_image"
+        android:layout_marginStart="84dp"
+        android:layout_marginLeft="84dp"
+        android:textColor="@android:color/black" />
+
+    <TextView
+        android:id="@+id/flurry_native_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/flurry_native_icon_image"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginStart="10dp"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:textColor="@android:color/darker_gray" />
+
+    <ImageView
+        android:id="@+id/flurry_native_main_image"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_below="@+id/flurry_native_text"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:background="@null"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <FrameLayout
+        android:id="@+id/flurry_native_video_view"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/native_main_image_height"
+        android:layout_below="@+id/flurry_native_text"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentLeft="true"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="10dp"
+        android:layout_marginRight="10dp"
+        android:contentDescription="@string/native_main_image"
+        android:scaleType="centerCrop" />
+
+    <ImageView
+        android:id="@+id/flurry_native_brand_logo"
+        android:layout_width="20dp"
+        android:layout_height="20dp"
+        android:layout_below="@+id/flurry_native_main_image"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="15dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:scaleType="fitXY" />
+
+    <Button
+        android:id="@+id/flurry_native_cta"
+        android:layout_width="wrap_content"
+        android:layout_height="@dimen/button_height"
+        android:layout_below="@+id/flurry_native_main_image"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentRight="true"
+        android:layout_marginTop="10dp"
+        android:layout_marginEnd="10dp"
+        android:layout_marginRight="10dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:text="@string/learn_more"
+        android:textStyle="bold" />
+
+</RelativeLayout>
diff --git a/mopub-sample/res/layout/native_ad_list_item.xml b/mopub-sample/res/main/layout/native_ad_list_item.xml
similarity index 95%
rename from mopub-sample/res/layout/native_ad_list_item.xml
rename to mopub-sample/res/main/layout/native_ad_list_item.xml
index 261a5d02..40341d86 100644
--- a/mopub-sample/res/layout/native_ad_list_item.xml
+++ b/mopub-sample/res/main/layout/native_ad_list_item.xml
@@ -62,7 +62,7 @@
     <Button
         android:id="@+id/native_cta"
         android:layout_width="wrap_content"
-        android:layout_height="35dp"
+        android:layout_height="@dimen/button_height"
         android:layout_alignParentEnd="true"
         android:layout_alignParentRight="true"
         android:layout_below="@+id/native_main_image"
@@ -71,10 +71,7 @@
         android:layout_marginTop="10dp"
         android:clickable="true"
         android:focusable="true"
-        android:paddingBottom="10dp"
         android:text="@string/learn_more"
-        android:textColor="@android:color/black"
-        android:textSize="12sp"
         android:textStyle="bold" />
 
     <ImageView
diff --git a/mopub-sample/res/layout/native_gallery_content.xml b/mopub-sample/res/main/layout/native_gallery_content.xml
similarity index 100%
rename from mopub-sample/res/layout/native_gallery_content.xml
rename to mopub-sample/res/main/layout/native_gallery_content.xml
diff --git a/mopub-sample/res/layout/native_gallery_fragment.xml b/mopub-sample/res/main/layout/native_gallery_fragment.xml
similarity index 94%
rename from mopub-sample/res/layout/native_gallery_fragment.xml
rename to mopub-sample/res/main/layout/native_gallery_fragment.xml
index 9054cd3e..bbecbaf2 100644
--- a/mopub-sample/res/layout/native_gallery_fragment.xml
+++ b/mopub-sample/res/main/layout/native_gallery_fragment.xml
@@ -16,7 +16,7 @@
         android:paddingTop="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="bold" />
 
     <TextView
@@ -29,7 +29,7 @@
         android:paddingStart="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="normal" />
 
     <EditText
@@ -59,7 +59,7 @@
         <Button
             android:id="@+id/load_button"
             android:layout_width="0dp"
-            android:layout_height="wrap_content"
+            android:layout_height="@dimen/button_height"
             android:layout_weight="1"
             android:text="@string/load_ad" />
     </LinearLayout>
diff --git a/mopub-sample/res/layout/native_list_view_fragment.xml b/mopub-sample/res/main/layout/native_list_view_fragment.xml
similarity index 93%
rename from mopub-sample/res/layout/native_list_view_fragment.xml
rename to mopub-sample/res/main/layout/native_list_view_fragment.xml
index 4706a243..e5a45e24 100644
--- a/mopub-sample/res/layout/native_list_view_fragment.xml
+++ b/mopub-sample/res/main/layout/native_list_view_fragment.xml
@@ -16,7 +16,7 @@
         android:paddingTop="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="bold" />
 
     <TextView
@@ -29,7 +29,7 @@
         android:paddingStart="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="normal" />
 
     <EditText
@@ -59,7 +59,7 @@
         <Button
             android:id="@+id/load_button"
             android:layout_width="0dp"
-            android:layout_height="wrap_content"
+            android:layout_height="@dimen/button_height"
             android:layout_weight="1"
             android:text="@string/load_ad" />
     </LinearLayout>
diff --git a/mopub-sample/res/main/layout/nav_header_main.xml b/mopub-sample/res/main/layout/nav_header_main.xml
new file mode 100644
index 00000000..b6459003
--- /dev/null
+++ b/mopub-sample/res/main/layout/nav_header_main.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:gravity="bottom"
+    android:theme="@style/ThemeOverlay.AppCompat.Light">
+
+    <ImageView
+        android:id="@+id/image_mopub_logo"
+        android:layout_width="@dimen/mopub_logo_width"
+        android:layout_height="@dimen/mopub_logo_height"
+        android:contentDescription="@string/mopub_logo_descr"
+        app:layout_constraintBottom_toTopOf="@id/header_shadow"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:srcCompat="@drawable/ic_mopub" />
+
+    <FrameLayout
+        android:id="@+id/header_shadow"
+        android:layout_width="match_parent"
+        android:layout_height="8dp"
+        android:background="@drawable/nav_header_shadow"
+        app:layout_constraintBottom_toBottomOf="parent"/>
+
+</android.support.constraint.ConstraintLayout>
diff --git a/mopub-sample/res/layout/networks_info_fragment.xml b/mopub-sample/res/main/layout/networks_info_fragment.xml
similarity index 85%
rename from mopub-sample/res/layout/networks_info_fragment.xml
rename to mopub-sample/res/main/layout/networks_info_fragment.xml
index 408aa4a6..3396eb30 100644
--- a/mopub-sample/res/layout/networks_info_fragment.xml
+++ b/mopub-sample/res/main/layout/networks_info_fragment.xml
@@ -2,17 +2,17 @@
 <android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/infoFrarmentId"
+    android:id="@+id/networksFragmentId"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:paddingBottom="8dp">
 
     <TextView
         android:id="@+id/text_no_adapters"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/no_network_adapters_found"
-        android:textSize="@dimen/sample_text_size"
-        app:layout_constraintBottom_toTopOf="@id/privacy_close_btn"
+        app:layout_constraintBottom_toTopOf="@id/networks_close_btn"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
@@ -28,7 +28,7 @@
     <Button
         android:id="@+id/networks_close_btn"
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_height="@dimen/button_height"
         android:text="@string/close"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="@id/networks_recycler_view"
diff --git a/mopub-sample/res/layout/privacy_info_divider.xml b/mopub-sample/res/main/layout/privacy_info_divider.xml
similarity index 95%
rename from mopub-sample/res/layout/privacy_info_divider.xml
rename to mopub-sample/res/main/layout/privacy_info_divider.xml
index 4db5df38..c3fbe7e5 100644
--- a/mopub-sample/res/layout/privacy_info_divider.xml
+++ b/mopub-sample/res/main/layout/privacy_info_divider.xml
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:background="@color/colorLightGreay">
+    android:background="@color/colorLightGray">
 
     <TextView
         android:id="@+id/text_divider"
diff --git a/mopub-sample/res/layout/privacy_info_fragment.xml b/mopub-sample/res/main/layout/privacy_info_fragment.xml
similarity index 89%
rename from mopub-sample/res/layout/privacy_info_fragment.xml
rename to mopub-sample/res/main/layout/privacy_info_fragment.xml
index ea9b5cd9..bab7a603 100644
--- a/mopub-sample/res/layout/privacy_info_fragment.xml
+++ b/mopub-sample/res/main/layout/privacy_info_fragment.xml
@@ -4,7 +4,8 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/privacyFrarmentId"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:paddingBottom="8dp">
 
     <android.support.v7.widget.RecyclerView
         android:id="@+id/privacy_recycler_view"
@@ -17,7 +18,7 @@
     <Button
         android:id="@+id/privacy_close_btn"
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_height="@dimen/button_height"
         android:text="@string/close"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="@id/privacy_recycler_view"
diff --git a/mopub-sample/res/layout/privacy_info_item.xml b/mopub-sample/res/main/layout/privacy_info_item.xml
similarity index 90%
rename from mopub-sample/res/layout/privacy_info_item.xml
rename to mopub-sample/res/main/layout/privacy_info_item.xml
index 94d3c3e5..29e6e3be 100644
--- a/mopub-sample/res/layout/privacy_info_item.xml
+++ b/mopub-sample/res/main/layout/privacy_info_item.xml
@@ -11,8 +11,6 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_margin="4dp"
-        android:textColor="@color/textDark"
-        android:textSize="16sp"
         app:layout_constraintBottom_toTopOf="@+id/privacy_desc_view"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
@@ -25,7 +23,7 @@
         android:layout_marginStart="4dp"
         android:layout_marginLeft="4dp"
         android:layout_marginBottom="4dp"
-        android:textColor="@color/textDark"
+        android:textSize="@dimen/small_text_size"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/privacy_title_view"
         tools:text="@tools:sample/lorem[4:10]" />
@@ -35,7 +33,6 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_margin="8dp"
-        android:textColor="@color/textDark"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintTop_toTopOf="parent"
diff --git a/mopub-sample/res/layout/recycler_view_fragment.xml b/mopub-sample/res/main/layout/recycler_view_fragment.xml
similarity index 82%
rename from mopub-sample/res/layout/recycler_view_fragment.xml
rename to mopub-sample/res/main/layout/recycler_view_fragment.xml
index a5fab091..039be70f 100644
--- a/mopub-sample/res/layout/recycler_view_fragment.xml
+++ b/mopub-sample/res/main/layout/recycler_view_fragment.xml
@@ -16,7 +16,7 @@
         android:paddingTop="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="bold" />
 
     <TextView
@@ -29,7 +29,7 @@
         android:paddingStart="8dp"
         android:singleLine="true"
         android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
+        android:textSize="@dimen/small_text_size"
         android:textStyle="normal" />
 
     <EditText
@@ -44,13 +44,15 @@
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
+        android:layout_gravity="end"
+        android:layout_marginBottom="4dp"
         android:orientation="horizontal">
 
         <EditText
             android:id="@+id/user_data_keywords_field"
             android:layout_width="0dp"
             android:layout_height="wrap_content"
-            android:layout_weight="3"
+            android:layout_weight="16"
             android:hint="@string/user_data_keywords"
             android:imeOptions="actionDone"
             android:inputType="text|textFilter|textShortMessage"
@@ -58,16 +60,16 @@
 
         <Button
             android:id="@+id/load_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
+            android:layout_marginRight="2dp"
             android:text="@string/load_ad" />
 
         <Button
             android:id="@+id/switch_button"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
+            android:layout_width="wrap_content"
+            android:layout_height="@dimen/button_height"
+            android:layout_marginRight="2dp"
             android:text="@string/switch_layout" />
     </LinearLayout>
 
diff --git a/mopub-sample/res/layout/video_ad_list_item.xml b/mopub-sample/res/main/layout/video_ad_list_item.xml
similarity index 96%
rename from mopub-sample/res/layout/video_ad_list_item.xml
rename to mopub-sample/res/main/layout/video_ad_list_item.xml
index 47912f25..5dbf1b16 100644
--- a/mopub-sample/res/layout/video_ad_list_item.xml
+++ b/mopub-sample/res/main/layout/video_ad_list_item.xml
@@ -62,7 +62,7 @@
     <Button
         android:id="@+id/native_cta"
         android:layout_width="wrap_content"
-        android:layout_height="35dp"
+        android:layout_height="@dimen/button_height"
         android:layout_alignParentEnd="true"
         android:layout_alignParentRight="true"
         android:layout_below="@+id/native_media_layout"
@@ -73,8 +73,6 @@
         android:focusable="true"
         android:paddingBottom="10dp"
         android:text="@string/learn_more"
-        android:textColor="@android:color/black"
-        android:textSize="12sp"
         android:textStyle="bold" />
 
     <ImageView
diff --git a/mopub-sample/res/menu/activity_main_drawer.xml b/mopub-sample/res/main/menu/activity_main_drawer.xml
similarity index 86%
rename from mopub-sample/res/menu/activity_main_drawer.xml
rename to mopub-sample/res/main/menu/activity_main_drawer.xml
index 32f2cbe2..cb743557 100644
--- a/mopub-sample/res/menu/activity_main_drawer.xml
+++ b/mopub-sample/res/main/menu/activity_main_drawer.xml
@@ -9,12 +9,12 @@
                 <item
                     android:id="@+id/nav_production"
                     android:checkable="true"
-                    android:icon="@drawable/ic_menu_slideshow"
+                    android:icon="@drawable/ic_menu_production"
                     android:title="@string/production" />
                 <item
                     android:id="@+id/nav_staging"
                     android:checkable="true"
-                    android:icon="@drawable/ic_menu_manage"
+                    android:icon="@drawable/ic_menu_staging"
                     android:title="@string/staging" />
             </group>
         </menu>
@@ -24,24 +24,24 @@
         <menu>
             <item
                 android:id="@+id/nav_privacy_info"
-                android:icon="@drawable/ic_menu_adapters"
+                android:icon="@drawable/ic_menu_info"
                 android:title="@string/information" />
             <group android:checkableBehavior="single">
                 <item
                     android:id="@+id/nav_privacy_grant"
                     android:checkable="true"
-                    android:icon="@drawable/ic_menu_lock"
+                    android:icon="@drawable/ic_menu_grant"
                     android:title="@string/grant_consent" />
                 <item
                     android:id="@+id/nav_privacy_revoke"
                     android:checkable="true"
-                    android:icon="@drawable/ic_menu_unlock"
+                    android:icon="@drawable/ic_menu_revoke"
                     android:title="@string/revoke_consent" />
             </group>
             <item
                 android:id="@+id/nav_force_gdpr"
                 android:checkable="true"
-                android:icon="@drawable/ic_menu_info"
+                android:icon="@drawable/ic_menu_force_gdpr"
                 android:title="@string/force_gdpr_applicable" />
         </menu>
     </item>
diff --git a/mopub-sample/res/main/menu/main.xml b/mopub-sample/res/main/menu/main.xml
new file mode 100644
index 00000000..966d6451
--- /dev/null
+++ b/mopub-sample/res/main/menu/main.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_impressions"
+        android:orderInCategory="100"
+        android:title="@string/impressions_text"
+        app:showAsAction="never" />
+
+    <item
+        android:id="@+id/action_clear_logs"
+        android:orderInCategory="101"
+        android:title="@string/clear_logs"
+        app:showAsAction="never" />
+</menu>
diff --git a/mopub-sample/res/main/values-sw400dp/dimens.xml b/mopub-sample/res/main/values-sw400dp/dimens.xml
new file mode 100644
index 00000000..8d8ce8c4
--- /dev/null
+++ b/mopub-sample/res/main/values-sw400dp/dimens.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="native_main_image_height">200dp</dimen>
+    <dimen name="sample_text_size">18sp</dimen>
+    <dimen name="small_text_size">14sp</dimen>
+    <dimen name="button_text_size">15sp</dimen>
+</resources>
diff --git a/mopub-sample/res/main/values-sw600dp/dimens.xml b/mopub-sample/res/main/values-sw600dp/dimens.xml
new file mode 100644
index 00000000..20258fec
--- /dev/null
+++ b/mopub-sample/res/main/values-sw600dp/dimens.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="native_main_image_height">300dp</dimen>
+    <dimen name="sample_text_size">19sp</dimen>
+    <dimen name="small_text_size">16sp</dimen>
+    <dimen name="button_text_size">17sp</dimen>
+</resources>
diff --git a/mopub-sample/res/main/values-sw800dp/dimens.xml b/mopub-sample/res/main/values-sw800dp/dimens.xml
new file mode 100644
index 00000000..822d1eab
--- /dev/null
+++ b/mopub-sample/res/main/values-sw800dp/dimens.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="native_main_image_height">400dp</dimen>
+    <dimen name="sample_text_size">20sp</dimen>
+    <dimen name="small_text_size">17sp</dimen>
+    <dimen name="button_text_size">17sp</dimen>
+</resources>
diff --git a/mopub-sample/res/values-v21/styles.xml b/mopub-sample/res/main/values-v21/styles.xml
similarity index 100%
rename from mopub-sample/res/values-v21/styles.xml
rename to mopub-sample/res/main/values-v21/styles.xml
diff --git a/mopub-sample/res/values-v28/styles.xml b/mopub-sample/res/main/values-v28/styles.xml
similarity index 76%
rename from mopub-sample/res/values-v28/styles.xml
rename to mopub-sample/res/main/values-v28/styles.xml
index a434e28e..6f20b425 100644
--- a/mopub-sample/res/values-v28/styles.xml
+++ b/mopub-sample/res/main/values-v28/styles.xml
@@ -3,6 +3,6 @@
         <item name="windowActionBar">false</item>
         <item name="windowNoTitle">true</item>
         <item name="android:statusBarColor">@android:color/transparent</item>
-        <item name="android:windowLayoutInDisplayCutoutMode">never</item>
+        <item name="android:windowLayoutInDisplayCutoutMode">shortEdges</item>
     </style>
 </resources>
diff --git a/mopub-sample/res/main/values/colors.xml b/mopub-sample/res/main/values/colors.xml
new file mode 100644
index 00000000..92087ea5
--- /dev/null
+++ b/mopub-sample/res/main/values/colors.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#ffffff</color>
+    <color name="colorAccent">#1DA1F2</color>
+    <color name="colorLightGray">#ffE6ECF0</color>
+    <color name="listLight">#ffffffff</color>
+    <color name="listDark">#fff2f2f2</color>
+    <color name="colorText">#14171A</color>
+    <color name="colorTextSecondary">#657786</color>
+    <color name="colorDivider">#CCD6DD</color>
+    <color name="colorStatusBar">#ffE6ECF0</color>
+    <color name="colorButton">#1DA1F2</color>
+    <color name="colorButtonText">#ffffff</color>
+    <color name="colorWhite">#ffffff</color>
+</resources>
diff --git a/mopub-sample/res/main/values/dimens.xml b/mopub-sample/res/main/values/dimens.xml
new file mode 100644
index 00000000..a14bf7c2
--- /dev/null
+++ b/mopub-sample/res/main/values/dimens.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="sample_text_size">16sp</dimen>
+    <dimen name="small_text_size">13sp</dimen>
+    <dimen name="button_text_size">13sp</dimen>
+    <dimen name="native_main_image_height">200dp</dimen>
+    <dimen name="banner_width">320dp</dimen>
+    <dimen name="banner_height">50dp</dimen>
+    <dimen name="medium_rectangle_width">300dp</dimen>
+    <dimen name="medium_rectangle_height">250dp</dimen>
+
+    <!-- Navigation dimensions -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="nav_header_vertical_spacing">8dp</dimen>
+    <dimen name="nav_header_height">172dp</dimen>
+    <dimen name="button_height">36dp</dimen>
+    <dimen name="mopub_logo_width">168dp</dimen>
+    <dimen name="mopub_logo_height">50dp</dimen>
+    <dimen name="margin_large">16dp</dimen>
+    <dimen name="padding_large">16dp</dimen>
+</resources>
diff --git a/mopub-sample/res/main/values/drawables.xml b/mopub-sample/res/main/values/drawables.xml
new file mode 100644
index 00000000..1fd1407c
--- /dev/null
+++ b/mopub-sample/res/main/values/drawables.xml
@@ -0,0 +1,9 @@
+<resources xmlns:android="http://schemas.android.com/apk/res/android">
+    <item name="ic_menu_revoke" type="drawable">@drawable/ic_no</item>
+    <item name="ic_menu_grant" type="drawable">@drawable/ic_lock</item>
+    <item name="ic_menu_production" type="drawable">@drawable/ic_checkmark_circle</item>
+    <item name="ic_menu_staging" type="drawable">@drawable/ic_checkmark_circle</item>
+    <item name="ic_menu_adapters" type="drawable">@drawable/ic_share_android</item>
+    <item name="ic_menu_info" type="drawable">@drawable/ic_information_circle</item>
+    <item name="ic_menu_force_gdpr" type="drawable">@drawable/ic_globe_stroke</item>
+</resources>
diff --git a/mopub-sample/res/values/strings.xml b/mopub-sample/res/main/values/strings.xml
similarity index 84%
rename from mopub-sample/res/values/strings.xml
rename to mopub-sample/res/main/values/strings.xml
index 44da6a24..981938b7 100644
--- a/mopub-sample/res/values/strings.xml
+++ b/mopub-sample/res/main/values/strings.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">MoPub Sample App</string>
+    <string name="app_name">MoPub</string>
+    <string name="app_title">MoPub Sample App</string>
     <string name="keywords">Keywords (optional)</string>
     <string name="user_data_keywords">User Data Keywords (optional)</string>
     <string name="custom_data">Custom Data (optional)</string>
@@ -19,10 +20,9 @@
     <string name="ad_unit_name_hint">Enter Name</string>
     <string name="ad_type">Ad Type:</string>
     <string name="add_ad_unit_title">Add an Ad Unit</string>
-    <string name="add_ad_unit_button">Add an Ad Unit</string>
+    <string name="add_ad_unit_button">New ad unit</string>
     <string name="ad_unit_id_banner">b195f8dd8ded45fe847ad89ed1d016da</string>
-    <string name="ad_unit_id_mrect">252412d5e9364a05ab77d9396346d73d</string>
-    <string name="ad_unit_id_leaderboard">a8919cca19784497872ae69d48f678e1</string>
+    <string name="ad_unit_id_medium_rectangle">252412d5e9364a05ab77d9396346d73d</string>
     <string name="ad_unit_id_interstitial">24534e1901884e398f1253216226017e</string>
     <string name="ad_unit_id_rewarded_video">920b6145fb1546cf8b5cf2ac34638bb7</string>
     <string name="ad_unit_id_rewarded_rich_media">a96ae2ef41d44822af45c6328c4e1eb1</string>
@@ -54,4 +54,11 @@
     <string name="network_adapters">Network Adapters</string>
     <string name="pim_is_not_available">getPersonalInformationManager() returned null</string>
     <string name="list_fragment_not_found">Can\'t find MoPubListFragment.</string>
+    <string name="filter_ads">Filter ads</string>
+    <string name="impressions_text">Impressions</string>
+    <string name="clear_logs">Clear logs</string>
+    <string name="empty_list">Empty list</string>
+    <string name="share_impression">Share Impression</string>
+    <string name="checkmark">checkmark</string>
+
 </resources>
diff --git a/mopub-sample/res/main/values/styles.xml b/mopub-sample/res/main/values/styles.xml
new file mode 100644
index 00000000..86ed486a
--- /dev/null
+++ b/mopub-sample/res/main/values/styles.xml
@@ -0,0 +1,50 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorWhite</item>
+        <item name="colorPrimaryDark">@color/colorStatusBar</item>
+        <item name="colorControlHighlight">@color/colorAccent</item>
+        <item name="colorAccent">@color/colorAccent</item>
+        <item name="android:colorBackground">@color/colorWhite</item>
+        <item name="android:textColor">@color/colorText</item>
+        <item name="android:buttonBarButtonStyle">@style/MoButtonBarButtonStyle</item>
+        <item name="android:textColorSecondary">@color/colorTextSecondary</item>
+        <item name="android:textSize">@dimen/sample_text_size</item>
+        <item name="android:windowLightStatusBar">true</item>
+
+        <item name="buttonStyle">@style/MoButton</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+    <style name="MoButton" parent="Widget.AppCompat.Button">
+        <item name="android:textAllCaps">false</item>
+        <item name="android:textColor">@color/button_text_color</item>
+        <item name="android:background">@drawable/mopub_button_custom</item>
+        <item name="android:textSize">@dimen/button_text_size</item>
+    </style>
+
+    <style name="MoButtonBarButtonStyle" parent="MoButton">
+        <item name="android:minWidth">10dp</item>
+        <item name="android:minHeight">10dp</item>
+        <item name="android:paddingStart">14dp</item>
+        <item name="android:paddingLeft">14dp</item>
+        <item name="android:paddingRight">14dp</item>
+        <item name="android:paddingEnd">14dp</item>
+        <item name="android:layout_marginLeft">4dp</item>
+        <item name="android:layout_marginStart">4dp</item>
+        <item name="android:layout_marginRight">4dp</item>
+        <item name="android:layout_marginEnd">4dp</item>
+        <item name="android:paddingTop">10dp</item>
+        <item name="android:paddingBottom">10dp</item>
+    </style>
+</resources>
diff --git a/mopub-sample/res/xml/network_security_config.xml b/mopub-sample/res/main/xml/network_security_config.xml
similarity index 100%
rename from mopub-sample/res/xml/network_security_config.xml
rename to mopub-sample/res/main/xml/network_security_config.xml
diff --git a/mopub-sample/res/menu/main.xml b/mopub-sample/res/menu/main.xml
deleted file mode 100644
index a2411e31..00000000
--- a/mopub-sample/res/menu/main.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-</menu>
diff --git a/mopub-sample/res/values-sw400dp/dimens.xml b/mopub-sample/res/values-sw400dp/dimens.xml
deleted file mode 100644
index 76535326..00000000
--- a/mopub-sample/res/values-sw400dp/dimens.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="native_main_image_height">200dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/mopub-sample/res/values-sw600dp/dimens.xml b/mopub-sample/res/values-sw600dp/dimens.xml
deleted file mode 100644
index 512868f9..00000000
--- a/mopub-sample/res/values-sw600dp/dimens.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="native_main_image_height">300dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/mopub-sample/res/values-sw800dp/dimens.xml b/mopub-sample/res/values-sw800dp/dimens.xml
deleted file mode 100644
index 9980b5c3..00000000
--- a/mopub-sample/res/values-sw800dp/dimens.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="native_main_image_height">400dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/mopub-sample/res/values/colors.xml b/mopub-sample/res/values/colors.xml
deleted file mode 100644
index 9305825e..00000000
--- a/mopub-sample/res/values/colors.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="colorPrimary">#008577</color>
-    <color name="colorPrimaryDark">#00574B</color>
-    <color name="colorAccent">#D81B60</color>
-    <color name="colorLightGreay">#46cccccc</color>
-    <color name="textDark">#ff070707</color>
-</resources>
diff --git a/mopub-sample/res/values/dimens.xml b/mopub-sample/res/values/dimens.xml
deleted file mode 100644
index 403f81f7..00000000
--- a/mopub-sample/res/values/dimens.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="sample_text_size">16sp</dimen>
-    <dimen name="spinner_text_size">20sp</dimen>
-    <dimen name="detail_text_size">10sp</dimen>
-    <dimen name="title_size">24sp</dimen>
-    <dimen name="native_main_image_height">200dp</dimen>
-    <dimen name="banner_width">320dp</dimen>
-    <dimen name="banner_height">50dp</dimen>
-    <dimen name="mrect_width">300dp</dimen>
-    <dimen name="mrect_height">250dp</dimen>
-    <dimen name="leaderboard_width">728dp</dimen>
-    <dimen name="leaderboard_height">90dp</dimen>
-    <dimen name="skyscraper_width">160dp</dimen>
-    <dimen name="skyscraper_height">600dp</dimen>
-
-    <!-- Navigation dimensions -->
-    <dimen name="activity_horizontal_margin">16dp</dimen>
-    <dimen name="activity_vertical_margin">16dp</dimen>
-    <dimen name="nav_header_vertical_spacing">8dp</dimen>
-    <dimen name="nav_header_height">176dp</dimen>
-</resources>
diff --git a/mopub-sample/res/values/drawables.xml b/mopub-sample/res/values/drawables.xml
deleted file mode 100644
index 1e963693..00000000
--- a/mopub-sample/res/values/drawables.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <item name="ic_menu_unlock" type="drawable">@android:drawable/ic_lock_idle_lock</item>
-    <item name="ic_menu_lock" type="drawable">@android:drawable/ic_lock_lock</item>
-    <item name="ic_menu_slideshow" type="drawable">@android:drawable/ic_menu_slideshow</item>
-    <item name="ic_menu_manage" type="drawable">@android:drawable/ic_menu_manage</item>
-    <item name="ic_menu_adapters" type="drawable">@android:drawable/ic_menu_info_details</item>
-    <item name="ic_menu_info" type="drawable">@android:drawable/ic_dialog_info</item>
-</resources>
diff --git a/mopub-sample/res/values/styles.xml b/mopub-sample/res/values/styles.xml
deleted file mode 100644
index 545b9c6d..00000000
--- a/mopub-sample/res/values/styles.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-        <item name="colorPrimary">@color/colorPrimary</item>
-        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-    </style>
-
-    <style name="AppTheme.NoActionBar">
-        <item name="windowActionBar">false</item>
-        <item name="windowNoTitle">true</item>
-    </style>
-
-    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
-
-    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
-
-</resources>
diff --git a/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java b/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
index 19274d1f..d513f43f 100644
--- a/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
+++ b/mopub-sample/src/androidTest/java/com/mopub/framework/base/BasePage.java
@@ -13,7 +13,7 @@
 import static android.support.test.espresso.Espresso.onView;
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
-import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static android.support.test.espresso.matcher.ViewMatchers.isEnabled;
 import static android.support.test.espresso.matcher.ViewMatchers.isRoot;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withResourceName;
@@ -98,7 +98,7 @@ public boolean waitForElement(@NonNull final ViewInteraction element, final int
         int i = 0;
         while (i++ < timeoutInSeconds * SAMPLES_PER_SEC) {
             try {
-                element.check(matches(isDisplayed()));
+                element.check(matches(isEnabled()));
                 return true;
             } catch (Exception e) {
                 try {
diff --git a/mopub-sample/src/androidTest/java/com/mopub/framework/models/BannerAdLabels.java b/mopub-sample/src/androidTest/java/com/mopub/framework/models/BannerAdLabels.java
index dc4d798a..ff0fd27f 100644
--- a/mopub-sample/src/androidTest/java/com/mopub/framework/models/BannerAdLabels.java
+++ b/mopub-sample/src/androidTest/java/com/mopub/framework/models/BannerAdLabels.java
@@ -9,11 +9,8 @@
     // Banner
     public static final String BANNER = "MoPub Banner Sample";
 
-    // MRECT
-    public static final String MRECT = "MoPub Mrect Sample";
-
-    // Leaderboard
-    public static final String LEADERBOARD = "MoPub Leaderboard Sample";
+    // MEDIUM_RECTANGLE
+    public static final String MEDIUM_RECTANGLE = "MoPub MediumRectangle Sample";
 
     // Interstitial
     public static final String INTERSTITIAL = "MoPub Interstitial Sample";
diff --git a/mopub-sample/src/androidTest/java/com/mopub/framework/pages/AdListPage.java b/mopub-sample/src/androidTest/java/com/mopub/framework/pages/AdListPage.java
index 11860ad1..0da79936 100644
--- a/mopub-sample/src/androidTest/java/com/mopub/framework/pages/AdListPage.java
+++ b/mopub-sample/src/androidTest/java/com/mopub/framework/pages/AdListPage.java
@@ -25,9 +25,7 @@
 
     public enum AdUnitType {
         BANNER("Banner"),
-        MRECT("Mrect"),
-        LEADERBOARD("Leaderboard"),
-        SKYSCRAPER("Skyscraper"),
+        MEDIUM_RECTANGLE("Medium Rectangle"),
         INTERSTITIAL("Interstitial"),
         REWARDED_VIDEO("Rewarded Video"),
         NATIVE_LIST_VIEW("Native List View"),
diff --git a/mopub-sample/src/androidTest/java/com/mopub/tests/LeaderboardAdTests.java b/mopub-sample/src/androidTest/java/com/mopub/tests/LeaderboardAdTests.java
deleted file mode 100644
index 1a01ca73..00000000
--- a/mopub-sample/src/androidTest/java/com/mopub/tests/LeaderboardAdTests.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.mopub.tests;
-
-import android.support.test.espresso.ViewInteraction;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
-import com.mopub.framework.models.BannerAdLabels;
-import com.mopub.framework.pages.AdDetailPage;
-import com.mopub.framework.pages.AdListPage;
-import com.mopub.framework.pages.AdListPage.AdUnitType;
-import com.mopub.simpleadsdemo.R;
-import com.mopub.tests.base.MoPubBaseTestCase;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
-import static android.support.test.espresso.Espresso.onView;
-import static android.support.test.espresso.matcher.ViewMatchers.hasChildCount;
-import static android.support.test.espresso.matcher.ViewMatchers.withId;
-import static android.support.test.espresso.matcher.ViewMatchers.withText;
-import static org.hamcrest.Matchers.allOf;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(AndroidJUnit4.class)
-@LargeTest
-public class LeaderboardAdTests extends MoPubBaseTestCase {
-
-    // Test Variables
-    private static final AdUnitType AD_TYPE = AdUnitType.LEADERBOARD;
-    private static final String TITLE = BannerAdLabels.LEADERBOARD;
-    private static final String WEB_PAGE_LINK = "https://www.mopub.com/click-test/";
-
-    /*
-     * Verify that the Leaderboard Ad is successfully loaded and displayed on
-     * the app.
-     */
-    @Test
-    public void adsDetailsPage_withClickOnMoPubLeaderboardSample_shouldLoadMoPubLeaderboard() {
-        final AdListPage adListPage = new AdListPage();
-        final AdDetailPage adDetailPage = adListPage.clickCell(TITLE);
-
-        final ViewInteraction bannerElement = onView(allOf(withId(R.id.banner_mopubview), hasChildCount(1)));
-
-        assertTrue(adDetailPage.waitForElement(bannerElement));
-    }
-
-    /*
-     * Verify that the Leaderboard Ad fails to load on the app.
-     */
-    @Test
-    public void adsDetailsPage_withClickOnMoPubLeaderboardSample_shouldNotLoadMoPubLeaderboard() {
-        final String fakeAdUnit = "abc";
-        final String adUnitTitle = "Leaderboard Automation Test";
-
-        final AdListPage adListPage = new AdListPage();
-        adListPage.addAdUnit(AD_TYPE, fakeAdUnit, adUnitTitle);
-
-        final AdDetailPage adDetailPage = adListPage.clickCell(adUnitTitle);
-
-        final ViewInteraction bannerElement = onView(allOf(withId(R.id.banner_mopubview),
-                hasChildCount(1)));
-
-        assertTrue(!adDetailPage.waitForElement(bannerElement));
-
-        // Clean Up
-        adListPage.deleteAdUnit(adUnitTitle);
-    }
-
-    /*
-     * Verify that the user is correctly navigated to
-     * Leaderboard Ad's url on click.
-     */
-    @Test
-    public void adsDetailsPage_withClickOnMoPubLeaderboardAd_shouldShowMoPubBrowser() {
-        final AdListPage adListPage = new AdListPage();
-        final AdDetailPage adDetailPage = adListPage.clickCell(TITLE);
-
-        final ViewInteraction bannerElement = onView(allOf(withId(R.id.banner_mopubview), hasChildCount(1)));
-        adDetailPage.clickElement(bannerElement);
-
-        final ViewInteraction browserLinkElement = onView(withText(WEB_PAGE_LINK));
-
-        assertTrue(adDetailPage.waitForElement(browserLinkElement));
-    }
-}
diff --git a/mopub-sample/src/androidTest/java/com/mopub/tests/MRectAdTests.java b/mopub-sample/src/androidTest/java/com/mopub/tests/MediumRectangleAdTests.java
similarity index 77%
rename from mopub-sample/src/androidTest/java/com/mopub/tests/MRectAdTests.java
rename to mopub-sample/src/androidTest/java/com/mopub/tests/MediumRectangleAdTests.java
index 53c72b22..d38b776a 100644
--- a/mopub-sample/src/androidTest/java/com/mopub/tests/MRectAdTests.java
+++ b/mopub-sample/src/androidTest/java/com/mopub/tests/MediumRectangleAdTests.java
@@ -26,16 +26,16 @@
 public class MRectAdTests extends MoPubBaseTestCase {
 
     // Test Variables
-    private static final AdUnitType AD_TYPE = AdUnitType.MRECT;
-    private static final String TITLE = BannerAdLabels.MRECT;
+    private static final AdUnitType AD_TYPE = AdUnitType.MEDIUM_RECTANGLE;
+    private static final String TITLE = BannerAdLabels.MEDIUM_RECTANGLE;
     private static final String WEB_PAGE_LINK = "https://www.mopub.com/click-test/";
 
     /*
-     * Verify that the MRECT Ad is successfully loaded and displayed on
+     * Verify that the MEDIUM_RECTANGLE Ad is successfully loaded and displayed on
      * the app.
      */
     @Test
-    public void adsDetailsPage_withClickOnMoPubMrectSample_shouldLoadMoPubMrect() {
+    public void adsDetailsPage_withClickOnMoPubMediumRectangleSample_shouldLoadMoPubMediumRectangle() {
         final AdListPage adListPage = new AdListPage();
         final AdDetailPage adDetailPage = adListPage.clickCell(TITLE);
 
@@ -46,12 +46,12 @@ public void adsDetailsPage_withClickOnMoPubMrectSample_shouldLoadMoPubMrect() {
     }
 
     /*
-     * Verify that the MRECT Ad fails to load on the app.
+     * Verify that the MEDIUM_RECTANGLE Ad fails to load on the app.
      */
     @Test
-    public void adsDetailsPage_withClickOnMoPubMrectSample_shouldNotLoadMoPubMrect() {
+    public void adsDetailsPage_withClickOnMoPubMediumRectangleSample_shouldNotLoadMoPubMediumRectangle() {
         final String fakeAdUnit = "abc";
-        final String adUnitTitle = "MRECT Automation Test";
+        final String adUnitTitle = "MEDIUM_RECTANGLE Automation Test";
 
         final AdListPage adListPage = new AdListPage();
         adListPage.addAdUnit(AD_TYPE, fakeAdUnit, adUnitTitle);
@@ -69,10 +69,10 @@ public void adsDetailsPage_withClickOnMoPubMrectSample_shouldNotLoadMoPubMrect()
 
     /*
      * Verify that the user is correctly navigated to
-     * MRECT Ad's url on click.
+     * MEDIUM_RECTANGLE Ad's url on click.
      */
     @Test
-    public void adsDetailsPage_withClickOnMoPubMrectAd_shouldShowMoPubBrowser() {
+    public void adsDetailsPage_withClickOnMoPubMediumRectangleAd_shouldShowMoPubBrowser() {
         final AdListPage adListPage = new AdListPage();
         final AdDetailPage adDetailPage = adListPage.clickCell(TITLE);
 
diff --git a/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java
new file mode 100644
index 00000000..ea944ecc
--- /dev/null
+++ b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleActivityUtils.java
@@ -0,0 +1,18 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.support.annotation.NonNull;
+
+import com.mopub.common.Preconditions;
+import com.mopub.common.SdkConfiguration;
+
+class SampleActivityUtils {
+    static void addDefaultNetworkConfiguration(@NonNull final SdkConfiguration.Builder builder) {
+        Preconditions.checkNotNull(builder);
+
+        // We have no default networks to initialize
+    }
+}
diff --git a/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java
new file mode 100644
index 00000000..29c3e7a1
--- /dev/null
+++ b/mopub-sample/src/external/java/com/mopub/simpleadsdemo/SampleAppDefaultAdUnits.java
@@ -0,0 +1,57 @@
+package com.mopub.simpleadsdemo;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+
+import com.mopub.common.Preconditions;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MEDIUM_RECTANGLE;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.REWARDED_VIDEO;
+
+enum SampleAppDefaultAdUnits {
+    SAMPLE_BANNER(R.string.ad_unit_id_banner, BANNER, "MoPub Banner Sample"),
+    SAMPLE_MEDIUM_RECTANGLE(R.string.ad_unit_id_medium_rectangle, MEDIUM_RECTANGLE, "MoPub Medium Rectangle Sample"),
+    SAMPLE_INTERSTITIAL(R.string.ad_unit_id_interstitial, INTERSTITIAL,
+            "MoPub Interstitial Sample"),
+    SAMPLE_REWARDED_VIDEO(R.string.ad_unit_id_rewarded_video, REWARDED_VIDEO,
+            "MoPub Rewarded Video Sample"),
+    SAMPLE_REWARDED_RICH_MEDIA(R.string.ad_unit_id_rewarded_rich_media, REWARDED_VIDEO,
+            "MoPub Rewarded Rich Media Sample"),
+    SAMPLE_NATIVE_LIST_VIEW(R.string.ad_unit_id_native, LIST_VIEW, "MoPub Ad Placer Sample"),
+    SAMPLE_NATIVE_RECYCLER_VIEW(R.string.ad_unit_id_native, RECYCLER_VIEW,
+            "MoPub Recycler View Sample"),
+    SAMPLE_NATIVE_VIEW_PAGER(R.string.ad_unit_id_native, CUSTOM_NATIVE, "MoPub View Pager Sample");
+
+    private int mAdUnitIdStringKey;
+    @NonNull private MoPubSampleAdUnit.AdType mAdType;
+    @NonNull private String mDescription;
+
+    SampleAppDefaultAdUnits(final int adUnitIdStringKey,
+            @NonNull final MoPubSampleAdUnit.AdType adType, @NonNull final String description) {
+        mAdUnitIdStringKey = adUnitIdStringKey;
+        mAdType = adType;
+        mDescription = description;
+    }
+
+    static List<MoPubSampleAdUnit> getDefaultAdUnits(@NonNull final Context context) {
+        Preconditions.checkNotNull(context);
+
+        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<>();
+        for (SampleAppDefaultAdUnits adUnit : SampleAppDefaultAdUnits.values()) {
+            adUnitList.add(
+                    new com.mopub.simpleadsdemo.MoPubSampleAdUnit
+                            .Builder(context.getString(adUnit.mAdUnitIdStringKey), adUnit.mAdType)
+                            .description(adUnit.mDescription)
+                            .build());
+        }
+        return adUnitList;
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
index b325f597..8b9e8058 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
@@ -4,8 +4,13 @@
 
 package com.mopub.simpleadsdemo;
 
+import android.content.Context;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -28,10 +33,36 @@
 public abstract class AbstractBannerDetailFragment extends Fragment implements BannerAdListener {
     private MoPubView mMoPubView;
     private MoPubSampleAdUnit mMoPubSampleAdUnit;
+    @Nullable private CallbacksAdapter mCallbacksAdapter;
 
-    public abstract int getWidth();
+    public abstract MoPubView.MoPubAdSize getAdSize();
 
-    public abstract int getHeight();
+    private enum BannerCallbacks {
+        LOADED("onBannerLoaded"),
+        FAILED("onBannerFailed"),
+        CLICKED("onBannerClicked"),
+        EXPANDED("onBannerExpanded"),
+        COLLAPSED("onBannerCollapsed");
+
+        BannerCallbacks(@NonNull final String name) {
+            this.name = name;
+        }
+
+        @NonNull
+        private final String name;
+
+        @Override
+        @NonNull
+        public String toString() {
+            return name;
+        }
+    }
+
+    @Override
+    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
+        super.onActivityCreated(savedInstanceState);
+        mMoPubView.loadAd();
+    }
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
@@ -44,9 +75,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mMoPubView = (MoPubView) view.findViewById(R.id.banner_mopubview);
         LinearLayout.LayoutParams layoutParams =
                 (LinearLayout.LayoutParams) mMoPubView.getLayoutParams();
-        layoutParams.width = getWidth();
-        layoutParams.height = getHeight();
         mMoPubView.setLayoutParams(layoutParams);
+        mMoPubView.setAdSize(getAdSize());
 
         views.mKeywordsField.setText(getArguments().getString(MoPubListFragment.KEYWORDS_KEY, ""));
         views.mUserDataKeywordsField.setText(getArguments().getString(MoPubListFragment.USER_DATA_KEYWORDS_KEY, ""));
@@ -60,11 +90,22 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             public void onClick(View view) {
                 final String keywords = views.mKeywordsField.getText().toString();
                 final String userDataKeywords = views.mUserDataKeywordsField.getText().toString();
-                loadMoPubView(adUnitId, keywords, userDataKeywords);
+                setupMoPubView(adUnitId, keywords, userDataKeywords);
+                mMoPubView.loadAd();
             }
         });
+
+        final RecyclerView callbacksView = view.findViewById(R.id.callbacks_recycler_view);
+        final Context context = getContext();
+        if (callbacksView != null && context != null) {
+            callbacksView.setLayoutManager(new LinearLayoutManager(context));
+            mCallbacksAdapter = new CallbacksAdapter(context);
+            mCallbacksAdapter.generateCallbackList(BannerCallbacks.class);
+            callbacksView.setAdapter(mCallbacksAdapter);
+        }
+
         mMoPubView.setBannerAdListener(this);
-        loadMoPubView(adUnitId, null, null);
+        setupMoPubView(adUnitId, null, null);
 
         return view;
     }
@@ -79,11 +120,13 @@ public void onDestroyView() {
         }
     }
 
-    private void loadMoPubView(final String adUnitId, final String keywords, final String userDataKeywords) {
+    private void setupMoPubView(final String adUnitId, final String keywords, final String userDataKeywords) {
         mMoPubView.setAdUnitId(adUnitId);
         mMoPubView.setKeywords(keywords);
         mMoPubView.setUserDataKeywords(userDataKeywords);
-        mMoPubView.loadAd();
+        if (mCallbacksAdapter != null) {
+            mCallbacksAdapter.generateCallbackList(BannerCallbacks.class);
+        }
     }
 
     private String getName() {
@@ -96,27 +139,47 @@ private String getName() {
     // BannerAdListener
     @Override
     public void onBannerLoaded(MoPubView banner) {
-        logToast(getActivity(), getName() + " loaded.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), getName() + " loaded.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.LOADED.toString());
     }
 
     @Override
     public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
         final String errorMessage = (errorCode != null) ? errorCode.toString() : "";
-        logToast(getActivity(), getName() + " failed to load: " + errorMessage);
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), getName() + " failed to load: " + errorMessage);
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.FAILED.toString(), errorMessage);
     }
 
     @Override
     public void onBannerClicked(MoPubView banner) {
-        logToast(getActivity(), getName() + " clicked.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), getName() + " clicked.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.CLICKED.toString());
     }
 
     @Override
     public void onBannerExpanded(MoPubView banner) {
-        logToast(getActivity(), getName() + " expanded.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), getName() + " expanded.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.EXPANDED.toString());
     }
 
     @Override
     public void onBannerCollapsed(MoPubView banner) {
-        logToast(getActivity(), getName() + " collapsed.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), getName() + " collapsed.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(BannerCallbacks.COLLAPSED.toString());
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
index c6aa5073..03f42e39 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
@@ -25,14 +25,6 @@
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.COLUMN_USER_GENERATED;
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.TABLE_AD_CONFIGURATIONS;
 import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LEADERBOARD;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MRECT;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.REWARDED_VIDEO;
 
 class AdUnitDataSource {
     private Context mContext;
@@ -129,65 +121,14 @@ private void deleteAllAdUnitsWithAdUnitIdAndAdType(@NonNull final String adUnitI
         return adConfigurations;
     }
 
-    List<MoPubSampleAdUnit> getDefaultAdUnits() {
-        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<>();
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_banner), BANNER)
-                        .description("MoPub Banner Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_mrect), MRECT)
-                        .description("MoPub Mrect Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_leaderboard), LEADERBOARD)
-                        .description("MoPub Leaderboard Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_interstitial), INTERSTITIAL)
-                        .description("MoPub Interstitial Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_rewarded_video),
-                        REWARDED_VIDEO)
-                        .description("MoPub Rewarded Video Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_rewarded_rich_media),
-                        REWARDED_VIDEO)
-                        .description("MoPub Rewarded Rich Media Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), LIST_VIEW)
-                        .description("MoPub Ad Placer Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), RECYCLER_VIEW)
-                        .description("MoPub Recycler View Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), CUSTOM_NATIVE)
-                        .description("MoPub View Pager Sample")
-                        .build());
-        return adUnitList;
-    }
-
     private void populateDefaultSampleAdUnits() {
         final HashSet<MoPubSampleAdUnit> allAdUnits = new HashSet<>();
         for (final MoPubSampleAdUnit adUnit : getAllAdUnits()) {
             allAdUnits.add(adUnit);
         }
 
-        for (final MoPubSampleAdUnit defaultAdUnit : getDefaultAdUnits()) {
+        for (final MoPubSampleAdUnit defaultAdUnit :
+                SampleAppDefaultAdUnits.getDefaultAdUnits(mContext)) {
             if (!allAdUnits.contains(defaultAdUnit)) {
                 createDefaultSampleAdUnit(defaultAdUnit);
             }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
index ba05b8f3..a552ef4a 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
@@ -4,15 +4,12 @@
 
 package com.mopub.simpleadsdemo;
 
-public class BannerDetailFragment extends AbstractBannerDetailFragment {
+import com.mopub.mobileads.MoPubView;
 
-    @Override
-    public int getWidth() {
-        return (int) getResources().getDimension(R.dimen.banner_width);
-    }
+public class BannerDetailFragment extends AbstractBannerDetailFragment {
 
     @Override
-    public int getHeight() {
-        return (int) getResources().getDimension(R.dimen.banner_height);
+    public MoPubView.MoPubAdSize getAdSize() {
+        return MoPubView.MoPubAdSize.HEIGHT_250;
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbackDataItem.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbackDataItem.java
new file mode 100644
index 00000000..c8ef6f25
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbackDataItem.java
@@ -0,0 +1,74 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+public class CallbackDataItem {
+
+    /**
+     * The name of the callback
+     */
+    @NonNull
+    private final String mCallbackName;
+
+    /**
+     * Optional additional data to show
+     */
+    @Nullable
+    private String mAdditionalData;
+
+    /**
+     * Whether or not this callback has been called
+     */
+    private boolean mCalled;
+
+    CallbackDataItem(@NonNull final String callbackName) {
+        mCallbackName = callbackName;
+    }
+
+    @NonNull
+    String getCallbackName() {
+        return mCallbackName;
+    }
+
+    @Nullable
+    String getAdditionalData() {
+        return mAdditionalData;
+    }
+
+    boolean isCalled() {
+        return mCalled;
+    }
+
+    void setAdditionalData(@Nullable final String additionalData) {
+        mAdditionalData = additionalData;
+    }
+
+    void setCalled() {
+        mCalled = true;
+    }
+
+    @Override
+    public boolean equals(final Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+
+        final CallbackDataItem that = (CallbackDataItem) o;
+
+        if (mCalled != that.mCalled) return false;
+        if (!mCallbackName.equals(that.mCallbackName)) return false;
+        return mAdditionalData != null ? mAdditionalData.equals(that.mAdditionalData) : that.mAdditionalData == null;
+    }
+
+    @Override
+    public int hashCode() {
+        int result = mCallbackName.hashCode();
+        result = 31 * result + (mAdditionalData != null ? mAdditionalData.hashCode() : 0);
+        result = 31 * result + (mCalled ? 1 : 0);
+        return result;
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbacksAdapter.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbacksAdapter.java
new file mode 100644
index 00000000..5d6a4aac
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/CallbacksAdapter.java
@@ -0,0 +1,127 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.content.Context;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v7.widget.RecyclerView;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class CallbacksAdapter extends RecyclerView.Adapter<CallbacksAdapter.ViewHolder> {
+
+    private static final String TAG = CallbacksAdapter.class.getName();
+
+    private final int mBackgroundLight;
+    private final int mBackgroundDark;
+
+    @NonNull private List<CallbackDataItem> mCallbacks;
+
+    CallbacksAdapter(@NonNull final Context context) {
+        mBackgroundDark = context.getResources().getColor(R.color.listDark);
+        mBackgroundLight = context.getResources().getColor(R.color.listLight);
+//        int a = context.getResources().getColor(android.R.attr.textColorPrimary);
+//        context.getTheme().resolveAttribute(android.R.attr.textColorPrimary)
+        mCallbacks = new ArrayList<>();
+    }
+
+    @NonNull
+    @Override
+    public CallbacksAdapter.ViewHolder onCreateViewHolder(@NonNull final ViewGroup parent, final int i) {
+        final View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.callback_list_item, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull final CallbacksAdapter.ViewHolder viewHolder, final int i) {
+        final CallbackDataItem callback;
+        try {
+            callback = mCallbacks.get(i);
+        } catch (IndexOutOfBoundsException e) {
+            Log.e(TAG, "Index out of bounds exception when binding CallbacksAdapter.", e);
+            return;
+        }
+        if (callback == null) {
+            Log.e("TAG", "Failed to get callback from CallbacksAdapter.");
+            return;
+        }
+
+        viewHolder.callbackNameTextView.setText(callback.getCallbackName());
+        final String additionalData = callback.getAdditionalData();
+        if (!TextUtils.isEmpty(additionalData)) {
+            viewHolder.additionalDataTextView.setText(additionalData);
+        } else {
+            viewHolder.additionalDataTextView.setText("");
+        }
+
+        if (callback.isCalled()) {
+            viewHolder.checkMarkImageView.setVisibility(View.VISIBLE);
+            viewHolder.callbackNameTextView.setEnabled(true);
+        } else {
+            viewHolder.checkMarkImageView.setVisibility(View.INVISIBLE);
+            viewHolder.callbackNameTextView.setEnabled(false);
+        }
+
+        final int color = (i & 1) == 0 ? mBackgroundDark : mBackgroundLight;
+        viewHolder.itemView.setBackgroundColor(color);
+    }
+
+    @Override
+    public int getItemCount() {
+        return mCallbacks.size();
+    }
+
+    void generateCallbackList(@NonNull final Class<? extends Enum> callbacksEnumClass) {
+        mCallbacks.clear();
+        for (Enum callback : callbacksEnumClass.getEnumConstants()) {
+            mCallbacks.add(new CallbackDataItem(callback.toString()));
+        }
+        notifyDataSetChanged();
+    }
+
+    void notifyCallbackCalled(@NonNull final String methodName) {
+        notifyCallbackCalled(methodName, null);
+    }
+
+    void notifyCallbackCalled(@NonNull final String methodName,
+                              @Nullable final String additionalData) {
+        for (CallbackDataItem item : mCallbacks) {
+            if (item.getCallbackName().equals(methodName)) {
+                item.setCalled();
+                if (!TextUtils.isEmpty(additionalData)) {
+                    item.setAdditionalData(additionalData);
+                }
+
+                notifyDataSetChanged();
+                break;
+            }
+        }
+    }
+
+    static class ViewHolder extends RecyclerView.ViewHolder {
+
+        @NonNull final TextView callbackNameTextView;
+        @NonNull final TextView additionalDataTextView;
+        @NonNull final ImageView checkMarkImageView;
+        @NonNull final View itemView;
+
+        ViewHolder(@NonNull final View itemView) {
+            super(itemView);
+            callbackNameTextView = itemView.findViewById(R.id.callback_name_tv);
+            additionalDataTextView = itemView.findViewById(R.id.additional_data_tv);
+            checkMarkImageView = itemView.findViewById(R.id.checkmark_iv);
+            this.itemView = itemView;
+        }
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java
new file mode 100644
index 00000000..c15eec16
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/ImpressionsInfoFragment.java
@@ -0,0 +1,180 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.support.v7.widget.DividerItemDecoration;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static android.support.v7.widget.DividerItemDecoration.VERTICAL;
+import static android.view.ViewGroup.FOCUS_AFTER_DESCENDANTS;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link ImpressionsInfoFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class ImpressionsInfoFragment extends Fragment {
+    private static final String ARG_IMPRESSIONS_LIST = "list_of_impressions";
+
+    @Nullable
+    private ImpressionsInfoAdapter adapter;
+    private View fragmentView;
+
+    public ImpressionsInfoFragment() {
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameter.
+     *
+     * @param impressions - list of impressions.
+     * @return A new instance of fragment ImpressionsInfoFragment.
+     */
+    public static ImpressionsInfoFragment newInstance(@NonNull ArrayList<String> impressions) {
+        final ImpressionsInfoFragment fragment = new ImpressionsInfoFragment();
+        final Bundle args = new Bundle();
+        args.putStringArrayList(ARG_IMPRESSIONS_LIST, impressions);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        ArrayList<String> impressionsList = null;
+        if (getArguments() != null) {
+            impressionsList = getArguments().getStringArrayList(ARG_IMPRESSIONS_LIST);
+        }
+
+        // Inflate the layout for this fragment
+        fragmentView = inflater.inflate(R.layout.fragment_impressions_info, container, false);
+
+        final RecyclerView recyclerView = fragmentView.findViewById(R.id.impressions_recycler_view);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
+        adapter = new ImpressionsInfoAdapter(container.getContext(), impressionsList);
+        recyclerView.setAdapter(adapter);
+        recyclerView.addItemDecoration(new DividerItemDecoration(recyclerView.getContext(), VERTICAL));
+        recyclerView.setDescendantFocusability(FOCUS_AFTER_DESCENDANTS);
+
+        if (adapter.stringList.size() > 0) {
+            fragmentView.findViewById(R.id.text_no_impressions).setVisibility(View.GONE);
+        }
+
+        final Button closeButton = fragmentView.findViewById(R.id.close_btn);
+        closeButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                final Activity activity = getActivity();
+                if (activity != null) {
+                    activity.onBackPressed();
+                }
+            }
+        });
+
+        return fragmentView;
+    }
+
+    void onClear() {
+        fragmentView.findViewById(R.id.text_no_impressions).setVisibility(View.VISIBLE);
+        if (adapter != null) {
+            adapter.stringList.clear();
+            adapter.notifyDataSetChanged();
+        }
+    }
+
+    /**
+     * RecyclerView adapter for the impression data list
+     */
+    static class ImpressionsInfoAdapter extends RecyclerView.Adapter<ImpressionsInfoAdapter.ImpressionsViewHolder> {
+        private final int mBackgroundLight;
+        private final int mBackgroundDark;
+
+        @NonNull
+        final List<String> stringList;
+
+        ImpressionsInfoAdapter(@NonNull final Context context, @Nullable final List<String> list) {
+            mBackgroundDark = context.getResources().getColor(R.color.listDark);
+            mBackgroundLight = context.getResources().getColor(R.color.listLight);
+
+            if (list != null) {
+                stringList = list;
+            } else {
+                stringList = new ArrayList<>();
+            }
+        }
+
+        @NonNull
+        @Override
+        public ImpressionsViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
+            final View itemView = LayoutInflater.from(viewGroup.getContext())
+                    .inflate(android.R.layout.simple_list_item_1, viewGroup, false);
+            return new ImpressionsViewHolder(itemView);
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull ImpressionsViewHolder viewHolder, int i) {
+            final int color = (i & 1) == 0 ? mBackgroundDark : mBackgroundLight;
+            viewHolder.bindViewHolder(stringList.get(i), color);
+        }
+
+        @Override
+        public int getItemCount() {
+            return stringList.size();
+        }
+
+        /**
+         * ViewHolder
+         */
+        static class ImpressionsViewHolder extends RecyclerView.ViewHolder {
+            @NonNull
+            final TextView infoTextView;
+
+            ImpressionsViewHolder(View itemView) {
+                super(itemView);
+                itemView.setTag(this);
+                infoTextView = itemView.findViewById(android.R.id.text1);
+                infoTextView.setOnLongClickListener(new View.OnLongClickListener() {
+                    @Override
+                    public boolean onLongClick(View v) {
+                        shareImpressionData(infoTextView);
+                        return true;
+                    }
+                });
+            }
+
+            void bindViewHolder(final String text, final int color) {
+                itemView.setBackgroundColor(color);
+                infoTextView.setText(text);
+            }
+
+            private void shareImpressionData(@NonNull final TextView textView) {
+                final Intent impressionIntent = new Intent(android.content.Intent.ACTION_SEND);
+                impressionIntent.setType("text/plain");
+                impressionIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                impressionIntent.putExtra(Intent.EXTRA_SUBJECT, "impression data");
+                impressionIntent.putExtra(Intent.EXTRA_TEXT, textView.getText().toString());
+
+                textView.getContext().startActivity(Intent.createChooser(impressionIntent,
+                        textView.getResources().getString(R.string.share_impression)));
+            }
+        }
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
index e775a093..2bcea674 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
@@ -4,8 +4,13 @@
 
 package com.mopub.simpleadsdemo;
 
+import android.content.Context;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -21,6 +26,28 @@
 public class InterstitialDetailFragment extends Fragment implements InterstitialAdListener {
     private MoPubInterstitial mMoPubInterstitial;
     private Button mShowButton;
+    @Nullable private CallbacksAdapter mCallbacksAdapter;
+
+    private enum InterstitialCallbacks {
+        LOADED("onInterstitialLoaded"),
+        FAILED("onInterstitialFailed"),
+        SHOWN("onInterstitialShown"),
+        CLICKED("onInterstitialClicked"),
+        DISMISSED("onInterstitialDismissed");
+
+        InterstitialCallbacks(@NonNull final String name) {
+            this.name = name;
+        }
+
+        @NonNull
+        private final String name;
+
+        @Override
+        @NonNull
+        public String toString() {
+            return name;
+        }
+    }
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
@@ -47,6 +74,9 @@ public void onClick(View view) {
                 final String userDatakeywords = views.mUserDataKeywordsField.getText().toString();
                 mMoPubInterstitial.setKeywords(keywords);
                 mMoPubInterstitial.setUserDataKeywords(userDatakeywords);
+                if (mCallbacksAdapter != null) {
+                    mCallbacksAdapter.generateCallbackList(InterstitialCallbacks.class);
+                }
                 mMoPubInterstitial.load();
             }
         });
@@ -59,6 +89,15 @@ public void onClick(View view) {
             }
         });
 
+        final RecyclerView callbacksView = view.findViewById(R.id.callbacks_recycler_view);
+        final Context context = getContext();
+        if (callbacksView != null && context != null) {
+            callbacksView.setLayoutManager(new LinearLayoutManager(context));
+            mCallbacksAdapter = new CallbacksAdapter(context);
+            mCallbacksAdapter.generateCallbackList(InterstitialCallbacks.class);
+            callbacksView.setAdapter(mCallbacksAdapter);
+        }
+
         return view;
     }
 
@@ -76,29 +115,50 @@ public void onDestroyView() {
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
         mShowButton.setEnabled(true);
-        logToast(getActivity(), "Interstitial loaded.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), "Interstitial loaded.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(InterstitialCallbacks.LOADED.toString());
     }
 
     @Override
     public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
         mShowButton.setEnabled(false);
         final String errorMessage = (errorCode != null) ? errorCode.toString() : "";
-        logToast(getActivity(), "Interstitial failed to load: " + errorMessage);
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), "Interstitial failed to load: " + errorMessage);
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(InterstitialCallbacks.FAILED.toString(), errorMessage);
     }
 
     @Override
     public void onInterstitialShown(MoPubInterstitial interstitial) {
         mShowButton.setEnabled(false);
-        logToast(getActivity(), "Interstitial shown.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), "Interstitial shown.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(InterstitialCallbacks.SHOWN.toString());
     }
 
     @Override
     public void onInterstitialClicked(MoPubInterstitial interstitial) {
-        logToast(getActivity(), "Interstitial clicked.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), "Interstitial clicked.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(InterstitialCallbacks.CLICKED.toString());
+
     }
 
     @Override
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
-        logToast(getActivity(), "Interstitial dismissed.");
+        if (mCallbacksAdapter == null) {
+            logToast(getActivity(), "Interstitial dismissed.");
+            return;
+        }
+        mCallbacksAdapter.notifyCallbackCalled(InterstitialCallbacks.DISMISSED.toString());
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java
deleted file mode 100644
index 614efdac..00000000
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java
+++ /dev/null
@@ -1,18 +0,0 @@
-// Copyright 2018-2019 Twitter, Inc.
-// Licensed under the MoPub SDK License Agreement
-// http://www.mopub.com/legal/sdk-license-agreement/
-
-package com.mopub.simpleadsdemo;
-
-public class LeaderboardDetailFragment extends AbstractBannerDetailFragment {
-
-    @Override
-    public int getWidth() {
-        return (int) getResources().getDimension(R.dimen.leaderboard_width);
-    }
-
-    @Override
-    public int getHeight() {
-        return (int) getResources().getDimension(R.dimen.leaderboard_height);
-    }
-}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MediumRectangleDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MediumRectangleDetailFragment.java
new file mode 100644
index 00000000..8ef3ecb7
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MediumRectangleDetailFragment.java
@@ -0,0 +1,15 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.simpleadsdemo;
+
+import com.mopub.mobileads.MoPubView;
+
+public class MediumRectangleDetailFragment extends AbstractBannerDetailFragment {
+
+    @Override
+    public MoPubView.MoPubAdSize getAdSize() {
+        return MoPubView.MoPubAdSize.HEIGHT_280;
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
index 7c32e6f7..cc1f861b 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubListFragment.java
@@ -15,7 +15,9 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.app.ListFragment;
+import android.text.Editable;
 import android.text.TextUtils;
+import android.text.TextWatcher;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -53,6 +55,8 @@
 
     private MoPubSampleListAdapter mAdapter;
     private AdUnitDataSource mAdUnitDataSource;
+    private EditText mSearchBar;
+    private Button mSearchBarClearButton;
 
     private static final AdType[] adTypes = AdType.values();
 
@@ -104,6 +108,36 @@ public void onClick(final View view) {
             }
         });
 
+        mSearchBar = view.findViewById(R.id.search_bar_et);
+        mSearchBarClearButton = view.findViewById(R.id.search_bar_clear_button);
+
+        mSearchBarClearButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (mSearchBar != null) {
+                    mSearchBar.getText().clear();
+                }
+            }
+        });
+
+        mSearchBar.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+            }
+
+            @Override
+            public void afterTextChanged(final Editable text) {
+                final MoPubSampleListAdapter adapter = mAdapter;
+                if (adapter != null && text != null) {
+                    adapter.getFilter().filter(text.toString());
+                }
+            }
+        });
+
         return view;
     }
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
index a9497feb..9c35e060 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
@@ -35,21 +35,29 @@
 import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Reflection;
 import com.mopub.mobileads.MoPubErrorCode;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
+
+import org.json.JSONException;
 
 import java.lang.reflect.Field;
-import java.lang.reflect.Modifier;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.LinkedBlockingDeque;
 
 import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
 import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;
 import static com.mopub.common.Constants.UNUSED_REQUEST_CODE;
 import static com.mopub.common.logging.MoPubLog.LogLevel.DEBUG;
 import static com.mopub.common.logging.MoPubLog.LogLevel.INFO;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM_WITH_THROWABLE;
 
 public class MoPubSampleActivity extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
     private static final List<String> REQUIRED_DANGEROUS_PERMISSIONS = new ArrayList<>();
+    private static final String SHOWING_CONSENT_DIALOG_KEY = "ShowingConsentDialog";
 
     static {
         REQUIRED_DANGEROUS_PERMISSIONS.add(ACCESS_COARSE_LOCATION);
@@ -70,6 +78,7 @@ private static void setWebDebugging() {
 
     private MoPubListFragment mMoPubListFragment;
     private Intent mDeeplinkIntent;
+    private boolean mShowingConsentDialog;
     @Nullable
     PersonalInfoManager mPersonalInfoManager;
 
@@ -78,12 +87,17 @@ private static void setWebDebugging() {
     @Nullable
     private ConsentStatusChangeListener mConsentStatusChangeListener;
 
+    @NonNull
+    private final LinkedBlockingDeque<String> mImpressionsList = new LinkedBlockingDeque<>();
+    private ImpressionListener mImpressionListener;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
+        getSupportActionBar().setTitle(getString(R.string.app_title));
 
         setupNavigationDrawer(toolbar);
 
@@ -106,14 +120,20 @@ protected void onCreate(Bundle savedInstanceState) {
 
         if (savedInstanceState == null) {
             createMoPubListFragment(getIntent());
+        } else {
+            mShowingConsentDialog = savedInstanceState.getBoolean(SHOWING_CONSENT_DIALOG_KEY);
         }
 
-        final SdkConfiguration.Builder configBuilder = new SdkConfiguration.Builder("b195f8dd8ded45fe847ad89ed1d016da");
+        final SdkConfiguration.Builder configBuilder = new SdkConfiguration.Builder(
+                "b195f8dd8ded45fe847ad89ed1d016da");
         if (BuildConfig.DEBUG) {
             configBuilder.withLogLevel(DEBUG);
         } else {
             configBuilder.withLogLevel(INFO);
         }
+
+        SampleActivityUtils.addDefaultNetworkConfiguration(configBuilder);
+
         MoPub.initializeSdk(this, configBuilder.build(), initSdkListener());
 
         mConsentStatusChangeListener = initConsentChangeListener();
@@ -125,6 +145,10 @@ protected void onCreate(Bundle savedInstanceState) {
         // Intercepts all logs including Level.FINEST so we can show a toast
         // that is not normally user-facing. This is only used for native ads.
         LoggingUtils.enableCanaryLogging(this);
+
+
+        mImpressionListener = createImpressionsListener();
+        ImpressionsEmitter.addListener(mImpressionListener);
     }
 
     @Override
@@ -134,6 +158,8 @@ protected void onDestroy() {
             mPersonalInfoManager.unsubscribeConsentStatusChangeListener(mConsentStatusChangeListener);
         }
         mConsentStatusChangeListener = null;
+
+        ImpressionsEmitter.removeListener(mImpressionListener);
         super.onDestroy();
     }
 
@@ -198,6 +224,7 @@ private ConsentDialogListener initDialogLoadListener() {
             public void onConsentDialogLoaded() {
                 if (mPersonalInfoManager != null) {
                     mPersonalInfoManager.showConsentDialog();
+                    mShowingConsentDialog = true;
                 }
             }
 
@@ -225,6 +252,7 @@ public void onBackPressed() {
     private static final String PRIVACY_FRAGMENT_TAG = "privacy_info_fragment";
     private static final String NETWORKS_FRAGMENT_TAG = "networks_info_fragment";
     private static final String LIST_FRAGMENT_TAG = "list_fragment";
+    private static final String IMPRESSIONS_FRAGMENT_TAG = "impressions_info_fragment";
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
@@ -267,6 +295,20 @@ private void syncNavigationMenu() {
         }
     }
 
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case R.id.action_impressions:
+                onImpressionsMenu();
+                return true;
+            case R.id.action_clear_logs:
+                onClearLogs();
+                return true;
+            default:
+                return super.onContextItemSelected(item);
+        }
+    }
+
     @Override
     public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
         switch (menuItem.getItemId()) {
@@ -302,6 +344,32 @@ public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
         return false;
     }
 
+    @Override
+    public void onSaveInstanceState(@NonNull final Bundle savedInstanceState) {
+        super.onSaveInstanceState(savedInstanceState);
+        savedInstanceState.putBoolean(SHOWING_CONSENT_DIALOG_KEY, mShowingConsentDialog);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        if (mShowingConsentDialog) {
+            mShowingConsentDialog = false;
+            Utils.logToast(MoPubSampleActivity.this, "Consent dialog dismissed");
+        }
+    }
+
+    private void onImpressionsMenu() {
+        final FragmentManager manager = getSupportFragmentManager();
+        if (manager.findFragmentByTag(IMPRESSIONS_FRAGMENT_TAG) == null) {
+            ImpressionsInfoFragment fragment = ImpressionsInfoFragment.newInstance(new ArrayList<>(mImpressionsList));
+            manager.beginTransaction()
+                    .replace(R.id.fragment_container, fragment, IMPRESSIONS_FRAGMENT_TAG)
+                    .addToBackStack(IMPRESSIONS_FRAGMENT_TAG)
+                    .commit();
+        }
+    }
+
     private void onNavEnvironemnt(boolean production) {
         setEndpoint(production ? PROD_HOST : TEST_HOST);
     }
@@ -320,7 +388,7 @@ private void onNavChangeConsent(boolean grant) {
         final FragmentManager manager = getSupportFragmentManager();
         final MoPubListFragment listFragment = (MoPubListFragment) manager.findFragmentByTag(LIST_FRAGMENT_TAG);
         if (listFragment == null) {
-            MoPubLog.log(MoPubLog.SdkLogEvent.CUSTOM, getString(R.string.list_fragment_not_found));
+            MoPubLog.log(CUSTOM, getString(R.string.list_fragment_not_found));
             return; // fragment is not ready to update the consent
         }
         if (!listFragment.onChangeConsent(grant)) {
@@ -354,7 +422,35 @@ private void setEndpoint(@NonNull String host) {
             Field field = Reflection.getPrivateField(com.mopub.common.Constants.class, "HOST");
             field.set(null, host);
         } catch (Exception e) {
-            MoPubLog.log(MoPubLog.SdkLogEvent.CUSTOM_WITH_THROWABLE, "Can't change HOST.", e);
+            MoPubLog.log(CUSTOM_WITH_THROWABLE, "Can't change HOST.", e);
         }
     }
+
+    private void onClearLogs() {
+        FragmentManager manager = getSupportFragmentManager();
+        final ImpressionsInfoFragment fragment = (ImpressionsInfoFragment) manager.findFragmentByTag(IMPRESSIONS_FRAGMENT_TAG);
+        if (fragment != null) {
+            fragment.onClear();
+        }
+        mImpressionsList.clear();
+    }
+
+    private ImpressionListener createImpressionsListener() {
+        return new ImpressionListener() {
+            @Override
+            public void onImpression(@NonNull final String adUnitId, @Nullable final ImpressionData impressionData) {
+                MoPubLog.log(CUSTOM, "impression for adUnitId= " + adUnitId);
+
+                if (impressionData == null) {
+                    mImpressionsList.addFirst("adUnitId= " + adUnitId + "\ndata= null");
+                } else {
+                    try {
+                        mImpressionsList.addFirst(impressionData.getJsonRepresentation().toString(2));
+                    } catch (JSONException e) {
+                        MoPubLog.log(CUSTOM_WITH_THROWABLE, "Can't format impression data.", e);
+                    }
+                }
+            }
+        };
+    }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
index 5b728c5b..3a154439 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
@@ -23,9 +23,7 @@
     // Note that entries are also sorted in this order
     enum AdType {
         BANNER("Banner", BannerDetailFragment.class),
-        MRECT("Mrect", MrectDetailFragment.class),
-        LEADERBOARD("Leaderboard", LeaderboardDetailFragment.class),
-        SKYSCRAPER("Skyscraper", SkyscraperDetailFragment.class),
+        MEDIUM_RECTANGLE("Medium Rectangle", MediumRectangleDetailFragment.class),
         INTERSTITIAL("Interstitial", InterstitialDetailFragment.class),
         REWARDED_VIDEO("Rewarded Video", RewardedVideoDetailFragment.class),
         LIST_VIEW("Native List View", NativeListViewFragment.class),
@@ -68,12 +66,8 @@ static AdType fromDeeplinkString(@Nullable final String adType) {
                     return BANNER;
                 case "interstitial":
                     return INTERSTITIAL;
-                case "mrect":
-                    return MRECT;
-                case "leaderboard":
-                    return LEADERBOARD;
-                case "skyscraper":
-                    return SKYSCRAPER;
+                case "mediumrectangle":
+                    return MEDIUM_RECTANGLE;
                 case "rewarded":
                     return REWARDED_VIDEO;
                 case "native":
@@ -237,4 +231,10 @@ public boolean equals(Object o) {
                 that.mDescription.equals(this.mDescription) &&
                 that.mAdUnitId.equals(this.mAdUnitId);
     }
+
+    @Override
+    @NonNull
+    public String toString() {
+        return mDescription == null ? "" : mDescription;
+    }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java
deleted file mode 100644
index 4cc954db..00000000
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java
+++ /dev/null
@@ -1,18 +0,0 @@
-// Copyright 2018-2019 Twitter, Inc.
-// Licensed under the MoPub SDK License Agreement
-// http://www.mopub.com/legal/sdk-license-agreement/
-
-package com.mopub.simpleadsdemo;
-
-public class MrectDetailFragment extends AbstractBannerDetailFragment {
-
-    @Override
-    public int getWidth() {
-        return (int) getResources().getDimension(R.dimen.mrect_width);
-    }
-
-    @Override
-    public int getHeight() {
-        return (int) getResources().getDimension(R.dimen.mrect_height);
-    }
-}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
index 187a68be..77efa4a0 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeGalleryFragment.java
@@ -16,6 +16,11 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubNativeAdLoadedListener;
 import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
@@ -25,6 +30,8 @@
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
+import java.util.Map;
 
 import static com.mopub.nativeads.RequestParameters.NativeAdAsset;
 
@@ -102,8 +109,57 @@ public void onClick(View view) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
+
         // This ad placer is used to automatically insert ads into the ViewPager.
         mStreamAdPlacer = new MoPubStreamAdPlacer(getActivity());
+
+        // The first renderer that can handle a particular native ad gets used.
+        // We are prioritizing network renderers.
+        mStreamAdPlacer.registerAdRenderer(googlePlayServicesAdRenderer);
+        mStreamAdPlacer.registerAdRenderer(flurryRenderer);
+        mStreamAdPlacer.registerAdRenderer(facebookAdRenderer);
         mStreamAdPlacer.registerAdRenderer(moPubStaticNativeAdRenderer);
         mStreamAdPlacer.registerAdRenderer(moPubVideoNativeAdRenderer);
         mStreamAdPlacer.setAdLoadedListener(this);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
index a031a998..090e7906 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeListViewFragment.java
@@ -13,6 +13,11 @@
 import android.widget.ArrayAdapter;
 import android.widget.ListView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubAdAdapter;
 import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
@@ -21,6 +26,8 @@
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
+import java.util.Map;
 
 import static com.mopub.nativeads.MoPubNativeAdPositioning.MoPubServerPositioning;
 import static com.mopub.nativeads.RequestParameters.NativeAdAsset;
@@ -105,10 +112,57 @@ public void onClick(View view) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
 
         // Register the renderers with the MoPubAdAdapter and then set the adapter on the ListView.
-        mAdAdapter.registerAdRenderer(videoAdRenderer);
+        // The first renderer that can handle a particular native ad gets used.
+        // We are prioritizing network renderers.
+        mAdAdapter.registerAdRenderer(googlePlayServicesAdRenderer);
+        mAdAdapter.registerAdRenderer(flurryRenderer);
+        mAdAdapter.registerAdRenderer(facebookAdRenderer);
         mAdAdapter.registerAdRenderer(staticAdRender);
+        mAdAdapter.registerAdRenderer(videoAdRenderer);
         listView.setAdapter(mAdAdapter);
 
         mAdAdapter.loadAds(mAdConfiguration.getAdUnitId(), mRequestParameters);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
index a67eb059..d0217bcd 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
@@ -18,16 +18,23 @@
 import android.widget.Button;
 import android.widget.TextView;
 
+import com.mopub.nativeads.FacebookAdRenderer;
+import com.mopub.nativeads.FlurryCustomEventNative;
+import com.mopub.nativeads.FlurryNativeAdRenderer;
+import com.mopub.nativeads.FlurryViewBinder;
+import com.mopub.nativeads.GooglePlayServicesAdRenderer;
 import com.mopub.nativeads.MediaViewBinder;
 import com.mopub.nativeads.MoPubNativeAdPositioning;
-import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
 import com.mopub.nativeads.MoPubRecyclerAdapter;
+import com.mopub.nativeads.MoPubStaticNativeAdRenderer;
 import com.mopub.nativeads.MoPubVideoNativeAdRenderer;
 import com.mopub.nativeads.RequestParameters;
 import com.mopub.nativeads.ViewBinder;
 
 import java.util.EnumSet;
+import java.util.HashMap;
 import java.util.Locale;
+import java.util.Map;
 
 public class NativeRecyclerViewFragment extends Fragment {
     private MoPubRecyclerAdapter mRecyclerAdapter;
@@ -116,6 +123,54 @@ public void onClick(final View v) {
                         .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
                         .build());
 
+        // Set up a renderer for Facebook video ads.
+        final FacebookAdRenderer facebookAdRenderer = new FacebookAdRenderer(
+                new FacebookAdRenderer.FacebookViewBinder.Builder(R.layout.native_ad_fan_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaViewId(R.id.native_media_view)
+                        .adIconViewId(R.id.native_icon)
+                        .callToActionId(R.id.native_cta)
+                        .adChoicesRelativeLayoutId(R.id.native_privacy_information_icon_layout)
+                        .build());
+
+        // Set up a renderer for Flurry ads.
+        Map<String, Integer> extraToResourceMap = new HashMap<>(3);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_SEC_BRANDING_LOGO,
+                R.id.flurry_native_brand_logo);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_APP_CATEGORY,
+                R.id.flurry_app_category);
+        extraToResourceMap.put(FlurryCustomEventNative.EXTRA_STAR_RATING_IMG,
+                R.id.flurry_star_rating_image);
+        ViewBinder flurryBinder = new ViewBinder.Builder(R.layout.native_ad_flurry_list_item)
+                .titleId(R.id.flurry_native_title)
+                .textId(R.id.flurry_native_text)
+                .mainImageId(R.id.flurry_native_main_image)
+                .iconImageId(R.id.flurry_native_icon_image)
+                .callToActionId(R.id.flurry_native_cta)
+                .addExtras(extraToResourceMap)
+                .build();
+        FlurryViewBinder flurryViewBinder = new FlurryViewBinder.Builder(flurryBinder)
+                .videoViewId(R.id.flurry_native_video_view)
+                .build();
+        final FlurryNativeAdRenderer flurryRenderer = new FlurryNativeAdRenderer(flurryViewBinder);
+
+        // Set up a renderer for AdMob ads.
+        final GooglePlayServicesAdRenderer googlePlayServicesAdRenderer = new GooglePlayServicesAdRenderer(
+                new MediaViewBinder.Builder(R.layout.video_ad_list_item)
+                        .titleId(R.id.native_title)
+                        .textId(R.id.native_text)
+                        .mediaLayoutId(R.id.native_media_layout)
+                        .iconImageId(R.id.native_icon_image)
+                        .callToActionId(R.id.native_cta)
+                        .privacyInformationIconImageId(R.id.native_privacy_information_icon_image)
+                        .build());
+
+        // The first renderer that can handle a particular native ad gets used.
+        // We are prioritizing network renderers.
+        mRecyclerAdapter.registerAdRenderer(googlePlayServicesAdRenderer);
+        mRecyclerAdapter.registerAdRenderer(flurryRenderer);
+        mRecyclerAdapter.registerAdRenderer(facebookAdRenderer);
         mRecyclerAdapter.registerAdRenderer(moPubStaticNativeAdRenderer);
         mRecyclerAdapter.registerAdRenderer(moPubVideoNativeAdRenderer);
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
index 7d27a70e..933f8a94 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
@@ -6,12 +6,15 @@
 
 import android.app.AlertDialog;
 import android.app.Dialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -37,6 +40,30 @@
     @Nullable private String mAdUnitId;
     @Nullable private Map<String, MoPubReward> mMoPubRewardsMap;
     @Nullable private MoPubReward mSelectedReward;
+    @Nullable private CallbacksAdapter mCallbacksAdapter;
+
+    private enum RewardedCallbacks {
+        LOADED("onRewardedVideoLoadSuccess"),
+        FAILED("onRewardedVideoLoadFailed"),
+        STARTED("onRewardedVideoStarted"),
+        PLAY_ERROR("onRewardedVideoPlaybackError"),
+        CLICKED("onRewardedVideoClicked"),
+        CLOSED("onRewardedVideoClosed"),
+        COMPLETED("onRewardedVideoCompleted");
+
+        RewardedCallbacks(@NonNull final String name) {
+            this.name = name;
+        }
+
+        @NonNull
+        private final String name;
+
+        @Override
+        @NonNull
+        public String toString() {
+            return name;
+        }
+    }
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
@@ -63,6 +90,9 @@ public void onClick(View view) {
                 if (mAdUnitId == null) {
                     return;
                 }
+                if (mCallbacksAdapter != null) {
+                    mCallbacksAdapter.generateCallbackList(RewardedCallbacks.class);
+                }
                 MoPubRewardedVideos.loadRewardedVideo(mAdUnitId,
                         new RequestParameters(views.mKeywordsField.getText().toString(), views.mUserDataKeywordsField.getText().toString(),null,
                                 "sample_app_customer_id"));
@@ -91,6 +121,15 @@ public void onClick(View view) {
             views.mCustomDataField.setVisibility(View.VISIBLE);
         }
 
+        final RecyclerView callbacksView = view.findViewById(R.id.callbacks_recycler_view);
+        final Context context = getContext();
+        if (callbacksView != null && context != null) {
+            callbacksView.setLayoutManager(new LinearLayoutManager(context));
+            mCallbacksAdapter = new CallbacksAdapter(context);
+            mCallbacksAdapter.generateCallbackList(RewardedCallbacks.class);
+            callbacksView.setAdapter(mCallbacksAdapter);
+        }
+
         return view;
     }
 
@@ -107,7 +146,11 @@ public void onRewardedVideoLoadSuccess(@NonNull final String adUnitId) {
             if (mShowButton != null) {
                 mShowButton.setEnabled(true);
             }
-            logToast(getActivity(), "Rewarded video loaded.");
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), "Rewarded video loaded.");
+            } else {
+                mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.LOADED.toString());
+            }
 
             Set<MoPubReward> availableRewards = MoPubRewardedVideos.getAvailableRewards(mAdUnitId);
 
@@ -143,46 +186,68 @@ public void onRewardedVideoLoadFailure(@NonNull final String adUnitId, @NonNull
             if (mShowButton != null) {
                 mShowButton.setEnabled(false);
             }
-            logToast(getActivity(), String.format(Locale.US, "Rewarded video failed to load: %s",
-                    errorCode.toString()));
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), String.format(Locale.US, "Rewarded video failed to load: %s",
+                        errorCode.toString()));
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.FAILED.toString(),
+                    errorCode.toString());
         }
     }
 
     @Override
     public void onRewardedVideoStarted(@NonNull final String adUnitId) {
         if (adUnitId.equals(mAdUnitId)) {
-            logToast(getActivity(), "Rewarded video started.");
             if (mShowButton != null) {
                 mShowButton.setEnabled(false);
             }
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), "Rewarded video started.");
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.STARTED.toString());
         }
     }
 
     @Override
     public void onRewardedVideoPlaybackError(@NonNull final String adUnitId, @NonNull final MoPubErrorCode errorCode) {
         if (adUnitId.equals(mAdUnitId)) {
-            logToast(getActivity(), String.format(Locale.US, "Rewarded video playback error: %s",
-                    errorCode.toString()));
             if (mShowButton != null) {
                 mShowButton.setEnabled(false);
             }
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), String.format(Locale.US, "Rewarded video playback error: %s",
+                        errorCode.toString()));
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.PLAY_ERROR.toString(),
+                    errorCode.toString());
         }
     }
 
     @Override
     public void onRewardedVideoClicked(@NonNull final String adUnitId) {
         if (adUnitId.equals(mAdUnitId)) {
-            logToast(getActivity(), "Rewarded video clicked.");
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), "Rewarded video clicked.");
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.CLICKED.toString());
         }
     }
 
     @Override
     public void onRewardedVideoClosed(@NonNull final String adUnitId) {
         if (adUnitId.equals(mAdUnitId)) {
-            logToast(getActivity(), "Rewarded video closed.");
             if (mShowButton != null) {
                 mShowButton.setEnabled(false);
             }
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), "Rewarded video closed.");
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.CLOSED.toString());
         }
     }
 
@@ -190,11 +255,15 @@ public void onRewardedVideoClosed(@NonNull final String adUnitId) {
     public void onRewardedVideoCompleted(@NonNull final Set<String> adUnitIds,
             @NonNull final MoPubReward reward) {
         if (adUnitIds.contains(mAdUnitId)) {
-            logToast(getActivity(),
-                    String.format(Locale.US,
-                            "Rewarded video completed with reward  \"%d %s\"",
-                            reward.getAmount(),
-                            reward.getLabel()));
+            final String message = String.format(Locale.US,
+                    "Rewarded video completed with reward  \"%d %s\"",
+                    reward.getAmount(),
+                    reward.getLabel());
+            if (mCallbacksAdapter == null) {
+                logToast(getActivity(), message);
+                return;
+            }
+            mCallbacksAdapter.notifyCallbackCalled(RewardedCallbacks.COMPLETED.toString(), message);
         }
     }
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java
deleted file mode 100644
index 00f34dfd..00000000
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java
+++ /dev/null
@@ -1,18 +0,0 @@
-// Copyright 2018-2019 Twitter, Inc.
-// Licensed under the MoPub SDK License Agreement
-// http://www.mopub.com/legal/sdk-license-agreement/
-
-package com.mopub.simpleadsdemo;
-
-public class SkyscraperDetailFragment extends AbstractBannerDetailFragment {
-
-    @Override
-    public int getWidth() {
-        return (int) getResources().getDimension(R.dimen.skyscraper_width);
-    }
-
-    @Override
-    public int getHeight() {
-        return (int) getResources().getDimension(R.dimen.skyscraper_height);
-    }
-}
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index ff0ae552..4cde1513 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -13,11 +13,12 @@ dependencies {
     api project(':mopub-sdk:mopub-sdk-native-video')
 
     testImplementation 'junit:junit:4.12'
-    testImplementation 'org.robolectric:robolectric:4.0-beta-1'
-    testImplementation 'org.robolectric:shadows-support-v4:3.3.2'
-    testImplementation 'org.robolectric:shadows-httpclient:4.0-beta-1'
+    testImplementation 'org.robolectric:robolectric:4.3'
+    testImplementation 'org.robolectric:shadows-supportv4:4.3'
+    testImplementation 'org.robolectric:shadows-httpclient:4.3'
     testImplementation 'com.squareup:fest-android:1.0.7'
     testImplementation 'org.mockito:mockito-core:1.10.19'
+    testImplementation 'org.apache.commons:commons-lang3:3.9'
 
     ['powermock-api-mockito',
      'powermock-core',
@@ -37,6 +38,17 @@ android {
         unitTests {
             includeAndroidResources = true
         }
+
+        // separate block is necessary for Robolectric properties.
+        unitTests.all {
+            def sdkVersionsToTest = "${System.env.ROBOELECTRIC_TEST_API_VERSIONS}"
+
+            if (sdkVersionsToTest
+                    && !sdkVersionsToTest.allWhitespace
+                    && sdkVersionsToTest.toString() != "null") {
+                systemProperty 'robolectric.enabledSdks', sdkVersionsToTest
+            }
+        }
     }
 }
 
diff --git a/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
index f888e179..3551c92d 100644
--- a/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
+++ b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
@@ -17,6 +17,7 @@
 import com.mopub.mobileads.AdViewController;
 import com.mopub.mobileads.CustomEventBanner;
 import com.mopub.mobileads.InternalCustomEventBannerListener;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.factories.MraidControllerFactory;
 import com.mopub.mraid.MraidController.MraidListener;
 
@@ -108,6 +109,12 @@ public void onFailedToLoad() {
                 mBannerListener.onBannerFailed(MRAID_LOAD_ERROR);
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(LOAD_FAILED, ADAPTER_NAME, errorCode.getIntCode(), errorCode);
+                mBannerListener.onBannerFailed(errorCode);
+            }
+
             @Override
             public void onExpand() {
                 mBannerListener.onBannerExpanded();
diff --git a/mopub-sdk/mopub-sdk-base/res/values/mopub_attrs.xml b/mopub-sdk/mopub-sdk-base/res/values/mopub_attrs.xml
new file mode 100644
index 00000000..fd95f077
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/res/values/mopub_attrs.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="MoPubView">
+        <attr name="moPubAdSize" format="enum">
+            <enum name="match_view" value="-1"/>
+            <enum name="height_50" value="50"/>
+            <enum name="height_90" value="90"/>
+            <enum name="height_250" value="250"/>
+            <enum name="height_280" value="280"/>
+        </attr>
+    </declare-styleable>
+</resources>
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
index 316c214f..cf47b34b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
@@ -5,14 +5,17 @@
 package com.mopub.common;
 
 import android.content.Context;
+import android.graphics.Point;
 import android.location.Location;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
+import android.view.WindowInsets;
 
 import com.mopub.common.privacy.ConsentData;
 import com.mopub.common.privacy.PersonalInfoManager;
 import com.mopub.common.util.DateAndTime;
+import com.mopub.mobileads.MoPubView;
 import com.mopub.network.RequestRateTracker;
 
 import static com.mopub.common.ClientMetadata.MoPubNetworkType;
@@ -130,6 +133,8 @@
     protected String mKeywords;
     protected String mUserDataKeywords;
     protected Location mLocation;
+    protected Point mRequestedAdSize;
+    protected WindowInsets mWindowInsets;
     @Nullable private final PersonalInfoManager mPersonalInfoManager;
     @Nullable private final ConsentData mConsentData;
     protected Boolean mForceGdprApplies;
@@ -164,6 +169,16 @@ public AdUrlGenerator withLocation(Location location) {
         return this;
     }
 
+    public AdUrlGenerator withRequestedAdSize(final Point adSize) {
+        mRequestedAdSize = adSize;
+        return this;
+    }
+
+    public AdUrlGenerator withWindowInsets(final WindowInsets windowInsets) {
+        mWindowInsets = windowInsets;
+        return this;
+    }
+
     protected void setAdUnitId(String adUnitId) {
         addParam(AD_UNIT_ID_KEY, adUnitId);
     }
@@ -308,6 +323,7 @@ protected void addBaseParams(final ClientMetadata clientMetadata) {
         setAdUnitId(mAdUnitId);
 
         setSdkVersion(clientMetadata.getSdkVersion());
+        appendAppEngineInfo();
         setDeviceInfo(clientMetadata.getDeviceManufacturer(),
                 clientMetadata.getDeviceModel(),
                 clientMetadata.getDeviceProduct());
@@ -323,7 +339,7 @@ protected void addBaseParams(final ClientMetadata clientMetadata) {
         setTimezone(DateAndTime.getTimeZoneOffsetString());
 
         setOrientation(clientMetadata.getOrientationString());
-        setDeviceDimensions(clientMetadata.getDeviceDimensions());
+        setDeviceDimensions(clientMetadata.getDeviceDimensions(), mRequestedAdSize, mWindowInsets);
         setDensity(clientMetadata.getDensity());
 
         final String networkOperator = clientMetadata.getNetworkOperatorForUrl();
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AppEngineInfo.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AppEngineInfo.java
new file mode 100644
index 00000000..d50d9625
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AppEngineInfo.java
@@ -0,0 +1,31 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.common;
+
+import android.support.annotation.NonNull;
+
+/**
+ * Application engine information is optional data that is sent to the MoPub server
+ * and used for analytics purposes
+ */
+public final class AppEngineInfo {
+    @NonNull
+    final String mName;
+    @NonNull
+    final String mVersion;
+
+    /**
+     *
+     * @param name application engine name, for example "unity"
+     * @param version application engine version, for example "2017.1.2f2"
+     */
+    public AppEngineInfo(@NonNull String name, @NonNull String version) {
+        Preconditions.checkNotNull(name);
+        Preconditions.checkNotNull(version);
+
+        mName = name;
+        mVersion = version;
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
index 198a7d6d..33acd3fb 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
@@ -6,8 +6,12 @@
 
 import android.graphics.Point;
 import android.net.Uri;
+import android.os.Build;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.text.TextUtils;
+import android.view.DisplayCutout;
+import android.view.WindowInsets;
 
 import com.mopub.network.Networking;
 import com.mopub.network.PlayServicesUrlRewriter;
@@ -34,6 +38,11 @@
      */
     protected static final String DNT_KEY = "dnt";
 
+    /**
+     * Always the mopub-generated identifier.
+     */
+    protected static final String MOPUB_ID_KEY = "mid";
+
     /**
      * Bundle ID, as in package name.
      */
@@ -68,8 +77,33 @@
     private static final String WIDTH_KEY = "w";
     private static final String HEIGHT_KEY = "h";
 
+    /**
+     * The width of the screen's safe area. See
+     * https://developer.android.com/guide/topics/display-cutout
+     * for details on how this is calculated.
+     */
+    private static final String SAFE_WIDTH_KEY = "cw";
+
+    /**
+     * The height of the screen's safe area. See
+     * https://developer.android.com/guide/topics/display-cutout
+     * for details on how this is calculated.
+     */
+    private static final String SAFE_HEIGHT_KEY = "ch";
+
+    /**
+     * Optional parameter to pass application engine name
+     */
+    private static final String APP_ENGINE_NAME = "e_name";
+
+    /**
+     * Optional, version of the application engine
+     */
+    private static final String APP_ENGINE_VERSION = "e_ver";
+
     private StringBuilder mStringBuilder;
     private boolean mFirstParam;
+    private static AppEngineInfo mAppEngineInfo = null;
 
     public abstract String generateUrlString(String serverHostname);
 
@@ -146,14 +180,55 @@ protected void setDeviceInfo(String... info) {
     protected void appendAdvertisingInfoTemplates() {
         addParam(UDID_KEY, PlayServicesUrlRewriter.UDID_TEMPLATE);
         addParam(DNT_KEY, PlayServicesUrlRewriter.DO_NOT_TRACK_TEMPLATE);
+        addParam(MOPUB_ID_KEY, PlayServicesUrlRewriter.MOPUB_ID_TEMPLATE);
+    }
+
+    /**
+     *
+     * @param engineInfo {@link com.mopub.common.AppEngineInfo}
+     */
+    public static void setAppEngineInfo(@NonNull final AppEngineInfo engineInfo) {
+        mAppEngineInfo = engineInfo;
+    }
+
+    /**
+     * Add parameters 'e_name' and 'e_ver' to the URL
+     */
+    protected void appendAppEngineInfo() {
+        final AppEngineInfo info = mAppEngineInfo;
+        if (info != null) {
+            addParam(APP_ENGINE_NAME, info.mName);
+            addParam(APP_ENGINE_VERSION, info.mVersion);
+        }
     }
 
     /**
      * Adds the width and height.
      *
      * @param dimensions The width and height of the screen
+     * @param requestedAdSize The requested width and height for the ad.
+     * @param windowInsets The WindowInsets for the current window.
      */
-    protected void setDeviceDimensions(@NonNull final Point dimensions) {
+    protected void setDeviceDimensions(@NonNull final Point dimensions, 
+                                       @Nullable final Point requestedAdSize,
+                                       @Nullable final WindowInsets windowInsets) {
+        final int requestedWidth = ((requestedAdSize != null) ? requestedAdSize.x : 0);
+        final int requestedHeight = ((requestedAdSize != null) ? requestedAdSize.y : 0);
+      
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P
+                && windowInsets != null
+                && windowInsets.getDisplayCutout() != null) {
+            final DisplayCutout displayCutout = windowInsets.getDisplayCutout();
+            final int safeWidth = dimensions.x - displayCutout.getSafeInsetLeft() - displayCutout.getSafeInsetRight();
+            final int safeHeight = dimensions.y - displayCutout.getSafeInsetTop() - displayCutout.getSafeInsetBottom();
+          
+            addParam(SAFE_WIDTH_KEY, "" + Math.min(safeWidth, requestedWidth));
+            addParam(SAFE_HEIGHT_KEY, "" + Math.min(safeHeight, requestedHeight));
+        } else {
+            addParam(SAFE_WIDTH_KEY, "" + requestedWidth);
+            addParam(SAFE_HEIGHT_KEY, "" + requestedHeight);
+        }
+      
         addParam(WIDTH_KEY, "" + dimensions.x);
         addParam(HEIGHT_KEY, "" + dimensions.y);
     }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
index 13ce2bdc..4d08bcb1 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
@@ -6,8 +6,12 @@
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
@@ -20,6 +24,8 @@
 import static com.mopub.common.util.Drawables.RIGHT_ARROW;
 import static com.mopub.common.util.Drawables.UNLEFT_ARROW;
 import static com.mopub.common.util.Drawables.UNRIGHT_ARROW;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 
 class BrowserWebViewClient extends WebViewClient {
 
@@ -98,4 +104,14 @@ public void onPageFinished(WebView view, String url) {
                 : UNRIGHT_ARROW.createDrawable(mMoPubBrowser);
         mMoPubBrowser.getForwardButton().setImageDrawable(forwardImageDrawable);
     }
+
+    @RequiresApi(Build.VERSION_CODES.O)
+    @Override
+    public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+        MoPubLog.log(CUSTOM, (detail != null && detail.didCrash())
+                ? RENDER_PROCESS_GONE_WITH_CRASH
+                : RENDER_PROCESS_GONE_UNSPECIFIED);
+        mMoPubBrowser.finish();
+        return true;
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
index f7336e6e..be326a15 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DefaultAdapterClasses.java
@@ -19,10 +19,10 @@
     FACEBOOK_ADAPTER_CONFIGURATION("com.mopub.mobileads.FacebookAdapterConfiguration"),
     FLURRY_ADAPTER_CONFIGURATION("com.mopub.mobileads.FlurryAdapterConfiguration"),
     IRON_SOURCE_ADAPTER_CONFIGURATION("com.mopub.mobileads.IronSourceAdapterConfiguration"),
-    MILLENNIAL_ADAPTER_CONFIGURATION("com.mopub.mobileads.MillennialAdapterConfiguration"),
     GOOGLE_PLAY_SERVICES_ADAPTER_CONFIGURATION("com.mopub.mobileads.GooglePlayServicesAdapterConfiguration"),
     TAPJOY_ADAPTER_CONFIGURATION("com.mopub.mobileads.TapjoyAdapterConfiguration"),
     UNITY_ADS_ADAPTER_CONFIGURATION("com.mopub.mobileads.UnityAdsAdapterConfiguration"),
+    VERIZON_ADAPTER_CONFIGURATION("com.mopub.mobileads.VerizonAdapterConfiguration"),
     VUNGLE_ADAPTER_CONFIGURATION("com.mopub.mobileads.VungleAdapterConfiguration");
 
     private final String mClassName;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
index 84b0d3e3..9badb91b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -10,6 +10,7 @@
 import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.privacy.PersonalInfoManager;
@@ -27,7 +28,7 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.INIT_FINISHED;
 
 public class MoPub {
-    public static final String SDK_VERSION = "5.6.0";
+    public static final String SDK_VERSION = "5.8.0";
 
     public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
@@ -141,6 +142,19 @@ public static BrowserAgent getBrowserAgent() {
         return sBrowserAgent;
     }
 
+    /**
+     * Set optional application engine information, for example {'unity', "123"}
+     *
+     * @param engineInfo {@link com.mopub.common.AppEngineInfo}
+     */
+    public static void setEngineInformation(@NonNull final AppEngineInfo engineInfo) {
+        Preconditions.checkNotNull(engineInfo);
+
+        if (!TextUtils.isEmpty(engineInfo.mName) && !TextUtils.isEmpty(engineInfo.mVersion)) {
+            BaseUrlGenerator.setAppEngineInfo(engineInfo);
+        }
+    }
+
     /**
      * Initializes the MoPub SDK. Call this before making any rewarded ads or advanced bidding
      * requests. This will do the rewarded video custom event initialization any number of times,
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
index 86c30d1f..2148e91d 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
@@ -159,6 +159,19 @@ protected void onPause() {
     @Override
     protected void onResume() {
         super.onResume();
+
+        int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            flags |= View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+        }
+
+        mWebView.setSystemUiVisibility(flags);
+
         CookieSyncManager.getInstance().startSync();
         mWebView.setWebChromeClient(new WebChromeClient() {
             public void onProgressChanged(WebView webView, int progress) {
@@ -249,4 +262,10 @@ private ImageButton getButton(final Drawable drawable) {
     void setWebView(WebView webView) {
         mWebView = webView;
     }
+
+    @Deprecated
+    @VisibleForTesting
+    int getSystemUiVisibility() {
+        return mWebView.getSystemUiVisibility();
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SdkConfiguration.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SdkConfiguration.java
index 496d6396..a8ad5dc0 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SdkConfiguration.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SdkConfiguration.java
@@ -5,6 +5,10 @@
 package com.mopub.common;
 
 import android.support.annotation.NonNull;
+import android.text.TextUtils;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.mobileads.base.BuildConfig;
 
 import java.util.Arrays;
 import java.util.Collections;
@@ -13,6 +17,7 @@
 import java.util.Set;
 
 import static com.mopub.common.logging.MoPubLog.LogLevel;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.INIT_FAILED;
 
 /**
  * Data object holding any SDK initialization parameters.
@@ -126,9 +131,19 @@ public boolean getLegitimateInterestAllowed() {
          * Use this builder instead of creating a new SdkConfiguration. This Builder needs any ad
          * unit that is used by this app.
          *
-         * @param adUnitId Any ad unit id used by this app. This cannot be null.
+         * @param adUnitId Any ad unit id used by this app. This cannot be empty.
          */
         public Builder(@NonNull final String adUnitId) {
+            if (TextUtils.isEmpty(adUnitId)) {
+                final IllegalArgumentException iae = new
+                        IllegalArgumentException("Ad unit cannot be empty at initialization");
+                MoPubLog.setLogLevel(MoPubLog.getLogLevel());
+                MoPubLog.log(INIT_FAILED, "Pass in an ad unit used by this app", iae);
+                if (BuildConfig.DEBUG) {
+                    throw iae;
+                }
+            }
+
             this.adUnitId = adUnitId;
             adapterConfigurations = DefaultAdapterClasses.getClassNamesSet();
             mediationSettings = new MediationSettings[0];
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
index 5c676bb6..61d8ac81 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
@@ -61,6 +61,8 @@ protected void performAction(
                 moPubSchemeListener.onClose();
             } else if ("failLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFailLoad();
+            } else if ("crash".equals(host)) {
+                moPubSchemeListener.onCrash();
             } else {
                 throw new IntentNotResolvableException("Could not handle MoPub Scheme url: " + uri);
             }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
index 03a7ffbd..52b7ec63 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
@@ -59,6 +59,7 @@ void urlHandlingFailed(@NonNull final String url,
         void onFinishLoad();
         void onClose();
         void onFailLoad();
+        void onCrash();
     }
 
     /**
@@ -172,6 +173,8 @@ public void urlHandlingFailed(@NonNull String url, @NonNull UrlAction lastFailed
         @Override public void onClose() { }
 
         @Override public void onFailLoad() { }
+
+        @Override public void onCrash() { }
     };
 
     @NonNull
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
index 4cd7e5da..296e5b77 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
@@ -550,6 +550,8 @@ public LogLevel getLogLevel() {
         // Comma delimited string of advanced bidder that were initialized, or "No bidders initialized."
         INIT_FINISHED(LogLevel.INFO, "SDK initialized and ready to display ads.\nInitialized adapters:\n{0}"),
 
+        INIT_FAILED(LogLevel.INFO, "SDK initialization failed - {0}\n{1}"),
+
         // Params:
         // Custom message string
         CUSTOM(LogLevel.DEBUG, "SDK Log - {0}"),
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
index 20ede80f..2cde1610 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogLayout.java
@@ -11,9 +11,11 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
@@ -28,6 +30,8 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_NO;
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_YES;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 
 class ConsentDialogLayout extends CloseableLayout {
     static int FINISHED_LOADING = 101;
@@ -142,6 +146,15 @@ public void onPageFinished(WebView view, String url) {
             super.onPageFinished(view, url);
         }
 
+        @RequiresApi(Build.VERSION_CODES.O)
+        @Override
+        public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+            MoPubLog.log(CUSTOM, (detail != null && detail.didCrash())
+                    ? RENDER_PROCESS_GONE_WITH_CRASH
+                    : RENDER_PROCESS_GONE_UNSPECIFIED);
+            return true;
+        }
+
         @Override
         public boolean shouldOverrideUrlLoading(WebView view, String url) {
             if (URL_CONSENT_YES.equals(url)) {
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogUrlGenerator.java
index 67658744..d66fc9ae 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/ConsentDialogUrlGenerator.java
@@ -76,6 +76,7 @@ public String generateUrlString(String serverHostname) {
         addParam(AD_UNIT_ID_KEY, mAdUnitId);
         addParam(CURRENT_CONSENT_STATUS_KEY, mCurrentConsentStatus);
         addParam(SDK_VERSION_KEY, MoPub.SDK_VERSION);
+        appendAppEngineInfo();
         addParam(LANGUAGE_KEY, ClientMetadata.getCurrentLanguage(mContext));
         addParam(GDPR_APPLIES, mGdprApplies);
         addParam(FORCE_GDPR_APPLIES, mForceGdprApplies);
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoData.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoData.java
index 95349b91..e814e90b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoData.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoData.java
@@ -23,6 +23,7 @@
     private static final String PERSONAL_INFO_DATA_SHARED_PREFS = "com.mopub.privacy";
     private static final String PERSONAL_INFO_PREFIX = "info/";
     private static final String AD_UNIT_ID_SP_KEY = PERSONAL_INFO_PREFIX + "adunit";
+    private static final String CACHED_LAST_AD_UNIT_ID_USED_FOR_INIT_SP_KEY = PERSONAL_INFO_PREFIX + "cached_last_ad_unit_id_used_for_init";
     private static final String CONSENT_STATUS_SP_KEY = PERSONAL_INFO_PREFIX + "consent_status";
     private static final String LAST_SUCCESSFULLY_SYNCED_CONSENT_STATUS_SP_KEY = PERSONAL_INFO_PREFIX + "last_successfully_synced_consent_status";
     private static final String IS_WHITELISTED_SP_KEY = PERSONAL_INFO_PREFIX + "is_whitelisted";
@@ -53,6 +54,7 @@
 
     // Values that are locally generated
     @NonNull private String mAdUnitId;
+    @Nullable private String mCachedLastAdUnitIdUsedForInit;
     @NonNull private ConsentStatus mConsentStatus;
     @Nullable private ConsentStatus mLastSuccessfullySyncedConsentStatus;
     @Nullable private String mConsentChangeReason;
@@ -76,20 +78,21 @@
     private boolean mReacquireConsent;
     @Nullable private Boolean mGdprApplies;
 
-    PersonalInfoData(@NonNull final Context context, @NonNull final String adUnitId) {
+    PersonalInfoData(@NonNull final Context context) {
         Preconditions.checkNotNull(context);
-        Preconditions.checkNotNull(adUnitId);
 
         mAppContext = context.getApplicationContext();
         mConsentStatus = ConsentStatus.UNKNOWN;
+        mAdUnitId = "";
         getStateFromDisk();
-        mAdUnitId = adUnitId;
     }
 
     private void getStateFromDisk() {
         final SharedPreferences sharedPreferences = SharedPreferencesHelper.getSharedPreferences(
                 mAppContext, PERSONAL_INFO_DATA_SHARED_PREFS);
         mAdUnitId = sharedPreferences.getString(AD_UNIT_ID_SP_KEY, "");
+        mCachedLastAdUnitIdUsedForInit = sharedPreferences.getString(
+                CACHED_LAST_AD_UNIT_ID_USED_FOR_INIT_SP_KEY, null);
         mConsentStatus = ConsentStatus.fromString(sharedPreferences.getString(
                 CONSENT_STATUS_SP_KEY, ConsentStatus.UNKNOWN.name()));
         final String lastSuccessfullySyncedConsentStatusString = sharedPreferences.getString(
@@ -143,6 +146,7 @@ void writeToDisk() {
         final SharedPreferences.Editor editor = SharedPreferencesHelper.getSharedPreferences(
                 mAppContext, PERSONAL_INFO_DATA_SHARED_PREFS).edit();
         editor.putString(AD_UNIT_ID_SP_KEY, mAdUnitId);
+        editor.putString(CACHED_LAST_AD_UNIT_ID_USED_FOR_INIT_SP_KEY, mCachedLastAdUnitIdUsedForInit);
         editor.putString(CONSENT_STATUS_SP_KEY, mConsentStatus.name());
         editor.putString(LAST_SUCCESSFULLY_SYNCED_CONSENT_STATUS_SP_KEY,
                 mLastSuccessfullySyncedConsentStatus == null ? null : mLastSuccessfullySyncedConsentStatus.name());
@@ -174,6 +178,28 @@ String getAdUnitId() {
         return mAdUnitId;
     }
 
+    void setAdUnit(@NonNull final String adUnitId) {
+        mAdUnitId = adUnitId;
+    }
+
+    @Nullable
+    String getCachedLastAdUnitIdUsedForInit() {
+        return mCachedLastAdUnitIdUsedForInit;
+    }
+
+    void setCachedLastAdUnitIdUsedForInit(@NonNull final String adUnitId) {
+        mCachedLastAdUnitIdUsedForInit = adUnitId;
+    }
+
+    @Nullable
+    String chooseAdUnit() {
+        final String adUnitId = mAdUnitId;
+        if (!TextUtils.isEmpty(adUnitId)) {
+            return adUnitId;
+        }
+        return mCachedLastAdUnitIdUsedForInit;
+    }
+
     @NonNull
     ConsentStatus getConsentStatus() {
         return mConsentStatus;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoManager.java
index b3552c17..58423bd8 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/PersonalInfoManager.java
@@ -83,7 +83,13 @@ public PersonalInfoManager(@NonNull final Context context, @NonNull final String
 
         mConsentDialogController = new ConsentDialogController(mAppContext);
 
-        mPersonalInfoData = new PersonalInfoData(mAppContext, adUnitId);
+        mPersonalInfoData = new PersonalInfoData(mAppContext);
+        if (!TextUtils.isEmpty(adUnitId) &&
+                !adUnitId.equals(mPersonalInfoData.getCachedLastAdUnitIdUsedForInit())) {
+            mPersonalInfoData.setAdUnit("");
+            mPersonalInfoData.setCachedLastAdUnitIdUsedForInit(adUnitId);
+            mPersonalInfoData.writeToDisk();
+        }
 
         mConversionTracker = new MoPubConversionTracker(mAppContext);
 
@@ -140,7 +146,8 @@ public void onIdChanged(@NonNull final AdvertisingId oldId,
      * @return True for yes, false for no.
      */
     public boolean shouldShowConsentDialog() {
-        if (gdprApplies() == null || !gdprApplies()) {
+        final Boolean gdprApplies = gdprApplies();
+        if (gdprApplies == null || !gdprApplies) {
             return false;
         }
 
@@ -448,7 +455,7 @@ void requestSync() {
         mLastSyncRequestTimeUptimeMs = SystemClock.uptimeMillis();
         final SyncUrlGenerator syncUrlGenerator = new SyncUrlGenerator(mAppContext,
                 mSyncRequestConsentStatus.getValue());
-        syncUrlGenerator.withAdUnitId(mPersonalInfoData.getAdUnitId())
+        syncUrlGenerator.withAdUnitId(mPersonalInfoData.chooseAdUnit())
                 .withUdid(mPersonalInfoData.getUdid())
                 .withLastChangedMs(mPersonalInfoData.getLastChangedMs())
                 .withLastConsentStatus(mPersonalInfoData.getLastSuccessfullySyncedConsentStatus())
@@ -478,7 +485,7 @@ void requestSync() {
      * @return ConsentData which is a snapshot of the underlying data store.
      */
     public ConsentData getConsentData() {
-        return new PersonalInfoData(mAppContext, mPersonalInfoData.getAdUnitId());
+        return new PersonalInfoData(mAppContext);
     }
 
     /**
@@ -622,6 +629,12 @@ public void onSuccess(final SyncResponse response) {
                 }
             }
 
+            final String cachedLastAdUnitIdUsedForInit =
+                    mPersonalInfoData.getCachedLastAdUnitIdUsedForInit();
+            if (!TextUtils.isEmpty(cachedLastAdUnitIdUsedForInit) &&
+                    mPersonalInfoData.getAdUnitId().isEmpty()) {
+                mPersonalInfoData.setAdUnit(cachedLastAdUnitIdUsedForInit);
+            }
             mPersonalInfoData.setLastSuccessfullySyncedConsentStatus(mSyncRequestConsentStatus);
             mPersonalInfoData.setWhitelisted(response.isWhitelisted());
             mPersonalInfoData.setCurrentVendorListVersion(response.getCurrentVendorListVersion());
@@ -747,6 +760,17 @@ public void onReacquireConsent(@Nullable final String consentChangeReason) {
         public void onForceGdprApplies() {
             forceGdprApplies();
         }
+
+        @Override
+        public void onRequestSuccess(@Nullable final String adUnitId) {
+            // Cache the ad unit if the ad request succeeded
+            if (!TextUtils.isEmpty(mPersonalInfoData.getAdUnitId()) ||
+                    TextUtils.isEmpty(adUnitId)) {
+                return;
+            }
+            mPersonalInfoData.setAdUnit(adUnitId);
+            mPersonalInfoData.writeToDisk();
+        }
     }
 
     @NonNull
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/SyncUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/SyncUrlGenerator.java
index 15d8792a..c234c94c 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/SyncUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/privacy/SyncUrlGenerator.java
@@ -141,6 +141,7 @@ public String generateUrlString(@NonNull final String serverHostname) {
 
         addParam(AD_UNIT_ID_KEY, mAdUnitId);
         addParam(SDK_VERSION_KEY, MoPub.SDK_VERSION);
+        appendAppEngineInfo();
         addParam(LAST_CHANGED_MS_KEY, mLastChangedMs);
         addParam(LAST_CONSENT_STATUS_KEY, mLastConsentStatus);
         addParam(CURRENT_CONSENT_STATUS_KEY, mCurrentConsentStatus);
@@ -155,6 +156,7 @@ public String generateUrlString(@NonNull final String serverHostname) {
         addParam(FORCED_GDPR_APPLIES_CHANGED, mForceGdprAppliesChanged);
         addParam(BUNDLE_ID_KEY, ClientMetadata.getInstance(mContext).getAppPackageName());
         addParam(DNT_KEY, PlayServicesUrlRewriter.DO_NOT_TRACK_TEMPLATE);
+        addParam(MOPUB_ID_KEY, PlayServicesUrlRewriter.MOPUB_ID_TEMPLATE);
 
         return getFinalUrlString();
     }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
index a6efbd84..51e8749b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
@@ -9,6 +9,7 @@
     BACKOFF_MS("backoff_ms"),
     AD_TIMEOUT("x-ad-timeout-ms"),
     AD_TYPE("x-adtype"),
+    IMPRESSION_DATA("impdata"),
     CLICK_TRACKING_URL("x-clickthrough"),
     CUSTOM_EVENT_DATA("x-custom-event-class-data"),
     CUSTOM_EVENT_NAME("x-custom-event-class-name"),
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index deaf935a..21ebfae2 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -6,6 +6,7 @@
 
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.graphics.Point;
 import android.location.Location;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
@@ -15,6 +16,7 @@
 import android.text.TextUtils;
 import android.view.Gravity;
 import android.view.View;
+import android.view.WindowInsets;
 import android.widget.FrameLayout;
 
 import com.mopub.common.AdReport;
@@ -31,6 +33,7 @@
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
 import com.mopub.network.MoPubNetworkError;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 import com.mopub.volley.NetworkResponse;
 import com.mopub.volley.Request;
@@ -95,10 +98,13 @@
     private String mKeywords;
     private String mUserDataKeywords;
     private Location mLocation;
+    private Point mRequestedAdSize;
+    private WindowInsets mWindowInsets;
     private boolean mIsTesting;
     private boolean mAdWasLoaded;
     @Nullable private String mAdUnitId;
     @Nullable private Integer mRefreshTimeMillis;
+    @NonNull private String mLastTrackedRequestId;
 
     public static void setShouldHonorServerDimensions(View view) {
         sViewShouldHonorServerDimensions.put(view, true);
@@ -132,11 +138,16 @@ public void onErrorResponse(final VolleyError volleyError) {
 
         mRefreshRunnable = new Runnable() {
             public void run() {
+                final MoPubView moPubView = mMoPubView;
+                if (moPubView != null) {
+                    setRequestedAdSize(moPubView.resolveAdSize());
+                }
                 internalLoadAd();
             }
         };
         mRefreshTimeMillis = DEFAULT_REFRESH_TIME_MILLISECONDS;
         mHandler = new Handler();
+        mLastTrackedRequestId = "";
     }
 
     @VisibleForTesting
@@ -358,6 +369,14 @@ public void setLocation(Location location) {
         mLocation = location;
     }
 
+    void setRequestedAdSize(final Point requestedAdSize) {
+        mRequestedAdSize = requestedAdSize;
+    }
+
+    public void setWindowInsets(final WindowInsets windowInsets) {
+        mWindowInsets = windowInsets;
+    }
+
     public String getAdUnitId() {
         return mAdUnitId;
     }
@@ -483,6 +502,7 @@ void cleanup() {
         mMoPubView = null;
         mContext = null;
         mUrlGenerator = null;
+        mLastTrackedRequestId = "";
 
         // Flag as destroyed. LoadUrlTask checks this before proceeding in its onPostExecute().
         mIsDestroyed = true;
@@ -498,8 +518,19 @@ Integer getAdTimeoutDelay(int defaultValue) {
 
     void trackImpression() {
         if (mAdResponse != null) {
-            TrackingRequest.makeTrackingHttpRequest(mAdResponse.getImpressionTrackingUrls(),
-                    mContext);
+            final String requestId = mAdResponse.getRequestId();
+            // If we have already tracked these impressions, don't do it again
+            if (mLastTrackedRequestId.equals(requestId)) {
+                MoPubLog.log(CUSTOM, "Ignoring duplicate impression.");
+                return;
+            }
+
+            if (requestId != null) {
+                mLastTrackedRequestId = requestId;
+            }
+            TrackingRequest.makeTrackingHttpRequest(mAdResponse.getImpressionTrackingUrls(), mContext);
+
+            new SingleImpression(mAdResponse.getAdUnitId(), mAdResponse.getImpressionData()).sendImpression();
         }
     }
 
@@ -544,7 +575,9 @@ String generateAdUrl() {
                 .withAdUnitId(mAdUnitId)
                 .withKeywords(mKeywords)
                 .withUserDataKeywords(canCollectPersonalInformation ? mUserDataKeywords : null)
-                .withLocation(canCollectPersonalInformation ? mLocation : null);
+                .withLocation(canCollectPersonalInformation ? mLocation : null)
+                .withRequestedAdSize(mRequestedAdSize)
+                .withWindowInsets(mWindowInsets);
 
         return mUrlGenerator.generateUrlString(Constants.HOST);
     }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
index 8426031e..92c09dc6 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
@@ -9,12 +9,15 @@
 import android.content.Context;
 import android.content.Intent;
 import android.media.AudioManager;
+import android.support.annotation.Nullable;
 
 import com.mopub.common.Constants;
+import com.mopub.common.CreativeOrientation;
 import com.mopub.common.logging.MoPubLog;
 
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
+import static com.mopub.common.DataKeys.CREATIVE_ORIENTATION_KEY;
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
 import static com.mopub.mobileads.VastVideoViewController.VAST_VIDEO_CONFIG;
 
@@ -42,9 +45,10 @@ static Intent createIntentMraid(final Context context,
 
     static void startVast(final Context context,
             final VastVideoConfig vastVideoConfig,
-            final long broadcastIdentifier) {
+            final long broadcastIdentifier,
+            @Nullable final CreativeOrientation orientation) {
         final Intent intentVideoPlayerActivity = createIntentVast(context, vastVideoConfig,
-                broadcastIdentifier);
+                broadcastIdentifier, orientation);
         try {
             context.startActivity(intentVideoPlayerActivity);
         } catch (ActivityNotFoundException e) {
@@ -54,12 +58,14 @@ static void startVast(final Context context,
 
     static Intent createIntentVast(final Context context,
             final VastVideoConfig vastVideoConfig,
-            final long broadcastIdentifier) {
+            final long broadcastIdentifier,
+            @Nullable final CreativeOrientation orientation) {
         final Intent intentVideoPlayerActivity = new Intent(context, MraidVideoPlayerActivity.class);
         intentVideoPlayerActivity.setFlags(FLAG_ACTIVITY_NEW_TASK);
         intentVideoPlayerActivity.putExtra(VIDEO_CLASS_EXTRAS_KEY, "vast");
         intentVideoPlayerActivity.putExtra(VAST_VIDEO_CONFIG, vastVideoConfig);
         intentVideoPlayerActivity.putExtra(BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
+        intentVideoPlayerActivity.putExtra(CREATIVE_ORIENTATION_KEY, orientation);
         return intentVideoPlayerActivity;
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
index 28e7384a..5fd1771f 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
@@ -50,7 +50,7 @@ protected BaseVideoViewController(final Context context,
 
      protected void onCreate() {
         final RelativeLayout.LayoutParams adViewLayout = new RelativeLayout.LayoutParams(
-                RelativeLayout.LayoutParams.FILL_PARENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
+                RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT);
         adViewLayout.addRule(RelativeLayout.CENTER_IN_PARENT);
         mLayout.addView(getVideoView(), 0, adViewLayout);
         mBaseVideoViewControllerListener.onSetContentView(mLayout);
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ConversionUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ConversionUrlGenerator.java
index 36f7a804..e36eb86b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ConversionUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ConversionUrlGenerator.java
@@ -80,6 +80,7 @@ public String generateUrlString(String serverHostname) {
             addParam(SESSION_TRACKER_KEY, true);
         }
         addParam(SDK_VERSION_KEY, MoPub.SDK_VERSION);
+        appendAppEngineInfo();
         addParam(CURRENT_CONSENT_STATUS_KEY, mCurrentConsentStatus);
         addParam(CONSENTED_VENDOR_LIST_VERSION_KEY, mConsentedVendorListVersion);
         addParam(CONSENTED_PRIVACY_POLICY_VERSION_KEY, mConsentedPrivacyPolicyVersion);
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
index c80eb993..fdd9736b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
@@ -82,6 +82,9 @@ public void onFailLoad() {
                         mHtmlWebView.stopLoading();
                         mHtmlWebViewListener.onFailed(UNSPECIFIED);
                     }
+
+                    @Override
+                    public void onCrash() { }
                 })
                 .build().handleUrl(mContext, url, mHtmlWebView.wasClicked());
         return true;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
index b1b43ef8..320c1b75 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
@@ -16,6 +16,8 @@
 
     // Client ad load errors
     INTERNAL_ERROR("Unable to serve ad due to invalid internal state."),
+    RENDER_PROCESS_GONE_WITH_CRASH("Render process for this WebView has crashed."),
+    RENDER_PROCESS_GONE_UNSPECIFIED("Render process is gone for this WebView. Unspecified cause."),
     CANCELLED("Ad request was cancelled."),
     MISSING_AD_UNIT_ID("Unable to serve ad due to missing or empty ad unit ID."),
     NO_CONNECTION("No internet connection detected."),
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index 2a35bf22..8ac8290a 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -9,12 +9,18 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Point;
 import android.location.Location;
+import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
+import android.view.ViewGroup;
+import android.view.WindowInsets;
 import android.widget.FrameLayout;
 
 import com.mopub.common.AdFormat;
@@ -24,6 +30,7 @@
 import com.mopub.common.util.ManifestUtils;
 import com.mopub.common.util.Reflection;
 import com.mopub.common.util.Visibility;
+import com.mopub.mobileads.base.R;
 import com.mopub.mobileads.factories.AdViewControllerFactory;
 
 import java.util.Map;
@@ -38,6 +45,7 @@
 import static com.mopub.common.logging.MoPubLog.AdLogEvent.SHOW_ATTEMPTED;
 import static com.mopub.common.logging.MoPubLog.AdLogEvent.SHOW_FAILED;
 import static com.mopub.common.logging.MoPubLog.AdLogEvent.SHOW_SUCCESS;
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM_WITH_THROWABLE;
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.ERROR;
 import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_NOT_FOUND;
 
@@ -50,6 +58,67 @@
         public void onBannerCollapsed(MoPubView banner);
     }
 
+    /**
+     * MoPubAdSizeInt
+     *
+     * Integer values that represent the possible predefined ad heights in dp.
+     */
+    interface MoPubAdSizeInt {
+        int MATCH_VIEW_INT = -1;
+        int HEIGHT_50_INT = 50;
+        int HEIGHT_90_INT = 90;
+        int HEIGHT_250_INT = 250;
+        int HEIGHT_280_INT = 280;
+    }
+
+    /**
+     * MoPubAdSize
+     *
+     * These predefined constants are used to specify the desired height for an ad.
+     */
+    public enum MoPubAdSize implements MoPubAdSizeInt {
+
+        MATCH_VIEW(MATCH_VIEW_INT),
+        HEIGHT_50(HEIGHT_50_INT),
+        HEIGHT_90(HEIGHT_90_INT),
+        HEIGHT_250(HEIGHT_250_INT),
+        HEIGHT_280(HEIGHT_280_INT);
+
+        final private int mSizeInt;
+
+        MoPubAdSize(final int sizeInt) {
+            this.mSizeInt = sizeInt;
+        }
+
+        /**
+         * This valueOf overload is used to get the associated the MoPubAdSize enum from an int (likely
+         * from XML layout).
+         *
+         * @param adSizeInt The int value for which the MoPubAdSize is needed.
+         * @return The MoPubAdSize associated with the level. Will return CUSTOM by default.
+         */
+        @NonNull
+        public static MoPubAdSize valueOf(final int adSizeInt) {
+            switch (adSizeInt) {
+                case HEIGHT_50_INT:
+                    return HEIGHT_50;
+                case HEIGHT_90_INT:
+                    return HEIGHT_90;
+                case HEIGHT_250_INT:
+                    return HEIGHT_250;
+                case HEIGHT_280_INT:
+                    return HEIGHT_280;
+                case MATCH_VIEW_INT:
+                default:
+                    return MATCH_VIEW;
+            }
+        }
+
+        public int toInt() {
+            return mSizeInt;
+        }
+    }
+
     private static final String CUSTOM_EVENT_BANNER_ADAPTER_FACTORY =
             "com.mopub.mobileads.factories.CustomEventBannerAdapterFactory";
 
@@ -61,7 +130,7 @@
     private Context mContext;
     private int mScreenVisibility;
     private BroadcastReceiver mScreenStateReceiver;
-
+    private MoPubView.MoPubAdSize mMoPubAdSize;
     private BannerAdListener mBannerAdListener;
 
     public MoPubView(Context context) {
@@ -71,6 +140,9 @@ public MoPubView(Context context) {
     public MoPubView(Context context, AttributeSet attrs) {
         super(context, attrs);
 
+        mMoPubAdSize = getMoPubAdSizeFromAttributeSet(context, attrs,
+                MoPubAdSize.MATCH_VIEW);
+
         ManifestUtils.checkWebViewActivitiesDeclared(context);
 
         mContext = context;
@@ -83,6 +155,22 @@ public MoPubView(Context context, AttributeSet attrs) {
         registerScreenStateBroadcastReceiver();
     }
 
+    @Override
+    protected void onAttachedToWindow() {
+        super.onAttachedToWindow();
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+            setWindowInsets(getRootWindowInsets());
+        }
+    }
+
+    @Override
+    public WindowInsets onApplyWindowInsets(WindowInsets insets) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+            setWindowInsets(insets);
+        }
+        return super.onApplyWindowInsets(insets);
+    }
+
     private void registerScreenStateBroadcastReceiver() {
         mScreenStateReceiver = new BroadcastReceiver() {
             public void onReceive(final Context context, final Intent intent) {
@@ -113,9 +201,15 @@ private void unregisterScreenStateBroadcastReceiver() {
         }
     }
 
+    public void loadAd(final MoPubAdSize moPubAdSize) {
+        setAdSize(moPubAdSize);
+        loadAd();
+    }
+
     public void loadAd() {
         if (mAdViewController != null) {
             MoPubLog.log(LOAD_ATTEMPTED);
+            mAdViewController.setRequestedAdSize(resolveAdSize());
             mAdViewController.loadAd();
         }
     }
@@ -215,7 +309,7 @@ protected void registerClick() {
     }
 
     protected void trackNativeImpression() {
-        MoPubLog.log(CUSTOM, "Tracking impression for native adapter.");
+        MoPubLog.log(CUSTOM, "Tracking impression. MoPubView internal.");
         if (mAdViewController != null) mAdViewController.trackImpression();
     }
 
@@ -281,6 +375,51 @@ protected void creativeDownloaded() {
         adLoaded();
     }
 
+    private MoPubAdSize getMoPubAdSizeFromAttributeSet(
+            final Context context,
+            final AttributeSet attrs,
+            MoPubAdSize defaultMoPubAdSize) {
+        TypedArray a = context.getTheme().obtainStyledAttributes(
+                attrs,
+                R.styleable.MoPubView,
+                0, 0);
+
+        MoPubAdSize returnValue = defaultMoPubAdSize;
+
+        try {
+            final int moPubAdSizeInt = a.getInteger(R.styleable.MoPubView_moPubAdSize,
+                    defaultMoPubAdSize.toInt());
+            returnValue = MoPubAdSize.valueOf(moPubAdSizeInt);
+        } catch(Resources.NotFoundException rnfe) {
+            MoPubLog.log(CUSTOM_WITH_THROWABLE,
+                    "Encountered a problem while setting the MoPubAdSize", 
+                    rnfe);
+        } finally {
+            a.recycle();
+        }
+
+        return returnValue;
+    }
+
+    protected Point resolveAdSize() {
+        final Point resolvedAdSize = new Point(getWidth(), getHeight());
+        final ViewGroup.LayoutParams layoutParams = getLayoutParams();
+
+        // If WRAP_CONTENT or MATCH_PARENT
+        if (layoutParams != null && layoutParams.width < 0) {
+            resolvedAdSize.x = ((View) getParent()).getWidth();
+        }
+
+        // MoPubAdSize only applies to height
+        if (mMoPubAdSize != MoPubAdSize.MATCH_VIEW) {
+            resolvedAdSize.y = mMoPubAdSize.toInt();
+        } else if (layoutParams != null && layoutParams.height < 0) {
+            resolvedAdSize.y = ((View) getParent()).getHeight();
+        }
+
+        return resolvedAdSize;
+    }
+
     ////////////////////////////////////////////////////////////////////////////////////////////////
 
     public void setAdUnitId(String adUnitId) {
@@ -423,6 +562,20 @@ public void forceRefresh() {
         }
     }
 
+    public void setAdSize(final MoPubAdSize moPubAdSize) {
+        mMoPubAdSize = moPubAdSize;
+    }
+
+    public MoPubAdSize getAdSize() {
+        return mMoPubAdSize;
+    }
+
+    void setWindowInsets(@NonNull final WindowInsets windowInsets) {
+        if (mAdViewController != null) {
+            mAdViewController.setWindowInsets(windowInsets);
+        }
+    }
+
     AdViewController getAdViewController() {
         return mAdViewController;
     }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
index 9591b41b..54e900c4 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
@@ -16,13 +16,18 @@
 import android.view.Window;
 import android.view.WindowManager;
 
+import com.mopub.common.CreativeOrientation;
 import com.mopub.common.IntentActions;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Intents;
 import com.mopub.common.util.Reflection;
 import com.mopub.mraid.MraidVideoViewController;
 
+import java.io.Serializable;
+
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
+import static com.mopub.common.DataKeys.CREATIVE_ORIENTATION_KEY;
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
 import static com.mopub.mobileads.BaseBroadcastReceiver.broadcastAction;
 
@@ -53,6 +58,14 @@ protected void onCreate(Bundle savedInstanceState) {
             return;
         }
 
+        final Serializable orientationExtra = getIntent().getSerializableExtra(
+                CREATIVE_ORIENTATION_KEY);
+        CreativeOrientation requestedOrientation = CreativeOrientation.DEVICE;
+        if (orientationExtra instanceof CreativeOrientation) {
+            requestedOrientation = (CreativeOrientation) orientationExtra;
+        }
+        DeviceUtils.lockOrientation(this, requestedOrientation);
+
         mBaseVideoController.onCreate();
     }
 
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
index afd2e772..ad295174 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
@@ -147,7 +147,9 @@ String getClickThroughUrl() {
 
         for (final Node trackerNode : trackerNodes) {
             final String trackerUrl = XmlUtils.getNodeValue(trackerNode);
-            companionCreativeViewTrackers.add(new VastTracker(trackerUrl));
+            if (trackerUrl != null) {
+                companionCreativeViewTrackers.add(new VastTracker(trackerUrl));
+            }
         }
 
         return companionCreativeViewTrackers;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
index 81ae8aa2..3d256be8 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
@@ -48,7 +48,7 @@
     @Nullable private VastXmlManagerAggregator mVastXmlManagerAggregator;
     @Nullable private String mDspCreativeId;
     private double mScreenAspectRatio;
-    private int mScreenAreaDp;
+    private int mScreenWidthDp;
 
     private final boolean mShouldPreCacheVideo;
 
@@ -73,8 +73,10 @@ public void prepareVastVideoConfiguration(@Nullable final String vastXml,
 
         if (mVastXmlManagerAggregator == null) {
             mVastManagerListener = vastManagerListener;
-            mVastXmlManagerAggregator = new VastXmlManagerAggregator(this, mScreenAspectRatio,
-                    mScreenAreaDp, context.getApplicationContext());
+            mVastXmlManagerAggregator = new VastXmlManagerAggregator(this,
+                    mScreenAspectRatio,
+                    mScreenWidthDp,
+                    context.getApplicationContext());
             mDspCreativeId = dspCreativeId;
 
             try {
@@ -157,10 +159,9 @@ private boolean updateDiskMediaFileUrl(
 
     private void initializeScreenDimensions(@NonNull final Context context) {
         Preconditions.checkNotNull(context, "context cannot be null");
-        // This currently assumes that all vast videos will be played in landscape
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
-        final int xPx = display.getWidth();
-        final int yPx = display.getHeight();
+        final int screenWidth = display.getWidth();
+        final int screenHeight = display.getHeight();
         // Use the screen density to convert x and y (in pixels) to DP. Also, check the density to
         // make sure that this is a valid density and that this is not going to divide by 0.
         float density = context.getResources().getDisplayMetrics().density;
@@ -168,17 +169,14 @@ private void initializeScreenDimensions(@NonNull final Context context) {
             density = 1;
         }
 
-        // For landscape, width is always greater than height
-        int screenWidth = Math.max(xPx, yPx);
-        int screenHeight = Math.min(xPx, yPx);
         mScreenAspectRatio = (double) screenWidth / screenHeight;
-        mScreenAreaDp = (int) ((screenWidth / density) * (screenHeight / density));
+        mScreenWidthDp = (int) (screenWidth / density);
     }
 
     @VisibleForTesting
     @Deprecated
-    int getScreenAreaDp() {
-        return mScreenAreaDp;
+    int getScreenWidthDp() {
+        return mScreenWidthDp;
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
index 8c4958d4..f1a78a59 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
@@ -22,6 +22,9 @@
     private static final String HEIGHT = "height";
     private static final String DELIVERY = "delivery";
     private static final String VIDEO_TYPE  = "type";
+    private static final String BITRATE = "bitrate";
+    private static final String BITRATE_MIN = "minBitrate";
+    private static final String BITRATE_MAX = "maxBitrate";
 
     @NonNull private final Node mMediaNode;
 
@@ -84,4 +87,37 @@ String getType() {
     String getMediaUrl() {
         return XmlUtils.getNodeValue(mMediaNode);
     }
+
+    /**
+     * The Bitrate of the video or {@code null} if not specified.
+     *
+     * @return Integer representation of the video in kbps or {@code null}
+     */
+    @Nullable
+    Integer getBitrate() {
+        // the "bitrate" attribute is the average across the entire video:
+        final Integer bitrate = XmlUtils.getAttributeValueAsInt(mMediaNode, BITRATE);
+
+        if (bitrate != null) {
+            return bitrate;
+        }
+
+        // If an average bitrate isn't provided:
+        final Integer minBitrate = XmlUtils.getAttributeValueAsInt(mMediaNode, BITRATE_MIN);
+        final Integer maxBitrate = XmlUtils.getAttributeValueAsInt(mMediaNode, BITRATE_MAX);
+
+        // Use the min and max to calculate the average, if both are non-null:
+        if (minBitrate != null && maxBitrate != null) {
+            return (minBitrate + maxBitrate) / 2;
+        }
+
+        // If only minBitrate is non-null:
+        if (minBitrate != null) {
+            return minBitrate;
+        }
+
+        // Return maxBitrate since at this point we would return null anyway if it's null:
+        return maxBitrate;
+
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
index 6c73a739..1b666594 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
@@ -68,7 +68,6 @@
     @Nullable private String mCustomCtaText;
     @Nullable private String mCustomSkipText;
     @Nullable private String mCustomCloseIconUrl;
-    @NonNull private DeviceUtils.ForceOrientation mCustomForceOrientation = DeviceUtils.ForceOrientation.FORCE_LANDSCAPE; // Default is forcing landscape
     @Nullable private VideoViewabilityTracker mVideoViewabilityTracker;
     // Viewability
     @NonNull private final Map<String, String> mExternalViewabilityTrackers;
@@ -80,13 +79,6 @@
     private String mPrivacyInformationIconImageUrl;
     private String mPrivacyInformationIconClickthroughUrl;
 
-    /**
-     * Flag to indicate if the VAST xml document has explicitly set the orientation as opposed to
-     * using the default.
-     */
-    private boolean mIsForceOrientationSet;
-
-
     public VastVideoConfig() {
         mImpressionTrackers = new ArrayList<VastTracker>();
         mFractionalTrackers = new ArrayList<VastFractionalProgressTracker>();
@@ -323,13 +315,6 @@ public void setCustomCloseIconUrl(@Nullable final String customCloseIconUrl) {
         }
     }
 
-    public void setCustomForceOrientation(@Nullable final DeviceUtils.ForceOrientation customForceOrientation) {
-        if (customForceOrientation != null && customForceOrientation != DeviceUtils.ForceOrientation.UNDEFINED) {
-            mCustomForceOrientation = customForceOrientation;
-            mIsForceOrientationSet = true;
-        }
-    }
-
     public void setSkipOffset(@Nullable final String skipOffset) {
         if (skipOffset != null) {
             mSkipOffset = skipOffset;
@@ -487,10 +472,6 @@ public VideoViewabilityTracker getVideoViewabilityTracker() {
         return mMoatImpressionPixels;
     }
 
-    public boolean isCustomForceOrientationSet() {
-        return mIsForceOrientationSet;
-    }
-
     /**
      * Returns whether or not there is a companion ad set. There must be both a landscape and a
      * portrait companion ad set for this to be true.
@@ -501,15 +482,6 @@ public boolean hasCompanionAd() {
         return mLandscapeVastCompanionAdConfig != null && mPortraitVastCompanionAdConfig != null;
     }
 
-    /**
-     * Get custom force orientation
-     * @return ForceOrientation enum (default is FORCE_LANDSCAPE)
-     */
-    @NonNull
-    public DeviceUtils.ForceOrientation getCustomForceOrientation() {
-        return mCustomForceOrientation;
-    }
-
     /**
      * Gets the String specified in the VAST document regarding the skip offset. This should be in
      * the form HH:MM:SS[.mmm] or n%. (e.g. 00:00:12, 00:00:12.345, 42%).
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
index cab8ae0a..9223f75d 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
@@ -20,19 +20,16 @@
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
 
 public class VastVideoGradientStripWidget extends ImageView {
-    @NonNull DeviceUtils.ForceOrientation mForceOrientation;
     private int mVisibilityForCompanionAd;
     private boolean mHasCompanionAd;
     private boolean mIsVideoComplete;
 
     public VastVideoGradientStripWidget(@NonNull final Context context,
             @NonNull final GradientDrawable.Orientation gradientOrientation,
-            @NonNull final DeviceUtils.ForceOrientation forceOrientation,
             final boolean hasCompanionAd, final int visibilityForCompanionAd, final int layoutVerb,
             final int layoutAnchor) {
         super(context);
 
-        mForceOrientation = forceOrientation;
         mVisibilityForCompanionAd = visibilityForCompanionAd;
         mHasCompanionAd = hasCompanionAd;
 
@@ -74,33 +71,27 @@ private void updateVisibility() {
             return;
         }
 
-        if (mForceOrientation == DeviceUtils.ForceOrientation.FORCE_PORTRAIT) {
-            setVisibility(View.INVISIBLE);
-        } else if (mForceOrientation == DeviceUtils.ForceOrientation.FORCE_LANDSCAPE) {
-            setVisibility(View.VISIBLE);
-        } else  {
-            final int currentOrientation = getResources().getConfiguration().orientation;
-
-            switch (currentOrientation) {
-                case Configuration.ORIENTATION_LANDSCAPE:
-                    setVisibility(View.VISIBLE);
-                    break;
-                case Configuration.ORIENTATION_PORTRAIT:
-                    setVisibility(View.INVISIBLE);
-                    break;
-                case Configuration.ORIENTATION_UNDEFINED:
-                    MoPubLog.log(CUSTOM, "Screen orientation undefined: do not show gradient strip widget");
-                    setVisibility(View.INVISIBLE);
-                    break;
-                case Configuration.ORIENTATION_SQUARE:
-                    MoPubLog.log(CUSTOM, "Screen orientation is deprecated ORIENTATION_SQUARE: do not show gradient strip widget");
-                    setVisibility(View.INVISIBLE);
-                    break;
-                default:
-                    MoPubLog.log(CUSTOM, "Unrecognized screen orientation: do not show gradient strip widget");
-                    setVisibility(View.INVISIBLE);
-                    break;
-            }
+        final int currentOrientation = getResources().getConfiguration().orientation;
+
+        switch (currentOrientation) {
+            case Configuration.ORIENTATION_LANDSCAPE:
+                setVisibility(View.VISIBLE);
+                break;
+            case Configuration.ORIENTATION_PORTRAIT:
+                setVisibility(View.INVISIBLE);
+                break;
+            case Configuration.ORIENTATION_UNDEFINED:
+                MoPubLog.log(CUSTOM, "Screen orientation undefined: do not show gradient strip widget");
+                setVisibility(View.INVISIBLE);
+                break;
+            case Configuration.ORIENTATION_SQUARE:
+                MoPubLog.log(CUSTOM, "Screen orientation is deprecated ORIENTATION_SQUARE: do not show gradient strip widget");
+                setVisibility(View.INVISIBLE);
+                break;
+            default:
+                MoPubLog.log(CUSTOM, "Unrecognized screen orientation: do not show gradient strip widget");
+                setVisibility(View.INVISIBLE);
+                break;
         }
     }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
index 028b3dbd..022ea188 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
@@ -262,21 +262,6 @@ protected VideoView getVideoView() {
     protected void onCreate() {
         super.onCreate();
 
-        switch (mVastVideoConfig.getCustomForceOrientation()) {
-            case FORCE_PORTRAIT:
-                getBaseVideoViewControllerListener().onSetRequestedOrientation(SCREEN_ORIENTATION_PORTRAIT);
-                break;
-            case FORCE_LANDSCAPE:
-                getBaseVideoViewControllerListener().onSetRequestedOrientation(SCREEN_ORIENTATION_SENSOR_LANDSCAPE);
-                break;
-            case DEVICE_ORIENTATION:
-                break;  // don't do anything
-            case UNDEFINED:
-                break;  // don't do anything
-            default:
-                break;
-        }
-
         mVastVideoConfig.handleImpression(getContext(), getCurrentPosition());
         broadcastAction(IntentActions.ACTION_INTERSTITIAL_SHOW);
     }
@@ -498,7 +483,6 @@ private void addTopGradientStripWidget(@NonNull final Context context) {
 
         mTopGradientStripWidget = new VastVideoGradientStripWidget(context,
                 GradientDrawable.Orientation.TOP_BOTTOM,
-                mVastVideoConfig.getCustomForceOrientation(),
                 hasCompanionAd,
                 View.VISIBLE,
                 RelativeLayout.ALIGN_TOP,
@@ -512,7 +496,6 @@ private void addBottomGradientStripWidget(@NonNull final Context context) {
 
         mBottomGradientStripWidget = new VastVideoGradientStripWidget(context,
                 GradientDrawable.Orientation.BOTTOM_TOP,
-                mVastVideoConfig.getCustomForceOrientation(),
                 hasCompanionAd,
                 View.GONE,
                 RelativeLayout.ABOVE,
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
index 2ace57b4..2deeca18 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
@@ -173,16 +173,4 @@ String getCustomSkipText() {
     String getCustomCloseIconUrl() {
         return XmlUtils.getFirstMatchingStringData(mVastDoc, CUSTOM_CLOSE_ICON);
     }
-
-    /**
-     * Gets the orientation that this ad should be forced in. This returns DEVICE if not
-     * specified.
-     *
-     * @return {@code ForceOrientation} orientation or {@code DEVICE}
-     */
-    @NonNull
-    ForceOrientation getCustomForceOrientation() {
-        return ForceOrientation.getForceOrientation(
-                XmlUtils.getFirstMatchingStringData(mVastDoc, CUSTOM_FORCE_ORIENTATION));
-    }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
index e160003f..5eeb1537 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
@@ -76,17 +76,19 @@
 
     // More than reasonable number of nested VAST urls to follow
     static final int MAX_TIMES_TO_FOLLOW_VAST_REDIRECT = 10;
-    private static final double ASPECT_RATIO_WEIGHT = 70;
-    private static final double AREA_WEIGHT = 30;
+    private static final String MIME_TYPE_MP4 = "video/mp4";
+    private static final String MIME_TYPE_3GPP = "video/3gpp";
     private static final List<String> VIDEO_MIME_TYPES =
-            Arrays.asList("video/mp4", "video/3gpp");
+            Arrays.asList(MIME_TYPE_MP4, MIME_TYPE_3GPP);
     private static final int MINIMUM_COMPANION_AD_WIDTH = 300;
     private static final int MINIMUM_COMPANION_AD_HEIGHT = 250;
+    private static final int BITRATE_THRESHOLD_HIGH = 1500;
+    private static final int BITRATE_THRESHOLD_LOW = 700;
 
     @NonNull private final WeakReference<VastXmlManagerAggregatorListener> mVastXmlManagerAggregatorListener;
     private final double mScreenAspectRatio;
-    private final int mScreenAreaDp;
     @NonNull private final Context mContext;
+    private final int mScreenWidthDp;
 
     /**
      * Number of times this has followed a redirect. This value is only
@@ -95,9 +97,9 @@
     private int mTimesFollowedVastRedirect;
 
     VastXmlManagerAggregator(@NonNull final VastXmlManagerAggregatorListener vastXmlManagerAggregatorListener,
-            final double screenAspectRatio,
-            final int screenAreaDp,
-            @NonNull final Context context) {
+                             final double screenAspectRatio,
+                             final int screenWidthDp,
+                             @NonNull final Context context) {
         super();
 
         Preconditions.checkNotNull(vastXmlManagerAggregatorListener);
@@ -105,7 +107,7 @@
         mVastXmlManagerAggregatorListener =
                 new WeakReference<VastXmlManagerAggregatorListener>(vastXmlManagerAggregatorListener);
         mScreenAspectRatio = screenAspectRatio;
-        mScreenAreaDp = screenAreaDp;
+        mScreenWidthDp = screenWidthDp;
         mContext = context.getApplicationContext();
     }
 
@@ -477,9 +479,6 @@ private void populateMoPubCustomElements(@NonNull final VastXmlManager xmlManage
         if (vastVideoConfig.getCustomCloseIconUrl() == null) {
             vastVideoConfig.setCustomCloseIconUrl(xmlManager.getCustomCloseIconUrl());
         }
-        if (!vastVideoConfig.isCustomForceOrientationSet()) {
-            vastVideoConfig.setCustomForceOrientation(xmlManager.getCustomForceOrientation());
-        }
     }
 
     /**
@@ -517,7 +516,7 @@ private boolean fireErrorTrackerIfNoAds(
     String getBestMediaFileUrl(@NonNull final List<VastMediaXmlManager> managers) {
         Preconditions.checkNotNull(managers, "managers cannot be null");
         final List<VastMediaXmlManager> mediaXmlManagers = new ArrayList<VastMediaXmlManager>(managers);
-        double bestMediaFitness = Double.POSITIVE_INFINITY;
+        double bestMediaFitness = Double.NEGATIVE_INFINITY;
         String bestMediaFileUrl = null;
 
         final Iterator<VastMediaXmlManager> xmlManagerIterator = mediaXmlManagers.iterator();
@@ -533,12 +532,16 @@ String getBestMediaFileUrl(@NonNull final List<VastMediaXmlManager> managers) {
 
             final Integer mediaWidth = mediaXmlManager.getWidth();
             final Integer mediaHeight = mediaXmlManager.getHeight();
+            final Integer mediaBitrate = mediaXmlManager.getBitrate();
             if (mediaWidth == null || mediaWidth <= 0 || mediaHeight == null || mediaHeight <= 0) {
                 continue;
             }
 
-            final double mediaFitness = calculateFitness(mediaWidth, mediaHeight);
-            if (mediaFitness < bestMediaFitness) {
+            final double mediaFitness = calculateFitness(mediaWidth,
+                    mediaHeight,
+                    mediaBitrate,
+                    mediaType);
+            if (mediaFitness > bestMediaFitness) {
                 bestMediaFitness = mediaFitness;
                 bestMediaFileUrl = mediaUrl;
             }
@@ -557,7 +560,7 @@ VastCompanionAdConfig getBestCompanionAd(
 
         final List<VastCompanionAdXmlManager> companionXmlManagers =
                 new ArrayList<VastCompanionAdXmlManager>(managers);
-        double bestCompanionFitness = Double.POSITIVE_INFINITY;
+        double bestCompanionFitness = Double.NEGATIVE_INFINITY;
         VastCompanionAdXmlManager bestCompanionXmlManager = null;
         VastResource bestVastResource = null;
         Point bestVastScaledDimensions = null;
@@ -585,12 +588,14 @@ VastCompanionAdConfig getBestCompanionAd(
                 }
 
                 final double companionFitness;
-                if (CompanionOrientation.PORTRAIT == orientation) {
-                    companionFitness = calculateFitness(height, width);
+                // pass null for companion fitness because images don't have bitrates.
+                if ((CompanionOrientation.LANDSCAPE == orientation) && (mScreenAspectRatio < 1)
+                        || (CompanionOrientation.PORTRAIT == orientation) && (mScreenAspectRatio > 1)) {
+                    companionFitness = calculateFitness(height, width, null, null);
                 } else {
-                    companionFitness = calculateFitness(width, height);
+                    companionFitness = calculateFitness(width, height, null, null);
                 }
-                if (companionFitness < bestCompanionFitness) {
+                if (companionFitness > bestCompanionFitness) {
                     bestCompanionFitness = companionFitness;
                     bestCompanionXmlManager = companionXmlManager;
                     bestVastResource = vastResource;
@@ -781,22 +786,87 @@ VastIconConfig getBestIcon(@NonNull final List<VastIconXmlManager> managers) {
         return null;
     }
 
+    /**
+     * Calculates the fitness of the media file or companion using the aspect ratio, width, and
+     * bitrate and of the device. The closer to 0 the score, the better.
+     *
+     * @param widthDp  the width of the media file or companion ad
+     * @param heightDp the height of the media file or companion ad
+     * @param bitrate  the bitrate of the media file - null if none provided or needed
+     * @param format   the MIME format fo the media file - null if none provided or needed
+     * @return the overall fitness score. The closer to 0, the better.
+     */
+    private double calculateFitness(final int widthDp,
+                                    final int heightDp,
+                                    @Nullable final Integer bitrate,
+                                    @Nullable final String format) {
+
+        final double screenFitness = calculateScreenFitnessFactor(widthDp, heightDp);
+        final double bitrateFitness = calculateBitrateFitnessFactor(bitrate);
+        final double formatFitness = calculateFormatFitnessFactor(format);
+
+        return formatFitness * (1.0 / (1.0 + screenFitness + bitrateFitness));
+    }
+
+    /**
+     * Calculates the fitness value of the media file's bitrate (by determining whether it is low,
+     * medium, or high). The closer to 0 the score, the better. This is used by the overall fitness
+     * function to choose an appropriate MediaFile.
+     *
+     * @param bitrate the bitrate of the media file - null if none provided or needed
+     * @return the fitness factor based on the bitrate. The closer to 0, the better.
+     */
+    private double calculateBitrateFitnessFactor(@Nullable final Integer bitrate) {
+        // Default bitrate to 0 if one was not provided for the MediaFile.
+        final int usableBitrate = (bitrate == null || bitrate < 0) ? 0 : bitrate;
+
+        if (BITRATE_THRESHOLD_LOW <= usableBitrate && usableBitrate <= BITRATE_THRESHOLD_HIGH) {
+            return 0;
+        } else {
+            final double lowDistance = Math.abs(BITRATE_THRESHOLD_LOW - usableBitrate)
+                    / (float) BITRATE_THRESHOLD_LOW;
+            final double highDistance = Math.abs(BITRATE_THRESHOLD_HIGH - usableBitrate)
+                    / (float) BITRATE_THRESHOLD_HIGH;
+            return Math.min(lowDistance, highDistance);
+        }
+    }
+
     /**
      * Calculates the fitness of the media file or companion by comparing its aspect ratio and
-     * area to those of the device. The closer to 0 the score, the better. The fitness function
-     * weighs aspect ratios and areas differently.
+     * width to those of the device. Scores cannot be negative and the closer the score is to 0, the
+     * better. This is used by the overall fitness function to choose an appropriate MediaFile.
      *
-     * @param widthDp the width of the media file or companion ad
-     * @param heightDp the height of th media file or companion ad
-     * @return the fitness score. The closer to 0, the better.
+     * @param widthDp  the width of the media file or companion ad
+     * @param heightDp the height of the media file or companion ad
+     * @return the fitness factor based on the screen size. The closer to 0, the better.
      */
-    private double calculateFitness(final int widthDp, final int heightDp) {
+    private double calculateScreenFitnessFactor(final int widthDp, final int heightDp) {
+        // mScreenAspectRatio calculated as `(double) screenWidth / screenHeight`, so we'll do the
+        // same here.
         final double mediaAspectRatio = (double) widthDp / heightDp;
-        final int mediaAreaDp = widthDp * heightDp;
-        final double aspectRatioRatio = mediaAspectRatio / mScreenAspectRatio;
-        final double areaRatio = (double) mediaAreaDp / mScreenAreaDp;
-        return ASPECT_RATIO_WEIGHT * Math.abs(Math.log(aspectRatioRatio))
-                + AREA_WEIGHT * Math.abs(Math.log(areaRatio));
+        final double aspectRatioScore = Math.abs(mScreenAspectRatio - mediaAspectRatio);
+        final double widthScore = Math.abs((mScreenWidthDp - widthDp) / mScreenWidthDp);
+
+        return aspectRatioScore + widthScore;
+    }
+
+    /**
+     * Calculates the fitness of the media file or companion based on the MIME type. This currently
+     * gives preference to MP4 files.
+     *
+     * @param format the MIME format fo the media file - null if none provided or needed
+     * @return the factor to be using in calculating the fitness score. Higher scores are better.
+     */
+    private double calculateFormatFitnessFactor(final String format) {
+        final String safeFormat = (format == null) ? "" : format;
+
+        switch (safeFormat) {
+            case MIME_TYPE_MP4:
+                return 1.5f;
+            case MIME_TYPE_3GPP:
+            default:
+                return 1.0f;
+        }
     }
 
     /**
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
index 57c8daec..259f311e 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
@@ -4,6 +4,7 @@
 
 package com.mopub.mraid;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Color;
 import android.graphics.Rect;
@@ -11,12 +12,14 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.text.TextUtils;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.View.OnTouchListener;
 import android.webkit.ConsoleMessage;
 import android.webkit.JsResult;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
@@ -29,6 +32,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.mobileads.BaseWebView;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.ViewGestureDetector;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
 import com.mopub.network.Networking;
@@ -43,6 +47,8 @@
 import java.util.Map;
 
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_UNSPECIFIED;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 import static com.mopub.network.MoPubRequestUtils.getQueryParamMap;
 
 public class MraidBridge {
@@ -53,6 +59,8 @@
 
         void onPageFailedToLoad();
 
+        void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode);
+
         void onVisibilityChanged(boolean isVisible);
 
         boolean onJsAlert(@NonNull String message, @NonNull JsResult result);
@@ -323,6 +331,13 @@ public void onReceivedError(@NonNull WebView view, int errorCode,
             MoPubLog.log(CUSTOM, "Error: " + description);
             super.onReceivedError(view, errorCode, description, failingUrl);
         }
+
+        @RequiresApi(Build.VERSION_CODES.O)
+        @Override
+        public boolean onRenderProcessGone(@Nullable final WebView view, @Nullable final RenderProcessGoneDetail detail) {
+            handleRenderProcessGone(detail);
+            return true;
+        }
     };
 
     @VisibleForTesting
@@ -395,6 +410,21 @@ private void handlePageFinished() {
         }
     }
 
+    @VisibleForTesting
+    @TargetApi(Build.VERSION_CODES.O)
+    void handleRenderProcessGone(@Nullable final RenderProcessGoneDetail detail) {
+        final MoPubErrorCode errorCode = (detail != null && detail.didCrash())
+                ? RENDER_PROCESS_GONE_WITH_CRASH
+                : RENDER_PROCESS_GONE_UNSPECIFIED;
+
+        MoPubLog.log(CUSTOM, errorCode);
+        detach();
+
+        if (mMraidBridgeListener != null) {
+            mMraidBridgeListener.onRenderProcessGone(errorCode);
+        }
+    }
+
     @VisibleForTesting
     void runCommand(@NonNull final MraidJavascriptCommand command,
             @NonNull Map<String, String> params)
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
index 636ec4c5..0f7e6cb4 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
@@ -13,6 +13,7 @@
 import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
 import android.graphics.Rect;
+import android.os.Build;
 import android.os.Handler;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -42,6 +43,7 @@
 import com.mopub.common.util.Dips;
 import com.mopub.common.util.Views;
 import com.mopub.mobileads.BaseWebView;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MraidVideoPlayerActivity;
 import com.mopub.mobileads.util.WebViews;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
@@ -49,10 +51,12 @@
 
 import java.lang.ref.WeakReference;
 import java.net.URI;
+import java.util.EnumSet;
 
 import static android.content.pm.ActivityInfo.CONFIG_ORIENTATION;
 import static android.content.pm.ActivityInfo.CONFIG_SCREEN_SIZE;
 import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+import static com.mopub.common.util.ManifestUtils.isDebuggable;
 import static com.mopub.common.util.Utils.bitMaskContainsFlag;
 
 public class MraidController {
@@ -61,6 +65,7 @@
     public interface MraidListener {
         void onLoaded(View view);
         void onFailedToLoad();
+        void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode);
         void onExpand();
         void onResize(final boolean toOriginalSize);
         void onOpen();
@@ -122,6 +127,31 @@
     // itself requires an orientation lock.
     @Nullable private Integer mOriginalActivityOrientation;
 
+    // UI flags for hiding the status bar when expanded
+    private final int mExpandedUiFlags;
+
+    // UI flags before expanding for restoration when not expanded
+    private int mOriginalUiFlags;
+
+    @NonNull private UrlHandler.MoPubSchemeListener mDebugSchemeListener
+            = new UrlHandler.MoPubSchemeListener() {
+        @Override
+        public void onFinishLoad() { }
+
+        @Override
+        public void onClose() { }
+
+        @Override
+        public void onFailLoad() { }
+
+        @Override
+        public void onCrash() {
+            if (mMraidWebView != null) {
+                mMraidWebView.loadUrl("chrome://crash");
+            }
+        }
+    };
+
     private boolean mAllowOrientationChange = true;
     private MraidOrientation mForceOrientation = MraidOrientation.NONE;
 
@@ -185,6 +215,18 @@ public boolean onTouch(View v, MotionEvent event) {
         mMraidBridge.setMraidBridgeListener(mMraidBridgeListener);
         mTwoPartBridge.setMraidBridgeListener(mTwoPartBridgeListener);
         mMraidNativeCommandHandler = new MraidNativeCommandHandler();
+
+        int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            flags |= View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+        }
+
+        mExpandedUiFlags = flags;
     }
 
     @SuppressWarnings("FieldCanBeLocal")
@@ -204,6 +246,11 @@ public void onPageFailedToLoad() {
             }
         }
 
+        @Override
+        public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+            handleRenderProcessGone(errorCode);
+        }
+
         @Override
         public void onVisibilityChanged(final boolean isVisible) {
             // The bridge only receives visibility events if there is no 2 part covering it
@@ -273,6 +320,11 @@ public void onPageFailedToLoad() {
             // no-op for two-part expandables. An expandable failing to load should not trigger failover.
         }
 
+        @Override
+        public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+            handleRenderProcessGone(errorCode);
+        }
+
         @Override
         public void onVisibilityChanged(final boolean isVisible) {
             // The original web view must see the 2-part bridges visibility
@@ -830,6 +882,10 @@ void handleExpand(@Nullable URI uri, boolean shouldUseCustomClose)
         LayoutParams layoutParams = new LayoutParams(
                 LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
         if (mViewState == ViewState.DEFAULT) {
+
+            mOriginalUiFlags = getAndMemoizeRootView().getSystemUiVisibility();
+            getAndMemoizeRootView().setSystemUiVisibility(mExpandedUiFlags);
+
             if (isTwoPart) {
                 mCloseableAdContainer.addView(mTwoPartWebView, layoutParams);
             } else {
@@ -897,6 +953,13 @@ protected void handleClose() {
         }
     }
 
+    @VisibleForTesting
+    void handleRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+        if (mMraidListener != null) {
+            mMraidListener.onRenderProcessGone(errorCode);
+        }
+    }
+
     /*
      * Prefer this method over getAndMemoizeRootView() when the rootView is only being used for
      * screen size calculations (and not for adding/removing anything from the view hierarchy).
@@ -970,6 +1033,8 @@ void applyOrientation() throws MraidCommandException {
 
     @VisibleForTesting
     void unApplyOrientation() {
+        getAndMemoizeRootView().setSystemUiVisibility(mOriginalUiFlags);
+
         final Activity activity = mWeakActivity.get();
         if (activity != null && mOriginalActivityOrientation != null) {
             activity.setRequestedOrientation(mOriginalActivityOrientation);
@@ -1122,20 +1187,28 @@ void handleOpen(@NonNull final String url) {
             mMraidListener.onOpen();
         }
 
-        UrlHandler.Builder builder = new UrlHandler.Builder();
+        final UrlHandler.Builder builder = new UrlHandler.Builder();
 
         if (mAdReport != null) {
             builder.withDspCreativeId(mAdReport.getDspCreativeId());
         }
 
-        builder.withSupportedUrlActions(
+        final EnumSet<UrlAction> urlActions = EnumSet.of(
                 UrlAction.IGNORE_ABOUT_SCHEME,
                 UrlAction.OPEN_NATIVE_BROWSER,
                 UrlAction.OPEN_IN_APP_BROWSER,
                 UrlAction.HANDLE_SHARE_TWEET,
                 UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                UrlAction.FOLLOW_DEEP_LINK)
-                .build().handleUrl(mContext, url);
+                UrlAction.FOLLOW_DEEP_LINK);
+
+        if (isDebuggable(mContext)) {
+            urlActions.add(UrlAction.HANDLE_MOPUB_SCHEME);
+            builder.withMoPubSchemeListener(mDebugSchemeListener);
+        }
+
+        builder.withSupportedUrlActions(urlActions)
+                .build()
+                .handleUrl(mContext, url);
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
index 1d2f4265..f7c695b2 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
@@ -42,6 +42,14 @@ public MraidVideoViewController(final Context context,
         super(context, null, baseVideoViewControllerListener);
 
         mVideoView = new VideoView(context);
+
+        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
+            @Override
+            public void onPrepared(MediaPlayer mp) {
+                mp.setVideoScalingMode(MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT);
+            }
+        });
+
         mVideoView.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
             @Override
             public void onCompletion(MediaPlayer mp) {
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
index b705e16a..b99eb7c7 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
@@ -46,6 +46,8 @@
     private final Integer mRewardedDuration;
     private final boolean mShouldRewardOnClick;
 
+    @Nullable
+    private final ImpressionData mImpressionData;
     @Nullable
     private final String mClickTrackingUrl;
     @NonNull
@@ -105,6 +107,7 @@ private AdResponse(@NonNull Builder builder) {
         mRewardedDuration = builder.rewardedDuration;
         mShouldRewardOnClick = builder.shouldRewardOnClick;
 
+        mImpressionData = builder.impressionData;
         mClickTrackingUrl = builder.clickTrackingUrl;
         mImpressionTrackingUrls = builder.impressionTrackingUrls;
         mFailoverUrl = builder.failoverUrl;
@@ -190,6 +193,11 @@ public boolean shouldRewardOnClick() {
         return mShouldRewardOnClick;
     }
 
+    @Nullable
+    public ImpressionData getImpressionData() {
+        return mImpressionData;
+    }
+
     @Nullable
     public String getClickTrackingUrl() {
         return mClickTrackingUrl;
@@ -292,6 +300,7 @@ public Builder toBuilder() {
                 .setRewardedVideoCompletionUrl(mRewardedVideoCompletionUrl)
                 .setRewardedDuration(mRewardedDuration)
                 .setShouldRewardOnClick(mShouldRewardOnClick)
+                .setImpressionData(mImpressionData)
                 .setClickTrackingUrl(mClickTrackingUrl)
                 .setImpressionTrackingUrls(mImpressionTrackingUrls)
                 .setFailoverUrl(mFailoverUrl)
@@ -324,6 +333,7 @@ public Builder toBuilder() {
         private Integer rewardedDuration;
         private boolean shouldRewardOnClick;
 
+        private ImpressionData impressionData;
         private String clickTrackingUrl;
         private List<String> impressionTrackingUrls = new ArrayList<>();
         private String failoverUrl;
@@ -403,6 +413,11 @@ public Builder setShouldRewardOnClick(final boolean shouldRewardOnClick) {
             return this;
         }
 
+        public Builder setImpressionData(@Nullable ImpressionData impressionData) {
+            this.impressionData = impressionData;
+            return this;
+        }
+
         public Builder setClickTrackingUrl(@Nullable final String clickTrackingUrl) {
             this.clickTrackingUrl = clickTrackingUrl;
             return this;
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
index aa46dafa..9169b65b 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
@@ -36,6 +36,18 @@ public static String extractHeader(@Nullable final JSONObject headers,
         return headers.optString(responseHeader.getKey());
     }
 
+    @Nullable
+    public static JSONObject extractJsonObjectHeader(@Nullable final JSONObject headers,
+                                                     @NonNull final ResponseHeader responseHeader) {
+        Preconditions.checkNotNull(responseHeader);
+
+        if (headers == null) {
+            return null;
+        }
+
+        return headers.optJSONObject(responseHeader.getKey());
+    }
+
     @Nullable
     public static Integer extractIntegerHeader(JSONObject headers, ResponseHeader responseHeader) {
         return formatIntHeader(extractHeader(headers, responseHeader));
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java
new file mode 100644
index 00000000..50dbfb3f
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionData.java
@@ -0,0 +1,169 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.mobileads.base.BuildConfig;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+
+@SuppressWarnings({"WeakerAccess"})
+public class ImpressionData implements Serializable {
+    private static final long serialVersionUID = BuildConfig.VERSION_CODE;
+
+    public static final String ADUNIT_ID = "adunit_id";
+    public static final String ADUNIT_NAME = "adunit_name";
+    public static final String ADUNIT_FORMAT = "adunit_format";
+    public static final String IMPRESSION_ID = "id";
+    public static final String CURRENCY = "currency";
+    public static final String PUBLISHER_REVENUE = "publisher_revenue";
+    public static final String ADGROUP_ID = "adgroup_id";
+    public static final String ADGROUP_NAME = "adgroup_name";
+    public static final String ADGROUP_TYPE = "adgroup_type";
+    public static final String ADGROUP_PRIORITY = "adgroup_priority";
+    public static final String COUNTRY = "country";
+    public static final String PRECISION = "precision";
+    public static final String NETWORK_NAME = "network_name";
+    public static final String NETWORK_PLACEMENT_ID = "network_placement_id";
+
+    @NonNull
+    private SerializableJson mJson;
+
+    private ImpressionData(@NonNull final JSONObject json) throws JSONException {
+        mJson = new SerializableJson(json);
+    }
+
+    @Nullable
+    static ImpressionData create(@Nullable final JSONObject jsonObject) {
+        if (jsonObject == null) {
+            return null;
+        }
+
+        try {
+            return new ImpressionData(jsonObject);
+        } catch (Exception ex) {
+            MoPubLog.log(CUSTOM, ex.toString());
+        }
+
+        return null;
+    }
+
+    @Nullable
+    public String getAdUnitId() {
+        return mJson.optString(ADUNIT_ID, null);
+    }
+
+    @Nullable
+    public String getAdUnitName() {
+        return mJson.optString(ADUNIT_NAME, null);
+    }
+
+    @Nullable
+    public String getAdUnitFormat() {
+        return mJson.optString(ADUNIT_FORMAT, null);
+    }
+
+    @Nullable
+    public String getImpressionId() {
+        return mJson.optString(IMPRESSION_ID, null);
+    }
+
+    @Nullable
+    public String getCurrency() {
+        return mJson.optString(CURRENCY, null);
+    }
+
+    @Nullable
+    public Double getPublisherRevenue() {
+        try {
+            return mJson.getDouble(PUBLISHER_REVENUE);
+        } catch (Exception ex) {
+            return null;
+        }
+    }
+
+    @Nullable
+    public String getAdGroupId() {
+        return mJson.optString(ADGROUP_ID, null);
+    }
+
+    @Nullable
+    public String getAdGroupName() {
+        return mJson.optString(ADGROUP_NAME, null);
+    }
+
+    @Nullable
+    public String getAdGroupType() {
+        return mJson.optString(ADGROUP_TYPE, null);
+    }
+
+    @Nullable
+    public Integer getAdGroupPriority() {
+        try {
+            return mJson.getInt(ADGROUP_PRIORITY);
+        } catch (Exception ex) {
+            return null;
+        }
+    }
+
+    @Nullable
+    public String getCountry() {
+        return mJson.optString(COUNTRY, null);
+    }
+
+    @Nullable
+    public String getPrecision() {
+        return mJson.optString(PRECISION, null);
+    }
+
+    @Nullable
+    public String getNetworkName() {
+        return mJson.optString(NETWORK_NAME, null);
+    }
+
+    @Nullable
+    public String getNetworkPlacementId() {
+        return mJson.optString(NETWORK_PLACEMENT_ID, null);
+    }
+
+    /**
+     * @return - original JSON object from the server.
+     */
+    @NonNull
+    public JSONObject getJsonRepresentation() {
+        return mJson;
+    }
+
+    private void writeObject(ObjectOutputStream oos) throws IOException {
+        oos.defaultWriteObject();
+        oos.writeUTF(mJson.toString());
+    }
+
+    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException, JSONException {
+        ois.defaultReadObject();
+        mJson = new SerializableJson(ois.readUTF());
+    }
+
+    private static class SerializableJson extends JSONObject implements Serializable {
+        SerializableJson(@NonNull final JSONObject json) throws JSONException {
+            super(json.toString());
+        }
+
+        SerializableJson(@NonNull final String json) throws JSONException {
+            super(json);
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java
new file mode 100644
index 00000000..1db2afac
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionListener.java
@@ -0,0 +1,26 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.AnyThread;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+/**
+ * ImpressionListener is an interface to notify the application about ad impressions for all
+ * ad formats.
+ */
+public interface ImpressionListener {
+    /**
+     * SDK will call method onImpression once the ad becomes visible for the first time.
+     *
+     * @param adUnitId  - ad unit ID of the ad.
+     * @param impressionData - extended information about the ad including revenue per impression.
+     *                       This value can be null if impression level revenue data is not enabled
+     *                       for this MoPub account.
+     */
+    @AnyThread
+    void onImpression(@NonNull String adUnitId, @Nullable ImpressionData impressionData);
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java
new file mode 100644
index 00000000..dab4ed1d
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ImpressionsEmitter.java
@@ -0,0 +1,76 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Single source of impression level revenue data. Implement interface {@link ImpressionListener}
+ * and subscribe to events from ImpressionEmitter to receive detailed impression data.
+ * This class is not linked to the activity lifecycle. It is recommended to subscribe to events
+ * when application starts even before the first activity created.
+ */
+@SuppressWarnings("WeakerAccess")
+public class ImpressionsEmitter {
+    private static final HashSet<ImpressionListener> mListeners = new HashSet<>();
+
+    /**
+     * Call this method to start listening for impression level revenue data events.
+     *
+     * @param listener - {@link ImpressionListener} interface implementation
+     */
+    public static void addListener(@NonNull final ImpressionListener listener) {
+        Preconditions.checkNotNull(listener);
+
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.add(listener);
+        }
+    }
+
+    /**
+     * Call this method to unsubscribe from impression level revenue data events.
+     *
+     * @param listener - previously submitted to addListener() {@link ImpressionListener}
+     */
+    public static void removeListener(@NonNull final ImpressionListener listener) {
+        Preconditions.checkNotNull(listener);
+
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.remove(listener);
+        }
+    }
+
+    /**
+     * MoPub SDK internal method. Should not be used by publishers.
+     */
+    static void send(@NonNull final String adUnitId, @Nullable final ImpressionData impressionData) {
+        Preconditions.checkNotNull(adUnitId);
+
+        Set<ImpressionListener> listenerSet = cloneListeners();
+        for (ImpressionListener listener : listenerSet) {
+            listener.onImpression(adUnitId, impressionData);
+        }
+    }
+
+    private static Set<ImpressionListener> cloneListeners() {
+        synchronized (ImpressionsEmitter.class) {
+            return new HashSet<>(mListeners);
+        }
+    }
+
+    @VisibleForTesting
+    static void clear() {
+        synchronized (ImpressionsEmitter.class) {
+            mListeners.clear();
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
index 99421f6c..f328d1a0 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MultiAdResponse.java
@@ -42,6 +42,7 @@
 import static com.mopub.network.HeaderUtils.extractBooleanHeader;
 import static com.mopub.network.HeaderUtils.extractHeader;
 import static com.mopub.network.HeaderUtils.extractIntegerHeader;
+import static com.mopub.network.HeaderUtils.extractJsonObjectHeader;
 import static com.mopub.network.HeaderUtils.extractPercentHeaderString;
 import static com.mopub.network.HeaderUtils.extractStringArray;
 
@@ -55,6 +56,7 @@
         void onInvalidateConsent(@Nullable final String consentChangeReason);
         void onReacquireConsent(@Nullable final String consentChangeReason);
         void onForceGdprApplies();
+        void onRequestSuccess(@Nullable final String adUnitId);
     }
 
     @NonNull
@@ -116,6 +118,7 @@ public MultiAdResponse(@NonNull final Context appContext,
             } else if (reacquireConsent) {
                 sServerOverrideListener.onReacquireConsent(consentChangeReason);
             }
+            sServerOverrideListener.onRequestSuccess(adUnitId);
         }
 
         final boolean enableDebugLogging = extractBooleanHeader(jsonObject,
@@ -251,6 +254,9 @@ protected static AdResponse parseSingleAdResponse(@NonNull final Context appCont
         String networkType = extractHeader(jsonHeaders, ResponseHeader.NETWORK_TYPE);
         builder.setNetworkType(networkType);
 
+        JSONObject impressionJson = extractJsonObjectHeader(jsonHeaders, ResponseHeader.IMPRESSION_DATA);
+        builder.setImpressionData(ImpressionData.create(impressionJson));
+
         // X-Clickthrough is parsed into the AdResponse as the click tracker
         // Used by AdViewController, Rewarded Video, Native Adapter, MoPubNative
         String clickTrackingUrl = extractHeader(jsonHeaders, ResponseHeader.CLICK_TRACKING_URL);
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
index 56d27487..3c0da814 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
@@ -19,6 +19,7 @@
 public class PlayServicesUrlRewriter implements HurlStack.UrlRewriter {
     public static final String UDID_TEMPLATE = "mp_tmpl_advertising_id";
     public static final String DO_NOT_TRACK_TEMPLATE = "mp_tmpl_do_not_track";
+    public static final String MOPUB_ID_TEMPLATE = "mp_tmpl_mopub_id";
 
     public PlayServicesUrlRewriter() {
     }
@@ -38,6 +39,7 @@ public String rewriteUrl(final String url) {
         String toReturn = url.replace(UDID_TEMPLATE,
                 Uri.encode(info.getIdWithPrefix(MoPub.canCollectPersonalInformation())));
         toReturn = toReturn.replace(DO_NOT_TRACK_TEMPLATE, info.isDoNotTrack() ? "1" : "0");
+        toReturn = toReturn.replace(MOPUB_ID_TEMPLATE,  Uri.encode(info.getIdentifier(false)));
         return toReturn;
     }
 }
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java
new file mode 100644
index 00000000..2e94d2f6
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/SingleImpression.java
@@ -0,0 +1,31 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+
+import static com.mopub.common.logging.MoPubLog.SdkLogEvent.CUSTOM;
+
+public class SingleImpression {
+    @Nullable
+    private final String mAdUnitId;
+    @Nullable
+    private final ImpressionData mImpressionData;
+
+    public SingleImpression(@Nullable String adUnitid, @Nullable ImpressionData data) {
+        mAdUnitId = adUnitid;
+        mImpressionData = data;
+    }
+
+    public void sendImpression() {
+        if (mAdUnitId != null) {
+            ImpressionsEmitter.send(mAdUnitId, mImpressionData);
+        } else {
+            MoPubLog.log(CUSTOM, "SingleImpression ad unit id may not be null.");
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
index b52d3b3a..4bbe3b58 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
@@ -11,6 +11,7 @@
 
 import com.mopub.common.Preconditions;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.Utils;
 import com.mopub.mobileads.VastErrorCode;
 import com.mopub.mobileads.VastMacroHelper;
 import com.mopub.mobileads.VastTracker;
@@ -146,7 +147,7 @@ public static void makeTrackingHttpRequest(@Nullable final String url,
     public static void makeTrackingHttpRequest(@Nullable final String url,
             @Nullable final Context context,
             @Nullable Listener listener) {
-        if (url != null) {
+        if (!TextUtils.isEmpty(url)) {
             makeTrackingHttpRequest(Arrays.asList(url), context, listener);
         }
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
index a0caeb37..f3223dd4 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
@@ -6,6 +6,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.view.View;
@@ -27,6 +28,23 @@
 
     public abstract View getAdView();
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+        int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            flags |= View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+        }
+
+        mCloseableLayout.setSystemUiVisibility(flags);
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -41,6 +59,8 @@ protected void onCreate(Bundle savedInstanceState) {
         View adView = getAdView();
 
         mCloseableLayout = new CloseableLayout(this);
+        final int blackColor = getResources().getColor(android.R.color.black);
+        mCloseableLayout.setBackgroundColor(blackColor);
         mCloseableLayout.setOnCloseListener(new OnCloseListener() {
             @Override
             public void onClose() {
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
index 053493ca..c53904a3 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
@@ -6,16 +6,21 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.graphics.Point;
 import android.location.Location;
+import android.os.Build;
 import android.os.Handler;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
+import android.view.Window;
+import android.view.WindowInsets;
 
 import com.mopub.common.AdFormat;
 import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.DeviceUtils;
 import com.mopub.mobileads.factories.CustomEventInterstitialAdapterFactory;
 
 import java.util.Map;
@@ -143,6 +148,7 @@ synchronized boolean attemptStateTransition(@NonNull final InterstitialState end
                         // Going from IDLE to LOADING is the usual load case
                         invalidateInterstitialAdapter();
                         mCurrentInterstitialState = LOADING;
+                        updatedInsets();
                         if (force) {
                             // Force-load means a pub-initiated force refresh.
                             mInterstitialView.forceRefresh();
@@ -280,6 +286,20 @@ private void setInterstitialStateDestroyed() {
         mCurrentInterstitialState = DESTROYED;
     }
 
+    private void updatedInsets() {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+            final Window window = mActivity.getWindow();
+            if (window == null) {
+                return;
+            }
+            final WindowInsets insets = window.getDecorView().getRootWindowInsets();
+            if (insets == null) {
+                return;
+            }
+            mInterstitialView.setWindowInsets(insets);
+        }
+    }
+
     public void load() {
         MoPubLog.log(LOAD_ATTEMPTED);
         attemptStateTransition(LOADING);
@@ -531,6 +551,11 @@ protected void adFailed(MoPubErrorCode errorCode) {
                 mInterstitialAdListener.onInterstitialFailed(MoPubInterstitial.this, errorCode);
             }
         }
+
+        @Override
+        protected Point resolveAdSize() {
+            return DeviceUtils.getDeviceDimensions(mActivity);
+        }
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
index e989a5de..915ec030 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -207,6 +207,12 @@ public void onFailedToLoad() {
                 finish();
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(CUSTOM, "Finishing the activity due to a problem: " + errorCode);
+                finish();
+            }
+
             public void onClose() {
                 MoPubLog.log(WILL_DISAPPEAR);
                 mMraidController.loadJavascript(WEB_VIEW_DID_CLOSE.getJavascript());
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
index 037fc39e..c7665b19 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
@@ -8,6 +8,7 @@
 import android.text.TextUtils;
 
 import com.mopub.common.CacheService;
+import com.mopub.common.CreativeOrientation;
 import com.mopub.common.DataKeys;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.Json;
@@ -18,6 +19,7 @@
 
 import java.util.Map;
 
+import static com.mopub.common.DataKeys.CREATIVE_ORIENTATION_KEY;
 import static com.mopub.common.logging.MoPubLog.AdapterLogEvent.LOAD_FAILED;
 import static com.mopub.common.logging.MoPubLog.AdapterLogEvent.LOAD_SUCCESS;
 import static com.mopub.common.logging.MoPubLog.AdapterLogEvent.SHOW_ATTEMPTED;
@@ -32,10 +34,12 @@
     private VastVideoConfig mVastVideoConfig;
     @Nullable private JSONObject mVideoTrackers;
     @Nullable private Map<String, String> mExternalViewabilityTrackers;
+    @Nullable private CreativeOrientation mOrientation;
 
     @Override
     protected void extractExtras(Map<String, String> serverExtras) {
         mVastResponse = serverExtras.get(DataKeys.HTML_RESPONSE_BODY_KEY);
+        mOrientation = CreativeOrientation.fromString(serverExtras.get(CREATIVE_ORIENTATION_KEY));
 
         final String externalViewabilityTrackers =
                 serverExtras.get(DataKeys.EXTERNAL_VIDEO_VIEWABILITY_TRACKERS_KEY);
@@ -79,7 +83,7 @@ protected void preRenderHtml(CustomEventInterstitialListener customEventIntersti
     @Override
     public void showInterstitial() {
         MoPubLog.log(SHOW_ATTEMPTED, ADAPTER_NAME);
-        MraidVideoPlayerActivity.startVast(mContext, mVastVideoConfig, mBroadcastIdentifier);
+        MraidVideoPlayerActivity.startVast(mContext, mVastVideoConfig, mBroadcastIdentifier, mOrientation);
     }
 
     @Override
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
index ca177e07..4e66c876 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
@@ -232,8 +232,7 @@ public void onNativeAdLoaded(@NonNull final BaseNativeAd nativeAd) {
                         }
 
                         mMoPubNativeNetworkListener.onNativeLoad(new NativeAd(context,
-                                        response.getImpressionTrackingUrls(),
-                                        response.getClickTrackingUrl(),
+                                        response,
                                         mAdUnitId,
                                         nativeAd,
                                         renderer)
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
index f9cd79d8..23a33912 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
@@ -13,6 +13,8 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.nativeads.MoPubCustomEventNative.MoPubStaticNativeAd;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 
 import java.util.HashSet;
@@ -59,6 +61,7 @@
     @NonNull private final Set<String> mImpressionTrackers;
     @NonNull private final Set<String> mClickTrackers;
     @NonNull private final String mAdUnitId;
+    @Nullable private ImpressionData mImpressionData;
     @Nullable private MoPubNativeEventListener mMoPubNativeEventListener;
 
     private boolean mRecordedImpression;
@@ -74,6 +77,7 @@ public NativeAd(@NonNull final Context context,
         mContext = context.getApplicationContext();
 
         mAdUnitId = adUnitId;
+        mImpressionData = null;
 
         mImpressionTrackers = new HashSet<String>();
         mImpressionTrackers.addAll(moPubImpressionTrackerUrls);
@@ -99,6 +103,15 @@ public void onAdClicked() {
         mMoPubAdRenderer = moPubAdRenderer;
     }
 
+    NativeAd(@NonNull final Context context,
+             @NonNull final AdResponse adResponse,
+             @NonNull final String adUnitId,
+             @NonNull final BaseNativeAd baseNativeAd,
+             @NonNull final MoPubAdRenderer moPubAdRenderer){
+        this(context, adResponse.getImpressionTrackingUrls(), adResponse.getClickTrackingUrl(), adUnitId, baseNativeAd, moPubAdRenderer);
+        mImpressionData = adResponse.getImpressionData();
+    }
+
     @Override
     public String toString() {
         final StringBuilder stringBuilder = new StringBuilder("\n");
@@ -207,12 +220,14 @@ void recordImpression(@Nullable final View view) {
             return;
         }
 
+        mRecordedImpression = true;
+
         TrackingRequest.makeTrackingHttpRequest(mImpressionTrackers, mContext);
         if (mMoPubNativeEventListener != null) {
             mMoPubNativeEventListener.onImpression(view);
         }
 
-        mRecordedImpression = true;
+        new SingleImpression(mAdUnitId, mImpressionData).sendImpression();
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
index 1d7caaa5..e39dd2d9 100644
--- a/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
@@ -37,7 +37,9 @@ public String generateUrlString(@NonNull final String serverHostname) {
 
         ClientMetadata clientMetadata = ClientMetadata.getInstance(mContext);
 
-        setSdkVersion(clientMetadata.getSdkVersion());
+        addParam(SDK_VERSION_KEY, clientMetadata.getSdkVersion());
+
+        appendAppEngineInfo();
 
         setDeviceInfo(clientMetadata.getDeviceManufacturer(),
                 clientMetadata.getDeviceModel(),
@@ -53,8 +55,4 @@ public String generateUrlString(@NonNull final String serverHostname) {
     private void setAdUnitId(@NonNull String adUnitId) {
         addParam("id", adUnitId);
     }
-
-    private void setSdkVersion(@NonNull String sdkVersion) {
-        addParam("nv", sdkVersion);
-    }
 }
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
index 8746f0d9..79a06f9e 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/AdLoaderRewardedVideo.java
@@ -12,6 +12,7 @@
 import com.mopub.common.Preconditions;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.SingleImpression;
 import com.mopub.network.TrackingRequest;
 
 import java.util.Collections;
@@ -72,6 +73,9 @@ void trackImpression(@NonNull Context context) {
         TrackingRequest.makeTrackingHttpRequest(
                 getImpressionUrls(),
                 context);
+
+        final String adUnitId = mLastDeliveredResponse.getAdUnitId();
+        new SingleImpression(adUnitId, mLastDeliveredResponse.getImpressionData()).sendImpression();
     }
 
     void trackClick(@NonNull Context context) {
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
index 05b10318..57379464 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
@@ -7,12 +7,16 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.graphics.Point;
 import android.location.Location;
+import android.os.Build;
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
+import android.view.Window;
+import android.view.WindowInsets;
 
 import com.mopub.common.AdReport;
 import com.mopub.common.AdUrlGenerator;
@@ -282,14 +286,15 @@ public void run() {
         }
 
         final AdUrlGenerator urlGenerator = new WebViewAdUrlGenerator(sInstance.mContext, false);
-        final String adUrlString = urlGenerator.withAdUnitId(adUnitId)
+        urlGenerator.withAdUnitId(adUnitId)
                 .withKeywords(requestParameters == null ? null : requestParameters.mKeywords)
                 .withUserDataKeywords((requestParameters == null ||
                         !MoPub.canCollectPersonalInformation()) ? null : requestParameters.mUserDataKeywords)
-                .withLocation(requestParameters == null ? null : requestParameters.mLocation)
-                .generateUrlString(Constants.HOST);
+                .withLocation(requestParameters == null ? null : requestParameters.mLocation);
 
-        loadVideo(adUnitId, adUrlString, null);
+        setSafeAreaValues(urlGenerator);
+
+        loadVideo(adUnitId, urlGenerator.generateUrlString(Constants.HOST), null);
     }
 
     private static void loadVideo(@NonNull String adUnitId, @NonNull String adUrlString, @Nullable MoPubErrorCode errorCode) {
@@ -406,6 +411,31 @@ public static void selectReward(@NonNull String adUnitId, @NonNull MoPubReward s
         }
     }
 
+    private static void setSafeAreaValues(@NonNull final AdUrlGenerator urlGenerator) {
+        Preconditions.checkNotNull(urlGenerator);
+
+        // Set the requested ad size as screen size
+        final Point dimens = ClientMetadata.getInstance(sInstance.mContext).getDeviceDimensions();
+        urlGenerator.withRequestedAdSize(dimens);
+
+        // Set the window insets if we can get them
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+            final Activity activity = sInstance.mMainActivity.get();
+            if (activity == null) {
+                return;
+            }
+            final Window window = sInstance.mMainActivity.get().getWindow();
+            if (window == null) {
+                return;
+            }
+            final WindowInsets insets = window.getDecorView().getRootWindowInsets();
+            if (insets == null) {
+                return;
+            }
+            urlGenerator.withWindowInsets(insets);
+        }
+    }
+
     ///// Ad Request / Response methods /////
     void onAdSuccess(AdResponse adResponse) {
         final String adUnitId = adResponse.getAdUnitId();
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
index b6aca649..0554410b 100644
--- a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedMraidActivity.java
@@ -135,6 +135,12 @@ public void onFailedToLoad() {
                 finish();
             }
 
+            @Override
+            public void onRenderProcessGone(@NonNull final MoPubErrorCode errorCode) {
+                MoPubLog.log(CUSTOM, "Finishing the activity due to a problem: " + errorCode);
+                finish();
+            }
+
             public void onClose() {
                 mRewardedMraidController.loadJavascript(WEB_VIEW_DID_CLOSE.getJavascript());
                 finish();
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index a694063a..d32cca7f 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -14,14 +14,14 @@ repositories {
 }
 
 project.group = 'com.mopub'
-project.version = '5.6.0'
+project.version = '5.8.0'
 
 android {
     compileSdkVersion 28
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 67
+        versionCode 71
         versionName version
         minSdkVersion 16
         targetSdkVersion 28
@@ -54,6 +54,7 @@ android {
             all {
                 jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m', '-noverify'
                 forkEvery 200
+                maxParallelForks Runtime.runtime.availableProcessors().intdiv(2) ?: 1
             }
         }
     }
diff --git a/mopub-sdk/src/main/AndroidManifest.xml b/mopub-sdk/src/main/AndroidManifest.xml
index 786dbbe6..e1746fda 100644
--- a/mopub-sdk/src/main/AndroidManifest.xml
+++ b/mopub-sdk/src/main/AndroidManifest.xml
@@ -1,8 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.mopub.mobileads"
-    android:versionCode="1"
-    android:versionName="1.0">
-    <application/>
+    package="com.mopub.mobileads">
+
+    <application />
 </manifest>
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
index d3c79d61..e49457ee 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
@@ -9,6 +9,8 @@
 import android.content.Intent;
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
+import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 
 import com.mopub.common.test.support.SdkTestRunner;
@@ -18,9 +20,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.atLeastOnce;
 import static org.mockito.Mockito.doCallRealMethod;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
@@ -38,12 +42,14 @@
     private Context context;
     private MoPubBrowser mockMoPubBrowser;
     private WebView mockWebView;
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
 
     @Before
     public void setUp() {
         mockMoPubBrowser = mock(MoPubBrowser.class);
         context = Robolectric.buildActivity(Activity.class).create().get().getApplicationContext();
         mockWebView = mock(WebView.class);
+        mockRenderProcessGoneDetail = mock(RenderProcessGoneDetail.class);
 
         doCallRealMethod().when(mockMoPubBrowser).setWebView(mockWebView);
         doCallRealMethod().when(mockMoPubBrowser).getWebView();
@@ -171,6 +177,13 @@ public void shouldOverrideUrlLoading_withoutMatchingSupporedUrl_shouldReturnFals
         verify(mockMoPubBrowser, never()).finish();
     }
 
+    @Config(minSdk = Build.VERSION_CODES.O)
+    @Test
+    public void onRenderProcessGone_withAtLeastApi26_shouldReturnTrue_shouldFinish() {
+        assertThat(subject.onRenderProcessGone(mockWebView, mockRenderProcessGoneDetail)).isTrue();
+        verify(mockMoPubBrowser).finish();
+    }
+
     private void makeDeeplinkResolvable(String deeplink) {
         shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(Intent.ACTION_VIEW,
                 Uri.parse(deeplink)), new ResolveInfo());
diff --git a/mopub-sdk/src/test/java/com/mopub/common/MoPubBrowserTest.java b/mopub-sdk/src/test/java/com/mopub/common/MoPubBrowserTest.java
index 3557f920..75fc304f 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/MoPubBrowserTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/MoPubBrowserTest.java
@@ -4,6 +4,8 @@
 
 package com.mopub.common;
 
+import android.os.Build;
+import android.view.View;
 import android.webkit.CookieSyncManager;
 import android.webkit.WebView;
 
@@ -13,11 +15,14 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
 
+import static org.fest.assertions.api.Assertions.assertThat;
+
 @RunWith(SdkTestRunner.class)
 public class MoPubBrowserTest {
 
@@ -30,7 +35,35 @@ public void setUp() {
         CookieSyncManager.createInstance(subject);
 
         mockWebView = mock(WebView.class);
-        subject.setWebView(mockWebView);
+    }
+
+    @Config(sdk = Build.VERSION_CODES.JELLY_BEAN_MR2)
+    @Test
+    public void moPubBrowser_shouldHaveSystemUiFlagsSet() throws Exception {
+        final int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
+
+        subject.onResume();
+
+        assertThat(subject.getSystemUiVisibility()).isEqualTo(flags);
+    }
+
+    @Config(sdk = Build.VERSION_CODES.KITKAT)
+    @Test
+    public void moPubBrowser_withApi19AndAbove_shouldHaveSystemUiFlagsSetWithImmersive() throws Exception {
+        final int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+
+        subject.onResume();
+
+        assertThat(subject.getSystemUiVisibility()).isEqualTo(flags);
     }
 
     @Test
@@ -38,6 +71,7 @@ public void onPause_withIsFinishingTrue_shouldStopLoading_shouldLoadBlankUrl_sho
         // We have to manually call #onPause here after #finish since the activity is not being managed by Android
         // Even if the activity was being managed by Android we would likely have to call onPause since the test would
         // complete before the UI thread had a chance to invoke the lifecycle events
+        subject.setWebView(mockWebView);
         subject.finish();
         subject.onPause();
 
@@ -48,6 +82,7 @@ public void onPause_withIsFinishingTrue_shouldStopLoading_shouldLoadBlankUrl_sho
 
     @Test
     public void onPause_withIsFinishingFalse_shouldPauseWebView() throws Exception {
+        subject.setWebView(mockWebView);
         subject.onPause();
 
         verify(mockWebView, never()).stopLoading();
@@ -57,6 +92,7 @@ public void onPause_withIsFinishingFalse_shouldPauseWebView() throws Exception {
 
     @Test
     public void onResume_shouldResumeWebView() throws Exception {
+        subject.setWebView(mockWebView);
         subject.onResume();
 
         verify(mockWebView).onResume();
@@ -64,6 +100,7 @@ public void onResume_shouldResumeWebView() throws Exception {
 
     @Test
     public void onDestroy_shouldDestroyWebView() throws Exception {
+        subject.setWebView(mockWebView);
         subject.onDestroy();
 
         verify(mockWebView).destroy();
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
index 09fabb0e..d1278b26 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogControllerTest.java
@@ -65,7 +65,8 @@ public void setup() {
         mockRequestQueue = Mockito.mock(MoPubRequestQueueTest.TestMoPubRequestQueue.class);
         mockDialogListener = Mockito.mock(ConsentDialogListener.class);
         dialogResponse = new ConsentDialogResponse(HTML_TEXT);
-        personalInfoData = new PersonalInfoData(context, AD_UNIT_ID);
+        personalInfoData = new PersonalInfoData(context);
+        personalInfoData.setAdUnit(AD_UNIT_ID);
 
         PowerMockito.mockStatic(Networking.class);
         when(Networking.getRequestQueue(context)).thenReturn(mockRequestQueue);
@@ -201,6 +202,6 @@ private String generateTestUrl() {
                 "&language=en" +
                 "&gdpr_applies=1" +
                 "&force_gdpr_applies=0" +
-                "&bundle=com.mopub.mobileads";
+                "&bundle=com.mopub.mobileads.test";
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
index 45efbebe..80f27f6c 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogLayoutTest.java
@@ -5,6 +5,8 @@
 package com.mopub.common.privacy;
 
 import android.app.Activity;
+import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
@@ -16,11 +18,15 @@
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import java.lang.reflect.Field;
 
+import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
 @RunWith(SdkTestRunner.class)
@@ -35,6 +41,7 @@
 
     private ConsentDialogLayout subject;
     private WebViewClient webViewClient;
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
 
     @Before
     public void setUp() throws Exception {
@@ -42,6 +49,7 @@ public void setUp() throws Exception {
         subject = new ConsentDialogLayout(activity);
         Field webClientField = Reflection.getPrivateField(ConsentDialogLayout.class, "webViewClient");
         webViewClient = (WebViewClient) webClientField.get(subject);
+        mockRenderProcessGoneDetail = mock(RenderProcessGoneDetail.class);
     }
 
     @Test
@@ -92,4 +100,10 @@ public void webViewClient_onPageFinished_shouldCall_onLoadProgress() {
 
         verify(pageLoadListener).onLoadProgress(ConsentDialogLayout.FINISHED_LOADING);
     }
+
+    @Config(minSdk = Build.VERSION_CODES.O)
+    @Test
+    public void webViewClient_onRenderProcessGone_withAtLeastApi26_shouldReturnTrue() {
+        assertThat(webViewClient.onRenderProcessGone(mockWebView, mockRenderProcessGoneDetail)).isTrue();
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
index 4c8c21e2..1455b35f 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/ConsentDialogUrlGeneratorTest.java
@@ -7,10 +7,13 @@
 import android.app.Activity;
 import android.content.Context;
 
+import com.mopub.common.AppEngineInfo;
+import com.mopub.common.BaseUrlGenerator;
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.Constants;
 import com.mopub.common.MoPub;
 
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -22,6 +25,7 @@
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 
+import java.net.URLEncoder;
 import java.util.Map;
 
 import static com.mopub.common.privacy.ConsentStatus.EXPLICIT_NO;
@@ -64,6 +68,11 @@ public void setup() {
                 mockClientMetadata);
     }
 
+    @After
+    public void tearDown() {
+        BaseUrlGenerator.setAppEngineInfo(null);
+    }
+
     @Test(expected = NullPointerException.class)
     public void constructor_withContextNull_shouldThrowException() {
         subject = new ConsentDialogUrlGenerator(null, AD_UNIT_ID, UNKNOWN.getValue());
@@ -80,7 +89,7 @@ public void constructor_withConsentStatusNull_shouldThrowException() {
     }
 
     @Test
-    public void generateUrlString_withMinimumParametersSet_shouldGenerateValidUrl() {
+    public void generateUrlString_withMinimumParametersSet_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         String validUrl = createTestUrl();
 
         subject = new ConsentDialogUrlGenerator(context, AD_UNIT_ID, UNKNOWN.getValue());
@@ -114,6 +123,35 @@ public void generateUrlString_withAllParameters_shouldGenerateValidUrl() {
         assertThat(map.size()).isEqualTo(12);
     }
 
+    @Test
+    public void generateUrlString_withAllParameters_withAppEngine_shouldGenerateValidUrl() {
+        MoPub.setEngineInformation(new AppEngineInfo("unity", "123"));
+        subject = new ConsentDialogUrlGenerator(context, AD_UNIT_ID, EXPLICIT_YES.getValue());
+        subject.withConsentedPrivacyPolicyVersion(POLICY_VERSION)
+                .withConsentedVendorListVersion(VENDOR_LIST_VERSION)
+                .withForceGdprApplies(true)
+                .withGdprApplies(true);
+
+        String url = subject.generateUrlString(Constants.HOST);
+        Map<String, String> map = urlToMap(url);
+
+        assertThat(map.get(HOST_KEY)).isEqualTo(Constants.HOST);
+        assertThat(map.get(SCHEME_KEY)).isEqualTo(Constants.HTTPS);
+        assertThat(map.get(PATH_KEY)).isEqualTo(Constants.GDPR_CONSENT_HANDLER);
+        assertThat(map.get("id")).isEqualTo(AD_UNIT_ID);
+        assertThat(map.get("current_consent_status")).isEqualTo(EXPLICIT_YES.getValue());
+        assertThat(map.get("nv")).isEqualTo(MoPub.SDK_VERSION);
+        assertThat(map.get("e_name")).isEqualTo("unity");
+        assertThat(map.get("e_ver")).isEqualTo("123");
+        assertThat(map.get("language")).isEqualTo(CURRENT_LANGUAGE);
+        assertThat(map.get("gdpr_applies")).isEqualTo("1");
+        assertThat(map.get("force_gdpr_applies")).isEqualTo("1");
+        assertThat(map.get("consented_vendor_list_version")).isEqualTo(VENDOR_LIST_VERSION);
+        assertThat(map.get("consented_privacy_policy_version")).isEqualTo(POLICY_VERSION);
+        assertThat(map.get("bundle")).isEqualTo(BUNDLE);
+        assertThat(map.size()).isEqualTo(14);
+    }
+
     @Test
     public void generateUrlString_withGdprAppliesNotSet_shouldNotIncludeGdprParam() {
         subject = new ConsentDialogUrlGenerator(context, AD_UNIT_ID, EXPLICIT_NO.getValue());
@@ -140,11 +178,11 @@ public void generateUrlString_withGdprAppliesNotSet_shouldNotIncludeGdprParam()
     }
 
     // unit test utils
-    private String createTestUrl() {
+    private String createTestUrl() throws java.io.UnsupportedEncodingException {
         return "https://" + Constants.HOST + "/m/gdpr_consent_dialog" +
                 "?id=" + AD_UNIT_ID +
                 "&current_consent_status=" + UNKNOWN.getValue() +
-                "&nv=" + MoPub.SDK_VERSION +
+                "&nv=" + URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
                 "&language=" + CURRENT_LANGUAGE +
                 "&force_gdpr_applies=" + "0" +
                 "&bundle=" + BUNDLE;
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoDataTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoDataTest.java
index fcfa6845..dcc08da0 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoDataTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoDataTest.java
@@ -24,7 +24,7 @@
     @Before
     public void setUp() {
         activity = Robolectric.buildActivity(Activity.class).get();
-        subject = new PersonalInfoData(activity, "adUnit");
+        subject = new PersonalInfoData(activity);
     }
 
     @Test
@@ -43,4 +43,19 @@ public void replaceLanguageMacro_withLanguageMacro_shouldReplaceLanguageMacro()
 
         assertThat(result).isEqualTo("someurl://en/somepath");
     }
+
+    @Test
+    public void chooseAdUnit_withEmptyAdUnit_shouldChooseCachedLastAdUnitIdUsedForInit() {
+        subject.setCachedLastAdUnitIdUsedForInit("cached");
+
+        assertThat(subject.chooseAdUnit()).isEqualTo("cached");
+    }
+
+    @Test
+    public void chooseAdUnit_withAdUnit_shouldChooseAdUnit() {
+        subject.setAdUnit("adunit");
+        subject.setCachedLastAdUnitIdUsedForInit("cached");
+
+        assertThat(subject.chooseAdUnit()).isEqualTo("adunit");
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoManagerTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoManagerTest.java
index ee8712a9..4e461980 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/PersonalInfoManagerTest.java
@@ -739,6 +739,24 @@ public void serverOverrideListener_onForceGdprApplies_shouldForceGdprApplies() {
         assertThat(subject.gdprApplies()).isTrue();
     }
 
+    @Test
+    public void serverOverrideListener_onRequestSuccess_withNoCachedAdUnit_shouldSetAdUnit() {
+        personalInfoData.setAdUnit("");
+
+        subject.getServerOverrideListener().onRequestSuccess("newAdUnit");
+
+        assertThat(personalInfoData.getAdUnitId()).isEqualTo("newAdUnit");
+    }
+
+    @Test
+    public void serverOverrideListener_onRequestSuccess_withCachedAdUnit_shouldDoNothing() {
+        personalInfoData.setAdUnit("oldAdUnit");
+
+        subject.getServerOverrideListener().onRequestSuccess("newAdUnit");
+
+        assertThat(personalInfoData.getAdUnitId()).isEqualTo("oldAdUnit");
+    }
+
     @Test
     public void attemptStateTransition_withSameConsentStatus_shouldDoNothing() {
         subject.attemptStateTransition(ConsentStatus.UNKNOWN, "no reason");
diff --git a/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
index abf57941..ee3ca61a 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/privacy/SyncUrlGeneratorTest.java
@@ -7,6 +7,8 @@
 import android.app.Activity;
 import android.content.Context;
 
+import com.mopub.common.AppEngineInfo;
+import com.mopub.common.BaseUrlGenerator;
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.Constants;
 import com.mopub.common.MoPub;
@@ -14,6 +16,7 @@
 import com.mopub.nativeads.NativeUrlGeneratorTest;
 import com.mopub.network.PlayServicesUrlRewriter;
 
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -24,6 +27,8 @@
 import org.powermock.modules.junit4.rule.PowerMockRule;
 import org.robolectric.Robolectric;
 
+import java.net.URLEncoder;
+
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.powermock.api.mockito.PowerMockito.mock;
@@ -61,8 +66,14 @@ public void setUp() {
         when(ClientMetadata.getInstance(any(Context.class))).thenReturn(clientMetadata);
     }
 
+    @After
+    public void tearDown() {
+        BaseUrlGenerator.setAppEngineInfo(null);
+    }
+
     @Test
     public void generateUrlString_withAllParams_shouldGenerateFullUrl() {
+        MoPub.setEngineInformation(new AppEngineInfo("ename", "eversion"));
         subject.withAdUnitId(AD_UNIT);
         subject.withUdid(UDID);
         subject.withGdprApplies(true);
@@ -108,27 +119,36 @@ public void generateUrlString_withAllParams_shouldGenerateFullUrl() {
                 "extras")).isEqualTo(EXTRAS);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url,
                 "dnt")).isEqualTo(PlayServicesUrlRewriter.DO_NOT_TRACK_TEMPLATE);
+        assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url,
+                "mid")).isEqualTo(PlayServicesUrlRewriter.MOPUB_ID_TEMPLATE);
+        assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url,
+                "e_name")).isEqualTo("ename");
+        assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url,
+                "e_ver")).isEqualTo("eversion");
     }
 
     @Test
-    public void generateUrlString_withMinimumParams_shouldGenerateValidUrl() {
+    public void generateUrlString_withMinimumParams_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         final String url = subject.generateUrlString("minurl");
 
-        assertThat(url).isEqualTo("https://minurl/m/gdpr_sync?nv=" + MoPub.SDK_VERSION +
-        "&current_consent_status=unknown&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track");
+        assertThat(url).isEqualTo("https://minurl/m/gdpr_sync?nv=" +
+                URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
+                "&current_consent_status=unknown&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track" +
+                "&mid=mp_tmpl_mopub_id");
     }
 
     @Test
-    public void generateUrlString_withExtrasThatShouldBeUrlEncoded_shouldGenerateValidUrl() {
+    public void generateUrlString_withExtrasThatShouldBeUrlEncoded_shouldGenerateValidUrl() throws java.io.UnsupportedEncodingException {
         subject = new SyncUrlGenerator(context, ConsentStatus.EXPLICIT_YES.getValue());
         subject.withExtras("!@#$%^&*()_;'[]{}|\\");
 
         final String url = subject.generateUrlString("host");
 
-        assertThat(url).isEqualTo("https://host/m/gdpr_sync?nv=" + MoPub.SDK_VERSION +
+        assertThat(url).isEqualTo("https://host/m/gdpr_sync?nv=" +
+                URLEncoder.encode(MoPub.SDK_VERSION, "UTF-8") +
                 "&current_consent_status=explicit_yes" +
                 "&extras=!%40%23%24%25%5E%26*()_%3B'%5B%5D%7B%7D%7C%5C" +
-                "&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track");
+                "&force_gdpr_applies=0&dnt=mp_tmpl_do_not_track&mid=mp_tmpl_mopub_id");
     }
 
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
index d905659e..243aa17d 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
@@ -7,10 +7,8 @@
 import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
-import android.content.Intent;
 import android.content.pm.ActivityInfo;
 import android.content.pm.ApplicationInfo;
-import android.content.pm.ResolveInfo;
 
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.logging.MoPubLog;
@@ -23,7 +21,6 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.mockito.Mock;
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
 import org.robolectric.Robolectric;
@@ -49,8 +46,6 @@
     private List<Class<? extends Activity>> requiredWebViewSdkActivities;
     private List<Class<? extends Activity>> requiredNativeSdkActivities;
 
-    @Mock private ResolveInfo mockResolveInfo;
-
     @Before
     public void setUp() throws Exception {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
@@ -120,11 +115,11 @@ public void checSdkActivitiesDeclared_shouldIncludeOneActivityDeclaration() thro
 
     @Test
     public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -138,8 +133,8 @@ public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldN
     @Test
     public void displayWarningForMissingActivities_withoutInterstitialModule_withoutInterstitialActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
         removeInterstitialModule();
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -152,10 +147,10 @@ public void displayWarningForMissingActivities_withoutInterstitialModule_without
 
     @Test
      public void displayWarningForMissingActivities_withOneMissingActivity_shouldLogOnlyThatOne() throws Exception {
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
         // Here, we leave out MoPubBrowser on purpose
 
         ShadowLog.setupLogging();
@@ -218,11 +213,11 @@ public void displayWarningForMisconfiguredActivities_withAllActivitiesConfigured
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(true);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
         setDebugMode(true);
@@ -252,11 +247,11 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(true);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, RewardedMraidActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, RewardedMraidActivity.class.getName());
+        addActivityToShadowPackageManager(context, MraidVideoPlayerActivity.class.getName());
+        addActivityToShadowPackageManager(context, MoPubBrowser.class.getName());
 
         ShadowLog.setupLogging();
 
@@ -284,7 +279,7 @@ public void displayWarningForMisconfiguredActivities_withOneMisconfiguredActivit
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         ShadowLog.setupLogging();
 
@@ -304,7 +299,7 @@ public void displayWarningForMisconfiguredActivities_withMisconfiguredActivities
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         setDebugMode(true);
 
@@ -324,7 +319,7 @@ public void displayWarningForMisconfiguredActivities_withMisconfiguredActivities
         when(mockActivitiyConfigCheck.hasFlag(any(Class.class), anyInt(), eq(ActivityInfo.CONFIG_SCREEN_SIZE))).thenReturn(false);
         ManifestUtils.setFlagCheckUtil(mockActivitiyConfigCheck);
 
-        shadowOf(context.getPackageManager()).addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
+        addActivityToShadowPackageManager(context, MoPubActivity.class.getName());
 
         setDebugMode(false);
 
@@ -425,4 +420,12 @@ private void assertLogDoesntInclude(final String... messages) {
             assertThat(logText).doesNotContain(message);
         }
     }
+
+    private static void addActivityToShadowPackageManager(final Context context, final String activityName) {
+        final ActivityInfo activityInfo = new ActivityInfo();
+        activityInfo.targetActivity = activityName;
+        activityInfo.packageName = "com.mopub.mobileads.test";
+        activityInfo.name = activityName;
+        shadowOf(context.getPackageManager()).addOrUpdateActivity(activityInfo);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
index b8c249c5..29b84463 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
@@ -113,7 +113,18 @@ public void constructor_shouldCreateIntentWithImageStringAndParametersAndRespons
         assertThat(message).isEqualTo(AdAlertReporter.MESSAGE);
         assertThat(parameters).isEqualTo(subject.getParameters());
         assertThat(response).isEqualTo(subject.getResponse());
-        assertThat(imageString).isEqualTo("Qml0bWFwICgxMCB4IDEwKSBjcmVhdGVkIGZyb20gQml0bWFwIG9iamVjdCBjb21wcmVzc2VkIGFz\nIEpQRUcgd2l0aCBxdWFsaXR5IDI1\n");
+        assertThat(imageString).isEqualTo("/9j/4AAQSkZJRgABAgAAAQABAAD/2wBDACAWGBwYFCAcGhwkIiAmMFA0MCwsMGJGSjpQdGZ6eHJm\n" +
+                "cG6AkLicgIiuim5woNqirr7EztDOfJri8uDI8LjKzsb/2wBDASIkJDAqMF40NF7GhHCExsbGxsbG\n" +
+                "xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsb/wAARCAAKAAoDASIA\n" +
+                "AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA\n" +
+                "AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3\n" +
+                "ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm\n" +
+                "p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA\n" +
+                "AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx\n" +
+                "BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK\n" +
+                "U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3\n" +
+                "uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDn6KKK\n" +
+                "AP/Z\n");
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
index 4e188d01..14284ca0 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderRewardedVideoTest.java
@@ -11,6 +11,8 @@
 import com.mopub.common.util.ResponseHeader;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubNetworkError;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.MultiAdRequest;
@@ -36,6 +38,7 @@
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
@@ -147,6 +150,29 @@ public void trackImpression_shouldMakeTrackingRequest() throws JSONException, Mo
         assertThat(request.getUrl()).isEqualTo("impression_tracking_url");
     }
 
+    @Test
+    public void trackImpression_shouldMakeImpressionDataCall() throws JSONException, MoPubNetworkError, NoSuchFieldException, IllegalAccessException {
+        JSONObject serverJson = createAdResponseJson();
+        byte[] body = serverJson.toString().getBytes();
+        NetworkResponse testResponse = new NetworkResponse(body);
+        MultiAdResponse multiAdResponse = new MultiAdResponse(activity, testResponse, AdFormat.BANNER, adUnitId);
+
+        // set subject MultiAdResponse
+        Field field = getPrivateField("mMultiAdResponse");
+        field.set(subject, multiAdResponse);
+
+        // validation for basic AdLoader
+        assertThat(subject.hasMoreAds()).isTrue();
+        subject.loadNextAd(null);
+
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        // call tracking
+        subject.trackImpression(activity);
+
+        verify(listener).onImpression(adUnitId, null);
+    }
+
     @Test
     public void trackImpression_withImpressionTrackingUrlsList_shouldIgnoreSingleImpressionUrl_shouldFireListOfImpressionUrls() throws JSONException, MoPubNetworkError, NoSuchFieldException, IllegalAccessException {
         final JSONObject serverJson = createAdResponseJson();
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
index 1c05287f..12b9a98a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
@@ -7,6 +7,7 @@
 import android.Manifest;
 import android.app.Activity;
 import android.content.Context;
+import android.graphics.Point;
 import android.location.Location;
 import android.net.ConnectivityManager;
 import android.net.Uri;
@@ -29,6 +30,9 @@
 import com.mopub.mobileads.test.support.ThreadUtils;
 import com.mopub.network.AdLoader;
 import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubNetworkError;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.MultiAdRequest;
@@ -78,9 +82,12 @@
     private static final int[] HTML_ERROR_CODES = new int[]{400, 401, 402, 403, 404, 405, 407, 408,
             409, 410, 411, 412, 413, 414, 415, 416, 417, 500, 501, 502, 503, 504, 505};
 
+    private static final String mAdUnitId = "ad_unit_id";
+
     private AdViewController subject;
     @Mock private MoPubView mockMoPubView;
     @Mock private MoPubRequestQueue mockRequestQueue;
+    @Mock private ImpressionData mockImpressionData;
     private Reflection.MethodBuilder methodBuilder;
     private MoPubShadowTelephonyManager shadowTelephonyManager;
     private MoPubShadowConnectivityManager shadowConnectivityManager;
@@ -115,9 +122,11 @@ public void setup() throws Exception {
         methodBuilder = TestMethodBuilderFactory.getSingletonMock();
         reset(methodBuilder);
         response = new AdResponse.Builder()
+                .setAdUnitId(mAdUnitId)
                 .setCustomEventClassName("customEvent")
                 .setClickTrackingUrl("clickUrl")
                 .setImpressionTrackingUrls(Arrays.asList("impressionUrl1", "impressionUrl2"))
+                .setImpressionData(mockImpressionData)
                 .setDimensions(320, 50)
                 .setAdType("html")
                 .setFailoverUrl("failUrl")
@@ -196,6 +205,33 @@ public void generateAdUrl_shouldSetUserDataKeywordsIfUserConsent() {
         assertThat(getParameterFromRequestUrl(adUrl, "user_data_q")).isEqualTo("user_data_keywords");
     }
 
+    @Test
+    public void generateAdUrl_withoutSetRequestedAdSize_shouldSetRequestedAdSizeToZeroZero() {
+        subject.setAdUnitId("abc123");
+        subject.setKeywords("keywords");
+        subject.setUserDataKeywords("user_data_keywords");
+        subject.setLocation(new Location(""));
+        WebViewAdUrlGenerator mUrlGenerator = new WebViewAdUrlGenerator(mockMoPubView.getContext(), false);
+
+        final String adUrl = subject.generateAdUrl();
+        assertThat(getParameterFromRequestUrl(adUrl, "cw")).isEqualTo("0");
+        assertThat(getParameterFromRequestUrl(adUrl, "ch")).isEqualTo("0");
+    }
+
+    @Test
+    public void generateAdUrl_withSetRequestedAdSize_shouldSetRequestedAdSize() {
+        subject.setAdUnitId("abc123");
+        subject.setKeywords("keywords");
+        subject.setUserDataKeywords("user_data_keywords");
+        subject.setLocation(new Location(""));
+        subject.setRequestedAdSize(new Point(120, 240));
+        WebViewAdUrlGenerator mUrlGenerator = new WebViewAdUrlGenerator(mockMoPubView.getContext(), false);
+
+        final String adUrl = subject.generateAdUrl();
+        assertThat(getParameterFromRequestUrl(adUrl, "cw")).isEqualTo("120");
+        assertThat(getParameterFromRequestUrl(adUrl, "ch")).isEqualTo("240");
+    }
+
     @Test
     public void adDidFail_shouldScheduleRefreshTimer_shouldCallMoPubViewAdFailed() {
         ShadowLooper.pauseMainLooper();
@@ -390,6 +426,20 @@ public void trackImpression_noAdResponse_shouldNotAddToQueue() {
         verifyZeroInteractions(mockRequestQueue);
     }
 
+    @Test
+    public void trackImpression_shouldCallImpressonDataListener() {
+        ImpressionListener impressionListener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(impressionListener);
+        subject.onAdLoadSuccess(response);
+        subject.setAdUnitId(mAdUnitId);
+
+        subject.trackImpression();
+
+        verify(impressionListener).onImpression(response.getAdUnitId(), response.getImpressionData());
+        verify(mockRequestQueue).add(argThat(isUrl("impressionUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("impressionUrl2")));
+    }
+
     @Test
     public void registerClick_shouldHttpGetTheClickthroughUrl() {
         subject.onAdLoadSuccess(response);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
index 8e0d1eae..a926ff65 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
@@ -9,6 +9,7 @@
 import android.content.Intent;
 import android.media.AudioManager;
 
+import com.mopub.common.CreativeOrientation;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.common.util.Utils;
 
@@ -36,11 +37,13 @@
 
     private long testBroadcastIdentifier;
     private VastVideoConfig mVastVideoConfig;
+    private CreativeOrientation mOrientation;
 
     @Before
     public void setup() throws Exception {
         mVastVideoConfig = mock(VastVideoConfig.class, withSettings().serializable());
         testBroadcastIdentifier = 1234;
+        mOrientation = CreativeOrientation.DEVICE;
     }
 
     @Test
@@ -52,7 +55,7 @@ public void startMraid_shouldStartMraidVideoPlayerActivity() throws Exception {
     @Test
     public void startVast_shouldStartMraidVideoPlayerActivity() throws Exception {
         startVast(Robolectric.buildActivity(Activity.class).create().get(), mVastVideoConfig,
-                testBroadcastIdentifier);
+                testBroadcastIdentifier, mOrientation);
         assertVastVideoPlayerActivityStarted(MraidVideoPlayerActivity.class, mVastVideoConfig,
                 testBroadcastIdentifier);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/ConversionUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/ConversionUrlGeneratorTest.java
index 07d63efd..847664bf 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/ConversionUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/ConversionUrlGeneratorTest.java
@@ -52,7 +52,7 @@ public void setUp() throws Exception {
         when(ClientMetadata.getInstance(context)).thenReturn(clientMetadata);
     }
 
-    //https://ads.mopub.com/m/open?v=6&av=app_version&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track&id=com.mopub.mobileads&st=1&nv=5.0.0&current_consent_status=consent_status&consented_vendor_list_version=vendor_list_version&consented_privacy_policy_version=privacy_version&gdpr_applies=0
+    //https://ads.mopub.com/m/open?v=6&av=app_version&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track&mid=mp_tmpl_mopub_id&id=com.mopub.mobileads&st=1&nv=5.0.0&current_consent_status=consent_status&consented_vendor_list_version=vendor_list_version&consented_privacy_policy_version=privacy_version&gdpr_applies=0
     @Test
     public void generateUrlString_allParametersSet_shouldReturnValidUrl() {
         ConversionUrlGenerator subject = new ConversionUrlGenerator(context);
@@ -69,6 +69,7 @@ public void generateUrlString_allParametersSet_shouldReturnValidUrl() {
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "nv")).isEqualTo(MoPub.SDK_VERSION);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "av")).isEqualTo(APP_VERSION);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "udid")).isEqualTo("mp_tmpl_advertising_id");
+        assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "mid")).isEqualTo("mp_tmpl_mopub_id");
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "st")).isEqualTo("1");
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "current_consent_status")).isEqualTo(CONSENT_STATUS);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "gdpr_applies")).isEqualTo("0");
@@ -92,6 +93,7 @@ public void generateUrlString_allParametersNoSt_shouldReturnValidUrl() {
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "nv")).isEqualTo(MoPub.SDK_VERSION);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "av")).isEqualTo(APP_VERSION);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "udid")).isEqualTo("mp_tmpl_advertising_id");
+        assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "mid")).isEqualTo("mp_tmpl_mopub_id");
         assertThat(url.indexOf("&st=")).isEqualTo(-1);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "current_consent_status")).isEqualTo(CONSENT_STATUS);
         assertThat(NativeUrlGeneratorTest.getParameterFromRequestUrl(url, "gdpr_applies")).isEqualTo("0");
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
index 1591f431..13d5e304 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
@@ -19,7 +19,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.HashMap;
 import java.util.Iterator;
@@ -178,7 +177,7 @@ public void onReceiver_whenCustomEventInterstitialListenerIsNull_shouldNotBlowUp
     public void register_shouldEnableReceivingBroadcasts() throws Exception {
         subject.register(subject, context);
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialShown();
     }
@@ -189,7 +188,7 @@ public void unregister_shouldDisableReceivingBroadcasts() throws Exception {
 
         subject.unregister(subject);
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialShown();
     }
@@ -211,7 +210,7 @@ public void unregister_shouldNotLeakTheContext() throws Exception {
 
         // Unregister shouldn't know the context any more and so should not have worked
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
         verify(customEventInterstitialListener).onInterstitialShown();
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
index 30bdab61..d5ff26b2 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
@@ -6,6 +6,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.test.support.TestHtmlInterstitialWebViewFactory;
@@ -16,7 +17,6 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.shadows.ShadowApplication;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -109,12 +109,12 @@ public void loadInterstitial_shouldConnectListenerToBroadcastReceiver() throws E
         subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
 
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialShown();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialDismissed();
     }
@@ -126,12 +126,12 @@ public void onInvalidate_shouldDisconnectListenerToBroadcastReceiver() throws Ex
 
         Intent intent;
         intent = new Intent(ACTION_INTERSTITIAL_SHOW);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialShown();
 
         intent = new Intent(ACTION_INTERSTITIAL_DISMISS);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialDismissed();
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
index f8122e9c..8d2e27f4 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
@@ -9,6 +9,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
+import android.support.v4.content.LocalBroadcastManager;
 import android.view.View;
 import android.view.ViewGroup;
 import android.webkit.WebViewClient;
@@ -29,11 +30,9 @@
 import org.robolectric.shadow.api.Shadow;
 import org.robolectric.shadows.ShadowActivity;
 import org.robolectric.shadows.ShadowApplication;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import static com.mopub.common.DataKeys.CLICKTHROUGH_URL_KEY;
 import static com.mopub.common.DataKeys.CREATIVE_ORIENTATION_KEY;
-import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
@@ -81,7 +80,7 @@ public void setUp() throws Exception {
         final ActivityController<MoPubActivity> subjectController = Robolectric.buildActivity(
                 MoPubActivity.class, moPubActivityIntent);
         subject = subjectController.get();
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
         subjectController.create();
@@ -211,7 +210,7 @@ public void getAdView_shouldCreateHtmlInterstitialWebViewAndLoadResponse() throw
     public void getAdView_shouldSetUpForBroadcastingClicks() throws Exception {
         subject.getAdView();
         BroadcastReceiver broadcastReceiver = mock(BroadcastReceiver.class);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
@@ -227,7 +226,7 @@ public void getAdView_shouldSetUpForBroadcastingClicks() throws Exception {
     public void getAdView_shouldSetUpForBroadcastingFail() throws Exception {
         subject.getAdView();
         BroadcastReceiver broadcastReceiver = mock(BroadcastReceiver.class);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
index 81d16a14..560fc99a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
@@ -7,6 +7,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
+import android.graphics.Point;
 import android.view.View;
 
 import com.mopub.common.test.support.SdkTestRunner;
@@ -248,6 +249,20 @@ public void invalidateAdapter_withReflection_shouldExist() throws Exception {
                 "invalidate")).isNotNull();
     }
 
+    @Test
+    public void loadAd_withoutRequestedAdSize_shouldSetRequestedAdSizeToZeroZero() throws Exception {
+        subject.loadAd();
+        final Point point = new Point(0, 0);
+        verify(adViewController).setRequestedAdSize(point);
+    }
+
+    @Test
+    public void loadAd_withRequestedAdSize_shouldSetRequestedAdSize() throws Exception {
+        final Point point = new Point(0, MoPubView.MoPubAdSize.HEIGHT_50.toInt());
+        subject.loadAd(MoPubView.MoPubAdSize.HEIGHT_50);
+        verify(adViewController).setRequestedAdSize(point);
+    }
+
     private void broadcastIntent(final Intent intent) {
         final List<ShadowApplication.Wrapper> wrappers = ShadowApplication.getInstance().getRegisteredReceivers();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
index a2ff830a..649e1c1d 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
@@ -9,6 +9,7 @@
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
@@ -33,7 +34,6 @@
 import org.robolectric.Robolectric;
 import org.robolectric.Shadows;
 import org.robolectric.android.controller.ActivityController;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
@@ -230,7 +230,7 @@ public void onCreate_shouldSetHardwareAcceleratedFlag() throws Exception {
     @Test
     public void onDestroy_DestroyMraidView() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, subject.getBroadcastIdentifier());
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
@@ -291,7 +291,7 @@ public void baseMraidListenerOnClose_shouldFireJavascriptWebViewDidClose() throw
     @Test
     public void baseMraidListenerOnOpen_shouldBroadcastClickEvent() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_CLICK, testBroadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
@@ -356,7 +356,7 @@ private Intent createMraidActivityIntent(String expectedSource) {
     @Test
     public void onCreate_shouldBroadcastInterstitialShow() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, testBroadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
@@ -367,7 +367,7 @@ public void onCreate_shouldBroadcastInterstitialShow() throws Exception {
     @Test
     public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, testBroadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                         testBroadcastIdentifier).getIntentFilter());
 
@@ -376,6 +376,12 @@ public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
         verify(broadcastReceiver).onReceive(any(Context.class), eq(expectedIntent));
     }
 
+    @Test
+    public void baseMraidListenerOnRenderProcessGone__shouldCallCustomEventInterstitialOnInterstitialFailed_whenMraidListenerOnFailure() throws Exception {
+
+
+    }
+
     private FrameLayout getContentView() {
         return (FrameLayout) ((ViewGroup) subject.findViewById(android.R.id.content)).getChildAt(0);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
index 07cbffee..a8c3fd7e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
@@ -29,6 +29,9 @@ public void setup() throws Exception {
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView1</Tracking>" +
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView2</Tracking>" +
                 "        <Tracking event=\"creativeView\">https://tracking/creativeView3</Tracking>" +
+                "        <Tracking event=\"creativeView\"></Tracking>" + // missing Uri
+                "        <Tracking event=\"creativeView\"/>" + // self-terminating with missing Uri
+                "        <Tracking/>" + // self-terminating with missing Uri
                 "    </TrackingEvents>" +
                 "    <CompanionClickThrough>https://clickthrough</CompanionClickThrough>" +
                 "    <CompanionClickThrough>https://second_clickthrough</CompanionClickThrough>" +
@@ -38,6 +41,8 @@ public void setup() throws Exception {
                 "    <CompanionClickTracking>" +
                 "        <![CDATA[https://clicktrackingTwo]]>" +
                 "    </CompanionClickTracking>" +
+                "    <CompanionClickTracking></CompanionClickTracking>" + // empty tracker
+                "    <CompanionClickTracking/>" + // self-terminating empty tracker
                 "    <RandomUnusedTag>This_is_unused</RandomUnusedTag>" +
                 "</Companion>";
 
@@ -90,7 +95,7 @@ public void getClickThroughUrl_shouldReturnFirstStringUrl() {
     }
 
     @Test
-    public void getClickTrackers_shouldReturnAllUrls() {
+    public void getClickTrackers_shouldReturnAllUrls_shouldNotThrowException() {
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
                 .containsOnly("https://clicktrackingOne",
                         "https://clicktrackingTwo");
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
index 60e8f006..6615c310 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
@@ -88,7 +88,7 @@ public void prepareVastVideoConfiguration_shouldNotifyTheListenerAndContainTheCo
         semaphore.acquire();
         verify(vastManagerListener).onVastVideoConfigurationPrepared(any(VastVideoConfig.class));
 
-        assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
+        assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4");
 
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
@@ -151,7 +151,7 @@ public void prepareVastVideoConfiguration_shouldHandleMultipleRedirects() throws
                 .class));
 
         // at this point it should have 3 sets of data from TEST_VAST_XML_STRING and one set from TEST_NESTED_VAST_XML_STRING
-        assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
+        assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4");
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
 
@@ -231,7 +231,6 @@ public void prepareVastVideoConfiguration_withNoExtensions_shouldContainTheCorre
         assertThat(mVastVideoConfig.getCustomCtaText()).isNull();
         assertThat(mVastVideoConfig.getCustomSkipText()).isNull();
         assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isNull();
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_LANDSCAPE);
     }
 
     @Test
@@ -249,7 +248,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
                                 "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
-                                "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
@@ -265,7 +263,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
         assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
     @Test
@@ -278,7 +275,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
                                 "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
-                                "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
         // Video download response
@@ -293,7 +289,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
         assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
     @Test
@@ -306,7 +301,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                                 "<MoPubCtaText>CTA 2</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 2</MoPubSkipText>" +
                                 "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png</MoPubCloseIcon>" +
-                                "<MoPubForceOrientation>landscape</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
         // Video download response
@@ -320,7 +314,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                                 "<MoPubCtaText>CTA 1</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 1</MoPubSkipText>" +
                                 "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png</MoPubCloseIcon>" +
-                                "<MoPubForceOrientation>device orientation</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
@@ -337,7 +330,6 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("CTA 2");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip 2");
         assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png");
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_LANDSCAPE);
     }
 
     @Test
@@ -400,46 +392,6 @@ public void prepareVastVideoConfiguration_withCustomSkipTextLongerThan8Chars_sho
         assertThat(mVastVideoConfig.getCustomSkipText()).isNull();
     }
 
-    @Test
-    public void prepareVastVideoConfiguration_withInvalidCustomForceOrientation_shouldReturnDefaultForceLandscapeOrientation() throws Exception {
-        // Vast redirect response
-        ShadowMoPubHttpUrlConnection.addPendingResponse(200,
-                TEST_NESTED_VAST_XML_STRING.replace(EXTENSIONS_SNIPPET_PLACEHOLDER,
-                        "<Extensions>" +
-                                "<Extension type=\"MoPub\">" +
-                                "<MoPubForceOrientation>abcd</MoPubForceOrientation>" +   // invalid value
-                                "</Extension>" +
-                                "</Extensions>"));
-        // Video download response
-        ShadowMoPubHttpUrlConnection.addPendingResponse(200, "video_data");
-
-        prepareVastVideoConfiguration();
-        semaphore.acquire();
-
-        verify(vastManagerListener).onVastVideoConfigurationPrepared(any(VastVideoConfig.class));
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_LANDSCAPE);
-    }
-
-    @Test
-    public void prepareVastVideoConfiguration_withCustomForceOrientationInMixedCaseAndUntrimmed_shouldReturnCustomForceOrientation() throws Exception {
-        // Vast redirect response
-        ShadowMoPubHttpUrlConnection.addPendingResponse(200,
-                TEST_NESTED_VAST_XML_STRING.replace(EXTENSIONS_SNIPPET_PLACEHOLDER,
-                        "<Extensions>" +
-                                "<Extension type=\"MoPub\">" +
-                                "<MoPubForceOrientation> PortRAIT  </MoPubForceOrientation>" +
-                                "</Extension>" +
-                                "</Extensions>"));
-        // Video download response
-        ShadowMoPubHttpUrlConnection.addPendingResponse(200, "video_data");
-
-        prepareVastVideoConfiguration();
-        semaphore.acquire();
-
-        verify(vastManagerListener).onVastVideoConfigurationPrepared(any(VastVideoConfig.class));
-        assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_PORTRAIT);
-    }
-
     @Test
     public void prepareVastVideoConfiguration_withValidPercentSkipOffset_shouldReturnCorrectValue() throws Exception {
         // Vast redirect response
@@ -566,7 +518,7 @@ public void prepareVastVideoConfiguration_withEmptyXml_shouldReturnNull() throws
     public void prepareVastVideoConfiguration_withVideoInDiskCache_shouldNotDownloadVideo() throws Exception {
         ShadowMoPubHttpUrlConnection.addPendingResponse(200, TEST_NESTED_VAST_XML_STRING);
 
-        CacheService.putToDiskCache("https://s3.amazonaws.com/mopub-vast/tapad-video.mp4", "video_data".getBytes());
+        CacheService.putToDiskCache("https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4", "video_data".getBytes());
 
         prepareVastVideoConfiguration();
         semaphore.acquire();
@@ -574,7 +526,7 @@ public void prepareVastVideoConfiguration_withVideoInDiskCache_shouldNotDownload
         assertThat(ShadowMoPubHttpUrlConnection.getLatestRequestUrl()).isNotNull();
         verify(vastManagerListener).onVastVideoConfigurationPrepared(any(VastVideoConfig.class));
         assertThat(mVastVideoConfig.getDiskMediaFileUrl())
-                .isEqualTo(CacheService.getFilePathDiskCache("https://s3.amazonaws.com/mopub-vast/tapad-video.mp4"));
+                .isEqualTo(CacheService.getFilePathDiskCache("https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4"));
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoGradientStripWidgetTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoGradientStripWidgetTest.java
index 045f60da..4ffbff58 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoGradientStripWidgetTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoGradientStripWidgetTest.java
@@ -12,7 +12,6 @@
 import android.widget.RelativeLayout;
 
 import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.common.util.DeviceUtils;
 
 import org.junit.Before;
 import org.junit.Test;
@@ -34,26 +33,25 @@ public void setUp() throws Exception {
     @Test
     public void constructor_whenForcePortrait_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
 
         assertThat(subject.getVisibility()).isEqualTo(View.INVISIBLE);
     }
 
     @Test
-    public void constructor_whenForceLandscape_shouldBeVisible() throws Exception {
+    public void constructor_whenForceLandscape_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_LANDSCAPE, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
 
-        assertThat(subject.getVisibility()).isEqualTo(View.VISIBLE);
+        // If not forcing orientation, visibility depends on device orientation,
+        // which is initially ORIENTATION_UNDEFINED in tests
+        assertThat(subject.getVisibility()).isEqualTo(View.INVISIBLE);
     }
 
     @Test
     public void constructor_whenUseDeviceOrientation_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.DEVICE_ORIENTATION, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
 
         // If not forcing orientation, visibility depends on device orientation,
         // which is initially ORIENTATION_UNDEFINED in tests
@@ -63,8 +61,7 @@ public void constructor_whenUseDeviceOrientation_shouldBeInvisible() throws Exce
     @Test
     public void constructor_whenForceOrientationUndefined_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.UNDEFINED, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
 
         // If force orientation undefined, visibility depends on device orientation,
         // which is initially ORIENTATION_UNDEFINED in tests
@@ -76,8 +73,7 @@ public void constructor_whenForceOrientationUndefined_shouldBeInvisible() throws
     @Test
     public void onConfigurationChanged_whenForcePortraitAndDeviceInPortrait_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_PORTRAIT;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -86,22 +82,20 @@ public void onConfigurationChanged_whenForcePortraitAndDeviceInPortrait_shouldBe
     }
 
     @Test
-    public void onConfigurationChanged_whenForcePortraitAndDeviceInLandscape_shouldBeInvisible() throws Exception {
+    public void onConfigurationChanged_whenForcePortraitAndDeviceInLandscape_shouldBeVisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_LANDSCAPE;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
 
-        assertThat(subject.getVisibility()).isEqualTo(View.INVISIBLE);
+        assertThat(subject.getVisibility()).isEqualTo(View.VISIBLE);
     }
 
     @Test
     public void onConfigurationChanged_whenForcePortraitAndDeviceOrientationUndefined_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_UNDEFINED;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -112,22 +106,20 @@ public void onConfigurationChanged_whenForcePortraitAndDeviceOrientationUndefine
     // Video is still playing, forcing landscape orientation
 
     @Test
-    public void onConfigurationChanged_whenForceLandscapeAndDeviceInPortrait_shouldBeVisible() throws Exception {
+    public void onConfigurationChanged_whenForceLandscapeAndDeviceInPortrait_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_LANDSCAPE, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_PORTRAIT;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
 
-        assertThat(subject.getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(subject.getVisibility()).isEqualTo(View.INVISIBLE);
     }
 
     @Test
     public void onConfigurationChanged_whenForceLandscapeAndDeviceInLandscape_shouldBeVisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_LANDSCAPE, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_LANDSCAPE;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -136,15 +128,14 @@ public void onConfigurationChanged_whenForceLandscapeAndDeviceInLandscape_should
     }
 
     @Test
-    public void onConfigurationChanged_whenForceLandscapeAndDeviceOrientationUndefined_shouldBeVisible() throws Exception {
+    public void onConfigurationChanged_whenForceLandscapeAndDeviceOrientationUndefined_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_LANDSCAPE, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_UNDEFINED;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
 
-        assertThat(subject.getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(subject.getVisibility()).isEqualTo(View.INVISIBLE);
     }
 
     // Video is still playing, use device orientation
@@ -152,8 +143,7 @@ public void onConfigurationChanged_whenForceLandscapeAndDeviceOrientationUndefin
     @Test
     public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceInPortrait_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.DEVICE_ORIENTATION, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_PORTRAIT;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -164,8 +154,7 @@ public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceInPortrait_s
     @Test
     public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceInLandscape_shouldBeVisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.DEVICE_ORIENTATION, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_LANDSCAPE;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -176,8 +165,7 @@ public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceInLandscape_
     @Test
     public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceOrientationUndefined_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.DEVICE_ORIENTATION, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_UNDEFINED;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -190,8 +178,7 @@ public void onConfigurationChanged_whenUseDeviceOrientationAndDeviceOrientationU
     @Test
     public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceInPortrait_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.UNDEFINED, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_PORTRAIT;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -202,8 +189,7 @@ public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceInPortr
     @Test
     public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceInLandscape_shouldBeVisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.UNDEFINED, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_LANDSCAPE;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -214,8 +200,7 @@ public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceInLands
     @Test
     public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceOrientationUndefined_shouldBeInvisible() throws Exception {
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.UNDEFINED, true, View.VISIBLE,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, View.VISIBLE, RelativeLayout.ALIGN_TOP, 0);
         context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_UNDEFINED;
 
         subject.onConfigurationChanged(context.getResources().getConfiguration());
@@ -229,8 +214,7 @@ public void onConfigurationChanged_whenForceOrientationUndefinedAndDeviceOrienta
     public void notifyVideoComplete_withCompanionAd_shouldSetVisibilityForCompanionAd() throws Exception {
         final int visibilityForCompanionAd = View.VISIBLE;
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, true, visibilityForCompanionAd,
-                RelativeLayout.ALIGN_TOP, 0);
+                true, visibilityForCompanionAd, RelativeLayout.ALIGN_TOP, 0);
 
         subject.notifyVideoComplete();
 
@@ -241,8 +225,7 @@ public void notifyVideoComplete_withCompanionAd_shouldSetVisibilityForCompanionA
     public void notifyVideoComplete_withoutCompanionAd_shouldBeGone() throws Exception {
         final int visibilityForCompanionAd = View.VISIBLE;
         subject = new VastVideoGradientStripWidget(context, GradientDrawable.Orientation.TOP_BOTTOM,
-                DeviceUtils.ForceOrientation.FORCE_PORTRAIT, false, visibilityForCompanionAd,
-                RelativeLayout.ALIGN_TOP, 0);
+                false, visibilityForCompanionAd, RelativeLayout.ALIGN_TOP, 0);
 
         subject.notifyVideoComplete();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
index 8b64f96e..ac03730e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
@@ -7,6 +7,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
 
 import com.mopub.common.AdReport;
 import com.mopub.common.CacheServiceTest;
@@ -22,7 +23,6 @@
 import org.mockito.Mock;
 import org.robolectric.Robolectric;
 import org.robolectric.shadows.httpclient.FakeHttp;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.Arrays;
 import java.util.HashMap;
@@ -136,12 +136,12 @@ public void loadInterstitial_shouldConnectListenerToBroadcastReceiver() throws E
         subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
 
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialShown();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialDismissed();
     }
@@ -201,12 +201,12 @@ public void onInvalidate_shouldDisconnectListenerToBroadcastReceiver() throws Ex
 
         Intent intent;
         intent = new Intent(ACTION_INTERSTITIAL_SHOW);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialShown();
 
         intent = new Intent(ACTION_INTERSTITIAL_DISMISS);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialDismissed();
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
index 99368f74..1b5dfea0 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
@@ -17,6 +17,7 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.support.v4.content.LocalBroadcastManager;
 import android.view.View;
 import android.webkit.WebView;
 import android.widget.ImageView;
@@ -25,7 +26,6 @@
 import com.mopub.common.ExternalViewabilitySession;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.common.util.DeviceUtils.ForceOrientation;
 import com.mopub.mobileads.resource.CloseButtonDrawable;
 import com.mopub.mobileads.test.support.GestureUtils;
 import com.mopub.mobileads.test.support.ShadowVastVideoView;
@@ -52,7 +52,6 @@
 import org.robolectric.shadows.httpclient.FakeHttp;
 import org.robolectric.shadows.httpclient.RequestMatcher;
 import org.robolectric.shadows.httpclient.TestHttpResponse;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -60,8 +59,6 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
-import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
@@ -234,7 +231,7 @@ public boolean matches(HttpRequest request) {
             }
         }, new TestHttpResponse(200, "body"));
 
-        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(null,
                 testBroadcastIdentifier).getIntentFilter());
 
@@ -246,7 +243,7 @@ public void tearDown() throws Exception {
         Robolectric.getForegroundThreadScheduler().reset();
         Robolectric.getBackgroundThreadScheduler().reset();
 
-        ShadowLocalBroadcastManager.getInstance(context).unregisterReceiver(broadcastReceiver);
+        LocalBroadcastManager.getInstance(context).unregisterReceiver(broadcastReceiver);
     }
 
     @Test
@@ -559,60 +556,6 @@ public void onCreate_shouldBroadcastInterstitialShow() throws Exception {
                 argThat(new IntentIsEqual(expectedIntent)));
     }
 
-    @Test
-    public void onCreate_whenCustomForceOrientationNotSpecified_shouldForceLandscapeOrientation() throws Exception {
-        VastVideoConfig vastVideoConfig = new VastVideoConfig();
-        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
-        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
-
-        initializeSubject();
-        subject.onCreate();
-
-        verify(baseVideoViewControllerListener).onSetRequestedOrientation(
-                SCREEN_ORIENTATION_SENSOR_LANDSCAPE);
-    }
-
-    @Test
-    public void onCreate_whenCustomForceOrientationIsDeviceOrientation_shouldNotForceLandscapeOrientation() throws Exception {
-        VastVideoConfig vastVideoConfig = new VastVideoConfig();
-        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
-        vastVideoConfig.setCustomForceOrientation(ForceOrientation.DEVICE_ORIENTATION);
-        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
-
-        initializeSubject();
-        subject.onCreate();
-
-        verify(baseVideoViewControllerListener, never()).onSetRequestedOrientation(anyInt());
-    }
-
-    @Test
-    public void onCreate_whenCustomForceOrientationIsPortraitOrientation_shouldForcePortraitOrientation() throws Exception {
-        VastVideoConfig vastVideoConfig = new VastVideoConfig();
-        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
-        vastVideoConfig.setCustomForceOrientation(ForceOrientation.FORCE_PORTRAIT);
-        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
-
-        initializeSubject();
-        subject.onCreate();
-
-        verify(baseVideoViewControllerListener).onSetRequestedOrientation(
-                SCREEN_ORIENTATION_PORTRAIT);
-    }
-
-    @Test
-    public void onCreate_whenCustomForceOrientationIsLandscapeOrientation_shouldForceLandscapeOrientation() throws Exception {
-        VastVideoConfig vastVideoConfig = new VastVideoConfig();
-        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
-        vastVideoConfig.setCustomForceOrientation(ForceOrientation.FORCE_LANDSCAPE);
-        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
-
-        initializeSubject();
-        subject.onCreate();
-
-        verify(baseVideoViewControllerListener).onSetRequestedOrientation(
-                SCREEN_ORIENTATION_SENSOR_LANDSCAPE);
-    }
-
     @Test
     public void VastWebView_onVastWebViewClick_shouldCallVastCompanionAdHandleClick() throws Exception {
         initializeSubject();
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
index 1595df8f..f663e700 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
@@ -364,12 +364,11 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
         }).when(vastXmlManagerAggregatorListener).onAggregationComplete(any(VastVideoConfig.class));
 
         // Always assume landscape (where width > height) since videos will always be played in this orientation
-        int screenWidth = DIM_LONG;
-        int screenHeight = DIM_SHORT;
+        final int screenWidth = DIM_LONG;
+        final int screenHeight = DIM_SHORT;
         double screenAspectRatio = (double) screenWidth / screenHeight;
-        int screenArea = screenWidth * screenHeight;
         subject = new VastXmlManagerAggregator(vastXmlManagerAggregatorListener, screenAspectRatio,
-                screenArea, context);
+                screenWidth, context);
     }
 
     // NOTE most of the functionality of this class is tested through VastManagerTest
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
index 2e11d93a..ce31cf2a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
@@ -482,13 +482,6 @@ public void getCustomCloseIconUrl_shouldReturnTheCorrectValue() {
                 ".com/exchange-media/images/v4/star_icon_3x.png");
     }
 
-    @Test
-    public void getCustomForceOrientation_shouldReturnTheCorrectValue() {
-        ForceOrientation customForceOrientation = mXmlManager.getCustomForceOrientation();
-
-        assertThat(customForceOrientation).isEqualTo(ForceOrientation.DEVICE_ORIENTATION);
-    }
-
     /**
      * INTEGRATION TESTS
      */
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
index de679b52..a97400fe 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
@@ -26,7 +26,9 @@
 import android.view.Display;
 import android.view.WindowManager;
 
+import com.mopub.common.AppEngineInfo;
 import com.mopub.common.BaseAdapterConfiguration;
+import com.mopub.common.BaseUrlGenerator;
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.LocationService;
 import com.mopub.common.MoPub;
@@ -48,7 +50,6 @@
 import com.mopub.mobileads.test.support.MoPubShadowTelephonyManager;
 import com.mopub.mraid.MraidNativeCommandHandler;
 import com.mopub.network.PlayServicesUrlRewriter;
-import com.mopub.network.RequestRateTracker;
 import com.mopub.network.RequestRateTrackerTest;
 
 import org.junit.After;
@@ -80,6 +81,7 @@
 import static com.mopub.common.ClientMetadata.MoPubNetworkType;
 import static com.mopub.common.MoPubTest.INIT_ADUNIT;
 import static org.fest.assertions.api.Assertions.assertThat;
+import static org.junit.Assert.assertEquals;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.anyInt;
 import static org.mockito.Mockito.doAnswer;
@@ -95,6 +97,8 @@
     private static final String TEST_UDID = "20b013c721c";
     private static final int TEST_SCREEN_WIDTH = 42;
     private static final int TEST_SCREEN_HEIGHT = 1337;
+    private static final int TEST_SCREEN_SAFE_WIDTH = 0;
+    private static final int TEST_SCREEN_SAFE_HEIGHT = 0;
     private static final float TEST_DENSITY = 1.0f;
 
     private WebViewAdUrlGenerator subject;
@@ -191,6 +195,7 @@ public void tearDown() throws Exception {
                 .setStatic(MoPub.class)
                 .setAccessible()
                 .execute();
+        BaseUrlGenerator.setAppEngineInfo(null);
     }
 
     @Test
@@ -1002,6 +1007,23 @@ public void disableLocationCollection_whenLocationServiceHasMostRecentLocation_s
         assertThat(getParameterFromRequestUrl(adUrl, "ll")).isNullOrEmpty();
     }
 
+    @Test
+    public void generateAdUrl_whenEngineInfoIsNotSet_shouldIncludeEngineInfo() {
+        String adUrl = generateMinimumUrlString();
+
+        assertThat(getParameterFromRequestUrl(adUrl, "e_name")).isNullOrEmpty();
+        assertThat(getParameterFromRequestUrl(adUrl, "e_ver")).isNullOrEmpty();
+    }
+
+    @Test
+    public void generateAdUrl_whenEngineInfoIsSet_shouldIncludeEngineInfo() {
+        MoPub.setEngineInformation(new AppEngineInfo("ename", "eversion"));
+        String adUrl = generateMinimumUrlString();
+
+        assertEquals(getParameterFromRequestUrl(adUrl, "e_name"), "ename");
+        assertEquals(getParameterFromRequestUrl(adUrl, "e_ver"), "eversion");
+    }
+
     private String getParameterFromRequestUrl(String requestString, String key) {
         Uri requestUri = Uri.parse(requestString);
         String parameter = requestUri.getQueryParameter(key);
@@ -1070,6 +1092,8 @@ public String build() {
                             "&ll=" + latLon + "&lla=" + locationAccuracy + "&llf=" + latLonLastUpdated) +
                     "&z=-0700" +
                     "&o=p" +
+                    "&cw=" + TEST_SCREEN_SAFE_WIDTH +
+                    "&ch=" + TEST_SCREEN_SAFE_HEIGHT +
                     "&w=" + TEST_SCREEN_WIDTH +
                     "&h=" + TEST_SCREEN_HEIGHT +
                     "&sc=1.0" +
@@ -1082,6 +1106,7 @@ public String build() {
                     (TextUtils.isEmpty(abt) ? "" : "&abt=" + Uri.encode(abt)) +
                     "&udid=" + PlayServicesUrlRewriter.UDID_TEMPLATE +
                     "&dnt=" + PlayServicesUrlRewriter.DO_NOT_TRACK_TEMPLATE +
+                    "&mid=" + PlayServicesUrlRewriter.MOPUB_ID_TEMPLATE +
                     paramIfNotEmpty("gdpr_applies", gdprApplies) +
                     paramIfNotEmpty("force_gdpr_applies", forceGdprApplies) +
                     paramIfNotEmpty("current_consent_status", currentConsentStatus) +
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
index 699bf188..a17cd159 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBannerTest.java
@@ -27,6 +27,7 @@
 
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.MoPubErrorCode.MRAID_LOAD_ERROR;
+import static com.mopub.mobileads.MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.eq;
@@ -166,6 +167,15 @@ public void bannerMraidListener_notInstanceOfInternalListener_shouldNotifyBanner
         verify(mockPublicListener).onBannerFailed(MoPubErrorCode.MRAID_LOAD_ERROR);
     }
 
+    @Test
+    public void bannerMraidListener_onRenderProcessGone_shouldNotifyBannerFailed() {
+        final MoPubErrorCode errorCode = RENDER_PROCESS_GONE_WITH_CRASH;
+        MraidListener mraidListener = captureMraidListener();
+        mraidListener.onRenderProcessGone(errorCode);
+
+        verify(mockBannerListener).onBannerFailed(errorCode);
+    }
+
     @Test
     public void trackMpxAndThirdPartyImpressions_shouldFireJavascriptWebViewDidAppear() {
         MraidListener mraidListener = captureMraidListener();
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
index bcea7356..747226e8 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
@@ -8,12 +8,14 @@
 import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
+import android.webkit.RenderProcessGoneDetail;
 import android.webkit.WebSettings;
 import android.webkit.WebViewClient;
 
 import com.mopub.common.AdReport;
 import com.mopub.common.Constants;
 import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
 import com.mopub.mraid.MraidBridge.MraidWebView;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
@@ -61,6 +63,8 @@
     private MraidWebView mockInterstitialWebView;
     @Mock
     private WebSettings mockWebSettings;
+    @Mock
+    private RenderProcessGoneDetail mockRenderProcessGoneDetail;
     @Captor
     private ArgumentCaptor<WebViewClient> bannerWebViewClientCaptor;
 
@@ -279,6 +283,12 @@ public void handleShouldOverrideUrl_normalUrl_shouldReturnFalse() {
         assertThat(result).isFalse();
     }
 
+    @Test
+    public void handleRenderProcessGone_shouldDetach_shouldNotifyMraidBridgeListener() {
+        subjectBanner.handleRenderProcessGone(mockRenderProcessGoneDetail);
+        verify(mockBridgeListener).onRenderProcessGone(any(MoPubErrorCode.class));
+    }
+
     @Test(expected = MraidCommandException.class)
     public void runCommand_requiresClick_notClicked_shouldThrowException()
             throws MraidCommandException {
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
index a044eaeb..61784461 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
@@ -11,6 +11,7 @@
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
 import android.net.Uri;
+import android.os.Build;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
@@ -21,6 +22,7 @@
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.common.util.Utils;
 import com.mopub.mobileads.BaseVideoPlayerActivityTest;
+import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MraidVideoPlayerActivity;
 import com.mopub.mobileads.WebViewCacheService;
 import com.mopub.mraid.MraidBridge.MraidBridgeListener;
@@ -41,6 +43,7 @@
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowApplication;
 
 import java.net.URI;
@@ -401,6 +404,41 @@ public void handleExpand_withTwoPartUrl_shouldAttachTwoPartBridge_shouldCallOnEx
         assertThat(subject.getViewState()).isEqualTo(ViewState.EXPANDED);
     }
 
+    @Config(sdk = Build.VERSION_CODES.JELLY_BEAN_MR2)
+    @Test
+    public void handleExpand_shouldHaveSystemUiFlagsSet()
+            throws MraidCommandException {
+
+        final int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
+
+        subject.handlePageLoad();
+
+        subject.handleExpand(null, false);
+        assertThat(rootView.getSystemUiVisibility()).isEqualTo(flags);
+    }
+
+    @Config(sdk = Build.VERSION_CODES.KITKAT)
+    @Test
+    public void handleExpand_withApi19AndAbove_shouldHaveSystemUiFlagsSetWithImmersive()
+            throws MraidCommandException {
+
+        final int flags = View.SYSTEM_UI_FLAG_LOW_PROFILE
+                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                | View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
+                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+
+        subject.handlePageLoad();
+
+        subject.handleExpand(null, false);
+        assertThat(rootView.getSystemUiVisibility()).isEqualTo(flags);
+    }
+
     @Test
     public void handleClose_afterDestroy_shouldNotFireOnClose() {
         subject.destroy();
@@ -778,6 +816,12 @@ public void handleSetOrientationProperties_forInterstitial_shouldChangeScreenOri
                 .SCREEN_ORIENTATION_LANDSCAPE);
     }
 
+    @Test
+    public void handleRenderProcessGone_shouldNotifyMraidListener() {
+        subject.handleRenderProcessGone(MoPubErrorCode.RENDER_PROCESS_GONE_WITH_CRASH);
+        verify(mockMraidListener).onRenderProcessGone(any(MoPubErrorCode.class));
+    }
+
     @Test
     public void shouldAllowForceOrientation_withNoneOrientation_shouldReturnTrue() throws PackageManager.NameNotFoundException {
         setMockActivityInfo(true, ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED,
@@ -1117,6 +1161,23 @@ public void destroy_fromResizedState_shouldRemoveCloseableAdContainerFromContent
         assertThat(rootView.getChildCount()).isEqualTo(0);
     }
 
+    @Test
+    public void destroy_shouldResetSystemUIFlags()
+            throws MraidCommandException {
+
+        final int originalFlags = rootView.getSystemUiVisibility();
+        final int newFlags = originalFlags + 1;
+
+        rootView.setSystemUiVisibility(newFlags);
+
+        // make sure the flags were set
+        assertThat(rootView.getSystemUiVisibility()).isEqualTo(newFlags);
+
+        subject.destroy();
+
+        assertThat(rootView.getSystemUiVisibility()).isEqualTo(originalFlags);
+    }
+
     @Test
     public void callMraidListenerCallbacks_withVariousStates_shouldCallCorrectMraidListenerCallback() {
         // Previous state LOADING
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
index 9d1c0718..33fca603 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
@@ -6,6 +6,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.ResponseBodyInterstitialTest;
@@ -18,17 +19,16 @@
 import org.robolectric.Robolectric;
 import org.robolectric.Shadows;
 import org.robolectric.shadows.ShadowActivity;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.HashMap;
 import java.util.Map;
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
-import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
 import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -87,17 +87,17 @@ public void loadInterstitial_shouldConnectListenerToBroadcastReceiver() throws E
 
         Intent intent =
                 getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialShown();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_CLICK, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialClicked();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialDismissed();
     }
@@ -124,12 +124,12 @@ public void onInvalidate_shouldDisconnectListenerToBroadcastReceiver() throws Ex
 
         Intent intent;
         intent = new Intent(ACTION_INTERSTITIAL_SHOW);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialShown();
 
         intent = new Intent(ACTION_INTERSTITIAL_DISMISS);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialDismissed();
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
index 6dc8ed9e..0d10fbaf 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
@@ -7,6 +7,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.os.Bundle;
+import android.support.v4.content.LocalBroadcastManager;
 import android.widget.ImageButton;
 
 import com.mopub.common.test.support.SdkTestRunner;
@@ -23,7 +24,6 @@
 import org.robolectric.shadows.httpclient.FakeHttp;
 import org.robolectric.shadows.httpclient.RequestMatcher;
 import org.robolectric.shadows.httpclient.TestHttpResponse;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import static android.view.View.GONE;
 import static android.view.View.VISIBLE;
@@ -60,7 +60,7 @@ public boolean matches(HttpRequest request) {
             }
         }, new TestHttpResponse(200, "body"));
 
-        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
+        LocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
                 new EventForwardingBroadcastReceiver(null, 0).getIntentFilter());
     }
 
@@ -70,7 +70,7 @@ public void tearDown() throws Exception {
         Robolectric.getBackgroundThreadScheduler().reset();
         FakeHttp.clearPendingHttpResponses();
 
-        ShadowLocalBroadcastManager.getInstance(context).unregisterReceiver(broadcastReceiver);
+        LocalBroadcastManager.getInstance(context).unregisterReceiver(broadcastReceiver);
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/RewardedMraidInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/RewardedMraidInterstitialTest.java
index 0c00f6ef..33cb4989 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/RewardedMraidInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/RewardedMraidInterstitialTest.java
@@ -6,6 +6,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.support.v4.content.LocalBroadcastManager;
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.ResponseBodyInterstitialTest;
@@ -17,7 +18,6 @@
 import org.robolectric.Robolectric;
 import org.robolectric.Shadows;
 import org.robolectric.shadows.ShadowActivity;
-import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -97,23 +97,23 @@ public void loadInterstitial_shouldConnectListenerToBroadcastReceiver() throws E
 
         Intent intent =
                 getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialShown();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_CLICK, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialClicked();
 
         intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onInterstitialDismissed();
 
         intent = getIntentForActionAndIdentifier(ACTION_REWARDED_PLAYABLE_COMPLETE,
                 broadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener).onMraidComplete();
     }
@@ -145,17 +145,17 @@ public void onInvalidate_shouldDisconnectListenerToBroadcastReceiver() throws Ex
 
         Intent intent;
         intent = new Intent(ACTION_INTERSTITIAL_SHOW);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialShown();
 
         intent = new Intent(ACTION_INTERSTITIAL_DISMISS);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onInterstitialDismissed();
 
         intent = new Intent(ACTION_REWARDED_PLAYABLE_COMPLETE);
-        ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
+        LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
         verify(customEventInterstitialListener, never()).onMraidComplete();
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
index 9c4001ab..841071c7 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdTest.java
@@ -10,6 +10,10 @@
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.nativeads.BaseNativeAd.NativeEventListener;
+import com.mopub.network.AdResponse;
+import com.mopub.network.ImpressionData;
+import com.mopub.network.ImpressionListener;
+import com.mopub.network.ImpressionsEmitter;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.Networking;
 
@@ -48,6 +52,7 @@
     @Mock private MoPubRequestQueue mockRequestQueue;
     @Mock private MoPubNativeEventListener mockEventListener;
     @Mock private BaseNativeAd mockBaseNativeAd;
+    @Mock private ImpressionData mockImpressionData;
 
     @Before
     public void setUp() {
@@ -182,6 +187,28 @@ public void recordImpression_whenDestroyed_shouldReturnFast() {
         verifyZeroInteractions(mockEventListener);
     }
 
+    @Test
+    public void recordImpression_shouldCallImpressionCallback() {
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+
+        subject.recordImpression(mockView);
+
+        verify(listener).onImpression("adunit_id", null);
+    }
+
+    @Test
+    public void recordImpression_whenImpressionDataPresent_shouldCallImpressionData() {
+        subject = new NativeAd(activity, mockAdResponse(), "adunit_id", mockBaseNativeAd, mockRenderer);
+
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+
+        subject.recordImpression(mockView);
+
+        verify(listener).onImpression("adunit_id", mockImpressionData);
+    }
+
     @Test
     public void handleClick_shouldTrackClicksOnce() {
         subject.handleClick(mockView);
@@ -205,4 +232,13 @@ public void handleClick_whenDestroyed_shouldReturnFast() {
         verifyZeroInteractions(mockRequestQueue);
         verifyZeroInteractions(mockEventListener);
     }
+
+    private AdResponse mockAdResponse() {
+        AdResponse response = mock(AdResponse.class);
+        when(response.getClickTrackingUrl()).thenReturn("moPubClickTrackerUrl");
+        when(response.getImpressionTrackingUrls())
+                .thenReturn(Arrays.asList("moPubImpressionTrackerUrl1", "moPubImpressionTrackerUrl2"));
+        when(response.getImpressionData()).thenReturn(mockImpressionData);
+        return response;
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
index f4516fd4..a70c0182 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
@@ -6,6 +6,8 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
 import android.content.res.Resources;
 import android.graphics.Point;
 import android.location.Location;
@@ -19,6 +21,8 @@
 import android.view.Display;
 import android.view.WindowManager;
 
+import com.mopub.common.AppEngineInfo;
+import com.mopub.common.BaseUrlGenerator;
 import com.mopub.common.LocationService;
 import com.mopub.common.MoPub;
 import com.mopub.common.privacy.ConsentStatus;
@@ -51,7 +55,9 @@
 import static android.Manifest.permission.ACCESS_FINE_LOCATION;
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
+import static org.junit.Assert.assertEquals;
 import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyInt;
 import static org.mockito.Mockito.doAnswer;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.spy;
@@ -61,8 +67,11 @@
 @Config(shadows = {MoPubShadowTelephonyManager.class, MoPubShadowConnectivityManager.class})
 public class NativeUrlGeneratorTest {
     private static final String AD_UNIT_ID = "1234";
+    private static final String TEST_BUNDLE = "test.bundle";
     private static final int TEST_SCREEN_WIDTH = 320;
     private static final int TEST_SCREEN_HEIGHT = 470;
+    private static final int TEST_SCREEN_SAFE_WIDTH = 0;
+    private static final int TEST_SCREEN_SAFE_HEIGHT = 0;
     private static final float TEST_DENSITY = 1.0f;
     private Activity context;
     private NativeUrlGenerator subject;
@@ -75,7 +84,7 @@ public void setup() throws Exception {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
         Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
-        when(context.getPackageName()).thenReturn("testBundle");
+        when(context.getPackageName()).thenReturn(TEST_BUNDLE);
         shadowTelephonyManager = (MoPubShadowTelephonyManager)
                 Shadows.shadowOf((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE));
         shadowConnectivityManager = (MoPubShadowConnectivityManager)
@@ -93,6 +102,14 @@ public void setup() throws Exception {
         when(spyResources.getDisplayMetrics()).thenReturn(mockDisplayMetrics);
         when(context.getResources()).thenReturn(spyResources);
 
+        final Context spyApplicationContext = spy(context.getApplicationContext());
+        when(spyApplicationContext.getPackageName()).thenReturn(TEST_BUNDLE);
+        PackageManager mockPackageManager = mock(PackageManager.class);
+        PackageInfo mockPackageInfo = mock(PackageInfo.class);
+        mockPackageInfo.versionName = BuildConfig.VERSION_NAME;
+        when(mockPackageManager.getPackageInfo(any(String.class), anyInt())).thenReturn(mockPackageInfo);
+        when(spyApplicationContext.getPackageManager()).thenReturn(mockPackageManager);
+
         // Only do this on Android 17+ because getRealSize doesn't exist before then.
         // This is the default pathway.
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
@@ -108,7 +125,6 @@ public Object answer(final InvocationOnMock invocationOnMock) {
                 }
             }).when(mockDisplay).getRealSize(any(Point.class));
             when(mockWindowManager.getDefaultDisplay()).thenReturn(mockDisplay);
-            final Context spyApplicationContext = spy(context.getApplicationContext());
             when(spyApplicationContext.getSystemService(Context.WINDOW_SERVICE)).thenReturn(mockWindowManager);
             when(context.getApplicationContext()).thenReturn(spyApplicationContext);
         }
@@ -131,6 +147,7 @@ public void tearDown() throws Exception {
                 .setStatic(MoPub.class)
                 .setAccessible()
                 .execute();
+        BaseUrlGenerator.setAppEngineInfo(null);
     }
 
     @Test
@@ -434,9 +451,13 @@ public void generateUrlString_withOnlyAdUnitSet_shouldReturnMinimumUrl() {
                         AD_UNIT_ID +
                         "&nv=" + Uri.encode(MoPub.SDK_VERSION) +
                         "&dn=unknown%2Crobolectric%2Crobolectric" +
-                        "&bundle=com.mopub.mobileads" +
+                        "&bundle=" + TEST_BUNDLE +
                         "&z=-0700" +
                         "&o=p" +
+                        "&cw=" +
+                        TEST_SCREEN_SAFE_WIDTH +
+                        "&ch=" +
+                        TEST_SCREEN_SAFE_HEIGHT +
                         "&w=" +
                         TEST_SCREEN_WIDTH +
                         "&h=" +
@@ -445,6 +466,7 @@ public void generateUrlString_withOnlyAdUnitSet_shouldReturnMinimumUrl() {
                         TEST_DENSITY +
                         "&ct=3&av=" + Uri.encode(BuildConfig.VERSION_NAME) +
                         "&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track" +
+                        "&mid=mp_tmpl_mopub_id" +
                         "&gdpr_applies=0" +
                         "&current_consent_status=unknown");
     }
@@ -486,6 +508,25 @@ public void disableLocationCollection_whenLocationServiceHasMostRecentLocation_s
         assertThat(getParameterFromRequestUrl(requestString, "ll")).isNullOrEmpty();
     }
 
+    @Test
+    public void generateUrlString_whenEngineInfoIsNotSet_shouldIncludeEngineInfo() {
+        subject = new NativeUrlGenerator(context).withAdUnitId(AD_UNIT_ID);
+        String adUrl = generateMinimumUrlString();
+
+        assertThat(getParameterFromRequestUrl(adUrl, "e_name")).isNullOrEmpty();
+        assertThat(getParameterFromRequestUrl(adUrl, "e_ver")).isNullOrEmpty();
+    }
+
+    @Test
+    public void generateUrlString_whenEngineInfoIsSet_shouldIncludeEngineInfo() {
+        subject = new NativeUrlGenerator(context).withAdUnitId(AD_UNIT_ID);
+        MoPub.setEngineInformation(new AppEngineInfo("ename", "eversion"));
+        String adUrl = generateMinimumUrlString();
+
+        assertEquals(getParameterFromRequestUrl(adUrl, "e_name"), "ename");
+        assertEquals(getParameterFromRequestUrl(adUrl, "e_ver"), "eversion");
+    }
+
     private List<String> getDesiredAssetsListFromRequestUrlString(String requestString) {
         Uri requestUri = Uri.parse(requestString);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
index 3e83f318..2147d47a 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/HeaderUtilsTest.java
@@ -92,4 +92,16 @@ public void extractPercentHeader_shouldReturnPercentValue() throws JSONException
         subject.put(ResponseHeader.HEIGHT.getKey(), "a%");
         assertThat(HeaderUtils.extractPercentHeader(subject, ResponseHeader.HEIGHT)).isNull();
     }
+
+    @Test
+    public void extractJsonObjectHeader_shouldReturnJsonObject() throws JSONException {
+        JSONObject testObject = new JSONObject();
+
+        subject.put(ResponseHeader.IMPRESSION_DATA.getKey(), testObject);
+        assertThat(HeaderUtils.extractJsonObjectHeader(subject, ResponseHeader.IMPRESSION_DATA)).isEqualTo(testObject);
+        assertThat(HeaderUtils.extractJsonObjectHeader(null, ResponseHeader.IMPRESSION_DATA)).isNull();
+
+        subject.remove(ResponseHeader.IMPRESSION_DATA.getKey());
+        assertThat(HeaderUtils.extractJsonObjectHeader(subject, ResponseHeader.IMPRESSION_DATA)).isNull();
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java b/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java
new file mode 100644
index 00000000..ca01cca0
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/ImpressionDataTest.java
@@ -0,0 +1,140 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.apache.commons.lang3.SerializationUtils;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+
+@RunWith(SdkTestRunner.class)
+public class ImpressionDataTest {
+
+    private ImpressionData subject;
+
+    @Before
+    public void setup() throws JSONException {
+        JSONObject json = new JSONObject(SAMPLE_JSON);
+        subject = ImpressionData.create(json);
+    }
+
+    @Test
+    public void create_withNullJson_shouldReturnNull() {
+        assertNull(ImpressionData.create(null));
+    }
+
+    @Test
+    public void create_withValidJson_shouldReturnValidImpressionData() {
+        assertTrue(equalsToSampleData(subject));
+    }
+
+    @Test
+    public void create_withEmptyJson_shouldReturnValidImpressiondata() {
+        subject = ImpressionData.create(new JSONObject());
+
+        assertNotNull(subject);
+        assertNull(subject.getImpressionId());
+        assertNull(subject.getAdUnitId());
+        assertNull(subject.getAdUnitName());
+        assertNull(subject.getAdUnitFormat());
+        assertNull(subject.getAdGroupId());
+        assertNull(subject.getAdGroupName());
+        assertNull(subject.getAdGroupType());
+        assertNull(subject.getAdGroupPriority());
+        assertNull(subject.getCurrency());
+        assertNull(subject.getCountry());
+        assertNull(subject.getNetworkName());
+        assertNull(subject.getNetworkPlacementId());
+        assertNull(subject.getPublisherRevenue());
+        assertNull(subject.getPrecision());
+        JSONObject jsonObject = subject.getJsonRepresentation();
+        assertFalse(jsonObject.keys().hasNext());
+    }
+
+    @Test
+    public void serialize_desirialize_shouldReturnObjectCopy() {
+        ImpressionData copy = SerializationUtils.clone(subject);
+        equalsToSampleData(copy);
+    }
+
+    @Test
+    public void serialize_deserialize_withUnicodeChars_shouldReturnValidImpressionData() throws JSONException {
+        JSONObject jsonObject = new JSONObject(SAMPLE_JSON);
+        jsonObject.put("country", "Россия");
+        subject = ImpressionData.create(jsonObject);
+        ImpressionData copy = SerializationUtils.clone(subject);
+        assert copy != null;
+        compareObjects(subject, copy);
+    }
+
+    private final String SAMPLE_JSON = "{\n" +
+            "                \"id\": \"test_ID\",\n" +
+            "                \"adunit_id\": \"test_adunit_id\",\n" +
+            "                \"adunit_name\": \"test_adunit_name\",\n" +
+            "                \"adunit_format\": \"test_adunit_format\",\n" +
+            "                \"adgroup_id\": \"test_adgroup_id\",\n" +
+            "                \"adgroup_name\": \"test_adgroup_name\",\n" +
+            "                \"adgroup_type\": \"test_adgroup_type\",\n" +
+            "                \"adgroup_priority\": 9876,\n" +
+            "                \"currency\": \"test_currency\",\n" +
+            "                \"country\": \"test_country\",\n" +
+            "                \"network_name\": \"test_network_name\",\n" +
+            "                \"network_placement_id\": \"test_network_placement_id\",\n" +
+            "                \"publisher_revenue\": 6789,\n" +
+            "                \"precision\": \"test_precision\"\n" +
+            "            }";
+
+    private static boolean equalsToSampleData(ImpressionData data) {
+        assertEquals("test_ID", data.getImpressionId());
+        assertEquals("test_adunit_id", data.getAdUnitId());
+        assertEquals("test_adunit_name", data.getAdUnitName());
+        assertEquals("test_adunit_format", data.getAdUnitFormat());
+        assertEquals("test_adgroup_id", data.getAdGroupId());
+        assertEquals("test_adgroup_name", data.getAdGroupName());
+        assertEquals("test_adgroup_type", data.getAdGroupType());
+        assertEquals(9876, data.getAdGroupPriority().intValue());
+        assertEquals("test_currency", data.getCurrency());
+        assertEquals("test_country", data.getCountry());
+        assertEquals("test_network_name", data.getNetworkName());
+        assertEquals("test_network_placement_id", data.getNetworkPlacementId());
+        assertEquals(6789d, data.getPublisherRevenue(), 0.001);
+        assertEquals("test_precision", data.getPrecision());
+
+        JSONObject json = data.getJsonRepresentation();
+
+        assertEquals("test_ID", json.optString("id"));
+        assertEquals("test_adunit_id", json.optString("adunit_id"));
+        assertEquals("test_adunit_name", json.optString("adunit_name"));
+        assertEquals("test_adunit_format", json.optString("adunit_format"));
+        assertEquals("test_adgroup_id", json.optString("adgroup_id"));
+        assertEquals("test_adgroup_name", json.optString("adgroup_name"));
+        assertEquals("test_adgroup_type", json.optString("adgroup_type"));
+        assertEquals(9876, json.optInt("adgroup_priority"));
+        assertEquals("test_currency", json.optString("currency"));
+        assertEquals("test_country", json.optString("country"));
+        assertEquals("test_network_name", json.optString("network_name"));
+        assertEquals("test_network_placement_id", json.optString("network_placement_id"));
+        assertEquals(6789, json.optDouble("publisher_revenue"), 0.001);
+        assertEquals("test_precision", json.optString("precision"));
+
+        return true;
+    }
+
+    private static void compareObjects(ImpressionData o1, ImpressionData o2) {
+        JSONObject j1 = o1.getJsonRepresentation();
+        JSONObject j2 = o2.getJsonRepresentation();
+        assertEquals(j1.toString(), j2.toString());
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java b/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java
new file mode 100644
index 00000000..c937bea8
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/ImpressionEmitterTest.java
@@ -0,0 +1,179 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.After;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+
+@RunWith(SdkTestRunner.class)
+public class ImpressionEmitterTest {
+
+    private static final String mAdUnitId = "ad_unit_id";
+
+    @Mock
+    ImpressionListener listener1;
+    @Mock
+    ImpressionListener listener2;
+    @Mock
+    ImpressionData impression;
+
+    @After
+    public void tearDown() {
+        ImpressionsEmitter.clear();
+    }
+
+    @Test
+    public void send_oneListener_shouldCallListener() {
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+        verify(listener1).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_twoListeners_shouldCallBoth() {
+        ImpressionsEmitter.addListener(listener1);
+        ImpressionsEmitter.addListener(listener2);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1).onImpression(mAdUnitId, impression);
+        verify(listener2).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_removeListener_shouldNotCallAfterRemove() {
+        ImpressionListener l1 = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(l1);
+        ImpressionsEmitter.addListener(listener2);
+        ImpressionsEmitter.removeListener(l1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(l1, never()).onImpression(anyString(), any(ImpressionData.class));
+        verify(listener2).onImpression(mAdUnitId, impression);
+    }
+
+    @Test
+    public void send_addListenerTwice_shouldMakeSingleCallback() {
+        ImpressionsEmitter.addListener(listener1);
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1, times(1)).onImpression(mAdUnitId, impression);
+
+        ImpressionsEmitter.removeListener(listener1);
+        Mockito.reset(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, impression);
+
+        verify(listener1, never()).onImpression(anyString(), any(ImpressionData.class));
+    }
+
+    @Test
+    public void send_nullImpressionData_shouldCallListener() {
+        ImpressionsEmitter.addListener(listener1);
+
+        ImpressionsEmitter.send(mAdUnitId, null);
+
+        verify(listener1).onImpression(mAdUnitId, null);
+    }
+
+    @Test
+    public void multithreading_shouldNotCrash() {
+        final int THREAD_COUNT = 10;
+        Thread[] testThreads = new Thread[THREAD_COUNT];
+        for (int i = 0; i < THREAD_COUNT; i++) {
+            testThreads[i] = createTestThread();
+        }
+        for (int i = 0; i < THREAD_COUNT; i++) {
+            testThreads[i].start();
+        }
+
+        for (Thread thread : testThreads) {
+            try {
+                thread.join();
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    @Test
+    public void removeListener_whileEmitterIsBusy_shouldNotWaitForEmitter() throws InterruptedException {
+        ImpressionListener listener = createDelayedListener();
+        ImpressionsEmitter.addListener(listener);
+
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                ImpressionsEmitter.send(mAdUnitId, impression);
+            }
+        }).start();
+        Thread.sleep(100);
+
+        long t1 = System.currentTimeMillis();
+        ImpressionsEmitter.removeListener(listener);
+        long t2 = System.currentTimeMillis();
+
+        assertTrue(t2 - t1 < 100);
+    }
+
+    /*
+    Unit test utility functions
+     */
+    private Thread createTestThread() {
+
+        return new Thread(new Runnable() {
+            @Override
+            public void run() {
+                final int SIZE = 100;
+                ImpressionListener[] listeners = new ImpressionListener[SIZE];
+                for (int i = 0; i < SIZE; i++) {
+                    listeners[i] = mock(ImpressionListener.class);
+                    ImpressionsEmitter.addListener(listeners[i]);
+                }
+
+                for (int i = 0; i < 150; i++) {
+                    ImpressionsEmitter.send(mAdUnitId, mock(ImpressionData.class));
+                }
+
+                for (int i = 0; i < SIZE; i++) {
+                    ImpressionsEmitter.removeListener(listeners[i]);
+                }
+            }
+        });
+    }
+
+    private ImpressionListener createDelayedListener() {
+        return new ImpressionListener() {
+            @Override
+            public void onImpression(@NonNull String adUnitId, @Nullable ImpressionData impressionData) {
+                try {
+                    Thread.sleep(1000);
+                } catch (InterruptedException e) {
+                    e.printStackTrace();
+                }
+            }
+        };
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java b/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
index 8270b4db..16772416 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/MultiAdResponseTest.java
@@ -240,6 +240,20 @@ public void constructor_withReaquireConsentSet_shouldCallListener() throws Excep
         verify(mockOverrideListener).onReacquireConsent("change_reason");
     }
 
+    @Test
+    public void constructor_withServerOverrideListener_shouldCallOnRequestSuccess() throws Exception {
+        final ServerOverrideListener mockOverrideListener = mock(ServerOverrideListener.class);
+        MultiAdResponse.setServerOverrideListener(mockOverrideListener);
+
+        final JSONObject jsonObject = createJsonBody(FAIL_URL, singleAdResponse);
+
+        final byte[] body = jsonObject.toString().getBytes();
+        final NetworkResponse testResponse = new NetworkResponse(body);
+        new MultiAdResponse(activity, testResponse, AdFormat.BANNER, adUnitId);
+
+        verify(mockOverrideListener).onRequestSuccess(adUnitId);
+    }
+
     @Test(expected = JSONException.class)
     public void constructor_NonJsonBodyShouldThrowException() throws Exception {
         NetworkResponse testResponse = new NetworkResponse("abc".getBytes());
@@ -588,6 +602,42 @@ public void parseNetworkResponse_forBanner_withImpTrackingHeaders_shouldSucceed(
         assertThat(serverExtras.get(DataKeys.HTML_RESPONSE_BODY_KEY)).isEqualToIgnoringCase("content_text");
         assertThat(serverExtras.get(DataKeys.BANNER_IMPRESSION_MIN_VISIBLE_DIPS)).isEqualTo("1");
         assertThat(serverExtras.get(DataKeys.BANNER_IMPRESSION_MIN_VISIBLE_MS)).isEqualTo("2");
+        assertThat(subject.getImpressionData()).isNull();
+    }
+
+    @Test
+    public void parseNetworkResponse_forBanner_withImpressionData_shouldSucceed() throws MoPubNetworkError, JSONException {
+        // add impression data
+        JSONObject metadata = (JSONObject) singleAdResponse.get(ResponseHeader.METADATA.getKey());
+        JSONObject impJson = createImpressionData();
+        metadata.put(ResponseHeader.IMPRESSION_DATA.getKey(), impJson);
+        NetworkResponse networkResponse = new NetworkResponse(singleAdResponse.toString().getBytes());
+
+        AdResponse subject = MultiAdResponse.parseSingleAdResponse(activity.getApplicationContext(),
+                networkResponse,
+                singleAdResponse,
+                adUnitId,
+                AdFormat.BANNER,
+                REQUEST_ID_VALUE);
+
+        assertThat(subject.getAdType()).isEqualTo(AdType.HTML);
+        assertThat(subject.getAdUnitId()).isEqualTo(adUnitId);
+        ImpressionData impressionData = subject.getImpressionData();
+        assert (impressionData != null);
+        assertThat(impressionData.getImpressionId()).isEqualTo(impJson.getString("id"));
+        assertThat(impressionData.getAdUnitId()).isEqualTo(impJson.getString("adunit_id"));
+        assertThat(impressionData.getAdUnitName()).isEqualTo(impJson.getString("adunit_name"));
+        assertThat(impressionData.getAdUnitFormat()).isEqualTo(impJson.getString("adunit_format"));
+        assertThat(impressionData.getAdGroupId()).isEqualTo(impJson.getString("adgroup_id"));
+        assertThat(impressionData.getAdGroupName()).isEqualTo(impJson.getString("adgroup_name"));
+        assertThat(impressionData.getAdGroupType()).isEqualTo(impJson.getString("adgroup_type"));
+        assertThat(impressionData.getAdGroupPriority()).isEqualTo(impJson.getInt("adgroup_priority"));
+        assertThat(impressionData.getCurrency()).isEqualTo(impJson.getString("currency"));
+        assertThat(impressionData.getCountry()).isEqualTo(impJson.getString("country"));
+        assertThat(impressionData.getNetworkName()).isEqualTo(impJson.getString("network_name"));
+        assertThat(impressionData.getNetworkPlacementId()).isEqualTo(impJson.getString("network_placement_id"));
+        assertThat(impressionData.getPublisherRevenue()).isEqualTo(impJson.getDouble("publisher_revenue"));
+        assertThat(impressionData.getPrecision()).isEqualTo(impJson.getString("precision"));
     }
 
     @Test
@@ -1109,6 +1159,26 @@ private static JSONObject createWarmupAdResponse() throws JSONException {
         return jsonObject;
     }
 
+    private static JSONObject createImpressionData() throws JSONException {
+        String jsonString = "{\n" +
+                        "          \"id\": \"impid\",\n" +
+                        "          \"adunit_id\": \"adunitid\",\n" +
+                        "          \"adunit_name\": \"adunitname\",\n" +
+                        "          \"adunit_format\": \"adunitformat\",\n" +
+                        "          \"adgroup_id\": \"adgroupid\",\n" +
+                        "          \"adgroup_name\": \"adgroupname\",\n" +
+                        "          \"adgroup_type\": \"adgrouptype\",\n" +
+                        "          \"adgroup_priority\": 123,\n" +
+                        "          \"currency\": \"USD\",\n" +
+                        "          \"country\": \"USA\",\n" +
+                        "          \"network_name\": \"networkname\",\n" +
+                        "          \"network_placement_id\": \"networkplacementid\",\n" +
+                        "          \"publisher_revenue\": 0.0001,\n" +
+                        "          \"precision\": \"exact\"\n" +
+                        "     }";
+        return new JSONObject(jsonString);
+    }
+
     private static void addBackoffParameters(final JSONObject response, int time, String reason) throws JSONException {
         response.put(ResponseHeader.BACKOFF_MS.getKey(), time);
         response.put(ResponseHeader.BACKOFF_REASON.getKey(), reason);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
index 3b3a3441..aa4bea72 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
@@ -9,7 +9,6 @@
 import android.net.Uri;
 
 import com.mopub.common.ClientMetadata;
-import com.mopub.common.GpsHelper;
 import com.mopub.common.MoPub;
 import com.mopub.common.privacy.AdvertisingId;
 import com.mopub.common.privacy.MoPubIdentifier;
@@ -26,7 +25,6 @@
 import org.robolectric.Robolectric;
 
 import static org.fest.assertions.api.Assertions.assertThat;
-import static org.mockito.Matchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
 
@@ -69,10 +67,12 @@ public void rewriteUrl_shouldUseAdvertisingIdValue(){
         MoPubIdentifier identifier = ClientMetadata.getInstance().getMoPubIdentifier();
         AdvertisingId adId = identifier.getAdvertisingInfo();
         String encodedId = Uri.encode(adId.getIdWithPrefix(true));
-        String actualUrl = subject.rewriteUrl("https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track");
+        String encodedMoPubId = Uri.encode(adId.getIdentifier(false));
+        String actualUrl = subject.rewriteUrl(
+                "https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track&mid=mp_tmpl_mopub_id");
 
-        assertThat(actualUrl)
-                .isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid="+encodedId+"&dnt=0");
+        assertThat(actualUrl).isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid=" +
+                encodedId + "&dnt=0&mid=" + encodedMoPubId);
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java b/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java
new file mode 100644
index 00000000..b5d15cc0
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/network/SingleImpressionTest.java
@@ -0,0 +1,44 @@
+// Copyright 2018-2019 Twitter, Inc.
+// Licensed under the MoPub SDK License Agreement
+// http://www.mopub.com/legal/sdk-license-agreement/
+
+package com.mopub.network;
+
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyString;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.verify;
+
+@RunWith(SdkTestRunner.class)
+public class SingleImpressionTest {
+
+    @Test
+    public void sendImpression_makesCallToImpressionEmitter() {
+        ImpressionData data = mock(ImpressionData.class);
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        SingleImpression subject = new SingleImpression("ad_unit_id", data);
+
+        subject.sendImpression();
+
+        verify(listener).onImpression("ad_unit_id", data);
+    }
+
+    @Test
+    public void sendImpression_withNullAdUnitId_shouldNotCallImpressionEmitter() {
+        ImpressionData data = mock(ImpressionData.class);
+        ImpressionListener listener = mock(ImpressionListener.class);
+        ImpressionsEmitter.addListener(listener);
+        SingleImpression subject = new SingleImpression(null, data);
+
+        subject.sendImpression();
+
+        verify(listener, never()).onImpression(anyString(), any(ImpressionData.class));
+    }
+}
