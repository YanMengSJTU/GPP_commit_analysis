diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
index 13f2d614..9bc29801 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
@@ -2,10 +2,8 @@
 
 import android.app.Activity;
 import android.content.Intent;
-import android.graphics.Color;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.view.Gravity;
 import android.view.View;
 import android.view.Window;
 import android.view.WindowManager;
@@ -72,8 +70,7 @@ public void onClose() {
         mCloseableLayout.addView(adView, new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
 
         countDownTimerView = new CountDownTimerView(this);
-        LayoutParams layoutParams = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
-        mCloseableLayout.addView(countDownTimerView, layoutParams);
+        mCloseableLayout.addView(countDownTimerView, new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
 
         setContentView(mCloseableLayout);
         countDownTimerView.setTime(10000);
@@ -126,4 +123,4 @@ protected static AdReport getAdReportFromIntent(Intent intent) {
             return null;
         }
     }
-}
+}
\ No newline at end of file
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
index 0ee54d20..8c7f2b62 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
@@ -2,13 +2,14 @@
 
 import android.content.Context;
 import android.graphics.Bitmap;
+import android.graphics.Color;
 import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
-import com.mopub.common.UrlHandler;
 import com.mopub.common.UrlAction;
+import com.mopub.common.UrlHandler;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.Intents;
 import com.mopub.exceptions.IntentNotResolvableException;
@@ -40,8 +41,8 @@
     private final String mRedirectUrl;
 
     HtmlWebViewClient(HtmlWebViewListener htmlWebViewListener,
-            BaseHtmlWebView htmlWebView, String clickthrough,
-            String redirect, String dspCreativeId) {
+                      BaseHtmlWebView htmlWebView, String clickthrough,
+                      String redirect, String dspCreativeId) {
         mHtmlWebViewListener = htmlWebViewListener;
         mHtmlWebView = htmlWebView;
         mClickthroughUrl = clickthrough;
@@ -58,7 +59,7 @@ public boolean shouldOverrideUrlLoading(final WebView view, final String url) {
                 .withResultActions(new UrlHandler.ResultActions() {
                     @Override
                     public void urlHandlingSucceeded(@NonNull String url,
-                            @NonNull UrlAction urlAction) {
+                                                     @NonNull UrlAction urlAction) {
                         if (mHtmlWebView.wasClicked()) {
                             mHtmlWebViewListener.onClicked();
                             mHtmlWebView.onResetUserClick();
@@ -67,7 +68,7 @@ public void urlHandlingSucceeded(@NonNull String url,
 
                     @Override
                     public void urlHandlingFailed(@NonNull String url,
-                            @NonNull UrlAction lastFailedUrlAction) {
+                                                  @NonNull UrlAction lastFailedUrlAction) {
                     }
                 })
                 .withMoPubSchemeListener(new UrlHandler.MoPubSchemeListener() {
@@ -107,4 +108,18 @@ public void onPageStarted(WebView view, String url, Bitmap favicon) {
         }
     }
 
+    @Override
+    public void onPageFinished(final WebView view, String url) {
+        view.setBackgroundColor(Color.parseColor("#212121"));
+        /*
+        We intercept the html response here and use javascript to traverse the dom tree until
+        a img tag is found.
+        If only one image is found and the image size is greater than 100,000 pixels, we clear the height / width attributes & calculate
+        the image aspect ratio and the devices aspect ratio. We then resize the image so it fits inside the device screen while maintaining
+        its aspect ratio.
+        The images are usually 320 x 480 (3:2) and don't fill the whole screen (devices are typically 16:9).
+         */
+
+//        view.loadUrl("javascript:function setImageSize(){document.body.style.margin=\"0px\";var e=document.getElementsByTagName(\"img\");if(e){var t=e[0];var n=t.width*t.height;if(n>1e5){var r=t.width/t.height;var i=window.innerWidth/window.innerHeight;var s;var o;if(i==r){s=window.innerHeight;o=window.innerWidth}else if(i>r){s=window.innerHeight;o=t.width*(window.innerHeight/t.height)}else{s=t.height*(window.innerWidth/t.width);o=window.innerWidth}t.style.height=s+\"px\";t.style.width=o+\"px\"}}}setImageSize();");
+    }
 }
