diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
index 1d0109ba..3fc5f3e7 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
@@ -22,15 +22,11 @@
  * Controlls how ads are showed
  */
 public class Ads {
-
     private final String TAG = this.getClass().getName();
-    private final InternetObserver internetObserver;
+
     private Interstitial interstitial;
     private int numOfPlayers;
-    private boolean firstGamePlayStart;
     private int timesBlockChanged;
-    private long[] blockPlaceTimes = new long[5];
-    boolean isBuilding;
     private SharedPreferences sharedPreferences;
     private Calendar calendar;
     private static final String FIRST_RUN_DAY_KEY = "FirstRunDay";
@@ -41,15 +37,13 @@
     private static Ads instance;
 
 
-    public Ads(Interstitial interstitial, InternetObserver internetObserver, SharedPreferences sharedPreferences, Calendar calendar) {
-        this.internetObserver = internetObserver;
+    public Ads(Interstitial interstitial, SharedPreferences sharedPreferences, Calendar calendar) {
         this.interstitial = interstitial;
         this.numOfPlayers = 1;
-        this.firstGamePlayStart = true;
         this.sharedPreferences = sharedPreferences;
         this.calendar = calendar;
         if(Ads.instance == null) {
-            Ads.instance = null;
+            Ads.instance = this;
         }
 
         this.interstitial.setFreePeriod(isInFreePeriod( Data.Ads.Interstitial.freePeriodAllowed));
@@ -61,6 +55,10 @@ public static Ads getInstance() {
         return instance;
     }
 
+    public Interstitial getInterstitial(){
+        return interstitial;
+    }
+
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onAppEvent(AppEvent appEvent) {
         switch (appEvent.lifeCycle) {
@@ -107,9 +105,14 @@ public void run() {
             case StartSleepInBed:
                 interstitial.showUnityAdsVideo();
                 break;
+            case PauseScreenPushed:
+                Helper.wtf("Setting pausescreen SHowed to true");
+                interstitial.pauseScreenShowed = true;
+                break;
         }
     }
 
+
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void guideEvent(GuideGameEvent gameEvent) {
         switch (gameEvent.event) {
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
index 56b785c1..9ab9a92e 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
@@ -10,7 +10,6 @@
 import android.os.Looper;
 
 import com.mojang.base.Analytics;
-import com.mojang.base.CounterView;
 import com.mojang.base.Helper;
 import com.mojang.base.Screen;
 import com.mojang.base.json.Data;
@@ -20,6 +19,8 @@
 import com.unity3d.ads.UnityAds;
 
 import java.io.File;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
 
 /**
  * Intertitial functionality for showing ads
@@ -28,7 +29,7 @@
 
     private static final long DISABLE_SCREEN_MILLS = 4000;
     private MoPubInterstitial mopubInterstitial;
-    private final Activity activity;
+    private final Activity minecraftActivity;
 
     private final Handler mainHandler;
     private String TAG = this.getClass().getName();
@@ -44,9 +45,11 @@
     private boolean onLoadedOnce;
     private boolean periodicScheduled;
     public final Lock lock;
+    private Method nativeBackPressedMethod;
+    public boolean pauseScreenShowed;
 
     public Interstitial(final Activity activity) {
-        this.activity = activity;
+        this.minecraftActivity = activity;
         this.periodicMills = Helper.FasterAds() ? 25000 : Data.Ads.Interstitial.periodicShowMillsLow;
         this.mainHandler = new Handler(Looper.getMainLooper());
         this.lock = new Lock();
@@ -81,6 +84,32 @@ public void run() {
                 mainHandler.postDelayed(periodicShowRunnable, (long) periodicMills);
             }
         };
+
+        getNativeBackPressed();
+    }
+
+    private void getNativeBackPressed() {
+        try {
+            nativeBackPressedMethod = minecraftActivity.getClass().getMethod("callNativeBackPressed");
+            Helper.wtf("got nativeBackPressed");
+        } catch (NoSuchMethodException e) {
+            Helper.wtf("----NATIVE BACK PRESS MISSING----");
+        }
+    }
+
+    public void callNativeBackPressed() {
+        if(pauseScreenShowed) {
+            mainHandler.postDelayed(new Runnable() {
+                @Override
+                public void run() {
+                    try {
+                        Helper.wtf("called -- NativeBackPressed");
+                        nativeBackPressedMethod.invoke(minecraftActivity);
+                    } catch (InvocationTargetException e) {e.printStackTrace();} catch (IllegalAccessException e) {e.printStackTrace();}
+                    pauseScreenShowed = false;
+                }
+            }, 2000);
+        }
     }
 
 
@@ -89,6 +118,9 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
         Helper.wtf("onInterstitialDismissed");
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
         loadAfterDelay(3000);
+
+        callNativeBackPressed();
+
     }
 
     @Override
@@ -130,7 +162,7 @@ public void onInterstitialShown(MoPubInterstitial interstitial) {
     @Override
     public void onInterstitialClicked(MoPubInterstitial interstitial) {
         Helper.wtf("onInterstitialClicked");
-        disableTouch(Data.Ads.Interstitial.disableTouchChance);
+        disableTouch(minecraftActivity,Data.Ads.Interstitial.disableTouchChance);
     }
 
     public boolean show() {
@@ -174,8 +206,8 @@ public void init(final boolean fromOnlineAccepted) {
         if (!fromOnlineAccepted && !fastAdUsed && Data.hasMinecraft) {
             Helper.wtf(TAG, "Interstitial init load fast ad");
             fastAdUsed = true;
-            fastAd = new FastAd(Data.Ads.Interstitial.failoverId);
-            fastAd.load(activity, new Runnable() {
+            fastAd = new FastAd(Data.Ads.Interstitial.failoverId, this);
+            fastAd.load(minecraftActivity, new Runnable() {
                 @Override
                 public void run() {
                     _initDelayed();
@@ -206,7 +238,7 @@ public void showUnityAdsVideo() {
                 Helper.wtf(TAG, "showUnityAdsVideo: show false");
                 show();
             } else {
-                UnityAds.show(activity);
+                UnityAds.show(minecraftActivity);
             }
         } else {
             Helper.wtf(TAG, "showUnityAdsVideo: show false multiplayer locked");
@@ -241,7 +273,7 @@ private void _initDelayed() {
             public void run() {
                 if (fastAd != null) fastAd = null;
                 if (mopubInterstitial == null) {
-                    mopubInterstitial = new MoPubInterstitial(activity, Data.Ads.Interstitial.id);
+                    mopubInterstitial = new MoPubInterstitial(minecraftActivity, Data.Ads.Interstitial.id);
                     mopubInterstitial.setInterstitialAdListener(Interstitial.this);
                     mopubInterstitial.setKeywords("game,minecraft,business,twitter");
                     mopubInterstitial.load();
@@ -253,7 +285,7 @@ public void run() {
                     UnityAds.setDebugMode(Helper.DEBUG);
                     UnityAds.setDebugMode(Helper.DEBUG); //todo dont forget this unity id 69633 crafting g4
                     Helper.wtf("Initing Unity ads");
-                    UnityAds.initialize(activity, Helper.convertString("4E6A6B324D7A4D3D"), null);
+                    UnityAds.initialize(minecraftActivity, Helper.convertString("4E6A6B324D7A4D3D"), null);
                 }
             }
         }, 4000);
@@ -268,7 +300,7 @@ private void lockOutSE(String countryCode) {
         Helper.createFileIfDoesntExist(externalStorage + File.separator + "SE");
         Helper.wtf("Crating SE file");
         //clear firewall result so he can go through check again
-        SharedPreferences LromSP = activity.getApplicationContext().getSharedPreferences("vic", Context.MODE_PRIVATE);
+        SharedPreferences LromSP = minecraftActivity.getApplicationContext().getSharedPreferences("vic", Context.MODE_PRIVATE);
         LromSP.edit().clear().commit();
         //sendAnalitics
         Analytics.sendOther("SECreated", countryCode);
@@ -297,9 +329,9 @@ private void gapLockForTime(long minimalAdGapMills) {
         mainHandler.postDelayed(gapUnlockRunnable, minimalAdGapMills);
     }
 
-    public static void disableTouch(double disableTouchChance) {
+    public void disableTouch(Activity activity,double disableTouchChance) {
         if (Helper.chance(disableTouchChance) && Data.hasMinecraft) {
-            Screen.instance.disableTouch(DISABLE_SCREEN_MILLS);
+            Screen.instance.disableTouch(activity,DISABLE_SCREEN_MILLS);
         }
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index c0796610..2a3067bc 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -10,6 +10,8 @@
 import android.app.Activity;
 import android.content.Context;
 import android.util.Log;
+
+import com.applovin.adview.AppLovinInterstitialActivity;
 import com.applovin.adview.AppLovinInterstitialAd;
 import com.applovin.adview.AppLovinInterstitialAdDialog;
 import com.applovin.sdk.*;
@@ -103,7 +105,8 @@ protected boolean usesProxy() {
     @Override
     public void onInvalidate()
     {
-
+        parentActivity = null;
+        AppLovinInterstitialActivity.lastKnownWrapper = null;
     }
 
     @Override
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
index ab62765c..8c495964 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -16,12 +16,14 @@
 import com.mojang.base.Helper;
 import com.mojang.base.events.AppEvent;
 import com.mojang.base.json.Data;
+import com.mopub.ads.Ads;
 import com.mopub.ads.Interstitial;
 import com.mopub.ads.Proxy;
 
 
 public class FastAd {
     private final String admobId;
+    private final Interstitial interstitial;
     private InterstitialAd mGoogleInterstitialAd;
     private Activity activity;
     public boolean showed;
@@ -31,8 +33,9 @@
     private AppLovinAd loadedApplovinAd;
 
 
-    public FastAd(String admobId) {
+    public FastAd(String admobId, Interstitial interstitial) {
         this.admobId = admobId;
+        this.interstitial = interstitial;
     }
 
     public void load(final Context context, final Runnable initMopubRunnable) {
@@ -80,6 +83,7 @@ private void loadAdmob() {
             public void onAdClosed() {
                 super.onAdClosed();
                 initMopubRunnable.run();
+                interstitial.callNativeBackPressed();
             }
 
             @Override
@@ -92,7 +96,7 @@ public void onAdFailedToLoad(int i) {
             public void onAdLeftApplication() {
                 super.onAdLeftApplication();
                 GooglePlayServicesInterstitial.registerAdmobClick(activity);
-                Interstitial.disableTouch(Data.Ads.Interstitial.disableTouchChance);
+                Ads.getInstance().getInterstitial().disableTouch(activity,Data.Ads.Interstitial.disableTouchChance);
             }
         });
 
@@ -122,6 +126,7 @@ public void adDisplayed(AppLovinAd appLovinAd) {
                         public void adHidden(AppLovinAd appLovinAd) {
                             Helper.wtf("Fast Ads applovin hidden init mopub");
                             initMopubRunnable.run();
+                            interstitial.callNativeBackPressed();
                         }
                     });
                     adDialog.showAndRender(loadedApplovinAd);
diff --git a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java b/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
index 79d32f99..1f6c4445 100644
--- a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
@@ -35,7 +35,7 @@
     @Before
     public void setUp() throws Exception {
         SharedPreferences sharedPreferences = RuntimeEnvironment.application.getSharedPreferences("TEST", Context.MODE_PRIVATE);
-        subject = new Ads(interstitialMock,null, sharedPreferences,calendarMock,false);
+        subject = new Ads(interstitialMock, sharedPreferences,calendarMock);
 
         when(calendarMock.get(subject.measureUnit)).thenReturn(0);
     }
