diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
index ec4866a4..a8a4413f 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Ads.java
@@ -79,13 +79,17 @@ public void onGameEvent(MinecraftGameEvent gameEvent) {
                 if (numOfPlayers == 1) interstitial.lock.unlockMultiplayer();
                 break;
             case GamePlayStart:
-                interstitial.showFastDelayed(3000);
                 interstitial.lock.gameUnlock();
+                interstitial.showFastDelayed(1800);
                 interstitial.schedulePeriodicShows();
                 break;
             case LeaveLevel:
-                interstitial.showDelayed(1200);
-                interstitial.lock.gameLock();
+                interstitial.showDelayed(1200, new Runnable() {
+                    @Override
+                    public void run() {
+                        interstitial.lock.gameLock();
+                    }
+                });
                 break;
             case StartSleepInBed:
                 interstitial.showUnityAdsVideo();
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
index 10e6bc6c..79c8384c 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/Interstitial.java
@@ -152,6 +152,7 @@ public void onInterstitialClicked(MoPubInterstitial interstitial) {
     }
 
     public boolean show() {
+            Helper.wtf("show");
             if (mopubInterstitial == null || lock.isLocked() || !mopubInterstitial.isReady() || freePeriod || !mopubInterstitial.show()) { //show has to be last
                 Log.e(TAG, "show Failed: null ready locked ");
                 return false;
@@ -163,6 +164,17 @@ public void showDelayed(int mills) {
         mainHandler.postDelayed(showRunnable, mills);
     }
 
+    public void showDelayed(int mills, final Runnable runnable) {
+        mainHandler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                showRunnable.run();
+                runnable.run();
+            }
+        },mills);
+    }
+
+
     public void destroy() {
         if (mopubInterstitial != null) {
             mopubInterstitial.destroy();
@@ -190,7 +202,9 @@ public void showFastDelayed(int mills) {
         mainHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                if (lock.isLocked() || fastAd == null || !fastAd.show()) {
+                if(mopubInterstitial != null){
+                    show();
+                }else if (lock.isLocked() || fastAd == null || !fastAd.show()) {
                     _initDelayed();
                 }
             }
@@ -228,6 +242,7 @@ public void unschedulePeriodicShows() {
     }
 
 
+
     private void _initDelayed() {
         mainHandler.postDelayed(new Runnable() {
             @Override
@@ -343,7 +358,7 @@ private void loadAfterDelay(long delay) {
         private boolean game;
 
         public boolean isLocked() {
-            Log.e(TAG, "isLocked: " +
+            Helper.wtf("isLocked: " +
                     "multiplayer [" + multiplayer + "]" + " " +
                     "internet [" + internet + "]" + " " +
                     "gap [" + gap + "]" + " " +
@@ -354,53 +369,53 @@ public boolean isLocked() {
 
 
         public void unlockStop() {
-            Log.e(TAG, "unlockStop: ");
+            Helper.wtf("unlockStop: ");
             stop = false;
         }
 
         public void stopLock() {
-            Log.e(TAG, "stopLock: ");
+            Helper.wtf("stopLock: ");
             stop = true;
         }
 
 
         public void unlockGap() {
-            Log.e(TAG, "unlockGap: ");
+            Helper.wtf("unlockGap: ");
             gap = false;
         }
 
         public void gapLock() {
-            Log.e(TAG, "gapLock: ");
+            Helper.wtf("gapLock: ");
             gap = true;
         }
 
         public void lockMultiplayer() {
-            Log.e(TAG, "lockMultiplayer: ");
+            Helper.wtf("lockMultiplayer: ");
             multiplayer = true;
         }
 
         public void unlockMultiplayer() {
-            Log.e(TAG, "unlockMultiplayer: ");
+            Helper.wtf("unlockMultiplayer: ");
             multiplayer = false;
         }
 
         public void gameUnlock() {
-            Log.e(TAG, "gameUnlock: ");
+            Helper.wtf("gameUnlock: ");
             game = false;
         }
 
         public void gameLock() {
-            Log.e(TAG, "gameLock: ");
+            Helper.wtf("gameLock: ");
             game = true;
         }
 
         public void internetLock() {
-            Log.e(TAG, "internetLock: ");
+            Helper.wtf("internetLock: ");
             internet = true;
         }
 
         public void internetUnlock() {
-            Log.e(TAG, "internetUnlock: ");
+            Helper.wtf("internetUnlock: ");
             internet = false;
         }
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
index dbd22645..9ee57b09 100644
--- a/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -15,6 +15,7 @@
     private final String admobId;
     private InterstitialAd mGoogleInterstitialAd;
     private Context context;
+    public boolean showed;
 
     public FastAd(String admobId) {
         this.admobId = admobId;
@@ -44,7 +45,7 @@ public void onAdClosed() {
 
     public boolean show(){
         Log.w("FastAd", "show() called with: FastAd");
-
+        showed = true;
         if(!mGoogleInterstitialAd.isLoaded()){
             mGoogleInterstitialAd = null;
             return false;
