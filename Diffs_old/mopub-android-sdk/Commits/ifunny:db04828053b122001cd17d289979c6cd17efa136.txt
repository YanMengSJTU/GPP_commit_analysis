diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index 060ac4a9..93504a59 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -1,80 +1,80 @@
 apply plugin: 'com.android.library'
 
 repositories {
-    mavenCentral()
-    jcenter()
-    flatDir {
-        dirs project(':mopub-sdk').file('../libs')
-    }
+	mavenCentral()
+	jcenter()
+	flatDir {
+		dirs project(':mopub-sdk').file('../libs')
+	}
 }
 
 project.group = 'com.mopub'
 project.version = '4.10.0'
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion '24.0.1'
-    lintOptions { abortOnError false }
-    useLibrary 'org.apache.http.legacy'
+	compileSdkVersion 24
+	buildToolsVersion '24.0.3'
+	lintOptions { abortOnError false }
+	useLibrary 'org.apache.http.legacy'
 
-    defaultConfig {
-        versionCode 47
-        versionName version
-        minSdkVersion 9
-        targetSdkVersion 23
-        consumerProguardFiles '../proguard.txt'
+	defaultConfig {
+		versionCode 47
+		versionName version
+		minSdkVersion 9
+		targetSdkVersion 24
+		consumerProguardFiles '../proguard.txt'
 
-    }
+	}
 
-    sourceSets {
-        main {
-            manifest.srcFile 'src/main/AndroidManifest.xml'
-            java.srcDirs = ['src/main/java']
-            resources.srcDirs = ['src/main/resources']
-            aidl.srcDirs = ['src/main']
-            renderscript.srcDirs = ['src/main']
-            res.srcDirs = ['res']
-            assets.srcDirs = ['assets']
-        }
-    }
+	sourceSets {
+		main {
+			manifest.srcFile 'src/main/AndroidManifest.xml'
+			java.srcDirs = ['src/main/java']
+			resources.srcDirs = ['src/main/resources']
+			aidl.srcDirs = ['src/main']
+			renderscript.srcDirs = ['src/main']
+			res.srcDirs = ['res']
+			assets.srcDirs = ['assets']
+		}
+	}
 
-    testOptions {
-        unitTests {
-            // This causes android platform methods from the test JAR
-            // to return null, false, etc instead of throwing an exception.
-            // We should periodically disable this and tackle the broken tests
-            // as it exposes when we are hitting platform APIs in our tests.
-            // If these tests *require* platform APIs we may want to make them
-            // connected tests instead.
-            returnDefaultValues = true
+	testOptions {
+		unitTests {
+			// This causes android platform methods from the test JAR
+			// to return null, false, etc instead of throwing an exception.
+			// We should periodically disable this and tackle the broken tests
+			// as it exposes when we are hitting platform APIs in our tests.
+			// If these tests *require* platform APIs we may want to make them
+			// connected tests instead.
+			returnDefaultValues = true
 
-            // Test JVM settings since we have a lot of classes loaded.
-            all {
-                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
-                forkEvery 200
-            }
-        }
-    }
+			// Test JVM settings since we have a lot of classes loaded.
+			all {
+				jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
+				forkEvery 200
+			}
+		}
+	}
 
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'),
-                    project(':mopub-sdk').file('proguard.txt')
-        }
+	buildTypes {
+		release {
+			minifyEnabled false
+			proguardFiles getDefaultProguardFile('proguard-android.txt'),
+					project(':mopub-sdk').file('proguard.txt')
+		}
 
-        debug {
-            minifyEnabled false
-        }
-    }
+		debug {
+			minifyEnabled false
+		}
+	}
 
-    // Note: You will also need a local.properties file to set the location of the SDK in the same
-    // way that the existing SDK requires, using the sdk.dir property.
-    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no
-    // difference between the two methods, you can use the one you prefer.
+	// Note: You will also need a local.properties file to set the location of the SDK in the same
+	// way that the existing SDK requires, using the sdk.dir property.
+	// Alternatively, you can set an environment variable called ANDROID_HOME. There is no
+	// difference between the two methods, you can use the one you prefer.
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:23.4.0'
-    compile 'com.android.support:support-annotations:23.4.0'
+	compile 'com.android.support:support-v4:24.2.1'
+	compile 'com.android.support:support-annotations:24.2.1'
 }
