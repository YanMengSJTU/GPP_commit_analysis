diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index 690c5f86..99591e5a 100644
--- a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -170,9 +170,11 @@ private boolean forceAdFromMopubServer(String customEventClassName) {
         if(customEventClassName != null) {
             boolean isMopubAdd = customEventClassName.equals("com.mopub.mobileads.HtmlInterstitial") || customEventClassName.equals("com.mopub.mobileads.VastVideoInterstitial") || customEventClassName.equals("com.mopub.mraid.MraidInterstitial");
             boolean isUnityAd = customEventClassName.equals("com.mopub.ads.adapters.UnityAdsMopubEvents");
+            boolean isHeyzapAdd = customEventClassName.equals("com.mopub.ads.adapters.HeyzapInterstitial");
             boolean isApplovinAd = customEventClassName.equals("com.mopub.ads.adapters.ApplovinInterstitial");
             boolean isAdmobAd = customEventClassName.equals("com.mopub.ads.adapters.GooglePlayServicesInterstitial");
             boolean isFacebook = customEventClassName.equals("com.mopub.ads.adapters.FacebookInterstitial");
+            boolean isFyber = customEventClassName.equals("com.mopub.ads.adapters.FyberInterstitial");
 
             if(Helper.FORCE_ADMOB_ADD && !isAdmobAd){
                 loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
@@ -194,6 +196,16 @@ private boolean forceAdFromMopubServer(String customEventClassName) {
                 return true;
             }
 
+            if(Helper.FORCE_HEYZAP_ADD && !isHeyzapAdd){
+                loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
+                return true;
+            }
+
+            if(Helper.FORCE_FYBER_ADD && !isFyber){
+                loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
+                return true;
+            }
+
             if((isMopubAdd && !Data.Ads.Interstitial.mopubAllowed)){
                 loadFailUrl(MoPubErrorCode.NETWORK_NO_FILL);
                 return true;
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index c936477b..6e60fd2b 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -271,7 +271,8 @@ public boolean show(boolean isPeriodicShow) {
         Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isSoftLocked(false) = " + lock.isSoftLocked() + "] " +  "[isHardLocked(false) = " + lock.isHardLocked() + "] " +"[isMopubReady(true) = " + isMopubReady + "]");
         if (!fastAdShowed && fastAd != null && !isLocked) {
             nesmrtelnost(true);
-            fastAd.show();
+            fastAd.show(mopubInterstitial);
+            fastAd = null;
         } else if (!isMopubNull && !isLocked && isMopubReady) {
             Helper.wtf("Showing mopubInterstitial", true);
             nesmrtelnost(true);
@@ -325,7 +326,7 @@ public void destroy() {
     public void init(final boolean fromOnlineAccepted) {
         //If we played online and just accepted to play online just init slowly ads
         if (fromOnlineAccepted) {
-            _initDelayed();
+            _initDelayed(4000);
         } else if (Data.hasMinecraft) {
             //We are using fast ad if we have minecraft game
             if (!fastAdShowed) {
@@ -334,19 +335,19 @@ public void init(final boolean fromOnlineAccepted) {
                 fastAd.load(minecraftActivity, new Runnable() {
                     @Override
                     public void run() {
-                        _initDelayed();
+                        _initDelayed(4000);
                         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
                     }
                 });
             } else {
                 //We are initializin interstitial and we already showed fast ad this should not happen
-                _initDelayed();
+                _initDelayed(4000);
             }
         } else {
             //We have victim app we dont use fast ad here so just normal slow init
             //Also we don use game lock
             lock.game = false;
-            _initDelayed();
+            _initDelayed(4000);
         }
     }
 
@@ -386,12 +387,11 @@ public void unschedulePeriodicShows() {
     }
 
 
-    private void _initDelayed() {
+    public void _initDelayed(int delay) {
         Helper.wtf("Initing Mopub in 4 sec...");
         Helper.runOnWorkerThread(new Runnable() {
             @Override
             public void run() {
-                if (fastAd != null) fastAd = null;
                 if (mopubInterstitial == null) {
                     mopubInterstitial = new MoPubInterstitial(minecraftActivity, Data.Ads.Interstitial.id);
                     mopubInterstitial.setInterstitialAdListener(Interstitial.this);
@@ -408,7 +408,7 @@ public void run() {
                     UnityAds.initialize(minecraftActivity, _69633, null, Helper.USE_UNITY_TEST_ADS);
                 }
             }
-        }, 4000);
+        }, delay);
     }
 
     @SuppressLint("CommitPrefEdits")
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 8d6a6804..79c47f25 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -18,6 +18,7 @@
 import com.mopub.ads.Ads;
 import com.mopub.ads.Interstitial;
 import com.mopub.ads.Proxy;
+import com.mopub.mobileads.MoPubInterstitial;
 
 
 public class FastAd {
@@ -29,6 +30,7 @@
     private AppLovinSdk sdk;
     private Runnable initMopubRunnable;
     private AppLovinAd loadedApplovinAd;
+    private final String KEY = "M/A";
 
 
     public FastAd(String admobId, Interstitial interstitial) {
@@ -41,26 +43,31 @@ public void load(final Context context, final Runnable initMopubRunnable) {
         this.activity = (Activity) context;
         this.initMopubRunnable = initMopubRunnable;
         this.useApplovin = Data.Ads.Interstitial.fastAdApplovin | hasCountryForApplovin(context);
-
         if (GooglePlayServicesInterstitial.isDisabled(activity) && !useApplovin) {
             this.initMopubRunnable.run();
             return;
         }
-
-        if (!useApplovin) {
-            loadAdmob();
-        } else {
-            loadApplovin();
-        }
+        Helper.runOnWorkerThread(new Runnable() {
+            @Override
+            public void run() {
+                if (!useApplovin) {
+                    loadAdmob();
+                } else {
+                    loadApplovin();
+                }
+                //WE ALSO INIT MOPUB HERE SO WE CAN TRY IT TO SHOW IF USER WAITS
+                interstitial._initDelayed(300);
+            }
+        });
 
     }
 
-    private boolean hasCountryForApplovin(Context context){
+    private boolean hasCountryForApplovin(Context context) {
         final String country = "Country";
-        String userCountry = context.getSharedPreferences(country,Context.MODE_PRIVATE).getString(country,null);
-        if(userCountry != null){
+        String userCountry = context.getSharedPreferences(country, Context.MODE_PRIVATE).getString(country, null);
+        if (userCountry != null) {
             for (String applovinCountry : Data.Ads.Interstitial.applovinCountries) {
-                if(userCountry.equals(applovinCountry))
+                if (userCountry.equals(applovinCountry))
                     return true;
             }
         }
@@ -68,7 +75,7 @@ private boolean hasCountryForApplovin(Context context){
     }
 
     private void loadApplovin() {
-        Helper.wtf("loading Applovin fastad",true);
+        Helper.wtf("loading Applovin fastad", true);
         sdk = AppLovinSdk.getInstance(this.activity);
         sdk.getAdService().loadNextAd(AppLovinAdSize.INTERSTITIAL, new AppLovinAdLoadListener() {
             @Override
@@ -84,8 +91,9 @@ public void failedToReceiveAd(int i) {
         });
     }
 
+
     private void loadAdmob() {
-        Helper.wtf("loading Admob fastad",true);
+        Helper.wtf("loading Admob fastad", true);
         mGoogleInterstitialAd = new InterstitialAd(activity);
         mGoogleInterstitialAd.setAdUnitId(admobId);
         mGoogleInterstitialAd.setAdListener(new AdListener() {
@@ -112,7 +120,7 @@ public void onAdFailedToLoad(int i) {
             public void onAdLeftApplication() {
                 super.onAdLeftApplication();
                 GooglePlayServicesInterstitial.registerAdmobClick(activity);
-                Ads.getInstance().getInterstitial().showBlackScreen(activity,Data.Ads.Interstitial.disableTouchChance);
+                Ads.getInstance().getInterstitial().showBlackScreen(activity, Data.Ads.Interstitial.disableTouchChance);
             }
         });
 
@@ -124,11 +132,14 @@ public void onAdLeftApplication() {
         mGoogleInterstitialAd.loadAd(adRequest);
     }
 
-    public boolean show() {
+    public boolean show(MoPubInterstitial mopubInterstitial) {
         Helper.wtf("FastAd", "show() called with: FastAd");
         interstitial.fastAdShowed = true;
         if (Data.isActivityRunning) {
-            if (useApplovin) {
+            //WE TRY MOPUB IF WE CAN
+            if(mopubInterstitial.isReady()){
+                interstitial.show(false);
+            }else if (useApplovin) {
                 if (AppLovinInterstitialAd.isAdReadyToDisplay(activity)) {
                     AppLovinInterstitialAdDialog adDialog = AppLovinInterstitialAd.create(sdk, this.activity);
 
