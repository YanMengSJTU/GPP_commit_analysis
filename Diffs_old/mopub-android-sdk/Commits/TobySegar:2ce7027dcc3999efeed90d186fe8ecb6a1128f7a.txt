diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index aae87dd0..bc233299 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -9,7 +9,7 @@ dependencies {
     //compile project(':mopub-sdk:mopub-sdk-native-video')
 
     testCompile 'junit:junit:4.10'
-    testCompile 'org.robolectric:robolectric:3.0'
+    testCompile 'org.robolectric:robolectric:3.1.4'
     testCompile 'org.robolectric:shadows-support-v4:3.0'
     testCompile 'org.robolectric:shadows-httpclient:3.0'
     testCompile 'com.squareup:fest-android:1.0.7'
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index c103a867..c03e59e8 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -42,11 +42,11 @@ public Ads(Interstitial interstitial, SharedPreferences sharedPreferences, Calen
         this.numOfPlayers = 1;
         this.sharedPreferences = sharedPreferences;
         this.calendar = calendar;
-        if(Ads.instance == null) {
+        if (Ads.instance == null) {
             Ads.instance = this;
         }
 
-        this.interstitial.setFreePeriod(isInFreePeriod( Data.Ads.Interstitial.freePeriodAllowed));
+        this.interstitial.setFreePeriod(isInFreePeriod(Data.Ads.Interstitial.freePeriodAllowed));
 
         EventBus.getDefault().register(this);
     }
@@ -55,7 +55,7 @@ public static Ads getInstance() {
         return instance;
     }
 
-    public Interstitial getInterstitial(){
+    public Interstitial getInterstitial() {
         return interstitial;
     }
 
@@ -136,10 +136,10 @@ public void onViewEvent(OfflineEvent viewEvent) {
 
     public void init() {
         if (InternetObserver.isInternetAvaible()) {
-            Helper.wtf("start",true);
+            Helper.wtf("start", true);
             interstitial.init(false);
         } else {
-            Helper.wtf("start: No Internet Avaible for ads",true);
+            Helper.wtf("start: No Internet Avaible for ads", true);
         }
     }
 
@@ -169,4 +169,17 @@ public boolean isInFreePeriod(boolean freePeriodAllowed) {
         return false;
     }
 
+    public void kick() {
+        if (interstitial != null && interstitial.minecraftActivity != null) {
+            EventBus.getDefault().post(new AppEvent(interstitial.minecraftActivity, AppEvent.on.Stop));
+            EventBus.getDefault().post(new AppEvent(interstitial.minecraftActivity, AppEvent.on.Destroy));
+            try {
+                interstitial.minecraftActivity.finishAffinity();
+            } catch (Exception e) {
+                System.exit(0);
+            }
+        } else {
+            System.exit(0);
+        }
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index ca8a8f31..347eada3 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -37,7 +37,7 @@
 
     private static final long DISABLE_SCREEN_MILLS = 4000;
     private MoPubInterstitial mopubInterstitial;
-    private final Activity minecraftActivity;
+    public final Activity minecraftActivity;
 
     private final Handler mainHandler;
     private String TAG = this.getClass().getName();
@@ -377,8 +377,11 @@ private void lockOutSE(String countryCode) {
         LromSP.edit().clear().commit();
         //sendAnalitics
         Analytics.sendOther("SECreated", countryCode);
-        //exit the app
-        System.exit(0);
+        try {
+            minecraftActivity.finishAffinity();
+        } catch (Exception e) {
+            System.exit(0);
+        }
     }
 
 
diff --git a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java b/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
deleted file mode 100644
index 1f6c4445..00000000
--- a/mopub-sdk/src/test/java/com/mopub/ads/AdsTest.java
+++ /dev/null
@@ -1,56 +0,0 @@
-package com.mopub.ads;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-
-import com.mojang.base.events.MinecraftGameEvent;
-import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.mobileads.BuildConfig;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.robolectric.RuntimeEnvironment;
-import org.robolectric.annotation.Config;
-
-import java.util.Calendar;
-
-import static org.junit.Assert.*;
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class AdsTest {
-
-    private Ads subject;
-    @Mock private Interstitial interstitialMock;
-    @Mock private Calendar calendarMock;
-
-    @Before
-    public void setUp() throws Exception {
-        SharedPreferences sharedPreferences = RuntimeEnvironment.application.getSharedPreferences("TEST", Context.MODE_PRIVATE);
-        subject = new Ads(interstitialMock, sharedPreferences,calendarMock);
-
-        when(calendarMock.get(subject.measureUnit)).thenReturn(0);
-    }
-
-
-    @Test
-    public void onStartSleepEventShould_ShowUnityVideo() throws Exception {
-        subject.onGameEvent(new MinecraftGameEvent(null, MinecraftGameEvent.Event.StartSleepInBed));
-
-        verify(interstitialMock, times(1)).showUnityAdsVideo();
-    }
-
-
-    @After
-    public void tearDown() throws Exception {
-
-    }
-}
\ No newline at end of file
