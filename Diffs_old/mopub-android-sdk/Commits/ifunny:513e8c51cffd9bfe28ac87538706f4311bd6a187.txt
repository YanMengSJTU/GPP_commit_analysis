diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6ce33c8e..8d5ab52e 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,11 @@
-## Version 4.3.0 (Deceber 15, 2015)
+## Version 4.4.1 (February 23, 2016)
+- Fixed deeplink bug where host must be present in URL.
+
+## Version 4.4.0 (February 11, 2016) 
+- Updated permission model to be compatible with Android 6.0 (API level 23).
+- Enhancements and bug fixes for video ads.
+
+## Version 4.3.0 (December 15, 2015)
 
 - Enhancements and bug fixes for VAST video ads.
 
@@ -6,7 +13,7 @@
 
 - Support for mediating Facebook Native Video ads.
 - Mediated Facebook Native Ads now display the AdChoices icon.
-- Support for Facebook SDK 8.4.1
+- Support for Facebook SDK 4.8.1
 
 ## Version 4.1.0 (November 12, 2015)
 
diff --git a/README.md b/README.md
index c972a01a..327238f6 100644
--- a/README.md
+++ b/README.md
@@ -27,7 +27,7 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        compile('com.mopub:mopub-sdk:4.1.0@aar') {
+        compile('com.mopub:mopub-sdk:4.4.1@aar') {
             transitive = true
         }
     }
@@ -67,15 +67,34 @@ Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/mast
 ## Requirements
 
 - Android 2.3.1 (API Version 9) and up
-- android-support-v4.jar, r22 (**Updated in 3.7.0**)
-- android-support-annotations.jar, r22 (**Updated in 3.7.0**)
-- android-support-v7-recyclerview.jar, r22 (**Updated in 3.9.0**)
+- android-support-v4.jar, r23 (**Updated in 4.4.0**)
+- android-support-annotations.jar, r23 (**Updated in 4.4.0**)
+- android-support-v7-recyclerview.jar, r23 (**Updated in 4.4.0**)
 - MoPub Volley Library (mopub-volley-1.1.0.jar - available on JCenter) (**Updated in 3.6.0**)
 - **Recommended** Google Play Services 7.8.0
 
 ## Upgrading from 3.2.0 and Prior
 In 3.3.0 a dependency on android-support-annotations.jar was added. If you are using Maven or Gradle to include the MoPub SDK, this dependency is included in the build scripts. For instructions on adding dependencies for Eclipse projects, see our [Getting Started Guide](https://github.com/mopub/mopub-android-sdk/wiki/Getting-Started#adding-the-support-libraries-to-your-project)
 
+## Working with Android 6.0 Runtime Permissions
+If your app's target SDK is 23 or higher _**and**_ the user's device is running Android 6.0 or higher, you are responsible for supporting [runtime permissions](http://developer.android.com/training/permissions/requesting.html), one of the [changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html) introduced in Android 6.0 (API level 23). In addition to listing any dangerous permissions your app needs in the manifest, your app also has to explicitly request the dangerous permission(s) during runtime by calling method `requestPermissions()` in the [`ActivityCompat`](http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html) class.
+
+### Specifically for the MoPub SDK:
+- Dangerous permission [`ACCESS_COARSE_LOCATION`](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION) is needed to pass network location data to MoPub.
+- Dangerous permission [`ACCESS_FINE_LOCATION`](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_FINE_LOCATION) is needed to pass GPS location data to MoPub.
+    - Granting `ACCESS_FINE_LOCATION` also allows network location data to be passed to MoPub without the need to also grant `ACCESS_COARSE_LOCATION`.
+- Dangerous permission [`READ_EXTERNAL_STORAGE`](http://developer.android.com/reference/android/Manifest.permission.html#READ_EXTERNAL_STORAGE) is needed for exoplayer to play native video.
+- Dangerous permission [`WRITE_EXTERNAL_STORAGE`](http://developer.android.com/reference/android/Manifest.permission.html#WRITE_EXTERNAL_STORAGE) is needed for MRAID 2.
+- _**Note:** The user can deny granting any dangerous permissions during runtime, so please make sure your app can handle this properly._
+- _**Note:** The user can revoke any permissions granted previously by going to your app's Settings screen, so please make sure your app can handle this properly._
+
+### Additional resources:
+- [Android 6.0 Changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html)
+- [Requesting Permissions at Run Time](http://developer.android.com/training/permissions/requesting.html)
+- [Permissions Best Practices](http://developer.android.com/training/permissions/best-practices.html)
+- [Normal vs Dangerous Permissions](http://developer.android.com/guide/topics/security/permissions.html#normal-dangerous)
+- [Permission Groups](http://developer.android.com/guide/topics/security/permissions.html#perm-groups)
+
 ## License
 
 We have launched a new license as of version 3.2.0. To view the full license, visit [http://www.mopub.com/legal/sdk-license-agreement/](http://www.mopub.com/legal/sdk-license-agreement/).
diff --git a/build.gradle b/build.gradle
index c62b6341..6410ab25 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.android.tools.build:gradle:1.3.1'
     }
 }
 
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index 79e638a0..5813e005 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.mopub.simpleadsdemo"
-      android:versionCode="34"
-      android:versionName="4.3.0">
+      android:versionCode="36"
+      android:versionName="4.4.1">
     <uses-sdk android:minSdkVersion="9"
               android:targetSdkVersion="23"/>
 
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index dcedaf82..677c46b4 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -9,7 +9,7 @@ apply plugin: 'com.android.application'
 
 group = 'com.mopub'
 description = '''MoPub Sample App'''
-version = '4.3.0'
+version = '4.4.1'
 
 android {
     compileSdkVersion 23
@@ -17,7 +17,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 34
+        versionCode 36
         versionName version
         minSdkVersion 9
         targetSdkVersion 23
@@ -55,8 +55,8 @@ android {
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:22.2.0'
+    compile 'com.android.support:support-v4:23.1.1'
     compile 'com.google.android.gms:play-services-ads:7.8.0'
-    compile 'com.android.support:recyclerview-v7:22.2.0'
+    compile 'com.android.support:recyclerview-v7:23.1.1'
     compile project(':mopub-sdk')
 }
diff --git a/mopub-sample/pom.xml b/mopub-sample/pom.xml
index 3c112660..8a283c4d 100644
--- a/mopub-sample/pom.xml
+++ b/mopub-sample/pom.xml
@@ -33,14 +33,14 @@
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-v4</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>recyclerview-v7</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
         
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
index 8322b4ac..fc175ea0 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
@@ -3,14 +3,27 @@
 import android.annotation.TargetApi;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.webkit.WebView;
 
 import com.mopub.common.MoPub;
+import com.mopub.common.util.DeviceUtils;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;
+import static com.mopub.common.Constants.UNUSED_REQUEST_CODE;
 
 public class MoPubSampleActivity extends FragmentActivity {
+    private static final List<String> REQUIRED_DANGEROUS_PERMISSIONS = new ArrayList<String>();
+    static {
+        REQUIRED_DANGEROUS_PERMISSIONS.add(ACCESS_COARSE_LOCATION);
+        REQUIRED_DANGEROUS_PERMISSIONS.add(WRITE_EXTERNAL_STORAGE);
+    }
 
     // Sample app web views are debuggable.
     static {
@@ -33,6 +46,19 @@ protected void onCreate(Bundle savedInstanceState) {
             return;
         }
 
+        List<String> permissionsToBeRequested = new ArrayList<String>();
+        for (String permission : REQUIRED_DANGEROUS_PERMISSIONS) {
+            if (!DeviceUtils.isPermissionGranted(this, permission)) {
+                permissionsToBeRequested.add(permission);
+            }
+        }
+
+        // Request dangerous permissions
+        if (!permissionsToBeRequested.isEmpty()) {
+            ActivityCompat.requestPermissions(this, permissionsToBeRequested.toArray(
+                    new String[permissionsToBeRequested.size()]), UNUSED_REQUEST_CODE);
+        }
+
         // Set location awareness and precision globally for your app:
         MoPub.setLocationAwareness(MoPub.LocationAwareness.TRUNCATED);
         MoPub.setLocationPrecision(4);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
index 724656ff..331f63e4 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
@@ -31,7 +31,7 @@ String getName() {
         private final String name;
         private final Class<? extends Fragment> fragmentClass;
 
-        private AdType(final String name, final Class<? extends Fragment> fragmentClass) {
+        AdType(final String name, final Class<? extends Fragment> fragmentClass) {
             this.name = name;
             this.fragmentClass = fragmentClass;
         }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
index a0421841..472a5648 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
@@ -29,7 +29,7 @@
     private MoPubRecyclerAdapter mRecyclerAdapter;
     private MoPubSampleAdUnit mAdConfiguration;
     private RequestParameters mRequestParameters;
-    private enum LayoutType { LINEAR, GRID };
+    private enum LayoutType { LINEAR, GRID }
     private LayoutType mLayoutType;
     private RecyclerView mRecyclerView;
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
index 16eaed98..6ad5526f 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
@@ -12,6 +12,7 @@
 import com.mopub.common.MoPubReward;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubRewardedVideoListener;
+import com.mopub.mobileads.MoPubRewardedVideoManager.RequestParameters;
 
 import java.util.Locale;
 import java.util.Set;
@@ -44,7 +45,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         views.mLoadButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                MoPub.loadRewardedVideo(adUnitId);
+                MoPub.loadRewardedVideo(adUnitId,
+                        new RequestParameters(views.mKeywordsField.getText().toString()));
                 mShowButton.setEnabled(false);
             }
         });
diff --git a/mopub-sdk/AndroidManifest.xml b/mopub-sdk/AndroidManifest.xml
index 42216cc5..144e231e 100644
--- a/mopub-sdk/AndroidManifest.xml
+++ b/mopub-sdk/AndroidManifest.xml
@@ -5,7 +5,7 @@
     android:versionName="1.0">
     <uses-sdk
         android:minSdkVersion="9"
-        android:targetSdkVersion="22"/>
+        android:targetSdkVersion="23"/>
     <application/>
 </manifest>
 
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index 75d418b2..3297fcfc 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -1,6 +1,5 @@
 // This buildscript will assemble the MoPub SDK into an AAR.
 buildscript {
-
 	repositories {
 		mavenCentral()
 		jcenter()
@@ -10,7 +9,6 @@ buildscript {
 		classpath 'com.android.tools.build:gradle:1.5.0'
 		classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
 	}
-
 }
 
 plugins {
@@ -36,95 +34,91 @@ task wrapper(type: Wrapper) {
 
 group = 'com.mopub'
 description = '''MoPub Android SDK'''
-version = '4.3.0'
+version = '4.4.1'
 
 android {
-
-	compileSdkVersion 23
-	buildToolsVersion '23.0.1'
-	lintOptions { abortOnError false }
-
-	defaultConfig {
-		versionCode 34
-		versionName version
-		minSdkVersion 14
-		targetSdkVersion 23
-		consumerProguardFiles 'proguard.txt'
-	}
-
-	useLibrary 'org.apache.http.legacy'
-
-	sourceSets {
-		main {
-			manifest.srcFile 'AndroidManifest.xml'
-			java.srcDirs = ['src/main/java']
-			resources.srcDirs = ['src/main/resources']
-			aidl.srcDirs = ['src/main']
-			renderscript.srcDirs = ['src/main']
-			res.srcDirs = ['res']
-			assets.srcDirs = ['assets']
-		}
-	}
-
-	testOptions {
-		unitTests {
-			// This causes android platform methods from the test JAR
-			// to return null, false, etc instead of throwing an exception.
-			// We should periodically disable this and tackle the broken tests
-			// as it exposes when we are hitting platform APIs in our tests.
-			// If these tests *require* platform APIs we may want to make them
-			// connected tests instead.
-			returnDefaultValues = true
-
-			// Test JVM settings since we have a lot of classes loaded.
-			all {
-				jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
-				forkEvery 200
-			}
-		}
-	}
-
-	buildTypes {
-		release {
-			minifyEnabled false
-			proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard.txt')
-		}
-
-		debug {
-			minifyEnabled false
-		}
-	}
-
-	// Note: You will also need a local.properties file to set the location of the SDK in the same
-	// way that the existing SDK requires, using the sdk.dir property.
-	// Alternatively, you can set an environment variable called ANDROID_HOME. There is no
-	// difference between the two methods, you can use the one you prefer.
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
+    lintOptions { abortOnError false }
+    useLibrary 'org.apache.http.legacy'
+
+    defaultConfig {
+        versionCode 36
+        versionName version
+        minSdkVersion 9
+        targetSdkVersion 23
+        consumerProguardFiles 'proguard.txt'
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src/main/java']
+            resources.srcDirs = ['src/main/resources']
+            aidl.srcDirs = ['src/main']
+            renderscript.srcDirs = ['src/main']
+            res.srcDirs = ['res']
+            assets.srcDirs = ['assets']
+        }
+    }
+
+    testOptions {
+        unitTests {
+            // This causes android platform methods from the test JAR
+            // to return null, false, etc instead of throwing an exception.
+            // We should periodically disable this and tackle the broken tests
+            // as it exposes when we are hitting platform APIs in our tests.
+            // If these tests *require* platform APIs we may want to make them
+            // connected tests instead.
+            returnDefaultValues = true
+
+            // Test JVM settings since we have a lot of classes loaded.
+            all {
+                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
+                forkEvery 200
+            }
+        }
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard.txt')
+        }
+      
+        debug {
+            minifyEnabled false
+        }
+    }
+
+    // Note: You will also need a local.properties file to set the location of the SDK in the same 
+    // way that the existing SDK requires, using the sdk.dir property.
+    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no 
+    // difference between the two methods, you can use the one you prefer.
 }
 
 
 
 dependencies {
-
-	compile 'com.android.support:support-v4:23.1.1'
-	compile 'com.android.support:support-annotations:23.1.1'
-	compile 'com.android.support:recyclerview-v7:23.1.1'
-	compile 'com.mopub.volley:mopub-volley:1.1.0'
-	// anchor: additional dependencies
-	compile 'com.google.android.exoplayer:exoplayer:r1.4.2'
-
-
-	javadocDeps 'com.google.android.exoplayer:exoplayer:r1.4.2:sources'
-	javadocDeps 'com.mopub.volley:mopub-volley:1.1.0:sources'
-	javadocDeps 'com.android.support:support-v4:23.1.1:sources'
-	javadocDeps 'com.android.support:support-annotations:23.1.1:sources'
-	javadocDeps 'com.android.support:recyclerview-v7:23.1.1:sources'
-
-	testCompile 'junit:junit:4.10'
-	testCompile 'org.robolectric:robolectric:3.0'
-	testCompile 'org.robolectric:shadows-support-v4:3.0'
-	testCompile 'org.robolectric:shadows-httpclient:3.0'
-	testCompile 'com.squareup:fest-android:1.0.7'
-	testCompile 'org.mockito:mockito-core:1.9.5'
+    compile 'com.android.support:support-v4:23.1.1'
+    compile 'com.android.support:support-annotations:23.1.1'
+    compile 'com.android.support:recyclerview-v7:23.1.1'
+    compile 'com.mopub.volley:mopub-volley:1.1.0'
+    compile 'com.google.android.exoplayer:exoplayer:r1.4.2'
+    // anchor: additional dependencies
+
+    javadocDeps 'com.google.android.exoplayer:exoplayer:r1.4.2:sources'
+    javadocDeps 'com.mopub.volley:mopub-volley:1.1.0:sources'
+    javadocDeps 'com.android.support:support-v4:23.1.1:sources'
+    javadocDeps 'com.android.support:support-annotations:23.1.1:sources'
+    javadocDeps 'com.android.support:recyclerview-v7:23.1.1:sources'
+
+    testCompile 'junit:junit:4.10'
+    testCompile 'org.robolectric:robolectric:3.0'
+    testCompile 'org.robolectric:shadows-support-v4:3.0'
+    testCompile 'org.robolectric:shadows-httpclient:3.0'
+    testCompile 'com.squareup:fest-android:1.0.7'
+    testCompile 'org.mockito:mockito-core:1.9.5'
 }
 
 def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
diff --git a/mopub-sdk/pom.xml b/mopub-sdk/pom.xml
index 5b6fcdf0..e9a03d34 100644
--- a/mopub-sdk/pom.xml
+++ b/mopub-sdk/pom.xml
@@ -21,20 +21,20 @@
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-annotations</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-v4</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>recyclerview-v7</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
         
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdReport.java b/mopub-sdk/src/main/java/com/mopub/common/AdReport.java
index 0415b271..7e6a2b39 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/AdReport.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/AdReport.java
@@ -63,6 +63,10 @@ public String getResponseString() {
         return mAdResponse.getStringBody();
     }
 
+    public String getDspCreativeId() {
+        return mAdResponse.getDspCreativeId();
+    }
+
     private void appendKeyValue(StringBuilder parameters, String key, String value) {
         parameters.append(key);
         parameters.append(" : ");
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java b/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
index 397a0d04..4975407a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
@@ -63,7 +63,7 @@
 
     /**
      * Density as represented by a float. See
-     * http://developer.android.com/guide/practices/screens_support.html
+     * https://developer.android.com/guide/practices/screens_support.html
      * for details on values this can be.
      */
     private static final String SCREEN_SCALE_KEY = "sc_a";
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java b/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
index 68d88289..759b528e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
@@ -19,8 +19,8 @@
     public abstract String generateUrlString(String serverHostname);
 
     protected void initUrlString(String serverHostname, String handlerType) {
-        String scheme = Networking.useHttps() ? Constants.HTTPS : Constants.HTTP;
-        mStringBuilder = new StringBuilder(scheme).append("://").append(serverHostname).append(handlerType);
+        mStringBuilder = new StringBuilder(Networking.getScheme()).append("://")
+                .append(serverHostname).append(handlerType);
         mFirstParam = true;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CacheService.java b/mopub-sdk/src/main/java/com/mopub/common/CacheService.java
index 58cd1cf5..a88ad866 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/CacheService.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/CacheService.java
@@ -21,7 +21,7 @@
 import static com.mopub.common.DiskLruCache.open;
 
 public class CacheService {
-    public static interface DiskLruCacheGetListener {
+    public interface DiskLruCacheGetListener {
         void onComplete(final String key, final byte[] content);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java b/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
index 412f47be..d6c76b92 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
@@ -21,7 +21,6 @@
 
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.content.pm.PackageManager.NameNotFoundException;
-import static android.content.pm.PackageManager.PERMISSION_GRANTED;
 
 /**
  * Singleton that caches Client objects so they will be available to background threads.
@@ -49,14 +48,14 @@
     private boolean mDoNotTrack = false;
     private boolean mAdvertisingInfoSet = false;
 
-    public static enum MoPubNetworkType {
+    public enum MoPubNetworkType {
         UNKNOWN(0),
         ETHERNET(1),
         WIFI(2),
         MOBILE(3);
 
         private final int mId;
-        private MoPubNetworkType(int id) {
+        MoPubNetworkType(int id) {
             mId = id;
         }
 
@@ -227,7 +226,7 @@ public String getOrientationString() {
 
     public MoPubNetworkType getActiveNetworkType() {
         int networkType = UNKNOWN_NETWORK;
-        if (mContext.checkCallingOrSelfPermission(ACCESS_NETWORK_STATE) == PERMISSION_GRANTED) {
+        if (DeviceUtils.isPermissionGranted(mContext, ACCESS_NETWORK_STATE)) {
             NetworkInfo activeNetworkInfo = mConnectivityManager.getActiveNetworkInfo();
             networkType = activeNetworkInfo != null
                     ? activeNetworkInfo.getType() : UNKNOWN_NETWORK;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java b/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
index a38f4b52..6a642d16 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
@@ -46,10 +46,10 @@
     /**
      * Defines a subset of supported gravity combinations for the CloseableLayout. These values
      * include the possible values for customClosePosition as defined in the
-     * <a href="http://www.iab.net/media/file/IAB_MRAID_v2_FINAL.pdf">MRAID 2.0
+     * <a href="https://www.iab.net/media/file/IAB_MRAID_v2_FINAL.pdf">MRAID 2.0
      * specification</a>.
      */
-    public static enum ClosePosition {
+    public enum ClosePosition {
         TOP_LEFT(Gravity.TOP | Gravity.LEFT),
         TOP_CENTER(Gravity.TOP | Gravity.CENTER_HORIZONTAL),
         TOP_RIGHT(Gravity.TOP | Gravity.RIGHT),
@@ -185,7 +185,7 @@ private void applyCloseBoundsWithSize(ClosePosition closePosition, final int siz
 
     @Override
     public boolean onInterceptTouchEvent(@NonNull final MotionEvent event) {
-        // See http://developer.android.com/training/gestures/viewgroup.html for details on
+        // See https://developer.android.com/training/gestures/viewgroup.html for details on
         // capturing motion events
 
         // Start intercepting touch events only when we see a down event
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Constants.java b/mopub-sdk/src/main/java/com/mopub/common/Constants.java
index 0ca157fe..011f7e7e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/Constants.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/Constants.java
@@ -17,4 +17,6 @@ private Constants() {}
     public static final int THIRTY_SECONDS_MILLIS = 30 * 1000;
 
     public static final int TEN_MB = 10 * 1024 * 1024;
+
+    public static final int UNUSED_REQUEST_CODE = 255;  // Acceptable range is [0, 255]
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
index c62d6594..882d2071 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
index 8e4aa1f4..824a9254 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
index 6cc5b4f9..ba7622ea 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DoubleTimeTracker.java b/mopub-sdk/src/main/java/com/mopub/common/DoubleTimeTracker.java
new file mode 100644
index 00000000..25564d9b
--- /dev/null
+++ b/mopub-sdk/src/main/java/com/mopub/common/DoubleTimeTracker.java
@@ -0,0 +1,77 @@
+package com.mopub.common;
+
+import android.os.SystemClock;
+import android.support.annotation.NonNull;
+
+import com.mopub.common.logging.MoPubLog;
+
+/**
+ * This class uses system time to track durations. It can be started and paused, but not reset.
+ * Create a new {@link DoubleTimeTracker} if you need to track a new duration.
+ */
+public class DoubleTimeTracker {
+    /**
+     * Wrapper for Android SystemClock used to allow dependency injection for tests.
+     */
+    public interface Clock {
+        long elapsedRealTime();
+    }
+
+
+    private enum State { STARTED, PAUSED }
+    @NonNull private volatile State state;
+    private long startedTimestamp;
+    private long interval;
+    @NonNull private final Clock mClock;
+
+    public DoubleTimeTracker() {
+        this(new SystemClockClock());
+    }
+
+    @VisibleForTesting
+    public DoubleTimeTracker(@NonNull Clock clock) {
+        this.mClock = clock;
+        this.state = State.PAUSED;
+    }
+
+    public synchronized void start() {
+        if (state == State.STARTED) {
+            MoPubLog.v("DoubleTimeTracker already started.");
+            return;
+        }
+
+        state = State.STARTED;
+        startedTimestamp = mClock.elapsedRealTime();
+    }
+
+    public synchronized void pause() {
+        if (state == State.PAUSED) {
+            MoPubLog.v("DoubleTimeTracker already paused.");
+            return;
+        }
+
+
+        interval += computeIntervalDiff();
+        startedTimestamp = 0;
+        state = State.PAUSED;
+    }
+
+
+    public synchronized double getInterval() {
+        return interval + computeIntervalDiff();
+    }
+
+    private synchronized long computeIntervalDiff() {
+        if (state == State.PAUSED) {
+            return 0;
+        }
+
+        return mClock.elapsedRealTime() - startedTimestamp;
+    }
+
+    private static class SystemClockClock implements Clock {
+        public long elapsedRealTime() {
+            return SystemClock.elapsedRealtime();
+        }
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java b/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
index e26371b0..5773b410 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
@@ -31,7 +31,7 @@ public AdvertisingInfo(String adId, boolean limitAdTrackingEnabled) {
     }
 
     public interface GpsHelperListener {
-        public void onFetchAdInfoCompleted();
+        void onFetchAdInfoCompleted();
     }
 
     public static boolean isPlayServicesAvailable(final Context context) {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java b/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
index d92f8d5d..724d683a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
@@ -8,14 +8,13 @@
  * occur.
  */
 public interface LifecycleListener {
+    void onCreate(@NonNull Activity activity);
+    void onStart(@NonNull Activity activity);
+    void onPause(@NonNull Activity activity);
+    void onResume(@NonNull Activity activity);
 
-    public void onCreate(@NonNull Activity activity);
-    public void onStart(@NonNull Activity activity);
-    public void onPause(@NonNull Activity activity);
-    public void onResume(@NonNull Activity activity);
-
-    public void onRestart(@NonNull Activity activity);
-    public void onStop(@NonNull Activity activity);
-    public void onDestroy(@NonNull Activity activity);
-    public void onBackPressed(@NonNull Activity activity);
+    void onRestart(@NonNull Activity activity);
+    void onStop(@NonNull Activity activity);
+    void onDestroy(@NonNull Activity activity);
+    void onBackPressed(@NonNull Activity activity);
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LocationService.java b/mopub-sdk/src/main/java/com/mopub/common/LocationService.java
index 6602db66..77e44feb 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/LocationService.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/LocationService.java
@@ -3,14 +3,19 @@
 import android.content.Context;
 import android.location.Location;
 import android.location.LocationManager;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.DeviceUtils;
 
 import java.math.BigDecimal;
 
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
+
 public class LocationService {
-    public static enum LocationAwareness {
+    public enum LocationAwareness {
         NORMAL, TRUNCATED, DISABLED;
 
         // These deprecated methods are only used to support the deprecated methods
@@ -42,6 +47,34 @@
         }
     }
 
+    public enum ValidLocationProvider {
+        NETWORK(LocationManager.NETWORK_PROVIDER),
+        GPS(LocationManager.GPS_PROVIDER);
+
+        @NonNull final String name;
+
+        ValidLocationProvider(@NonNull final String name) {
+            this.name = name;
+        }
+
+        @Override
+        public String toString() {
+            return name;
+        }
+
+        private boolean hasRequiredPermissions(@NonNull final Context context) {
+            switch (this) {
+                case NETWORK:
+                    return DeviceUtils.isPermissionGranted(context, ACCESS_FINE_LOCATION)
+                            || DeviceUtils.isPermissionGranted(context, ACCESS_COARSE_LOCATION);
+                case GPS:
+                    return DeviceUtils.isPermissionGranted(context, ACCESS_FINE_LOCATION);
+                default:
+                    return false;
+            }
+        }
+    }
+
     /*
      * Returns the last known location of the device using its GPS and network location providers.
      * May be null if:
@@ -50,67 +83,91 @@
      * - Location awareness is disabled in the parent MoPubView
      */
     @Nullable
-    public static Location getLastKnownLocation(final Context context,
+    public static Location getLastKnownLocation(@NonNull final Context context,
             final int locationPrecision,
-            final MoPub.LocationAwareness locationLocationAwareness) {
-        Location result;
+            final @NonNull MoPub.LocationAwareness locationAwareness) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(locationAwareness);
+
+        if (locationAwareness == MoPub.LocationAwareness.DISABLED) {
+            return null;
+        }
+
+        final Location gpsLocation = getLocationFromProvider(context, ValidLocationProvider.GPS);
+        final Location networkLocation = getLocationFromProvider(context, ValidLocationProvider.NETWORK);
+        final Location result = getMostRecentValidLocation(gpsLocation, networkLocation);
+
+        // Truncate latitude/longitude to the number of digits specified by locationPrecision.
+        if (locationAwareness == MoPub.LocationAwareness.TRUNCATED) {
+            truncateLocationLatLon(result, locationPrecision);
+        }
+
+        return result;
+    }
 
-        if (locationLocationAwareness == MoPub.LocationAwareness.DISABLED) {
+    @VisibleForTesting
+    @Nullable
+    static Location getLocationFromProvider(@NonNull final Context context,
+            @NonNull final ValidLocationProvider provider) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(provider);
+
+        if (!provider.hasRequiredPermissions(context)) {
             return null;
         }
 
-        LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
-        Location gpsLocation = null;
+        final LocationManager locationManager =
+                (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
         try {
-            gpsLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
+            // noinspection ResourceType
+            return locationManager.getLastKnownLocation(provider.toString());
         } catch (SecurityException e) {
-            MoPubLog.d("Failed to retrieve GPS location: access appears to be disabled.");
+            MoPubLog.d("Failed to retrieve location from " +
+                    provider.toString() + " provider: access appears to be disabled.");
         } catch (IllegalArgumentException e) {
-            MoPubLog.d("Failed to retrieve GPS location: device has no GPS provider.");
+            MoPubLog.d("Failed to retrieve location: device has no " +
+                    provider.toString() + " location provider.");
         } catch (NullPointerException e) { // This happens on 4.2.2 on a few Android TV devices
-            MoPubLog.d("Failed to retrieve GPS location: device has no GPS provider.");
+            MoPubLog.d("Failed to retrieve location: device has no " +
+                    provider.toString() + " location provider.");
         }
 
-        Location networkLocation = null;
-        try {
-            networkLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
-        } catch (SecurityException e) {
-            MoPubLog.d("Failed to retrieve network location: access appears to be disabled.");
-        } catch (IllegalArgumentException e) {
-            MoPubLog.d("Failed to retrieve network location: device has no network provider.");
-        }  catch (NullPointerException e) { // This happens on 4.2.2 on a few Android TV devices
-            MoPubLog.d("Failed to retrieve GPS location: device has no network provider.");
+        return null;
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static Location getMostRecentValidLocation(@Nullable final Location a, @Nullable final Location b) {
+        if (a == null) {
+            return b;
         }
 
-        if (gpsLocation == null && networkLocation == null) {
-            return null;
-        } else if (gpsLocation != null && networkLocation != null) {
-            if (gpsLocation.getTime() > networkLocation.getTime()) {
-                result = gpsLocation;
-            } else {
-                result = networkLocation;
-            }
-        } else if (gpsLocation != null) {
-            result = gpsLocation;
-        } else {
-            result = networkLocation;
+        if (b == null) {
+            return a;
         }
 
-        // Truncate latitude/longitude to the number of digits specified by locationPrecision.
-        if (locationLocationAwareness == MoPub.LocationAwareness.TRUNCATED) {
-            double lat = result.getLatitude();
-            double truncatedLat = BigDecimal.valueOf(lat)
-                    .setScale(locationPrecision, BigDecimal.ROUND_HALF_DOWN)
-                    .doubleValue();
-            result.setLatitude(truncatedLat);
-
-            double lon = result.getLongitude();
-            double truncatedLon = BigDecimal.valueOf(lon)
-                    .setScale(locationPrecision, BigDecimal.ROUND_HALF_DOWN)
-                    .doubleValue();
-            result.setLongitude(truncatedLon);
+        // At this point, locations A and B are non-null, so return the more recent one
+        return (a.getTime() > b.getTime()) ? a : b;
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static void truncateLocationLatLon(@Nullable final Location location,
+            final int precision) {
+        if (location == null || precision < 0) {
+            return;
         }
 
-        return result;
+        double lat = location.getLatitude();
+        double truncatedLat = BigDecimal.valueOf(lat)
+                .setScale(precision, BigDecimal.ROUND_HALF_DOWN)
+                .doubleValue();
+        location.setLatitude(truncatedLat);
+
+        double lon = location.getLongitude();
+        double truncatedLon = BigDecimal.valueOf(lon)
+                .setScale(precision, BigDecimal.ROUND_HALF_DOWN)
+                .doubleValue();
+        location.setLongitude(truncatedLon);
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
index d2a9337a..c4b61b6a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
@@ -6,11 +6,12 @@
 
 import com.mopub.mobileads.MoPubRewardedVideoListener;
 import com.mopub.mobileads.MoPubRewardedVideoManager;
+import com.mopub.mobileads.MoPubRewardedVideoManager.RequestParameters;
 
 public class MoPub {
-    public static final String SDK_VERSION = "4.3.0";
+    public static final String SDK_VERSION = "4.4.1";
 
-    public static enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
+    public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
 
     private static final int DEFAULT_LOCATION_PRECISION = 6;
     private static volatile LocationAwareness sLocationLocationAwareness = LocationAwareness.NORMAL;
@@ -88,8 +89,15 @@ public static void setRewardedVideoListener(@Nullable MoPubRewardedVideoListener
         MoPubRewardedVideoManager.setVideoListener(listener);
     }
 
-    public static void loadRewardedVideo(@NonNull String adUnitId, @Nullable MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.loadVideo(adUnitId, mediationSettings);
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MediationSettings... mediationSettings) {
+        MoPubRewardedVideoManager.loadVideo(adUnitId, null, mediationSettings);
+    }
+
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable RequestParameters requestParameters,
+            @Nullable MediationSettings... mediationSettings) {
+        MoPubRewardedVideoManager.loadVideo(adUnitId, requestParameters, mediationSettings);
     }
 
     public static boolean hasRewardedVideo(@NonNull String adUnitId) {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java b/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
index 3e373970..65baca5d 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
@@ -1,8 +1,6 @@
 package com.mopub.common;
 
 import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
@@ -19,14 +17,14 @@
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 
-import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.event.Event;
+import com.mopub.common.event.MoPubEvents;
 import com.mopub.mobileads.BaseWebView;
 import com.mopub.mobileads.util.WebViews;
 
-import java.util.EnumSet;
-
 import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
 import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+import static com.mopub.common.event.BaseEvent.*;
 import static com.mopub.common.util.Drawables.BACKGROUND;
 import static com.mopub.common.util.Drawables.CLOSE;
 import static com.mopub.common.util.Drawables.LEFT_ARROW;
@@ -35,6 +33,7 @@
 
 public class MoPubBrowser extends Activity {
     public static final String DESTINATION_URL_KEY = "URL";
+    public static final String DSP_CREATIVE_ID = "mopub-dsp-creative-id";
     public static final int MOPUB_BROWSER_REQUEST_CODE = 1;
     private static final int INNER_LAYOUT_ID = 1;
 
@@ -44,6 +43,9 @@
     private ImageButton mRefreshButton;
     private ImageButton mCloseButton;
 
+    private DoubleTimeTracker dwellTimeTracker;
+    private String mDspCreativeId;
+
     @NonNull
     public ImageButton getBackButton() {
         return mBackButton;
@@ -69,14 +71,6 @@ public WebView getWebView() {
         return mWebView;
     }
 
-    public static void open(final Context context, final String url) {
-        MoPubLog.d("Opening url in MoPubBrowser: " + url);
-        final Intent intent = new Intent(context, MoPubBrowser.class);
-        intent.putExtra(DESTINATION_URL_KEY, url);
-        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        context.startActivity(intent);
-    }
-
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -88,6 +82,8 @@ public void onCreate(Bundle savedInstanceState) {
 
         setContentView(getMoPubBrowserView());
 
+        dwellTimeTracker = new DoubleTimeTracker();
+
         initializeWebView();
         initializeButtons();
         enableCookies();
@@ -101,12 +97,14 @@ private void initializeWebView() {
         /**
          * Pinch to zoom is apparently not enabled by default on all devices, so
          * declare zoom support explicitly.
-         * http://stackoverflow.com/questions/5125851/enable-disable-zoom-in-android-webview
+         * https://stackoverflow.com/questions/5125851/enable-disable-zoom-in-android-webview
          */
         webSettings.setSupportZoom(true);
         webSettings.setBuiltInZoomControls(true);
         webSettings.setUseWideViewPort(true);
 
+        mDspCreativeId = getIntent().getStringExtra(DSP_CREATIVE_ID);
+
         mWebView.loadUrl(getIntent().getStringExtra(DESTINATION_URL_KEY));
 
         mWebView.setWebViewClient(new BrowserWebViewClient(this));
@@ -166,6 +164,8 @@ protected void onPause() {
         super.onPause();
         CookieSyncManager.getInstance().stopSync();
         WebViews.onPause(mWebView, isFinishing());
+        // Pause dwell time counting.
+        dwellTimeTracker.pause();
     }
 
     @Override
@@ -173,6 +173,8 @@ protected void onResume() {
         super.onResume();
         CookieSyncManager.getInstance().startSync();
         WebViews.onResume(mWebView);
+
+        dwellTimeTracker.start();
     }
 
     @Override
@@ -189,6 +191,13 @@ protected void onDestroy() {
         super.onDestroy();
         mWebView.destroy();
         mWebView = null;
+        // Log dwell time value.
+        MoPubEvents.log(new Event.Builder(Name.AD_DWELL_TIME,
+                Category.AD_INTERACTIONS,
+                SamplingRate.AD_INTERACTIONS.getSamplingRate())
+                .withDspCreativeId(mDspCreativeId)
+                .withPerformanceDurationMs(dwellTimeTracker.getInterval())
+                .build());
     }
 
     private View getMoPubBrowserView() {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java b/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
index ca5a52ec..126ff4b4 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
@@ -184,8 +184,6 @@ public static boolean checkState(boolean expression,
 
         /**
          * Ensures that an object reference is not null.
-         *
-         * @returns true if
          */
         public static boolean checkNotNull(Object reference) {
             return checkNotNullInternal(reference, sStrictMode, "Object can not be null.",
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java b/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
index d2b5a438..a98c2790 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.text.TextUtils;
 
 import com.mopub.common.event.BaseEvent;
@@ -34,23 +35,24 @@
     /* 0 */ HANDLE_MOPUB_SCHEME(false) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "mopub".equals(uri.getScheme());
+            return "mopub".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String host = uri.getHost();
             final UrlHandler.MoPubSchemeListener moPubSchemeListener =
                     urlHandler.getMoPubSchemeListener();
 
-            if ("finishLoad".equals(host)) {
+            if ("finishLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFinishLoad();
-            } else if ("close".equals(host)) {
+            } else if ("close".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onClose();
-            } else if ("failLoad".equals(host)) {
+            } else if ("failLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFailLoad();
             } else {
                 throw new IntentNotResolvableException("Could not handle MoPub Scheme url: " + uri);
@@ -61,13 +63,14 @@ protected void performAction(
     /* 1 */ IGNORE_ABOUT_SCHEME(false) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "about".equals(uri.getScheme());
+            return "about".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             MoPubLog.d("Link to about page ignored.");
         }
@@ -77,16 +80,17 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            return "tel".equals(scheme) || "voicemail".equals(scheme)
-                    || "sms".equals(scheme) || "mailto".equals(scheme)
-                    || "geo".equals(scheme)
-                    || "google.streetview".equals(scheme);
+            return "tel".equalsIgnoreCase(scheme) || "voicemail".equalsIgnoreCase(scheme)
+                    || "sms".equalsIgnoreCase(scheme) || "mailto".equalsIgnoreCase(scheme)
+                    || "geo".equalsIgnoreCase(scheme)
+                    || "google.streetview".equalsIgnoreCase(scheme);
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String errorMessage = "Could not handle intent with URI: " + uri + "\n\tIs " +
                     "this intent supported on your phone?";
@@ -97,13 +101,14 @@ protected void performAction(
     /* 3 */ OPEN_NATIVE_BROWSER(true) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "mopubnativebrowser".equals(uri.getScheme());
+            return "mopubnativebrowser".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String errorMessage = "Unable to load mopub native browser url: " + uri;
             try {
@@ -121,16 +126,18 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
             final String host = uri.getHost();
 
-            return "play.google.com".equals(host) || "market.android.com".equals(host)
-                    || "market".equals(scheme)
-                    || uri.toString().startsWith("play.google.com/")
-                    || uri.toString().startsWith("market.android.com/");
+            return "play.google.com".equalsIgnoreCase(host)
+                    || "market.android.com".equalsIgnoreCase(host)
+                    || "market".equalsIgnoreCase(scheme)
+                    || uri.toString().toLowerCase().startsWith("play.google.com/")
+                    || uri.toString().toLowerCase().startsWith("market.android.com/");
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             Intents.launchApplicationUrl(context, uri);
         }
@@ -140,16 +147,17 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            return (HTTP.equals(scheme) || HTTPS.equals(scheme));
+            return (HTTP.equalsIgnoreCase(scheme) || HTTPS.equalsIgnoreCase(scheme));
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             if (!urlHandler.shouldSkipShowMoPubBrowser()) {
-                Intents.showMoPubBrowserForUrl(context, uri);
+                Intents.showMoPubBrowserForUrl(context, uri, creativeId);
             }
         }
     },
@@ -162,13 +170,15 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             Preconditions.checkNotNull(uri);
-            return "mopubshare".equals(uri.getScheme()) && "tweet".equals(uri.getHost());
+            return "mopubshare".equalsIgnoreCase(uri.getScheme())
+                    && "tweet".equalsIgnoreCase(uri.getHost());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             Preconditions.checkNotNull(context);
             Preconditions.checkNotNull(uri);
@@ -194,7 +204,8 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
 
             // 1. Parse the URL as a valid deeplink+
@@ -214,7 +225,7 @@ protected void performAction(
                 fallbackTrackingUrls = uri.getQueryParameters("fallbackTrackingUrl");
             } catch (UnsupportedOperationException e) {
                 // If the URL is not hierarchical, getQueryParameter[s] will throw
-                // UnsupportedOperationException (see http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+                // UnsupportedOperationException (see https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
                 throw new IntentNotResolvableException("Deeplink+ URL was not a hierarchical" +
                         " URI.");
             }
@@ -262,14 +273,14 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            final String host = uri.getHost();
-            return !TextUtils.isEmpty(scheme) && !TextUtils.isEmpty(host);
+            return !TextUtils.isEmpty(scheme);
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             Intents.launchApplicationUrl(context, uri);
         }
@@ -285,7 +296,8 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable final String creativeId)
                 throws IntentNotResolvableException { }
     };
 
@@ -293,14 +305,15 @@ public void handleUrl(
             UrlHandler urlHandler,
             @NonNull final Context context,
             @NonNull final Uri destinationUri,
-            final boolean fromUserInteraction)
+            final boolean fromUserInteraction,
+            @Nullable String creativeId)
             throws IntentNotResolvableException {
         MoPubLog.d("Ad event URL: " + destinationUri);
         if (mRequiresUserInteraction && !fromUserInteraction) {
             throw new IntentNotResolvableException("Attempted to handle action without user " +
                     "interaction.");
         } else {
-            performAction(context, destinationUri, urlHandler);
+            performAction(context, destinationUri, urlHandler, creativeId);
         }
     }
 
@@ -314,6 +327,7 @@ public void handleUrl(
 
     protected abstract void performAction(
             @NonNull final Context context, @NonNull final Uri uri,
-            @NonNull final UrlHandler urlHandler)
+            @NonNull final UrlHandler urlHandler,
+            @Nullable String creativeId)
             throws IntentNotResolvableException;
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java b/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
index 74abd946..599dd1c8 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
@@ -68,6 +68,7 @@ void urlHandlingFailed(@NonNull final String url,
         @NonNull
         private MoPubSchemeListener moPubSchemeListener = EMPTY_MOPUB_SCHEME_LISTENER;
         private boolean skipShowMoPubBrowser = false;
+        @Nullable private String creativeId;
 
         /**
          * Sets the {@link UrlAction}s to support in the {@code UrlHandler} to build.
@@ -122,7 +123,7 @@ public Builder withMoPubSchemeListener(
 
         /**
          * If called, will avoid starting a {@link MoPubBrowser} activity where applicable.
-         * (see {@link Intents#showMoPubBrowserForUrl(Context, Uri)})
+         * (see {@link Intents#showMoPubBrowserForUrl(Context, Uri, String)})
          *
          * @return A {@link Builder} that will skip starting a {@code MoPubBrowser}.
          */
@@ -131,6 +132,16 @@ public Builder withoutMoPubBrowser() {
             return this;
         }
 
+        /**
+         * Sets the creativeId for the ad associated with this URL
+         *
+         * @return A {@link Builder} that knows the creativeID for the ad.
+         */
+        public Builder withDspCreativeId(@Nullable final String creativeId) {
+            this.creativeId = creativeId;
+            return this;
+        }
+
         /**
          * Creates an immutable {@link UrlHandler} with the desired configuration, according to the
          * other {@link Builder} methods called before.
@@ -139,7 +150,7 @@ public Builder withoutMoPubBrowser() {
          */
         public UrlHandler build() {
             return new UrlHandler(supportedUrlActions, resultActions, moPubSchemeListener,
-                    skipShowMoPubBrowser);
+                    skipShowMoPubBrowser, creativeId);
         }
     }
 
@@ -165,6 +176,7 @@ public void urlHandlingFailed(@NonNull String url, @NonNull UrlAction lastFailed
     private ResultActions mResultActions;
     @NonNull
     private MoPubSchemeListener mMoPubSchemeListener;
+    @Nullable private String mDspCreativeId;
     private boolean mSkipShowMoPubBrowser;
     private boolean mAlreadySucceeded;
     private boolean mTaskPending;
@@ -176,11 +188,13 @@ private UrlHandler(
             @NonNull final EnumSet<UrlAction> supportedUrlActions,
             @NonNull final ResultActions resultActions,
             @NonNull final MoPubSchemeListener moPubSchemeListener,
-            final boolean skipShowMoPubBrowser) {
+            final boolean skipShowMoPubBrowser,
+            @Nullable final String dspCreativeId) {
         mSupportedUrlActions = EnumSet.copyOf(supportedUrlActions);
         mResultActions = resultActions;
         mMoPubSchemeListener = moPubSchemeListener;
         mSkipShowMoPubBrowser = skipShowMoPubBrowser;
+        mDspCreativeId = dspCreativeId;
         mAlreadySucceeded = false;
         mTaskPending = false;
     }
@@ -295,7 +309,7 @@ public boolean handleResolvedUrl(@NonNull final Context context,
             if (urlAction.shouldTryHandlingUrl(destinationUri)) {
                 try {
                     urlAction.handleUrl(UrlHandler.this, context, destinationUri,
-                            fromUserInteraction);
+                            fromUserInteraction, mDspCreativeId);
                     if (!mAlreadySucceeded && !mTaskPending
                             && !UrlAction.IGNORE_ABOUT_SCHEME.equals(urlAction)
                             && !UrlAction.HANDLE_MOPUB_SCHEME.equals(urlAction)) {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java b/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
index 823f39c2..c2163480 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
@@ -5,10 +5,13 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.AsyncTasks;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
+import java.net.URI;
+import java.net.URISyntaxException;
 import java.net.URL;
 
 @VisibleForTesting
@@ -63,13 +66,16 @@ protected String doInBackground(@Nullable String... urls) {
 
         } catch (IOException e) {
             return null;
+        } catch (URISyntaxException e) {
+            return null;
         }
 
         return previousUrl;
     }
 
     @Nullable
-    private String getRedirectLocation(@NonNull final String urlString) throws IOException {
+    private String getRedirectLocation(@NonNull final String urlString) throws IOException,
+            URISyntaxException {
         final URL url = new URL(urlString);
 
         HttpURLConnection httpUrlConnection = null;
@@ -77,13 +83,7 @@ private String getRedirectLocation(@NonNull final String urlString) throws IOExc
             httpUrlConnection = (HttpURLConnection) url.openConnection();
             httpUrlConnection.setInstanceFollowRedirects(false);
 
-            int responseCode = httpUrlConnection.getResponseCode();
-
-            if (responseCode >= 300 && responseCode < 400) {
-                return httpUrlConnection.getHeaderField("Location");
-            } else {
-                return null;
-            }
+            return resolveRedirectLocation(urlString, httpUrlConnection);
         } finally {
             if (httpUrlConnection != null) {
                 httpUrlConnection.disconnect();
@@ -91,6 +91,29 @@ private String getRedirectLocation(@NonNull final String urlString) throws IOExc
         }
     }
 
+    @VisibleForTesting
+    @Nullable
+    static String resolveRedirectLocation(@NonNull final String baseUrl,
+            @NonNull final HttpURLConnection httpUrlConnection) throws IOException, URISyntaxException {
+        final URI baseUri = new URI(baseUrl);
+        final int responseCode = httpUrlConnection.getResponseCode();
+        final String redirectUrl = httpUrlConnection.getHeaderField("Location");
+        String result = null;
+
+        if (responseCode >= 300 && responseCode < 400) {
+            try {
+                // If redirectUrl is a relative path, then resolve() will correctly complete the path;
+                // otherwise, resolve() will return the redirectUrl
+                result =  baseUri.resolve(redirectUrl).toString();
+            } catch (IllegalArgumentException e) {
+                // Ensure the request is cancelled instead of resolving an intermediary URL
+                throw new URISyntaxException(redirectUrl, "Unable to parse invalid URL");
+            }
+        }
+
+        return result;
+    }
+
     @Override
     protected void onPostExecute(@Nullable final String resolvedUrl) {
         super.onPostExecute(resolvedUrl);
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java b/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
index 3e89e7f4..5571fc30 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
@@ -13,12 +13,12 @@
 
 public abstract class BaseEvent {
 
-    public static enum ScribeCategory {
+    public enum ScribeCategory {
         EXCHANGE_CLIENT_EVENT("exchange_client_event"),
         EXCHANGE_CLIENT_ERROR("exchange_client_error");
 
         @NonNull private final String mScribeCategory;
-        private ScribeCategory(@NonNull String scribeCategory) {
+        ScribeCategory(@NonNull String scribeCategory) {
             mScribeCategory = scribeCategory;
         }
 
@@ -28,13 +28,13 @@ public String getCategory() {
         }
     }
 
-    public static enum SdkProduct {
+    public enum SdkProduct {
         NONE(0),
         WEB_VIEW(1),
         NATIVE(2);
 
         private final int mType;
-        private SdkProduct(int type) {
+        SdkProduct(int type) {
             mType = type;
         }
 
@@ -43,14 +43,14 @@ public int getType() {
         }
     }
 
-    public static enum AppPlatform {
+    public enum AppPlatform {
         NONE(0),
         IOS(1),
         ANDROID(2),
         MOBILE_WEB(3);
 
         private final int mType;
-        private AppPlatform(int type) {
+        AppPlatform(int type) {
             mType = type;
         }
 
@@ -60,18 +60,25 @@ public int getType() {
     }
 
     public enum Name {
+        // Ad Requests:
         AD_REQUEST("ad_request"),
         IMPRESSION_REQUEST("impression_request"),
         CLICK_REQUEST("click_request"),
+
+        // Native Video:
         DOWNLOAD_START("download_start"),
         DOWNLOAD_VIDEO_READY("download_video_ready"),
         DOWNLOAD_BUFFERING("download_video_buffering"),
         DOWNLOAD_FINISHED("download_finished"),
         ERROR_DURING_PLAYBACK("error_during_playback"),
-        ERROR_FAILED_TO_PLAY("error_failed_to_play");
+        ERROR_FAILED_TO_PLAY("error_failed_to_play"),
+
+        // Ad Interactions
+        AD_DWELL_TIME("clickthrough_dwell_time"),
+        ;
 
         @NonNull private final String mName;
-        private Name(@NonNull String name) {
+        Name(@NonNull String name) {
             mName = name;
         }
 
@@ -83,10 +90,12 @@ public String getName() {
 
     public enum Category {
         REQUESTS("requests"),
-        NATIVE_VIDEO("native_video");
+        NATIVE_VIDEO("native_video"),
+        AD_INTERACTIONS("ad_interactions"),
+        ;
 
         @NonNull private final String mCategory;
-        private Category(@NonNull String category) {
+        Category(@NonNull String category) {
             mCategory = category;
         }
 
@@ -98,10 +107,12 @@ public String getCategory() {
 
     public enum SamplingRate {
         AD_REQUEST(0.1),
-        NATIVE_VIDEO(0.1);
+        NATIVE_VIDEO(0.1),
+        AD_INTERACTIONS(0.1),
+        ;
 
         private final double mSamplingRate;
-        private SamplingRate(double samplingRate) {
+        SamplingRate(double samplingRate) {
             mSamplingRate = samplingRate;
         }
 
@@ -120,6 +131,7 @@ public double getSamplingRate() {
     @Nullable private final String mAdNetworkType;
     @Nullable private final Double mAdWidthPx;
     @Nullable private final Double mAdHeightPx;
+    @Nullable private final String mDspCreativeId;
     @Nullable private final Integer mDeviceScreenWidthDip;
     @Nullable private final Integer mDeviceScreenHeightDip;
     @Nullable private final Double mGeoLat;
@@ -158,6 +170,7 @@ public BaseEvent(@NonNull final Builder builder) {
         mAdNetworkType = builder.mAdNetworkType;
         mAdWidthPx = builder.mAdWidthPx;
         mAdHeightPx = builder.mAdHeightPx;
+        mDspCreativeId = builder.mDspCreativeId;
         mGeoLat = builder.mGeoLat;
         mGeoLon = builder.mGeoLon;
         mGeoAccuracy = builder.mGeoAccuracy;
@@ -229,6 +242,11 @@ public String getAdCreativeId() {
         return mAdCreativeId;
     }
 
+    @Nullable
+    public String getDspCreativeId() {
+        return mDspCreativeId;
+    }
+
     @Nullable
     public String getAdType() {
         return mAdType;
@@ -415,6 +433,7 @@ public String toString() {
                 "AdNetworkType: " + getAdNetworkType() + "\n" +
                 "AdWidthPx: " + getAdWidthPx() + "\n" +
                 "AdHeightPx: " + getAdHeightPx() + "\n" +
+                "DspCreativeId: " + getDspCreativeId() + "\n" +
                 "AppPlatform: " + getAppPlatform() + "\n" +
                 "AppName: " + getAppName() + "\n" +
                 "AppPackageName: " + getAppPackageName() + "\n" +
@@ -455,6 +474,7 @@ public String toString() {
         @Nullable private String mAdNetworkType;
         @Nullable private Double mAdWidthPx;
         @Nullable private Double mAdHeightPx;
+        @Nullable private String mDspCreativeId;
         @Nullable private Double mGeoLat;
         @Nullable private Double mGeoLon;
         @Nullable private Double mGeoAccuracy;
@@ -526,6 +546,12 @@ public Builder withAdHeightPx(@Nullable Double adHeightPx) {
             return this;
         }
 
+        @NonNull
+        public Builder withDspCreativeId(@Nullable String dspCreativeId) {
+            mDspCreativeId = dspCreativeId;
+            return this;
+        }
+
         @NonNull
         public Builder withGeoLat(@Nullable Double geoLat) {
             mGeoLat = geoLat;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java b/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
index efaa5515..e24dea37 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
@@ -4,5 +4,5 @@
  * This interface represents a backend to which MoPub client events are logged.
  */
 public interface EventRecorder {
-    public void record(BaseEvent baseEvent);
+    void record(BaseEvent baseEvent);
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java b/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
index 94cf7c31..b91c95cd 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
@@ -74,6 +74,7 @@ public JSONObject serializeAsJson(@NonNull BaseEvent event) throws JSONException
         jsonObject.put("ad_network_type", event.getAdNetworkType());
         jsonObject.put("ad_width_px", event.getAdWidthPx());
         jsonObject.put("ad_height_px", event.getAdHeightPx());
+        jsonObject.put("dsp_creative_id", event.getDspCreativeId());
 
         // App Details
         BaseEvent.AppPlatform appPlatform = event.getAppPlatform();
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java b/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
index 47406b98..ed4142da 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
@@ -13,9 +13,9 @@
 import android.net.NetworkInfo;
 import android.os.Build;
 import android.os.StatFs;
-import android.provider.Settings;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v4.content.ContextCompat;
 import android.util.DisplayMetrics;
 import android.view.Display;
 import android.view.Surface;
@@ -25,20 +25,14 @@
 import com.mopub.common.Preconditions;
 import com.mopub.common.logging.MoPubLog;
 
-import org.apache.http.conn.util.InetAddressUtils;
-
 import java.io.File;
-import java.net.InetAddress;
-import java.net.NetworkInterface;
 import java.net.SocketException;
-import java.util.Locale;
 
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.Manifest.permission.INTERNET;
 import static com.mopub.common.util.Reflection.MethodBuilder;
 import static com.mopub.common.util.VersionCode.HONEYCOMB;
 import static com.mopub.common.util.VersionCode.currentApiLevel;
-import static java.util.Collections.list;
 
 public class DeviceUtils {
     private static final int MAX_MEMORY_CACHE_SIZE = 30 * 1024 * 1024; // 30 MB
@@ -47,7 +41,7 @@
 
     private DeviceUtils() {}
 
-    public static enum ForceOrientation {
+    public enum ForceOrientation {
         FORCE_PORTRAIT("portrait"),
         FORCE_LANDSCAPE("landscape"),
         DEVICE_ORIENTATION("device"),
@@ -55,7 +49,7 @@ private DeviceUtils() {}
 
         @NonNull private final String mKey;
 
-        private ForceOrientation(@NonNull final String key) {
+        ForceOrientation(@NonNull final String key) {
             mKey = key;
         }
 
@@ -71,64 +65,12 @@ public static ForceOrientation getForceOrientation(@Nullable String key) {
         }
     }
 
-    public static enum IP {
-        IPv4,
-        IPv6;
-
-        private boolean matches(final String address) {
-            switch (this) {
-                case IPv4:
-                    return InetAddressUtils.isIPv4Address(address);
-                case IPv6:
-                    return InetAddressUtils.isIPv6Address(address);
-                default:
-                    return false;
-            }
-        }
-
-        private String toString(final String address) {
-            switch (this) {
-                case IPv4:
-                    return address;
-                case IPv6:
-                    return address.split("%")[0];
-                default:
-                    return null;
-            }
-        }
-    }
-
-    public static String getIpAddress(IP ip) throws SocketException {
-        for (final NetworkInterface networkInterface : list(NetworkInterface.getNetworkInterfaces())) {
-            for (final InetAddress address : list(networkInterface.getInetAddresses())) {
-                if (!address.isLoopbackAddress()) {
-                    String hostAddress = address.getHostAddress().toUpperCase(Locale.US);
-                    if (ip.matches(hostAddress)) {
-                        return ip.toString(hostAddress);
-                    }
-                }
-            }
-        }
-
-        return null;
-    }
-
-    public static String getHashedUdid(final Context context) {
-        if (context == null) {
-            return null;
-        }
-
-        String udid = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
-        return Utils.sha1(udid);
-    }
-
     public static boolean isNetworkAvailable(@Nullable final Context context) {
         if (context == null) {
             return false;
         }
 
-        final int internetPermission = context.checkCallingOrSelfPermission(INTERNET);
-        if (internetPermission == PackageManager.PERMISSION_DENIED) {
+        if (!DeviceUtils.isPermissionGranted(context, INTERNET)) {
             return false;
         }
 
@@ -137,8 +79,7 @@ public static boolean isNetworkAvailable(@Nullable final Context context) {
          * It's possible to not have permission to check network state but still be able
          * to access the network itself.
          */
-        final int networkAccessPermission = context.checkCallingOrSelfPermission(ACCESS_NETWORK_STATE);
-        if (networkAccessPermission == PackageManager.PERMISSION_DENIED) {
+        if (!DeviceUtils.isPermissionGranted(context, ACCESS_NETWORK_STATE)) {
             return true;
         }
 
@@ -307,4 +248,37 @@ public static Point getDeviceDimensions(@NonNull final Context context) {
 
         return new Point(bestWidthPixels, bestHeightPixels);
     }
+
+    public static boolean isPermissionGranted(@NonNull final Context context,
+            @NonNull final String permission) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(permission);
+
+        return ContextCompat.checkSelfPermission(context, permission) ==
+                PackageManager.PERMISSION_GRANTED;
+    }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    public enum IP { IPv4, IPv6 }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    @Nullable
+    public static String getIpAddress(IP ip) throws SocketException {
+        return null;
+    }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    @Nullable
+    public static String getHashedUdid(final Context context) {
+        return null;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java b/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
index d1ae9267..652bf750 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
@@ -36,7 +36,7 @@
     // multiple views.
     private Bitmap cachedBitmap;
 
-    private Drawables(final String encodedString) {
+    Drawables(final String encodedString) {
         this.encodedString = encodedString;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java b/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
index 267a9bbf..90e7f16a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
@@ -46,8 +46,8 @@ public static Bitmap applyFastGaussianBlurToBitmap(@NonNull Bitmap mutableBitmap
 
     /**
      * Sets the alpha value of the ImageView.
-     * API Level < 16: http://developer.android.com/reference/android/widget/ImageView.html#setAlpha(int)
-     * API Level >= 16: http://developer.android.com/reference/android/widget/ImageView.html#setImageAlpha(int)
+     * API Level < 16: https://developer.android.com/reference/android/widget/ImageView.html#setAlpha(int)
+     * API Level >= 16: https://developer.android.com/reference/android/widget/ImageView.html#setImageAlpha(int)
      * @param imageView the ImageView
      * @param alpha the alpha value being applied to the ImageView
      */
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java b/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
index ba776d4f..79706c6c 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
@@ -19,7 +19,6 @@
 import com.mopub.exceptions.IntentNotResolvableException;
 import com.mopub.exceptions.UrlParseException;
 
-import java.util.EnumSet;
 import java.util.List;
 
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
@@ -99,7 +98,7 @@ public static boolean canHandleApplicationUrl(final Context context, final Uri u
     /**
      * Native Browser Scheme URLs provide a means for advertisers to include links that click out to
      * an external browser, rather than the MoPub in-app browser. Properly formatted native browser
-     * URLs take the form of "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com".
+     * URLs take the form of "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com".
      *
      * @param uri The Native Browser Scheme URL to open in the external browser.
      * @return An Intent that will open an app-external browser taking the user to a page specified
@@ -123,7 +122,7 @@ public static Intent intentForNativeBrowserScheme(@NonNull final Uri uri)
             urlToOpenInNativeBrowser = uri.getQueryParameter("url");
         } catch (UnsupportedOperationException e) {
             // Accessing query parameters only makes sense for hierarchical URIs as per:
-            // http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+            // https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
             MoPubLog.w("Could not handle url: " + uri);
             throw new UrlParseException("Passed-in URL did not create a hierarchical URI.");
         }
@@ -174,7 +173,7 @@ public static Intent intentForShareTweet(@NonNull final Uri uri)
             tweetId = uri.getQueryParameter("tweet_id");
         } catch (UnsupportedOperationException e) {
             // Accessing query parameters only makes sense for hierarchical URIs as per:
-            // http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+            // https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
             MoPubLog.w("Could not handle url: " + uri);
             throw new UrlParseException("Passed-in URL did not create a hierarchical URI.");
         }
@@ -208,7 +207,8 @@ public static Intent intentForShareTweet(@NonNull final Uri uri)
      * @param uri The URL to load in the started {@link MoPubBrowser} activity.
      */
     public static void showMoPubBrowserForUrl(@NonNull final Context context,
-            @NonNull Uri uri)
+            @NonNull Uri uri,
+            @Nullable String dspCreativeId)
             throws IntentNotResolvableException {
         Preconditions.checkNotNull(context);
         Preconditions.checkNotNull(uri);
@@ -217,6 +217,9 @@ public static void showMoPubBrowserForUrl(@NonNull final Context context,
 
         final Bundle extras = new Bundle();
         extras.putString(MoPubBrowser.DESTINATION_URL_KEY, uri.toString());
+        if (!TextUtils.isEmpty(dspCreativeId)) {
+            extras.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+        }
         Intent intent = getStartActivityIntent(context, MoPubBrowser.class, extras);
 
         String errorMessage = "Could not show MoPubBrowser for url: " + uri + "\n\tPerhaps you " +
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java b/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
index aaf7b4bf..08b4306e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
@@ -123,7 +123,7 @@ public static boolean isDebuggable(@NonNull final Context context) {
      * Filters in activities to be returned based on matching their declaration state
      * in the Android Manifest with the isDeclared param.
      *
-     * @param context
+     * @param context the context
      * @param requiredActivities activities to filter against
      * @param isDeclared desired declaration state of activities in Android Manifest to be returned
      * @return the list of filtered in activities
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java b/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
index 3efa8598..658d5948 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
@@ -102,6 +102,7 @@ public static boolean classFound(final String className) {
         Preconditions.checkNotNull(className);
 
         final Class<? extends T> clazz = Class.forName(className).asSubclass(superclass);
+        // noinspection unchecked
         final Constructor<? extends T> constructor = clazz.getDeclaredConstructor((Class[]) null);
         constructor.setAccessible(true);
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
index 93a0f227..3d77a7e3 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
@@ -7,6 +7,7 @@
     CUSTOM_EVENT_DATA("X-Custom-Event-Class-Data"),
     CUSTOM_EVENT_NAME("X-Custom-Event-Class-Name"),
     CUSTOM_EVENT_HTML_DATA("X-Custom-Event-Html-Data"),
+    CREATIVE_ID("X-CreativeId"),
     DSP_CREATIVE_ID("X-DspCreativeid"),
     FAIL_URL("X-Failurl"),
     FULL_AD_TYPE("X-Fulladtype"),
@@ -35,7 +36,7 @@
     @Deprecated CUSTOM_SELECTOR("X-Customselector");
 
     private final String key;
-    private ResponseHeader(String key) {
+    ResponseHeader(String key) {
         this.key = key;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java b/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
index b53c4de3..f3125176 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
@@ -3,7 +3,7 @@
 import java.util.concurrent.TimeUnit;
 
 public class Timer {
-    private static enum State { STARTED, STOPPED }
+    private enum State { STARTED, STOPPED }
     private long mStopTimeNanos;
     private long mStartTimeNanos;
     private State mState;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java b/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
index c4b620de..cc5f9e5b 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
@@ -1,7 +1,5 @@
 package com.mopub.common.util;
 
-import com.mopub.common.VisibleForTesting;
-
 import java.security.MessageDigest;
 import java.util.Locale;
 import java.util.concurrent.atomic.AtomicLong;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java b/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
index 606b3782..fee8713e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
+++ b/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
@@ -39,7 +39,7 @@ private static VersionCode forApiLevel(int targetApiLevel) {
         return CUR_DEVELOPMENT;
     }
 
-    private VersionCode(int apiLevel) {
+    VersionCode(int apiLevel) {
         this.mApiLevel = apiLevel;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java
deleted file mode 100644
index 3b0e073c..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package com.mopub.mobileads;
-
-import android.support.annotation.Nullable;
-import android.text.TextUtils;
-
-import com.mopub.common.VisibleForTesting;
-import com.mopub.common.logging.MoPubLog;
-import com.mopub.network.AdResponse;
-
-import java.lang.ref.WeakReference;
-import java.util.Map;
-
-abstract class AdLoader {
-
-    WeakReference<AdViewController> mWeakAdViewController;
-    AdLoader(AdViewController adViewController) {
-        mWeakAdViewController = new WeakReference<AdViewController>(adViewController);
-    }
-
-    abstract void load();
-
-    @Nullable
-    static AdLoader fromAdResponse(AdResponse response, AdViewController adViewController) {
-        MoPubLog.i("Performing custom event.");
-
-        // If applicable, try to invoke the new custom event system (which uses custom classes)
-        String adTypeCustomEventName = response.getCustomEventClassName();
-        if (adTypeCustomEventName != null) {
-            Map<String, String> customEventData = response.getServerExtras();
-            return new CustomEventAdLoader(adViewController, adTypeCustomEventName, customEventData);
-        }
-
-        MoPubLog.i("Failed to create custom event.");
-        return null;
-    }
-
-    static class CustomEventAdLoader extends AdLoader {
-        private String mCustomEventClassName;
-        private Map<String,String> mServerExtras;
-
-        public CustomEventAdLoader(AdViewController adViewController,
-                String customEventCLassName,
-                Map<String, String> serverExtras) {
-            super(adViewController);
-            mCustomEventClassName = customEventCLassName;
-            mServerExtras = serverExtras;
-        }
-
-        @Override
-        void load() {
-            AdViewController adViewController = mWeakAdViewController.get();
-            if (adViewController == null
-                    || adViewController.isDestroyed()
-                    || TextUtils.isEmpty(mCustomEventClassName)) {
-                return;
-            }
-            adViewController.setNotLoading();
-
-            final MoPubView moPubView = adViewController.getMoPubView();
-            if (moPubView == null) {
-                MoPubLog.d("Can't load an ad in this ad view because it was destroyed.");
-                return;
-            }
-            moPubView.loadCustomEvent(mCustomEventClassName, mServerExtras);
-        }
-
-        @VisibleForTesting
-        Map<String, String> getServerExtras() {
-            return mServerExtras;
-        }
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
index b7968b90..a2e3c9f2 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -1,7 +1,6 @@
 package com.mopub.mobileads;
 
 import android.content.Context;
-import android.content.pm.PackageManager;
 import android.location.Location;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
@@ -17,6 +16,7 @@
 import com.mopub.common.AdReport;
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.Constants;
+import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.event.BaseEvent;
 import com.mopub.common.logging.MoPubLog;
@@ -53,18 +53,13 @@
 
     private final long mBroadcastIdentifier;
 
-    @Nullable
-    private Context mContext;
-    @Nullable
-    private MoPubView mMoPubView;
-    @Nullable
-    private WebViewAdUrlGenerator mUrlGenerator;
+    @Nullable private Context mContext;
+    @Nullable private MoPubView mMoPubView;
+    @Nullable private WebViewAdUrlGenerator mUrlGenerator;
 
-    @Nullable
-    private AdResponse mAdResponse;
+    @Nullable private AdResponse mAdResponse;
     private final Runnable mRefreshRunnable;
-    @NonNull
-    private final AdRequest.Listener mAdListener;
+    @NonNull private final AdRequest.Listener mAdListener;
 
     private boolean mIsDestroyed;
     private Handler mHandler;
@@ -82,13 +77,10 @@
     private Location mLocation;
     private boolean mIsTesting;
     private boolean mAdWasLoaded;
-    @Nullable
-    private String mAdUnitId;
+    @Nullable private String mAdUnitId;
     private int mTimeoutMilliseconds;
-    @Nullable
-    private AdRequest mActiveRequest;
-    @Nullable
-    private Integer mRefreshTimeMillis;
+    @Nullable private AdRequest mActiveRequest;
+    @Nullable private Integer mRefreshTimeMillis;
 
     public static void setShouldHonorServerDimensions(View view) {
         sViewShouldHonorServerDimensions.put(view, true);
@@ -102,7 +94,7 @@ public AdViewController(@NonNull Context context, @NonNull MoPubView view) {
         mContext = context;
         mMoPubView = view;
 
-        // Default timeout means "never refresh"
+        // Timeout value of less than 0 means use the ad format's default timeout
         mTimeoutMilliseconds = -1;
         mBroadcastIdentifier = Utils.generateUniqueId();
 
@@ -141,11 +133,9 @@ void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
         mRefreshTimeMillis = mAdResponse.getRefreshTimeMillis();
         setNotLoading();
 
-        // Get our custom event from the ad response and load into the view.
-        AdLoader adLoader = AdLoader.fromAdResponse(mAdResponse, this);
-        if (adLoader != null) {
-            adLoader.load();
-        }
+        loadCustomEvent(mMoPubView, adResponse.getCustomEventClassName(),
+                adResponse.getServerExtras());
+
         scheduleRefreshTimerIfEnabled();
     }
 
@@ -173,6 +163,20 @@ void onAdLoadError(final VolleyError error) {
         adDidFail(errorCode);
     }
 
+    @VisibleForTesting
+    void loadCustomEvent(@Nullable final MoPubView moPubView,
+            @Nullable final String customEventClassName,
+            @NonNull final Map<String, String> serverExtras) {
+        Preconditions.checkNotNull(serverExtras);
+
+        if (moPubView == null) {
+            MoPubLog.d("Can't load an ad in this ad view because it was destroyed.");
+            return;
+        }
+
+        moPubView.loadCustomEvent(customEventClassName, serverExtras);
+    }
+
     @VisibleForTesting
     @NonNull
     static MoPubErrorCode getErrorCodeFromVolleyError(@NonNull final VolleyError error,
@@ -308,10 +312,6 @@ public long getBroadcastIdentifier() {
         return mBroadcastIdentifier;
     }
 
-    public void setTimeout(int milliseconds) {
-       mTimeoutMilliseconds = milliseconds;
-    }
-
     public int getAdWidth() {
         if (mAdResponse != null && mAdResponse.getWidth() != null) {
             return mAdResponse.getWidth();
@@ -409,7 +409,7 @@ void cleanup() {
     }
 
     Integer getAdTimeoutDelay() {
-        return mAdResponse == null ? null : mAdResponse.getAdTimeoutMillis();
+        return mTimeoutMilliseconds;
     }
 
     void trackImpression() {
@@ -507,8 +507,9 @@ private boolean isNetworkAvailable() {
             return false;
         }
         // If we don't have network state access, just assume the network is up.
-        int result = mContext.checkCallingPermission(ACCESS_NETWORK_STATE);
-        if (result == PackageManager.PERMISSION_DENIED) return true;
+        if (!DeviceUtils.isPermissionGranted(mContext, ACCESS_NETWORK_STATE)) {
+            return true;
+        }
 
         // Otherwise, perform the connectivity check.
         ConnectivityManager cm
@@ -520,7 +521,7 @@ private boolean isNetworkAvailable() {
     void setAdContentView(final View view) {
         // XXX: This method is called from the WebViewClient's callbacks, which has caused an error on a small portion of devices
         // We suspect that the code below may somehow be running on the wrong UI Thread in the rare case.
-        // see: http://stackoverflow.com/questions/10426120/android-got-calledfromwrongthreadexception-in-onpostexecute-how-could-it-be
+        // see: https://stackoverflow.com/questions/10426120/android-got-calledfromwrongthreadexception-in-onpostexecute-how-could-it-be
         mHandler.post(new Runnable() {
             @Override
             public void run() {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
index 6af45e32..0710d7dc 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
@@ -8,6 +8,7 @@
 import com.mopub.common.AdReport;
 import com.mopub.common.Constants;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.util.VersionCode.ICE_CREAM_SANDWICH;
 import static com.mopub.common.util.VersionCode.currentApiLevel;
@@ -55,8 +56,8 @@ private void disableScrollingAndZoom() {
     }
 
     void loadHtmlResponse(String htmlResponse) {
-        loadDataWithBaseURL("http://" + Constants.HOST + "/", htmlResponse, "text/html", "utf-8",
-                null);
+        loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/", htmlResponse,
+                "text/html", "utf-8", null);
     }
 
     void initializeOnTouchListener(final boolean isScrollable) {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
index a9331a31..9451faf6 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
@@ -33,6 +33,22 @@ public BaseWebView(Context context) {
             clearWebViewDeadlock(getContext());
             sDeadlockCleared = true;
         }
+
+        /*
+         * Disabling file access and content access prevents advertising creatives from
+         * detecting the presence of, or reading, files on the device filesystem.
+         */
+
+        getSettings().setAllowFileAccess(false);
+
+        if (VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {
+            getSettings().setAllowContentAccess(false);
+        }
+
+        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
+            getSettings().setAllowFileAccessFromFileURLs(false);
+            getSettings().setAllowUniversalAccessFromFileURLs(false);
+        }
     }
 
     protected void enablePlugins(final boolean enabled) {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
index 60f3e6b3..a261bd64 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
@@ -82,9 +82,7 @@ void loadAd() {
             return;
         }
 
-        if (getTimeoutDelayMilliseconds() > 0) {
-            mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
-        }
+        mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
 
         // Custom event classes can be developed by any third party and may not be tested.
         // We catch all exceptions here to prevent crashes from untested code.
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
index 740ec3c4..47feb16c 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
@@ -75,9 +75,7 @@ void loadInterstitial() {
             return;
         }
 
-        if (getTimeoutDelayMilliseconds() > 0) {
-            mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
-        }
+        mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
 
         // Custom event classes can be developed by any third party and may not be tested.
         // We catch all exceptions here to prevent crashes from untested code.
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
index ec9edbb4..24f41d80 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
@@ -61,8 +61,8 @@
      * be loaded.
      *
      * @param launcherActivity the "main activity" of the app. Useful for initializing sdks.
-     * @param localExtras
-     * @param serverExtras
+     * @param localExtras a map containing additional custom data set in app
+     * @param serverExtras a map containing additional custom data configurable on the mopub website
      */
     final void loadCustomEvent(@NonNull Activity launcherActivity,
             @NonNull Map<String, Object> localExtras,
@@ -101,8 +101,8 @@ protected abstract boolean checkAndInitializeSdk(@NonNull Activity launcherActiv
      * (onAdLoadSuccess, etc). Instead the SDK delegate/listener should call these methods.
      *
      * @param activity the "main activity" of the app. Useful for initializing sdks.
-     * @param localExtras
-     * @param serverExtras
+     * @param localExtras a map containing additional custom data set in app
+     * @param serverExtras a map containing additional custom data configurable on the mopub website
      */
     protected abstract void loadWithSdkInitialized(@NonNull Activity activity,
             @NonNull Map<String, Object> localExtras,
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
index 358ea16c..3d847393 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
@@ -13,10 +13,10 @@ public HtmlBannerWebView(Context context, AdReport adReport) {
         super(context, adReport);
     }
 
-    public void init(CustomEventBannerListener customEventBannerListener, boolean isScrollable, String redirectUrl, String clickthroughUrl) {
+    public void init(CustomEventBannerListener customEventBannerListener, boolean isScrollable, String redirectUrl, String clickthroughUrl, String dspCreativeId) {
         super.init(isScrollable);
 
-        setWebViewClient(new HtmlWebViewClient(new HtmlBannerWebViewListener(customEventBannerListener), this, clickthroughUrl, redirectUrl));
+        setWebViewClient(new HtmlWebViewClient(new HtmlBannerWebViewListener(customEventBannerListener), this, clickthroughUrl, redirectUrl, dspCreativeId));
     }
 
     static class HtmlBannerWebViewListener implements HtmlWebViewListener {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
index 78795c1b..fb3762c0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
@@ -16,11 +16,11 @@ public HtmlInterstitialWebView(Context context, AdReport adReport) {
         mHandler = new Handler();
     }
 
-    public void init(final CustomEventInterstitialListener customEventInterstitialListener, boolean isScrollable, String redirectUrl, String clickthroughUrl) {
+    public void init(final CustomEventInterstitialListener customEventInterstitialListener, boolean isScrollable, String redirectUrl, String clickthroughUrl, String dspCreativeId) {
         super.init(isScrollable);
 
         HtmlInterstitialWebViewListener htmlInterstitialWebViewListener = new HtmlInterstitialWebViewListener(customEventInterstitialListener);
-        HtmlWebViewClient htmlWebViewClient = new HtmlWebViewClient(htmlInterstitialWebViewListener, this, clickthroughUrl, redirectUrl);
+        HtmlWebViewClient htmlWebViewClient = new HtmlWebViewClient(htmlInterstitialWebViewListener, this, clickthroughUrl, redirectUrl, dspCreativeId);
         setWebViewClient(htmlWebViewClient);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
index 35e56469..0ee54d20 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
@@ -33,22 +33,27 @@
             UrlAction.FOLLOW_DEEP_LINK);
 
     private final Context mContext;
+    private final String mDspCreativeId;
     private HtmlWebViewListener mHtmlWebViewListener;
     private BaseHtmlWebView mHtmlWebView;
     private final String mClickthroughUrl;
     private final String mRedirectUrl;
 
-    HtmlWebViewClient(HtmlWebViewListener htmlWebViewListener, BaseHtmlWebView htmlWebView, String clickthrough, String redirect) {
+    HtmlWebViewClient(HtmlWebViewListener htmlWebViewListener,
+            BaseHtmlWebView htmlWebView, String clickthrough,
+            String redirect, String dspCreativeId) {
         mHtmlWebViewListener = htmlWebViewListener;
         mHtmlWebView = htmlWebView;
         mClickthroughUrl = clickthrough;
         mRedirectUrl = redirect;
+        mDspCreativeId = dspCreativeId;
         mContext = htmlWebView.getContext();
     }
 
     @Override
     public boolean shouldOverrideUrlLoading(final WebView view, final String url) {
         new UrlHandler.Builder()
+                .withDspCreativeId(mDspCreativeId)
                 .withSupportedUrlActions(SUPPORTED_URL_ACTIONS)
                 .withResultActions(new UrlHandler.ResultActions() {
                     @Override
@@ -92,7 +97,7 @@ public void onPageStarted(WebView view, String url, Bitmap favicon) {
             view.stopLoading();
             if (mHtmlWebView.wasClicked()) {
                 try {
-                    Intents.showMoPubBrowserForUrl(mContext, Uri.parse(url));
+                    Intents.showMoPubBrowserForUrl(mContext, Uri.parse(url), mDspCreativeId);
                 } catch (IntentNotResolvableException e) {
                     MoPubLog.d(e.getMessage());
                 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
index cc285b42..0dfbc4c7 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.location.Location;
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.NonNull;
@@ -11,9 +12,7 @@
 import com.mopub.common.AdUrlGenerator;
 import com.mopub.common.Constants;
 import com.mopub.common.DataKeys;
-import com.mopub.common.LocationService;
 import com.mopub.common.MediationSettings;
-import com.mopub.common.MoPub;
 import com.mopub.common.MoPubReward;
 import com.mopub.common.Preconditions;
 import com.mopub.common.logging.MoPubLog;
@@ -36,6 +35,8 @@
 import java.util.TreeMap;
 
 /**
+ * Handles requesting Rewarded Video ads and mapping Rewarded Video SDK settings to the CustomEvent
+ * that is being loaded.
  */
 public class MoPubRewardedVideoManager {
     private static MoPubRewardedVideoManager sInstance;
@@ -74,6 +75,21 @@ public void onErrorResponse(final VolleyError volleyError) {
         }
     }
 
+    public static final class RequestParameters {
+        public final String mKeywords;
+        public final Location mLocation;
+
+        public RequestParameters(final String keywords) {
+            this(keywords, null);
+        }
+
+        public RequestParameters(final String keywords, final Location location) {
+            mKeywords = keywords;
+            mLocation = location;
+        }
+    }
+
+
     private MoPubRewardedVideoManager(@NonNull Activity mainActivity, MediationSettings... mediationSettings) {
         mMainActivity = new WeakReference<Activity>(mainActivity);
         mContext = mainActivity.getApplicationContext();
@@ -180,10 +196,13 @@ public static void setVideoListener(@Nullable MoPubRewardedVideoListener listene
      * method will not make a new request if there is already a video loading for this adUnitId.
      *
      * @param adUnitId MoPub adUnitId String
+     * @param requestParameters Optional RequestParameters object containing keywords and optional location value.
      * @param mediationSettings Optional instance-level MediationSettings to associate with the
      *                          above adUnitId.
      */
-    public static void loadVideo(@NonNull String adUnitId, @Nullable final MediationSettings... mediationSettings) {
+    public static void loadVideo(@NonNull final String adUnitId,
+            @Nullable final RequestParameters requestParameters,
+            @Nullable final MediationSettings... mediationSettings) {
         if (sInstance == null) {
             logErrorNotInitialized();
             return;
@@ -198,13 +217,8 @@ public static void loadVideo(@NonNull String adUnitId, @Nullable final Mediation
 
         final AdUrlGenerator urlGenerator = new WebViewAdUrlGenerator(sInstance.mContext, false);
         final String adUrlString = urlGenerator.withAdUnitId(adUnitId)
-                .withLocation(
-                        LocationService.getLastKnownLocation(
-                                sInstance.mContext,
-                                MoPub.getLocationPrecision(),
-                                MoPub.getLocationAwareness()
-                        )
-                )
+                .withKeywords(requestParameters == null ? null : requestParameters.mKeywords)
+                .withLocation(requestParameters == null ? null : requestParameters.mLocation)
                 .generateUrlString(Constants.HOST);
 
         loadVideo(adUnitId, adUrlString);
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
index 3316ddd2..e57c2971 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -61,14 +61,14 @@ public MoPubView(Context context, AttributeSet attrs) {
         setVerticalScrollBarEnabled(false);
 
         // There is a rare bug in Froyo/2.2 where creation of a WebView causes a
-        // NullPointerException. (http://code.google.com/p/android/issues/detail?id=10789)
+        // NullPointerException. (https://code.google.com/p/android/issues/detail?id=10789)
         // It happens when the WebView can't access the local file store to make a cache file.
         // Here, we'll work around it by trying to create a file store and then just go inert
         // if it's not accessible.
         if (WebViewDatabase.getInstance(context) == null) {
             MoPubLog.e("Disabling MoPub. Local cache file is inaccessible so MoPub will " +
                     "fail if we try to create a WebView. Details of this Android bug found at:" +
-                    "http://code.google.com/p/android/issues/detail?id=10789");
+                    "https://code.google.com/p/android/issues/detail?id=10789");
             return;
         }
 
@@ -270,10 +270,6 @@ public Location getLocation() {
         return (mAdViewController != null) ? mAdViewController.getLocation() : null;
     }
 
-    public void setTimeout(int milliseconds) {
-        if (mAdViewController != null) mAdViewController.setTimeout(milliseconds);
-    }
-
     public int getAdWidth() {
         return (mAdViewController != null) ? mAdViewController.getAdWidth() : 0;
     }
@@ -354,6 +350,13 @@ public AdFormat getAdFormat() {
         return AdFormat.BANNER;
     }
 
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    public void setTimeout(int milliseconds) {
+    }
+
     @Deprecated
     public String getResponseString() {
         return null;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
index 2ae82e8d..d4debbbf 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -24,6 +24,7 @@
 import com.mopub.mraid.MraidController.UseCustomCloseListener;
 import com.mopub.mraid.MraidWebViewDebugListener;
 import com.mopub.mraid.PlacementType;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.DataKeys.AD_REPORT_KEY;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
@@ -67,7 +68,7 @@ public void onReceivedError(final WebView view, final int errorCode,
             }
         });
 
-        dummyWebView.loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        dummyWebView.loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 htmlData, "text/html", "UTF-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
index 6bf820ae..6d269f82 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
@@ -129,7 +129,7 @@ void handleImpression(@NonNull Context context, int contentPlayHead) {
      *                               HTML, or an IFrame.
      */
     void handleClick(@NonNull final Context context, final int requestCode,
-            @Nullable final String webViewClickThroughUrl) {
+            @Nullable final String webViewClickThroughUrl, @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
         Preconditions.checkArgument(context instanceof Activity, "context must be an activity");
 
@@ -157,6 +157,9 @@ public void urlHandlingSucceeded(@NonNull String url,
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY,
                                     url);
+                            if (!TextUtils.isEmpty(dspCreativeId)) {
+                                bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+                            }
 
                             final Class clazz = MoPubBrowser.class;
                             final Intent intent = Intents.getStartActivityIntent(
@@ -175,6 +178,7 @@ public void urlHandlingFailed(@NonNull String url,
                             @NonNull UrlAction lastFailedUrlAction) {
                     }
                 })
+                .withDspCreativeId(dspCreativeId)
                 .withoutMoPubBrowser()
                 .build().handleUrl(context, correctClickThroughUrl);
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
index f216a958..532050bf 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
@@ -6,7 +6,7 @@
 
 /**
  * The various possible error codes for VAST that MoPub supports. See
- * http://www.iab.net/media/file/VASTv3.0.pdf for more information about the error codes.
+ * https://www.iab.net/media/file/VASTv3.0.pdf for more information about the error codes.
  */
 public enum VastErrorCode {
     /**
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
index 73648a27..ebf2cbee 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
@@ -136,7 +136,8 @@ void handleImpression(@NonNull Context context, int contentPlayHead, @NonNull St
      * @param webViewClickThroughUri The click through uri for Javascript, HTML and IFrame resources
      *                               from the WebView
      */
-    void handleClick(@NonNull final Context context, @Nullable String webViewClickThroughUri) {
+    void handleClick(@NonNull final Context context, @Nullable String webViewClickThroughUri,
+            @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
 
 
@@ -159,7 +160,9 @@ public void urlHandlingSucceeded(@NonNull String url,
                         if (urlAction == UrlAction.OPEN_IN_APP_BROWSER) {
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY, url);
-
+                            if (!TextUtils.isEmpty(dspCreativeId)) {
+                                bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+                            }
                             Intent intent = Intents.getStartActivityIntent(
                                     context, MoPubBrowser.class, bundle);
                             try {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
index dd5cf87b..73881485 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
@@ -2,7 +2,7 @@
 
 /**
  * Macros that MoPub supports. This is in the format of [name]. For example, an errorcode macro
- * would show up as "http://www.somesite.com/somemethod?error=[ERRORCODE]"
+ * would show up as "https://www.somesite.com/somemethod?error=[ERRORCODE]"
  */
 enum VastMacro {
     /**
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
index 3478c8f5..2e1e5fcb 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 import android.view.Display;
 import android.view.WindowManager;
 
@@ -19,6 +20,8 @@
  * {@link VastVideoConfig}.
  */
 public class VastManager implements VastXmlManagerAggregator.VastXmlManagerAggregatorListener {
+
+
     /**
      * Users of this class should subscribe to this listener to get updates
      * when a video is found or when no video is available.
@@ -36,6 +39,7 @@
 
     @Nullable private VastManagerListener mVastManagerListener;
     @Nullable private VastXmlManagerAggregator mVastXmlManagerAggregator;
+    @Nullable private String mDspCreativeId;
     private double mScreenAspectRatio;
     private int mScreenAreaDp;
 
@@ -55,6 +59,7 @@ public VastManager(@NonNull final Context context, boolean shouldPreCacheVideo)
      */
     public void prepareVastVideoConfiguration(@Nullable final String vastXml,
             @NonNull final VastManagerListener vastManagerListener,
+            @Nullable String dspCreativeId,
             @NonNull final Context context) {
         Preconditions.checkNotNull(vastManagerListener, "vastManagerListener cannot be null");
         Preconditions.checkNotNull(context, "context cannot be null");
@@ -63,6 +68,7 @@ public void prepareVastVideoConfiguration(@Nullable final String vastXml,
             mVastManagerListener = vastManagerListener;
             mVastXmlManagerAggregator = new VastXmlManagerAggregator(this, mScreenAspectRatio,
                     mScreenAreaDp, context.getApplicationContext());
+            mDspCreativeId = dspCreativeId;
 
             try {
                 AsyncTasks.safeExecuteOnExecutor(mVastXmlManagerAggregator, vastXml);
@@ -96,6 +102,10 @@ public void onAggregationComplete(@Nullable final VastVideoConfig vastVideoConfi
             return;
         }
 
+        if (!TextUtils.isEmpty(mDspCreativeId)) {
+            vastVideoConfig.setDspCreativeId(mDspCreativeId);
+        }
+
         // Return immediately if we already have a cached video or if video precache is not required.
         if (!mShouldPreCacheVideo || updateDiskMediaFileUrl(vastVideoConfig)) {
             mVastManagerListener.onVastVideoConfigurationPrepared(vastVideoConfig);
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
index 299bc3bb..79c7a519 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
@@ -58,12 +58,16 @@
     @NonNull private DeviceUtils.ForceOrientation mCustomForceOrientation = DeviceUtils.ForceOrientation.FORCE_LANDSCAPE; // Default is forcing landscape
     @Nullable private VideoViewabilityTracker mVideoViewabilityTracker;
 
+    // MoPub-specific metadata
+    private String mDspCreativeId;
+
     /**
      * Flag to indicate if the VAST xml document has explicitly set the orientation as opposed to
      * using the default.
      */
     private boolean mIsForceOrientationSet;
 
+
     public VastVideoConfig() {
         mImpressionTrackers = new ArrayList<VastTracker>();
         mFractionalTrackers = new ArrayList<VastFractionalProgressTracker>();
@@ -82,6 +86,14 @@ public VastVideoConfig() {
      * Setters
      */
 
+    public void setDspCreativeId(@NonNull final String dspCreativeId) {
+        mDspCreativeId = dspCreativeId;
+    }
+
+    public String getDspCreativeId() {
+        return mDspCreativeId;
+    }
+
     public void addImpressionTrackers(@NonNull final List<VastTracker> impressionTrackers) {
         Preconditions.checkNotNull(impressionTrackers, "impressionTrackers cannot be null");
         mImpressionTrackers.addAll(impressionTrackers);
@@ -440,6 +452,7 @@ private void handleClick(@NonNull final Context context, final int contentPlayHe
         }
 
         new UrlHandler.Builder()
+                .withDspCreativeId(mDspCreativeId)
                 .withSupportedUrlActions(
                         UrlAction.IGNORE_ABOUT_SCHEME,
                         UrlAction.OPEN_APP_MARKET,
@@ -455,6 +468,7 @@ public void urlHandlingSucceeded(@NonNull String url,
                         if (urlAction == UrlAction.OPEN_IN_APP_BROWSER) {
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY, url);
+                            bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, mDspCreativeId);
 
                             final Class clazz = MoPubBrowser.class;
                             final Intent intent = Intents.getStartActivityIntent(
@@ -636,7 +650,7 @@ public int getRemainingProgressTrackerCount() {
 
     /**
      * Gets the skip offset in milliseconds. If the skip offset would be past the video duration,
-     * this returns null. If an error occurs, this returns null.
+     * this returns the video duration. Returns null when the skip offset is not set or cannot be parsed.
      *
      * @param videoDuration Used to calculate percentage based offsets.
      * @return The skip offset in milliseconds. Can return null.
@@ -645,20 +659,24 @@ public int getRemainingProgressTrackerCount() {
     public Integer getSkipOffsetMillis(final int videoDuration) {
         if (mSkipOffset != null) {
             try {
+                final Integer skipOffsetMilliseconds;
                 if (Strings.isAbsoluteTracker(mSkipOffset)) {
-                    Integer skipOffsetMilliseconds = Strings.parseAbsoluteOffset(mSkipOffset);
-                    if (skipOffsetMilliseconds != null && skipOffsetMilliseconds < videoDuration) {
-                        return skipOffsetMilliseconds;
-                    }
+                    skipOffsetMilliseconds = Strings.parseAbsoluteOffset(mSkipOffset);
                 } else if (Strings.isPercentageTracker(mSkipOffset)) {
                     float percentage = Float.parseFloat(mSkipOffset.replace("%", "")) / 100f;
-                    int skipOffsetMillisecondsRounded = Math.round(videoDuration * percentage);
-                    if (skipOffsetMillisecondsRounded < videoDuration) {
-                        return skipOffsetMillisecondsRounded;
-                    }
+                    skipOffsetMilliseconds = Math.round(videoDuration * percentage);
                 } else {
                     MoPubLog.d(
                             String.format("Invalid VAST skipoffset format: %s", mSkipOffset));
+                    return null;
+                }
+
+                if (skipOffsetMilliseconds != null) {
+                    if (skipOffsetMilliseconds < videoDuration) {
+                        return skipOffsetMilliseconds;
+                    } else {
+                        return videoDuration;
+                    }
                 }
             } catch (NumberFormatException e) {
                 MoPubLog.d(String.format("Failed to parse skipoffset %s", mSkipOffset));
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
index a3a14cd9..293336d2 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
@@ -27,7 +27,8 @@ protected void preRenderHtml(CustomEventInterstitialListener customEventIntersti
         }
 
         mVastManager = VastManagerFactory.create(mContext);
-        mVastManager.prepareVastVideoConfiguration(mVastResponse, this, mContext);
+        mVastManager.prepareVastVideoConfiguration(mVastResponse, this,
+                mAdReport.getDspCreativeId(), mContext);
     }
 
     @Override
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
index 1867cc50..cef0ca51 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
@@ -696,13 +696,13 @@ public void onVastWebViewClick() {
                         getNetworkMediaFileUrl(),
                         context
                 );
-                vastIconConfig.handleClick(getContext(), null);
+                vastIconConfig.handleClick(getContext(), null, mVastVideoConfig.getDspCreativeId());
             }
         });
         iconView.setWebViewClient(new WebViewClient() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
-                vastIconConfig.handleClick(getContext(), url);
+                vastIconConfig.handleClick(getContext(), url, mVastVideoConfig.getDspCreativeId());
                 return true;
             }
         });
@@ -825,16 +825,17 @@ public void onVastWebViewClick() {
                         null,
                         context
                 );
-                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, null);
+                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, null, mVastVideoConfig.getDspCreativeId());
             }
         });
         companionView.setWebViewClient(new WebViewClient() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
-                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, url);
+                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, url, mVastVideoConfig.getDspCreativeId());
                 return true;
             }
         });
+
         return companionView;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
index 5889cd0b..673dc07f 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
@@ -12,6 +12,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.util.Utils;
 import com.mopub.common.util.VersionCode;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.util.VersionCode.currentApiLevel;
 
@@ -41,7 +42,7 @@
     }
 
     void loadData(String data) {
-        loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 data, "text/html", "utf-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java b/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
index e13d7c60..8982783b 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
@@ -24,7 +24,7 @@
 
 /**
  * Parses the VAST XML to spec. See www.iab.net for details.
- * Currently using the VAST 3.0 spec found here: http://www.iab.net/media/file/VASTv3.0.pdf.
+ * Currently using the VAST 3.0 spec found here: https://www.iab.net/media/file/VASTv3.0.pdf.
  */
 class VastXmlManager {
     private static final String ROOT_TAG = "MPMoVideoXMLDocRoot";
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java b/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
index 59b9544d..9c0c92c9 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
@@ -28,7 +28,7 @@ public HtmlBannerWebView internalCreate(
             String redirectUrl,
             String clickthroughUrl) {
         HtmlBannerWebView htmlBannerWebView = new HtmlBannerWebView(context, adReport);
-        htmlBannerWebView.init(customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl);
+        htmlBannerWebView.init(customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl, adReport.getDspCreativeId());
         return htmlBannerWebView;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java b/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
index 65d97a39..e26f34a8 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
@@ -28,7 +28,7 @@ public HtmlInterstitialWebView internalCreate(
             String redirectUrl,
             String clickthroughUrl) {
         HtmlInterstitialWebView htmlInterstitialWebView = new HtmlInterstitialWebView(context, adReport);
-        htmlInterstitialWebView.init(customEventInterstitialListener, isScrollable, redirectUrl, clickthroughUrl);
+        htmlInterstitialWebView.init(customEventInterstitialListener, isScrollable, redirectUrl, clickthroughUrl, adReport.getDspCreativeId());
         return htmlInterstitialWebView;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java b/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
index bd907c1a..897b22a0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
+++ b/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
@@ -30,6 +30,7 @@
 import com.mopub.mobileads.resource.MraidJavascript;
 import com.mopub.mraid.MraidBridge.MraidWebView.OnVisibilityChangedListener;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
+import com.mopub.network.Networking;
 
 import org.apache.http.NameValuePair;
 import org.apache.http.client.utils.URLEncodedUtils;
@@ -203,7 +204,7 @@ public void setContentHtml(@NonNull String htmlData) {
         }
 
         mHasLoaded = false;
-        mMraidWebView.loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        mMraidWebView.loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 htmlData, "text/html", "UTF-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
index c66ceb88..f8a41988 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
@@ -55,11 +55,11 @@
     private final AdReport mAdReport;
 
     public interface MraidListener {
-        public void onLoaded(View view);
-        public void onFailedToLoad();
-        public void onExpand();
-        public void onOpen();
-        public void onClose();
+        void onLoaded(View view);
+        void onFailedToLoad();
+        void onExpand();
+        void onOpen();
+        void onClose();
     }
 
     public interface UseCustomCloseListener {
@@ -446,8 +446,8 @@ private View getCurrentWebView() {
     }
 
     private boolean isInlineVideoAvailable() {
-        //noinspection SimplifiableIfStatement
         final Activity activity = mWeakActivity.get();
+        //noinspection SimplifiableIfStatement
         if (activity == null || getCurrentWebView() == null) {
             return false;
         }
@@ -1036,14 +1036,19 @@ void handleOpen(@NonNull final String url) {
             mMraidListener.onOpen();
         }
 
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(
-                        UrlAction.IGNORE_ABOUT_SCHEME,
-                        UrlAction.OPEN_NATIVE_BROWSER,
-                        UrlAction.OPEN_IN_APP_BROWSER,
-                        UrlAction.HANDLE_SHARE_TWEET,
-                        UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                        UrlAction.FOLLOW_DEEP_LINK)
+        UrlHandler.Builder builder = new UrlHandler.Builder();
+
+        if (mAdReport != null) {
+            builder.withDspCreativeId(mAdReport.getDspCreativeId());
+        }
+
+        builder.withSupportedUrlActions(
+                UrlAction.IGNORE_ABOUT_SCHEME,
+                UrlAction.OPEN_NATIVE_BROWSER,
+                UrlAction.OPEN_IN_APP_BROWSER,
+                UrlAction.HANDLE_SHARE_TWEET,
+                UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
+                UrlAction.FOLLOW_DEEP_LINK)
                 .build().handleUrl(mContext, url);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java b/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
index 63db6598..b90b60ab 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
+++ b/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
@@ -16,6 +16,7 @@
 import android.provider.CalendarContract;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.view.View;
 import android.view.Window;
@@ -27,6 +28,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.AsyncTasks;
+import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Intents;
 import com.mopub.common.util.Streams;
 import com.mopub.common.util.Utils;
@@ -139,7 +141,7 @@ boolean isSmsAvailable(Context context) {
 
     public static boolean isStorePictureSupported(Context context) {
         return MEDIA_MOUNTED.equals(Environment.getExternalStorageState())
-                && context.checkCallingOrSelfPermission(WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
+                && DeviceUtils.isPermissionGranted(context, WRITE_EXTERNAL_STORAGE);
     }
 
     static boolean isCalendarAvailable(Context context) {
@@ -168,11 +170,11 @@ boolean isInlineVideoAvailable(@NonNull Activity activity, @NonNull View view) {
         // Hardware Acceleration
         // Hardware acceleration for the application and activity is enabled by default
         // in API >= 14 (Ice Cream Sandwich)
-        // http://developer.android.com/reference/android/R.attr.html#hardwareAccelerated
-        // http://developer.android.com/guide/topics/graphics/hardware-accel.html
+        // https://developer.android.com/reference/android/R.attr.html#hardwareAccelerated
+        // https://developer.android.com/guide/topics/graphics/hardware-accel.html
 
         // HTML5 Inline Video
-        // http://developer.android.com/about/versions/android-3.1.html
+        // https://developer.android.com/about/versions/android-3.1.html
 
         // Traverse up the View tree to determine if any views are being software rendered
         // You can only disable hardware acceleration at the view level by setting the layer type
@@ -197,7 +199,7 @@ boolean isInlineVideoAvailable(@NonNull Activity activity, @NonNull View view) {
         // Hardware acceleration can only be enabled for a window, not disabled
         // This flag is automatically set by the system if the android:hardwareAccelerated
         // XML attribute is set to true on an activity or on the application.
-        // http://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_HARDWARE_ACCELERATED
+        // https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_HARDWARE_ACCELERATED
         Window window = activity.getWindow();
         if (window != null) {
             if (Utils.bitMaskContainsFlag(window.getAttributes().flags,
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java b/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
index dc61916d..5f8a1d35 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
@@ -24,9 +24,8 @@
      * @param customEventNativeListener An Object that must be notified of certain lifecycle
      * events.
      * @param localExtras A Map containing additional custom data that is set within your
-     * application by calling {@link MoPubNative#setLocalExtras(Map<String, Object>)}. Note that the
-     * localExtras Map is a copy of the Map supplied to {@link MoPubNative#setLocalExtras(Map<String,
-     * Object>)}.
+     * application by calling {@link MoPubNative#setLocalExtras(Map)}. Note that the
+     * localExtras Map is a copy of the Map supplied to {@link MoPubNative#setLocalExtras(Map)}.
      * @param serverExtras A Map containing additional custom data configurable on the MoPub website
      * that you want to associate with a given custom event request. This data may be used to pass
      * dynamic information, such as publisher IDs, without changes in application code.
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java b/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
index 363acc00..7a439195 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
@@ -278,7 +278,9 @@ void loadAd() throws IllegalArgumentException {
                 @Override
                 public void onImagesCached() {
                     mVastManager.prepareVastVideoConfiguration(getVastVideo(),
-                            MoPubVideoNativeAd.this, mContext);
+                            MoPubVideoNativeAd.this,
+                            mEventDetails == null ? null : mEventDetails.getDspCreativeId(),
+                            mContext);
                 }
 
                 @Override
@@ -633,6 +635,11 @@ void applyState(@NonNull final VideoState videoState) {
         void applyState(@NonNull final VideoState videoState, boolean transitionToFullScreen) {
             Preconditions.checkNotNull(videoState);
 
+            // Ignore the state change if video player is not ready to take state changes.
+            if (mVastVideoConfig == null || mNativeVideoController == null || mMediaLayout == null) {
+                return;
+            }
+
             // Check and set mVideoState so any changes we make to exo state don't
             // trigger a duplicate run of this.
             if (mVideoState == videoState) {
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
index fd66bc7a..045f7ebe 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
@@ -18,11 +19,18 @@
  */
 public class NativeClickHandler {
     @NonNull private final Context mContext;
+    @Nullable private final String mDspCreativeId;
+
     private boolean mClickInProgress;
 
     public NativeClickHandler(@NonNull final Context context) {
+        this(context, null);
+    }
+
+    public NativeClickHandler(@NonNull final Context context, @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
         mContext = context.getApplicationContext();
+        mDspCreativeId = dspCreativeId;
     }
 
     /**
@@ -115,15 +123,18 @@ void openClickDestinationUrl(@NonNull final String clickDestinationUrl,
             spinningProgressView.addToRoot(view);
         }
 
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(
-                        UrlAction.IGNORE_ABOUT_SCHEME,
-                        UrlAction.OPEN_NATIVE_BROWSER,
-                        UrlAction.OPEN_APP_MARKET,
-                        UrlAction.OPEN_IN_APP_BROWSER,
-                        UrlAction.HANDLE_SHARE_TWEET,
-                        UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                        UrlAction.FOLLOW_DEEP_LINK)
+        UrlHandler.Builder builder = new UrlHandler.Builder();
+        if (!TextUtils.isEmpty(mDspCreativeId)) {
+            builder.withDspCreativeId(mDspCreativeId);
+        }
+        builder.withSupportedUrlActions(
+                UrlAction.IGNORE_ABOUT_SCHEME,
+                UrlAction.OPEN_NATIVE_BROWSER,
+                UrlAction.OPEN_APP_MARKET,
+                UrlAction.OPEN_IN_APP_BROWSER,
+                UrlAction.HANDLE_SHARE_TWEET,
+                UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
+                UrlAction.FOLLOW_DEEP_LINK)
                 .withResultActions(new UrlHandler.ResultActions() {
                     @Override
                     public void urlHandlingSucceeded(@NonNull String url,
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
index 4ef5ea6e..2b55c149 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
+++ b/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
@@ -97,10 +97,11 @@
     private boolean mExoPlayerStateStartedFromIdle = true;
 
     /**
-     * Create a new NativeVideoController for this id with the given parameters.
+     * Create a new {@link NativeVideoController} for this id with the given parameters.
      * Any existing entry with the same id is removed.
-     * @param id
-     * @return
+     *
+     * @param id the unique id of the native video ad
+     * @return an initialized {@link NativeVideoController}
      */
     @NonNull
     public static NativeVideoController createForId(final long id,
@@ -291,10 +292,9 @@ public void release(@NonNull final Object owner) {
 
     @Override
     public void onPlayerStateChanged(final boolean playWhenReady, final int newState) {
-        updateProgressRunnable(playWhenReady, newState);
-
         if (newState == STATE_ENDED && mFinalFrame == null) {
             mFinalFrame = new BitmapDrawable(mContext.getResources(), mTextureView.getBitmap());
+            mNativeVideoProgressRunnable.requestStop();
         }
 
         if (mPreviousExoPlayerState == ExoPlayer.STATE_READY && newState == ExoPlayer.STATE_BUFFERING) {
@@ -360,6 +360,7 @@ public void onPlayerError(ExoPlaybackException e) {
                 mEventDetails));
 
         mListener.onError(e);
+        mNativeVideoProgressRunnable.requestStop();
     }
 
     /**
@@ -386,14 +387,6 @@ void triggerImpressionTrackers() {
         mNativeVideoProgressRunnable.checkImpressionTrackers(true);
     }
 
-    private void updateProgressRunnable(final boolean playWhenReady, final int state) {
-        if (playWhenReady && state == STATE_READY) {
-            mNativeVideoProgressRunnable.startRepeating(50);
-        } else {
-            mNativeVideoProgressRunnable.stop();
-        }
-    }
-
     private void clearExistingPlayer() {
         if (mExoPlayer == null) {
             return;
@@ -403,6 +396,7 @@ private void clearExistingPlayer() {
         mExoPlayer.stop();
         mExoPlayer.release();
         mExoPlayer = null;
+        mNativeVideoProgressRunnable.stop();
         mNativeVideoProgressRunnable.setExoPlayer(null);
     }
 
@@ -428,6 +422,7 @@ private void preparePlayer() {
                     0, mHandler, null, 10);
             mAudioTrackRenderer = new MediaCodecAudioTrackRenderer(sampleSource);
             mExoPlayer.prepare(mAudioTrackRenderer, mVideoTrackRenderer);
+            mNativeVideoProgressRunnable.startRepeating(50);
         }
 
         setExoAudio();
@@ -440,7 +435,6 @@ private void setExoPlayWhenReady() {
         }
 
         mExoPlayer.setPlayWhenReady(mPlayWhenReady);
-        updateProgressRunnable(mExoPlayer.getPlayWhenReady(), mExoPlayer.getPlaybackState());
     }
 
     private void setExoAudio() {
@@ -492,7 +486,8 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
         public interface ProgressListener {
             /**
              * Should send a number from 0 to 1000.
-             * @param progressTenthPercent
+             *
+             * @param progressTenthPercent tenth of a percentage of video progress
              */
             void updateProgress(int progressTenthPercent);
         }
@@ -506,6 +501,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
         @Nullable private ProgressListener mProgressListener;
         private long mCurrentPosition;
         private long mDuration;
+        private boolean mStopRequested;
 
         NativeVideoProgressRunnable(@NonNull final Context context,
                 @NonNull final Handler handler,
@@ -532,6 +528,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
             mVisibilityChecker = visibilityChecker;
             mVastVideoConfig = vastVideoConfig;
             mDuration = -1L; // Initialized to -1 so we can distinguish between "never started" and a zero-length video.
+            mStopRequested = false;
         }
 
         void setExoPlayer(@Nullable final ExoPlayer exoPlayer) {
@@ -558,9 +555,15 @@ long getDuration() {
             return mDuration;
         }
 
+        void requestStop() {
+            mStopRequested = true;
+        }
+
         void checkImpressionTrackers(final boolean forceTrigger) {
+            int trackedCount = 0;
             for (VisibilityTrackingEvent event : mVisibilityTrackingEvents) {
                 if (event.isTracked) {
+                    trackedCount++;
                     continue;
                 }
                 if (forceTrigger || mVisibilityChecker.isVisible(mTextureView, mTextureView,
@@ -570,9 +573,13 @@ void checkImpressionTrackers(final boolean forceTrigger) {
                             event.totalQualifiedPlayCounter >= event.totalRequiredPlayTimeMs) {
                         event.strategy.execute();
                         event.isTracked = true;
+                        trackedCount++;
                     }
                 }
             }
+            if (trackedCount == mVisibilityTrackingEvents.size() && mStopRequested) {
+                stop();
+            }
         }
 
         @Override
@@ -583,9 +590,6 @@ public void doWork() {
 
             mCurrentPosition = mExoPlayer.getCurrentPosition();
             mDuration = mExoPlayer.getDuration();
-            if (mDuration <= 0) {
-                return;
-            }
 
             checkImpressionTrackers(false);
 
diff --git a/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java b/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
index 5497d6b2..0970f483 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
+++ b/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
@@ -50,7 +50,7 @@
     @NonNull private final Context mContext;
 
     public interface Listener extends Response.ErrorListener {
-        public void onSuccess(AdResponse response);
+        void onSuccess(AdResponse response);
     }
 
     public AdRequest(@NonNull final String url,
@@ -145,6 +145,9 @@ public Listener getListener() {
             );
         }
 
+        String dspCreativeId = extractHeader(headers, ResponseHeader.DSP_CREATIVE_ID);
+        builder.setDspCreativeId(dspCreativeId);
+
         String networkType = extractHeader(headers, ResponseHeader.NETWORK_TYPE);
         builder.setNetworkType(networkType);
 
@@ -251,6 +254,7 @@ public Listener getListener() {
                             .adNetworkType(networkType)
                             .adWidthPx(width)
                             .adHeightPx(height)
+                            .dspCreativeId(dspCreativeId)
                             .geoLatitude(location == null ? null : location.getLatitude())
                             .geoLongitude(location == null ? null : location.getLongitude())
                             .geoAccuracy(location == null ? null : location.getAccuracy())
@@ -320,7 +324,7 @@ void logScribeEvent(@NonNull AdResponse adResponse, @NonNull NetworkResponse net
                 new Event.Builder(BaseEvent.Name.AD_REQUEST, BaseEvent.Category.REQUESTS,
                         BaseEvent.SamplingRate.AD_REQUEST.getSamplingRate())
                         .withAdUnitId(mAdUnitId)
-                        .withAdCreativeId(adResponse.getDspCreativeId())
+                        .withDspCreativeId(adResponse.getDspCreativeId())
                         .withAdType(adResponse.getAdType())
                         .withAdNetworkType(adResponse.getNetworkType())
                         .withAdWidthPx(adResponse.getWidth() != null
diff --git a/mopub-sdk/src/main/java/com/mopub/network/Networking.java b/mopub-sdk/src/main/java/com/mopub/network/Networking.java
index e820a0a5..e55db850 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/Networking.java
+++ b/mopub-sdk/src/main/java/com/mopub/network/Networking.java
@@ -32,12 +32,12 @@
     private static final String DEFAULT_USER_AGENT = System.getProperty("http.agent");
 
     // These are volatile so that double-checked locking works.
-    // See http://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java
+    // See https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java
     // for more information.
     private volatile static MoPubRequestQueue sRequestQueue;
     private volatile static String sUserAgent;
     private volatile static MaxWidthImageLoader sMaxWidthImageLoader;
-    public static boolean sUseHttps = false;
+    private static boolean sUseHttps = false;
 
     @Nullable
     public static MoPubRequestQueue getRequestQueue() {
@@ -129,7 +129,11 @@ public static String getUserAgent(@NonNull Context context) {
                 if (userAgent == null) {
                     // As of Android 4.4, WebViews may only be instantiated on the UI thread
                     if (Looper.myLooper() == Looper.getMainLooper()) {
-                        userAgent = new WebView(context).getSettings().getUserAgentString();
+                        try {
+                            userAgent = new WebView(context).getSettings().getUserAgentString();
+                        } catch (Exception e) {
+                            userAgent = DEFAULT_USER_AGENT;
+                        }
                     } else {
                         // In the exceptional case where we can't access the WebView user agent,
                         // fall back to the System-specific user agent.
@@ -190,4 +194,23 @@ public static void useHttps(boolean useHttps) {
     public static boolean useHttps() {
         return sUseHttps;
     }
+
+    /**
+     * Retrieve the scheme that should be used based on {@link #useHttps()}.
+     *
+     * @return "https" if {@link #useHttps()} is true; "http" otherwise.
+     */
+    public static String getScheme() {
+        return useHttps() ? Constants.HTTPS : Constants.HTTP;
+    }
+
+    /**
+     * DSPs are currently not ready for full https creatives. When we flip the switch to go full
+     * https, this should just return {@link #getScheme()}.
+     *
+     * @return "http"
+     */
+    public static String getBaseUrlScheme() {
+        return Constants.HTTP;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java b/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
index f04bcdf0..50cfc29a 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
+++ b/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
@@ -23,11 +23,11 @@
 public class ScribeRequest extends Request<Void> {
 
     public interface Listener extends Response.ErrorListener {
-        public void onResponse();
+        void onResponse();
     }
 
     public interface ScribeRequestFactory extends RequestManager.RequestFactory {
-        public ScribeRequest createRequest(ScribeRequest.Listener listener);
+        ScribeRequest createRequest(ScribeRequest.Listener listener);
     }
 
     @NonNull private final List<BaseEvent> mEvents;
diff --git a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java b/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
index 78bb26f7..f806a0a9 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
+++ b/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
@@ -26,7 +26,7 @@
 public class TrackingRequest extends Request<Void> {
 
     public interface Listener extends Response.ErrorListener {
-        public void onResponse(@NonNull String url);
+        void onResponse(@NonNull String url);
     }
 
     @Nullable private final TrackingRequest.Listener mListener;
diff --git a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
index 220fb003..a4813525 100644
--- a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
+++ b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.mopub.sdk.android:mopub
-fabric-version=4.3.0+kit
+fabric-version=4.4.1+kit
 fabric-build-type=source
diff --git a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
index 03930940..46823d17 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
@@ -53,7 +53,7 @@ public void setUp() {
 
     @Test
     public void shouldOverrideUrlLoading_withHTTPUrl_shouldReturnTrue_shouldLoadUrl() {
-        final String url = "http://twitter.com";
+        final String url = "https://twitter.com";
 
         assertThat(subject.shouldOverrideUrlLoading(MOOT_WEB_VIEW, url)).isTrue();
         verify(mockWebView).loadUrl(url);
@@ -132,8 +132,8 @@ public void shouldOverrideUrlLoading_withDeeplinkPlusUrl_withFailedPrimaryUrl_wi
 
     @Test
     public void shouldOverrideUrlLoading_withDeeplinkPlusUrl_withEncodedQueryString_shouldReturnTrue_shouldFinish() {
-        final String primaryUrl = "ebay://launch?nav=home&referrer=http%3A%2F%2Frover.ebay.com%2Frover%2F1%2F711-212056-53654-1%2F4%3Fmpt%3Dcache_buster%26ff6%3Dclick_id%26ff7%3Difa%26ff9%3Dsegment_name%26ff18%3Dcreative_name%26siteid%3D0%26ipn%3Dadmain2%26placement%3D418737%26ck%3D23932_main%26mpvc%3D";
-        final String fallbackUrl = "http://ebay.com";
+        final String primaryUrl = "ebay://launch?nav=home&referrer=https%3A%2F%2Frover.ebay.com%2Frover%2F1%2F711-212056-53654-1%2F4%3Fmpt%3Dcache_buster%26ff6%3Dclick_id%26ff7%3Difa%26ff9%3Dsegment_name%26ff18%3Dcreative_name%26siteid%3D0%26ipn%3Dadmain2%26placement%3D418737%26ck%3D23932_main%26mpvc%3D";
+        final String fallbackUrl = "https://ebay.com";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java b/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
index 14bcb296..28019855 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
@@ -42,7 +42,7 @@
     @Before
     public void setUp() throws Exception {
         context = Robolectric.buildActivity(Activity.class).create().get();
-        key1 = "http://www.mopub.com/";
+        key1 = "https://www.mopub.com/";
         data1 = "image_data_1";
 
         semaphore = new Semaphore(0);
diff --git a/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java b/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java
new file mode 100644
index 00000000..ac6fcc64
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java
@@ -0,0 +1,68 @@
+package com.mopub.common;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class DoubleTimeTrackerTest {
+
+    @Mock DoubleTimeTracker.Clock mockClock;
+    DoubleTimeTracker subject;
+
+    @Before
+    public void setUp() throws Exception {
+        subject = new DoubleTimeTracker(mockClock);
+
+        when(mockClock.elapsedRealTime()).thenReturn(100L, 200L, 300L, 400L, 500L, 600L);
+    }
+
+    @Test
+    public void whenStartThenGetInterval_shouldReturn100() throws Exception {
+        subject.start();
+        assertThat(subject.getInterval()).isEqualTo(100d);
+    }
+
+    @Test
+    public void whenPauseBeforeStart_shouldReturn0() throws Exception {
+        subject.pause();
+        assertThat(subject.getInterval()).isEqualTo(0d);
+    }
+
+    @Test
+    public void whenStartPauseStart_thenGetInterval_shouldReturn200() throws Exception {
+        subject.start();
+        subject.pause();
+        subject.start();
+
+        assertThat(subject.getInterval()).isEqualTo(200d);
+    }
+
+    @Test
+    public void whenStartPauseStartPause_thenGetInterval_shouldReturn200() throws Exception {
+        subject.start();
+        subject.pause();
+        subject.start();
+        subject.pause();
+
+        assertThat(subject.getInterval()).isEqualTo(200d);
+    }
+
+    @Test
+    public void whenMultipleStart_shouldNotAffectInterval_shouldReturn100() throws Exception {
+        subject.start();
+        subject.start();
+        subject.start();
+
+        assertThat(subject.getInterval()).isEqualTo(100d);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java b/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
index 178bc7b3..93256457 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
@@ -31,8 +31,8 @@
     public void setup() throws Exception {
         testHttpResponse = new TestHttpResponseWithHeaders(200, "abcde".getBytes());
         testHttpResponse.addHeader(ResponseHeader.CUSTOM_EVENT_NAME.getKey(), "testCustomEvent");
-        testHttpResponse.addHeader(ResponseHeader.CLICK_TRACKING_URL.getKey().toLowerCase(Locale.US), "http://example.com/");
-        testHttpResponse.addHeader(ResponseHeader.FAIL_URL.getKey().toUpperCase(Locale.US), "http://mopub.com/");
+        testHttpResponse.addHeader(ResponseHeader.CLICK_TRACKING_URL.getKey().toLowerCase(Locale.US), "https://example.com/");
+        testHttpResponse.addHeader(ResponseHeader.FAIL_URL.getKey().toUpperCase(Locale.US), "https://mopub.com/");
         subject = new DownloadResponse(testHttpResponse);
     }
 
@@ -65,8 +65,8 @@ public void testGetContentLength() throws Exception {
     @Test
     public void testGetFirstHeader_caseInsensitive() throws Exception {
         assertEquals("testCustomEvent", subject.getFirstHeader(ResponseHeader.CUSTOM_EVENT_NAME));
-        assertEquals("http://example.com/", subject.getFirstHeader(ResponseHeader.CLICK_TRACKING_URL));
-        assertEquals("http://mopub.com/", subject.getFirstHeader(ResponseHeader.FAIL_URL));
+        assertEquals("https://example.com/", subject.getFirstHeader(ResponseHeader.CLICK_TRACKING_URL));
+        assertEquals("https://mopub.com/", subject.getFirstHeader(ResponseHeader.FAIL_URL));
         assertNull(subject.getFirstHeader(ResponseHeader.CUSTOM_EVENT_DATA));
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java b/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java
new file mode 100644
index 00000000..70c7ec4b
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java
@@ -0,0 +1,261 @@
+package com.mopub.common;
+
+import android.app.Activity;
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationManager;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
+import org.robolectric.Shadows;
+import org.robolectric.annotation.Config;
+import org.robolectric.shadows.ShadowLocationManager;
+
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.robolectric.Shadows.shadowOf;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class LocationServiceTest {
+    private Activity activity;
+    private Location networkLocation;
+    private Location gpsLocation;
+    private ShadowLocationManager shadowLocationManager;
+
+    @Before
+    public void setUp() {
+        activity = Robolectric.buildActivity(Activity.class).create().get();
+
+        networkLocation = new Location("networkLocation");
+        networkLocation.setLatitude(3.1415926535);
+        networkLocation.setLongitude(-27.18281828459);
+        networkLocation.setAccuracy(10);
+        networkLocation.setTime(100);
+
+        gpsLocation = new Location("gpsLocation");
+        gpsLocation.setLatitude(-1.23456789);
+        gpsLocation.setLongitude(98.7654321);
+        gpsLocation.setAccuracy(1000);
+        gpsLocation.setTime(200);
+
+        shadowLocationManager = shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER, networkLocation);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, gpsLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withFinePermission_shouldReturnMoreRecentLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        // gpsLocation has a more recent timestamp than networkLocation
+        assertThat(result).isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withFinePermission_withLocationAwarenessTruncated_shouldTruncateLocationLatLon() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 2, MoPub.LocationAwareness.TRUNCATED);
+
+        // expected more recent gpsLocation, truncated
+        assertThat(result.getLatitude()).isEqualTo(-1.23);
+        assertThat(result.getLongitude()).isEqualTo(98.77);
+        // accuracy should be unchanged
+        assertThat(result.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void getLastKnownLocation_withOnlyCoarsePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        // only has coarse location access, expected networkLocation
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withOnlyCoarsePermission_withLocationAwarenessTruncated_shouldTruncateLocationLatLon() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 2, MoPub.LocationAwareness.TRUNCATED);
+
+        // expected networkLocation, truncated
+        assertThat(result.getLatitude()).isEqualTo(3.14);
+        assertThat(result.getLongitude()).isEqualTo(-27.18);
+        // accuracy should be unchanged
+        assertThat(result.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void getLastKnownLocation_withNoLocationPermissions_shouldReturnNull() {
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLastKnownLocation_withLocationAwarenessDisabled_shouldReturnNull() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.DISABLED);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withCoarsePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withFinePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withNoPermissions_shouldReturnNull() {
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withCoarsePermission_shouldReturnNull() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withFinePermission_shouldReturnGpsLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withNoPermissions_shouldReturnNull() {
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isNull();
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void getLocationFromProvider_withNullContext_shouldThrowNPE() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        LocationService.getLocationFromProvider(null, LocationService.ValidLocationProvider.GPS);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void getLocationFromProvider_withNullProvider_shouldThrowNPE() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        LocationService.getLocationFromProvider(activity, null);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_shouldReturnMoreRecentLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(networkLocation, gpsLocation))
+                .isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withFirstLocationValid_withSecondLocationNull_shouldReturnFirstLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(networkLocation, null))
+                .isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withSecondLocationValid_withFirstLocationNull_shouldReturnSecondLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(null, gpsLocation))
+                .isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withBothLocationsNull_shouldReturnNull() {
+        assertThat(LocationService.getMostRecentValidLocation(null, null)).isNull();
+    }
+
+    @Test
+    public void truncateLocationLatLon_shouldRoundLatitudeAndLongitude() {
+        LocationService.truncateLocationLatLon(networkLocation, 4);
+
+        assertThat(networkLocation.getLatitude()).isEqualTo(3.1416);
+        assertThat(networkLocation.getLongitude()).isEqualTo(-27.1828);
+        // accuracy should be unchanged
+        assertThat(networkLocation.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withZeroPrecision_shouldRemoveFractionalPortion() {
+        LocationService.truncateLocationLatLon(networkLocation, 0);
+
+        assertThat(networkLocation.getLatitude()).isEqualTo(3);
+        assertThat(networkLocation.getLongitude()).isEqualTo(-27);
+        assertThat(networkLocation.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withPrecisionLongerThanProvidedDecimalPoints_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(gpsLocation, 100);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withNullLocation_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(null, 1);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withNegativePrecision_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(gpsLocation, -1);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java b/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
index 474dfa45..869a0d60 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
@@ -24,7 +24,7 @@
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MoPubHttpUrlConnectionTest {
-    private static final String url = "http://www.mopub.com";
+    private static final String url = "https://www.mopub.com";
     private String userAgent;
 
     @Before
@@ -53,15 +53,15 @@ public void getHttpUrlConnection_shouldSetConnectAndReadTimeoutTo10Seconds() thr
     @Test
     public void getHttpUrlConnection_shouldProperlyEncodeUrl() throws Exception {
         HttpURLConnection urlConnection = MoPubHttpUrlConnection.getHttpUrlConnection(
-                "http://host:80/doc|search?q=green robots#over 6\"");
+                "https://host:80/doc|search?q=green robots#over 6\"");
 
         assertThat(urlConnection.getURL().toString())
-                .isEqualTo("http://host:80/doc%7Csearch?q=green%20robots#over%206%22");
+                .isEqualTo("https://host:80/doc%7Csearch?q=green%20robots#over%206%22");
     }
 
     @Test(expected = IllegalArgumentException.class)
     public void getHttpUrlConnection_withImproperlyEncodedUrl_shouldThrowIllegalArgumentException() throws Exception {
-        MoPubHttpUrlConnection.getHttpUrlConnection("http://user:passwrd@host:80/doc%7ZZZC");
+        MoPubHttpUrlConnection.getHttpUrlConnection("https://user:passwrd@host:80/doc%7ZZZC");
     }
 
     @Test(expected = MalformedURLException.class)
@@ -76,24 +76,24 @@ public void getHttpUrlConnection_withNullUrl_shouldThrowNullPointerException() t
 
     @Test
     public void urlEncode_shouldProperlyEncodeUrls() throws Exception {
-        // Example url borrowed from: http://developer.android.com/reference/java/net/URI.html
-        assertThat(urlEncode("http://user:passwrd@host:80/doc|search?q=green robots#over 6\""))
-                .isEqualTo("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
+        // Example url borrowed from: https://developer.android.com/reference/java/net/URI.html
+        assertThat(urlEncode("https://user:passwrd@host:80/doc|search?q=green robots#over 6\""))
+                .isEqualTo("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
 
-        assertThat(urlEncode("http://www.example.com/?key=value\"\"&key2=value2?"))
-                .isEqualTo("http://www.example.com/?key=value%22%22&key2=value2?");
+        assertThat(urlEncode("https://www.example.com/?key=value\"\"&key2=value2?"))
+                .isEqualTo("https://www.example.com/?key=value%22%22&key2=value2?");
 
-        assertThat(urlEncode("http://user:passwrd@host:80/doc?q=green#robots"))
-                .isEqualTo("http://user:passwrd@host:80/doc?q=green#robots");
+        assertThat(urlEncode("https://user:passwrd@host:80/doc?q=green#robots"))
+                .isEqualTo("https://user:passwrd@host:80/doc?q=green#robots");
 
-        assertThat(urlEncode("http://rtr.innovid.com/r1.5460f51c393410.96367393;cb=[timestamp]"))
-                .isEqualTo("http://rtr.innovid.com/r1.5460f51c393410.96367393;cb=%5Btimestamp%5D");
+        assertThat(urlEncode("https://rtr.innovid.com/r1.5460f51c393410.96367393;cb=[timestamp]"))
+                .isEqualTo("https://rtr.innovid.com/r1.5460f51c393410.96367393;cb=%5Btimestamp%5D");
     }
 
     @Test
     public void urlEncode_withProperlyEncodedUrl_shouldReturnUrlWithSameEncoding() throws Exception {
-        assertThat(urlEncode("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22"))
-                .isEqualTo("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
+        assertThat(urlEncode("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22"))
+                .isEqualTo("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
 
         assertThat(urlEncode("https://www.mywebsite.com%2Fd+ocs%2Fenglish%2Fsite%2Fmybook.do%3Fkey%3Dvalue%3B%23fragment"))
                 .isEqualTo(
@@ -102,13 +102,13 @@ public void urlEncode_withProperlyEncodedUrl_shouldReturnUrlWithSameEncoding() t
 
     @Test(expected = Exception.class)
     public void urlEncode_withImproperlyEncodedUrl_shouldThowException() throws Exception {
-        urlEncode("http://user:passwrd@host:80/doc%7ZZZC");
+        urlEncode("https://user:passwrd@host:80/doc%7ZZZC");
     }
 
 
     @Test(expected = Exception.class)
     public void urlEncode_withImproperlyEncodedUrlScheme_shouldThowException() throws Exception {
-        // From: http://developer.android.com/reference/java/net/URI.html
+        // From: https://developer.android.com/reference/java/net/URI.html
         // A URI's host, port and scheme are not eligible for encoding and must not contain illegal characters.
         urlEncode("https%3A%2F%2Fwww.mywebsite.com%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Fkey%3Dvalue%3B%23fragment");
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java
new file mode 100644
index 00000000..ee2e863d
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java
@@ -0,0 +1,111 @@
+package com.mopub.common;
+
+import android.net.Uri;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static com.mopub.common.UrlAction.HANDLE_MOPUB_SCHEME;
+import static com.mopub.common.UrlAction.IGNORE_ABOUT_SCHEME;
+import static com.mopub.common.UrlAction.HANDLE_PHONE_SCHEME;
+import static com.mopub.common.UrlAction.OPEN_NATIVE_BROWSER;
+import static com.mopub.common.UrlAction.OPEN_APP_MARKET;
+import static com.mopub.common.UrlAction.OPEN_IN_APP_BROWSER;
+import static com.mopub.common.UrlAction.HANDLE_SHARE_TWEET;
+import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK;
+import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK;
+import static org.fest.assertions.api.Assertions.assertThat;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class UrlActionTest {
+
+    @Test
+    public void handleMopubScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_MOPUB_SCHEME, "mopub:", true);
+        assertUrlActionMatching(HANDLE_MOPUB_SCHEME, "MoPuB:", true);
+    }
+
+    @Test
+    public void ignoreAboutScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(IGNORE_ABOUT_SCHEME, "about:", true);
+        assertUrlActionMatching(IGNORE_ABOUT_SCHEME, "AbOuT:", true);
+    }
+
+    @Test
+    public void handlePhoneScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "tel:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "TeL:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "voicemail:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "VoIcEmAiL:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "sms:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "SmS:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "mailto:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "MaIlTo:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "geo:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "GeO:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "google.streetview:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "GoOgLe.StReEtViEw:", true);
+                
+    }
+
+    @Test
+    public void openNativeBrowser_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_NATIVE_BROWSER, "mopubnativebrowser:", true);
+        assertUrlActionMatching(OPEN_NATIVE_BROWSER, "MoPuBnAtIvEbRoWsEr:", true);
+    }
+
+    @Test
+    public void openAppMarket_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://play.google.com", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://PlAy.GoOgLe.CoM", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://market.android.com", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://MaRkEt.AnDrOiD.CoM", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "market:", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "MaRkEt:", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "play.google.com/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "PlAy.GoOgLe.CoM/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "market.android.com/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "MaRkEt.AnDrOiD.CoM/", true);
+    }
+
+    @Test
+    public void openInAppBrowser_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "http:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "HtTp:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "https:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "HtTpS:", true);
+    }
+
+    @Test
+    public void handleShareTweet_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "mopubshare://tweet", true);
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "MoPuBsHaRe://tweet", true);
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "mopubshare://TwEeT", true);
+    }
+
+    @Test
+    public void followDeepLinkWithFallback_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK_WITH_FALLBACK, "deeplink+:", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK_WITH_FALLBACK, "DeEpLiNk+:", true);
+    }
+
+    @Test
+    public void followDeepLink_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "MyApP://", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://myview", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://MyView", true);
+    }
+
+    private void assertUrlActionMatching(@NonNull final UrlAction action,
+            @Nullable final String url, final boolean shouldMatch) {
+        assertThat(action.shouldTryHandlingUrl(Uri.parse(url))).isEqualTo(shouldMatch);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
index 14a9cb95..76502a3e 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
@@ -53,7 +53,7 @@ public void setUp() throws Exception {
 
     @Test
     public void urlHandler_withoutMoPubBrowser_shouldCallOnClickSuccessButNotStartActivity() {
-        final String url = "http://www.mopub.com/";
+        final String url = "https://www.mopub.com/";
 
         new UrlHandler.Builder()
                 .withSupportedUrlActions(OPEN_IN_APP_BROWSER)
@@ -81,6 +81,19 @@ public void urlHandler_withMatchingMoPubSchemeFinishLoad_shouldCallOnFinishLoad(
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedFinishLoad_shouldCallOnFinishLoad() {
+        final String url = "mopub://FiNiShLoAd";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onFinishLoad();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingMoPubSchemeClose_shouldCallOnClose() {
         final String url = "mopub://close";
@@ -94,6 +107,19 @@ public void urlHandler_withMatchingMoPubSchemeClose_shouldCallOnClose() {
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedClose_shouldCallOnClose() {
+        final String url = "mopub://ClOsE";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onClose();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingMoPubSchemeFailLoad_shouldCallOnFailLoad() {
         final String url = "mopub://failLoad";
@@ -107,6 +133,19 @@ public void urlHandler_withMatchingMoPubSchemeFailLoad_shouldCallOnFailLoad() {
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedFailLoad_shouldCallOnFailLoad() {
+        final String url = "mopub://FaIlLoAd";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onFailLoad();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingAboutSchemeUrl_shouldIgnoreClick() {
         final String url = "about:blank";
@@ -171,7 +210,7 @@ public void urlHandler_withMatchingPhoneSchemeUrl_shouldStartActivity() {
 
     @Test
     public void urlHandler_withValidNativeBrowserUrl_shouldCallOnClickSuccess_shouldStartActivity() {
-        final String urlToLoad = "http://www.mopub.com/";
+        final String urlToLoad = "https://www.mopub.com/";
         final String url = "mopubnativebrowser://navigate?url=" + urlToLoad;
 
         new UrlHandler.Builder()
@@ -190,7 +229,7 @@ public void urlHandler_withValidNativeBrowserUrl_shouldCallOnClickSuccess_should
 
     @Test
     public void urlHandler_withMatchingInAppBrowserHttpUrl_shouldCallOnClickSuccess_shouldStartActivity() {
-        final String url = "http://some_url";
+        final String url = "https://some_url";
 
         new UrlHandler.Builder()
                 .withSupportedUrlActions(IGNORE_ABOUT_SCHEME, HANDLE_MOPUB_SCHEME, FOLLOW_DEEP_LINK,
@@ -280,7 +319,7 @@ public void urlHandler_withMatchingDeeplinkPlus_shouldCallOnClickSuccess_shouldS
     @Test
     public void urlHandler_withMatchingUnresolvableDeeplinkPlus_withResolvableFallback_shouldResolveRedirects_shouldCallOnClickSuccess_shouldStartActivity() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://www.twitter.com";
+        final String fallbackUrl = "https://www.twitter.com";
         final String fallbackUrlAfterRedirects = "https://twitter.com/";
         final String deeplinkPlusUrl = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl);
@@ -320,10 +359,10 @@ public void urlHandler_withMatchingUnresolvableDeeplinkPlus_withUnresolvableFall
     @Test
     public void urlHandler_withDeeplinkPlus_shouldTriggerPrimaryTracker() {
         final String primaryUrl = "twitter://timeline";
-        final String primaryTracker = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String fallbackUrl = "http://twitter.com";
+        final String primaryTracker = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackUrl = "https://twitter.com";
         final String fallbackTracker =
-                "http://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
+                "https://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
@@ -342,8 +381,8 @@ public void urlHandler_withDeeplinkPlus_shouldTriggerPrimaryTracker() {
     @Test
     public void urlHandler_withDeeplinkPlus_shouldTriggerMultiplePrimaryTrackers() {
         final String primaryUrl = "twitter://timeline";
-        final String primaryTracker1 = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String primaryTracker2 = "http://ads.mopub.com/tracking?pubId=4321&userId=8765";
+        final String primaryTracker1 = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String primaryTracker2 = "https://ads.mopub.com/tracking?pubId=4321&userId=8765";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker1)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker2);
@@ -361,10 +400,10 @@ public void urlHandler_withDeeplinkPlus_shouldTriggerMultiplePrimaryTrackers() {
     @Test
     public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerFallbackTracker() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://twitter.com";
-        final String primaryTracker = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackUrl = "https://twitter.com";
+        final String primaryTracker = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
         final String fallbackTracker =
-                "http://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
+                "https://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
@@ -382,9 +421,9 @@ public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerFall
     @Test
     public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerMultiplePrimaryTrackers() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://twitter.com";
-        final String fallbackTracker1 = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String fallbackTracker2 = "http://ads.mopub.com/tracking?pubId=4321&userId=8765";
+        final String fallbackUrl = "https://twitter.com";
+        final String fallbackTracker1 = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackTracker2 = "https://ads.mopub.com/tracking?pubId=4321&userId=8765";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
                 + "&fallbackTrackingUrl=" + Uri.encode(fallbackTracker1)
@@ -399,20 +438,6 @@ public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerMult
         verify(mockRequestQueue).add(argThat(isUrl(fallbackTracker2)));
     }
 
-    @Test
-    public void urlHandler_withUppercasedDeeplinkPlus_shouldBeHandled() {
-        final String primaryUrl = "twitter://timeline";
-        final String url = "DeEpLiNk+://navigate?primaryUrl=" + Uri.encode(primaryUrl);
-        makeDeeplinkResolvable(primaryUrl);
-
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(FOLLOW_DEEP_LINK_WITH_FALLBACK)
-                .withResultActions(mockResultActions)
-                .build().handleResolvedUrl(context, url, true, null);
-
-        verify(mockResultActions).urlHandlingSucceeded(url, FOLLOW_DEEP_LINK_WITH_FALLBACK);
-    }
-
     @Test
     public void urlHandler_withdDeeplinkPlus_withUppercasedNavigate_shouldBeHandled() {
         final String primaryUrl = "twitter://timeline";
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java
new file mode 100644
index 00000000..df0626ea
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java
@@ -0,0 +1,145 @@
+package com.mopub.common;
+
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.annotation.Config;
+
+import java.io.IOException;
+import java.net.HttpURLConnection;
+import java.net.URISyntaxException;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class UrlResolutionTaskTest {
+    private final String BASE_URL =  "https://a.example.com/b/c/d?e=f";
+    @Mock private HttpURLConnection mockHttpUrlConnection;
+
+    @Test
+    public void resolveRedirectLocation_withAbsoluteRedirect_shouldReturnAbsolutePath() throws Exception {
+        setupMockHttpUrlConnection(302, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://www.abc.com");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeRedirect_shouldReplaceFileWithRelativePath() throws Exception {
+        setupMockHttpUrlConnection(302, "foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeFromRootRedirect_shouldReturnAmendedPathFromRoot() throws Exception {
+        setupMockHttpUrlConnection(302, "/foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeFromOneLevelUpRedirect_shouldReturnAmendedPathFromOneLevelUp() throws Exception {
+        setupMockHttpUrlConnection(302, "../foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeAndQueryParamsRedirect_shouldReturnAmendedPathWithQueryParams() throws Exception {
+        setupMockHttpUrlConnection(302, "../foo/bar?x=y");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/foo/bar?x=y");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRedirectWithoutScheme_shouldCompleteTheScheme() throws Exception {
+        setupMockHttpUrlConnection(302, "//foo.example.com/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://foo.example.com/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRedirectDifferentScheme_shouldReturnRedirectScheme() throws Exception {
+        setupMockHttpUrlConnection(302, "https://a.example.com/b/c/d?e=f");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/d?e=f");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withOnlyQueryParamsRedirect_shouldReturnAmendedPathWithQueryParams() throws Exception {
+        setupMockHttpUrlConnection(302, "?x=y");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/?x=y");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withOnlyFragmentRedirect_shouldReturnAmendedPathWithFragment() throws Exception {
+        setupMockHttpUrlConnection(302, "#x");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/d?e=f#x");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withDotRedirect_shouldStripFile() throws Exception {
+        setupMockHttpUrlConnection(302, ".");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withResponseCode301_shouldResolvePath() throws Exception {
+        setupMockHttpUrlConnection(301, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://www.abc.com");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withResponseCode200_shouldReturnNull() throws Exception {
+        setupMockHttpUrlConnection(200, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isNull();
+    }
+
+    @Test
+    public void resolveRedirectLocation_withoutLocation_shouldReturnNull() throws Exception {
+        setupMockHttpUrlConnection(200, null);
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isNull();
+    }
+
+    @Test(expected = URISyntaxException.class)
+    public void resolveRedirectLocation_withInvalidUrl_shouldThrowURISyntaxException() throws Exception {
+        setupMockHttpUrlConnection(301, "https://a.example.com/b c/d");
+
+        UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection);
+    }
+
+    private void setupMockHttpUrlConnection(final int responseCode,
+            @Nullable final String absolutePathUrl) throws IOException {
+        mockHttpUrlConnection = mock(HttpURLConnection.class);
+        when(mockHttpUrlConnection.getResponseCode()).thenReturn(responseCode);
+        when(mockHttpUrlConnection.getHeaderField("Location")).thenReturn(absolutePathUrl);
+    }
+
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java b/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
index 085d607f..a5c0d99f 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
@@ -58,7 +58,7 @@ public void setUp() {
                 .withPerformanceDurationMs(100.0)
                 .withRequestId("b550796074da4559a27c5072dcba2b27")
                 .withRequestStatusCode(200)
-                .withRequestUri("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")
+                .withRequestUri("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")
                 .withRequestRetries(0)
                 .build();
     }
@@ -140,7 +140,7 @@ public void constructor_shouldCorrectlyAssignFieldsFromBuilder() throws Exceptio
         assertThat(subject.getPerformanceDurationMs()).isEqualTo(100.0);
         assertThat(subject.getRequestId()).isEqualTo("b550796074da4559a27c5072dcba2b27");
         assertThat(subject.getRequestStatusCode()).isEqualTo(200);
-        assertThat(subject.getRequestUri()).isEqualTo("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        assertThat(subject.getRequestUri()).isEqualTo("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         assertThat(subject.getRequestRetries()).isEqualTo(0);
         assertThat(subject.getSamplingRate()).isEqualTo(0.10000123);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java b/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
index 52e4eb84..34d030ba 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
@@ -1,6 +1,7 @@
 package com.mopub.common.event;
 
 import android.app.Activity;
+import android.content.Context;
 
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -25,7 +26,6 @@
 public class EventSerializerTest {
 
     private EventSerializer subject;
-    private Activity context;
 
     @Mock private Event mockEvent;
     @Mock private ErrorEvent mockErrorEvent;
@@ -35,7 +35,7 @@ public void setUp() {
         subject = new EventSerializer();
 
         // initialize client meta data with context
-        context = Robolectric.buildActivity(Activity.class).create().get();
+        Context context = Robolectric.buildActivity(Activity.class).create().get();
         ClientMetadata.getInstance(context);
 
         populateBaseEventFields(mockEvent);
@@ -115,6 +115,7 @@ private void populateBaseEventFields(BaseEvent mockBaseEvent) {
         when(mockBaseEvent.getAdNetworkType()).thenReturn("admob");
         when(mockBaseEvent.getAdWidthPx()).thenReturn(320.0);
         when(mockBaseEvent.getAdHeightPx()).thenReturn(50.0);
+        when(mockBaseEvent.getDspCreativeId()).thenReturn("jack!fake234");
         when(mockBaseEvent.getAppPlatform()).thenReturn(BaseEvent.AppPlatform.ANDROID);
         when(mockBaseEvent.getAppName()).thenReturn("MoPub Sample App");
         when(mockBaseEvent.getAppPackageName()).thenReturn("com.mopub.simpleadsdemo");
@@ -141,7 +142,7 @@ private void populateBaseEventFields(BaseEvent mockBaseEvent) {
         when(mockBaseEvent.getNetworkSimIsoCountryCode()).thenReturn("US");
         when(mockBaseEvent.getRequestId()).thenReturn("b550796074da4559a27c5072dcba2b27");
         when(mockBaseEvent.getRequestStatusCode()).thenReturn(200);
-        when(mockBaseEvent.getRequestUri()).thenReturn("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        when(mockBaseEvent.getRequestUri()).thenReturn("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         when(mockBaseEvent.getRequestRetries()).thenReturn(0);
         when(mockBaseEvent.getTimestampUtcMs()).thenReturn(1416447053472L);
     }
@@ -165,6 +166,7 @@ private void validateBaseEventFields(JSONObject jsonObject) throws Exception {
         assertThat(jsonObject.getString("ad_network_type")).isEqualTo("admob");
         assertThat(jsonObject.getDouble("ad_width_px")).isEqualTo(320.0);
         assertThat(jsonObject.getDouble("ad_height_px")).isEqualTo(50.0);
+        assertThat(jsonObject.getString("dsp_creative_id")).isEqualTo("jack!fake234");
 
         // App Details
         assertThat(jsonObject.getInt("app_platform")).isEqualTo(2);
@@ -204,7 +206,7 @@ private void validateBaseEventFields(JSONObject jsonObject) throws Exception {
         // Request Details
         assertThat(jsonObject.getString("req_id")).isEqualTo("b550796074da4559a27c5072dcba2b27");
         assertThat(jsonObject.getInt("req_status_code")).isEqualTo(200);
-        assertThat(jsonObject.getString("req_uri")).isEqualTo("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        assertThat(jsonObject.getString("req_uri")).isEqualTo("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         assertThat(jsonObject.getInt("req_retries")).isEqualTo(0);
 
         // Timestamp Details
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
index d26247a6..18932043 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
@@ -1,5 +1,6 @@
 package com.mopub.common.util;
 
+import android.Manifest;
 import android.app.Activity;
 import android.content.pm.ActivityInfo;
 import android.content.res.Configuration;
@@ -15,6 +16,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -135,4 +137,28 @@ public void lockOrientation_toPortraitWhenLandscape_shouldBeLandscape() {
         DeviceUtils.lockOrientation(testActivity, CreativeOrientation.PORTRAIT);
         assertThat(testActivity.getRequestedOrientation()).isEqualTo(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
     }
+
+    @Test
+    public void isPermissionGranted_withPermissionGranted_shouldReturnTrue() {
+        Shadows.shadowOf(testActivity).grantPermissions(Manifest.permission.ACCESS_FINE_LOCATION);
+
+        assertThat(DeviceUtils.isPermissionGranted(testActivity, Manifest.permission.ACCESS_FINE_LOCATION)).isTrue();
+    }
+
+    @Test
+    public void isPermissionGranted_withPermissionNotGranted_shouldReturnFalse() {
+        Shadows.shadowOf(testActivity).grantPermissions(Manifest.permission.ACCESS_COARSE_LOCATION);
+
+        assertThat(DeviceUtils.isPermissionGranted(testActivity, Manifest.permission.ACCESS_FINE_LOCATION)).isFalse();
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void isPermissionGranted_withNullContext_shouldThrowNPE() {
+        DeviceUtils.isPermissionGranted(null, Manifest.permission.INTERNET);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void isPermissionGranted_withNullPermission_shouldThrowNPE() {
+        DeviceUtils.isPermissionGranted(testActivity, null);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
index 260747e3..5e5e4ea1 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
@@ -122,27 +122,27 @@ public void deviceCanHandleIntent_whenActivityCanNotResolveIntent_shouldReturnFa
     public void intentForNativeBrowserScheme_shouldProperlyHandleEncodedUrls() throws UrlParseException {
         Intent intent;
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.example.com"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.example.com"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com");
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http://www.example.com/?query=1&two=2"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https://www.example.com/?query=1&two=2"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com/?query=1");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com/?query=1");
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.example.com%2F%3Fquery%3D1%26two%3D2"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.example.com%2F%3Fquery%3D1%26two%3D2"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com/?query=1&two=2");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com/?query=1&two=2");
     }
 
     @Test(expected = UrlParseException.class)
     public void intentForNativeBrowserScheme_whenNotMoPubNativeBrowser_shouldThrowException() throws UrlParseException {
-        Intents.intentForNativeBrowserScheme(Uri.parse("mailto://navigate?url=http://www.example.com"));
+        Intents.intentForNativeBrowserScheme(Uri.parse("mailto://navigate?url=https://www.example.com"));
     }
 
     @Test(expected = UrlParseException.class)
     public void intentForNativeBrowserScheme_whenNotNavigate_shouldThrowException() throws UrlParseException {
-        Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://getout?url=http://www.example.com"));
+        Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://getout?url=https://www.example.com"));
     }
 
     @Test(expected = UrlParseException.class)
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java
deleted file mode 100644
index dbf9250f..00000000
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package com.mopub.mobileads;
-
-import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.network.AdResponse;
-
-import org.fest.assertions.core.Condition;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.robolectric.annotation.Config;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import static org.fest.assertions.api.Assertions.assertThat;
-import static org.mockito.Matchers.anyMapOf;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
-import static org.mockito.Mockito.verifyZeroInteractions;
-import static org.mockito.Mockito.when;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class AdLoaderTest {
-
-    @Mock
-    private AdViewController adViewController;
-    @Mock
-    private MoPubView moPubView;
-    private AdResponse adResponse;
-    private Map<String, String> serverExtras;
-
-    @Before
-    public void setup() {
-        adResponse = new AdResponse.Builder()
-                .setResponseBody("<html></html>")
-                .setClickTrackingUrl("clickthrough")
-                .setRedirectUrl("redirect")
-                .setScrollable(false)
-                .build();
-        serverExtras = new HashMap<String, String>();
-        serverExtras.put("test", "hi");
-        when(adViewController.getMoPubView()).thenReturn(moPubView);
-    }
-
-    @Test
-    public void fromAdResponse_whenCustomEvent_shouldCreateAdLoadTask() throws Exception {
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-        assertThat(customEventTask).isNotNull();
-        assertThat(customEventTask.getServerExtras()).isEqualTo(serverExtras);
-    }
-
-
-    @Test
-    public void fromAdResponse_whenHtml_shouldBeModernAdLoadTask() {
-        adResponse = adResponse.toBuilder()
-                .setAdType("html")
-                .setCustomEventClassName("com.mopub.mobileads.HtmlBanner")
-                .setServerExtras(serverExtras)
-                .build();
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-        assertThat(customEventTask).isNotNull();
-        assertThat(customEventTask.getServerExtras()).has(new Condition<Map<String, String>>() {
-            @Override
-            public boolean matches(final Map<String, String> stringStringMap) {
-                return stringStringMap.containsKey("test");
-            }
-        });
-    }
-
-    @Test
-    public void fromAdResponse_whenCustomMethod_shouldReturnNull() {
-        adResponse = adResponse.toBuilder()
-                .setCustomEventClassName(null)
-                .build();
-
-        assertThat(AdLoader.fromAdResponse(adResponse, adViewController)).isNull();
-    }
-
-    @Test
-    public void load_shouldCallAdViewController() {
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-        verify(adViewController).getMoPubView();
-        verify(moPubView).loadCustomEvent(eq("custom event name"), anyMapOf(String.class, String.class));
-    }
-
-    @Test
-    public void load_controllerDestroyed_shouldDoNothing() {
-        when(adViewController.isDestroyed()).thenReturn(true);
-
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-        verify(adViewController).isDestroyed();
-        verifyNoMoreInteractions(adViewController);
-        verifyZeroInteractions(moPubView);
-    }
-
-    @Test
-    public void load_withNullMoPubView_shouldDoNothing() throws Exception {
-        when(adViewController.getMoPubView()).thenReturn(null);
-
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-
-        verify(adViewController).getMoPubView();
-        verifyZeroInteractions(moPubView);
-    }
-}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
index 02afa4e4..9728aa1b 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
@@ -36,10 +36,13 @@
 import org.robolectric.shadows.ShadowLooper;
 
 import java.util.Collections;
+import java.util.Map;
 
 import static com.mopub.common.VolleyRequestMatcher.isUrl;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyMap;
+import static org.mockito.Matchers.anyString;
 import static org.mockito.Matchers.argThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
@@ -60,10 +63,8 @@
             409, 410, 411, 412, 413, 414, 415, 416, 417, 500, 501, 502, 503, 504, 505};
 
     private AdViewController subject;
-    @Mock
-    private MoPubView mockMoPubView;
-    @Mock
-    private MoPubRequestQueue mockRequestQueue;
+    @Mock private MoPubView mockMoPubView;
+    @Mock private MoPubRequestQueue mockRequestQueue;
     private Reflection.MethodBuilder methodBuilder;
 
     private AdResponse response;
@@ -315,6 +316,7 @@ public void fetchAd_withNullMoPubView_shouldNotMakeRequest() throws Exception {
     public void loadAd_shouldNotLoadWithoutConnectivity() throws Exception {
         ConnectivityManager connectivityManager = (ConnectivityManager) RuntimeEnvironment.application.getSystemService(Context.CONNECTIVITY_SERVICE);
         Shadows.shadowOf(connectivityManager.getActiveNetworkInfo()).setConnectionStatus(false);
+        subject.setAdUnitId("adunit");
 
         subject.loadAd();
         verifyZeroInteractions(mockRequestQueue);
@@ -329,7 +331,7 @@ public void loadAd_shouldNotLoadUrlIfAdUnitIdIsNull() throws Exception {
 
     @Test
     public void loadNonJavascript_shouldFetchAd() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
 
         verify(mockRequestQueue).add(argThat(isUrl(url)));
@@ -337,7 +339,7 @@ public void loadNonJavascript_shouldFetchAd() throws Exception {
 
     @Test
     public void loadNonJavascript_whenAlreadyLoading_shouldNotFetchAd() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
         reset(mockRequestQueue);
         subject.loadNonJavascript(url);
@@ -353,7 +355,7 @@ public void loadNonJavascript_shouldAcceptNullParameter() throws Exception {
 
     @Test
     public void reload_shouldReuseOldUrl() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
         subject.setNotLoading();
         reset(mockRequestQueue);
@@ -571,6 +573,32 @@ public void onAdLoadError_withInvalidServerResponse_shouldReturnErrorCodeServerE
         verify(mockMoPubView, times(HTML_ERROR_CODES.length)).adFailed(MoPubErrorCode.SERVER_ERROR);
     }
 
+    @Test
+    public void loadCustomEvent_shouldCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        String customEventClassName = "customEventClassName";
+        subject.loadCustomEvent(mockMoPubView, customEventClassName, serverExtras);
+
+        verify(mockMoPubView).loadCustomEvent(customEventClassName, serverExtras);
+    }
+
+    @Test
+    public void loadCustomEvent_withNullMoPubView_shouldNotCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        String customEventClassName = "customEventClassName";
+        subject.loadCustomEvent(null, customEventClassName, serverExtras);
+
+        verify(mockMoPubView, never()).loadCustomEvent(anyString(), anyMap());
+    }
+
+    @Test
+    public void loadCustomEvent_withNullCustomEventClassName_shouldCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        subject.loadCustomEvent(mockMoPubView, null, serverExtras);
+
+        verify(mockMoPubView).loadCustomEvent(null, serverExtras);
+    }
+
     @Test
     public void getErrorCodeFromVolleyError_whenNoConnection_shouldReturnErrorCodeNoConnection() {
         final VolleyError noConnectionError = new NoConnectionError();
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
index 7c420081..d7f57390 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
@@ -30,7 +30,7 @@
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class BaseVideoPlayerActivityTest {
-    private static final String MRAID_VIDEO_URL = "http://mraidVideo";
+    private static final String MRAID_VIDEO_URL = "https://mraidVideo";
 
     private long testBroadcastIdentifier;
     private VastVideoConfig mVastVideoConfig;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
index c63b638d..97d297dd 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
@@ -44,6 +44,33 @@ public void beforeJellyBeanMr1_shouldDisablePluginsByDefault() throws Exception
         assertThat(webSettings.getPluginState()).isEqualTo(WebSettings.PluginState.ON);
     }
 
+    @Test
+    public void allPlatforms_shouldDisableFileAccess() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowFileAccess()).isEqualTo(false);
+    }
+
+    @Config(sdk = VERSION_CODES.JELLY_BEAN) // Robo doesn't go earlier than this.
+    @Test
+    public void atLeastHoneyComb_shouldDisableContentAccess() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowContentAccess()).isEqualTo(false);
+    }
+
+    @Config(sdk = VERSION_CODES.JELLY_BEAN)
+    @Test
+    public void atLeastJellybean_shouldDisableAccessFromFileUrls() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowFileAccessFromFileURLs()).isEqualTo(false);
+        assertThat(webSettings.getAllowUniversalAccessFromFileURLs()).isEqualTo(false);
+    }
+
     @Config(sdk = VERSION_CODES.JELLY_BEAN_MR2)
     @Test
     public void atLeastJellybeanMr2_shouldPass() throws Exception {
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java
deleted file mode 100644
index 072156bd..00000000
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.mopub.mobileads;
-
-import com.mopub.common.test.support.SdkTestRunner;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.stub;
-import static org.mockito.Mockito.verify;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class CustomEventAdLoaderTest {
-
-    private AdViewController adViewController;
-    private AdLoader.CustomEventAdLoader subject;
-    private String customEventName;
-    private Map<String, String> serverExtras;
-    private MoPubView moPubView;
-
-    @Before
-    public void setup() {
-        moPubView = mock(MoPubView.class);
-        adViewController = mock(AdViewController.class);
-        stub(adViewController.getMoPubView()).toReturn(moPubView);
-        customEventName = "testCustomEvent";
-        serverExtras = new HashMap<String, String>();
-        subject = new AdLoader.CustomEventAdLoader(adViewController,
-                customEventName, serverExtras);
-    }
-
-    @Test
-    public void execute_shouldCallLoadCustomEvent() throws Exception {
-        subject.load();
-
-        verify(adViewController).setNotLoading();
-        verify(moPubView).loadCustomEvent(eq(customEventName), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenAdViewControllerIsNull_shouldDoNothing() throws Exception {
-        subject = new AdLoader.CustomEventAdLoader(null, customEventName, serverExtras);
-
-        subject.load();
-        // pass
-    }
-
-    @Test
-    public void execute_whenAdViewControllerIsDestroyed_shouldDoNothing() throws Exception {
-        stub(adViewController.isDestroyed()).toReturn(true);
-
-        subject.load();
-
-        verify(adViewController, never()).setNotLoading();
-        verify(moPubView, never()).loadCustomEvent(eq(customEventName), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenCustomEventIsNull_shouldDoNothing() {
-        subject = new AdLoader.CustomEventAdLoader(adViewController, null, serverExtras);
-
-        subject.load();
-
-        verify(adViewController, never()).setNotLoading();
-        verify(moPubView, never()).loadCustomEvent((String) eq(null), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenParamsMapIsNull_shouldLoadNullParamsMap() throws Exception {
-        subject = new AdLoader.CustomEventAdLoader(adViewController, customEventName, null);
-
-        subject.load();
-
-        verify(adViewController).setNotLoading();
-        verify(moPubView).loadCustomEvent(eq(customEventName), (Map<String, String>) eq(null));
-    }
-}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
index a08a9163..1dd64a58 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
@@ -197,6 +197,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(assertTimeoutRunnableHasStarted)
                 .when(banner)
                 .loadBanner(
@@ -224,6 +225,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(justCallOnBannerFailed)
                 .when(banner)
                 .loadBanner(
@@ -317,6 +319,7 @@ public void invalidate_shouldCauseLoadAdToDoNothing() throws Exception {
 
         subject.loadAd();
 
+        // noinspection unchecked
         verify(banner, never()).loadBanner(
                 any(Context.class),
                 any(CustomEventBannerListener.class),
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
index fcbf5a2e..e5934618 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
@@ -196,6 +196,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(assertTimeoutRunnableHasStarted)
                 .when(interstitial)
                 .loadInterstitial(
@@ -222,6 +223,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(justCallOnInterstitialFailed)
                 .when(interstitial)
                 .loadInterstitial(
@@ -298,6 +300,7 @@ public void invalidate_shouldCauseLoadInterstitialToDoNothing() throws Exception
 
         subject.loadInterstitial();
 
+        // noinspection unchecked
         verify(interstitial, never()).loadInterstitial(
                 any(Context.class),
                 any(CustomEventInterstitialListener.class),
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
index 89168462..dc2a4ce6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
@@ -30,6 +30,7 @@
     private CustomEventBannerListener customEventBannerListener;
     private String clickthroughUrl;
     private String redirectUrl;
+    private String dspCreativeId;
 
     @Before
     public void setup() throws Exception {
@@ -38,11 +39,12 @@ public void setup() throws Exception {
         customEventBannerListener = mock(CustomEventBannerListener.class);
         clickthroughUrl = "clickthroughUrl";
         redirectUrl = "redirectUrl";
+        dspCreativeId = "dspCreativeId";
     }
 
     @Test
     public void init_shouldSetupWebViewClient() throws Exception {
-        subject.init(customEventBannerListener, false, clickthroughUrl, redirectUrl);
+        subject.init(customEventBannerListener, false, clickthroughUrl, redirectUrl, dspCreativeId);
         WebViewClient webViewClient = Shadows.shadowOf(subject).getWebViewClient();
         assertThat(webViewClient).isNotNull();
         assertThat(webViewClient).isInstanceOf(HtmlWebViewClient.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
index a649c6a9..2a73c7d3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
@@ -32,6 +32,7 @@
     private String clickthroughUrl;
     private boolean isScrollable;
     private String redirectUrl;
+    private String dspCreativeId;
 
     @Before
     public void setUp() throws Exception {
@@ -41,11 +42,12 @@ public void setUp() throws Exception {
         isScrollable = false;
         clickthroughUrl = "clickthroughUrl";
         redirectUrl = "redirectUrl";
+        dspCreativeId = "dspCreativeId";
     }
 
     @Test
     public void init_shouldSetupWebViewClient() throws Exception {
-        subject.init(customEventInterstitialListener, false, clickthroughUrl, redirectUrl);
+        subject.init(customEventInterstitialListener, false, clickthroughUrl, redirectUrl, dspCreativeId);
         WebViewClient webViewClient = Shadows.shadowOf(subject).getWebViewClient();
         assertThat(webViewClient).isNotNull();
         assertThat(webViewClient).isInstanceOf(HtmlWebViewClient.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
index 3f388835..ddc9feb7 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
@@ -36,7 +36,7 @@
 @Config(constants = BuildConfig.class)
 public class HtmlWebViewClientTest {
 
-    private static final String CLICKTHROUGH_URL = "http://clickthrough";
+    private static final String CLICKTHROUGH_URL = "https://clickthrough";
 
     private HtmlWebViewClient subject;
     private HtmlWebViewListener htmlWebViewListener;
@@ -50,7 +50,8 @@ public void setUp() throws Exception {
         context = Robolectric.buildActivity(Activity.class).create().get().getApplicationContext();
         when(htmlWebView.getContext()).thenReturn(context);
         when(htmlWebView.wasClicked()).thenReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL,
+                "redirect", "dsp_creative_id");
     }
 
     @Test
@@ -91,7 +92,7 @@ public void shouldOverrideUrlLoading_withPhoneIntent_shouldStartDefaultIntent()
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_andCanHandleCustomIntent_shouldTryToLaunchCustomIntent() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
         RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(Intent.ACTION_VIEW, Uri.parse(customUrl)), new ResolveInfo());
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
@@ -106,7 +107,7 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_a
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withoutUserClick_shouldNotTryToLaunchIntent() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
 
@@ -120,7 +121,7 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withoutUserClic
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_butCanNotHandleCustomIntent_shouldFailSilently() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
 
@@ -134,8 +135,8 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_b
     @Test
     public void shouldOverrideUrlLoading_withHttpUrl_withUserClick_shouldOpenBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
-        String validUrl = "http://www.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, "dsp_creative_id");
+        String validUrl = "https://www.mopub.com";
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
 
         assertThat(didOverrideUrl).isTrue();
@@ -144,14 +145,15 @@ public void shouldOverrideUrlLoading_withHttpUrl_withUserClick_shouldOpenBrowser
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getComponent().getClassName()).isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY)).isEqualTo(validUrl);
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID)).isEqualTo("dsp_creative_id");
         assertThat(startedActivity.getData()).isNull();
     }
 
     @Test
     public void shouldOverrideUrlLoading_withHttpUrl_withoutUserClick_shouldNotOpenBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
-        String validUrl = "http://www.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
+        String validUrl = "https://www.mopub.com";
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
 
         assertThat(didOverrideUrl).isTrue();
@@ -162,7 +164,7 @@ public void shouldOverrideUrlLoading_withHttpUrl_withoutUserClick_shouldNotOpenB
 
     @Test
     public void shouldOverrideUrlLoading_withClickTrackingRedirect_withUserClick_shouldNotChangeUrl() throws Exception {
-        String validUrl = "http://www.mopub.com";
+        String validUrl = "https://www.mopub.com";
         stub(htmlWebView.wasClicked()).toReturn(true);
 
         subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
@@ -173,7 +175,7 @@ public void shouldOverrideUrlLoading_withClickTrackingRedirect_withUserClick_sho
 
     @Test
     public void shouldOverrideUrlLoading_withClickTrackingRedirect_withoutUserClick_shouldChangeUrl() throws Exception {
-        String validUrl = "http://www.mopub.com";
+        String validUrl = "https://www.mopub.com";
         stub(htmlWebView.wasClicked()).toReturn(false);
 
         subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
@@ -184,7 +186,7 @@ public void shouldOverrideUrlLoading_withClickTrackingRedirect_withoutUserClick_
     @Test
     public void shouldOverrideUrlLoading_withEmptyUrl_withUserClick_shouldFailSilently() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "");
 
@@ -195,7 +197,7 @@ public void shouldOverrideUrlLoading_withEmptyUrl_withUserClick_shouldFailSilent
     @Test
     public void shouldOverrideUrlLoading_withEmptyUrl_withoutUserClick_shouldLoadAboutBlank() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "");
 
@@ -205,26 +207,26 @@ public void shouldOverrideUrlLoading_withEmptyUrl_withoutUserClick_shouldLoadAbo
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withUserClick_shouldStartIntentWithActionView() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView,
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com");
 
         assertThat(shouldOverrideUrl).isTrue();
         verify(htmlWebViewListener).onClicked();
         verify(htmlWebView).onResetUserClick();
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getAction()).isEqualTo("android.intent.action.VIEW");
-        assertThat(startedActivity.getData().toString()).isEqualTo("http://www.mopub.com");
+        assertThat(startedActivity.getData().toString()).isEqualTo("https://www.mopub.com");
     }
 
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withoutUserClick_shouldStartIntentWithActionView() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView,
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com");
 
         assertThat(shouldOverrideUrl).isTrue();
         verify(htmlWebViewListener, never()).onClicked();
@@ -235,8 +237,8 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withoutUserClick_sh
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withUserClick_shouldNotBeHandledByNativeBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=http%3A%2F%2Fwww.mopub.com";
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=https%3A%2F%2Fwww.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, opaqueNativeBrowserUriString);
 
@@ -250,8 +252,8 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withUs
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withoutUserClick_shouldNotLoad() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=http%3A%2F%2Fwww.mopub.com";
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=https%3A%2F%2Fwww.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, opaqueNativeBrowserUriString);
 
@@ -265,7 +267,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withou
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSchemeUrl_withUserClick_shouldFailSilently() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, "something://blah?url=invalid");
 
@@ -280,7 +282,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSche
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSchemeUrl_withoutUserClick_shouldNotInvokeNativeBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, "something://blah?url=invalid");
 
@@ -292,7 +294,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSche
 
     @Test
     public void shouldOverrideUrlLoading_withAboutBlankUrl_shouldFailSilently() {
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "about:blank");
 
@@ -328,7 +330,7 @@ public void shouldOverrideUrlLoading_withPhoneScheme_withoutUserClick_shouldDoNo
 
     @Test
     public void shouldOverrideUrlLoading_withMarketUrl_withoutUserClick_shouldDoNothing() throws Exception {
-        assertNothingHappensWithoutClick("http://play.google.com/");
+        assertNothingHappensWithoutClick("https://play.google.com/");
     }
 
     @Test
@@ -338,7 +340,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserUrl_withoutUserClick_shoul
 
     @Test
     public void shouldOverrideUrlLoading_withInAppBrowserUrl_withoutUserClick_shouldDoNothing() throws Exception {
-        assertNothingHappensWithoutClick("http://twitter.com");
+        assertNothingHappensWithoutClick("https://twitter.com");
     }
 
     @Test
@@ -350,7 +352,7 @@ public void shouldOverrideUrlLoading_withDeepLinkUrl_withoutUserClick_shouldDoNo
     public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOpenInBrowser() throws Exception {
         String url = "redirectUrlToLoad";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect", "dsp_creative_id");
         WebView view = mock(WebView.class);
         subject.onPageStarted(view, url, null);
 
@@ -358,6 +360,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOp
 
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(intent.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY)).isEqualTo(url);
+        assertThat(intent.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID)).isEqualTo("dsp_creative_id");
         assertThat(intent.getFlags() & Intent.FLAG_ACTIVITY_NEW_TASK).isNotEqualTo(0);
         assertThat(intent.getComponent().getClassName()).isEqualTo("com.mopub.common.MoPubBrowser");
     }
@@ -366,7 +369,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOp
     public void onPageStarted_whenLoadedUrlStartsWithRedirect_withoutUserClick_shouldOpenInBrowser() throws Exception {
         String url = "redirectUrlToLoad";
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect", "dsp_creative_id");
         WebView view = mock(WebView.class);
         subject.onPageStarted(view, url, null);
 
@@ -414,7 +417,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirectAndHasClickthrough_with
                 .doNothing()
                 .when(mockContext).startActivity(any(Intent.class));
 
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect", "dsp_creative_id");
         subject.onPageStarted(htmlWebView, url, null);
 
         ArgumentCaptor<Intent> intentArgumentCaptor = ArgumentCaptor.forClass(Intent.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
index 1254bd10..b7f3fe81 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
@@ -57,7 +57,7 @@
     private static final boolean EXPECTED_IS_SCROLLABLE = true;
     @Mock private AdReport mockAdReport;
     private static final String EXPECTED_REDIRECT_URL = "redirectUrl";
-    private static final String EXPECTED_CLICKTHROUGH_URL = "http://expected_url";
+    private static final String EXPECTED_CLICKTHROUGH_URL = "https://expected_url";
     private static final CreativeOrientation EXPECTED_ORIENTATION = CreativeOrientation.PORTRAIT;
 
     @Mock private BroadcastReceiver broadcastReceiver;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
index f519befc..fcb1f600 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
@@ -1,6 +1,7 @@
 package com.mopub.mobileads;
 
 import android.app.Activity;
+import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -12,12 +13,14 @@
 import com.mopub.network.AdResponse;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.Networking;
+import com.mopub.volley.Request;
 import com.mopub.volley.VolleyError;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.mockito.ArgumentMatcher;
 import org.mockito.Mock;
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
@@ -30,6 +33,7 @@
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.anyString;
+import static org.mockito.Matchers.argThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
@@ -73,6 +77,20 @@ public void tearDown() {
         ShadowLooper.unPauseMainLooper();
     }
 
+    @Test
+    public void loadVideo_withRequestParameters_shouldGenerateUrlWithKeywords() {
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", new MoPubRewardedVideoManager.RequestParameters("nonsense;garbage;keywords"));
+
+        verify(mockRequestQueue).add(argThat(new RequestUrlContains(Uri.encode("nonsense;garbage;keywords"))));
+
+        // Finish the request
+        requestListener.onErrorResponse(new VolleyError("end test"));
+    }
+
     @Test
     public void callbackMethods_withNullListener_shouldNotError() {
         // Clients can set RVM null.
@@ -87,7 +105,7 @@ public void callbackMethods_withNullListener_shouldNotError() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         // Triggers a call to MoPubRewardedVideoManager.onRewardedVideoLoadSuccess
         requestListener.onSuccess(testResponse);
 
@@ -111,7 +129,7 @@ public void onAdSuccess_noActivityFound_shouldNotCallFailUrl() {
                 .build();
 
         MoPubRewardedVideoManager.updateActivity(null);
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         verify(mockRequestQueue).add(any(AdRequest.class));
@@ -128,7 +146,7 @@ public void onAdSuccess_noCEFound_shouldCallFailCallback() throws Exception {
                 .setCustomEventClassName("doesn't_Exist")
                 .build();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         requestListener.onSuccess(testResponse);
 
@@ -144,7 +162,7 @@ public void onAdSuccess_noCEFound_shouldLoadFailUrl() {
                 .setFailoverUrl("fail.url")
                 .build();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         assertThat(request.getUrl()).contains("testAdUnit");
         requestListener.onSuccess(testResponse);
@@ -164,7 +182,7 @@ public void onAdSuccess_shouldInstantiateCustomEvent_andLoad() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -185,7 +203,7 @@ public void playVideo_shouldSetHasVideoFalse() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -208,7 +226,7 @@ public void playVideo_whenNotHasVideo_shouldFail() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -224,7 +242,7 @@ public void playVideo_whenNotHasVideo_shouldFail() {
     public void onAdFailure_shouldCallFailCallback() {
         VolleyError e = new VolleyError("testError!");
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         assertThat(request.getUrl()).contains("testAdUnit");
         requestListener.onErrorResponse(e);
@@ -294,4 +312,19 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
             MoPubRewardedVideoManager.onRewardedVideoLoadFailure(NoVideoCustomEvent.class, "id!", MoPubErrorCode.NETWORK_NO_FILL);
         }
     }
+
+    private static class RequestUrlContains extends ArgumentMatcher<Request> {
+
+        private final String mMustContain;
+
+        RequestUrlContains(String stringToFind) {
+            mMustContain = stringToFind;
+        }
+
+        @Override
+        public boolean matches(final Object argument) {
+            return argument instanceof Request
+                    && ((Request) argument).getUrl().contains(mMustContain);
+        }
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
index 97b53591..b7cd5153 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
@@ -22,12 +22,12 @@ public void getInLineXmlManager_shouldReturnInLineXmlManager() throws Exception
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -37,7 +37,7 @@ public void getInLineXmlManager_shouldReturnInLineXmlManager() throws Exception
 
         VastInLineXmlManager vastInLineXmlManager = subject.getInLineXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastInLineXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inline");
+                .containsOnly("https://impression/m/inline");
     }
 
     @Test
@@ -45,17 +45,17 @@ public void getInLineXmlManager_withMultipleInLineNodes_shouldReturnFirstInLineX
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -65,7 +65,7 @@ public void getInLineXmlManager_withMultipleInLineNodes_shouldReturnFirstInLineX
 
         VastInLineXmlManager vastInLineXmlManager = subject.getInLineXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastInLineXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inlineOne");
+                .containsOnly("https://impression/m/inlineOne");
     }
 
     @Test
@@ -73,7 +73,7 @@ public void getInLineXmlManager_withNoInLineNodes_shouldReturnNull() throws Exce
         String adXml = "<Ad id=\"223626102\">" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -89,12 +89,12 @@ public void getWrapperXmlManager_shouldReturnWrapperXmlManager() throws Exceptio
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -104,7 +104,7 @@ public void getWrapperXmlManager_shouldReturnWrapperXmlManager() throws Exceptio
 
         VastWrapperXmlManager vastWrapperXmlManager = subject.getWrapperXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastWrapperXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/wrapper");
+                .containsOnly("https://impression/m/wrapper");
     }
 
     @Test
@@ -112,17 +112,17 @@ public void getWrapperXmlManager_withMultipleWrapperNodes_shouldReturnFirstWrapp
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapperOne]]>" +
+                "                 <![CDATA[https://impression/m/wrapperOne]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapperTwo]]>" +
+                "                 <![CDATA[https://impression/m/wrapperTwo]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -132,7 +132,7 @@ public void getWrapperXmlManager_withMultipleWrapperNodes_shouldReturnFirstWrapp
 
         VastWrapperXmlManager vastWrapperXmlManager = subject.getWrapperXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastWrapperXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/wrapperOne");
+                .containsOnly("https://impression/m/wrapperOne");
     }
 
     @Test
@@ -140,7 +140,7 @@ public void getWrapperXmlManager_withNoWrapperNodes_shouldReturnNull() throws Ex
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "</Ad>";
@@ -156,12 +156,12 @@ public void getSequence_shouldReturnSequence() throws Exception {
         String adXml = "<Ad id=\"223626102\" sequence=\"42\">" +
                 "    <InLine>" +
                 "        <Impression id=\"DART\">" +
-                "            <![CDATA[http://impression/m/inline]]>" +
+                "            <![CDATA[https://impression/m/inline]]>" +
                 "        </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "        <Impression id=\"DART\">" +
-                "            <![CDATA[http://impression/m/wrapper]]>" +
+                "            <![CDATA[https://impression/m/wrapper]]>" +
                 "        </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
index 01533c96..559db818 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
@@ -22,17 +22,17 @@
     public void getImpressionTrackers_shouldReturnImpressionTrackers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/close]]>" +
+                "                                   <![CDATA[https://tracking/m/close]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -44,7 +44,7 @@ public void getImpressionTrackers_shouldReturnImpressionTrackers() throws Except
         subject = new VastInLineXmlManager(inLineNode);
 
         assertThat(VastUtils.vastTrackersToStrings(subject.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inlineOne", "http://impression/m/inlineTwo");
+                .containsOnly("https://impression/m/inlineOne", "https://impression/m/inlineTwo");
     }
 
     @Test
@@ -62,17 +62,17 @@ public void getImpressionTrackers_withNoImpressionTrackers_shouldReturnEmptyList
     public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeOne]]>" +
+                "                                   <![CDATA[https://tracking/m/closeOne]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -80,7 +80,7 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/ignored]]>" +
+                "                                   <![CDATA[https://tracking/m/ignored]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -93,7 +93,7 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -107,26 +107,26 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
         List<VastLinearXmlManager> linearXmlManagers = subject.getLinearXmlManagers();
         assertThat(linearXmlManagers).hasSize(2);
         assertThat(VastUtils.vastTrackersToStrings(linearXmlManagers.get(0).getVideoCloseTrackers()))
-                .containsOnly("http://tracking/m/closeOne");
+                .containsOnly("https://tracking/m/closeOne");
         assertThat(VastUtils.vastTrackersToStrings(linearXmlManagers.get(1).getVideoCloseTrackers()))
-                .containsOnly("http://tracking/m/closeTwo");
+                .containsOnly("https://tracking/m/closeTwo");
     }
 
     @Test
     public void getLinearXmlManagers_withNoLinearNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <NonLinearAds>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/close]]>" +
+                "                                   <![CDATA[https://tracking/m/close]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </NonLinearAds>" +
@@ -144,16 +144,16 @@ public void getLinearXmlManagers_withNoLinearNodes_shouldReturnEmptyList() throw
     public void getLinearXmlManagers_withNoCreativeNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -170,16 +170,16 @@ public void getLinearXmlManagers_withNoCreativeNodes_shouldReturnEmptyList() thr
     public void getLinearXmlManagers_withNoCreativesNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -196,17 +196,17 @@ public void getLinearXmlManagers_withNoCreativesNodes_shouldReturnEmptyList() th
     public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <NonLinearAds>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeOne]]>" +
+                "                                   <![CDATA[https://tracking/m/closeOne]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </NonLinearAds>" +
@@ -216,20 +216,20 @@ public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throw
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                     <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                             <CompanionClickTracking>" +
-                "                                 <![CDATA[http://clicktrackingOne]]>" +
+                "                                 <![CDATA[https://clicktrackingOne]]>" +
                 "                             </CompanionClickTracking>" +
                 "                         </Companion>"+
                 "                         <Companion>" +
                 "                             <CompanionClickTracking>" +
-                "                                 <![CDATA[http://clicktrackingTwo]]>" +
+                "                                 <![CDATA[https://clicktrackingTwo]]>" +
                 "                             </CompanionClickTracking>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -243,9 +243,9 @@ public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throw
 
         assertThat(subject.getCompanionAdXmlManagers()).hasSize(2);
         assertThat(VastUtils.vastTrackersToStrings(subject.getCompanionAdXmlManagers().get(0).getClickTrackers()))
-                .containsOnly("http://clicktrackingOne");
+                .containsOnly("https://clicktrackingOne");
         assertThat(VastUtils.vastTrackersToStrings(subject.getCompanionAdXmlManagers().get(1).getClickTrackers()))
-                .containsOnly("http://clicktrackingTwo");
+                .containsOnly("https://clicktrackingTwo");
     }
 
     @Test
@@ -275,7 +275,7 @@ public void getCompanionAdXmlManagers_withNoCompanionAdsNodes_shouldReturnEmptyL
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -297,7 +297,7 @@ public void getCompanionAdXmlManagers_withNoCreativeNodes_shouldReturnEmptyList(
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -319,7 +319,7 @@ public void getCompanionAdXmlManagers_withNoCreativesNodes_shouldReturnEmptyList
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -378,7 +378,7 @@ public void getVastExtensionParentXmlManager_withoutExtensions_shouldReturnNull(
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
index e77fcc62..8ff23e7a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
@@ -29,7 +29,7 @@
 @Config(constants = BuildConfig.class)
 public class VastCompanionAdConfigTest {
 
-    private static final String RESOLVED_CLICKTHROUGH_URL = "http://www.mopub.com/";
+    private static final String RESOLVED_CLICKTHROUGH_URL = "https://www.mopub.com/";
     private static final String CLICKTHROUGH_URL = "deeplink+://navigate?" +
             "&primaryUrl=bogus%3A%2F%2Furl" +
             "&fallbackUrl=" + Uri.encode(RESOLVED_CLICKTHROUGH_URL);
@@ -76,7 +76,7 @@ public void handleImpression_shouldTrackImpression() throws Exception {
 
     @Test
     public void handleClick_shouldNotTrackClick() throws Exception {
-        subject.handleClick(context, 1, null);
+        subject.handleClick(context, 1, null, "dsp_creative_id");
 
         verifyNoMoreInteractions(mockRequestQueue);
     }
@@ -84,7 +84,7 @@ public void handleClick_shouldNotTrackClick() throws Exception {
 
     @Test
     public void handleClick_shouldOpenMoPubBrowser() throws Exception {
-        subject.handleClick(context, 1, null);
+        subject.handleClick(context, 1, null, "dsp_creative_id");
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
@@ -92,6 +92,8 @@ public void handleClick_shouldOpenMoPubBrowser() throws Exception {
                 .isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY))
                 .isEqualTo(RESOLVED_CLICKTHROUGH_URL);
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID))
+                .isEqualTo("dsp_creative_id");
         assertThat(startedActivity.getData()).isNull();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
index 6c608e42..a738a601 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
@@ -22,19 +22,19 @@
     @Before
     public void setup() throws Exception {
         String companionXml = "<Companion id=\"valid\" height=\"250\" width=\"300\">" +
-                "    <StaticResource creativeType=\"image/png\">http://pngimage</StaticResource>" +
+                "    <StaticResource creativeType=\"image/png\">https://pngimage</StaticResource>" +
                 "    <TrackingEvents>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView1</Tracking>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView2</Tracking>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView3</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView1</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView2</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView3</Tracking>" +
                 "    </TrackingEvents>" +
-                "    <CompanionClickThrough>http://clickthrough</CompanionClickThrough>" +
-                "    <CompanionClickThrough>http://second_clickthrough</CompanionClickThrough>" +
+                "    <CompanionClickThrough>https://clickthrough</CompanionClickThrough>" +
+                "    <CompanionClickThrough>https://second_clickthrough</CompanionClickThrough>" +
                 "    <CompanionClickTracking>" +
-                "        <![CDATA[http://clicktrackingOne]]>" +
+                "        <![CDATA[https://clicktrackingOne]]>" +
                 "    </CompanionClickTracking>" +
                 "    <CompanionClickTracking>" +
-                "        <![CDATA[http://clicktrackingTwo]]>" +
+                "        <![CDATA[https://clicktrackingTwo]]>" +
                 "    </CompanionClickTracking>" +
                 "    <RandomUnusedTag>This_is_unused</RandomUnusedTag>" +
                 "</Companion>";
@@ -78,19 +78,19 @@ public void getHeight_withNoHeightAttribute_shouldReturnNull() throws Exception
     @Test
     public void getResourceXmlManager_shouldReturnVastResourceXmlManager() throws Exception {
         VastResourceXmlManager resourceXmlManager = subject.getResourceXmlManager();
-        assertThat(resourceXmlManager.getStaticResource()).isEqualTo("http://pngimage");
+        assertThat(resourceXmlManager.getStaticResource()).isEqualTo("https://pngimage");
         assertThat(resourceXmlManager.getStaticResourceType()).isEqualTo("image/png");
     }
 
     @Test
     public void getClickThroughUrl_shouldReturnFirstStringUrl() {
-        assertThat(subject.getClickThroughUrl()).isEqualTo("http://clickthrough");
+        assertThat(subject.getClickThroughUrl()).isEqualTo("https://clickthrough");
     }
 
     @Test
     public void getClickTrackers_shouldReturnAllUrls() {
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
-                .containsOnly("http://clicktrackingOne",
-                        "http://clicktrackingTwo");
+                .containsOnly("https://clicktrackingOne",
+                        "https://clicktrackingTwo");
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
index b5f09038..395b2ee6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
@@ -29,7 +29,7 @@ public void getVideoViewabilityTracker_shouldReturnVideoViewabilityTracker() thr
                 "                  <MoPubViewabilityTracker" +
                 "                          viewablePlaytime=\"2.5\"" +
                 "                          percentViewable=\"50%\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
@@ -39,7 +39,7 @@ public void getVideoViewabilityTracker_shouldReturnVideoViewabilityTracker() thr
         assertThat(tracker).isNotNull();
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(2500);
         assertThat(tracker.getPercentViewable()).isEqualTo(50);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.gif");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
@@ -57,7 +57,7 @@ public void getVideoViewabilityTracker_withoutVieweablePlaytime_shouldReturnNull
         String extensionXml = "<Extension type=\"MoPub\">" +
                 "                  <MoPubViewabilityTracker" +
                 "                          percentViewable=\"50%\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
@@ -72,7 +72,7 @@ public void getVideoViewabilityTracker_withoutPercentViewable_shouldReturnNull()
         String extensionXml = "<Extension type=\"MoPub\">" +
                 "                  <MoPubViewabilityTracker" +
                 "                          viewablePlaytime=\"2.5\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
index 292a0414..3a636ccb 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
@@ -31,6 +31,7 @@
     private VastIconConfig subject;
     private Context context;
     @Mock private MoPubRequestQueue mockRequestQueue;
+    private String dspCreativeId;
 
     @Before
     public void setup() {
@@ -38,10 +39,11 @@ public void setup() {
                 new VastResource("resource", VastResource.Type.STATIC_RESOURCE, VastResource
                         .CreativeType.IMAGE, 123, 456),
                 VastUtils.stringsToVastTrackers("clickTrackerOne", "clickTrackerTwo"),
-                "http://www.mopub.com/",
+                "https://www.mopub.com/",
                 VastUtils.stringsToVastTrackers("viewTrackerOne", "viewTrackerTwo")
         );
         context = Robolectric.buildActivity(Activity.class).create().get();
+        dspCreativeId = "dspCreativeId";
         Networking.setRequestQueueForTesting(mockRequestQueue);
     }
 
@@ -57,7 +59,7 @@ public void constructor_shouldSetParamsCorrectly() throws Exception {
                 .isEqualTo(VastResource.CreativeType.IMAGE);
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackingUris()))
                 .containsOnly("clickTrackerOne", "clickTrackerTwo");
-        assertThat(subject.getClickThroughUri()).isEqualTo("http://www.mopub.com/");
+        assertThat(subject.getClickThroughUri()).isEqualTo("https://www.mopub.com/");
         assertThat(VastUtils.vastTrackersToStrings(subject.getViewTrackingUris()))
                 .containsOnly("viewTrackerOne", "viewTrackerTwo");
     }
@@ -85,7 +87,7 @@ public void handleImpression_shouldTrackImpression() throws Exception {
 
     @Test
     public void handleClick_shouldNotTrackClick() throws Exception {
-        subject.handleClick(context, null);
+        subject.handleClick(context, null, dspCreativeId);
 
         verifyNoMoreInteractions(mockRequestQueue);
     }
@@ -93,14 +95,16 @@ public void handleClick_shouldNotTrackClick() throws Exception {
 
     @Test
     public void handleClick_shouldOpenMoPubBrowser() throws Exception {
-        subject.handleClick(context, null);
+        subject.handleClick(context, null, dspCreativeId);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getComponent().getClassName())
                 .isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY))
-                .isEqualTo("http://www.mopub.com/");
+                .isEqualTo("https://www.mopub.com/");
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID))
+                .isEqualTo("dspCreativeId");
         assertThat(startedActivity.getData()).isNull();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
index 65e91898..c16f52b6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
@@ -28,167 +28,167 @@ public void setup() throws Exception {
                 "<TrackingEvents>" +
                 "    <Tracking event=\"creativeView\">" +
                 "        <![CDATA[" +
-                "        http://creativeView/one" +
+                "        https://creativeView/one" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"creativeView\">" +
                 "        <![CDATA[" +
-                "        http://creativeView/two" +
+                "        https://creativeView/two" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"start\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"progress\" offset=\"13%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"progress\" offset=\"01:01:10.300\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to ambiguous offset.
                 "    <Tracking event=\"progress\" offset=\"01:01\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a too-high percentage offset.
                 "    <Tracking event=\"progress\" offset=\"113%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a negative percentage offset.
                 "    <Tracking event=\"progress\" offset=\"-113%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a non-number offset
                 "    <Tracking event=\"progress\" offset=\"ten seconds\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"midpoint\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"midpoint\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"firstQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"firstQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"thirdQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"thirdQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"complete\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"complete\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"close\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/close?q=ignatius" +
+                "        https://www.mopub.com/close?q=ignatius" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"close\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/close?q=j3" +
+                "        https://www.mopub.com/close?q=j3" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"closeLinear\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/closeLinear" +
+                "        https://www.mopub.com/closeLinear" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"skip\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/skip?q=ignatius" +
+                "        https://www.mopub.com/skip?q=ignatius" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"skip\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/skip?q=j3" +
+                "        https://www.mopub.com/skip?q=j3" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"mute\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"pause\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/pause?num=1" +
+                "        https://www.mopub.com/pause?num=1" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"pause\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/pause?num=2" +
+                "        https://www.mopub.com/pause?num=2" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"resume\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/resume?num=1" +
+                "        https://www.mopub.com/resume?num=1" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"resume\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/resume?num=2" +
+                "        https://www.mopub.com/resume?num=2" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"fullscreen\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"fullscreen\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "</TrackingEvents>" +
                 "<AdParameters/>" +
                 "<VideoClicks>" +
                 "    <ClickThrough>" +
-                "        <![CDATA[ http://www.google.com/support/richmedia ]]>" +
+                "        <![CDATA[ https://www.google.com/support/richmedia ]]>" +
                 "    </ClickThrough>" +
                 "    <ClickTracking id=\"DART\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
+                "        https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
                 "        ]]>" +
                 "    </ClickTracking>" +
                 "    <ClickTracking id=\"ThirdParty\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia" +
+                "        https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia" +
                 "        ]]>" +
                 "    </ClickTracking>" +
                 "</VideoClicks>" +
@@ -196,13 +196,13 @@ public void setup() throws Exception {
                 "    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "    <MediaFile id=\"2\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "</MediaFiles>" +
@@ -236,31 +236,31 @@ public void getFractionalTrackers_shouldReturnCorrectValues() {
 
         VastFractionalProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.trackingFraction()).isEqualTo(0.13f);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker4 = trackers.get(4);
         assertThat(tracker4.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker4.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
+        assertThat(tracker4.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker5 = trackers.get(5);
         assertThat(tracker5.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker5.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
+        assertThat(tracker5.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker6 = trackers.get(6);
         assertThat(tracker6.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker6.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
+        assertThat(tracker6.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
     }
 
     @Test
@@ -272,19 +272,19 @@ public void getAbsoluteProgressTrackers_shouldReturnCorrectValues() {
 
         VastAbsoluteProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.getTrackingMilliseconds()).isEqualTo(0);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://creativeView/one");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://creativeView/one");
 
         VastAbsoluteProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.getTrackingMilliseconds()).isEqualTo(0);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://creativeView/two");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://creativeView/two");
 
         VastAbsoluteProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.getTrackingMilliseconds()).isEqualTo(2000);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastAbsoluteProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.getTrackingMilliseconds()).isEqualTo(3670300);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;" +
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;" +
                 "src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;" +
                 "rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
     }
@@ -293,17 +293,17 @@ public void getAbsoluteProgressTrackers_shouldReturnCorrectValues() {
     public void getVideoCompleteTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoCompleteTrackers()))
-                .containsOnly("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?");
+                .containsOnly("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?");
     }
 
     @Test
     public void getVideoCloseTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoCloseTrackers()))
-                .containsOnly("http://www.mopub.com/close?q=ignatius",
-                        "http://www.mopub.com/close?q=j3",
-                        "http://www.mopub.com/closeLinear");
+                .containsOnly("https://www.mopub.com/close?q=ignatius",
+                        "https://www.mopub.com/close?q=j3",
+                        "https://www.mopub.com/closeLinear");
     }
 
     @Test
@@ -313,8 +313,8 @@ public void getPauseTrackers_shouldReturnRepeatableVastTrackers() {
             assertThat(vastTracker.isRepeatable());
         }
         assertThat(VastUtils.vastTrackersToStrings(subject.getPauseTrackers()))
-                .containsOnly("http://www.mopub.com/pause?num=1",
-                        "http://www.mopub.com/pause?num=2");
+                .containsOnly("https://www.mopub.com/pause?num=1",
+                        "https://www.mopub.com/pause?num=2");
     }
 
     @Test
@@ -324,16 +324,16 @@ public void getResumeTrackers_shouldReturnRepeatableVastTrackers() {
             assertThat(vastTracker.isRepeatable());
         }
         assertThat(VastUtils.vastTrackersToStrings(subject.getResumeTrackers()))
-                .containsOnly("http://www.mopub.com/resume?num=1",
-                        "http://www.mopub.com/resume?num=2");
+                .containsOnly("https://www.mopub.com/resume?num=1",
+                        "https://www.mopub.com/resume?num=2");
     }
 
     @Test
     public void getVideoSkipTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoSkipTrackers()))
-                .containsOnly("http://www.mopub.com/skip?q=ignatius",
-                        "http://www.mopub.com/skip?q=j3");
+                .containsOnly("https://www.mopub.com/skip?q=ignatius",
+                        "https://www.mopub.com/skip?q=j3");
     }
 
     @Test
@@ -341,18 +341,18 @@ public void getClickThroughUrl_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         String url = subject.getClickThroughUrl();
 
-        assertThat(url).isEqualTo("http://www.google.com/support/richmedia");
+        assertThat(url).isEqualTo("https://www.google.com/support/richmedia");
     }
 
     @Test
     public void getClickTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
-                .containsOnly("http://ad.doubleclick" +
+                .containsOnly("https://ad.doubleclick" +
                                 ".net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0" +
                                 "%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0" +
                                 "/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
-                        "http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google" +
+                        "https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google" +
                                 ".com/support/richmedia");
     }
 
@@ -393,9 +393,9 @@ public void getMediaXmlManagers_shouldReturnMediaXmlManagers() {
 
         assertThat(mediaXmlManagers.size()).isEqualTo(2);
 
-        assertThat(mediaXmlManagers.get(0).getMediaUrl()).isEqualTo("http://s3.amazonaws" +
+        assertThat(mediaXmlManagers.get(0).getMediaUrl()).isEqualTo("https://s3.amazonaws" +
                 ".com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
-        assertThat(mediaXmlManagers.get(1).getMediaUrl()).isEqualTo("http://s3.amazonaws" +
+        assertThat(mediaXmlManagers.get(1).getMediaUrl()).isEqualTo("https://s3.amazonaws" +
                 ".com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4");
     }
 
@@ -419,7 +419,7 @@ public void getMediaXmlManagers_withNoMediaFilesNode_shouldReturnEmptyList() thr
                 "    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "</Linear>";
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
index c2fd0853..9b1cb0ae 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
@@ -29,7 +29,7 @@
     @Before
     @SuppressWarnings("unchecked")
     public void setup() {
-        defaultUri = "http://www.derp.com/herp?errorcode=[ERRORCODE]&contentplayhead=[CONTENTPLAYHEAD]&asseturi=[ASSETURI]&cachebusting=[CACHEBUSTING]";
+        defaultUri = "https://www.derp.com/herp?errorcode=[ERRORCODE]&contentplayhead=[CONTENTPLAYHEAD]&asseturi=[ASSETURI]&cachebusting=[CACHEBUSTING]";
         // Suppressing unchecked cast to List<String> with Collections#singletonList(Object)
         subject = new VastMacroHelper(Collections.singletonList(defaultUri));
     }
@@ -37,7 +37,7 @@ public void setup() {
     @Test
     public void constructor_shouldSetCacheBusting() throws Exception {
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
@@ -62,32 +62,32 @@ public void constructor_shouldCreateRandomCacheBustingValues() throws Exception
     public void withErrorCode_shouldSetErrorCode() throws Exception {
         subject.withErrorCode(VastErrorCode.XML_PARSING_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=100&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=100&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.WRAPPER_TIMEOUT);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=301&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=301&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.NO_ADS_VAST_RESPONSE);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=303&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=303&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.GENERAL_LINEAR_AD_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=400&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=400&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.GENERAL_COMPANION_AD_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=600&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=600&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.UNDEFINED_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
@@ -95,70 +95,70 @@ public void withErrorCode_shouldSetErrorCode() throws Exception {
     public void withContentPlayHead_shouldFormatTime_shouldSetContentPlayHead() throws Exception {
         subject.withContentPlayHead(3600000);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=01:00:00.000&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=01:00:00.000&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(360000000);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=100:00:00.000&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=100:00:00.000&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(3599999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:59:59.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:59:59.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(59999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:00:59.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:00:59.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:00:00.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:00:00.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(45296789);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=12:34:56.789&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=12:34:56.789&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
     @Test
     public void withAssetUri_shouldSetAssetUri() throws Exception {
-        final String expectedAssetUri = "http://thisIsAnAsset.Uri";
+        final String expectedAssetUri = "https://thisIsAnAsset.Uri";
         subject.withAssetUri(expectedAssetUri);
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=http%3A%2F%2FthisIsAnAsset.Uri&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=https%3A%2F%2FthisIsAnAsset.Uri&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
     @Test
     @SuppressWarnings("unchecked")
     public void withManyMacros_shouldReplaceAllOfThem() throws Exception {
-        final String multiUrl = "http://www.someurl.com/dosomething?[ERRORCODE][ERRORCODE][CONTENTPLAYHEAD][ERRORCODE][ASSETURI][CONTENTPLAYHEAD][ERRORCODE]";
+        final String multiUrl = "https://www.someurl.com/dosomething?[ERRORCODE][ERRORCODE][CONTENTPLAYHEAD][ERRORCODE][ASSETURI][CONTENTPLAYHEAD][ERRORCODE]";
         subject = new VastMacroHelper(Collections.singletonList(multiUrl))
                 .withAssetUri("asset")
                 .withContentPlayHead(100000)
                 .withErrorCode(VastErrorCode.UNDEFINED_ERROR);
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.someurl.com/dosomething?90090000:01:40.000900asset00:01:40.000900");
+                "https://www.someurl.com/dosomething?90090000:01:40.000900asset00:01:40.000900");
     }
 
     @Test
     @SuppressWarnings("unchecked")
     public void withSpecialCharactersInAsseturi_shouldUrlEncode() {
-        final String specialUrl = "http://www.someurl.com/somedirectory/somemethod?errorcode=[ERRORCODE]&asseturi=[ASSETURI]";
+        final String specialUrl = "https://www.someurl.com/somedirectory/somemethod?errorcode=[ERRORCODE]&asseturi=[ASSETURI]";
         subject = new VastMacroHelper(Collections.singletonList(specialUrl))
                 .withErrorCode(VastErrorCode.UNDEFINED_ERROR)
                 .withAssetUri(
-                        "http://aaddss.mmooppuubb.ccoomm:123/method?args=one~`!@#$%^&*()_+-[]{}|:,.<>/");
+                        "https://aaddss.mmooppuubb.ccoomm:123/method?args=one~`!@#$%^&*()_+-[]{}|:,.<>/");
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.someurl.com/somedirectory/somemethod?errorcode=900&asseturi=" +
-                        "http%3A%2F%2Faaddss.mmooppuubb.ccoomm%3A123%2Fmethod%3Fargs%3Done" +
+                "https://www.someurl.com/somedirectory/somemethod?errorcode=900&asseturi=" +
+                        "https%3A%2F%2Faaddss.mmooppuubb.ccoomm%3A123%2Fmethod%3Fargs%3Done" +
                         "%7E%60%21%40%23%24%25%5E%26*%28%29_%2B-%5B%5D%7B%7D%7C%3A%2C.%3C%3E%2F");
     }
 
@@ -176,11 +176,11 @@ public void withManyUrls_shouldReturnListOfUrls() {
 
         assertThat(subject.getUris().size()).isEqualTo(3);
         assertThat(subject.getUris().get(0)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et");
         assertThat(subject.getUris().get(1)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&asset2=https%3A%2F%2Fa.ss.et");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&asset2=https%3A%2F%2Fa.ss.et");
         assertThat(subject.getUris().get(2)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&cph2=00:00:00.500");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&cph2=00:00:00.500");
     }
 
     @Test
@@ -207,7 +207,7 @@ public void withDeeplink_shouldNotAttemptToReformat() {
     @Test
     @SuppressWarnings("unchecked")
     public void withNormalUri_shouldReturnUnchangedUri() {
-        final String normalUri = "http://www.thisisanormal.uri/with?some=query";
+        final String normalUri = "https://www.thisisanormal.uri/with?some=query";
         subject = new VastMacroHelper(Collections.singletonList(normalUri));
 
         assertThat(subject.getUris()).containsOnly(normalUri);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
index e36212ca..d53c7cc3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
@@ -31,22 +31,23 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowMoPubHttpUrlConnection.class})
 public class VastManagerTest {
     static final String EXTENSIONS_SNIPPET_PLACEHOLDER = "<![CDATA[EXTENSIONS_SNIPPET]]>";
-    static final String TEST_VAST_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='progress' offset='00:00:03.100'>http://myTrackingURL/wrapper/progress</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='close'>http://myTrackingURL/wrapper/close</Tracking><Tracking event='skip'>http://myTrackingURL/wrapper/skip</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative><Creative AdID=\"601364-Companion\"> <CompanionAds><Companion width=\"9000\"></Companion> </CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[http://wrapperErrorTracker]]></Error></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
-    static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><VAST version='2.0'><Ad id='57722'><InLine><AdSystem version='1.0'>Tapad</AdSystem><AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle><Description/><Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression><Creatives><Creative sequence='1' id='57722'><Linear><TrackingEvents><Tracking event='close'>http://myTrackingURL/wrapper/nested_close</Tracking><Tracking event='skip'>http://myTrackingURL/wrapper/nested_skip</Tracking></TrackingEvents><Duration>00:00:15</Duration><VideoClicks><ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough></VideoClicks><MediaFiles><MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video.mp4]]></MediaFile><MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4]]></MediaFile></MediaFiles></Linear></Creative><Creative AdID=\"601364-Companion\"><CompanionAds><Companion id=\"valid\" height=\"250\" width=\"300\"><StaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/Blistex1.jpg</StaticResource><TrackingEvents><Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking><Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking></TrackingEvents><CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough><CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking><CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking></Companion></CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[http://inLineErrorTracker]]></Error></InLine></Ad></VAST>";
-    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_VAST_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='progress' offset='00:00:03.100'>https://myTrackingURL/wrapper/progress</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='close'>https://myTrackingURL/wrapper/close</Tracking><Tracking event='skip'>https://myTrackingURL/wrapper/skip</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative><Creative AdID=\"601364-Companion\"> <CompanionAds><Companion width=\"9000\"></Companion> </CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[https://wrapperErrorTracker]]></Error></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><VAST version='2.0'><Ad id='57722'><InLine><AdSystem version='1.0'>Tapad</AdSystem><AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle><Description/><Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression><Creatives><Creative sequence='1' id='57722'><Linear><TrackingEvents><Tracking event='close'>https://myTrackingURL/wrapper/nested_close</Tracking><Tracking event='skip'>https://myTrackingURL/wrapper/nested_skip</Tracking></TrackingEvents><Duration>00:00:15</Duration><VideoClicks><ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough></VideoClicks><MediaFiles><MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video.mp4]]></MediaFile><MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4]]></MediaFile></MediaFiles></Linear></Creative><Creative AdID=\"601364-Companion\"><CompanionAds><Companion id=\"valid\" height=\"250\" width=\"300\"><StaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/Blistex1.jpg</StaticResource><TrackingEvents><Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking><Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking></TrackingEvents><CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough><CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking><CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking></Companion></CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[https://inLineErrorTracker]]></Error></InLine></Ad></VAST>";
+    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
 
     private VastManager subject;
     private VastManagerListener vastManagerListener;
     private Activity context;
     private VastVideoConfig mVastVideoConfig;
     private Semaphore semaphore;
+    private String dspCreativeId;
 
     @Before
     public void setup() {
         context = Robolectric.buildActivity(Activity.class).create().get();
         CacheService.initializeDiskCache(context);
         subject = new VastManager(context, true);
-
+        dspCreativeId = "dspCreativeId";
         semaphore = new Semaphore(0);
         vastManagerListener = mock(VastManagerListener.class);
         doAnswer(new Answer() {
@@ -66,7 +67,7 @@ public void tearDown() {
     }
 
     private void prepareVastVideoConfiguration() {
-        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -88,7 +89,7 @@ public void prepareVastVideoConfiguration_shouldNotifyTheListenerAndContainTheCo
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
 
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(5);
 
         // Verify quartile trackers
@@ -119,16 +120,16 @@ public void prepareVastVideoConfiguration_shouldNotifyTheListenerAndContainTheCo
         assertThat(vastCompanionAdConfig.getWidth()).isEqualTo(300);
         assertThat(vastCompanionAdConfig.getHeight()).isEqualTo(250);
         assertThat(vastCompanionAdConfig.getVastResource().getResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
         assertThat(vastCompanionAdConfig.getVastResource().getType())
                 .isEqualTo(VastResource.Type.STATIC_RESOURCE);
         assertThat(vastCompanionAdConfig.getVastResource().getCreativeType())
                 .isEqualTo(VastResource.CreativeType.IMAGE);
-        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
 
         assertThat(VastUtils.vastTrackersToStrings(vastCompanionAdConfig.getClickTrackers()))
-                .containsOnly("http://companionClickTracking1",
-                        "http://companionClickTracking2");
+                .containsOnly("https://companionClickTracking1",
+                        "https://companionClickTracking2");
     }
 
     @Test
@@ -150,7 +151,7 @@ public void prepareVastVideoConfiguration_shouldHandleMultipleRedirects() throws
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
 
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(13);
 
         assertThat(mVastVideoConfig.getAbsoluteTrackers().size()).isEqualTo(9);
@@ -187,15 +188,15 @@ public void prepareVastVideoConfiguration_shouldHandleMultipleRedirects() throws
         assertThat(vastCompanionAdConfig.getWidth()).isEqualTo(300);
         assertThat(vastCompanionAdConfig.getHeight()).isEqualTo(250);
         assertThat(vastCompanionAdConfig.getVastResource().getResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
         assertThat(vastCompanionAdConfig.getVastResource().getType())
                 .isEqualTo(VastResource.Type.STATIC_RESOURCE);
         assertThat(vastCompanionAdConfig.getVastResource().getCreativeType())
                 .isEqualTo(VastResource.CreativeType.IMAGE);
-        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
         assertThat(VastUtils.vastTrackersToStrings(vastCompanionAdConfig.getClickTrackers()))
-                .containsOnly("http://companionClickTracking1",
-                        "http://companionClickTracking2");
+                .containsOnly("https://companionClickTracking1",
+                        "https://companionClickTracking2");
     }
 
     @Test
@@ -243,11 +244,12 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
                             "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -258,7 +260,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
         // Verify custom extensions
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
@@ -271,7 +273,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
                                 "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
@@ -286,7 +288,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
         // Verify custom extensions
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
@@ -299,7 +301,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                                 "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>CTA 2</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 2</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>landscape</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
@@ -313,11 +315,12 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                             "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>CTA 1</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 1</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device orientation</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -329,7 +332,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
         // Verify custom extension values are the ones last parsed in TEST_NESTED_VAST_XML_STRING
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("CTA 2");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip 2");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_LANDSCAPE);
     }
 
@@ -490,6 +493,7 @@ public void prepareVastVideoConfiguration_withSkipOffsets_shouldReturnLastParsed
         subject.prepareVastVideoConfiguration(
                 TEST_VAST_XML_STRING.replace("<Linear>", "<Linear skipoffset='00:03:14'>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -520,7 +524,7 @@ public void prepareVastVideoConfiguration_withEmptySkipOffset_shouldReturnNull()
     @Test
     public void prepareVastVideoConfiguration_withNoMediaUrlInXml_shouldReturnNull() throws Exception {
         subject.prepareVastVideoConfiguration(TEST_VAST_BAD_NEST_URL_XML_STRING,
-                vastManagerListener, context);
+                vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -532,7 +536,7 @@ public void prepareVastVideoConfiguration_withNoMediaUrlInXml_shouldReturnNull()
 
     @Test
     public void prepareVastVideoConfiguration_withNullXml_shouldReturnNull() throws Exception {
-        subject.prepareVastVideoConfiguration(null, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(null, vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -544,7 +548,7 @@ public void prepareVastVideoConfiguration_withNullXml_shouldReturnNull() throws
 
     @Test
     public void prepareVastVideoConfiguration_withEmptyXml_shouldReturnNull() throws Exception {
-        subject.prepareVastVideoConfiguration("", vastManagerListener, context);
+        subject.prepareVastVideoConfiguration("", vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -587,7 +591,7 @@ public void cancel_shouldCancelBackgroundProcessingAndNotNotifyListenerWithNull(
 
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, dspCreativeId, context);
 
         subject.cancel();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
index c50ec72c..e1effa81 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
@@ -24,7 +24,7 @@ public void setup() throws Exception {
                 "bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -43,7 +43,7 @@ public void getWidth_withNoWidthAttribute_shouldReturnNull() throws Exception {
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" " +
                 "bitrate=\"457\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -64,7 +64,7 @@ public void getHeight_withNoHeightAttribute_shouldReturnNull() throws Exception
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" " +
                 "bitrate=\"457\" width=\"300\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -85,7 +85,7 @@ public void getType_withNoTypeAttribute_shouldReturnNull() throws Exception {
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" " +
                 "bitrate=\"457\" width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -98,7 +98,7 @@ public void getType_withNoTypeAttribute_shouldReturnNull() throws Exception {
 
     @Test
     public void getMediaUrl_shouldReturnMediaFileUrl() {
-        assertThat(subject.getMediaUrl()).isEqualTo("http://s3.amazonaws.com/uploads.hipchat" +
+        assertThat(subject.getMediaUrl()).isEqualTo("https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
index 504a0822..9d38dd63 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
@@ -157,40 +157,40 @@ public void handleClickForResult_withNullClickThroughUrl_shouldNotOpenNewActivit
     @Test
     public void handleClickForResult_withMoPubNativeBrowserClickThroughUrl_shouldOpenExternalBrowser_shouldMakeTrackingHttpRequest() throws Exception {
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com%2F");
         subject.addClickTrackers(
-                Arrays.asList(new VastTracker("http://trackerone+content=[CONTENTPLAYHEAD]"),
-                        new VastTracker("http://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
+                Arrays.asList(new VastTracker("https://trackerone+content=[CONTENTPLAYHEAD]"),
+                        new VastTracker("https://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
 
         subject.handleClickForResult(activity, 2345, 1234);
 
         Robolectric.getForegroundThreadScheduler().unPause();
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
-        assertThat(intent.getDataString()).isEqualTo("http://www.mopub.com/");
+        assertThat(intent.getDataString()).isEqualTo("https://www.mopub.com/");
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackerone+content=00:00:02.345")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackertwo+error=&asset=video_url")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackerone+content=00:00:02.345")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackertwo+error=&asset=video_url")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
     @Test
     public void handleClickWithoutResult_shouldOpenExternalBrowser_shouldMakeTrackingHttpRequest() throws Exception {
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com%2F");
         subject.addClickTrackers(
-                Arrays.asList(new VastTracker("http://trackerone+content=[CONTENTPLAYHEAD]"),
-                        new VastTracker("http://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
+                Arrays.asList(new VastTracker("https://trackerone+content=[CONTENTPLAYHEAD]"),
+                        new VastTracker("https://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
 
         subject.handleClickWithoutResult(activity.getApplicationContext(), 2345);
 
         Robolectric.getForegroundThreadScheduler().unPause();
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
-        assertThat(intent.getDataString()).isEqualTo("http://www.mopub.com/");
+        assertThat(intent.getDataString()).isEqualTo("https://www.mopub.com/");
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackerone+content=00:00:02.345")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackertwo+error=&asset=video_url")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackerone+content=00:00:02.345")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackertwo+error=&asset=video_url")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -198,7 +198,7 @@ public void handleClickWithoutResult_shouldOpenExternalBrowser_shouldMakeTrackin
     public void handleClickForResult_withMalformedMoPubNativeBrowserClickThroughUrl_shouldNotOpenANewActivity() throws Exception {
         // url2 is an invalid query parameter
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url2=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url2=https%3A%2F%2Fwww.mopub.com%2F");
 
         subject.handleClickForResult(activity, 3456, 1);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
index 8c7e91e9..2fef21ab 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.content.Intent;
 
+import com.mopub.common.AdReport;
 import com.mopub.common.CacheServiceTest;
 import com.mopub.common.DataKeys;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -14,6 +15,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.mockito.Mock;
 import org.robolectric.Robolectric;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.httpclient.FakeHttp;
@@ -23,6 +25,7 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import static com.mopub.common.DataKeys.AD_REPORT_KEY;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
@@ -38,6 +41,7 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 import static org.mockito.Mockito.withSettings;
 
 @RunWith(SdkTestRunner.class)
@@ -53,13 +57,15 @@
     private String videoUrl;
     private long broadcastIdentifier;
 
+    @Mock AdReport mockAdReport;
+
     @Before
     public void setUp() throws Exception {
         subject = new VastVideoInterstitial();
 
         vastManager = TestVastManagerFactory.getSingletonMock();
         expectedResponse = "<VAST>hello</VAST>";
-        videoUrl = "http://www.video.com";
+        videoUrl = "https://www.video.com";
 
         context = Robolectric.buildActivity(Activity.class).create().get();
         customEventInterstitialListener = mock(CustomEventInterstitialListener.class);
@@ -71,6 +77,8 @@ public void setUp() throws Exception {
 
         broadcastIdentifier = 2222;
         localExtras.put(BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
+        when(mockAdReport.getDspCreativeId()).thenReturn("dsp_creative_id");
+        localExtras.put(AD_REPORT_KEY, mockAdReport);
     }
 
     @Test
@@ -82,7 +90,7 @@ public void preRenderHtml_whenCreatingVideoCache_butItHasInitializationErrors_sh
         verify(customEventInterstitialListener).onInterstitialFailed(
                 eq(MoPubErrorCode.VIDEO_CACHE_ERROR));
         verify(vastManager, never()).prepareVastVideoConfiguration(anyString(),
-                any(VastManagerListener.class), any(Context.class));
+                any(VastManagerListener.class), any(String.class), any(Context.class));
     }
 
     @Test
@@ -106,7 +114,7 @@ public void loadInterstitial_shouldCreateVastManagerAndProcessVast() throws Exce
         subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
 
         verify(vastManager).prepareVastVideoConfiguration(eq(expectedResponse),
-                eq((VastVideoInterstitial) subject), eq(context));
+                eq((VastVideoInterstitial) subject), eq("dsp_creative_id"), eq(context));
     }
 
     @Test
@@ -117,7 +125,7 @@ public void loadInterstitial_whenServerExtrasDoesNotContainResponse_shouldSignal
 
         verify(customEventInterstitialListener).onInterstitialFailed(NETWORK_INVALID_STATE);
         verify(vastManager, never()).prepareVastVideoConfiguration(anyString(),
-                any(VastManagerListener.class), any(Context.class));
+                any(VastManagerListener.class), any(String.class), any(Context.class));
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
index ad511fe5..aaac5fd4 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
@@ -105,11 +105,11 @@
     private static final String COMPANION_CLICK_TRACKING_URL_1 = "companion_click_tracking_url_1";
     private static final String COMPANION_CLICK_TRACKING_URL_2 = "companion_click_tracking_url_2";
     private static final String COMPANION_CLICK_TRACKING_URL_3 = "companion_click_tracking_url_3";
-    private static final String COMPANION_CLICK_DESTINATION_URL = "http://companion_click_destination_url";
+    private static final String COMPANION_CLICK_DESTINATION_URL = "https://companion_click_destination_url";
     private static final String COMPANION_CREATIVE_VIEW_URL_1 = "companion_creative_view_url_1";
     private static final String COMPANION_CREATIVE_VIEW_URL_2 = "companion_creative_view_url_2";
     private static final String COMPANION_CREATIVE_VIEW_URL_3 = "companion_creative_view_url_3";
-    private static final String RESOLVED_CLICKTHROUGH_URL = "http://www.mopub.com/";
+    private static final String RESOLVED_CLICKTHROUGH_URL = "https://www.mopub.com/";
     private static final String CLICKTHROUGH_URL = "deeplink+://navigate?" +
             "&primaryUrl=bogus%3A%2F%2Furl" +
             "&fallbackUrl=" + Uri.encode(RESOLVED_CLICKTHROUGH_URL);
@@ -152,6 +152,7 @@ public void setUp() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setNetworkMediaFileUrl("video_url");
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setDspCreativeId("dsp_creative_id");
         vastVideoConfig.addAbsoluteTrackers(
                 Arrays.asList(new VastAbsoluteProgressTracker("start" + MACRO_TAGS, 2000)));
         vastVideoConfig.addFractionalTrackers(
@@ -488,13 +489,13 @@ public void constructor_whenCustomCloseIconSpecified_shouldUseCustomCloseIcon()
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setCustomCloseIconUrl(
-                "http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png");
+                "https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png");
         bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
 
         initializeSubject();
 
         verify(mockImageLoader).get(
-                eq("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png"),
+                eq("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png"),
                 any(ImageListener.class));
     }
 
@@ -628,7 +629,7 @@ public void VastWebView_onVastWebViewClick_shouldCallVastCompanionAdHandleClick(
                 vastCompanionAdConfig, View.INVISIBLE);
 
         view.getVastWebViewClickListener().onVastWebViewClick();
-        verify(vastCompanionAdConfig).handleClick(any(Context.class), eq(1), anyString());
+        verify(vastCompanionAdConfig).handleClick(any(Context.class), eq(1), anyString(), eq("dsp_creative_id"));
     }
 
     @Test
@@ -676,7 +677,8 @@ public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
     public void onDestroy_withBlurLastVideoFrameTaskStillRunning_shouldCancelTask() throws Exception {
         initializeSubject();
 
-        VastVideoBlurLastVideoFrameTask mockBlurLastVideoFrameTask = mock(VastVideoBlurLastVideoFrameTask.class);
+        VastVideoBlurLastVideoFrameTask mockBlurLastVideoFrameTask = mock(
+                VastVideoBlurLastVideoFrameTask.class);
         when(mockBlurLastVideoFrameTask.getStatus()).thenReturn(AsyncTask.Status.RUNNING);
         subject.getVastVideoView().setBlurLastVideoFrameTask(mockBlurLastVideoFrameTask);
 
@@ -1082,7 +1084,7 @@ public void onPrepared_whenSkipOffsetIsZero_shouldSetShowCloseButtonDelayToZero(
     }
 
     @Test
-    public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldNotSetShowCloseButtonDelay() throws Exception {
+    public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldSetShowCloseButtonDelay() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setSkipOffset("00:00:11");   // 11s
@@ -1095,11 +1097,11 @@ public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldNot
         getShadowVideoView().getOnPreparedListener().onPrepared(null);
 
         assertThat(subject.getShowCloseButtonDelay()).isEqualTo(10 * 1000);
-        assertThat(subject.getHasSkipOffset()).isFalse();
+        assertThat(subject.getHasSkipOffset()).isTrue();
     }
 
     @Test
-    public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldNotSetShowCloseButtonDelay() throws Exception {
+    public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldSetShowCloseButtonDelay() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setSkipOffset("00:00:21");   // 21s
@@ -1111,8 +1113,41 @@ public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldNotS
 
         getShadowVideoView().getOnPreparedListener().onPrepared(null);
 
-        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(
-                DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON);
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(20 * 1000);
+        assertThat(subject.getHasSkipOffset()).isTrue();
+    }
+
+    @Test
+    public void onPrepared_whenSkipOffset100Percent_shouldSetShowCloseButtonDelayToVideoDuration() throws Exception {
+        VastVideoConfig vastVideoConfig = new VastVideoConfig();
+        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setSkipOffset("100%");   // 20000 ms
+        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
+
+        initializeSubject();
+        spyOnVideoView();
+        setVideoViewParams(0, 20000);    // 20s: long video
+
+        getShadowVideoView().getOnPreparedListener().onPrepared(null);
+
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(20000);
+        assertThat(subject.getHasSkipOffset()).isTrue();
+    }
+
+    @Test
+    public void onPrepared_whenSkipOffsetGreaterThan100Percent_shouldSetShowCloseButtonDelayToDefault() throws Exception {
+        VastVideoConfig vastVideoConfig = new VastVideoConfig();
+        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setSkipOffset("101%");   // 20200 ms
+        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
+
+        initializeSubject();
+        spyOnVideoView();
+        setVideoViewParams(0, 20000);    // 20s: long video
+
+        getShadowVideoView().getOnPreparedListener().onPrepared(null);
+
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON);
         assertThat(subject.getHasSkipOffset()).isFalse();
     }
 
@@ -2190,7 +2225,7 @@ public void VastWebView_onVastWebViewClick_shouldCallVastIconHandleClick() throw
         VastWebView view = (VastWebView) subject.createIconView(context, vastIconConfig, View.INVISIBLE);
 
         view.getVastWebViewClickListener().onVastWebViewClick();
-        verify(vastIconConfig).handleClick(any(Context.class), anyString());
+        verify(vastIconConfig).handleClick(any(Context.class), anyString(), eq("dsp_creative_id"));
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
index 1ae2abae..4097331e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
@@ -49,8 +49,8 @@ public void setup() {
     @Test
     public void doWork_whenTrackersReturned_shouldMakeTrackingRequests() {
         List<VastTracker> testTrackers = new ArrayList<VastTracker>();
-        testTrackers.add(new VastAbsoluteProgressTracker("http://example.com/", 1999));
-        testTrackers.add(new VastAbsoluteProgressTracker("http://example1.com/", 2000));
+        testTrackers.add(new VastAbsoluteProgressTracker("https://example.com/", 1999));
+        testTrackers.add(new VastAbsoluteProgressTracker("https://example1.com/", 2000));
 
         when(mockVideoConfig.getUntriggeredTrackersBefore(eq(3000), eq(4000)))
                 .thenReturn(testTrackers);
@@ -72,8 +72,8 @@ public void doWork_whenTrackersReturned_shouldMakeTrackingRequests() {
         verify(mockRequestQueue, times(2)).add(requestCaptor.capture());
         final List<TrackingRequest> allValues = requestCaptor.getAllValues();
         assertThat(allValues).hasSize(2);
-        assertThat(allValues.get(0).getUrl()).isEqualTo("http://example.com/");
-        assertThat(allValues.get(1).getUrl()).isEqualTo("http://example1.com/");
+        assertThat(allValues.get(0).getUrl()).isEqualTo("https://example.com/");
+        assertThat(allValues.get(1).getUrl()).isEqualTo("https://example1.com/");
 
         verifyNoMoreInteractions(mockVastVideoViewController, mockRequestQueue);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
index 887fd533..0475625f 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
@@ -20,22 +20,22 @@
     public void getVastAdTagURI_shouldReturnStringURI() throws Exception {
         String wrapperXml = "<Wrapper>" +
                 "    <Impression id=\"DART\">" +
-                "        <![CDATA[http://impression/m/wrapperOne]]>" +
+                "        <![CDATA[https://impression/m/wrapperOne]]>" +
                 "    </Impression>" +
-                "    <VASTAdTagURI>http://redirecturl/xml</VASTAdTagURI>" +
+                "    <VASTAdTagURI>https://redirecturl/xml</VASTAdTagURI>" +
                 "</Wrapper>";
 
         Node wrapperNode = createNode(wrapperXml);
         subject = new VastWrapperXmlManager(wrapperNode);
 
-        assertThat(subject.getVastAdTagURI()).isEqualTo("http://redirecturl/xml");
+        assertThat(subject.getVastAdTagURI()).isEqualTo("https://redirecturl/xml");
     }
 
     @Test
     public void getVastAdTagURI_withNoVastAdTagURI_shouldReturnNull() throws Exception {
         String wrapperXml = "<Wrapper>" +
                 "    <Impression id=\"DART\">" +
-                "        <![CDATA[http://impression/m/wrapperOne]]>" +
+                "        <![CDATA[https://impression/m/wrapperOne]]>" +
                 "    </Impression>" +
                 "</Wrapper>";
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
index 21870e61..5b7e6444 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
@@ -45,7 +45,7 @@
     static final String TEST_VAST_XML_STRING = "<VAST version='2.0'>" +
             "    <Ad id='empty'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http:emptyimpression]]></Impression>" +
+            "            <Impression><![CDATA[https:emptyimpression]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
@@ -54,37 +54,37 @@
             "                    </Linear>" +
             "                </Creative>" +
             "            </Creatives>" +
-            "            <Error><![CDATA[http://neverCallThisError]]></Error>" +
+            "            <Error><![CDATA[https://neverCallThisError]]></Error>" +
             "        </InLine>" +
             "    </Ad>" +
             "    <Ad id='62833' sequence='1'>" +
             "        <Wrapper>" +
             "            <AdSystem>Tapad</AdSystem>" +
-            "            <VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI>" +
-            "            <Impression>http://myTrackingURL/wrapper/impression1</Impression>" +
-            "            <Impression>http://myTrackingURL/wrapper/impression2</Impression>" +
+            "            <VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI>" +
+            "            <Impression>https://myTrackingURL/wrapper/impression1</Impression>" +
+            "            <Impression>https://myTrackingURL/wrapper/impression2</Impression>" +
             "            <Creatives>" +
             "                <Creative AdID='62833'>" +
             "                    <Linear>" +
             "                        <TrackingEvents>" +
-            "                            <Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking>" +
-            "                            <Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking>" +
-            "                            <Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking>" +
-            "                            <Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking>" +
-            "                            <Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking>" +
-            "                            <Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking>" +
-            "                            <Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking>" +
-            "                            <Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking>" +
-            "                            <Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking>" +
-            "                            <Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking>" +
-            "                            <Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking>" +
+            "                            <Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking>" +
+            "                            <Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking>" +
+            "                            <Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking>" +
+            "                            <Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking>" +
+            "                            <Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking>" +
+            "                            <Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking>" +
+            "                            <Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking>" +
+            "                            <Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking>" +
+            "                            <Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking>" +
+            "                            <Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking>" +
+            "                            <Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking>" +
             "                        </TrackingEvents>" +
             "                        <VideoClicks>" +
-            "                            <ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking>" +
+            "                            <ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://videosInWrappersShouldNeverBePlayed]]>" +
+            "                                <![CDATA[https://videosInWrappersShouldNeverBePlayed]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -93,22 +93,22 @@
             "                    <CompanionAds>" +
             "                        <Companion id=\"wrappercompanion\" height=\"250\" width=\"456\">" +
             "                            <StaticResource creativeType=\"image/jpeg\">" +
-            "                                http://wrapperCompanionAdStaticResource" +
+            "                                https://wrapperCompanionAdStaticResource" +
             "                            </StaticResource>" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://firstWrapperCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://secondWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://firstWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://secondWrapperCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://wrapperCompanionClickThrough</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://wrapperCompanionClickTracking]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://wrapperCompanionClickThrough</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://wrapperCompanionClickTracking]]></CompanionClickTracking>" +
             "                        </Companion> " +
             "                        <Companion id=\"noresource\" height=\"250\" width=\"456\">" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://firstNoResourceWrapperCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://secondNoResourceWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://firstNoResourceWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://secondNoResourceWrapperCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://noResourceWrapperCompanionClickThrough</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://noResourceWrapperCompanionClickTracking1]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://noResourceWrapperCompanionClickThrough</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://noResourceWrapperCompanionClickTracking1]]></CompanionClickTracking>" +
             "                        </Companion> " +
             "                    </CompanionAds>" +
             "                </Creative>" +
@@ -118,18 +118,18 @@
             "                    <MoPubViewabilityTracker" +
             "                            viewablePlaytime=\"2.5\"" +
             "                            percentViewable=\"50%\">" +
-            "                        <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+            "                        <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
             "                    </MoPubViewabilityTracker>" +
             "                </Extension>" +
             "            </Extensions>" +
-            "            <Error><![CDATA[http://wrapperErrorOne?errorcode=[ERRORCODE]]]></Error>" +
-            "            <Error><![CDATA[http://wrapperErrorTwo?errorcode=[ERRORCODE]]]></Error>" +
+            "            <Error><![CDATA[https://wrapperErrorOne?errorcode=[ERRORCODE]]]></Error>" +
+            "            <Error><![CDATA[https://wrapperErrorTwo?errorcode=[ERRORCODE]]]></Error>" +
             "        </Wrapper>" +
             "    </Ad>" +
             "</VAST>" +
             "<MP_TRACKING_URLS>" +
-            "    <MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL>" +
-            "    <MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL>" +
+            "    <MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL>" +
+            "    <MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL>" +
             "</MP_TRACKING_URLS>";
 
     static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" +
@@ -139,7 +139,7 @@
             "            <AdSystem version='1.0'>Tapad</AdSystem>" +
             "            <AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle>" +
             "            <Description/>" +
-            "            <Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
+            "            <Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
             "            <Creatives>" +
             "                <Creative sequence='1' id='57722'>" +
             "                    <Linear>" +
@@ -171,7 +171,7 @@
             "                        </Icons>" +
             "                        <Duration>00:00:15</Duration>" +
             "                        <VideoClicks>" +
-            "                            <ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough>" +
+            "                            <ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'>" +
@@ -184,15 +184,15 @@
             "                    <CompanionAds>" +
             "                        <Companion id=\"valid\" height=\"250\" width=\"300\">" +
             "                            <StaticResource creativeType=\"image/jpeg\">" +
-            "                                http://demo.tremormedia.com/proddev/vast/Blistex1.jpg" +
+            "                                https://demo.tremormedia.com/proddev/vast/Blistex1.jpg" +
             "                            </StaticResource>" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking>" +
-            "                            <CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking>" +
+            "                            <CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking>" +
             "                        </Companion>" +
             "                        <Companion id=\"valid\" height=\"10000\" width=\"10000\">" +
             "                            <HTMLResource>" +
@@ -211,9 +211,9 @@
             "                                ]]>" +
             "                            </HTMLResource>" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://frappucinoCompanion.com</CompanionClickThrough>" +
+            "                            <CompanionClickThrough>https://frappucinoCompanion.com</CompanionClickThrough>" +
             "                        </Companion>" +
             "                        <Companion height=\"30\" width=\"65\" adSlotID=\"adsBy\">" +
             "                            <HTMLResource>" +
@@ -239,8 +239,8 @@
             "                    </CompanionAds>" +
             "                </Creative>" +
             "            </Creatives>" +
-            "            <Error><![CDATA[http://nestedInLineErrorOne]]></Error>" +
-            "            <Error><![CDATA[http://nestedInLineErrorTwo]]></Error>" +
+            "            <Error><![CDATA[https://nestedInLineErrorOne]]></Error>" +
+            "            <Error><![CDATA[https://nestedInLineErrorTwo]]></Error>" +
             "        </InLine>" +
             "    </Ad>" +
             "</VAST>";
@@ -252,13 +252,13 @@
             "            <AdSystem version='1.0'>Tapad</AdSystem>" +
             "            <AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle>" +
             "            <Description/>" +
-            "            <Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
+            "            <Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
             "            <Creatives>" +
             "                <Creative sequence='1' id='57722'>" +
             "                    <Linear>" +
             "                        <Duration>00:00:15</Duration>" +
             "                        <VideoClicks>" +
-            "                            <ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough>" +
+            "                            <ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'>" +
@@ -273,7 +273,7 @@
             "                    <MoPubViewabilityTracker" +
             "                            viewablePlaytime=\"3.5\"" +
             "                            percentViewable=\"70%\">" +
-            "                        <![CDATA[http://ad.server.com/impression/dot.png]]>" +
+            "                        <![CDATA[https://ad.server.com/impression/dot.png]]>" +
             "                    </MoPubViewabilityTracker>" +
             "                </Extension>" +
             "            </Extensions>" +
@@ -281,10 +281,10 @@
             "    </Ad>" +
             "</VAST>";
 
-    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives><Error>![CDATA[http://badNestedError]]</Error]</Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives><Error>![CDATA[https://badNestedError]]</Error]</Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
 
     static final String TEST_JUST_ERROR_XML_STRING = "<VAST version='3.0'>" +
-            "<Error><![CDATA[http://justErrorTracking?errorcode=[ERRORCODE]]]></Error>" +
+            "<Error><![CDATA[https://justErrorTracking?errorcode=[ERRORCODE]]]></Error>" +
             "</VAST>";
 
     static final String TEST_INVALID_VAST_XML_STRING = "<VAST version='fail'>" +
@@ -296,13 +296,13 @@
     static final String TEST_VAST_WITH_NEGATIVE_SEQUENCE_NUMBER_XML_STRING = "<VAST version='3.0'>" +
             "    <Ad id='sequenceTooHigh' sequence='42'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http:sequenceTooHighImp]]></Impression>" +
+            "            <Impression><![CDATA[https:sequenceTooHighImp]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://sequenceTooHighVideo]]>" +
+            "                                <![CDATA[https://sequenceTooHighVideo]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -312,13 +312,13 @@
             "    </Ad>" +
             "    <Ad id='negativeSequence' sequence='-2'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http://negativeSequence]]></Impression>" +
+            "            <Impression><![CDATA[https://negativeSequence]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://negativeSequence]]>" +
+            "                                <![CDATA[https://negativeSequence]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -392,7 +392,7 @@ public void doInBackground_shouldFollowMaxRedirectsMinusOne() throws Exception {
 
         assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3" +
                 ".amazonaws.com/mopub-vast/tapad-video.mp4");
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev" +
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev" +
                 ".tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMj" +
                 "AwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTN" +
                 "BMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxh" +
@@ -401,7 +401,7 @@ public void doInBackground_shouldFollowMaxRedirectsMinusOne() throws Exception {
                 "E2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzM" +
                 "wMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlk" +
                 "PUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3" +
-                "D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad." +
+                "D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad." +
                 "com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(4 *
                 VastXmlManagerAggregator.MAX_TIMES_TO_FOLLOW_VAST_REDIRECT + 1);
@@ -1402,7 +1402,7 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
                 TEST_NESTED_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
-                .containsOnly("http://rtb-test.dev.tapad.com:8080/creative/imp" +
+                .containsOnly("https://rtb-test.dev.tapad.com:8080/creative/imp" +
                         ".png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo" +
                         "=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1");
         assertThat(vastVideoConfig.getFractionalTrackers()).isEmpty();
@@ -1414,13 +1414,13 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
         assertThat(vastVideoConfig.getSkipTrackers()).isEmpty();
         assertThat(vastVideoConfig.getClickTrackers()).isEmpty();
         assertThat(vastVideoConfig.getClickThroughUrl()).isEqualTo(
-                "http://rtb-test.dev.tapad" +
-                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+                "https://rtb-test.dev.tapad" +
+                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
                 "https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
         assertThat(vastVideoConfig.getSkipOffsetString()).isNull();
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getErrorTrackers()))
-                .containsOnly("http://nestedInLineErrorOne", "http://nestedInLineErrorTwo");
+                .containsOnly("https://nestedInLineErrorOne", "https://nestedInLineErrorTwo");
 
         VastCompanionAdConfig[] companionAds = new VastCompanionAdConfig[2];
         companionAds[0] = vastVideoConfig.getVastCompanionAd(
@@ -1431,18 +1431,18 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
             assertThat(companionAd.getWidth()).isEqualTo(300);
             assertThat(companionAd.getHeight()).isEqualTo(250);
             assertThat(companionAd.getVastResource().getResource())
-                    .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                    .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
             assertThat(companionAd.getVastResource().getType())
                     .isEqualTo(VastResource.Type.STATIC_RESOURCE);
             assertThat(companionAd.getVastResource().getCreativeType())
                     .isEqualTo(VastResource.CreativeType.IMAGE);
-            assertThat(companionAd.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+            assertThat(companionAd.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://companionClickTracking1",
-                            "http://companionClickTracking2");
+                    .containsOnly("https://companionClickTracking1",
+                            "https://companionClickTracking2");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://myTrackingURL/firstCompanionCreativeView",
-                            "http://myTrackingURL/secondCompanionCreativeView");
+                    .containsExactly("https://myTrackingURL/firstCompanionCreativeView",
+                            "https://myTrackingURL/secondCompanionCreativeView");
         }
 
         VastIconConfig vastIconConfig = vastVideoConfig.getVastIconConfig();
@@ -1468,57 +1468,57 @@ public void evaluateVastXmlManager_withAWrapperToAnInline_shouldReturnValidVastV
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
                 .containsOnly(
-                        "http://rtb-test.dev.tapad.com:8080/creative/imp" +
+                        "https://rtb-test.dev.tapad.com:8080/creative/imp" +
                                 ".png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp" +
                                 "&ta_pinfo" +
                                 "=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1",
-                        "http://myTrackingURL/wrapper/impression1",
-                        "http://myTrackingURL/wrapper/impression2",
-                        "http://www.mopub.com/imp1",
-                        "http://www.mopub.com/imp2");
+                        "https://myTrackingURL/wrapper/impression1",
+                        "https://myTrackingURL/wrapper/impression2",
+                        "https://www.mopub.com/imp1",
+                        "https://www.mopub.com/imp2");
 
         assertThat(vastVideoConfig.getFractionalTrackers()).hasSize(3);
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(0)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/firstQuartile",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/firstQuartile",
                         0.25f));
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(1)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/midpoint",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/midpoint",
                         0.5f));
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(2)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/thirdQuartile",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/thirdQuartile",
                         0.75f));
 
         assertThat(vastVideoConfig.getAbsoluteTrackers().size()).isEqualTo(2);
         assertThat(vastVideoConfig.getAbsoluteTrackers().get(0)).isEqualsToByComparingFields(
-                new VastAbsoluteProgressTracker("http://myTrackingURL/wrapper/creativeView", 0));
+                new VastAbsoluteProgressTracker("https://myTrackingURL/wrapper/creativeView", 0));
         assertThat(vastVideoConfig.getAbsoluteTrackers().get(1)).isEqualsToByComparingFields(
-                new VastAbsoluteProgressTracker("http://myTrackingURL/wrapper/start", 2000));
+                new VastAbsoluteProgressTracker("https://myTrackingURL/wrapper/start", 2000));
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getPauseTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/pause");
+                .containsOnly("https://myTrackingURL/wrapper/pause");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getResumeTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/resume");
+                .containsOnly("https://myTrackingURL/wrapper/resume");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getCompleteTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/complete");
+                .containsOnly("https://myTrackingURL/wrapper/complete");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getErrorTrackers()))
                 .containsExactly(
-                        "http://wrapperErrorOne?errorcode=[ERRORCODE]",
-                        "http://wrapperErrorTwo?errorcode=[ERRORCODE]",
-                        "http://nestedInLineErrorOne",
-                        "http://nestedInLineErrorTwo");
+                        "https://wrapperErrorOne?errorcode=[ERRORCODE]",
+                        "https://wrapperErrorTwo?errorcode=[ERRORCODE]",
+                        "https://nestedInLineErrorOne",
+                        "https://nestedInLineErrorTwo");
 
         assertThat(vastVideoConfig.getCloseTrackers()).isEmpty();
         assertThat(vastVideoConfig.getSkipTrackers()).isEmpty();
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getClickTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/click");
+                .containsOnly("https://myTrackingURL/wrapper/click");
 
         assertThat(vastVideoConfig.getClickThroughUrl()).isEqualTo(
-                "http://rtb-test.dev.tapad" +
-                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+                "https://rtb-test.dev.tapad" +
+                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
                 "https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
         assertThat(vastVideoConfig.getSkipOffsetString()).isNull();
@@ -1532,21 +1532,21 @@ public void evaluateVastXmlManager_withAWrapperToAnInline_shouldReturnValidVastV
             assertThat(companionAd.getWidth()).isEqualTo(300);
             assertThat(companionAd.getHeight()).isEqualTo(250);
             assertThat(companionAd.getVastResource().getResource())
-                    .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                    .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
             assertThat(companionAd.getVastResource().getType())
                     .isEqualTo(VastResource.Type.STATIC_RESOURCE);
             assertThat(companionAd.getVastResource().getCreativeType())
                     .isEqualTo(VastResource.CreativeType.IMAGE);
-            assertThat(companionAd.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+            assertThat(companionAd.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://companionClickTracking1",
-                            "http://companionClickTracking2",
-                            "http://noResourceWrapperCompanionClickTracking1");
+                    .containsOnly("https://companionClickTracking1",
+                            "https://companionClickTracking2",
+                            "https://noResourceWrapperCompanionClickTracking1");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://myTrackingURL/firstCompanionCreativeView",
-                            "http://myTrackingURL/secondCompanionCreativeView",
-                            "http://firstNoResourceWrapperCompanionCreativeView",
-                            "http://secondNoResourceWrapperCompanionCreativeView");
+                    .containsExactly("https://myTrackingURL/firstCompanionCreativeView",
+                            "https://myTrackingURL/secondCompanionCreativeView",
+                            "https://firstNoResourceWrapperCompanionCreativeView",
+                            "https://secondNoResourceWrapperCompanionCreativeView");
         }
 
         VastIconConfig vastIconConfig = vastVideoConfig.getVastIconConfig();
@@ -1588,15 +1588,15 @@ public void evaluateVastXmlManager_withRedirectHavingNoCompanionAd_shouldReturnV
         for (VastCompanionAdConfig companionAd : companionAds) {
             assertThat(companionAd.getWidth()).isEqualTo(456);
             assertThat(companionAd.getHeight()).isEqualTo(250);
-            assertThat(companionAd.getVastResource().getResource()).isEqualTo("http" +
+            assertThat(companionAd.getVastResource().getResource()).isEqualTo("https" +
                     "://wrapperCompanionAdStaticResource");
             assertThat(companionAd.getClickThroughUrl()).isEqualTo(
-                    "http://wrapperCompanionClickThrough");
+                    "https://wrapperCompanionClickThrough");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://wrapperCompanionClickTracking");
+                    .containsOnly("https://wrapperCompanionClickTracking");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://firstWrapperCompanionCreativeView",
-                            "http://secondWrapperCompanionCreativeView");
+                    .containsExactly("https://firstWrapperCompanionCreativeView",
+                            "https://secondWrapperCompanionCreativeView");
         }
     }
 
@@ -1607,9 +1607,9 @@ public void evaluateVastXmlManager_withSequenceNumbers_shouldReturnVastVideoConf
                 new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
-                "http://negativeSequence");
+                "https://negativeSequence");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
-                .containsOnly("http://negativeSequence");
+                .containsOnly("https://negativeSequence");
     }
 
     @Test
@@ -1620,7 +1620,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerInLine_shouldRetur
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(70);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(3500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.png");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.png");
     }
 
     @Test
@@ -1632,7 +1632,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerInWrapper_shouldRe
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(50);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(2500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.gif");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
@@ -1645,7 +1645,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerBothInWrapperAndIn
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(70);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(3500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.png");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.png");
     }
 
     @Test
@@ -1695,7 +1695,7 @@ public void evaluateVastXmlManager_withJustError_shouldReturnNullVastVideoConfig
                 new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://justErrorTracking?errorcode=900")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://justErrorTracking?errorcode=900")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1706,7 +1706,7 @@ public void evaluateVastXmlManager_withWrapperToJustError_shouldReturnNullVastVi
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://justErrorTracking?errorcode=303")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://justErrorTracking?errorcode=303")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1727,8 +1727,8 @@ public void evaluateVastXmlManager_withWrapperToInvalidXml_shouldReturnNullVastV
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorOne?errorcode=100")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorTwo?errorcode=100")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorOne?errorcode=100")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorTwo?errorcode=100")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1738,8 +1738,8 @@ public void evaluateVastXmlManager_withWrapperToNoHttpResponse_shouldReturnNullV
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorOne?errorcode=301")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorTwo?errorcode=301")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorOne?errorcode=301")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorTwo?errorcode=301")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
index 798d13e9..3f2a1ddd 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
@@ -21,7 +21,7 @@
 @Config(constants = BuildConfig.class)
 public class VastXmlManagerTest {
     private static final String XML_HEADER_TAG = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
-    private static final String TEST_VAST_XML_STRING = "<VAST xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
+    private static final String TEST_VAST_XML_STRING = "<VAST xmlns:xsi=\"https://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
             "            <Ad id=\"223626102\">" +
             "                <InLine>" +
             "                    <AdSystem version=\"2.0\">DART_DFA</AdSystem>" +
@@ -30,12 +30,12 @@
             "                    <Survey/>" +
             "                    <Impression id=\"DART\">" +
             "                        <![CDATA[" +
-            "                        http://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn.net/dot.gif" +
+            "                        https://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn.net/dot.gif" +
             "                        ]]>" +
             "                    </Impression>" +
             "                    <Impression id=\"ThirdParty\">" +
             "                        <![CDATA[" +
-            "                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?" +
+            "                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?" +
             "                        ]]>" +
             "                    </Impression>" +
             "                    <Creatives>" +
@@ -45,137 +45,137 @@
             "                                <TrackingEvents>" +
             "                                    <Tracking event=\"start\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"progress\" offset=\"13%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"progress\" offset=\"01:01:10.300\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to ambiguous offset.
             "                                    <Tracking event=\"progress\" offset=\"01:01\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a too-high percentage offset.
             "                                    <Tracking event=\"progress\" offset=\"113%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a negative percentage offset.
             "                                    <Tracking event=\"progress\" offset=\"-113%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a non-number offset
             "                                    <Tracking event=\"progress\" offset=\"ten seconds\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"midpoint\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"midpoint\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"firstQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"firstQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"thirdQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"thirdQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"complete\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"complete\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"close\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/close?q=ignatius" +
+            "                                        https://www.mopub.com/close?q=ignatius" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"close\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/close?q=j3" +
+            "                                        https://www.mopub.com/close?q=j3" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"skip\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/skip?q=ignatius" +
+            "                                        https://www.mopub.com/skip?q=ignatius" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"skip\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/skip?q=j3" +
+            "                                        https://www.mopub.com/skip?q=j3" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"mute\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"pause\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=15;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=15;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"fullscreen\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"fullscreen\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                </TrackingEvents>" +
             "                                <AdParameters/>" +
             "                                <VideoClicks>" +
             "                                    <ClickThrough>" +
-            "                                        <![CDATA[ http://www.google.com/support/richmedia ]]>" +
+            "                                        <![CDATA[ https://www.google.com/support/richmedia ]]>" +
             "                                    </ClickThrough>" +
             "                                    <ClickTracking id=\"DART\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
+            "                                        https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
             "                                        ]]>" +
             "                                    </ClickTracking>" +
             "                                    <ClickTracking id=\"ThirdParty\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia" +
+            "                                        https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia" +
             "                                        ]]>" +
             "                                    </ClickTracking>" +
             "                                </VideoClicks>" +
@@ -183,7 +183,7 @@
             "                                    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
             "                                               width=\"300\" height=\"225\">" +
             "                                        <![CDATA[" +
-            "                                        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+            "                                        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
             "                                        ]]>" +
             "                                    </MediaFile>" +
             "                                </MediaFiles>" +
@@ -218,92 +218,92 @@
             "                        <Creative AdID=\"601364-Companion\">" +
             "                            <CompanionAds>" +
             "                               <Companion height=\"90\" width=\"728\">" +
-            "                                   <StaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg</StaticResource>" +
-            "                                   <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
+            "                                   <StaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg</StaticResource>" +
+            "                                   <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
             "                                   <BADTrackingEvents>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                   </BADTrackingEvents>" +
             "                               </Companion>" +
             "                               <Companion id=\"valid\" height=\"250\" width=\"300\">" +
-            "                                   <StaticResource creativeType=\"image/png\">http://demo.tremormedia.com/proddev/vast/Blistex1.png</StaticResource>" +
+            "                                   <StaticResource creativeType=\"image/png\">https://demo.tremormedia.com/proddev/vast/Blistex1.png</StaticResource>" +
             "                                   <TrackingEvents>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                   </TrackingEvents>" +
-            "                                   <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking>" +
+            "                                   <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion height=\"789\" width=\"456\">" +
             "                                   <StaticResource creativeType=\"image/bmp\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset/229/7969/300x250.bmp" +
+            "                                           https://cdn.liverail.com/adasset/229/7969/300x250.bmp" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <TrackingEvents>" +
             "                                       <Tracking event=\"creativeView\">" +
             "                                           <![CDATA[" +
-            "                                               http://trackingUrl1.com/" +
+            "                                               https://trackingUrl1.com/" +
             "                                           ]]>" +
             "                                       </Tracking>" +
             "                                   </TrackingEvents>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl1.com/" +
+            "                                           https://clickThroughUrl1.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion height=\"789\" width=\"1011\">" +
             "                                   <StaticResource creativeType=\"image/gif\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset/229/7969/300x250.gif" +
+            "                                           https://cdn.liverail.com/adasset/229/7969/300x250.gif" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl2.com/" +
+            "                                           https://clickThroughUrl2.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking3]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking3]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion width=\"300\" height=\"60\">" +
             "                                   <StaticResource creativeType=\"application/x-shockwave-flash\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf" +
+            "                                           https://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <TrackingEvents>" +
             "                                       <Tracking event=\"creativeView\">" +
             "                                           <![CDATA[" +
-            "                                               http://trackingUrl2.com/" +
+            "                                               https://trackingUrl2.com/" +
             "                                           ]]>" +
             "                                       </Tracking>" +
             "                                   </TrackingEvents>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl3.com/" +
+            "                                           https://clickThroughUrl3.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking4]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking4]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion id=\"valid\" height=\"249\" width=\"299\">" +
-            "                                   <BADStaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/Blistex1.jpg</BADStaticResource>" +
+            "                                   <BADStaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/Blistex1.jpg</BADStaticResource>" +
             "                                   <TrackingEvents>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
-            "                                           <BADTracking event=\"creativeView\">http://myTrackingURL/thirdCompanionCreativeView</BADTracking>" +
-            "                                           <Tracking BADevent=\"creativeView\">http://myTrackingURL/fourthCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"BADcreativeView\">http://myTrackingURL/fifthCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                           <BADTracking event=\"creativeView\">https://myTrackingURL/thirdCompanionCreativeView</BADTracking>" +
+            "                                           <Tracking BADevent=\"creativeView\">https://myTrackingURL/fourthCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"BADcreativeView\">https://myTrackingURL/fifthCompanionCreativeView</Tracking>" +
             "                                   </TrackingEvents>" +
-            "                                   <BADCompanionClickThrough>http://www.tremormedia.com</BADCompanionClickThrough>" +
-            "                                   <BADCompanionClickTracking><![CDATA[http://companionClickTracking5]]></BADCompanionClickTracking>" +
+            "                                   <BADCompanionClickThrough>https://www.tremormedia.com</BADCompanionClickThrough>" +
+            "                                   <BADCompanionClickTracking><![CDATA[https://companionClickTracking5]]></BADCompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion width=\"9000\">" +
             "                                   <TrackingEvents>" +
             "                                       <ThisWillNotBeFound>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                       </ThisWillNotBeFound>" +
             "                                   </TrackingEvents>" +
             "                               </Companion>" +
@@ -327,13 +327,13 @@
             "                        <Extension type=\"MoPub\">" +
             "                           <MoPubCtaText>custom CTA text</MoPubCtaText>" +
             "                           <MoPubSkipText>skip</MoPubSkipText>" +
-            "                           <MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+            "                           <MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
             "                           <MoPubForceOrientation>device</MoPubForceOrientation>" +
             "                           <MoPubViewabilityTracker" +
 "                                           viewablePlaytime=\"2.5\"" +
             "                               percentViewable=\"50%\">" +
             "                               <![CDATA[" +
-            "                                   http://ad.server.com/impression/dot.gif" +
+            "                                   https://ad.server.com/impression/dot.gif" +
             "                               ]]>" +
             "                           </MoPubViewabilityTracker>" +
             "                        </Extension>" +
@@ -341,16 +341,16 @@
             "                </InLine>" +
             "                <Wrapper>" +
             "                   <AdSystem>Acudeo Compatible</AdSystem>" +
-            "                   <VASTAdTagURI>http://0.dsp.dev1.mopub.com/xml</VASTAdTagURI>" +
-            "                   <Impression>http://myTrackingURL/wrapper/impression</Impression>" +
+            "                   <VASTAdTagURI>https://0.dsp.dev1.mopub.com/xml</VASTAdTagURI>" +
+            "                   <Impression>https://myTrackingURL/wrapper/impression</Impression>" +
             "                   <Creatives>" +
             "                   </Creatives>" +
             "                </Wrapper>" +
             "            </Ad>" +
             "        </VAST>" +
             "<MP_TRACKING_URLS>" +
-            "   <MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL>" +
-            "   <MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL>" +
+            "   <MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL>" +
+            "   <MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL>" +
             "</MP_TRACKING_URLS>";
 
     private VastXmlManager mXmlManager;
@@ -432,7 +432,7 @@ public void parseVastXml_withMalformedNodes_shouldNotCauseProblems() {
 
     @Test
     public void getAdXmlManagers_shouldReturnAllAdXmlManagers() throws Exception {
-        String vastXml = "<VAST xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
+        String vastXml = "<VAST xmlns:xsi=\"https://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
                 "    <Ad id=\"12345678\">" +
                 "        <InLine></InLine>" +
                 "    </Ad>" +
@@ -455,7 +455,7 @@ public void getAdXmlManagers_shouldReturnAllAdXmlManagers() throws Exception {
     @Test
     public void getMoPubImpressionTrackers_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getMoPubImpressionTrackers()))
-                .containsOnly("http://www.mopub.com/imp1", "http://www.mopub.com/imp2");
+                .containsOnly("https://www.mopub.com/imp1", "https://www.mopub.com/imp2");
     }
 
     @Test
@@ -476,7 +476,7 @@ public void getCustomSkipText_shouldReturnTheCorrectValue() {
     public void getCustomCloseIconUrl_shouldReturnTheCorrectValue() {
         String customCloseIconUrl = mXmlManager.getCustomCloseIconUrl();
 
-        assertThat(customCloseIconUrl).isEqualTo("http://ton.twitter" +
+        assertThat(customCloseIconUrl).isEqualTo("https://ton.twitter" +
                 ".com/exchange-media/images/v4/star_icon_3x.png");
     }
 
@@ -495,17 +495,17 @@ public void getCustomForceOrientation_shouldReturnTheCorrectValue() {
     public void getVastAdTagURI_withWrapperXmlManager_shouldReturnTheCorrectValue() {
         String url = mXmlManager.getAdXmlManagers().get(0).getWrapperXmlManager().getVastAdTagURI();
 
-        assertThat(url).isEqualTo("http://0.dsp.dev1.mopub.com/xml");
+        assertThat(url).isEqualTo("https://0.dsp.dev1.mopub.com/xml");
     }
 
     @Test
     public void getImpressionTrackers_withInLineXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getImpressionTrackers()))
-                .containsOnly("http://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;" +
+                .containsOnly("https://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;" +
                                 "30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn" +
                                 ".net/dot.gif",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?");
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?");
     }
 
     @Test
@@ -519,9 +519,9 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(0).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/jpeg");
         assertThat(imageCompanionAdXmlManagers.get(0).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg");
         assertThat(imageCompanionAdXmlManagers.get(0).getClickThroughUrl()).isEqualTo(
-                "http://www.tremormedia.com");
+                "https://www.tremormedia.com");
         assertThat(imageCompanionAdXmlManagers.get(0).getClickTrackers()).isEmpty();
 
         assertThat(imageCompanionAdXmlManagers.get(1).getWidth()).isEqualTo(300);
@@ -529,35 +529,35 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(1).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/png");
         assertThat(imageCompanionAdXmlManagers.get(1).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.png");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.png");
         assertThat(imageCompanionAdXmlManagers.get(1).getClickThroughUrl()).isEqualTo(
-                "http://www.tremormedia.com");
+                "https://www.tremormedia.com");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(1)
-                .getClickTrackers())).containsOnly("http://companionClickTracking1");
+                .getClickTrackers())).containsOnly("https://companionClickTracking1");
 
         assertThat(imageCompanionAdXmlManagers.get(2).getWidth()).isEqualTo(456);
         assertThat(imageCompanionAdXmlManagers.get(2).getHeight()).isEqualTo(789);
         assertThat(imageCompanionAdXmlManagers.get(2).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/bmp");
         assertThat(imageCompanionAdXmlManagers.get(2).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://cdn.liverail.com/adasset/229/7969/300x250.bmp");
+                .isEqualTo("https://cdn.liverail.com/adasset/229/7969/300x250.bmp");
         assertThat(imageCompanionAdXmlManagers.get(2).getClickThroughUrl())
-                .isEqualTo("http://clickThroughUrl1.com/");
+                .isEqualTo("https://clickThroughUrl1.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(2)
-                .getClickTrackers())).containsOnly("http://companionClickTracking2");
+                .getClickTrackers())).containsOnly("https://companionClickTracking2");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(2)
-                .getCompanionCreativeViewTrackers())).containsOnly("http://trackingUrl1.com/");
+                .getCompanionCreativeViewTrackers())).containsOnly("https://trackingUrl1.com/");
 
         assertThat(imageCompanionAdXmlManagers.get(3).getWidth()).isEqualTo(1011);
         assertThat(imageCompanionAdXmlManagers.get(3).getHeight()).isEqualTo(789);
         assertThat(imageCompanionAdXmlManagers.get(3).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/gif");
         assertThat(imageCompanionAdXmlManagers.get(3).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://cdn.liverail.com/adasset/229/7969/300x250.gif");
+                .isEqualTo("https://cdn.liverail.com/adasset/229/7969/300x250.gif");
         assertThat(imageCompanionAdXmlManagers.get(3).getClickThroughUrl()).isEqualTo(
-                "http://clickThroughUrl2.com/");
+                "https://clickThroughUrl2.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(3)
-                .getClickTrackers())).containsOnly("http://companionClickTracking3");
+                .getClickTrackers())).containsOnly("https://companionClickTracking3");
         assertThat(imageCompanionAdXmlManagers.get(3).getCompanionCreativeViewTrackers()).isEmpty();
 
         assertThat(imageCompanionAdXmlManagers.get(4).getWidth()).isEqualTo(300);
@@ -566,13 +566,13 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
                 .isEqualTo("application/x-shockwave-flash");
         assertThat(imageCompanionAdXmlManagers.get(4).getResourceXmlManager().getStaticResource())
                 .isEqualTo(
-                        "http://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf");
+                        "https://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf");
         assertThat(imageCompanionAdXmlManagers.get(4).getClickThroughUrl()).isEqualTo(
-                "http://clickThroughUrl3.com/");
+                "https://clickThroughUrl3.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(4)
-                .getClickTrackers())).containsOnly("http://companionClickTracking4");
+                .getClickTrackers())).containsOnly("https://companionClickTracking4");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(4)
-                .getCompanionCreativeViewTrackers())).containsOnly("http://trackingUrl2.com/");
+                .getCompanionCreativeViewTrackers())).containsOnly("https://trackingUrl2.com/");
 
         assertThat(imageCompanionAdXmlManagers.get(5).getWidth()).isEqualTo(299);
         assertThat(imageCompanionAdXmlManagers.get(5).getHeight()).isEqualTo(249);
@@ -582,8 +582,8 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(5).getClickTrackers()).isEmpty();
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(5)
                 .getCompanionCreativeViewTrackers()))
-                .containsOnly("http://myTrackingURL/firstCompanionCreativeView",
-                        "http://myTrackingURL/secondCompanionCreativeView");
+                .containsOnly("https://myTrackingURL/firstCompanionCreativeView",
+                        "https://myTrackingURL/secondCompanionCreativeView");
 
         assertThat(imageCompanionAdXmlManagers.get(6).getWidth()).isEqualTo(9000);
         assertThat(imageCompanionAdXmlManagers.get(6).getHeight()).isNull();
@@ -603,11 +603,11 @@ public void getAbsoluteProgressTrackers_withLinearXmlManager_shouldReturnCorrect
 
         VastAbsoluteProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.getTrackingMilliseconds()).isEqualTo(2000);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastAbsoluteProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.getTrackingMilliseconds()).isEqualTo(3670300);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;" +
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;" +
                 "src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;" +
                 "rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
     }
@@ -621,40 +621,40 @@ public void getFractionalTrackers_withLinearXmlManager_shouldReturnCorrectValues
 
         VastFractionalProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.trackingFraction()).isEqualTo(0.13f);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker4 = trackers.get(4);
         assertThat(tracker4.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker4.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
+        assertThat(tracker4.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker5 = trackers.get(5);
         assertThat(tracker5.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker5.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
+        assertThat(tracker5.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker6 = trackers.get(6);
         assertThat(tracker6.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker6.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
+        assertThat(tracker6.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
     }
 
     @Test
     public void getVideoCompleteTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager().getLinearXmlManagers().get(0).getVideoCompleteTrackers()))
-                .containsOnly("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;" +
+                .containsOnly("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;" +
                                 "pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;" +
                                 "timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;" +
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;" +
                                 "ord=2922389?");
     }
 
@@ -662,16 +662,16 @@ public void getVideoCompleteTrackers_withLinearXmlManager_shouldReturnTheCorrect
     public void getVideoCloseTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getVideoCloseTrackers()))
-                .containsOnly("http://www.mopub.com/close?q=ignatius",
-                        "http://www.mopub.com/close?q=j3");
+                .containsOnly("https://www.mopub.com/close?q=ignatius",
+                        "https://www.mopub.com/close?q=j3");
     }
 
     @Test
     public void getVideoSkipTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getVideoSkipTrackers()))
-                .containsOnly("http://www.mopub.com/skip?q=ignatius",
-                        "http://www.mopub.com/skip?q=j3");
+                .containsOnly("https://www.mopub.com/skip?q=ignatius",
+                        "https://www.mopub.com/skip?q=j3");
     }
 
     @Test
@@ -679,14 +679,14 @@ public void getClickThroughUrl_withLinearXmlManager_shouldReturnTheCorrectValue(
         String url = mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getClickThroughUrl();
 
-        assertThat(url).isEqualTo("http://www.google.com/support/richmedia");
+        assertThat(url).isEqualTo("https://www.google.com/support/richmedia");
     }
 
     @Test
     public void getClickTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager().getLinearXmlManagers().get(0).getClickTrackers()))
-                .containsOnly("http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
-                        "http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia");
+                .containsOnly("https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
+                        "https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia");
     }
 
     @Test
@@ -702,7 +702,7 @@ public void getMediaFileUrl_withMediaXmlManager_shouldReturnTheCorrectValue() {
         String url = mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager()
                 .getLinearXmlManagers().get(0).getMediaXmlManagers().get(0).getMediaUrl();
 
-        assertThat(url).isEqualTo("http://s3.amazonaws.com/uploads.hipchat" +
+        assertThat(url).isEqualTo("https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
index ed1cee96..7b3ce325 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
@@ -31,8 +31,8 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowAsyncTasks.class, ShadowMoPubHttpUrlConnection.class})
 public class VideoDownloaderTest {
     @Mock VideoDownloaderListener mockListener;
-    private final static String expectedUrl1 = "http://video_url";
-    private final static String expectedUrl2 = "http://video_url2";
+    private final static String expectedUrl1 = "https://video_url";
+    private final static String expectedUrl2 = "https://video_url2";
 
     @Before
     public void setUp() {
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
index 7e435cdc..0a7acd72 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
@@ -19,7 +19,7 @@ public void getViewablePlaytimeMS_shouldParseHourFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"01:01:01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -32,7 +32,7 @@ public void getViewablePlaytimeMS_shouldParseSecondsFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -45,7 +45,7 @@ public void getViewablePlaytimeMS_shouldParseIntegerFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"2\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -57,7 +57,7 @@ public void getViewablePlaytimeMS_shouldParseIntegerFormat() throws Exception {
     public void getViewablePlaytimeMS_withoutViewablePlaytimeMS_shouldReturnNull() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -70,7 +70,7 @@ public void getViewablePlaytimeMS_withNegativeInteger_shouldReturnNull() throws
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"-1\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -83,7 +83,7 @@ public void getViewablePlaytimeMS_withInvalidHourFormat_shouldReturnNull() throw
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"a01:01:01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -96,7 +96,7 @@ public void getViewablePlaytimeMS_withInvalidSecondsFormat_shouldReturnNull() th
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"a01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -109,7 +109,7 @@ public void getViewablePlaytimeMS_withInvalidViewablePlaytimeMS_shouldReturnNull
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1234!@#$%^*(asdf\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -122,7 +122,7 @@ public void getPercentViewable_shouldParseWithPercentSign() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -135,7 +135,7 @@ public void getPercentViewable_shouldParseWithoutPercentSign() throws Exception
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -148,7 +148,7 @@ public void getPercentViewable_shouldTruncateFloats() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25.9\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -160,7 +160,7 @@ public void getPercentViewable_shouldTruncateFloats() throws Exception {
     public void getPercentViewable_withoutPercentViewable_shouldReturnNull() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -173,7 +173,7 @@ public void getPercentViewable_withNegativeInteger_shouldReturnNull() throws Exc
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"-25\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -186,7 +186,7 @@ public void getPercentViewable_withIntegerGreaterThan100_shouldReturnNull() thro
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"101\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -199,7 +199,7 @@ public void getPercentViewable_withInvalidPercentViewable_shouldReturnNull() thr
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"1234!@#$%^*(asdf\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -212,13 +212,13 @@ public void getVideoViewabilityTrackerUrl_shouldReturnVideoViewabilityTrackerUrl
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"2\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
 
         assertThat(subject.getVideoViewabilityTrackerUrl())
-                .isEqualTo("http://ad.server.com/impression/dot.gif");
+                .isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
index 0c20e34f..56238936 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
@@ -45,6 +45,8 @@
 import org.robolectric.shadows.ShadowLocationManager;
 import org.robolectric.shadows.ShadowNetworkInfo;
 
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.net.ConnectivityManager.TYPE_DUMMY;
 import static android.net.ConnectivityManager.TYPE_ETHERNET;
@@ -85,6 +87,8 @@
     public void setup() {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_COARSE_LOCATION);
 
         // Set the expected screen dimensions to arbitrary numbers
         final Resources spyResources = spy(context.getResources());
@@ -124,7 +128,6 @@ public Object answer(final InvocationOnMock invocationOnMock) throws Throwable {
         shadowTelephonyManager = (MoPubShadowTelephonyManager) Shadows.shadowOf((TelephonyManager) RuntimeEnvironment.application.getSystemService(Context.TELEPHONY_SERVICE));
         shadowConnectivityManager = Shadows.shadowOf((ConnectivityManager) RuntimeEnvironment.application.getSystemService(Context.CONNECTIVITY_SERVICE));
         methodBuilder = TestMethodBuilderFactory.getSingletonMock();
-        Networking.useHttps(false);
     }
 
     @After
@@ -143,9 +146,8 @@ public void generateAdUrl_shouldIncludeMinimumFields() throws Exception {
 
     @Test
     public void generateAdUrl_withHttpsScheme() throws Exception {
-        Networking.useHttps(true);
         String adUrl = generateMinimumUrlString();
-        assertThat(adUrl).startsWith("https://");
+        assertThat(adUrl).startsWith("http://");
     }
 
     @Test
@@ -396,6 +398,91 @@ public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_sh
         assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
     }
 
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithFineLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("37.0,-122.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithCoarseLocationPermissionOnly_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithNoLocationPermission_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
     @Test
     public void generateAdUrl_whenDeveloperSuppliesMoreRecentLocationThanLocationService_shouldUseDeveloperSuppliedLocation() {
         Location locationFromDeveloper = new Location("");
@@ -450,6 +537,94 @@ public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocatio
         assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
     }
 
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithFineLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("38.0,-123.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithCoarseLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("38.0,-123.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithNoLocationPermission_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
     @Test
     public void generateAdUrl_withNullPackageName_withEmptyPackageName_shouldNotIncludeBundleKey() {
         when(context.getPackageName()).thenReturn(null).thenReturn("");
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
index 5ec0131c..61ac31e0 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
@@ -31,7 +31,7 @@
 
     // From Microsoft's sample xml documents page: https://msdn.microsoft.com/en-us/library/bb387026.aspx
     private String testXml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
-            "<aw:PurchaseOrders xmlns:aw=\"http://www.adventure-works.com\">\n" +
+            "<aw:PurchaseOrders xmlns:aw=\"https://www.adventure-works.com\">\n" +
             "  <aw:PurchaseOrder aw:PurchaseOrderNumber=\"99503\" aw:OrderDate=\"1999-10-20\">\n" +
             "    <aw:Address aw:Type=\"Shipping\">\n" +
             "      <aw:Name>Ellen Adams</aw:Name>\n" +
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
index 04db1b0d..03d09d1a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
@@ -232,7 +232,7 @@ public void handleShouldOverrideUrl_smsUrl_clicked_shouldStartActivity() {
     @Test
     public void handleShouldOverrideUrl_normalUrl_shouldReturnFalse() {
         attachWebViews();
-        boolean result = subjectBanner.handleShouldOverrideUrl("http://www.mopub.com");
+        boolean result = subjectBanner.handleShouldOverrideUrl("https://www.mopub.com");
 
         assertThat(result).isFalse();
     }
@@ -245,7 +245,7 @@ public void runCommand_requiresClick_notClicked_shouldThrowException()
         subjectBanner.attachView(mockBannerWebView);
         subjectBanner.setClicked(false);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
     }
@@ -255,7 +255,7 @@ public void runCommand_requiresClick_clicked_shouldNotThrowException()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
     }
@@ -266,7 +266,7 @@ public void runCommand_interstitial_requiresClick_notClicked_shouldThrowExceptio
         attachWebViews();
         subjectInterstitial.setClicked(false);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectInterstitial.runCommand(MraidJavascriptCommand.OPEN, params);
     }
@@ -277,7 +277,7 @@ public void runCommand_interstitial_requiresClick_clicked_shouldNotThrowExceptio
         attachWebViews();
         subjectInterstitial.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("url", "http://valid-url");
+        params.put("url", "https://valid-url");
 
         subjectInterstitial.runCommand(MraidJavascriptCommand.OPEN, params);
     }
@@ -312,7 +312,7 @@ public void runCommand_expand_withUrl_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("url", "http://valid-url");
+        params.put("url", "https://valid-url");
         params.put("shouldUseCustomClose", "true");
 
         subjectBanner.runCommand(MraidJavascriptCommand.EXPAND, params);
@@ -320,7 +320,7 @@ public void runCommand_expand_withUrl_shouldCallListener()
         ArgumentCaptor<URI> uriCaptor = ArgumentCaptor.forClass(URI.class);
         verify(mockBridgeListener).onExpand(
                 uriCaptor.capture(), eq(true));
-        assertThat(uriCaptor.getValue().toString()).isEqualTo("http://valid-url");
+        assertThat(uriCaptor.getValue().toString()).isEqualTo("https://valid-url");
     }
 
     @Test
@@ -329,13 +329,13 @@ public void runCommand_playVideo_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
 
         ArgumentCaptor<URI> uriCaptor = ArgumentCaptor.forClass(URI.class);
         verify(mockBridgeListener).onPlayVideo(uriCaptor.capture());
-        assertThat(uriCaptor.getValue().toString()).isEqualTo("http://valid-url");
+        assertThat(uriCaptor.getValue().toString()).isEqualTo("https://valid-url");
     }
 
     @Test
@@ -344,11 +344,11 @@ public void runCommand_storePicture_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.STORE_PICTURE, params);
 
-        verify(mockNativeCommandHandler).storePicture(any(Context.class), eq("http://valid-url"),
+        verify(mockNativeCommandHandler).storePicture(any(Context.class), eq("https://valid-url"),
                 any(MraidCommandFailureListener.class));
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
index 6a21c2a5..f824e000 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
@@ -388,11 +388,11 @@ public void handleExpand_withTwoPartUrl_shouldAttachTwoPartBridge_shouldCallOnEx
         // Move to DEFAULT state
         subject.handlePageLoad();
 
-        subject.handleExpand(URI.create("http://two-part-url"), false);
+        subject.handleExpand(URI.create("https://two-part-url"), false);
 
         verify(mockTwoPartBridge).setMraidBridgeListener(any(MraidBridgeListener.class));
         verify(mockTwoPartBridge).attachView(any(MraidWebView.class));
-        verify(mockTwoPartBridge).setContentUrl(URI.create("http://two-part-url").toString());
+        verify(mockTwoPartBridge).setContentUrl(URI.create("https://two-part-url").toString());
 
         assertThat(subject.getExpandedAdContainer().getChildCount()).isEqualTo(2);
         assertThat(subject.getAdContainer().getChildCount()).isEqualTo(1);
@@ -425,7 +425,7 @@ public void handleClose_fromExpandedState_shouldMoveWebViewToOriginalContainer_s
     @Test
     public void handleClose_fromTwoPartExpandedState_shouldDetachTwoPartBridge_shouldMoveWebViewToOriginalContainer_shouldNotFireOnClose()
             throws MraidCommandException {
-        URI uri = URI.create("http://two-part-url");
+        URI uri = URI.create("https://two-part-url");
 
         // Move to two part EXPANDED state
         subject.handlePageLoad();
@@ -458,9 +458,9 @@ public void handleClose_fromDefaultState_shouldHideAdContainer_shouldCallOnClose
 
     @Test
     public void handleShowVideo_shouldStartVideoPlayerActivity() {
-        subject.handleShowVideo("http://video");
+        subject.handleShowVideo("https://video");
         BaseVideoPlayerActivityTest.assertMraidVideoPlayerActivityStarted(
-                MraidVideoPlayerActivity.class, "http://video");
+                MraidVideoPlayerActivity.class, "https://video");
     }
 
     @Test
@@ -521,7 +521,7 @@ public void handleOpen_withApplicationUrl_shouldStartNewIntent() {
 
     @Test
     public void handleOpen_withHttpApplicationUrl_shouldStartMoPubBrowser() {
-        String applicationUrl = "http://www.mopub.com/";
+        String applicationUrl = "https://www.mopub.com/";
 
         subject.handleOpen(applicationUrl);
 
@@ -975,7 +975,7 @@ public void destroy_withExpandedState_shouldSetMraidWebViewsToNull()
         // Necessary to set up the webview before expanding. Also moves the state to DEFAULT.
         subject.handlePageLoad();
         assertThat(subject.getViewState()).isEqualTo(ViewState.DEFAULT);
-        subject.handleExpand(URI.create("http://two-part-url"), false);
+        subject.handleExpand(URI.create("https://two-part-url"), false);
 
         assertThat(subject.getMraidWebView()).isNotNull();
         assertThat(subject.getTwoPartWebView()).isNotNull();
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
index 7217f6ba..e8ee9387 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
@@ -74,7 +74,7 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowAsyncTasks.class, ShadowMoPubHttpUrlConnection.class})
 public class MraidNativeCommandHandlerTest {
     private static final String IMAGE_URI_VALUE = "file://tmp/expectedFile.jpg";
-    private static final String REMOTE_IMAGE_URL = "http://www.mopub.com/expectedFile.jpg";
+    private static final String REMOTE_IMAGE_URL = "https://www.mopub.com/expectedFile.jpg";
     private static final int TIME_TO_PAUSE_FOR_NETWORK = 300;
     private static final String FAKE_IMAGE_DATA = "imageFileData";
     //XXX: Robolectric or JUNIT doesn't support the correct suffix ZZZZZ in the parse pattern, so replacing xx:xx with xxxx for time.
@@ -866,4 +866,4 @@ public Void answer(InvocationOnMock invocation) throws Throwable {
         params.put("description", "Some Event");
         params.put("start", CALENDAR_START_TIME);
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
index d133ec0d..69146604 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
@@ -48,7 +48,7 @@ public void setUp() throws Exception {
         bundle = new Bundle();
         baseVideoViewControllerListener = mock(BaseVideoViewControllerListener.class);
 
-        bundle.putString(VIDEO_URL, "http://video_url");
+        bundle.putString(VIDEO_URL, "https://video_url");
 
         Robolectric.getForegroundThreadScheduler().pause();
         Robolectric.getBackgroundThreadScheduler().pause();
@@ -80,7 +80,7 @@ public void constructor_shouldSetListenersAndVideoPath() throws Exception {
         assertThat(shadowSubject.getOnCompletionListener()).isNotNull();
         assertThat(shadowSubject.getOnErrorListener()).isNotNull();
 
-        assertThat(shadowSubject.getVideoPath()).isEqualTo("http://video_url");
+        assertThat(shadowSubject.getVideoPath()).isEqualTo("https://video_url");
         assertThat(subject.getVideoView().hasFocus()).isTrue();
     }
     
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
index 24f3725b..a369b0ef 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
@@ -50,7 +50,7 @@ public void setUp() throws Exception {
         Context context = Robolectric.buildActivity(Activity.class).create().get();
         CacheService.initialize(context);
         subject = new HttpDiskCompositeDataSource(context, "userAgent", null, mockHttpDataSource);
-        uri = new Uri.Builder().scheme("http").path("www.someurl").build();
+        uri = new Uri.Builder().scheme("https").path("www.someurl").build();
         dataSpec = new DataSpec(uri, 0, -1, null);
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
index e7fba934..a156332a 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
@@ -104,10 +104,10 @@ public void loadNativeAd_shouldReturnFast() {
 
     @Test
     public void requestNativeAd_shouldFireNetworkRequest() {
-        subject.requestNativeAd("http://www.mopub.com");
+        subject.requestNativeAd("https://www.mopub.com");
 
         verify(mockNetworkListener, never()).onNativeFail(any(NativeErrorCode.class));
-        verify(mockRequestQueue).add(argThat(isUrl("http://www.mopub.com")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://www.mopub.com")));
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
index 53242996..eea82131 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
@@ -131,6 +131,7 @@ public void setUp() throws Exception {
                 mockVisibilityTracker, mockNativeVideoControllerFactory, null,
                 "header click tracker", mockVastManager);
         subject.setNativeEventListener(mockNativeEventListener);
+        // noinspection unchecked
         when(mockNativeVideoControllerFactory
                 .createForId(anyInt(), any(Context.class), any(List.class), eq(mockVastVideoConfig),
                         any(EventDetails.class)))
@@ -208,7 +209,7 @@ public void loadAd_shouldPrecacheImages_andLoadVastXml() {
         verify(mockImageLoader).get(eq("iconimageurl"), any(ImageListener.class));
         verify(mockImageLoader).get(eq("extraimageurl"), any(ImageListener.class));
         verify(mockVastManager).prepareVastVideoConfiguration(eq("video"),
-                any(VastManager.VastManagerListener.class), any(Context.class));
+                any(VastManager.VastManagerListener.class), anyString(), any(Context.class));
     }
 
     @Test
@@ -217,6 +218,7 @@ public void onVastVideoConfigurationPrepared_withNullVastVideoConfig_shouldNotif
         verify(mockCustomEventNativeListener).onNativeAdFailed(NativeErrorCode.INVALID_RESPONSE);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldConstructNativeVideoController_shouldNotifyListenerOfAdLoaded() {
         subject.loadAd();
@@ -243,6 +245,7 @@ public void onVastVideoConfigurationPrepared_shouldConstructNativeVideoControlle
         verify(mockCustomEventNativeListener).onNativeAdLoaded(subject);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldMergeHeaderAndJsonClickTrackers() {
         final ArgumentCaptor<List> argumentCaptor = ArgumentCaptor.forClass(List.class);
@@ -261,6 +264,7 @@ public void onVastVideoConfigurationPrepared_shouldMergeHeaderAndJsonClickTracke
         assertThat(jsonClickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldDedupeHeaderAndJsonClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
@@ -278,6 +282,7 @@ public void onVastVideoConfigurationPrepared_shouldDedupeHeaderAndJsonClickTrack
         assertThat(clickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldAcceptJsonArrayClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
@@ -302,6 +307,7 @@ public void onVastVideoConfigurationPrepared_shouldAcceptJsonArrayClickTrackers(
         assertThat(headerClickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldDedupeJsonArrayClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
index ff8d06b1..6946d3af 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
@@ -267,6 +267,7 @@ public void replenishCache_withRequestInFlight_shouldNotLoadNativeAd() {
         assertThat(subject.mRequestInFlight).isTrue();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void replenishCache_withCacheSizeAtLimit_shouldNotLoadNativeAd() {
         // Default cache size may change in the future and this test will have to be updated
@@ -326,6 +327,7 @@ public void moPubNativeNetworkListener_onNativeLoad_shouldIncrementSequenceNumbe
         assertThat(subject.mSequenceNumber).isEqualTo(6);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void moPubNativeNetworkListener_onNativeLoad_withFullCache_shouldResetRequestInFlight() {
         subject.setMoPubNative(mockMoPubNative);
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
index 6e0f201e..b1574b84 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
@@ -85,7 +85,7 @@ public void clearOnClickListener_shouldClearClickListenerFromViewHierarchy() thr
     public void handleClick_shouldShowSpinner_shouldRemoveSpinner_WhenSucceeded() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
 
         verify(mockSpinningProgressView).addToRoot(mockView);
 
@@ -108,8 +108,8 @@ public void handleClick_shouldShowSpinner_shouldRemoveSpinner_WhenFailed() {
     public void handleClick_shouldShowSpinnerOnceWhileClickIsResolving() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
 
         // only is called once
         verify(mockSpinningProgressView).addToRoot(mockView);
@@ -130,10 +130,10 @@ public void handleClick_withNullClickDestinationUrl_shouldNotThrowNPE_shouldDoNo
     public void handleClick_withNullView_shouldNotShowSpinner() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", null, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", null, mockSpinningProgressView);
 
         verify(mockSpinningProgressView, never()).addToRoot(mockView);
         Robolectric.getBackgroundThreadScheduler().unPause();
         verify(mockSpinningProgressView, never()).removeFromRoot();
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
index 33bd9b0c..ed5f6839 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
@@ -36,6 +36,7 @@
 import java.util.EnumSet;
 import java.util.List;
 
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
@@ -57,9 +58,9 @@
 
     @Before
     public void setup() {
-        Networking.useHttps(false);
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
         when(context.getPackageName()).thenReturn("testBundle");
         shadowTelephonyManager = (MoPubShadowTelephonyManager)
                 Shadows.shadowOf((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE));
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
index 11fa6062..c31c2167 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
@@ -33,6 +33,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
+import org.mockito.Mockito;
 import org.robolectric.Robolectric;
 import org.robolectric.annotation.Config;
 import org.robolectric.util.ReflectionHelpers;
@@ -72,6 +73,7 @@
     private ArrayList<VisibilityTrackingEvent> visibilityTrackingEvents;
     private VastVideoConfig vastVideoConfig;
     private NativeVideoProgressRunnable nativeVideoProgressRunnable;
+    private NativeVideoProgressRunnable spyNativeVideoProgressRunnable;
     @Mock private ExoPlayer mockExoPlayer;
     @Mock private NativeVideoProgressRunnable mockNativeVideoProgressRunnable;
     @Mock private TextureView mockTextureView;
@@ -164,6 +166,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs,
         nativeVideoProgressRunnable.setTextureView(mockTextureView);
         nativeVideoProgressRunnable.setExoPlayer(mockExoPlayer);
         nativeVideoProgressRunnable.setProgressListener(mockProgressListener);
+        spyNativeVideoProgressRunnable = Mockito.spy(nativeVideoProgressRunnable);
 
         Networking.setRequestQueueForTesting(mockRequestQueue);
     }
@@ -193,7 +196,7 @@ public void setPlayWhenReady_shouldUpdatePlayWhenReady() {
     }
 
     @Test
-    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_shouldStartVideoProgressRunnable() {
+    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_shouldSetPlayeWhenReadyOnExoPlayer() {
         subject.prepare(this);
         reset(mockNativeVideoProgressRunnable);
 
@@ -202,38 +205,6 @@ public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_should
         subject.setPlayWhenReady(true);
 
         verify(mockExoPlayer).setPlayWhenReady(true);
-        verify(mockNativeVideoProgressRunnable).startRepeating(50);
-    }
-
-    @Test
-    public void setPlayWhenReady_withPlayBackStateNotReady_withPlayWhenReadyTrue_shouldStopVideoProgressRunnable() {
-        subject.prepare(this);
-        reset(mockNativeVideoProgressRunnable);
-
-        when(mockExoPlayer.getPlaybackState()).thenReturn(STATE_PREPARING);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(true);
-        subject.setPlayWhenReady(true);
-
-        verify(mockExoPlayer).setPlayWhenReady(true);
-        verify(mockNativeVideoProgressRunnable).stop();
-        verify(mockNativeVideoProgressRunnable, never()).startRepeating(anyInt());
-    }
-
-    @Test
-    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyFalse_shouldStopVideoProgressRunnable() {
-        subject.prepare(this);
-        // initialize the subject to true so that the next call with false will run
-        subject.setPlayWhenReady(true);
-        reset(mockNativeVideoProgressRunnable);
-        reset(mockExoPlayer);
-
-        when(mockExoPlayer.getPlaybackState()).thenReturn(STATE_READY);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(false);
-        subject.setPlayWhenReady(false);
-
-        verify(mockExoPlayer).setPlayWhenReady(false);
-        verify(mockNativeVideoProgressRunnable).stop();
-        verify(mockNativeVideoProgressRunnable, never()).startRepeating(anyInt());
     }
 
     @Test
@@ -346,6 +317,7 @@ public void prepare_shouldClearExistingPlayer() {
                 eq(MediaCodecVideoTrackRenderer.MSG_SET_SURFACE), eq(null));
         verify(mockExoPlayer).stop();
         verify(mockExoPlayer).release();
+        verify(mockNativeVideoProgressRunnable).stop();
         verify(mockNativeVideoProgressRunnable).setExoPlayer(null);
     }
 
@@ -364,6 +336,7 @@ public void prepare_shouldPreparePlayer() {
 
         verify(mockExoPlayerFactory).newInstance(2, 1000, 5000);
         verify(mockNativeVideoProgressRunnable).setExoPlayer(mockExoPlayer);
+        verify(mockNativeVideoProgressRunnable).startRepeating(50);
         verify(mockExoPlayer).addListener(subject);
         verify(mockExoPlayer).prepare(any(MediaCodecAudioTrackRenderer.class),
                 any(MediaCodecVideoTrackRenderer.class));
@@ -376,7 +349,6 @@ public void prepare_shouldPreparePlayer() {
 
         // play when ready
         verify(mockExoPlayer).setPlayWhenReady(false);
-        verify(mockNativeVideoProgressRunnable).stop();
 
         // set surface
         verify(mockExoPlayer).sendMessage(any(MediaCodecVideoTrackRenderer.class),
@@ -434,19 +406,7 @@ public void release_withMismatchingOwner_shouldNotClearExistingPlayer() {
     }
 
     @Test
-    public void onPlayerStateChanged_withPlayWhenReadyTrue_withStateReady_shouldStartProgressRunnable() {
-        subject.prepare(this);
-
-        reset(mockExoPlayer);
-        reset(mockNativeVideoProgressRunnable);
-        subject.onPlayerStateChanged(true, STATE_READY);
-
-        verify(mockNativeVideoProgressRunnable).startRepeating(50);
-    }
-
-
-    @Test
-    public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame() {
+    public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame_shouldRequestProgressRunnableToStop() {
         subject.setTextureView(mockTextureView);
         subject.prepare(this);
 
@@ -459,6 +419,7 @@ public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame() {
         assertThat(subject.hasFinalFrame()).isTrue();
         assertThat(subject.getFinalFrame()).isNotNull();
         assertThat(((BitmapDrawable) subject.getFinalFrame()).getBitmap()).isEqualTo(mockBitmap);
+        verify(mockNativeVideoProgressRunnable).requestStop();
     }
 
     @Test
@@ -495,12 +456,13 @@ public void getDuration_shouldReturnProgressRunnableDuration() {
     }
 
     @Test
-    public void onPlayerError_shouldNotifyListener() {
+    public void onPlayerError_shouldNotifyListener_shouldRequestProgressRunnableToStop() {
         ExoPlaybackException exoPlaybackException = new ExoPlaybackException("exception");
         subject.setListener(mockListener);
         subject.onPlayerError(exoPlaybackException);
 
         verify(mockListener).onError(exoPlaybackException);
+        verify(mockNativeVideoProgressRunnable).requestStop();
     }
 
     @Test
@@ -628,37 +590,35 @@ public void NativeVideoProgressRunnable_doWork_withExoPlayerGetPlayWhenReadyFals
     }
 
     @Test
-    public void NativeVideoProgressRunnable_doWork_withDurationLessThan0_shouldReturnFast() {
-        when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
-        when(mockExoPlayer.getDuration()).thenReturn(-1L);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(true);
-
-        VastTracker vastTracker = new VastTracker("vastTrackingUrl");
-        List<VastTracker> vastTrackers = new ArrayList<VastTracker>();
-        vastTrackers.add(vastTracker);
-        when(mockVastVideoConfig.getUntriggeredTrackersBefore(10, 25)).thenReturn(vastTrackers);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerNotTrackedEvents_shouldNotStopRunnable() {
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
+        when(mockExoPlayer.getDuration()).thenReturn(50L);
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
+                .thenReturn(true);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
 
-        nativeVideoProgressRunnable.doWork();
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
-        assertThat(visibilityTrackingEvents.get(0).isTracked).isFalse();
-        assertThat(visibilityTrackingEvents.get(1).isTracked).isFalse();
-        assertThat(vastTracker.isTracked()).isFalse();
-        verifyNoMoreInteractions(mockVisibilityChecker);
-        verifyNoMoreInteractions(mockVastVideoConfig);
-        verifyNoMoreInteractions(mockRequestQueue);
-        verifyNoMoreInteractions(mockProgressListener);
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable,never()).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerNotTrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_withStopRequested_shouldOnlyTriggerNotTrackedEvents_shouldStopRunnable() {
+        // Enough time has passed for all impressions to trigger organically
         when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
         when(mockExoPlayer.getDuration()).thenReturn(50L);
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
                 .thenReturn(true);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(false);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
@@ -666,17 +626,40 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldOnlyTriggerNotTrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldOnlyTriggerNotTrackedEvents_shouldNotStopRunnable() {
+        // Not enough time has passed for impressions to trigger organically, but all of them will
+        // be triggered because forceTrigger is true
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(5L);
+        when(mockExoPlayer.getDuration()).thenReturn(50L);
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
+                .thenReturn(true);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
+
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
+    }
+
+    @Test
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_withStopRequested_shouldOnlyTriggerNotTrackedEvents_shouldStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
         when(mockExoPlayer.getDuration()).thenReturn(50L);
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
                 .thenReturn(true);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(true);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
@@ -684,12 +667,18 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerVisibleAndPlayedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_withStopRequested_shouldOnlyTriggerVisibleAndPlayedEvents_shouldNotStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
         when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
         // trackingUrl1: visible & played = track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
                 .thenReturn(true);
@@ -702,9 +691,10 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         // trackingUrl4: !visible & played = !track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
                 .thenReturn(false);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(false);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isFalse();
@@ -714,12 +704,18 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldTriggerAllUntrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldTriggerAllUntrackedEvents_shouldNotStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
         when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
         // trackingUrl1: visible & played = track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
                 .thenReturn(true);
@@ -732,10 +728,49 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         // trackingUrl4: !visible & played = !track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
                 .thenReturn(false);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
+
+        // Because forceTrigger was true, tracking of all impressions is forced
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(3).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
+    }
+
+    @Test
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_withStopRequested_shouldTriggerAllUntrackedEvents_shouldStopRunnable() {
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
+        when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
+        // trackingUrl1: visible & played = track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
+                .thenReturn(true);
+        // trackingUrl2: visible & !played = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(20)))
+                .thenReturn(true);
+        // trackingUrl3: already tracked = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(30)))
+                .thenReturn(true);
+        // trackingUrl4: !visible & played = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
+                .thenReturn(false);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(true);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
 
+        // Because forceTrigger was true, tracking of all impressions is forced
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
@@ -744,5 +779,6 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
index 8cf41406..5f42e4ac 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
@@ -23,7 +23,7 @@
 @Config(constants = BuildConfig.class)
 public class PositioningRequestTest {
 
-    String url = "http://example.com";
+    String url = "https://example.com";
     @Mock
     Response.Listener<MoPubNativeAdPositioning.MoPubClientPositioning> mockListener;
     @Mock
@@ -144,4 +144,4 @@ private void checkException(String json, String expectedMessage) throws Exceptio
         }
         fail("Should have received an exception");
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
index 5eb3c14a..4431db2d 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
@@ -199,6 +199,7 @@ public void visibilityRunnable_run_withNonVisibleView_shouldCallOnNonVisibleCall
 
         ArgumentCaptor<List> visibleCaptor = ArgumentCaptor.forClass(List.class);
         ArgumentCaptor<List> invisibleCaptor = ArgumentCaptor.forClass(List.class);
+        // noinspection unchecked
         verify(visibilityTrackerListener).onVisibilityChanged(visibleCaptor.capture(),
                 invisibleCaptor.capture());
         assertThat(visibleCaptor.getValue().size()).isEqualTo(0);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java b/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
index e15ea711..2aa2a963 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
@@ -350,7 +350,7 @@ public void deliverResponse_shouldCallListenerOnSuccess() throws Exception {
 
     @Test
     public void getRequestId_shouldParseAndReturnRequestIdFromFailUrl() throws Exception {
-        String requestId = subject.getRequestId("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca&exclude=043fde1fe2f9470c9aa67fec262a0596&request_id=7fd6dd3bf1c84f87876b4740c1dd7baa&fail=1");
+        String requestId = subject.getRequestId("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca&exclude=043fde1fe2f9470c9aa67fec262a0596&request_id=7fd6dd3bf1c84f87876b4740c1dd7baa&fail=1");
 
         assertThat(requestId).isEqualTo("7fd6dd3bf1c84f87876b4740c1dd7baa");
     }
@@ -362,7 +362,7 @@ public void getRequestId_withNullFailUrl_shouldReturnNull() throws Exception {
 
     @Test
     public void getRequestId_withUrlWithNoRequestIdParam_shouldReturnNull() throws Exception {
-        assertThat(subject.getRequestId("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")).isNull();
+        assertThat(subject.getRequestId("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")).isNull();
     }
 
     @Test
@@ -447,7 +447,7 @@ public Object answer(InvocationOnMock invocation) throws Throwable {
                 assertThat(baseEvent.getCategory()).isEqualTo(BaseEvent.Category.REQUESTS);
                 assertThat(baseEvent.getSamplingRate()).isEqualTo(0.1);
                 assertThat(baseEvent.getAdUnitId()).isEqualTo(adUnitId);
-                assertThat(baseEvent.getAdCreativeId()).isEqualTo("dsp_creative_id");
+                assertThat(baseEvent.getDspCreativeId()).isEqualTo("dsp_creative_id");
                 assertThat(baseEvent.getAdType()).isEqualTo("html");
                 assertThat(baseEvent.getAdNetworkType()).isEqualTo("network_type");
                 assertThat(baseEvent.getAdWidthPx()).isEqualTo(320);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
index b5137256..042df01a 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
@@ -49,8 +49,8 @@ public void rewriteUrl_whenPlayServicesPresent_shouldUsePlayServicesValue() thro
                 adInfo.LIMIT_AD_TRACKING_ENABLED
         );
 
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
-                .isEqualToIgnoringCase("http://ads.mopub.com/m/ad?ad_id=abcece&udid=ifa%3A38400000-8cf0-11bd-b23e-10b96e40000d&dnt=1");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
+                .isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid=ifa%3A38400000-8cf0-11bd-b23e-10b96e40000d&dnt=1");
     }
 
     @Test
@@ -60,12 +60,12 @@ public void rewriteUrl_whenPlayServicesNotPresent_shouldUseDeviceValue() throws
         // return error code so it fails
         when(methodBuilder.execute()).thenReturn(GpsHelper.GOOGLE_PLAY_SUCCESS_CODE + 1);
 
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
-                .isEqualToIgnoringCase("http://ads.mopub.com/m/ad?ad_id=abcece&udid=sha%3AtestDeviceId&dnt=0");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
+                .isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid=sha%3AtestDeviceId&dnt=0");
     }
 
     @Test
     public void rewriteUrl_noTemplates_shouldReturnIdentical() throws Exception {
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad")).isEqualTo("http://ads.mopub.com/m/ad");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad")).isEqualTo("https://ads.mopub.com/m/ad");
     }
 }
diff --git a/robotium-sample/AndroidManifest.xml b/robotium-sample/AndroidManifest.xml
deleted file mode 100644
index c4277cd0..00000000
--- a/robotium-sample/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="com.mopub.mobileads.robotium"
-      android:versionCode="1"
-      android:versionName="1.0">
-    <uses-sdk
-        android:minSdkVersion="9"
-        android:targetSdkVersion="19"/>
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    
-    <application android:label="Cool Activity">
-	    <activity android:name=".RobotiumTestSupportActivity"
-	            android:label="Cool Activity" android:theme="@android:style/Theme.NoTitleBar" >
-	        <intent-filter>
-	            <action android:name="android.intent.action.MAIN" />
-	            <category android:name="android.intent.category.LAUNCHER" />
-	        </intent-filter>
-	    </activity>
-
-        <activity android:name="com.mopub.mobileads.MoPubActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.mobileads.MraidActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.common.MoPubBrowser"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-    </application>
-
-</manifest>
diff --git a/robotium-sample/pom.xml b/robotium-sample/pom.xml
deleted file mode 100644
index 468cbf9b..00000000
--- a/robotium-sample/pom.xml
+++ /dev/null
@@ -1,115 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>com.mopub.mobileads</groupId>
-        <artifactId>mopub-android</artifactId>
-        <version>1.0</version>
-    </parent>
-
-    <artifactId>robotium-sample</artifactId>
-    <version>1.0.0-SNAPSHOT</version>
-    <packaging>apk</packaging>
-    <name>MoPub Robotium Sample</name>
-    <description>Sample application that can be exercised by Robotium.</description>
-
-    <dependencies>
-
-        <!--main-->
-        <dependency>
-            <groupId>com.mopub.mobileads</groupId>
-            <artifactId>mopub-sdk</artifactId>
-            <version>1.0.0-SNAPSHOT</version>
-            <type>aar</type>
-        </dependency>
-
-
-        <!--test-->
-
-        <dependency>
-            <groupId>com.squareup</groupId>
-            <artifactId>fest-android</artifactId>
-            <version>1.0.1</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!-- this needs to come above fest-reflect or we pick up the wrong org.fest.util.Strings -->
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-assert-core</artifactId>
-            <version>2.0M9</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-reflect</artifactId>
-            <version>1.4</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.8.2</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-            <version>1.9.5</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!--android -->
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>4.4.2</version>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.artifactId}</finalName>
-
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.3.2</version>
-                <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>4.2.0</version>
-                <configuration>
-                    <androidManifestFile>AndroidManifest.xml</androidManifestFile>
-                    <resourceDirectory>res</resourceDirectory>
-                    <sdk>
-                        <!-- platform or api level (api level 4 = platform 1.6)-->
-                        <platform>22</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.6</version>
-                <configuration>
-                    <excludes>
-                        <exclude>**/Test*.java</exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/robotium-sample/res/layout/main.xml b/robotium-sample/res/layout/main.xml
deleted file mode 100644
index f8b562bf..00000000
--- a/robotium-sample/res/layout/main.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent">
-
-    <EditText
-            android:id="@+id/banner_adunit_id_field"
-            android:hint="Enter banner adunit ID"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            >
-    </EditText>
-
-    <Button
-            android:id="@+id/banner_load_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Load Banner"
-            >
-    </Button>
-
-    <com.mopub.mobileads.MoPubView
-            android:id="@+id/mopubview"
-            android:layout_width="320dp"
-            android:layout_height="50dp"
-            >
-    </com.mopub.mobileads.MoPubView>
-
-    <EditText
-            android:id="@+id/interstitial_adunit_id_field"
-            android:hint="Enter interstitial adunit ID"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            >
-    </EditText>
-
-    <Button
-            android:id="@+id/interstitial_load_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Load Interstitial"
-            >
-    </Button>
-
-    <Button
-            android:id="@+id/interstitial_show_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Show Interstitial"
-            >
-    </Button>
-
-</LinearLayout>
diff --git a/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java b/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java
deleted file mode 100644
index 217d8db8..00000000
--- a/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.mopub.mobileads.robotium;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mopub.mobileads.MoPubInterstitial;
-import com.mopub.mobileads.MoPubView;
-
-import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
-
-public class RobotiumTestSupportActivity extends Activity {
-
-    private MoPubView moPubView;
-    private String bannerAdUnitId;
-    private EditText bannerEditText;
-    private InterstitialAdListener interstitialListener;
-    private EditText interstitialEditText;
-    private MoPubInterstitial moPubInterstitial;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
-
-        moPubView = (MoPubView) findViewById(R.id.mopubview);
-        bannerEditText = (EditText) findViewById(R.id.banner_adunit_id_field);
-        interstitialEditText = (EditText) findViewById(R.id.interstitial_adunit_id_field);
-
-        // Banners
-        Button loadBannerButton = (Button) findViewById(R.id.banner_load_button);
-        loadBannerButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                bannerAdUnitId = bannerEditText.getText().toString();
-                moPubView.setAdUnitId(bannerAdUnitId);
-                moPubView.loadAd();
-            }
-        });
-
-        // Interstitials
-        Button loadInterstitialButton = (Button) findViewById(R.id.interstitial_load_button);
-        loadInterstitialButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String interstitialAdUnitId = interstitialEditText.getText().toString();
-                moPubInterstitial = new MoPubInterstitial(RobotiumTestSupportActivity.this, interstitialAdUnitId);
-                moPubInterstitial.setInterstitialAdListener(interstitialListener);
-                moPubInterstitial.load();
-            }
-        });
-
-        Button showInterstitialButton = (Button) findViewById(R.id.interstitial_show_button);
-        showInterstitialButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (moPubInterstitial != null && moPubInterstitial.isReady()) {
-                    moPubInterstitial.show();
-                }
-            }
-        });
-    }
-
-    @Override
-    protected void onDestroy() {
-        if (moPubView != null) moPubView.destroy();
-        if (moPubInterstitial != null) moPubInterstitial.destroy();
-        super.onDestroy();
-    }
-
-    public void setInterstitialListener(InterstitialAdListener interstitialListener) {
-        this.interstitialListener = interstitialListener;
-    }
-}
diff --git a/robotium-tests/AndroidManifest.xml b/robotium-tests/AndroidManifest.xml
deleted file mode 100644
index 43a6b6d4..00000000
--- a/robotium-tests/AndroidManifest.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-		package="com.mopub.mobileads.test"
-		android:versionCode="1"
-		android:versionName="1.0">
-    <uses-sdk
-        android:minSdkVersion="9"
-        android:targetSdkVersion="19"/>
-
-    <instrumentation android:targetPackage="com.mopub.mobileads.robotium" android:name="android.test.InstrumentationTestRunner" />
-
-    <application android:label="Cool Activity Test">
-        <uses-library android:name="android.test.runner" />
-
-        <meta-data android:name="com.google.android.gms.version"
-                   android:value="@integer/google_play_services_version" />
-    </application>
-</manifest>
diff --git a/robotium-tests/pom.xml b/robotium-tests/pom.xml
deleted file mode 100644
index 99a113ce..00000000
--- a/robotium-tests/pom.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>com.mopub.mobileads</groupId>
-        <artifactId>mopub-android</artifactId>
-        <version>1.0</version>
-    </parent>
-
-    <artifactId>robotium-tests</artifactId>
-    <version>1.0.0-SNAPSHOT</version>
-    <packaging>apk</packaging>
-    <name>MoPub Robotium Tests</name>
-    <description>Robotium tests for the sample application.</description>
-
-    <dependencies>
-
-        <!--main-->
-        <dependency>
-            <groupId>com.mopub.mobileads</groupId>
-            <artifactId>robotium-sample</artifactId>
-            <version>1.0.0-SNAPSHOT</version>
-            <scope>provided</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.google.android.gms</groupId>
-            <artifactId>play-services-ads</artifactId>
-            <version>7.0.0</version>
-            <type>aar</type>
-        </dependency>
-
-        <!--test-->
-
-        <dependency>
-            <groupId>com.jayway.android.robotium</groupId>
-            <artifactId>robotium-solo</artifactId>
-            <version>5.0.1</version>
-        </dependency>
-
-        <!--android -->
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>4.4.2</version>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.artifactId}</finalName>
-
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.3.2</version>
-                <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>4.2.0</version>
-                <configuration>
-                    <androidManifestFile>AndroidManifest.xml</androidManifestFile>
-                    <resourceDirectory>res</resourceDirectory>
-                    <sdk>
-                        <!-- platform or api level (api level 4 = platform 1.6)-->
-                        <platform>22</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java b/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java
deleted file mode 100644
index fdf5c296..00000000
--- a/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java
+++ /dev/null
@@ -1,223 +0,0 @@
-package com.mopub.mobileads.test;
-
-import android.test.ActivityInstrumentationTestCase2;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mopub.common.MoPubBrowser;
-import com.mopub.mobileads.MoPubActivity;
-import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.MoPubInterstitial;
-import com.mopub.mobileads.MoPubView;
-import com.mopub.mobileads.robotium.R;
-import com.mopub.mobileads.robotium.RobotiumTestSupportActivity;
-import com.robotium.solo.Solo;
-
-import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
-
-public class RobotiumTestSupportActivityTest extends ActivityInstrumentationTestCase2<RobotiumTestSupportActivity>{
-    private static final long NETWORK_SLEEP_TIME = 8000;
-    private static final String BANNER_AD_UNIT_ID = "agltb3B1Yi1pbmNyDAsSBFNpdGUY8fgRDA";
-    private static final String INTERSTITIAL_AD_UNIT_ID = "agltb3B1Yi1pbmNyDAsSBFNpdGUY6tERDA";
-
-    private Solo solo;
-    private EditText bannerEditText;
-    private EditText interstitialEditText;
-    private Button bannerLoadButton;
-    private Button interstitialLoadButton;
-    private Button interstitialShowButton;
-    private MoPubView banner;
-
-    public RobotiumTestSupportActivityTest() {
-        super(RobotiumTestSupportActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        solo = new Solo(getInstrumentation(), getActivity());
-
-        bannerEditText = (EditText) solo.getView(R.id.banner_adunit_id_field);
-        interstitialEditText = (EditText) solo.getView(R.id.interstitial_adunit_id_field);
-
-        bannerLoadButton = (Button) solo.getView(R.id.banner_load_button);
-        interstitialLoadButton = (Button) solo.getView(R.id.interstitial_load_button);
-        interstitialShowButton = (Button) solo.getView(R.id.interstitial_show_button);
-
-        banner = (MoPubView) solo.getView(R.id.mopubview);
-    }
-
-    @Override
-    public void tearDown() throws Exception {
-        solo.finishOpenedActivities();
-        super.tearDown();
-    }
-
-    public void testMoPubBannerLoadAndClick() throws Exception {
-        enterBannerAdUnitId();
-        TestBannerAdListener listener = new TestBannerAdListener();
-        banner.setBannerAdListener(listener);
-
-        solo.clickOnView(bannerLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Banner was not loaded.", listener.bannerWasLoaded());
-
-        solo.clickOnView(banner);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Banner was not clicked.", listener.bannerWasClicked());
-
-        solo.assertCurrentActivity("expected a MoPubBrowser", MoPubBrowser.class);
-    }
-
-    public void testMoPubInterstitialLoadShowAndClick() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Interstitial was not loaded.", listener.interstitialWasLoaded());
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Interstitial was not shown.", listener.interstitialWasShown());
-        solo.assertCurrentActivity("expected MoPubActivity", MoPubActivity.class);
-
-        solo.clickOnView(solo.getCurrentActivity().findViewById(android.R.id.content));
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        solo.assertCurrentActivity("expected MoPubBrowser", MoPubBrowser.class);
-    }
-
-    public void testMoPubInterstitialLoadShowAndDismissWithCloseButton() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnImageButton(0);
-        Thread.sleep(500);
-        assertTrue("Interstitial was not dismissed.", listener.interstitialWasDismissed());
-    }
-
-    public void testMoPubInterstitialLoadShowAndDismissWithBackButton() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.goBack();
-        assertTrue("Interstitial was not dismissed.", listener.interstitialWasDismissed());
-    }
-
-    private void enterBannerAdUnitId() {
-        solo.enterText(bannerEditText, BANNER_AD_UNIT_ID);
-    }
-
-    private void enterInterstitialAdUnitId() {
-        solo.enterText(interstitialEditText, INTERSTITIAL_AD_UNIT_ID);
-    }
-
-    private static class TestBannerAdListener implements MoPubView.BannerAdListener {
-        private boolean bannerWasLoaded;
-        private boolean bannerWasClicked;
-
-        private boolean bannerWasLoaded() {
-            return bannerWasLoaded;
-        }
-
-        private boolean bannerWasClicked() {
-            return bannerWasClicked;
-        }
-
-        @Override
-        public void onBannerLoaded(MoPubView banner) {
-            bannerWasLoaded = true;
-        }
-
-        @Override
-        public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
-        }
-
-        @Override
-        public void onBannerClicked(MoPubView banner) {
-            bannerWasClicked = true;
-        }
-
-        @Override
-        public void onBannerExpanded(MoPubView banner) {
-        }
-
-        @Override
-        public void onBannerCollapsed(MoPubView banner) {
-        }
-
-        void reset() {
-            bannerWasLoaded = false;
-            bannerWasClicked = false;
-        }
-    }
-
-    private static class TestInterstitialAdListener implements InterstitialAdListener {
-        private boolean interstitialWasLoaded;
-        private boolean interstitialWasShown;
-        private boolean interstitialWasDismissed;
-        private boolean interstitialWasClicked;
-
-        private boolean interstitialWasLoaded() {
-            return interstitialWasLoaded;
-        }
-
-        private boolean interstitialWasShown() {
-            return interstitialWasShown;
-        }
-
-        private boolean isInterstitialWasClicked() {
-            return interstitialWasClicked;
-        }
-
-        public boolean interstitialWasDismissed() {
-            return interstitialWasDismissed;
-        }
-
-        @Override
-        public void onInterstitialLoaded(MoPubInterstitial interstitial) {
-            interstitialWasLoaded = true;
-        }
-
-        @Override
-        public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
-        }
-
-        @Override
-        public void onInterstitialShown(MoPubInterstitial interstitial) {
-            interstitialWasShown = true;
-        }
-
-        @Override
-        public void onInterstitialClicked(MoPubInterstitial interstitial) {
-            interstitialWasClicked = true;
-        }
-
-        @Override
-        public void onInterstitialDismissed(MoPubInterstitial interstitial) {
-            interstitialWasDismissed = true;
-        }
-
-        void reset() {
-            interstitialWasLoaded = false;
-            interstitialWasShown = false;
-            interstitialWasClicked = false;
-            interstitialWasDismissed = false;
-        }
-    }
-}
