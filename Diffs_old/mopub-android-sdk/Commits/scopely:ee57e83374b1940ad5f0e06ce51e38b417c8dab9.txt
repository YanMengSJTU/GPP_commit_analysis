diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java b/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
index a7d8e262..e5a4a042 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
@@ -5,6 +5,8 @@
 import android.net.Uri;
 import android.util.Log;
 
+import java.util.Date;
+
 /*
  * This class enables the MoPub SDK to deliver targeted ads from Facebook via MoPub Marketplace
  * (MoPub's real-time bidding ad exchange) as part of a test program. This class sends an identifier
@@ -17,8 +19,19 @@
     private static final Uri ID_URL = Uri.parse("content://com.facebook.katana.provider.AttributionIdProvider");
     private static final String ID_COLUMN_NAME = "aid";
     private static final String ID_PREFIX = "FBATTRID:";
-    
+
+    private static final long QUIET_PERIOD = 1000L * 60L;
+
+    private static String cachedId;
+    private static long lastQueryTime;
+
     public static String getKeyword(Context context) {
+        if (cachedId != null) return ID_PREFIX + cachedId;
+
+        if (new Date().getTime() - lastQueryTime < QUIET_PERIOD) return null;
+
+        lastQueryTime = new Date().getTime();
+
         try {
             String projection[] = {ID_COLUMN_NAME};
             Cursor c = context.getContentResolver().query(ID_URL, projection, null, null, null);
@@ -32,7 +45,9 @@ public static String getKeyword(Context context) {
             if (attributionId == null || attributionId.length() == 0) {
                 return null;
             }
-            
+
+            cachedId = attributionId;
+
             return ID_PREFIX + attributionId;
         } catch (Exception exception) {
             Log.d("MoPub", "Unable to retrieve FBATTRID: " + exception.toString());
