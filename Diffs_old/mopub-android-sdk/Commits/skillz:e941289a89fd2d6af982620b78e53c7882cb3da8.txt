diff --git a/CHANGELOG.md b/CHANGELOG.md
index 1cc84aae..b8b55c9a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,8 +1,58 @@
+## Version 4.9.0 (September 1, 2016)
+- Removed the full SDK bundle.
+- Removed Eclipse support.
+- Removed InMobi custom events from extras.
+- Deprecated rewarded video calls from `MoPub.java` and moved them to `MoPubRewardedVideos.java`.
+  - For example, `MoPub#loadRewardedVideo` is deprecated in favor of `MoPubRewardedVideos#loadRewardedVideo`.
+- Bug fixes.
+
+**Modular SDK**
+ - Added the ability to specify which ad formats to include as dependencies (to decrease the overall footprint of the MoPub SDK in your app).
+ - Default behavior remains unchanged and includes access to all ad formats.
+ - **Note:** Maven builds from source are currently unstable and will be reinstated in a future release. Maven developers can still pull the MoPub SDK AAR from JCenter.
+
+## Version 4.8.0 (August 1, 2016)
+- Changed the behavior of `MoPubInterstitial#load()` while an interstitial is loading or has been successfully loaded. Previously, this would discard the currently-caching or cached interstitial -- now the interstitial will be unaffected and will remain in the cache.
+- `MoPubInterstitial`s can now be shown only once per successful ad load.
+- Modified a number of Native Ads APIs (manual integration) to accept Context instead of Activity. Affected classes/methods include: `MoPubNative`, `AdapterHelper`, `CustomEventNative#loadNativeAd()`, and `MoPubAdRenderer#createAdView()`.
+
+#### Version 4.7.1 (June 10, 2016)
+- Fixed deeplink bug.
+
+## Version 4.7.0 (June 2, 2016)
+- Rewarded video server-side currency rewarding (Beta).
+- Enhanced Android intent handling.
+
+#### Version 4.6.1 (May 5, 2016)
+- Enhanced caching logic for HTML and MRAID interstitials. Resource-heavy interstitials will now render more quickly when MoPubInterstitial#show() is called.
+
+## Version 4.6.0 (April 21, 2016)
+- Certified Chartboost version 6.4.1
+- Certified Tapjoy version 11.5.1
+
+#### Version 4.5.1 (March 31, 2016)
+- Updated ExoPlayer dependency from r1.4.2 to r1.5.6; courtesy @talklittle. Removed references to READ_EXTERNAL_STORAGE permission.
+
+## Version 4.5.0 (March 24, 2016)
+- Rewarded video support from the MoPub Marketplace (Beta)
+- Miscellaneous bug fixes.
+
+#### Version 4.4.1 (February 23, 2016)
+- Fixed deeplink bug where host must be present in URL.
+
+## Version 4.4.0 (February 11, 2016) 
+- Updated permission model to be compatible with Android 6.0 (API level 23).
+- Enhancements and bug fixes for video ads.
+
+## Version 4.3.0 (December 15, 2015)
+
+- Enhancements and bug fixes for VAST video ads.
+
 ## Version 4.2.0 (November 30, 2015)
 
 - Support for mediating Facebook Native Video ads.
 - Mediated Facebook Native Ads now display the AdChoices icon.
-- Support for Facebook SDK 8.4.1
+- Support for Facebook SDK 4.8.1
 
 ## Version 4.1.0 (November 12, 2015)
 
diff --git a/README.md b/README.md
index 182c1ed5..5a7986f1 100644
--- a/README.md
+++ b/README.md
@@ -27,7 +27,48 @@ The MoPub SDK is available via:
     }
 
     dependencies {
-        compile('com.mopub:mopub-sdk:4.1.0@aar') {
+        compile('com.mopub:mopub-sdk:4.9.0@aar') {
+            transitive = true
+        }
+    }
+    ```
+
+    ***SDK Modularization***
+
+    With the modular SDK, you can choose to include specific formats to decrease overall SDK footprint in your app. To do so, include the line for any combination of components that you want in your `build.gradle` file as follows:
+
+    ```groovy
+    repositories {
+        // ... other project repositories
+        jcenter()
+    }
+    // ...
+
+    dependencies {
+        // ... other project dependencies
+
+        // For banners
+        compile('com.mopub:mopub-sdk-banner:4.9.0@aar') {
+            transitive = true
+        }
+        
+        // For interstitials
+        compile('com.mopub:mopub-sdk-interstitial:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For rewarded videos. This will automatically also include interstitials
+        compile('com.mopub:mopub-sdk-rewardedvideo:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For native static (images).
+        compile('com.mopub:mopub-sdk-native-static:4.9.0@aar') {
+            transitive = true
+        }
+
+        // For native video. This will automatically also include native static
+        compile('com.mopub:mopub-sdk-native-video:4.9.0@aar') {
             transitive = true
         }
     }
@@ -39,14 +80,7 @@ The MoPub SDK is available via:
 
     The MoPub SDK is also distributed as zipped source code that you can include in your application.  MoPub provides two prepackaged archives of source code:
 
-    **[MoPub Android Full SDK.zip](http://bit.ly/YUdU9v)**  
-    _Includes everything you need to serve MoPub ads *and* built-in support for Millennial Media third party ad network - [Millennial Media](http://www.millennialmedia.com/) - including the required third party binaries._
-    
-    _**Note:** Millennial Media has updated their minimum supported version of Android to 4.1 (API level 16+). The MoPub Android Full SDK manifest and build.gradle files have been updated accordingly._
-    
-    _**Note:** Millennial Media has deprecated support for Ant/Eclipse; migrating users should use the MoPub Android base SDK and follow [Millennial's Ant/Eclipse Integration Guide](http://docs.millennialmedia.com/android-ad-sdk/ant-eclipse-integration-guide.html)._
-    
-    **[MoPub Android Base SDK.zip](http://bit.ly/YUdWhH)**  
+    **[MoPub Android SDK.zip](http://bit.ly/YUdWhH)**  
     _Includes everything you need to serve MoPub ads.  No third party ad networks are included._
     
     **For additional integration instructions, please see the [Getting Started guide](https://github.com/mopub/mopub-android-sdk/wiki/Getting-Started#requirements-and-dependencies).**
@@ -62,22 +96,52 @@ The MoPub SDK is available via:
 ## New in this Version
 Please view the [changelog](https://github.com/mopub/mopub-android-sdk/blob/master/CHANGELOG.md) for a complete list of additions, fixes, and enhancements in the latest release.
 
-- Support for mediating Facebook Native Video ads.
-- Mediated Facebook Native Ads now display the AdChoices icon.
-- Support for Facebook SDK 8.4.1
+- Removed the full SDK bundle.
+- Removed Eclipse support.
+- Removed InMobi custom events from extras.
+- Deprecated rewarded video calls from `MoPub.java` and moved them to `MoPubRewardedVideos.java`.
+  - For example, `MoPub#loadRewardedVideo` is deprecated in favor of `MoPubRewardedVideos#loadRewardedVideo`.
+- Bug fixes.
+
+**Modular SDK**
+ - Added the ability to specify which ad formats to include as dependencies (to decrease the overall footprint of the MoPub SDK in your app).
+ - Default behavior remains unchanged and includes access to all ad formats.
+ - **Note:** Maven builds from source are currently unstable and will be reinstated in a future release. Maven developers can still pull the MoPub SDK AAR from JCenter.
 
 ## Requirements
 
 - Android 2.3.1 (API Version 9) and up
-- android-support-v4.jar, r22 (**Updated in 3.7.0**)
-- android-support-annotations.jar, r22 (**Updated in 3.7.0**)
-- android-support-v7-recyclerview.jar, r22 (**Updated in 3.9.0**)
+- android-support-v4.jar, r23 (**Updated in 4.4.0**)
+- android-support-annotations.jar, r23 (**Updated in 4.4.0**)
+- android-support-v7-recyclerview.jar, r23 (**Updated in 4.4.0**)
 - MoPub Volley Library (mopub-volley-1.1.0.jar - available on JCenter) (**Updated in 3.6.0**)
 - **Recommended** Google Play Services 7.8.0
 
 ## Upgrading from 3.2.0 and Prior
 In 3.3.0 a dependency on android-support-annotations.jar was added. If you are using Maven or Gradle to include the MoPub SDK, this dependency is included in the build scripts. For instructions on adding dependencies for Eclipse projects, see our [Getting Started Guide](https://github.com/mopub/mopub-android-sdk/wiki/Getting-Started#adding-the-support-libraries-to-your-project)
 
+## Important Message About Upgrading to MoPub SDK 4.4.0+
+
+Version 4.4.0 of the MoPub SDK fixes a security issue identified by Google. Note that only publishers who received a message from Google are affected. While not all publishers are impacted, we recommend you upgrade to SDK 4.4.0+ ahead of Google's deadline (July 11, 2016) to avoid any issues submitting updates to your apps after the date. More information can be found in [Google's support article](https://support.google.com/faqs/answer/6345928).
+
+## Working with Android 6.0 Runtime Permissions
+If your app's target SDK is 23 or higher _**and**_ the user's device is running Android 6.0 or higher, you are responsible for supporting [runtime permissions](http://developer.android.com/training/permissions/requesting.html), one of the [changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html) introduced in Android 6.0 (API level 23). In addition to listing any dangerous permissions your app needs in the manifest, your app also has to explicitly request the dangerous permission(s) during runtime by calling method `requestPermissions()` in the [`ActivityCompat`](http://developer.android.com/reference/android/support/v4/app/ActivityCompat.html) class.
+
+### Specifically for the MoPub SDK:
+- Dangerous permission [`ACCESS_COARSE_LOCATION`](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION) is needed to pass network location data to MoPub.
+- Dangerous permission [`ACCESS_FINE_LOCATION`](http://developer.android.com/reference/android/Manifest.permission.html#ACCESS_FINE_LOCATION) is needed to pass GPS location data to MoPub.
+    - Granting `ACCESS_FINE_LOCATION` also allows network location data to be passed to MoPub without the need to also grant `ACCESS_COARSE_LOCATION`.
+- Dangerous permission [`WRITE_EXTERNAL_STORAGE`](http://developer.android.com/reference/android/Manifest.permission.html#WRITE_EXTERNAL_STORAGE) is needed for MRAID 2.
+- _**Note:** The user can deny granting any dangerous permissions during runtime, so please make sure your app can handle this properly._
+- _**Note:** The user can revoke any permissions granted previously by going to your app's Settings screen, so please make sure your app can handle this properly._
+
+### Additional resources:
+- [Android 6.0 Changes](http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html)
+- [Requesting Permissions at Run Time](http://developer.android.com/training/permissions/requesting.html)
+- [Permissions Best Practices](http://developer.android.com/training/permissions/best-practices.html)
+- [Normal vs Dangerous Permissions](http://developer.android.com/guide/topics/security/permissions.html#normal-dangerous)
+- [Permission Groups](http://developer.android.com/guide/topics/security/permissions.html#perm-groups)
+
 ## License
 
 We have launched a new license as of version 3.2.0. To view the full license, visit [http://www.mopub.com/legal/sdk-license-agreement/](http://www.mopub.com/legal/sdk-license-agreement/).
diff --git a/build.gradle b/build.gradle
index c62b6341..c5a7da47 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,10 +5,11 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.2.3'
+        classpath 'com.android.tools.build:gradle:2.1.2'
+        classpath 'com.novoda:bintray-release:0.3.4'
     }
 }
 
 task wrapper(type: Wrapper) {
-    gradleVersion = '2.5'
+    gradleVersion = '2.10'
 }
diff --git a/extras/README b/extras/README
deleted file mode 100644
index 5cbc94d1..00000000
--- a/extras/README
+++ /dev/null
@@ -1,9 +0,0 @@
-Google AdSense SDK
-==================
-Although the AdSense SDK for Android is deprecated, you can support it by doing the following:
-
-1) Copy AdSenseAdapter.java under the extras/ folder to mopub-android-sdk/src/com/mopub/mobileads
-2) Place the Google AdSense SDK in mopub-android-sdk/libs
-3) Add GoogleAdView.jar to the Java Build Path in the Properties section of mopub-android-sdk.
-
-*NOTE: At this time, Google does not allow distribution of GoogleAdView.jar so you will need to get that file from Google
diff --git a/extras/src/com/mopub/mobileads/ChartboostInterstitial.java b/extras/src/com/mopub/mobileads/ChartboostInterstitial.java
index 2862ebcf..ace44241 100644
--- a/extras/src/com/mopub/mobileads/ChartboostInterstitial.java
+++ b/extras/src/com/mopub/mobileads/ChartboostInterstitial.java
@@ -14,7 +14,7 @@
 /**
  * A custom event for showing Chartboost interstitial ads.
  *
- * Certified with Chartboost 5.3.0
+ * Certified with Chartboost 6.4.1
  */
 class ChartboostInterstitial extends CustomEventInterstitial {
 
diff --git a/extras/src/com/mopub/mobileads/ChartboostRewardedVideo.java b/extras/src/com/mopub/mobileads/ChartboostRewardedVideo.java
index 619271b8..08f90ca8 100644
--- a/extras/src/com/mopub/mobileads/ChartboostRewardedVideo.java
+++ b/extras/src/com/mopub/mobileads/ChartboostRewardedVideo.java
@@ -16,7 +16,7 @@
 /**
  * A custom event for showing Chartboost rewarded videos.
  *
- * Certified with Chartboost 5.3.0
+ * Certified with Chartboost 6.4.1
  */
 public class ChartboostRewardedVideo extends CustomEventRewardedVideo {
     @NonNull private static final LifecycleListener sLifecycleListener =
diff --git a/extras/src/com/mopub/mobileads/ChartboostShared.java b/extras/src/com/mopub/mobileads/ChartboostShared.java
index e146f15a..a3bb1780 100644
--- a/extras/src/com/mopub/mobileads/ChartboostShared.java
+++ b/extras/src/com/mopub/mobileads/ChartboostShared.java
@@ -8,6 +8,7 @@
 import com.chartboost.sdk.Chartboost;
 import com.chartboost.sdk.ChartboostDelegate;
 import com.chartboost.sdk.Model.CBError;
+import com.mopub.common.MoPub;
 import com.mopub.common.MoPubReward;
 import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
@@ -26,7 +27,7 @@
 /**
  * Shared infrastructure for initializing the Chartboost SDK when mediated by MoPub
  *
- * Certified with Chartboost 5.3.0
+ * Certified with Chartboost 6.4.1
  */
 public class ChartboostShared {
     private static volatile ChartboostSingletonDelegate sDelegate = new ChartboostSingletonDelegate();
@@ -75,7 +76,7 @@ public static synchronized boolean initializeSdk(@NonNull Activity launcherActiv
         // Perform all the common SDK initialization steps including startAppWithId
         Chartboost.startWithAppId(launcherActivity, mAppId, mAppSignature);
         Chartboost.setImpressionsUseActivities(false);
-        Chartboost.setFramework(Chartboost.CBFramework.CBFrameworkMoPub);
+        Chartboost.setMediation(Chartboost.CBMediation.CBMediationMoPub, MoPub.SDK_VERSION);
         Chartboost.setDelegate(sDelegate);
         Chartboost.setShouldRequestInterstitialsInFirstSession(true);
         Chartboost.setAutoCacheAds(false);
diff --git a/extras/src/com/mopub/mobileads/FacebookInterstitial.java b/extras/src/com/mopub/mobileads/FacebookInterstitial.java
index ef4bb874..24d19317 100644
--- a/extras/src/com/mopub/mobileads/FacebookInterstitial.java
+++ b/extras/src/com/mopub/mobileads/FacebookInterstitial.java
@@ -49,6 +49,11 @@ protected void showInterstitial() {
             mFacebookInterstitial.show();
         } else {
             Log.d("MoPub", "Tried to show a Facebook interstitial ad before it finished loading. Please try again.");
+            if (mInterstitialListener != null) {
+                onError(mFacebookInterstitial, AdError.INTERNAL_ERROR);
+            } else {
+                Log.d("MoPub", "Interstitial listener not instantiated. Please load interstitial again.");
+            }
         }
     }
 
diff --git a/extras/src/com/mopub/mobileads/TapjoyInterstitial.java b/extras/src/com/mopub/mobileads/TapjoyInterstitial.java
index c20b64e5..029592dc 100644
--- a/extras/src/com/mopub/mobileads/TapjoyInterstitial.java
+++ b/extras/src/com/mopub/mobileads/TapjoyInterstitial.java
@@ -1,6 +1,8 @@
 package com.mopub.mobileads;
 
 import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
 import android.text.TextUtils;
 
 import com.mopub.common.logging.MoPubLog;
@@ -8,13 +10,23 @@
 import com.tapjoy.TJError;
 import com.tapjoy.TJPlacement;
 import com.tapjoy.TJPlacementListener;
+import com.tapjoy.TapjoyLog;
 
 import java.util.Map;
 
-// Tested with Tapjoy SDK 11.1.0
+// Tested with Tapjoy SDK 11.5.1
 public class TapjoyInterstitial extends CustomEventInterstitial implements TJPlacementListener {
+    private static final String TAG = TapjoyInterstitial.class.getSimpleName();
+    private static final String TJC_MOPUB_NETWORK_CONSTANT = "mopub";
+    private static final String TJC_MOPUB_ADAPTER_VERSION_NUMBER = "4.0.0";
+
     private TJPlacement tjPlacement;
     private CustomEventInterstitialListener mInterstitialListener;
+    private Handler mHandler;
+
+    static {
+        TapjoyLog.i(TAG, "Class initialized with network adapter version " + TJC_MOPUB_ADAPTER_VERSION_NUMBER);
+    }
 
     @Override
     protected void loadInterstitial(Context context,
@@ -24,12 +36,15 @@ protected void loadInterstitial(Context context,
         MoPubLog.d("Requesting Tapjoy interstitial");
 
         mInterstitialListener = customEventInterstitialListener;
+        mHandler = new Handler(Looper.getMainLooper());
 
         String name = serverExtras.get("name");
         if (TextUtils.isEmpty(name)) {
             MoPubLog.d("Tapjoy interstitial loaded with empty 'name' field. Request will fail.");
         }
         tjPlacement = new TJPlacement(context, name, this);
+        tjPlacement.setMediationName(TJC_MOPUB_NETWORK_CONSTANT);
+        tjPlacement.setAdapterVersion(TJC_MOPUB_ADAPTER_VERSION_NUMBER);
         tjPlacement.requestContent();
     }
 
@@ -47,32 +62,55 @@ protected void showInterstitial() {
     // Tapjoy
 
     @Override
-    public void onRequestSuccess(TJPlacement placement) {
-        if (placement.isContentAvailable()) {
-            MoPubLog.d("Tapjoy interstitial request successful");
-            mInterstitialListener.onInterstitialLoaded();
-        } else {
-            MoPubLog.d("No Tapjoy interstitials available");
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
-        }
+    public void onRequestSuccess(final TJPlacement placement) {
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                if (placement.isContentAvailable()) {
+                    MoPubLog.d("Tapjoy interstitial request successful");
+                    mInterstitialListener.onInterstitialLoaded();
+                } else {
+                    MoPubLog.d("No Tapjoy interstitials available");
+                    mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+                }
+            }
+        });
     }
 
     @Override
     public void onRequestFailure(TJPlacement placement, TJError error) {
         MoPubLog.d("Tapjoy interstitial request failed");
-        mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+            }
+        });
     }
 
     @Override
     public void onContentShow(TJPlacement placement) {
         MoPubLog.d("Tapjoy interstitial shown");
-        mInterstitialListener.onInterstitialShown();
+
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                mInterstitialListener.onInterstitialShown();
+            }
+        });
     }
 
     @Override
     public void onContentDismiss(TJPlacement placement) {
         MoPubLog.d("Tapjoy interstitial dismissed");
-        mInterstitialListener.onInterstitialDismissed();
+
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                mInterstitialListener.onInterstitialDismissed();
+            }
+        });
     }
 
     @Override
diff --git a/extras/src/com/mopub/mobileads/TapjoyRewardedVideo.java b/extras/src/com/mopub/mobileads/TapjoyRewardedVideo.java
index 5b989a17..d0f81000 100644
--- a/extras/src/com/mopub/mobileads/TapjoyRewardedVideo.java
+++ b/extras/src/com/mopub/mobileads/TapjoyRewardedVideo.java
@@ -2,24 +2,41 @@
 
 import android.app.Activity;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.text.TextUtils;
 
 import com.mopub.common.LifecycleListener;
 import com.mopub.common.MediationSettings;
+import com.mopub.common.MoPubReward;
 import com.mopub.common.logging.MoPubLog;
 import com.tapjoy.TJActionRequest;
+import com.tapjoy.TJConnectListener;
 import com.tapjoy.TJError;
 import com.tapjoy.TJPlacement;
 import com.tapjoy.TJPlacementListener;
+import com.tapjoy.TJVideoListener;
+import com.tapjoy.Tapjoy;
+import com.tapjoy.TapjoyLog;
 
+import java.util.Hashtable;
 import java.util.Map;
 
-// Tested with Tapjoy SDK 11.1.0
+// Tested with Tapjoy SDK 11.5.1
 public class TapjoyRewardedVideo extends CustomEventRewardedVideo {
+    private static final String TAG = TapjoyRewardedVideo.class.getSimpleName();
+    private static final String TJC_MOPUB_NETWORK_CONSTANT = "mopub";
+    private static final String TJC_MOPUB_ADAPTER_VERSION_NUMBER = "4.0.0";
     private static final String TAPJOY_AD_NETWORK_CONSTANT = "tapjoy_id";
+
+    private String sdkKey;
+    private Hashtable<String, Object> connectFlags;
     private TJPlacement tjPlacement;
     private static TapjoyRewardedVideoListener sTapjoyListener = new TapjoyRewardedVideoListener();
 
+    static {
+        TapjoyLog.i(TAG, "Class initialized with network adapter version " + TJC_MOPUB_ADAPTER_VERSION_NUMBER);
+    }
+
     @Override
     protected CustomEventRewardedVideoListener getVideoListenerForSdk() {
         return sTapjoyListener;
@@ -44,7 +61,29 @@ protected boolean checkAndInitializeSdk(@NonNull Activity launcherActivity,
             @NonNull Map<String, Object> localExtras,
             @NonNull Map<String, String> serverExtras)
             throws Exception {
-        // Always return false, no special initialization steps to be done from here
+
+        if (!Tapjoy.isConnected()) {
+            if (checkAndInitMediationSettings()) {
+                MoPubLog.d("Request to connect to Tapjoy");
+
+                Tapjoy.connect(launcherActivity, sdkKey, connectFlags, new TJConnectListener() {
+                    @Override
+                    public void onConnectSuccess() {
+                        MoPubLog.d("Tapjoy connected successfully");
+                    }
+
+                    @Override
+                    public void onConnectFailure() {
+                        MoPubLog.e("Tapjoy connect failed");
+                    }
+                });
+
+                return true;
+            } else {
+                MoPubLog.d("Cannot connect to Tapjoy -- missing 'sdkkey' declaration via TapjoyMediationSettings");
+            }
+        }
+
         return false;
     }
 
@@ -60,6 +99,8 @@ protected void loadWithSdkInitialized(@NonNull Activity activity,
             MoPubLog.d("Tapjoy interstitial loaded with empty 'name' field. Request will fail.");
         }
         tjPlacement = new TJPlacement(activity, name, sTapjoyListener);
+        tjPlacement.setMediationName(TJC_MOPUB_NETWORK_CONSTANT);
+        tjPlacement.setAdapterVersion(TJC_MOPUB_ADAPTER_VERSION_NUMBER);
         tjPlacement.requestContent();
     }
 
@@ -79,10 +120,33 @@ protected void showVideo() {
 
     }
 
-    private static class TapjoyRewardedVideoListener implements TJPlacementListener, CustomEventRewardedVideoListener {
+    private boolean checkAndInitMediationSettings() {
+        MoPubLog.d("Initializing Tapjoy mediation settings");
+
+        final TapjoyMediationSettings globalMediationSettings =
+                MoPubRewardedVideoManager.getGlobalMediationSettings(TapjoyMediationSettings.class);
+
+        if (globalMediationSettings != null) {
+            if (!TextUtils.isEmpty(globalMediationSettings.getSdkKey())) {
+                sdkKey = globalMediationSettings.getSdkKey();
+            } else {
+                return false;
+            }
+
+            if (globalMediationSettings.getConnectFlags() != null) {
+                connectFlags = globalMediationSettings.getConnectFlags();
+            }
+
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    private static class TapjoyRewardedVideoListener implements TJPlacementListener, CustomEventRewardedVideoListener, TJVideoListener {
         @Override
         public void onRequestSuccess(TJPlacement placement) {
-            if (!placement.isContentAvailable()) {
+            if (!placement.isContentAvailable()){
                 MoPubLog.d("No Tapjoy rewarded videos available");
                 MoPubRewardedVideoManager.onRewardedVideoLoadFailure(TapjoyRewardedVideo.class, TAPJOY_AD_NETWORK_CONSTANT, MoPubErrorCode.NETWORK_NO_FILL);
             }
@@ -102,12 +166,14 @@ public void onRequestFailure(TJPlacement placement, TJError error) {
 
         @Override
         public void onContentShow(TJPlacement placement) {
+            Tapjoy.setVideoListener(this);
             MoPubLog.d("Tapjoy rewarded video content shown");
             MoPubRewardedVideoManager.onRewardedVideoStarted(TapjoyRewardedVideo.class, TAPJOY_AD_NETWORK_CONSTANT);
         }
 
         @Override
         public void onContentDismiss(TJPlacement placement) {
+            Tapjoy.setVideoListener(null);
             MoPubLog.d("Tapjoy rewarded video content dismissed");
             MoPubRewardedVideoManager.onRewardedVideoClosed(TapjoyRewardedVideo.class, TAPJOY_AD_NETWORK_CONSTANT);
         }
@@ -121,11 +187,46 @@ public void onPurchaseRequest(TJPlacement placement, TJActionRequest request,
         public void onRewardRequest(TJPlacement placement, TJActionRequest request, String itemId,
                 int quantity) {
         }
+
+        @Override
+        public void onVideoStart() {
+
+        }
+
+        @Override
+        public void onVideoError(int statusCode) {
+        }
+
+        @Override
+        public void onVideoComplete() {
+            MoPubLog.d("Tapjoy rewarded video completed");
+            MoPubRewardedVideoManager.onRewardedVideoCompleted(TapjoyRewardedVideo.class, TAPJOY_AD_NETWORK_CONSTANT, MoPubReward.success(MoPubReward.NO_REWARD_LABEL, MoPubReward.NO_REWARD_AMOUNT));
+        }
     }
 
     public static final class TapjoyMediationSettings implements MediationSettings {
-        public TapjoyMediationSettings() {
+        @Nullable
+        private final String mSdkKey;
+        @Nullable
+        Hashtable<String, Object> mConnectFlags;
+
+        public TapjoyMediationSettings(String sdkKey) {
+            this.mSdkKey = sdkKey;
+        }
+
+        public TapjoyMediationSettings(String sdkKey, Hashtable<String, Object> connectFlags) {
+            this.mSdkKey = sdkKey;
+            this.mConnectFlags = connectFlags;
+        }
+
+        @NonNull
+        public String getSdkKey() {
+            return mSdkKey;
+        }
 
+        @NonNull
+        public Hashtable<String, Object> getConnectFlags() {
+            return mConnectFlags;
         }
     }
 
diff --git a/extras/src/com/mopub/nativeads/FacebookAdRenderer.java b/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
index 72e87349..b27b883f 100644
--- a/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
+++ b/extras/src/com/mopub/nativeads/FacebookAdRenderer.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -20,7 +20,8 @@
  * static and video native ads. This will automatically replace the main image view with the
  * Facebook MediaView that handles showing the main asset.
  */
-public class FacebookAdRenderer implements MoPubAdRenderer<FacebookNative.FacebookVideoEnabledNativeAd> {
+public class FacebookAdRenderer
+        implements MoPubAdRenderer<com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd> {
     private final ViewBinder mViewBinder;
 
     // This is used instead of View.setTag, which causes a memory leak in 2.3
@@ -38,9 +39,9 @@ public FacebookAdRenderer(final ViewBinder viewBinder) {
     }
 
     @Override
-    public View createAdView(final Activity activity, final ViewGroup parent) {
+    public View createAdView(final Context context, final ViewGroup parent) {
         final View adView = LayoutInflater
-                .from(activity)
+                .from(context)
                 .inflate(mViewBinder.layoutId, parent, false);
         final View mainImageView = adView.findViewById(mViewBinder.mainImageId);
         if (mainImageView == null) {
@@ -72,7 +73,7 @@ public View createAdView(final Activity activity, final ViewGroup parent) {
             mainImageView.setVisibility(View.GONE);
         }
 
-        final MediaView mediaView = new MediaView(activity);
+        final MediaView mediaView = new MediaView(context);
         ViewGroup mainImageParent = (ViewGroup) mainImageView.getParent();
         int mainImageIndex = mainImageParent.indexOfChild(mainImageView);
         mainImageParent.addView(mediaView, mainImageIndex + 1, mediaViewLayoutParams);
@@ -81,7 +82,7 @@ public View createAdView(final Activity activity, final ViewGroup parent) {
 
     @Override
     public void renderAdView(final View view,
-            final FacebookNative.FacebookVideoEnabledNativeAd facebookVideoEnabledNativeAd) {
+            final com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd facebookVideoEnabledNativeAd) {
         FacebookNativeViewHolder facebookNativeViewHolder = mViewHolderMap.get(view);
         if (facebookNativeViewHolder == null) {
             facebookNativeViewHolder = FacebookNativeViewHolder.fromViewBinder(view, mViewBinder);
@@ -98,11 +99,11 @@ public void renderAdView(final View view,
     @Override
     public boolean supports(final BaseNativeAd nativeAd) {
         Preconditions.checkNotNull(nativeAd);
-        return nativeAd instanceof FacebookNative.FacebookVideoEnabledNativeAd;
+        return nativeAd instanceof com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd;
     }
 
     private void update(final FacebookNativeViewHolder facebookNativeViewHolder,
-            final FacebookNative.FacebookVideoEnabledNativeAd nativeAd) {
+            final com.mopub.nativeads.FacebookNative.FacebookVideoEnabledNativeAd nativeAd) {
         final ImageView mainImageView = facebookNativeViewHolder.getMainImageView();
         NativeRendererHelper.addTextView(facebookNativeViewHolder.getTitleView(),
                 nativeAd.getTitle());
diff --git a/extras/src/com/mopub/nativeads/FacebookNative.java b/extras/src/com/mopub/nativeads/FacebookNative.java
index ab951a6d..8faa9268 100644
--- a/extras/src/com/mopub/nativeads/FacebookNative.java
+++ b/extras/src/com/mopub/nativeads/FacebookNative.java
@@ -1,6 +1,5 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.view.View;
 
@@ -47,7 +46,7 @@
 
     // CustomEventNative implementation
     @Override
-    protected void loadNativeAd(final Activity activity,
+    protected void loadNativeAd(final Context context,
             final CustomEventNativeListener customEventNativeListener,
             final Map<String, Object> localExtras,
             final Map<String, String> serverExtras) {
@@ -75,12 +74,12 @@ protected void loadNativeAd(final Activity activity,
         if (shouldUseVideoEnabledNativeAd(sIsVideoRendererAvailable, videoEnabledString,
                 videoEnabledFromServer)) {
             final FacebookVideoEnabledNativeAd facebookVideoEnabledNativeAd =
-                    new FacebookVideoEnabledNativeAd(activity,
-                            new NativeAd(activity, placementId), customEventNativeListener);
+                    new FacebookVideoEnabledNativeAd(context,
+                            new NativeAd(context, placementId), customEventNativeListener);
             facebookVideoEnabledNativeAd.loadAd();
         } else {
             final FacebookStaticNativeAd facebookStaticNativeAd = new FacebookStaticNativeAd(
-                    activity, new NativeAd(activity, placementId), customEventNativeListener);
+                    context, new NativeAd(context, placementId), customEventNativeListener);
             facebookStaticNativeAd.loadAd();
         }
     }
diff --git a/extras/src/com/mopub/nativeads/InMobiNative.java b/extras/src/com/mopub/nativeads/InMobiNative.java
deleted file mode 100644
index 0c0c7a04..00000000
--- a/extras/src/com/mopub/nativeads/InMobiNative.java
+++ /dev/null
@@ -1,230 +0,0 @@
-package com.mopub.nativeads;
-
-import android.app.Activity;
-import android.content.Context;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMNative;
-import com.inmobi.monetization.IMNativeListener;
-import com.mopub.common.logging.MoPubLog;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.json.JSONTokener;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-import static com.mopub.common.util.Json.getJsonValue;
-import static com.mopub.common.util.Numbers.parseDouble;
-import static com.mopub.nativeads.NativeImageHelper.preCacheImages;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-class InMobiNative extends CustomEventNative {
-    private static final String APP_ID_KEY = "app_id";
-
-    // CustomEventNative implementation
-    @Override
-    protected void loadNativeAd(final Activity activity,
-            final CustomEventNativeListener customEventNativeListener,
-            final Map<String, Object> localExtras,
-            final Map<String, String> serverExtras) {
-
-        final String appId;
-        if (extrasAreValid(serverExtras)) {
-            appId = serverExtras.get(APP_ID_KEY);
-        } else {
-            customEventNativeListener.onNativeAdFailed(NativeErrorCode.NATIVE_ADAPTER_CONFIGURATION_ERROR);
-            return;
-        }
-
-        InMobi.initialize(activity, appId);
-        final InMobiStaticNativeAd inMobiStaticNativeAd =
-                new InMobiStaticNativeAd(activity,
-                        new ImpressionTracker(activity),
-                        new NativeClickHandler(activity),
-                        customEventNativeListener);
-        inMobiStaticNativeAd.setIMNative(new IMNative(inMobiStaticNativeAd));
-        inMobiStaticNativeAd.loadAd();
-    }
-
-    private boolean extrasAreValid(final Map<String, String> serverExtras) {
-        final String placementId = serverExtras.get(APP_ID_KEY);
-        return (placementId != null && placementId.length() > 0);
-    }
-
-    static class InMobiStaticNativeAd extends StaticNativeAd implements IMNativeListener {
-        static final int IMPRESSION_MIN_TIME_VIEWED = 0;
-
-        // Modifiable keys
-        static final String TITLE = "title";
-        static final String DESCRIPTION = "description";
-        static final String SCREENSHOTS = "screenshots";
-        static final String ICON = "icon";
-        static final String LANDING_URL = "landing_url";
-        static final String CTA = "cta";
-        static final String RATING = "rating";
-
-        // Constant keys
-        static final String URL = "url";
-
-        private final Context mContext;
-        private final CustomEventNativeListener mCustomEventNativeListener;
-        private final ImpressionTracker mImpressionTracker;
-        private final NativeClickHandler mNativeClickHandler;
-        private IMNative mImNative;
-
-        InMobiStaticNativeAd(final Context context,
-                final ImpressionTracker impressionTracker,
-                final NativeClickHandler nativeClickHandler,
-                final CustomEventNativeListener customEventNativeListener) {
-            mContext = context.getApplicationContext();
-            mImpressionTracker = impressionTracker;
-            mNativeClickHandler = nativeClickHandler;
-            mCustomEventNativeListener = customEventNativeListener;
-        }
-
-        void setIMNative(final IMNative imNative) {
-            mImNative = imNative;
-        }
-
-        void loadAd() {
-            mImNative.loadAd();
-        }
-
-        // IMNativeListener implementation
-        @Override
-        public void onNativeRequestSucceeded(final IMNative imNative) {
-            if (imNative == null) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-                return;
-            }
-
-            try {
-                parseJson(imNative);
-            } catch (JSONException e) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.INVALID_RESPONSE);
-                return;
-            }
-
-            final List<String> imageUrls = new ArrayList<String>();
-            final String mainImageUrl = getMainImageUrl();
-            if (mainImageUrl != null) {
-                imageUrls.add(mainImageUrl);
-            }
-
-            final String iconUrl = getIconImageUrl();
-            if (iconUrl != null) {
-                imageUrls.add(iconUrl);
-            }
-
-            preCacheImages(mContext, imageUrls, new NativeImageHelper.ImageListener() {
-                @Override
-                public void onImagesCached() {
-                    mCustomEventNativeListener.onNativeAdLoaded(InMobiStaticNativeAd.this);
-                }
-
-                @Override
-                public void onImagesFailedToCache(NativeErrorCode errorCode) {
-                    mCustomEventNativeListener.onNativeAdFailed(errorCode);
-                }
-            });
-        }
-
-        @Override
-        public void onNativeRequestFailed(final IMErrorCode errorCode) {
-            if (errorCode == IMErrorCode.INVALID_REQUEST) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_REQUEST);
-            } else if (errorCode == IMErrorCode.INTERNAL_ERROR || errorCode == IMErrorCode.NETWORK_ERROR) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_INVALID_STATE);
-            } else if (errorCode == IMErrorCode.NO_FILL) {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.NETWORK_NO_FILL);
-            } else {
-                mCustomEventNativeListener.onNativeAdFailed(NativeErrorCode.UNSPECIFIED);
-            }
-        }
-
-        // Lifecycle Handlers
-        @Override
-        public void prepare(final View view) {
-            if (view != null && view instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view);
-            } else if (view != null && view.getParent() instanceof ViewGroup) {
-                mImNative.attachToView((ViewGroup) view.getParent());
-            } else {
-                Log.e("MoPub", "InMobi did not receive ViewGroup to attachToView, unable to record impressions");
-            }
-            mImpressionTracker.addView(view, this);
-            mNativeClickHandler.setOnClickListener(view, this);
-        }
-
-        @Override
-        public void clear(final View view) {
-            mImpressionTracker.removeView(view);
-            mNativeClickHandler.clearOnClickListener(view);
-        }
-
-        @Override
-        public void destroy() {
-            mImNative.detachFromView();
-            mImpressionTracker.destroy();
-        }
-
-        // Event Handlers
-        @Override
-        public void recordImpression(final View view) {
-            notifyAdImpressed();
-        }
-
-        @Override
-        public void handleClick(final View view) {
-            notifyAdClicked();
-            mNativeClickHandler.openClickDestinationUrl(getClickDestinationUrl(), view);
-            mImNative.handleClick(null);
-        }
-
-        void parseJson(final IMNative imNative) throws JSONException  {
-            final JSONTokener jsonTokener = new JSONTokener(imNative.getContent());
-            final JSONObject jsonObject = new JSONObject(jsonTokener);
-
-            setTitle(getJsonValue(jsonObject, TITLE, String.class));
-            setText(getJsonValue(jsonObject, DESCRIPTION, String.class));
-
-            final JSONObject screenShotJsonObject = getJsonValue(jsonObject, SCREENSHOTS, JSONObject.class);
-            if (screenShotJsonObject != null) {
-                setMainImageUrl(getJsonValue(screenShotJsonObject, URL, String.class));
-            }
-
-            final JSONObject iconJsonObject = getJsonValue(jsonObject, ICON, JSONObject.class);
-            if (iconJsonObject != null) {
-                setIconImageUrl(getJsonValue(iconJsonObject, URL, String.class));
-            }
-
-            final String clickDestinationUrl = getJsonValue(jsonObject, LANDING_URL, String.class);
-            if (clickDestinationUrl == null) {
-                final String errorMessage = "InMobi JSON response missing required key: "
-                        + LANDING_URL + ". Failing over.";
-                MoPubLog.d(errorMessage);
-                throw new JSONException(errorMessage);
-            }
-
-            setClickDestinationUrl(clickDestinationUrl);
-            setCallToAction(getJsonValue(jsonObject, CTA, String.class));
-
-            try {
-                setStarRating(parseDouble(jsonObject.opt(RATING)));
-            } catch (ClassCastException e) {
-                Log.d("MoPub", "Unable to set invalid star rating for InMobi Native.");
-            }
-            setImpressionMinTimeViewed(IMPRESSION_MIN_TIME_VIEWED);
-        }
-
-    }
-}
diff --git a/extras/src/com/mopub/nativeads/MillennialNative.java b/extras/src/com/mopub/nativeads/MillennialNative.java
index 7a312731..85070c23 100644
--- a/extras/src/com/mopub/nativeads/MillennialNative.java
+++ b/extras/src/com/mopub/nativeads/MillennialNative.java
@@ -25,7 +25,7 @@
     private static final Handler UI_THREAD_HANDLER = new Handler(Looper.getMainLooper());
 
     @Override
-    protected void loadNativeAd(final Activity activity,
+    protected void loadNativeAd(final Context context,
             final CustomEventNativeListener listener,
             final Map<String, Object> localExtras,
             final Map<String, String> serverExtras) {
@@ -35,7 +35,7 @@ protected void loadNativeAd(final Activity activity,
 
         if ( !MMSDK.isInitialized() ) {
             try {
-                MMSDK.initialize(activity);
+                MMSDK.initialize((Activity) context);
             } catch ( Exception e ) {
                 Log.e(LOGCAT_TAG, "Unable to initialize the Millennial SDK-- " + e.getMessage());
                 e.printStackTrace();
@@ -85,10 +85,10 @@ public void run() {
         try {
             NativeAd nativeAd = NativeAd.createInstance(placementId, NativeAd.NATIVE_TYPE_INLINE);
             final MillennialStaticNativeAd millennialStaticNativeAd =
-                    new MillennialStaticNativeAd(activity,
+                    new MillennialStaticNativeAd(context,
                             nativeAd,
-                            new ImpressionTracker(activity),
-                            new NativeClickHandler(activity),
+                            new ImpressionTracker(context),
+                            new NativeClickHandler(context),
                             listener);
             millennialStaticNativeAd.loadAd();
         } catch ( MMException e ) {
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java b/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
deleted file mode 100644
index b51fb04c..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiBanner.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.commons.InMobi.LOG_LEVEL;
-import com.inmobi.monetization.IMBanner;
-import com.inmobi.monetization.IMBannerListener;
-import com.inmobi.monetization.IMErrorCode;
-import com.mopub.common.MoPub;
-import com.mopub.common.util.Views;
-import com.mopub.mobileads.CustomEventBanner;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK 4.4.1
- */
-public class InMobiBanner extends CustomEventBanner implements IMBannerListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadBanner(Context context,
-            CustomEventBannerListener bannerListener,
-            Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mBannerListener = bannerListener;
-        String inMobiAppId = DEFAULT_APP_ID;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-        if (activity == null) {
-            mBannerListener.onBannerFailed(null);
-            return;
-        }
-
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-
-        iMBanner = new IMBanner(activity, inMobiAppId,
-                IMBanner.INMOBI_AD_UNIT_320X50);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMBanner.setRequestParams(map);
-        InMobi.setLogLevel(LOG_LEVEL.VERBOSE);
-        iMBanner.setIMBannerListener(this);
-        iMBanner.setRefreshInterval(-1);
-        iMBanner.loadBanner();
-
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventBannerListener mBannerListener;
-    private IMBanner iMBanner;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventBanner
-     */
-
-    @Override
-    public void onInvalidate() {
-        if (iMBanner != null) {
-            iMBanner.setIMBannerListener(null);
-            Views.removeFromParent(iMBanner);
-            iMBanner.destroy();
-        }
-    }
-
-    @Override
-    public void onBannerInteraction(IMBanner imBanner, Map<String, String> map) {
-        mBannerListener.onBannerClicked();
-    }
-
-    @Override
-    public void onBannerRequestFailed(IMBanner imBanner, IMErrorCode imErrorCode) {
-
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mBannerListener
-                    .onBannerFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mBannerListener.onBannerFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mBannerListener.onBannerFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onBannerRequestSucceeded(IMBanner imBanner) {
-        if (iMBanner != null) {
-            mBannerListener.onBannerLoaded(imBanner);
-
-        } else {
-            mBannerListener.onBannerFailed(null);
-        }
-    }
-
-    @Override
-    public void onDismissBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerCollapsed();
-    }
-
-    @Override
-    public void onLeaveApplication(IMBanner imBanner) {
-
-    }
-
-    @Override
-    public void onShowBannerScreen(IMBanner imBanner) {
-        mBannerListener.onBannerExpanded();
-    }
-
-}
diff --git a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java b/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
deleted file mode 100644
index ad45e7d8..00000000
--- a/extras/src/com/mopub/simpleadsdemo/InMobiInterstitial.java
+++ /dev/null
@@ -1,135 +0,0 @@
-package com.mopub.simpleadsdemo;
-
-import android.app.Activity;
-import android.content.Context;
-
-import com.inmobi.commons.InMobi;
-import com.inmobi.monetization.IMErrorCode;
-import com.inmobi.monetization.IMInterstitial;
-import com.inmobi.monetization.IMInterstitialListener;
-import com.mopub.common.MoPub;
-import com.mopub.mobileads.CustomEventInterstitial;
-import com.mopub.mobileads.MoPubErrorCode;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/*
- * Tested with InMobi SDK  4.4.1
- */
-public class InMobiInterstitial extends CustomEventInterstitial implements IMInterstitialListener {
-
-    private static final String DEFAULT_APP_ID = "YOUR_INMOBI_APP_ID_HERE";
-
-    /*
-     * These keys are intended for MoPub internal use. Do not modify.
-     */
-    public static final String APP_ID_KEY = "app_id";
-
-    @Override
-    protected void loadInterstitial(Context context,
-                                    CustomEventInterstitialListener interstitialListener,
-                                    Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        mInterstitialListener = interstitialListener;
-
-        Activity activity = null;
-        if (context instanceof Activity) {
-            activity = (Activity) context;
-        } else {
-            // You may also pass in an Activity Context in the localExtras map
-            // and retrieve it here.
-        }
-
-        if (activity == null) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-            return;
-        }
-
-        String inMobiAppId = DEFAULT_APP_ID;
-        if (extrasAreValid(serverExtras)) {
-            inMobiAppId = serverExtras.get(APP_ID_KEY);
-        }
-
-        if (!isAppInitialized) {
-            InMobi.initialize(activity, inMobiAppId);
-            isAppInitialized = true;
-        }
-        this.iMInterstitial = new IMInterstitial(activity, inMobiAppId);
-
-        Map<String, String> map = new HashMap<String, String>();
-        map.put("tp", "c_mopub");
-        map.put("tp-ver", MoPub.SDK_VERSION);
-        iMInterstitial.setRequestParams(map);
-        iMInterstitial.setIMInterstitialListener(this);
-        iMInterstitial.loadInterstitial();
-    }
-
-    private boolean extrasAreValid(Map<String, String> extras) {
-        return extras.containsKey(APP_ID_KEY);
-    }
-
-    private CustomEventInterstitialListener mInterstitialListener;
-    private IMInterstitial iMInterstitial;
-    private static boolean isAppInitialized = false;
-
-    /*
-     * Abstract methods from CustomEventInterstitial
-     */
-
-    @Override
-    public void showInterstitial() {
-        if (iMInterstitial != null
-                && IMInterstitial.State.READY.equals(this.iMInterstitial.getState())) {
-            iMInterstitial.show();
-        }
-    }
-
-    @Override
-    public void onInvalidate() {
-        if (iMInterstitial != null) {
-            iMInterstitial.setIMInterstitialListener(null);
-            iMInterstitial.destroy();
-        }
-    }
-
-    @Override
-    public void onDismissInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialDismissed();
-    }
-
-    @Override
-    public void onInterstitialFailed(IMInterstitial imInterstitial, IMErrorCode imErrorCode) {
-        if (imErrorCode == IMErrorCode.INTERNAL_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.INTERNAL_ERROR);
-        } else if (imErrorCode == IMErrorCode.INVALID_REQUEST) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
-        } else if (imErrorCode == IMErrorCode.NETWORK_ERROR) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_INVALID_STATE);
-        } else if (imErrorCode == IMErrorCode.NO_FILL) {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
-        } else {
-            mInterstitialListener.onInterstitialFailed(MoPubErrorCode.UNSPECIFIED);
-        }
-    }
-
-    @Override
-    public void onInterstitialInteraction(IMInterstitial imInterstitial,
-                                          Map<String, String> map) {
-        mInterstitialListener.onInterstitialClicked();
-    }
-
-    @Override
-    public void onInterstitialLoaded(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialLoaded();
-    }
-
-    @Override
-    public void onLeaveApplication(IMInterstitial imInterstitial) {
-
-    }
-
-    @Override
-    public void onShowInterstitialScreen(IMInterstitial imInterstitial) {
-        mInterstitialListener.onInterstitialShown();
-    }
-}
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 30d399d8..13372aef 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 57375a65..1e12d0b2 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Jul 15 14:33:43 PDT 2015
+#Mon Jun 20 17:07:26 PDT 2016
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-bin.zip
diff --git a/gradlew b/gradlew
index 91a7e269..9d82f789 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/gradlew.bat b/gradlew.bat
index 8a0b282a..aec99730 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,90 +1,90 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/mopub-sample/.classpath b/mopub-sample/.classpath
deleted file mode 100644
index 3c02ddb2..00000000
--- a/mopub-sample/.classpath
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="src" path="src/main/java"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/mopub-sample/.project b/mopub-sample/.project
deleted file mode 100644
index 2ae5c5ab..00000000
--- a/mopub-sample/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>mopub-sample</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/mopub-sample/AndroidManifest.xml b/mopub-sample/AndroidManifest.xml
index a2b974ef..f7dd6ffc 100644
--- a/mopub-sample/AndroidManifest.xml
+++ b/mopub-sample/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.mopub.simpleadsdemo"
-      android:versionCode="33"
-      android:versionName="4.2.0">
+      android:versionCode="44"
+      android:versionName="4.9.0">
     <uses-sdk android:minSdkVersion="9"
               android:targetSdkVersion="23"/>
 
@@ -10,10 +10,6 @@
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
-    <!-- This is added as a workaround for the manifest merger duplicating exoplayer
-         and play services permissions. -->
-    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
-
     <!-- For MRAID 2 -->
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
diff --git a/mopub-sample/build.gradle b/mopub-sample/build.gradle
index ad4db64f..b123a744 100644
--- a/mopub-sample/build.gradle
+++ b/mopub-sample/build.gradle
@@ -7,9 +7,9 @@ repositories {
 
 apply plugin: 'com.android.application'
 
-group = 'com.mopub'
-description = '''MoPub Sample App'''
-version = '4.2.0'
+project.group = 'com.mopub'
+project.description = '''MoPub Sample App'''
+project.version = '4.9.0'
 
 android {
     compileSdkVersion 23
@@ -17,7 +17,7 @@ android {
     lintOptions { abortOnError false }
 
     defaultConfig {
-        versionCode 33
+        versionCode 44
         versionName version
         minSdkVersion 9
         targetSdkVersion 23
@@ -55,8 +55,8 @@ android {
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:22.2.0'
+    compile 'com.android.support:support-v4:23.1.1'
     compile 'com.google.android.gms:play-services-ads:7.8.0'
-    compile 'com.android.support:recyclerview-v7:22.2.0'
+    compile 'com.android.support:recyclerview-v7:23.1.1'
     compile project(':mopub-sdk')
 }
diff --git a/mopub-sample/pom.xml b/mopub-sample/pom.xml
index 3c112660..8a283c4d 100644
--- a/mopub-sample/pom.xml
+++ b/mopub-sample/pom.xml
@@ -33,14 +33,14 @@
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-v4</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>recyclerview-v7</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
         
diff --git a/mopub-sample/res/layout/mrect_detail_fragment.xml b/mopub-sample/res/layout/mrect_detail_fragment.xml
deleted file mode 100644
index 15167ce5..00000000
--- a/mopub-sample/res/layout/mrect_detail_fragment.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <TextView
-        android:id="@+id/description"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingLeft="8dp"
-        android:paddingRight="8dp"
-        android:paddingTop="8dp"
-        android:singleLine="true"
-        android:textColor="?android:attr/textColorPrimary"
-        android:textSize="16sp"
-        android:textStyle="bold" />
-
-    <TextView
-        android:id="@+id/ad_unit_id"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingLeft="8dp"
-        android:paddingRight="8dp"
-        android:singleLine="true"
-        android:textColor="?android:attr/textColorSecondary"
-        android:textSize="14sp"
-        android:textStyle="normal" />
-
-    <LinearLayout
-        android:orientation="horizontal"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-
-        <EditText
-            android:id="@+id/keywords_field"
-            android:hint="@string/keywords"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="3"
-            android:inputType="text|textFilter|textShortMessage"
-            android:imeOptions="actionDone"
-            android:singleLine="true" />
-
-        <Button
-            android:id="@+id/load_button"
-            android:text="@string/load_ad"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1" />
-    </LinearLayout>
-
-    <com.mopub.mobileads.MoPubView
-        android:id="@+id/mrect_mopubview"
-        android:layout_width="300dp"
-        android:layout_height="250dp"
-        android:layout_gravity="center_horizontal"
-        android:paddingTop="10dp">
-    </com.mopub.mobileads.MoPubView>
-</LinearLayout>
diff --git a/mopub-sample/res/values/dimens.xml b/mopub-sample/res/values/dimens.xml
index 02259949..75ede747 100644
--- a/mopub-sample/res/values/dimens.xml
+++ b/mopub-sample/res/values/dimens.xml
@@ -5,4 +5,12 @@
     <dimen name="detail_text_size">10sp</dimen>
     <dimen name="title_size">24sp</dimen>
     <dimen name="native_main_image_height">200dp</dimen>
+    <dimen name="banner_width">320dp</dimen>
+    <dimen name="banner_height">50dp</dimen>
+    <dimen name="mrect_width">300dp</dimen>
+    <dimen name="mrect_height">250dp</dimen>
+    <dimen name="leaderboard_width">728dp</dimen>
+    <dimen name="leaderboard_height">90dp</dimen>
+    <dimen name="skyscraper_width">160dp</dimen>
+    <dimen name="skyscraper_height">600dp</dimen>
 </resources>
\ No newline at end of file
diff --git a/mopub-sample/res/values/strings.xml b/mopub-sample/res/values/strings.xml
index bb9d7d0d..a1deb782 100644
--- a/mopub-sample/res/values/strings.xml
+++ b/mopub-sample/res/values/strings.xml
@@ -20,7 +20,9 @@
     <string name="add_ad_unit_button">Add an Ad Unit</string>
     <string name="ad_unit_id_banner">b195f8dd8ded45fe847ad89ed1d016da</string>
     <string name="ad_unit_id_mrect">252412d5e9364a05ab77d9396346d73d</string>
+    <string name="ad_unit_id_leaderboard">a8919cca19784497872ae69d48f678e1</string>
     <string name="ad_unit_id_interstitial">24534e1901884e398f1253216226017e</string>
+    <string name="ad_unit_id_rewarded_video">920b6145fb1546cf8b5cf2ac34638bb7</string>
     <string name="ad_unit_id_native">11a17b188668469fb0412708c3d16813</string>
     <string name="swipe_text"><![CDATA[< Swipe Left & Right >]]></string>
 </resources>
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
new file mode 100644
index 00000000..f4ee63c9
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AbstractBannerDetailFragment.java
@@ -0,0 +1,114 @@
+package com.mopub.simpleadsdemo;
+
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.LinearLayout;
+
+import com.mopub.mobileads.MoPubErrorCode;
+import com.mopub.mobileads.MoPubView;
+
+import static com.mopub.mobileads.MoPubView.BannerAdListener;
+import static com.mopub.simpleadsdemo.Utils.hideSoftKeyboard;
+import static com.mopub.simpleadsdemo.Utils.logToast;
+
+/**
+ * A base class for creating banner style ads with various height and width dimensions.
+ * <p>
+ * A subclass simply needs to specify the height and width of the ad in pixels, and this class will
+ * inflate a layout containing a programmatically rescaled {@link MoPubView} that will be used to
+ * display the ad.
+ */
+public abstract class AbstractBannerDetailFragment extends Fragment implements BannerAdListener {
+    private MoPubView mMoPubView;
+    private MoPubSampleAdUnit mMoPubSampleAdUnit;
+
+    public abstract int getWidth();
+
+    public abstract int getHeight();
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        super.onCreateView(inflater, container, savedInstanceState);
+        final View view = inflater.inflate(R.layout.banner_detail_fragment, container, false);
+        final DetailFragmentViewHolder views = DetailFragmentViewHolder.fromView(view);
+
+        mMoPubSampleAdUnit = MoPubSampleAdUnit.fromBundle(getArguments());
+        mMoPubView = (MoPubView) view.findViewById(R.id.banner_mopubview);
+        LinearLayout.LayoutParams layoutParams =
+                (LinearLayout.LayoutParams) mMoPubView.getLayoutParams();
+        layoutParams.width = getWidth();
+        layoutParams.height = getHeight();
+        mMoPubView.setLayoutParams(layoutParams);
+
+        hideSoftKeyboard(views.mKeywordsField);
+
+        final String adUnitId = mMoPubSampleAdUnit.getAdUnitId();
+        views.mDescriptionView.setText(mMoPubSampleAdUnit.getDescription());
+        views.mAdUnitIdView.setText(adUnitId);
+        views.mLoadButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                final String keywords = views.mKeywordsField.getText().toString();
+                loadMoPubView(adUnitId, keywords);
+            }
+        });
+        mMoPubView.setBannerAdListener(this);
+        loadMoPubView(adUnitId, null);
+
+        return view;
+    }
+
+    @Override
+    public void onDestroyView() {
+        super.onDestroyView();
+
+        if (mMoPubView != null) {
+            mMoPubView.destroy();
+            mMoPubView = null;
+        }
+    }
+
+    private void loadMoPubView(final String adUnitId, final String keywords) {
+        mMoPubView.setAdUnitId(adUnitId);
+        mMoPubView.setKeywords(keywords);
+        mMoPubView.loadAd();
+    }
+
+    private String getName() {
+        if (mMoPubSampleAdUnit == null) {
+            return MoPubSampleAdUnit.AdType.BANNER.getName();
+        }
+        return mMoPubSampleAdUnit.getHeaderName();
+    }
+
+    // BannerAdListener
+    @Override
+    public void onBannerLoaded(MoPubView banner) {
+        logToast(getActivity(), getName() + " loaded.");
+    }
+
+    @Override
+    public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
+        final String errorMessage = (errorCode != null) ? errorCode.toString() : "";
+        logToast(getActivity(), getName() + " failed to load: " + errorMessage);
+    }
+
+    @Override
+    public void onBannerClicked(MoPubView banner) {
+        logToast(getActivity(), getName() + " clicked.");
+    }
+
+    @Override
+    public void onBannerExpanded(MoPubView banner) {
+        logToast(getActivity(), getName() + " expanded.");
+    }
+
+    @Override
+    public void onBannerCollapsed(MoPubView banner) {
+        logToast(getActivity(), getName() + " collapsed.");
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
index d6063c29..e95f9bce 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/AdUnitDataSource.java
@@ -8,6 +8,7 @@
 import com.mopub.common.logging.MoPubLog;
 
 import java.util.ArrayList;
+import java.util.HashSet;
 import java.util.List;
 
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.COLUMN_AD_TYPE;
@@ -17,8 +18,17 @@
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.COLUMN_USER_GENERATED;
 import static com.mopub.simpleadsdemo.MoPubSQLiteHelper.TABLE_AD_CONFIGURATIONS;
 import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LEADERBOARD;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MRECT;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
+import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.REWARDED_VIDEO;
 
 class AdUnitDataSource {
+    private Context mContext;
     private MoPubSQLiteHelper mDatabaseHelper;
     private String[] mAllColumns = {
             COLUMN_ID,
@@ -29,23 +39,41 @@
     };
 
     AdUnitDataSource(final Context context) {
+        mContext = context.getApplicationContext();
         mDatabaseHelper = new MoPubSQLiteHelper(context);
+        populateDefaultSampleAdUnits();
+    }
+
+    MoPubSampleAdUnit createDefaultSampleAdUnit(final MoPubSampleAdUnit sampleAdUnit) {
+        return createSampleAdUnit(sampleAdUnit, false);
     }
 
     MoPubSampleAdUnit createSampleAdUnit(final MoPubSampleAdUnit sampleAdUnit) {
+        return createSampleAdUnit(sampleAdUnit, true);
+    }
+
+    private MoPubSampleAdUnit createSampleAdUnit(final MoPubSampleAdUnit sampleAdUnit,
+                                                 final boolean isUserGenerated) {
         final ContentValues values = new ContentValues();
+        final int userGenerated = isUserGenerated ? 1 : 0;
         values.put(COLUMN_AD_UNIT_ID, sampleAdUnit.getAdUnitId());
         values.put(COLUMN_DESCRIPTION, sampleAdUnit.getDescription());
-        values.put(COLUMN_USER_GENERATED, 1);
+        values.put(COLUMN_USER_GENERATED, userGenerated);
         values.put(COLUMN_AD_TYPE, sampleAdUnit.getFragmentClassName());
+
         final SQLiteDatabase database = mDatabaseHelper.getWritableDatabase();
         final long insertId = database.insert(TABLE_AD_CONFIGURATIONS, null, values);
         final Cursor cursor = database.query(TABLE_AD_CONFIGURATIONS, mAllColumns,
                 COLUMN_ID + " = " + insertId, null, null, null, null);
         cursor.moveToFirst();
+
         final MoPubSampleAdUnit newAdConfiguration = cursorToAdConfiguration(cursor);
         cursor.close();
         database.close();
+
+        if (newAdConfiguration != null) {
+            MoPubLog.d("Ad configuration added with id: " + newAdConfiguration.getId());
+        }
         return newAdConfiguration;
     }
 
@@ -58,8 +86,7 @@ void deleteSampleAdUnit(final MoPubSampleAdUnit adConfiguration) {
     }
 
     List<MoPubSampleAdUnit> getAllAdUnits() {
-        final List<MoPubSampleAdUnit> adConfigurations =
-                new ArrayList<MoPubSampleAdUnit>();
+        final List<MoPubSampleAdUnit> adConfigurations = new ArrayList<>();
         SQLiteDatabase database = mDatabaseHelper.getReadableDatabase();
         final Cursor cursor = database.query(TABLE_AD_CONFIGURATIONS,
                 mAllColumns, null, null, null, null, null);
@@ -76,6 +103,65 @@ void deleteSampleAdUnit(final MoPubSampleAdUnit adConfiguration) {
         return adConfigurations;
     }
 
+    List<MoPubSampleAdUnit> getDefaultAdUnits() {
+        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<>();
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_banner), BANNER)
+                        .description("MoPub Banner Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_mrect), MRECT)
+                        .description("MoPub Mrect Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_leaderboard), LEADERBOARD)
+                        .description("MoPub Leaderboard Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_interstitial), INTERSTITIAL)
+                        .description("MoPub Interstitial Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_rewarded_video),
+                        REWARDED_VIDEO)
+                        .description("MoPub Rewarded Video Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_native), LIST_VIEW)
+                        .description("MoPub Ad Placer Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_native), RECYCLER_VIEW)
+                        .description("MoPub Recycler View Sample")
+                        .build());
+        adUnitList.add(
+                new MoPubSampleAdUnit
+                        .Builder(mContext.getString(R.string.ad_unit_id_native), CUSTOM_NATIVE)
+                        .description("MoPub View Pager Sample")
+                        .build());
+        return adUnitList;
+    }
+
+    private void populateDefaultSampleAdUnits() {
+        final HashSet<MoPubSampleAdUnit> allAdUnits = new HashSet<>();
+        for (final MoPubSampleAdUnit adUnit : getAllAdUnits()) {
+            allAdUnits.add(adUnit);
+        }
+
+        for (final MoPubSampleAdUnit defaultAdUnit : getDefaultAdUnits()) {
+            if (!allAdUnits.contains(defaultAdUnit)) {
+                createDefaultSampleAdUnit(defaultAdUnit);
+            }
+        }
+    }
+
     private MoPubSampleAdUnit cursorToAdConfiguration(final Cursor cursor) {
         final long id = cursor.getLong(0);
         final String adUnitId = cursor.getString(1);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
index a02dd1a1..f083f921 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/BannerDetailFragment.java
@@ -1,87 +1,14 @@
 package com.mopub.simpleadsdemo;
 
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.MoPubView;
-
-import static com.mopub.mobileads.MoPubView.BannerAdListener;
-import static com.mopub.simpleadsdemo.Utils.hideSoftKeyboard;
-import static com.mopub.simpleadsdemo.Utils.logToast;
-
-public class BannerDetailFragment extends Fragment implements BannerAdListener {
-    private MoPubView mMoPubView;
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        super.onCreateView(inflater, container, savedInstanceState);
-        final MoPubSampleAdUnit adConfiguration =
-                MoPubSampleAdUnit.fromBundle(getArguments());
-        final View view = inflater.inflate(R.layout.banner_detail_fragment, container, false);
-        final DetailFragmentViewHolder views = DetailFragmentViewHolder.fromView(view);
-        mMoPubView = (MoPubView) view.findViewById(R.id.banner_mopubview);
-        hideSoftKeyboard(views.mKeywordsField);
-
-        final String adUnitId = adConfiguration.getAdUnitId();
-        views.mDescriptionView.setText(adConfiguration.getDescription());
-        views.mAdUnitIdView.setText(adUnitId);
-        views.mLoadButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                final String keywords = views.mKeywordsField.getText().toString();
-                loadMoPubView(adUnitId, keywords);
-            }
-        });
-        mMoPubView.setBannerAdListener(this);
-        loadMoPubView(adUnitId, null);
-
-        return view;
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-
-        if (mMoPubView != null) {
-            mMoPubView.destroy();
-            mMoPubView = null;
-        }
-    }
-
-    private void loadMoPubView(final String adUnitId, final String keywords) {
-        mMoPubView.setAdUnitId(adUnitId);
-        mMoPubView.setKeywords(keywords);
-        mMoPubView.loadAd();
-    }
-
-    // BannerAdListener
-    @Override
-    public void onBannerLoaded(MoPubView banner) {
-        logToast(getActivity(), "Banner loaded.");
-    }
-
-    @Override
-    public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
-        final String errorMessage = (errorCode != null) ? errorCode.toString() : "";
-        logToast(getActivity(), "Banner failed to load: " + errorMessage);
-    }
-
-    @Override
-    public void onBannerClicked(MoPubView banner) {
-        logToast(getActivity(), "Banner clicked.");
-    }
+public class BannerDetailFragment extends AbstractBannerDetailFragment {
 
     @Override
-    public void onBannerExpanded(MoPubView banner) {
-        logToast(getActivity(), "Banner expanded.");
+    public int getWidth() {
+        return (int) getResources().getDimension(R.dimen.banner_width);
     }
 
     @Override
-    public void onBannerCollapsed(MoPubView banner) {
-        logToast(getActivity(), "Banner collapsed.");
+    public int getHeight() {
+        return (int) getResources().getDimension(R.dimen.banner_height);
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
index 10a1cd82..ff1337ac 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/InterstitialDetailFragment.java
@@ -33,6 +33,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         views.mLoadButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+                mShowButton.setEnabled(false);
                 if (mMoPubInterstitial == null) {
                     mMoPubInterstitial = new MoPubInterstitial(getActivity(), adUnitId);
                     mMoPubInterstitial.setInterstitialAdListener(InterstitialDetailFragment.this);
@@ -40,7 +41,6 @@ public void onClick(View view) {
                 final String keywords = views.mKeywordsField.getText().toString();
                 mMoPubInterstitial.setKeywords(keywords);
                 mMoPubInterstitial.load();
-                mShowButton.setEnabled(false);
             }
         });
         mShowButton = (Button) view.findViewById(R.id.interstitial_show_button);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java
new file mode 100644
index 00000000..c0c000f0
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/LeaderboardDetailFragment.java
@@ -0,0 +1,14 @@
+package com.mopub.simpleadsdemo;
+
+public class LeaderboardDetailFragment extends AbstractBannerDetailFragment {
+
+    @Override
+    public int getWidth() {
+        return (int) getResources().getDimension(R.dimen.leaderboard_width);
+    }
+
+    @Override
+    public int getHeight() {
+        return (int) getResources().getDimension(R.dimen.leaderboard_height);
+    }
+}
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSQLiteHelper.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSQLiteHelper.java
index af774f91..3f3efa4a 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSQLiteHelper.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSQLiteHelper.java
@@ -1,21 +1,10 @@
 package com.mopub.simpleadsdemo;
 
-import android.content.ContentValues;
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 import android.util.Log;
 
-import java.util.ArrayList;
-import java.util.List;
-
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.BANNER;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.CUSTOM_NATIVE;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.INTERSTITIAL;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.LIST_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.RECYCLER_VIEW;
-import static com.mopub.simpleadsdemo.MoPubSampleAdUnit.AdType.MRECT;
-
 class MoPubSQLiteHelper extends SQLiteOpenHelper {
     public static final String TABLE_AD_CONFIGURATIONS = "adConfigurations";
     public static final String COLUMN_ID = "_id";
@@ -36,65 +25,13 @@
             + COLUMN_AD_TYPE + " text not null"
             + ");";
 
-    private final Context mContext;
-
     public MoPubSQLiteHelper(final Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        mContext = context.getApplicationContext();
     }
 
     @Override
     public void onCreate(SQLiteDatabase sqLiteDatabase) {
-        // Built-in sample ad units.
-        final List<MoPubSampleAdUnit> adUnitList = new ArrayList<MoPubSampleAdUnit>();
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_banner), BANNER)
-                        .description("MoPub Banner Sample")
-                        .build());
-
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_mrect), MRECT)
-                        .description("MoPub Mrect Sample")
-                        .build());
-
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_interstitial), INTERSTITIAL)
-                        .description("MoPub Interstitial Sample")
-                        .build());
-
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), LIST_VIEW)
-                        .description("MoPub Ad Placer Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), RECYCLER_VIEW)
-                        .description("MoPub Recycler View Sample")
-                        .build());
-        adUnitList.add(
-                new MoPubSampleAdUnit
-                        .Builder(mContext.getString(R.string.ad_unit_id_native), CUSTOM_NATIVE)
-                        .description("MoPub View Pager Sample")
-                        .build());
         sqLiteDatabase.execSQL(DATABASE_CREATE);
-        sqLiteDatabase.beginTransaction();
-
-        // Populate the MoPub built-in samples.
-        for (final MoPubSampleAdUnit adUnit : adUnitList) {
-            final ContentValues values = new ContentValues();
-            values.put(COLUMN_AD_UNIT_ID, adUnit.getAdUnitId());
-            values.put(COLUMN_DESCRIPTION, adUnit.getDescription());
-            values.put(COLUMN_USER_GENERATED, 0);
-            values.put(COLUMN_AD_TYPE, adUnit.getFragmentClassName());
-
-            sqLiteDatabase.insert(TABLE_AD_CONFIGURATIONS, null, values);
-        }
-        sqLiteDatabase.setTransactionSuccessful();
-        sqLiteDatabase.endTransaction();
     }
 
     @Override
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
index 8322b4ac..fc175ea0 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleActivity.java
@@ -3,14 +3,27 @@
 import android.annotation.TargetApi;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
 import android.support.v4.app.FragmentActivity;
 import android.support.v4.app.FragmentManager;
 import android.webkit.WebView;
 
 import com.mopub.common.MoPub;
+import com.mopub.common.util.DeviceUtils;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;
+import static com.mopub.common.Constants.UNUSED_REQUEST_CODE;
 
 public class MoPubSampleActivity extends FragmentActivity {
+    private static final List<String> REQUIRED_DANGEROUS_PERMISSIONS = new ArrayList<String>();
+    static {
+        REQUIRED_DANGEROUS_PERMISSIONS.add(ACCESS_COARSE_LOCATION);
+        REQUIRED_DANGEROUS_PERMISSIONS.add(WRITE_EXTERNAL_STORAGE);
+    }
 
     // Sample app web views are debuggable.
     static {
@@ -33,6 +46,19 @@ protected void onCreate(Bundle savedInstanceState) {
             return;
         }
 
+        List<String> permissionsToBeRequested = new ArrayList<String>();
+        for (String permission : REQUIRED_DANGEROUS_PERMISSIONS) {
+            if (!DeviceUtils.isPermissionGranted(this, permission)) {
+                permissionsToBeRequested.add(permission);
+            }
+        }
+
+        // Request dangerous permissions
+        if (!permissionsToBeRequested.isEmpty()) {
+            ActivityCompat.requestPermissions(this, permissionsToBeRequested.toArray(
+                    new String[permissionsToBeRequested.size()]), UNUSED_REQUEST_CODE);
+        }
+
         // Set location awareness and precision globally for your app:
         MoPub.setLocationAwareness(MoPub.LocationAwareness.TRUNCATED);
         MoPub.setLocationPrecision(4);
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
index 724656ff..f6573175 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MoPubSampleAdUnit.java
@@ -18,6 +18,8 @@
     enum AdType {
         BANNER("Banner", BannerDetailFragment.class),
         MRECT("Mrect", MrectDetailFragment.class),
+        LEADERBOARD("Leaderboard", LeaderboardDetailFragment.class),
+        SKYSCRAPER("Skyscraper", SkyscraperDetailFragment.class),
         INTERSTITIAL("Interstitial", InterstitialDetailFragment.class),
         REWARDED_VIDEO("Rewarded Video", RewardedVideoDetailFragment.class),
         LIST_VIEW("Native List View", NativeListViewFragment.class),
@@ -31,7 +33,7 @@ String getName() {
         private final String name;
         private final Class<? extends Fragment> fragmentClass;
 
-        private AdType(final String name, final Class<? extends Fragment> fragmentClass) {
+        AdType(final String name, final Class<? extends Fragment> fragmentClass) {
             this.name = name;
             this.fragmentClass = fragmentClass;
         }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java
index 2ae93318..2f15a7fa 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/MrectDetailFragment.java
@@ -1,87 +1,14 @@
 package com.mopub.simpleadsdemo;
 
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.MoPubView;
-
-import static com.mopub.mobileads.MoPubView.BannerAdListener;
-import static com.mopub.simpleadsdemo.Utils.hideSoftKeyboard;
-import static com.mopub.simpleadsdemo.Utils.logToast;
-
-public class MrectDetailFragment extends Fragment implements BannerAdListener {
-    private MoPubView mMoPubView;
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        super.onCreateView(inflater, container, savedInstanceState);
-
-        final MoPubSampleAdUnit adConfiguration =
-                MoPubSampleAdUnit.fromBundle(getArguments());
-        final View view = inflater.inflate(R.layout.mrect_detail_fragment, container, false);
-        final DetailFragmentViewHolder views = DetailFragmentViewHolder.fromView(view);
-        hideSoftKeyboard(views.mKeywordsField);
-        mMoPubView = (MoPubView) view.findViewById(R.id.mrect_mopubview);
-        final String adUnitId = adConfiguration.getAdUnitId();
-        views.mDescriptionView.setText(adConfiguration.getDescription());
-        views.mAdUnitIdView.setText(adUnitId);
-        views.mLoadButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                final String keywords = views.mKeywordsField.getText().toString();
-                loadMoPubView(adUnitId, keywords);
-            }
-        });
-        mMoPubView.setBannerAdListener(this);
-        loadMoPubView(adUnitId, null);
-
-        return view;
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-
-        if (mMoPubView != null) {
-            mMoPubView.destroy();
-            mMoPubView = null;
-        }
-    }
-
-    private void loadMoPubView(final String adUnitId, final String keywords) {
-        mMoPubView.setAdUnitId(adUnitId);
-        mMoPubView.setKeywords(keywords);
-        mMoPubView.loadAd();
-    }
-
-    // BannerAdListener
-    @Override
-    public void onBannerLoaded(MoPubView banner) {
-        logToast(getActivity(), "Mrect loaded.");
-    }
-
-    @Override
-    public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
-        final String errorMessage = (errorCode != null) ? errorCode.toString() : "";
-        logToast(getActivity(), "Mrect failed to load: " + errorMessage);
-    }
-
-    @Override
-    public void onBannerClicked(MoPubView banner) {
-        logToast(getActivity(), "Mrect clicked.");
-    }
+public class MrectDetailFragment extends AbstractBannerDetailFragment {
 
     @Override
-    public void onBannerExpanded(MoPubView banner) {
-        logToast(getActivity(), "Mrect expanded.");
+    public int getWidth() {
+        return (int) getResources().getDimension(R.dimen.mrect_width);
     }
 
     @Override
-    public void onBannerCollapsed(MoPubView banner) {
-        logToast(getActivity(), "Mrect collapsed.");
+    public int getHeight() {
+        return (int) getResources().getDimension(R.dimen.mrect_height);
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
index a0421841..472a5648 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/NativeRecyclerViewFragment.java
@@ -29,7 +29,7 @@
     private MoPubRecyclerAdapter mRecyclerAdapter;
     private MoPubSampleAdUnit mAdConfiguration;
     private RequestParameters mRequestParameters;
-    private enum LayoutType { LINEAR, GRID };
+    private enum LayoutType { LINEAR, GRID }
     private LayoutType mLayoutType;
     private RecyclerView mRecyclerView;
 
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
index 16eaed98..19e7825b 100644
--- a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/RewardedVideoDetailFragment.java
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -12,6 +13,7 @@
 import com.mopub.common.MoPubReward;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubRewardedVideoListener;
+import com.mopub.mobileads.MoPubRewardedVideoManager.RequestParameters;
 
 import java.util.Locale;
 import java.util.Set;
@@ -21,8 +23,11 @@
 
 public class RewardedVideoDetailFragment extends Fragment implements MoPubRewardedVideoListener {
 
-    private Button mShowButton;
-    private static boolean rewardedVideoInitialized;
+    private static boolean sRewardedVideoInitialized;
+
+    @Nullable private Button mShowButton;
+    @Nullable private String mAdUnitId;
+
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
@@ -32,20 +37,27 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         final DetailFragmentViewHolder views = DetailFragmentViewHolder.fromView(view);
         hideSoftKeyboard(views.mKeywordsField);
 
-        if (!rewardedVideoInitialized) {
+        if (!sRewardedVideoInitialized) {
             MoPub.initializeRewardedVideo(getActivity());
-            rewardedVideoInitialized = true;
+            sRewardedVideoInitialized = true;
         }
         MoPub.setRewardedVideoListener(this);
 
-        final String adUnitId = adConfiguration.getAdUnitId();
+        mAdUnitId = adConfiguration.getAdUnitId();
         views.mDescriptionView.setText(adConfiguration.getDescription());
-        views.mAdUnitIdView.setText(adUnitId);
+        views.mAdUnitIdView.setText(mAdUnitId);
         views.mLoadButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                MoPub.loadRewardedVideo(adUnitId);
-                mShowButton.setEnabled(false);
+                if (mAdUnitId == null) {
+                    return;
+                }
+                MoPub.loadRewardedVideo(mAdUnitId,
+                        new RequestParameters(views.mKeywordsField.getText().toString(), null,
+                                "sample_app_customer_id"));
+                if (mShowButton != null) {
+                    mShowButton.setEnabled(false);
+                }
             }
         });
         mShowButton = (Button) view.findViewById(R.id.interstitial_show_button);
@@ -53,7 +65,10 @@ public void onClick(View view) {
         mShowButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                MoPub.showRewardedVideo(adUnitId);
+                if (mAdUnitId == null) {
+                    return;
+                }
+                MoPub.showRewardedVideo(mAdUnitId);
             }
         });
 
@@ -68,40 +83,65 @@ public void onDestroyView() {
     // MoPubRewardedVideoListener implementation
     @Override
     public void onRewardedVideoLoadSuccess(@NonNull final String adUnitId) {
-        mShowButton.setEnabled(true);
-        logToast(getActivity(), "Rewarded video loaded.");
+        if (adUnitId.equals(mAdUnitId)) {
+            if (mShowButton != null) {
+                mShowButton.setEnabled(true);
+            }
+            logToast(getActivity(), "Rewarded video loaded.");
+        }
     }
 
     @Override
     public void onRewardedVideoLoadFailure(@NonNull final String adUnitId, @NonNull final MoPubErrorCode errorCode) {
-        mShowButton.setEnabled(false);
-        logToast(getActivity(), String.format(Locale.US, "Rewarded video failed to load: %s", errorCode.toString()));
+        if (adUnitId.equals(mAdUnitId)) {
+            if (mShowButton != null) {
+                mShowButton.setEnabled(false);
+            }
+            logToast(getActivity(), String.format(Locale.US, "Rewarded video failed to load: %s",
+                    errorCode.toString()));
+        }
     }
 
     @Override
     public void onRewardedVideoStarted(@NonNull final String adUnitId) {
-        logToast(getActivity(), "Rewarded video started.");
-        mShowButton.setEnabled(false);
+        if (adUnitId.equals(mAdUnitId)) {
+            logToast(getActivity(), "Rewarded video started.");
+            if (mShowButton != null) {
+                mShowButton.setEnabled(false);
+            }
+        }
     }
 
     @Override
     public void onRewardedVideoPlaybackError(@NonNull final String adUnitId, @NonNull final MoPubErrorCode errorCode) {
-        logToast(getActivity(), String.format(Locale.US, "Rewarded video playback error: %s", errorCode.toString()));
-        mShowButton.setEnabled(false);
+        if (adUnitId.equals(mAdUnitId)) {
+            logToast(getActivity(), String.format(Locale.US, "Rewarded video playback error: %s",
+                    errorCode.toString()));
+            if (mShowButton != null) {
+                mShowButton.setEnabled(false);
+            }
+        }
     }
 
     @Override
     public void onRewardedVideoClosed(@NonNull final String adUnitId) {
-        logToast(getActivity(), "Rewarded video closed.");
-        mShowButton.setEnabled(false);
+        if (adUnitId.equals(mAdUnitId)) {
+            logToast(getActivity(), "Rewarded video closed.");
+            if (mShowButton != null) {
+                mShowButton.setEnabled(false);
+            }
+        }
     }
 
     @Override
-    public void onRewardedVideoCompleted(@NonNull final Set<String> adUnitIds, @NonNull final MoPubReward reward) {
-        logToast(getActivity(),
-                String.format(Locale.US,
-                        "Rewarded video completed with reward  \"%d %s\"",
-                        reward.getAmount(),
-                        reward.getLabel()));
+    public void onRewardedVideoCompleted(@NonNull final Set<String> adUnitIds,
+            @NonNull final MoPubReward reward) {
+        if (adUnitIds.contains(mAdUnitId)) {
+            logToast(getActivity(),
+                    String.format(Locale.US,
+                            "Rewarded video completed with reward  \"%d %s\"",
+                            reward.getAmount(),
+                            reward.getLabel()));
+        }
     }
 }
diff --git a/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java
new file mode 100644
index 00000000..0a715bbe
--- /dev/null
+++ b/mopub-sample/src/main/java/com/mopub/simpleadsdemo/SkyscraperDetailFragment.java
@@ -0,0 +1,14 @@
+package com.mopub.simpleadsdemo;
+
+public class SkyscraperDetailFragment extends AbstractBannerDetailFragment {
+
+    @Override
+    public int getWidth() {
+        return (int) getResources().getDimension(R.dimen.skyscraper_width);
+    }
+
+    @Override
+    public int getHeight() {
+        return (int) getResources().getDimension(R.dimen.skyscraper_height);
+    }
+}
diff --git a/mopub-sdk/.classpath b/mopub-sdk/.classpath
deleted file mode 100644
index a4dec28b..00000000
--- a/mopub-sdk/.classpath
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry kind="src" path="gen"/>
-	<classpathentry kind="src" path="src/main/java"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
-	<classpathentry kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
-	<classpathentry kind="lib" path="libs/android-support-v4.jar"/>
-	<classpathentry kind="output" path="bin/classes"/>
-</classpath>
diff --git a/mopub-sdk/.project b/mopub-sdk/.project
deleted file mode 100644
index bd2cd4f9..00000000
--- a/mopub-sdk/.project
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>mopub-sdk</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-	</natures>
-</projectDescription>
diff --git a/mopub-sdk/build.gradle b/mopub-sdk/build.gradle
index a435900b..dc087560 100644
--- a/mopub-sdk/build.gradle
+++ b/mopub-sdk/build.gradle
@@ -1,118 +1,12 @@
-// This buildscript will assemble the MoPub SDK into an AAR.
-
-buildscript {
-    repositories {
-        mavenCentral()
-        jcenter()
-    }
-
-    dependencies {
-        classpath 'com.android.tools.build:gradle:1.2.3'
-        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
-    }
-}
-
-plugins {
-    id "com.jfrog.bintray" version "1.2"
-}
-
-repositories {
-    mavenCentral()
-    jcenter()
-    flatDir {
-         dirs '../libs'
-    }
-}
-
-configurations {
-    javadocDeps
-}
-
-apply plugin: 'com.android.library'
-apply plugin: 'com.github.dcendents.android-maven'
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '2.5'
-}
-
-group = 'com.mopub'
-description = '''MoPub Android SDK'''
-version = '4.2.0'
-
-android {
-    compileSdkVersion 22
-    buildToolsVersion '22.0.1'
-    lintOptions { abortOnError false }
-
-    defaultConfig {
-        versionCode 33
-        versionName version
-        minSdkVersion 9
-        targetSdkVersion 22
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    sourceSets {
-        main {
-            manifest.srcFile 'AndroidManifest.xml'
-            java.srcDirs = ['src/main/java']
-            resources.srcDirs = ['src/main/java']
-            aidl.srcDirs = ['src/main']
-            renderscript.srcDirs = ['src/main']
-            res.srcDirs = ['res']
-            assets.srcDirs = ['assets']
-        }
-    }
-
-    testOptions {
-        unitTests {
-            // This causes android platform methods from the test JAR
-            // to return null, false, etc instead of throwing an exception.
-            // We should periodically disable this and tackle the broken tests
-            // as it exposes when we are hitting platform APIs in our tests.
-            // If these tests *require* platform APIs we may want to make them
-            // connected tests instead.
-            returnDefaultValues = true
-
-            // Test JVM settings since we have a lot of classes loaded.
-            all {
-                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
-                forkEvery 200
-            }
-        }
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard.txt')
-        }
-      
-        debug {
-            minifyEnabled false
-        }
-    }
-
-    // Note: You will also need a local.properties file to set the location of the SDK in the same 
-    // way that the existing SDK requires, using the sdk.dir property.
-    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no 
-    // difference between the two methods, you can use the one you prefer.
-}
-
+apply from: 'shared-build.gradle'
 
 dependencies {
-    compile 'com.android.support:support-v4:22.2.0'
-    compile 'com.android.support:support-annotations:22.2.0'
-    compile 'com.android.support:recyclerview-v7:22.2.0'
-    compile 'com.mopub.volley:mopub-volley:1.1.0'
-    compile 'com.google.android.exoplayer:exoplayer:r1.4.2'
-    // anchor: additional dependencies
-
-    javadocDeps 'com.google.android.exoplayer:exoplayer:r1.4.2:sources'
-    javadocDeps 'com.mopub.volley:mopub-volley:1.1.0:sources'
-    javadocDeps 'com.android.support:support-v4:22.0.0:sources'
-    javadocDeps 'com.android.support:support-annotations:22.0.0:sources'
-    javadocDeps 'com.android.support:recyclerview-v7:22.0.0:sources'
+    compile project(':mopub-sdk:mopub-sdk-base')
+    compile project(':mopub-sdk:mopub-sdk-banner')
+    compile project(':mopub-sdk:mopub-sdk-interstitial')
+    compile project(':mopub-sdk:mopub-sdk-rewardedvideo')
+    compile project(':mopub-sdk:mopub-sdk-native-static')
+    compile project(':mopub-sdk:mopub-sdk-native-video')
 
     testCompile 'junit:junit:4.10'
     testCompile 'org.robolectric:robolectric:3.0'
@@ -120,110 +14,14 @@ dependencies {
     testCompile 'org.robolectric:shadows-httpclient:3.0'
     testCompile 'com.squareup:fest-android:1.0.7'
     testCompile 'org.mockito:mockito-core:1.9.5'
+    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
+    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
+    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
+    testCompile 'org.powermock:powermock-classloading-xstream:1.6.5'
 }
 
-def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
-def gitUrl = 'https://github.com/mopub/mopub-android-sdk.git'
-// Put your credentials (bintray.user, bintray.apikey) in ~/.gradle/gradle.properties
-bintray {
-    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
-    key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""
-
-    configurations = ['archives']
-    publish = true
-
-    pkg {
-        repo = 'mopub-android-sdk'
-        name = 'mopub-android-sdk'
-
-        userOrg = 'mopub'
-        desc = description
-
-        websiteUrl = siteUrl
-        vcsUrl = gitUrl
-        licenses = ['Apache-2.0']
-
-        version {
-            name = project.version
-        }
-    }
-}
-
-install {
-    repositories.mavenInstaller {
-        pom {
-            project {
-                packaging 'aar'
-
-                name 'MoPub Android SDK'
-                url siteUrl
-
-                licenses {
-                    license {
-                        name 'MoPub SDK License'
-                        url 'http://www.mopub.com/legal/sdk-license-agreement/'
-                    }
-                }
-                developers {
-                    // ID corresponds to GitHub user name
-                    developer {
-                        id 'nathanshayefar'
-                        name 'Nathan Shayefar'
-                        email 'nshayefar@twitter.com'
-                    }
-                    developer {
-                        id 'joeblubaugh'
-                        name 'Joe Blubaugh'
-                        email 'joeblubaugh@twitter.com'
-                    }
-                    developer {
-                        id 'steffanc'
-                        name 'Steffan Chartrand'
-                        email 'schartrand@twitter.com'
-                    }
-                    developer {
-                        id 'aornelas'
-                        name 'Andrés Ornelas'
-                        email 'andres@twitter.com'
-                    }
-                    developer {
-                        id 'bichenwang'
-                        name 'Bichen Wang'
-                        email 'bwang@twitter.com'
-                    }
-                    developer {
-                        id 'nathank33'
-                        name 'Nathan Braun'
-                        email 'nbraun@twitter.com'
-                    }
-                }
-                scm {
-                    connection gitUrl
-                    developerConnection gitUrl
-                    url siteUrl
-                }
-            }
-        }
-    }
-}
-
-task sourcesJar(type: Jar) {
-    from android.sourceSets.main.java.srcDirs
-    classifier = 'sources'
-}
-
-task javadoc(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    classpath += configurations.javadocDeps
-}
-
-task javadocJar(type: Jar, dependsOn: javadoc) {
-    classifier = 'javadoc'
-    from javadoc.destinationDir
-}
-
-artifacts {
-    archives javadocJar
-    archives sourcesJar
-}
+project.description = 'MoPub Android SDK'
+project.ext.displayName = 'MoPub Android SDK'
+project.ext.projectName = 'mopub-sdk'
+project.ext.uploadName = 'mopub-android-sdk'
+apply from: 'publisher.gradle'
diff --git a/mopub-sdk/etc/mraid.js b/mopub-sdk/etc/mraid.js
index 7ce13b28..8e5bb5b7 100644
--- a/mopub-sdk/etc/mraid.js
+++ b/mopub-sdk/etc/mraid.js
@@ -28,7 +28,6 @@
     lastSizeChangeProperties: null
   };
 
-
   bridge.fireChangeEvent = function(properties) {
     for (var p in properties) {
       if (properties.hasOwnProperty(p)) {
@@ -278,6 +277,12 @@
 
   var placementType = PLACEMENT_TYPES.UNKNOWN;
 
+  var hostSDKVersion = {
+    'major': 0,
+    'minor': 0,
+    'patch': 0
+  };
+
   //////////////////////////////////////////////////////////////////////////////////////////////////
 
   var EventListeners = function(event) {
@@ -398,7 +403,23 @@
 
     supports: function(val) {
       broadcastEvent(EVENTS.INFO, 'Set supports to ' + stringify(val));
-        supportProperties = val;
+      supportProperties = val;
+    },
+
+    hostSDKVersion: function(val) {
+      // val is expected to be formatted like 'X.Y.Z[-+]identifier'.
+      var versions = val.split('.').map(function(version) {
+        return parseInt(version, 10);
+      }).filter(function(version) {
+        return version >= 0;
+      });
+
+      if (versions.length >= 3) {
+        hostSDKVersion['major'] = parseInt(versions[0], 10);
+        hostSDKVersion['minor'] = parseInt(versions[1], 10);
+        hostSDKVersion['patch'] = parseInt(versions[2], 10);
+        broadcastEvent(EVENTS.INFO, 'Set hostSDKVersion to ' + stringify(hostSDKVersion));
+      }
     }
   };
 
@@ -714,6 +735,14 @@
     }
   };
 
+  // Determining SDK version ///////////////////////////////////////////////////////////////////////
+
+  mraid.getHostSDKVersion = function() {
+    return hostSDKVersion;
+  }
+
+  // Calendar helpers //////////////////////////////////////////////////////////////////////////////
+
   var CalendarEventParser = {
     initialize: function(parameters) {
       this.parameters = parameters;
diff --git a/mopub-sdk/gradle/wrapper/gradle-wrapper.jar b/mopub-sdk/gradle/wrapper/gradle-wrapper.jar
index 30d399d8..13372aef 100644
Binary files a/mopub-sdk/gradle/wrapper/gradle-wrapper.jar and b/mopub-sdk/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/mopub-sdk/gradle/wrapper/gradle-wrapper.properties b/mopub-sdk/gradle/wrapper/gradle-wrapper.properties
index 75f1f3fd..6faa4eab 100644
--- a/mopub-sdk/gradle/wrapper/gradle-wrapper.properties
+++ b/mopub-sdk/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Jul 24 16:59:31 PDT 2015
+#Mon Jun 20 17:19:29 PDT 2016
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-bin.zip
diff --git a/mopub-sdk/gradlew b/mopub-sdk/gradlew
index 91a7e269..9d82f789 100755
--- a/mopub-sdk/gradlew
+++ b/mopub-sdk/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
diff --git a/mopub-sdk/gradlew.bat b/mopub-sdk/gradlew.bat
index 8a0b282a..aec99730 100644
--- a/mopub-sdk/gradlew.bat
+++ b/mopub-sdk/gradlew.bat
@@ -1,90 +1,90 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/mopub-sdk/mopub-sdk-banner/build.gradle b/mopub-sdk/mopub-sdk-banner/build.gradle
new file mode 100644
index 00000000..011a0db8
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-banner/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+}
+
+project.description = 'MoPub Android SDK - Banner'
+project.ext.displayName = 'MoPub Android SDK - Banner'
+project.ext.projectName = 'mopub-sdk-banner'
+project.ext.uploadName = 'mopub-android-sdk-banner'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..5bf5c16c
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-banner/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.banner">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBanner.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
index 60f3e6b3..a261bd64 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
+++ b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/CustomEventBannerAdapter.java
@@ -82,9 +82,7 @@ void loadAd() {
             return;
         }
 
-        if (getTimeoutDelayMilliseconds() > 0) {
-            mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
-        }
+        mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
 
         // Custom event classes can be developed by any third party and may not be tested.
         // We catch all exceptions here to prevent crashes from untested code.
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/DefaultBannerAdListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBanner.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
index 358ea16c..3d847393 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
+++ b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/HtmlBannerWebView.java
@@ -13,10 +13,10 @@ public HtmlBannerWebView(Context context, AdReport adReport) {
         super(context, adReport);
     }
 
-    public void init(CustomEventBannerListener customEventBannerListener, boolean isScrollable, String redirectUrl, String clickthroughUrl) {
+    public void init(CustomEventBannerListener customEventBannerListener, boolean isScrollable, String redirectUrl, String clickthroughUrl, String dspCreativeId) {
         super.init(isScrollable);
 
-        setWebViewClient(new HtmlWebViewClient(new HtmlBannerWebViewListener(customEventBannerListener), this, clickthroughUrl, redirectUrl));
+        setWebViewClient(new HtmlWebViewClient(new HtmlBannerWebViewListener(customEventBannerListener), this, clickthroughUrl, redirectUrl, dspCreativeId));
     }
 
     static class HtmlBannerWebViewListener implements HtmlWebViewListener {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerAdapterFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/CustomEventBannerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
index 59b9544d..9c0c92c9 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
+++ b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mobileads/factories/HtmlBannerWebViewFactory.java
@@ -28,7 +28,7 @@ public HtmlBannerWebView internalCreate(
             String redirectUrl,
             String clickthroughUrl) {
         HtmlBannerWebView htmlBannerWebView = new HtmlBannerWebView(context, adReport);
-        htmlBannerWebView.init(customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl);
+        htmlBannerWebView.init(customEventBannerListener, isScrollable, redirectUrl, clickthroughUrl, adReport.getDspCreativeId());
         return htmlBannerWebView;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBanner.java b/mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidBanner.java
rename to mopub-sdk/mopub-sdk-banner/src/main/java/com/mopub/mraid/MraidBanner.java
diff --git a/mopub-sdk/mopub-sdk-base/build.gradle b/mopub-sdk/mopub-sdk-base/build.gradle
new file mode 100644
index 00000000..2ced0308
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile 'com.mopub.volley:mopub-volley:1.1.0'
+}
+
+project.description = 'MoPub Android SDK - Base'
+project.ext.displayName = 'MoPub Android SDK - Base'
+project.ext.projectName = 'mopub-sdk-base'
+project.ext.uploadName = 'mopub-android-sdk-base'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..d480f9c5
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.base">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdFormat.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdFormat.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/AdFormat.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdFormat.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdReport.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdReport.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/common/AdReport.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdReport.java
index 0415b271..7e6a2b39 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/AdReport.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdReport.java
@@ -63,6 +63,10 @@ public String getResponseString() {
         return mAdResponse.getStringBody();
     }
 
+    public String getDspCreativeId() {
+        return mAdResponse.getDspCreativeId();
+    }
+
     private void appendKeyValue(StringBuilder parameters, String key, String value) {
         parameters.append(key);
         parameters.append(" : ");
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdType.java
similarity index 89%
rename from mopub-sdk/src/main/java/com/mopub/common/AdType.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdType.java
index 607adbd2..38f7c2ba 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/AdType.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdType.java
@@ -10,6 +10,7 @@
     public static final String INTERSTITIAL = "interstitial";
     public static final String STATIC_NATIVE = "json";
     public static final String VIDEO_NATIVE = "json_video";
+    public static final String REWARDED_VIDEO = "rewarded_video";
     public static final String CUSTOM = "custom";
     public static final String CLEAR = "clear";
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
index 397a0d04..4975407a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/AdUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/AdUrlGenerator.java
@@ -63,7 +63,7 @@
 
     /**
      * Density as represented by a float. See
-     * http://developer.android.com/guide/practices/screens_support.html
+     * https://developer.android.com/guide/practices/screens_support.html
      * for details on values this can be.
      */
     private static final String SCREEN_SCALE_KEY = "sc_a";
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BaseLifecycleListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseLifecycleListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/BaseLifecycleListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseLifecycleListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
similarity index 93%
rename from mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
index 68d88289..759b528e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/BaseUrlGenerator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BaseUrlGenerator.java
@@ -19,8 +19,8 @@
     public abstract String generateUrlString(String serverHostname);
 
     protected void initUrlString(String serverHostname, String handlerType) {
-        String scheme = Networking.useHttps() ? Constants.HTTPS : Constants.HTTP;
-        mStringBuilder = new StringBuilder(scheme).append("://").append(serverHostname).append(handlerType);
+        mStringBuilder = new StringBuilder(Networking.getScheme()).append("://")
+                .append(serverHostname).append(handlerType);
         mFirstParam = true;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/BrowserWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/BrowserWebViewClient.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/BrowserWebViewClient.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CacheService.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CacheService.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/CacheService.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CacheService.java
index 58cd1cf5..a88ad866 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/CacheService.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CacheService.java
@@ -21,7 +21,7 @@
 import static com.mopub.common.DiskLruCache.open;
 
 public class CacheService {
-    public static interface DiskLruCacheGetListener {
+    public interface DiskLruCacheGetListener {
         void onComplete(final String key, final byte[] content);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
index 412f47be..d6c76b92 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/ClientMetadata.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/ClientMetadata.java
@@ -21,7 +21,6 @@
 
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.content.pm.PackageManager.NameNotFoundException;
-import static android.content.pm.PackageManager.PERMISSION_GRANTED;
 
 /**
  * Singleton that caches Client objects so they will be available to background threads.
@@ -49,14 +48,14 @@
     private boolean mDoNotTrack = false;
     private boolean mAdvertisingInfoSet = false;
 
-    public static enum MoPubNetworkType {
+    public enum MoPubNetworkType {
         UNKNOWN(0),
         ETHERNET(1),
         WIFI(2),
         MOBILE(3);
 
         private final int mId;
-        private MoPubNetworkType(int id) {
+        MoPubNetworkType(int id) {
             mId = id;
         }
 
@@ -227,7 +226,7 @@ public String getOrientationString() {
 
     public MoPubNetworkType getActiveNetworkType() {
         int networkType = UNKNOWN_NETWORK;
-        if (mContext.checkCallingOrSelfPermission(ACCESS_NETWORK_STATE) == PERMISSION_GRANTED) {
+        if (DeviceUtils.isPermissionGranted(mContext, ACCESS_NETWORK_STATE)) {
             NetworkInfo activeNetworkInfo = mConnectivityManager.getActiveNetworkInfo();
             networkType = activeNetworkInfo != null
                     ? activeNetworkInfo.getType() : UNKNOWN_NETWORK;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CloseableLayout.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CloseableLayout.java
index a38f4b52..6a642d16 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/CloseableLayout.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CloseableLayout.java
@@ -46,10 +46,10 @@
     /**
      * Defines a subset of supported gravity combinations for the CloseableLayout. These values
      * include the possible values for customClosePosition as defined in the
-     * <a href="http://www.iab.net/media/file/IAB_MRAID_v2_FINAL.pdf">MRAID 2.0
+     * <a href="https://www.iab.net/media/file/IAB_MRAID_v2_FINAL.pdf">MRAID 2.0
      * specification</a>.
      */
-    public static enum ClosePosition {
+    public enum ClosePosition {
         TOP_LEFT(Gravity.TOP | Gravity.LEFT),
         TOP_CENTER(Gravity.TOP | Gravity.CENTER_HORIZONTAL),
         TOP_RIGHT(Gravity.TOP | Gravity.RIGHT),
@@ -185,7 +185,7 @@ private void applyCloseBoundsWithSize(ClosePosition closePosition, final int siz
 
     @Override
     public boolean onInterceptTouchEvent(@NonNull final MotionEvent event) {
-        // See http://developer.android.com/training/gestures/viewgroup.html for details on
+        // See https://developer.android.com/training/gestures/viewgroup.html for details on
         // capturing motion events
 
         // Start intercepting touch events only when we see a down event
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Constants.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
similarity index 66%
rename from mopub-sdk/src/main/java/com/mopub/common/Constants.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
index 0ca157fe..99efe98b 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/Constants.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Constants.java
@@ -1,10 +1,12 @@
 package com.mopub.common;
 
 public class Constants {
+
     private Constants() {}
 
     public static final String HTTP = "http";
     public static final String HTTPS = "https";
+    public static final String INTENT_SCHEME = "intent";
 
     public static final String HOST = "ads.mopub.com";
 
@@ -17,4 +19,9 @@ private Constants() {}
     public static final int THIRTY_SECONDS_MILLIS = 30 * 1000;
 
     public static final int TEN_MB = 10 * 1024 * 1024;
+
+    public static final int UNUSED_REQUEST_CODE = 255;  // Acceptable range is [0, 255]
+
+    public static final String NATIVE_VIDEO_ID = "native_video_id";
+    public static final String NATIVE_VAST_VIDEO_CONFIG = "native_vast_video_config";
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/CreativeOrientation.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CreativeOrientation.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/CreativeOrientation.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/CreativeOrientation.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DataKeys.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
similarity index 81%
rename from mopub-sdk/src/main/java/com/mopub/common/DataKeys.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
index 75cf02bb..aa66cb94 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DataKeys.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DataKeys.java
@@ -24,4 +24,9 @@
     public static final String IMPRESSION_VISIBLE_MS = "Impression-Visible-Ms";
     public static final String MAX_BUFFER_MS = "Max-Buffer-Ms";
     public static final String EVENT_DETAILS = "Event-Details";
+
+    // Rewarded Video fields
+    public static final String REWARDED_VIDEO_CURRENCY_NAME_KEY = "Rewarded-Video-Currency-Name";
+    public static final String REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY = "Rewarded-Video-Currency-Value-String";
+    public static final String REWARDED_VIDEO_CUSTOMER_ID = "Rewarded-Video-Customer-Id";
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCache.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCache.java
index c62d6594..882d2071 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCache.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCache.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
index 8e4aa1f4..824a9254 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheStrictLineReader.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheUtil.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheUtil.java
index 6cc5b4f9..ba7622ea 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/DiskLruCacheUtil.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DiskLruCacheUtil.java
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DoubleTimeTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DoubleTimeTracker.java
new file mode 100644
index 00000000..25564d9b
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DoubleTimeTracker.java
@@ -0,0 +1,77 @@
+package com.mopub.common;
+
+import android.os.SystemClock;
+import android.support.annotation.NonNull;
+
+import com.mopub.common.logging.MoPubLog;
+
+/**
+ * This class uses system time to track durations. It can be started and paused, but not reset.
+ * Create a new {@link DoubleTimeTracker} if you need to track a new duration.
+ */
+public class DoubleTimeTracker {
+    /**
+     * Wrapper for Android SystemClock used to allow dependency injection for tests.
+     */
+    public interface Clock {
+        long elapsedRealTime();
+    }
+
+
+    private enum State { STARTED, PAUSED }
+    @NonNull private volatile State state;
+    private long startedTimestamp;
+    private long interval;
+    @NonNull private final Clock mClock;
+
+    public DoubleTimeTracker() {
+        this(new SystemClockClock());
+    }
+
+    @VisibleForTesting
+    public DoubleTimeTracker(@NonNull Clock clock) {
+        this.mClock = clock;
+        this.state = State.PAUSED;
+    }
+
+    public synchronized void start() {
+        if (state == State.STARTED) {
+            MoPubLog.v("DoubleTimeTracker already started.");
+            return;
+        }
+
+        state = State.STARTED;
+        startedTimestamp = mClock.elapsedRealTime();
+    }
+
+    public synchronized void pause() {
+        if (state == State.PAUSED) {
+            MoPubLog.v("DoubleTimeTracker already paused.");
+            return;
+        }
+
+
+        interval += computeIntervalDiff();
+        startedTimestamp = 0;
+        state = State.PAUSED;
+    }
+
+
+    public synchronized double getInterval() {
+        return interval + computeIntervalDiff();
+    }
+
+    private synchronized long computeIntervalDiff() {
+        if (state == State.PAUSED) {
+            return 0;
+        }
+
+        return mClock.elapsedRealTime() - startedTimestamp;
+    }
+
+    private static class SystemClockClock implements Clock {
+        public long elapsedRealTime() {
+            return SystemClock.elapsedRealtime();
+        }
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/DownloadResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DownloadResponse.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/DownloadResponse.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/DownloadResponse.java
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/FullAdType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/FullAdType.java
new file mode 100644
index 00000000..cec3a306
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/FullAdType.java
@@ -0,0 +1,9 @@
+package com.mopub.common;
+
+/**
+ * Valid values for the "X-Fulladtype" header from the MoPub ad server. The value of this header
+ * controls the custom event loading behavior.
+ */
+public class FullAdType {
+    public final static String VAST = "vast";
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/GpsHelper.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/GpsHelper.java
index e26371b0..5773b410 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/GpsHelper.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/GpsHelper.java
@@ -31,7 +31,7 @@ public AdvertisingInfo(String adId, boolean limitAdTrackingEnabled) {
     }
 
     public interface GpsHelperListener {
-        public void onFetchAdInfoCompleted();
+        void onFetchAdInfoCompleted();
     }
 
     public static boolean isPlayServicesAvailable(final Context context) {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/HttpResponses.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/HttpResponses.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/HttpResponses.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/HttpResponses.java
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java
new file mode 100644
index 00000000..00dcd8b5
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/IntentActions.java
@@ -0,0 +1,16 @@
+package com.mopub.common;
+
+/**
+ * IntentActions are used by a {@link com.mopub.mobileads.BaseBroadcastReceiver}
+ * to relay information about the current state of a custom event activity.
+ */
+public class IntentActions {
+    public static final String ACTION_INTERSTITIAL_FAIL = "com.mopub.action.interstitial.fail";
+    public static final String ACTION_INTERSTITIAL_SHOW = "com.mopub.action.interstitial.show";
+    public static final String ACTION_INTERSTITIAL_DISMISS = "com.mopub.action.interstitial.dismiss";
+    public static final String ACTION_INTERSTITIAL_CLICK = "com.mopub.action.interstitial.click";
+
+    public static final String ACTION_REWARDED_VIDEO_COMPLETE = "com.mopub.action.rewardedvideo.complete";
+
+    private IntentActions() {}
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LifecycleListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LifecycleListener.java
new file mode 100644
index 00000000..724d683a
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LifecycleListener.java
@@ -0,0 +1,20 @@
+package com.mopub.common;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+
+/**
+ * This is a uniform interface to 3rd party SDKs that need to know when Activity lifecycle events
+ * occur.
+ */
+public interface LifecycleListener {
+    void onCreate(@NonNull Activity activity);
+    void onStart(@NonNull Activity activity);
+    void onPause(@NonNull Activity activity);
+    void onResume(@NonNull Activity activity);
+
+    void onRestart(@NonNull Activity activity);
+    void onStop(@NonNull Activity activity);
+    void onDestroy(@NonNull Activity activity);
+    void onBackPressed(@NonNull Activity activity);
+}
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
new file mode 100644
index 00000000..77e44feb
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/LocationService.java
@@ -0,0 +1,173 @@
+package com.mopub.common;
+
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationManager;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.DeviceUtils;
+
+import java.math.BigDecimal;
+
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
+
+public class LocationService {
+    public enum LocationAwareness {
+        NORMAL, TRUNCATED, DISABLED;
+
+        // These deprecated methods are only used to support the deprecated methods
+        // MoPubView#setLocationAwareness, MoPubInterstitial#setLocationAwareness
+        // and should not be used elsewhere. Unless interacting with those methods, use
+        // the type MoPub.LocationAwareness
+
+        @Deprecated
+        public MoPub.LocationAwareness getNewLocationAwareness() {
+            if (this == TRUNCATED) {
+                return MoPub.LocationAwareness.TRUNCATED;
+            } else if (this == DISABLED) {
+                return MoPub.LocationAwareness.DISABLED;
+            } else {
+                return MoPub.LocationAwareness.NORMAL;
+            }
+        }
+
+        @Deprecated
+        public static LocationAwareness
+                fromMoPubLocationAwareness(MoPub.LocationAwareness awareness) {
+            if (awareness == MoPub.LocationAwareness.DISABLED) {
+                return DISABLED;
+            } else if (awareness == MoPub.LocationAwareness.TRUNCATED) {
+                return TRUNCATED;
+            } else {
+                return NORMAL;
+            }
+        }
+    }
+
+    public enum ValidLocationProvider {
+        NETWORK(LocationManager.NETWORK_PROVIDER),
+        GPS(LocationManager.GPS_PROVIDER);
+
+        @NonNull final String name;
+
+        ValidLocationProvider(@NonNull final String name) {
+            this.name = name;
+        }
+
+        @Override
+        public String toString() {
+            return name;
+        }
+
+        private boolean hasRequiredPermissions(@NonNull final Context context) {
+            switch (this) {
+                case NETWORK:
+                    return DeviceUtils.isPermissionGranted(context, ACCESS_FINE_LOCATION)
+                            || DeviceUtils.isPermissionGranted(context, ACCESS_COARSE_LOCATION);
+                case GPS:
+                    return DeviceUtils.isPermissionGranted(context, ACCESS_FINE_LOCATION);
+                default:
+                    return false;
+            }
+        }
+    }
+
+    /*
+     * Returns the last known location of the device using its GPS and network location providers.
+     * May be null if:
+     * - Location permissions are not requested in the Android manifest file
+     * - The location providers don't exist
+     * - Location awareness is disabled in the parent MoPubView
+     */
+    @Nullable
+    public static Location getLastKnownLocation(@NonNull final Context context,
+            final int locationPrecision,
+            final @NonNull MoPub.LocationAwareness locationAwareness) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(locationAwareness);
+
+        if (locationAwareness == MoPub.LocationAwareness.DISABLED) {
+            return null;
+        }
+
+        final Location gpsLocation = getLocationFromProvider(context, ValidLocationProvider.GPS);
+        final Location networkLocation = getLocationFromProvider(context, ValidLocationProvider.NETWORK);
+        final Location result = getMostRecentValidLocation(gpsLocation, networkLocation);
+
+        // Truncate latitude/longitude to the number of digits specified by locationPrecision.
+        if (locationAwareness == MoPub.LocationAwareness.TRUNCATED) {
+            truncateLocationLatLon(result, locationPrecision);
+        }
+
+        return result;
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static Location getLocationFromProvider(@NonNull final Context context,
+            @NonNull final ValidLocationProvider provider) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(provider);
+
+        if (!provider.hasRequiredPermissions(context)) {
+            return null;
+        }
+
+        final LocationManager locationManager =
+                (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
+        try {
+            // noinspection ResourceType
+            return locationManager.getLastKnownLocation(provider.toString());
+        } catch (SecurityException e) {
+            MoPubLog.d("Failed to retrieve location from " +
+                    provider.toString() + " provider: access appears to be disabled.");
+        } catch (IllegalArgumentException e) {
+            MoPubLog.d("Failed to retrieve location: device has no " +
+                    provider.toString() + " location provider.");
+        } catch (NullPointerException e) { // This happens on 4.2.2 on a few Android TV devices
+            MoPubLog.d("Failed to retrieve location: device has no " +
+                    provider.toString() + " location provider.");
+        }
+
+        return null;
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static Location getMostRecentValidLocation(@Nullable final Location a, @Nullable final Location b) {
+        if (a == null) {
+            return b;
+        }
+
+        if (b == null) {
+            return a;
+        }
+
+        // At this point, locations A and B are non-null, so return the more recent one
+        return (a.getTime() > b.getTime()) ? a : b;
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static void truncateLocationLatLon(@Nullable final Location location,
+            final int precision) {
+        if (location == null || precision < 0) {
+            return;
+        }
+
+        double lat = location.getLatitude();
+        double truncatedLat = BigDecimal.valueOf(lat)
+                .setScale(precision, BigDecimal.ROUND_HALF_DOWN)
+                .doubleValue();
+        location.setLatitude(truncatedLat);
+
+        double lon = location.getLongitude();
+        double truncatedLon = BigDecimal.valueOf(lon)
+                .setScale(precision, BigDecimal.ROUND_HALF_DOWN)
+                .doubleValue();
+        location.setLongitude(truncatedLon);
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MediationSettings.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MediationSettings.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MediationSettings.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MediationSettings.java
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
new file mode 100644
index 00000000..bf067481
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPub.java
@@ -0,0 +1,241 @@
+package com.mopub.common;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.util.Reflection;
+
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+public class MoPub {
+    public static final String SDK_VERSION = "4.9.0";
+
+    public enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
+
+    private static final String MOPUB_REWARDED_VIDEOS =
+            "com.mopub.mobileads.MoPubRewardedVideos";
+    private static final String MOPUB_REWARDED_VIDEO_MANAGER =
+            "com.mopub.mobileads.MoPubRewardedVideoManager";
+    private static final String MOPUB_REWARDED_VIDEO_LISTENER =
+            "com.mopub.mobileads.MoPubRewardedVideoListener";
+    private static final String MOPUB_REWARDED_VIDEO_MANAGER_REQUEST_PARAMETERS =
+            "com.mopub.mobileads.MoPubRewardedVideoManager$RequestParameters";
+
+    private static final int DEFAULT_LOCATION_PRECISION = 6;
+    private static volatile LocationAwareness sLocationLocationAwareness = LocationAwareness.NORMAL;
+    private static volatile int sLocationPrecision = DEFAULT_LOCATION_PRECISION;
+    private static boolean sSearchedForUpdateActivityMethod = false;
+    @Nullable private static Method sUpdateActivityMethod;
+
+    public static LocationAwareness getLocationAwareness() {
+        return sLocationLocationAwareness;
+    }
+
+    public static void setLocationAwareness(LocationAwareness locationAwareness) {
+        sLocationLocationAwareness = locationAwareness;
+    }
+
+    public static int getLocationPrecision() {
+        return sLocationPrecision;
+    }
+
+    /**
+     * Sets the precision to use when the SDK's location awareness is set
+     * to {@link com.mopub.common.MoPub.LocationAwareness#TRUNCATED}.
+     */
+    public static void setLocationPrecision(int precision) {
+        sLocationPrecision = Math.min(Math.max(0, precision), DEFAULT_LOCATION_PRECISION);
+    }
+
+
+    //////// MoPub LifecycleListener messages ////////
+
+    public static void onCreate(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onCreate(activity);
+        updateActivity(activity);
+    }
+
+    public static void onStart(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onStart(activity);
+        updateActivity(activity);
+    }
+
+    public static void onPause(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onPause(activity);
+    }
+
+    public static void onResume(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onResume(activity);
+        updateActivity(activity);
+    }
+
+    public static void onRestart(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onRestart(activity);
+        updateActivity(activity);
+    }
+
+    public static void onStop(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onStop(activity);
+    }
+
+    public static void onDestroy(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onDestroy(activity);
+    }
+
+    public static void onBackPressed(@NonNull final Activity activity) {
+        MoPubLifecycleManager.getInstance(activity).onBackPressed(activity);
+    }
+
+    ////////// MoPub RewardedVideoControl methods //////////
+    // These methods have been deprecated as of release 4.9 due to SDK modularization. MoPub is
+    // inside of the base module while MoPubRewardedVideos is inside of the rewarded video module.
+    // MoPubRewardedVideos methods must now be called with reflection because the publisher
+    // may have excluded the rewarded video module.
+
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#initializeRewardedVideo instead
+     */
+    @Deprecated
+    public static void initializeRewardedVideo(@NonNull Activity activity, MediationSettings... mediationSettings) {
+        try {
+            new Reflection.MethodBuilder(null, "initializeRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(Activity.class, activity)
+                    .addParam(MediationSettings[].class, mediationSettings)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("initializeRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("initializeRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while initializing rewarded video", e);
+        }
+    }
+
+    @VisibleForTesting
+    static void updateActivity(@NonNull Activity activity) {
+        if (!sSearchedForUpdateActivityMethod) {
+            sSearchedForUpdateActivityMethod = true;
+            try {
+                Class moPubRewardedVideoManagerClass = Class.forName(
+                        MOPUB_REWARDED_VIDEO_MANAGER);
+                sUpdateActivityMethod = Reflection.getDeclaredMethodWithTraversal(
+                        moPubRewardedVideoManagerClass, "updateActivity", Activity.class);
+            } catch (ClassNotFoundException e) {
+                // rewarded video module not included
+            } catch (NoSuchMethodException e) {
+                // rewarded video module not included
+            }
+        }
+
+        if (sUpdateActivityMethod != null) {
+            try {
+                sUpdateActivityMethod.invoke(null, activity);
+            } catch (IllegalAccessException e) {
+                MoPubLog.e("Error while attempting to access the update activity method - this " +
+                        "should not have happened", e);
+            } catch (InvocationTargetException e) {
+                MoPubLog.e("Error while attempting to access the update activity method - this " +
+                        "should not have happened", e);
+            }
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#setRewardedVideoListener instead
+     */
+    @Deprecated
+    public static void setRewardedVideoListener(@Nullable Object listener) {
+        try {
+            Class moPubRewardedVideoListenerClass = Class.forName(
+                    MOPUB_REWARDED_VIDEO_LISTENER);
+            new Reflection.MethodBuilder(null, "setRewardedVideoListener")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(moPubRewardedVideoListenerClass, listener)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("setRewardedVideoListener was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("setRewardedVideoListener was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while setting rewarded video listener", e);
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#loadRewardedVideo instead
+     */
+    @Deprecated
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MediationSettings... mediationSettings) {
+        MoPub.loadRewardedVideo(adUnitId, null, mediationSettings);
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#loadRewardedVideo instead
+     */
+    @Deprecated
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable Object requestParameters,
+            @Nullable MediationSettings... mediationSettings) {
+        try {
+            Class requestParametersClass = Class.forName(
+                    MOPUB_REWARDED_VIDEO_MANAGER_REQUEST_PARAMETERS);
+            new Reflection.MethodBuilder(null, "loadRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .addParam(requestParametersClass, requestParameters)
+                    .addParam(MediationSettings[].class, mediationSettings)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("loadRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("loadRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while loading rewarded video", e);
+        }
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#hasRewardedVideo instead
+     */
+    @Deprecated
+    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
+        try {
+            return (boolean) new Reflection.MethodBuilder(null, "hasRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("hasRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("hasRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while checking rewarded video", e);
+        }
+        return false;
+    }
+
+    /**
+     * @deprecated As of release 4.9, use MoPubRewardedVideos#showRewardedVideo instead
+     */
+    @Deprecated
+    public static void showRewardedVideo(@NonNull String adUnitId) {
+        try {
+            new Reflection.MethodBuilder(null, "showRewardedVideo")
+                    .setStatic(Class.forName(MOPUB_REWARDED_VIDEOS))
+                    .addParam(String.class, adUnitId)
+                    .execute();
+        } catch (ClassNotFoundException e) {
+            MoPubLog.w("showRewardedVideo was called without the rewarded video module");
+        } catch (NoSuchMethodException e) {
+            MoPubLog.w("showRewardedVideo was called without the rewarded video module");
+        } catch (Exception e) {
+            MoPubLog.e("Error while showing rewarded video", e);
+        }
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
similarity index 89%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
index 3e373970..65baca5d 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPubBrowser.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubBrowser.java
@@ -1,8 +1,6 @@
 package com.mopub.common;
 
 import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
@@ -19,14 +17,14 @@
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 
-import com.mopub.common.logging.MoPubLog;
+import com.mopub.common.event.Event;
+import com.mopub.common.event.MoPubEvents;
 import com.mopub.mobileads.BaseWebView;
 import com.mopub.mobileads.util.WebViews;
 
-import java.util.EnumSet;
-
 import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
 import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+import static com.mopub.common.event.BaseEvent.*;
 import static com.mopub.common.util.Drawables.BACKGROUND;
 import static com.mopub.common.util.Drawables.CLOSE;
 import static com.mopub.common.util.Drawables.LEFT_ARROW;
@@ -35,6 +33,7 @@
 
 public class MoPubBrowser extends Activity {
     public static final String DESTINATION_URL_KEY = "URL";
+    public static final String DSP_CREATIVE_ID = "mopub-dsp-creative-id";
     public static final int MOPUB_BROWSER_REQUEST_CODE = 1;
     private static final int INNER_LAYOUT_ID = 1;
 
@@ -44,6 +43,9 @@
     private ImageButton mRefreshButton;
     private ImageButton mCloseButton;
 
+    private DoubleTimeTracker dwellTimeTracker;
+    private String mDspCreativeId;
+
     @NonNull
     public ImageButton getBackButton() {
         return mBackButton;
@@ -69,14 +71,6 @@ public WebView getWebView() {
         return mWebView;
     }
 
-    public static void open(final Context context, final String url) {
-        MoPubLog.d("Opening url in MoPubBrowser: " + url);
-        final Intent intent = new Intent(context, MoPubBrowser.class);
-        intent.putExtra(DESTINATION_URL_KEY, url);
-        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        context.startActivity(intent);
-    }
-
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -88,6 +82,8 @@ public void onCreate(Bundle savedInstanceState) {
 
         setContentView(getMoPubBrowserView());
 
+        dwellTimeTracker = new DoubleTimeTracker();
+
         initializeWebView();
         initializeButtons();
         enableCookies();
@@ -101,12 +97,14 @@ private void initializeWebView() {
         /**
          * Pinch to zoom is apparently not enabled by default on all devices, so
          * declare zoom support explicitly.
-         * http://stackoverflow.com/questions/5125851/enable-disable-zoom-in-android-webview
+         * https://stackoverflow.com/questions/5125851/enable-disable-zoom-in-android-webview
          */
         webSettings.setSupportZoom(true);
         webSettings.setBuiltInZoomControls(true);
         webSettings.setUseWideViewPort(true);
 
+        mDspCreativeId = getIntent().getStringExtra(DSP_CREATIVE_ID);
+
         mWebView.loadUrl(getIntent().getStringExtra(DESTINATION_URL_KEY));
 
         mWebView.setWebViewClient(new BrowserWebViewClient(this));
@@ -166,6 +164,8 @@ protected void onPause() {
         super.onPause();
         CookieSyncManager.getInstance().stopSync();
         WebViews.onPause(mWebView, isFinishing());
+        // Pause dwell time counting.
+        dwellTimeTracker.pause();
     }
 
     @Override
@@ -173,6 +173,8 @@ protected void onResume() {
         super.onResume();
         CookieSyncManager.getInstance().startSync();
         WebViews.onResume(mWebView);
+
+        dwellTimeTracker.start();
     }
 
     @Override
@@ -189,6 +191,13 @@ protected void onDestroy() {
         super.onDestroy();
         mWebView.destroy();
         mWebView = null;
+        // Log dwell time value.
+        MoPubEvents.log(new Event.Builder(Name.AD_DWELL_TIME,
+                Category.AD_INTERACTIONS,
+                SamplingRate.AD_INTERACTIONS.getSamplingRate())
+                .withDspCreativeId(mDspCreativeId)
+                .withPerformanceDurationMs(dwellTimeTracker.getInterval())
+                .build());
     }
 
     private View getMoPubBrowserView() {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubHttpUrlConnection.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubLifecycleManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubLifecycleManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubLifecycleManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/MoPubLifecycleManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
index ca5a52ec..126ff4b4 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/Preconditions.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/Preconditions.java
@@ -184,8 +184,6 @@ public static boolean checkState(boolean expression,
 
         /**
          * Ensures that an object reference is not null.
-         *
-         * @returns true if
          */
         public static boolean checkNotNull(Object reference) {
             return checkNotNullInternal(reference, sStrictMode, "Object can not be null.",
diff --git a/mopub-sdk/src/main/java/com/mopub/common/SharedPreferencesHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SharedPreferencesHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/SharedPreferencesHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/SharedPreferencesHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
similarity index 77%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
index 9e2522db..bf0fb326 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlAction.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlAction.java
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import android.text.TextUtils;
 
 import com.mopub.common.event.BaseEvent;
@@ -12,6 +13,7 @@
 import com.mopub.exceptions.IntentNotResolvableException;
 import com.mopub.exceptions.UrlParseException;
 
+import java.net.URISyntaxException;
 import java.util.List;
 
 import static com.mopub.common.Constants.HTTP;
@@ -34,23 +36,24 @@
     /* 0 */ HANDLE_MOPUB_SCHEME(false) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "mopub".equals(uri.getScheme());
+            return "mopub".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String host = uri.getHost();
             final UrlHandler.MoPubSchemeListener moPubSchemeListener =
                     urlHandler.getMoPubSchemeListener();
 
-            if ("finishLoad".equals(host)) {
+            if ("finishLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFinishLoad();
-            } else if ("close".equals(host)) {
+            } else if ("close".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onClose();
-            } else if ("failLoad".equals(host)) {
+            } else if ("failLoad".equalsIgnoreCase(host)) {
                 moPubSchemeListener.onFailLoad();
             } else {
                 throw new IntentNotResolvableException("Could not handle MoPub Scheme url: " + uri);
@@ -61,13 +64,14 @@ protected void performAction(
     /* 1 */ IGNORE_ABOUT_SCHEME(false) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "about".equals(uri.getScheme());
+            return "about".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             MoPubLog.d("Link to about page ignored.");
         }
@@ -77,16 +81,17 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            return "tel".equals(scheme) || "voicemail".equals(scheme)
-                    || "sms".equals(scheme) || "mailto".equals(scheme)
-                    || "geo".equals(scheme)
-                    || "google.streetview".equals(scheme);
+            return "tel".equalsIgnoreCase(scheme) || "voicemail".equalsIgnoreCase(scheme)
+                    || "sms".equalsIgnoreCase(scheme) || "mailto".equalsIgnoreCase(scheme)
+                    || "geo".equalsIgnoreCase(scheme)
+                    || "google.streetview".equalsIgnoreCase(scheme);
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String errorMessage = "Could not handle intent with URI: " + uri + "\n\tIs " +
                     "this intent supported on your phone?";
@@ -97,13 +102,14 @@ protected void performAction(
     /* 3 */ OPEN_NATIVE_BROWSER(true) {
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
-            return "mopubnativebrowser".equals(uri.getScheme());
+            return "mopubnativebrowser".equalsIgnoreCase(uri.getScheme());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             final String errorMessage = "Unable to load mopub native browser url: " + uri;
             try {
@@ -121,16 +127,18 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
             final String host = uri.getHost();
 
-            return "play.google.com".equals(host) || "market.android.com".equals(host)
-                    || "market".equals(scheme)
-                    || uri.toString().startsWith("play.google.com/")
-                    || uri.toString().startsWith("market.android.com/");
+            return "play.google.com".equalsIgnoreCase(host)
+                    || "market.android.com".equalsIgnoreCase(host)
+                    || "market".equalsIgnoreCase(scheme)
+                    || uri.toString().toLowerCase().startsWith("play.google.com/")
+                    || uri.toString().toLowerCase().startsWith("market.android.com/");
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             Intents.launchApplicationUrl(context, uri);
         }
@@ -140,16 +148,17 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            return (HTTP.equals(scheme) || HTTPS.equals(scheme));
+            return (HTTP.equalsIgnoreCase(scheme) || HTTPS.equalsIgnoreCase(scheme));
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             if (!urlHandler.shouldSkipShowMoPubBrowser()) {
-                Intents.showMoPubBrowserForUrl(context, uri);
+                Intents.showMoPubBrowserForUrl(context, uri, creativeId);
             }
         }
     },
@@ -162,13 +171,15 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             Preconditions.checkNotNull(uri);
-            return "mopubshare".equals(uri.getScheme()) && "tweet".equals(uri.getHost());
+            return "mopubshare".equalsIgnoreCase(uri.getScheme())
+                    && "tweet".equalsIgnoreCase(uri.getHost());
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
             Preconditions.checkNotNull(context);
             Preconditions.checkNotNull(uri);
@@ -216,7 +227,8 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
 
             // 1. Parse the URL as a valid deeplink+
@@ -236,7 +248,7 @@ protected void performAction(
                 fallbackTrackingUrls = uri.getQueryParameters("fallbackTrackingUrl");
             } catch (UnsupportedOperationException e) {
                 // If the URL is not hierarchical, getQueryParameter[s] will throw
-                // UnsupportedOperationException (see http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+                // UnsupportedOperationException (see https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
                 throw new IntentNotResolvableException("Deeplink+ URL was not a hierarchical" +
                         " URI.");
             }
@@ -284,16 +296,26 @@ protected void performAction(
         @Override
         public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
             final String scheme = uri.getScheme();
-            final String host = uri.getHost();
-            return !TextUtils.isEmpty(scheme) && !TextUtils.isEmpty(host);
+            return !TextUtils.isEmpty(scheme);
         }
 
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable String creativeId)
                 throws IntentNotResolvableException {
-            Intents.launchApplicationUrl(context, uri);
+            if (Constants.INTENT_SCHEME.equalsIgnoreCase(uri.getScheme())) {
+                try {
+                    final Intent intent = Intent.parseUri(uri.toString(), Intent.URI_INTENT_SCHEME);
+                    Intents.launchApplicationIntent(context, intent);
+                } catch (URISyntaxException e) {
+                    throw new IntentNotResolvableException("Intent uri had invalid syntax: "
+                            + uri.toString());
+                }
+            } else {
+                Intents.launchApplicationUrl(context, uri);
+            }
         }
     },
 
@@ -307,7 +329,8 @@ public boolean shouldTryHandlingUrl(@NonNull final Uri uri) {
         @Override
         protected void performAction(
                 @NonNull final Context context, @NonNull final Uri uri,
-                @NonNull final UrlHandler urlHandler)
+                @NonNull final UrlHandler urlHandler,
+                @Nullable final String creativeId)
                 throws IntentNotResolvableException { }
     };
 
@@ -315,14 +338,15 @@ public void handleUrl(
             UrlHandler urlHandler,
             @NonNull final Context context,
             @NonNull final Uri destinationUri,
-            final boolean fromUserInteraction)
+            final boolean fromUserInteraction,
+            @Nullable String creativeId)
             throws IntentNotResolvableException {
         MoPubLog.d("Ad event URL: " + destinationUri);
         if (mRequiresUserInteraction && !fromUserInteraction) {
             throw new IntentNotResolvableException("Attempted to handle action without user " +
                     "interaction.");
         } else {
-            performAction(context, destinationUri, urlHandler);
+            performAction(context, destinationUri, urlHandler, creativeId);
         }
     }
 
@@ -336,6 +360,7 @@ public void handleUrl(
 
     protected abstract void performAction(
             @NonNull final Context context, @NonNull final Uri uri,
-            @NonNull final UrlHandler urlHandler)
+            @NonNull final UrlHandler urlHandler,
+            @Nullable String creativeId)
             throws IntentNotResolvableException;
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
index 74abd946..599dd1c8 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlHandler.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlHandler.java
@@ -68,6 +68,7 @@ void urlHandlingFailed(@NonNull final String url,
         @NonNull
         private MoPubSchemeListener moPubSchemeListener = EMPTY_MOPUB_SCHEME_LISTENER;
         private boolean skipShowMoPubBrowser = false;
+        @Nullable private String creativeId;
 
         /**
          * Sets the {@link UrlAction}s to support in the {@code UrlHandler} to build.
@@ -122,7 +123,7 @@ public Builder withMoPubSchemeListener(
 
         /**
          * If called, will avoid starting a {@link MoPubBrowser} activity where applicable.
-         * (see {@link Intents#showMoPubBrowserForUrl(Context, Uri)})
+         * (see {@link Intents#showMoPubBrowserForUrl(Context, Uri, String)})
          *
          * @return A {@link Builder} that will skip starting a {@code MoPubBrowser}.
          */
@@ -131,6 +132,16 @@ public Builder withoutMoPubBrowser() {
             return this;
         }
 
+        /**
+         * Sets the creativeId for the ad associated with this URL
+         *
+         * @return A {@link Builder} that knows the creativeID for the ad.
+         */
+        public Builder withDspCreativeId(@Nullable final String creativeId) {
+            this.creativeId = creativeId;
+            return this;
+        }
+
         /**
          * Creates an immutable {@link UrlHandler} with the desired configuration, according to the
          * other {@link Builder} methods called before.
@@ -139,7 +150,7 @@ public Builder withoutMoPubBrowser() {
          */
         public UrlHandler build() {
             return new UrlHandler(supportedUrlActions, resultActions, moPubSchemeListener,
-                    skipShowMoPubBrowser);
+                    skipShowMoPubBrowser, creativeId);
         }
     }
 
@@ -165,6 +176,7 @@ public void urlHandlingFailed(@NonNull String url, @NonNull UrlAction lastFailed
     private ResultActions mResultActions;
     @NonNull
     private MoPubSchemeListener mMoPubSchemeListener;
+    @Nullable private String mDspCreativeId;
     private boolean mSkipShowMoPubBrowser;
     private boolean mAlreadySucceeded;
     private boolean mTaskPending;
@@ -176,11 +188,13 @@ private UrlHandler(
             @NonNull final EnumSet<UrlAction> supportedUrlActions,
             @NonNull final ResultActions resultActions,
             @NonNull final MoPubSchemeListener moPubSchemeListener,
-            final boolean skipShowMoPubBrowser) {
+            final boolean skipShowMoPubBrowser,
+            @Nullable final String dspCreativeId) {
         mSupportedUrlActions = EnumSet.copyOf(supportedUrlActions);
         mResultActions = resultActions;
         mMoPubSchemeListener = moPubSchemeListener;
         mSkipShowMoPubBrowser = skipShowMoPubBrowser;
+        mDspCreativeId = dspCreativeId;
         mAlreadySucceeded = false;
         mTaskPending = false;
     }
@@ -295,7 +309,7 @@ public boolean handleResolvedUrl(@NonNull final Context context,
             if (urlAction.shouldTryHandlingUrl(destinationUri)) {
                 try {
                     urlAction.handleUrl(UrlHandler.this, context, destinationUri,
-                            fromUserInteraction);
+                            fromUserInteraction, mDspCreativeId);
                     if (!mAlreadySucceeded && !mTaskPending
                             && !UrlAction.IGNORE_ABOUT_SCHEME.equals(urlAction)
                             && !UrlAction.HANDLE_MOPUB_SCHEME.equals(urlAction)) {
diff --git a/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlResolutionTask.java
similarity index 70%
rename from mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlResolutionTask.java
index 823f39c2..c2163480 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/UrlResolutionTask.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/UrlResolutionTask.java
@@ -5,10 +5,13 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.AsyncTasks;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
+import java.net.URI;
+import java.net.URISyntaxException;
 import java.net.URL;
 
 @VisibleForTesting
@@ -63,13 +66,16 @@ protected String doInBackground(@Nullable String... urls) {
 
         } catch (IOException e) {
             return null;
+        } catch (URISyntaxException e) {
+            return null;
         }
 
         return previousUrl;
     }
 
     @Nullable
-    private String getRedirectLocation(@NonNull final String urlString) throws IOException {
+    private String getRedirectLocation(@NonNull final String urlString) throws IOException,
+            URISyntaxException {
         final URL url = new URL(urlString);
 
         HttpURLConnection httpUrlConnection = null;
@@ -77,13 +83,7 @@ private String getRedirectLocation(@NonNull final String urlString) throws IOExc
             httpUrlConnection = (HttpURLConnection) url.openConnection();
             httpUrlConnection.setInstanceFollowRedirects(false);
 
-            int responseCode = httpUrlConnection.getResponseCode();
-
-            if (responseCode >= 300 && responseCode < 400) {
-                return httpUrlConnection.getHeaderField("Location");
-            } else {
-                return null;
-            }
+            return resolveRedirectLocation(urlString, httpUrlConnection);
         } finally {
             if (httpUrlConnection != null) {
                 httpUrlConnection.disconnect();
@@ -91,6 +91,29 @@ private String getRedirectLocation(@NonNull final String urlString) throws IOExc
         }
     }
 
+    @VisibleForTesting
+    @Nullable
+    static String resolveRedirectLocation(@NonNull final String baseUrl,
+            @NonNull final HttpURLConnection httpUrlConnection) throws IOException, URISyntaxException {
+        final URI baseUri = new URI(baseUrl);
+        final int responseCode = httpUrlConnection.getResponseCode();
+        final String redirectUrl = httpUrlConnection.getHeaderField("Location");
+        String result = null;
+
+        if (responseCode >= 300 && responseCode < 400) {
+            try {
+                // If redirectUrl is a relative path, then resolve() will correctly complete the path;
+                // otherwise, resolve() will return the redirectUrl
+                result =  baseUri.resolve(redirectUrl).toString();
+            } catch (IllegalArgumentException e) {
+                // Ensure the request is cancelled instead of resolving an intermediary URL
+                throw new URISyntaxException(redirectUrl, "Unable to parse invalid URL");
+            }
+        }
+
+        return result;
+    }
+
     @Override
     protected void onPostExecute(@Nullable final String resolvedUrl) {
         super.onPostExecute(resolvedUrl);
diff --git a/mopub-sdk/src/main/java/com/mopub/common/VisibleForTesting.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/VisibleForTesting.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/VisibleForTesting.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/VisibleForTesting.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/BaseEvent.java
similarity index 93%
rename from mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/BaseEvent.java
index 3e89e7f4..5571fc30 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/BaseEvent.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/BaseEvent.java
@@ -13,12 +13,12 @@
 
 public abstract class BaseEvent {
 
-    public static enum ScribeCategory {
+    public enum ScribeCategory {
         EXCHANGE_CLIENT_EVENT("exchange_client_event"),
         EXCHANGE_CLIENT_ERROR("exchange_client_error");
 
         @NonNull private final String mScribeCategory;
-        private ScribeCategory(@NonNull String scribeCategory) {
+        ScribeCategory(@NonNull String scribeCategory) {
             mScribeCategory = scribeCategory;
         }
 
@@ -28,13 +28,13 @@ public String getCategory() {
         }
     }
 
-    public static enum SdkProduct {
+    public enum SdkProduct {
         NONE(0),
         WEB_VIEW(1),
         NATIVE(2);
 
         private final int mType;
-        private SdkProduct(int type) {
+        SdkProduct(int type) {
             mType = type;
         }
 
@@ -43,14 +43,14 @@ public int getType() {
         }
     }
 
-    public static enum AppPlatform {
+    public enum AppPlatform {
         NONE(0),
         IOS(1),
         ANDROID(2),
         MOBILE_WEB(3);
 
         private final int mType;
-        private AppPlatform(int type) {
+        AppPlatform(int type) {
             mType = type;
         }
 
@@ -60,18 +60,25 @@ public int getType() {
     }
 
     public enum Name {
+        // Ad Requests:
         AD_REQUEST("ad_request"),
         IMPRESSION_REQUEST("impression_request"),
         CLICK_REQUEST("click_request"),
+
+        // Native Video:
         DOWNLOAD_START("download_start"),
         DOWNLOAD_VIDEO_READY("download_video_ready"),
         DOWNLOAD_BUFFERING("download_video_buffering"),
         DOWNLOAD_FINISHED("download_finished"),
         ERROR_DURING_PLAYBACK("error_during_playback"),
-        ERROR_FAILED_TO_PLAY("error_failed_to_play");
+        ERROR_FAILED_TO_PLAY("error_failed_to_play"),
+
+        // Ad Interactions
+        AD_DWELL_TIME("clickthrough_dwell_time"),
+        ;
 
         @NonNull private final String mName;
-        private Name(@NonNull String name) {
+        Name(@NonNull String name) {
             mName = name;
         }
 
@@ -83,10 +90,12 @@ public String getName() {
 
     public enum Category {
         REQUESTS("requests"),
-        NATIVE_VIDEO("native_video");
+        NATIVE_VIDEO("native_video"),
+        AD_INTERACTIONS("ad_interactions"),
+        ;
 
         @NonNull private final String mCategory;
-        private Category(@NonNull String category) {
+        Category(@NonNull String category) {
             mCategory = category;
         }
 
@@ -98,10 +107,12 @@ public String getCategory() {
 
     public enum SamplingRate {
         AD_REQUEST(0.1),
-        NATIVE_VIDEO(0.1);
+        NATIVE_VIDEO(0.1),
+        AD_INTERACTIONS(0.1),
+        ;
 
         private final double mSamplingRate;
-        private SamplingRate(double samplingRate) {
+        SamplingRate(double samplingRate) {
             mSamplingRate = samplingRate;
         }
 
@@ -120,6 +131,7 @@ public double getSamplingRate() {
     @Nullable private final String mAdNetworkType;
     @Nullable private final Double mAdWidthPx;
     @Nullable private final Double mAdHeightPx;
+    @Nullable private final String mDspCreativeId;
     @Nullable private final Integer mDeviceScreenWidthDip;
     @Nullable private final Integer mDeviceScreenHeightDip;
     @Nullable private final Double mGeoLat;
@@ -158,6 +170,7 @@ public BaseEvent(@NonNull final Builder builder) {
         mAdNetworkType = builder.mAdNetworkType;
         mAdWidthPx = builder.mAdWidthPx;
         mAdHeightPx = builder.mAdHeightPx;
+        mDspCreativeId = builder.mDspCreativeId;
         mGeoLat = builder.mGeoLat;
         mGeoLon = builder.mGeoLon;
         mGeoAccuracy = builder.mGeoAccuracy;
@@ -229,6 +242,11 @@ public String getAdCreativeId() {
         return mAdCreativeId;
     }
 
+    @Nullable
+    public String getDspCreativeId() {
+        return mDspCreativeId;
+    }
+
     @Nullable
     public String getAdType() {
         return mAdType;
@@ -415,6 +433,7 @@ public String toString() {
                 "AdNetworkType: " + getAdNetworkType() + "\n" +
                 "AdWidthPx: " + getAdWidthPx() + "\n" +
                 "AdHeightPx: " + getAdHeightPx() + "\n" +
+                "DspCreativeId: " + getDspCreativeId() + "\n" +
                 "AppPlatform: " + getAppPlatform() + "\n" +
                 "AppName: " + getAppName() + "\n" +
                 "AppPackageName: " + getAppPackageName() + "\n" +
@@ -455,6 +474,7 @@ public String toString() {
         @Nullable private String mAdNetworkType;
         @Nullable private Double mAdWidthPx;
         @Nullable private Double mAdHeightPx;
+        @Nullable private String mDspCreativeId;
         @Nullable private Double mGeoLat;
         @Nullable private Double mGeoLon;
         @Nullable private Double mGeoAccuracy;
@@ -526,6 +546,12 @@ public Builder withAdHeightPx(@Nullable Double adHeightPx) {
             return this;
         }
 
+        @NonNull
+        public Builder withDspCreativeId(@Nullable String dspCreativeId) {
+            mDspCreativeId = dspCreativeId;
+            return this;
+        }
+
         @NonNull
         public Builder withGeoLat(@Nullable Double geoLat) {
             mGeoLat = geoLat;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/ErrorEvent.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ErrorEvent.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/ErrorEvent.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ErrorEvent.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/Event.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/Event.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/Event.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/Event.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventDetails.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDetails.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventDetails.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDetails.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventDispatcher.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDispatcher.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventDispatcher.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventDispatcher.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventRecorder.java
similarity index 77%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventRecorder.java
index efaa5515..e24dea37 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/EventRecorder.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventRecorder.java
@@ -4,5 +4,5 @@
  * This interface represents a backend to which MoPub client events are logged.
  */
 public interface EventRecorder {
-    public void record(BaseEvent baseEvent);
+    void record(BaseEvent baseEvent);
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventSampler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSampler.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventSampler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSampler.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSerializer.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSerializer.java
index 94cf7c31..b91c95cd 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/event/EventSerializer.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/EventSerializer.java
@@ -74,6 +74,7 @@ public JSONObject serializeAsJson(@NonNull BaseEvent event) throws JSONException
         jsonObject.put("ad_network_type", event.getAdNetworkType());
         jsonObject.put("ad_width_px", event.getAdWidthPx());
         jsonObject.put("ad_height_px", event.getAdHeightPx());
+        jsonObject.put("dsp_creative_id", event.getDspCreativeId());
 
         // App Details
         BaseEvent.AppPlatform appPlatform = event.getAppPlatform();
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/LogCatEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/LogCatEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/MoPubEvents.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/MoPubEvents.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/MoPubEvents.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/MoPubEvents.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/NoopEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/NoopEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/NoopEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/NoopEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/event/ScribeEventRecorder.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/event/ScribeEventRecorder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/factories/MethodBuilderFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/logging/MoPubLog.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/logging/MoPubLog.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/logging/MoPubLog.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/AsyncTasks.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/AsyncTasks.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/AsyncTasks.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/AsyncTasks.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/DateAndTime.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DateAndTime.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/DateAndTime.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DateAndTime.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
similarity index 83%
rename from mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
index 47406b98..ed4142da 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/DeviceUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/DeviceUtils.java
@@ -13,9 +13,9 @@
 import android.net.NetworkInfo;
 import android.os.Build;
 import android.os.StatFs;
-import android.provider.Settings;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v4.content.ContextCompat;
 import android.util.DisplayMetrics;
 import android.view.Display;
 import android.view.Surface;
@@ -25,20 +25,14 @@
 import com.mopub.common.Preconditions;
 import com.mopub.common.logging.MoPubLog;
 
-import org.apache.http.conn.util.InetAddressUtils;
-
 import java.io.File;
-import java.net.InetAddress;
-import java.net.NetworkInterface;
 import java.net.SocketException;
-import java.util.Locale;
 
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.Manifest.permission.INTERNET;
 import static com.mopub.common.util.Reflection.MethodBuilder;
 import static com.mopub.common.util.VersionCode.HONEYCOMB;
 import static com.mopub.common.util.VersionCode.currentApiLevel;
-import static java.util.Collections.list;
 
 public class DeviceUtils {
     private static final int MAX_MEMORY_CACHE_SIZE = 30 * 1024 * 1024; // 30 MB
@@ -47,7 +41,7 @@
 
     private DeviceUtils() {}
 
-    public static enum ForceOrientation {
+    public enum ForceOrientation {
         FORCE_PORTRAIT("portrait"),
         FORCE_LANDSCAPE("landscape"),
         DEVICE_ORIENTATION("device"),
@@ -55,7 +49,7 @@ private DeviceUtils() {}
 
         @NonNull private final String mKey;
 
-        private ForceOrientation(@NonNull final String key) {
+        ForceOrientation(@NonNull final String key) {
             mKey = key;
         }
 
@@ -71,64 +65,12 @@ public static ForceOrientation getForceOrientation(@Nullable String key) {
         }
     }
 
-    public static enum IP {
-        IPv4,
-        IPv6;
-
-        private boolean matches(final String address) {
-            switch (this) {
-                case IPv4:
-                    return InetAddressUtils.isIPv4Address(address);
-                case IPv6:
-                    return InetAddressUtils.isIPv6Address(address);
-                default:
-                    return false;
-            }
-        }
-
-        private String toString(final String address) {
-            switch (this) {
-                case IPv4:
-                    return address;
-                case IPv6:
-                    return address.split("%")[0];
-                default:
-                    return null;
-            }
-        }
-    }
-
-    public static String getIpAddress(IP ip) throws SocketException {
-        for (final NetworkInterface networkInterface : list(NetworkInterface.getNetworkInterfaces())) {
-            for (final InetAddress address : list(networkInterface.getInetAddresses())) {
-                if (!address.isLoopbackAddress()) {
-                    String hostAddress = address.getHostAddress().toUpperCase(Locale.US);
-                    if (ip.matches(hostAddress)) {
-                        return ip.toString(hostAddress);
-                    }
-                }
-            }
-        }
-
-        return null;
-    }
-
-    public static String getHashedUdid(final Context context) {
-        if (context == null) {
-            return null;
-        }
-
-        String udid = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
-        return Utils.sha1(udid);
-    }
-
     public static boolean isNetworkAvailable(@Nullable final Context context) {
         if (context == null) {
             return false;
         }
 
-        final int internetPermission = context.checkCallingOrSelfPermission(INTERNET);
-        if (internetPermission == PackageManager.PERMISSION_DENIED) {
+        if (!DeviceUtils.isPermissionGranted(context, INTERNET)) {
             return false;
         }
 
@@ -137,8 +79,7 @@ public static boolean isNetworkAvailable(@Nullable final Context context) {
          * It's possible to not have permission to check network state but still be able
          * to access the network itself.
          */
-        final int networkAccessPermission = context.checkCallingOrSelfPermission(ACCESS_NETWORK_STATE);
-        if (networkAccessPermission == PackageManager.PERMISSION_DENIED) {
+        if (!DeviceUtils.isPermissionGranted(context, ACCESS_NETWORK_STATE)) {
             return true;
         }
 
@@ -307,4 +248,37 @@ public static Point getDeviceDimensions(@NonNull final Context context) {
 
         return new Point(bestWidthPixels, bestHeightPixels);
     }
+
+    public static boolean isPermissionGranted(@NonNull final Context context,
+            @NonNull final String permission) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(permission);
+
+        return ContextCompat.checkSelfPermission(context, permission) ==
+                PackageManager.PERMISSION_GRANTED;
+    }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    public enum IP { IPv4, IPv6 }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    @Nullable
+    public static String getIpAddress(IP ip) throws SocketException {
+        return null;
+    }
+
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    @Nullable
+    public static String getHashedUdid(final Context context) {
+        return null;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Dips.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Dips.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Dips.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Dips.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Drawables.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Drawables.java
index d1ae9267..652bf750 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Drawables.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Drawables.java
@@ -36,7 +36,7 @@
     // multiple views.
     private Bitmap cachedBitmap;
 
-    private Drawables(final String encodedString) {
+    Drawables(final String encodedString) {
         this.encodedString = encodedString;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Files.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Files.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Files.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Files.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ImageUtils.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ImageUtils.java
index 267a9bbf..90e7f16a 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ImageUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ImageUtils.java
@@ -46,8 +46,8 @@ public static Bitmap applyFastGaussianBlurToBitmap(@NonNull Bitmap mutableBitmap
 
     /**
      * Sets the alpha value of the ImageView.
-     * API Level < 16: http://developer.android.com/reference/android/widget/ImageView.html#setAlpha(int)
-     * API Level >= 16: http://developer.android.com/reference/android/widget/ImageView.html#setImageAlpha(int)
+     * API Level < 16: https://developer.android.com/reference/android/widget/ImageView.html#setAlpha(int)
+     * API Level >= 16: https://developer.android.com/reference/android/widget/ImageView.html#setImageAlpha(int)
      * @param imageView the ImageView
      * @param alpha the alpha value being applied to the ImageView
      */
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Intents.java
similarity index 75%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Intents.java
index ba776d4f..c0d9b3e8 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Intents.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Intents.java
@@ -12,6 +12,7 @@
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
 
+import com.mopub.common.Constants;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.Preconditions;
 import com.mopub.common.UrlAction;
@@ -19,7 +20,6 @@
 import com.mopub.exceptions.IntentNotResolvableException;
 import com.mopub.exceptions.UrlParseException;
 
-import java.util.EnumSet;
 import java.util.List;
 
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
@@ -74,32 +74,10 @@ public static boolean deviceCanHandleIntent(@NonNull final Context context,
         }
     }
 
-    public static boolean canHandleApplicationUrl(final Context context, final Uri uri) {
-        return canHandleApplicationUrl(context, uri, true);
-    }
-
-    public static boolean canHandleApplicationUrl(final Context context, final Uri uri,
-            final boolean logError) {
-        // Determine which activities can handle the intent
-        final Intent intent = new Intent(Intent.ACTION_VIEW, uri);
-
-        // If there are no relevant activities, don't follow the link
-        if (!Intents.deviceCanHandleIntent(context, intent)) {
-            if (logError) {
-                MoPubLog.w("Could not handle application specific action: " + uri + ". " +
-                        "You may be running in the emulator or another device which does not " +
-                        "have the required application.");
-            }
-            return false;
-        }
-
-        return true;
-    }
-
     /**
      * Native Browser Scheme URLs provide a means for advertisers to include links that click out to
      * an external browser, rather than the MoPub in-app browser. Properly formatted native browser
-     * URLs take the form of "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com".
+     * URLs take the form of "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com".
      *
      * @param uri The Native Browser Scheme URL to open in the external browser.
      * @return An Intent that will open an app-external browser taking the user to a page specified
@@ -123,7 +101,7 @@ public static Intent intentForNativeBrowserScheme(@NonNull final Uri uri)
             urlToOpenInNativeBrowser = uri.getQueryParameter("url");
         } catch (UnsupportedOperationException e) {
             // Accessing query parameters only makes sense for hierarchical URIs as per:
-            // http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+            // https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
             MoPubLog.w("Could not handle url: " + uri);
             throw new UrlParseException("Passed-in URL did not create a hierarchical URI.");
         }
@@ -174,7 +152,7 @@ public static Intent intentForShareTweet(@NonNull final Uri uri)
             tweetId = uri.getQueryParameter("tweet_id");
         } catch (UnsupportedOperationException e) {
             // Accessing query parameters only makes sense for hierarchical URIs as per:
-            // http://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
+            // https://developer.android.com/reference/android/net/Uri.html#getQueryParameter(java.lang.String)
             MoPubLog.w("Could not handle url: " + uri);
             throw new UrlParseException("Passed-in URL did not create a hierarchical URI.");
         }
@@ -208,7 +186,8 @@ public static Intent intentForShareTweet(@NonNull final Uri uri)
      * @param uri The URL to load in the started {@link MoPubBrowser} activity.
      */
     public static void showMoPubBrowserForUrl(@NonNull final Context context,
-            @NonNull Uri uri)
+            @NonNull Uri uri,
+            @Nullable String dspCreativeId)
             throws IntentNotResolvableException {
         Preconditions.checkNotNull(context);
         Preconditions.checkNotNull(uri);
@@ -217,6 +196,9 @@ public static void showMoPubBrowserForUrl(@NonNull final Context context,
 
         final Bundle extras = new Bundle();
         extras.putString(MoPubBrowser.DESTINATION_URL_KEY, uri.toString());
+        if (!TextUtils.isEmpty(dspCreativeId)) {
+            extras.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+        }
         Intent intent = getStartActivityIntent(context, MoPubBrowser.class, extras);
 
         String errorMessage = "Could not show MoPubBrowser for url: " + uri + "\n\tPerhaps you " +
@@ -225,16 +207,6 @@ public static void showMoPubBrowserForUrl(@NonNull final Context context,
         launchIntentForUserClick(context, intent, errorMessage);
     }
 
-    public static void launchActionViewIntent(Context context, @NonNull final Uri uri,
-            @NonNull final String errorMessage) throws IntentNotResolvableException {
-        final Intent intent = new Intent(Intent.ACTION_VIEW, uri);
-        if (!(context instanceof Activity)) {
-            intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
-        }
-
-        launchIntentForUserClick(context, intent, errorMessage);
-    }
-
     public static void launchIntentForUserClick(@NonNull final Context context,
             @NonNull final Intent intent, @Nullable final String errorMessage)
             throws IntentNotResolvableException {
@@ -242,7 +214,7 @@ public static void launchIntentForUserClick(@NonNull final Context context,
         Preconditions.NoThrow.checkNotNull(intent);
 
         try {
-            Intents.startActivity(context, intent);
+            startActivity(context, intent);
         } catch (IntentNotResolvableException e) {
             throw new IntentNotResolvableException(errorMessage + "\n" + e.getMessage());
         }
@@ -250,13 +222,88 @@ public static void launchIntentForUserClick(@NonNull final Context context,
 
     public static void launchApplicationUrl(@NonNull final Context context,
             @NonNull final Uri uri) throws IntentNotResolvableException {
-        if (Intents.canHandleApplicationUrl(context, uri)) {
-            final String errorMessage = "Unable to open intent for: " + uri;
-            Intents.launchActionViewIntent(context, uri, errorMessage);
+        final Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(uri);
+
+        if (deviceCanHandleIntent(context, intent)) {
+            launchApplicationIntent(context, intent);
         } else {
+            // Deeplink+ needs this exception to know primaryUrl failed and then attempt fallbackUrl
+            // See UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK
             throw new IntentNotResolvableException("Could not handle application specific " +
                     "action: " + uri + "\n\tYou may be running in the emulator or another " +
                     "device which does not have the required application.");
         }
     }
+
+    public static void launchApplicationIntent(@NonNull final Context context,
+            @NonNull final Intent intent) throws IntentNotResolvableException {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(intent);
+
+        if (deviceCanHandleIntent(context, intent)) {
+            final String errorMessage = "Unable to open intent: " + intent;
+            if (!(context instanceof Activity)) {
+                intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
+            }
+            launchIntentForUserClick(context, intent, errorMessage);
+        } else {
+            final String fallbackUrl = intent.getStringExtra("browser_fallback_url");
+            if (TextUtils.isEmpty(fallbackUrl)) {
+                if (!"market".equalsIgnoreCase(intent.getScheme())) {
+                    launchApplicationUrl(context, getPlayStoreUri(intent));
+                } else {
+                    throw new IntentNotResolvableException("Device could not handle neither " +
+                            "intent nor market url.\nIntent: " + intent.toString());
+                }
+            } else {
+                final Uri fallbackUri = Uri.parse(fallbackUrl);
+                final String fallbackScheme = fallbackUri.getScheme();
+                if (Constants.HTTP.equalsIgnoreCase(fallbackScheme)
+                        || Constants.HTTPS.equalsIgnoreCase(fallbackScheme)) {
+                    showMoPubBrowserForUrl(context, fallbackUri, null);
+                } else {
+                    launchApplicationUrl(context, fallbackUri);
+                }
+            }
+        }
+    }
+
+    @NonNull
+    public static Uri getPlayStoreUri(@NonNull final Intent intent) {
+        Preconditions.checkNotNull(intent);
+
+        return Uri.parse("market://details?id=" + intent.getPackage());
+    }
+
+    public static void launchActionViewIntent(@NonNull final Context context,
+            @NonNull final Uri uri,
+            @Nullable final String errorMessage) throws IntentNotResolvableException {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(uri);
+
+        final Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+        if (!(context instanceof Activity)) {
+            intent.addFlags(FLAG_ACTIVITY_NEW_TASK);
+        }
+        launchIntentForUserClick(context, intent, errorMessage);
+    }
+
+    /**
+     * @deprecated as of 4.7.0. Use {@link #deviceCanHandleIntent(Context, Intent)}
+     */
+    @Deprecated
+    public static boolean canHandleApplicationUrl(final Context context, final Uri uri) {
+        return false;
+    }
+
+    /**
+     * @deprecated as of 4.7.0. Use {@link #deviceCanHandleIntent(Context, Intent)}
+     */
+    @Deprecated
+    public static boolean canHandleApplicationUrl(final Context context, final Uri uri,
+            final boolean logError) {
+        return false;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Json.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Json.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Json.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Json.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
index aaf7b4bf..c248acec 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ManifestUtils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ManifestUtils.java
@@ -25,6 +25,8 @@
 public class ManifestUtils {
     private ManifestUtils() {}
 
+    private static final String MOPUB_ACTIVITY = "com.mopub.mobileads.MoPubActivity";
+    private static final String MRAID_ACTIVITY = "com.mopub.mobileads.MraidActivity";
     private static final List<Class<? extends Activity>> REQUIRED_WEB_VIEW_SDK_ACTIVITIES;
     private static FlagCheckUtil sFlagCheckUtil = new FlagCheckUtil();
 
@@ -36,8 +38,15 @@ private ManifestUtils() {}
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES = new ArrayList<Class<? extends Activity>>(4);
         // As a convenience, full class paths are provided here, in case the MoPub SDK was imported
         // incorrectly and these files were left out.
-        REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MoPubActivity.class);
-        REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MraidActivity.class);
+        try {
+            final Class moPubActivityClass = Class.forName(MOPUB_ACTIVITY);
+            final Class mraidActivityClass = Class.forName(MRAID_ACTIVITY);
+            REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(moPubActivityClass);
+            REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(mraidActivityClass);
+        } catch (ClassNotFoundException e) {
+            MoPubLog.i("ManifestUtils running without interstitial module");
+        }
+
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.mobileads.MraidVideoPlayerActivity.class);
         REQUIRED_WEB_VIEW_SDK_ACTIVITIES.add(com.mopub.common.MoPubBrowser.class);
     }
@@ -123,7 +132,7 @@ public static boolean isDebuggable(@NonNull final Context context) {
      * Filters in activities to be returned based on matching their declaration state
      * in the Android Manifest with the isDeclared param.
      *
-     * @param context
+     * @param context the context
      * @param requiredActivities activities to filter against
      * @param isDeclared desired declaration state of activities in Android Manifest to be returned
      * @return the list of filtered in activities
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/MoPubCollections.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/MoPubCollections.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/MoPubCollections.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/MoPubCollections.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Numbers.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Numbers.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Numbers.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Numbers.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
similarity index 79%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
index 3efa8598..5755e559 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Reflection.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Reflection.java
@@ -102,9 +102,28 @@ public static boolean classFound(final String className) {
         Preconditions.checkNotNull(className);
 
         final Class<? extends T> clazz = Class.forName(className).asSubclass(superclass);
+        // noinspection unchecked
         final Constructor<? extends T> constructor = clazz.getDeclaredConstructor((Class[]) null);
         constructor.setAccessible(true);
 
         return constructor.newInstance();
     }
+
+    public static <T> T instantiateClassWithConstructor(@NonNull final String className,
+            @NonNull final Class<? extends T> superClass, @NonNull Class[] classes,
+            @NonNull Object[] parameters)
+            throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException,
+            InvocationTargetException, InstantiationException {
+        Preconditions.checkNotNull(className);
+        Preconditions.checkNotNull(superClass);
+        Preconditions.checkNotNull(classes);
+        Preconditions.checkNotNull(parameters);
+
+        final Class<? extends T> clazz = Class.forName(className).asSubclass(superClass);
+        // noinspection unchecked
+        final Constructor<? extends T> constructor = clazz.getDeclaredConstructor(classes);
+        constructor.setAccessible(true);
+
+        return constructor.newInstance(parameters);
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
similarity index 81%
rename from mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
index 93a0f227..002c36b2 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/ResponseHeader.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/ResponseHeader.java
@@ -7,6 +7,7 @@
     CUSTOM_EVENT_DATA("X-Custom-Event-Class-Data"),
     CUSTOM_EVENT_NAME("X-Custom-Event-Class-Name"),
     CUSTOM_EVENT_HTML_DATA("X-Custom-Event-Html-Data"),
+    CREATIVE_ID("X-CreativeId"),
     DSP_CREATIVE_ID("X-DspCreativeid"),
     FAIL_URL("X-Failurl"),
     FULL_AD_TYPE("X-Fulladtype"),
@@ -32,10 +33,15 @@
     IMPRESSION_VISIBLE_MS("X-Impression-Visible-Ms"),
     MAX_BUFFER_MS("X-Max-Buffer-Ms"),
 
+    // Rewarded Video fields
+    REWARDED_VIDEO_CURRENCY_NAME("X-Rewarded-Video-Currency-Name"),
+    REWARDED_VIDEO_CURRENCY_AMOUNT("X-Rewarded-Video-Currency-Amount"),
+    REWARDED_VIDEO_COMPLETION_URL("X-Rewarded-Video-Completion-Url"),
+
     @Deprecated CUSTOM_SELECTOR("X-Customselector");
 
     private final String key;
-    private ResponseHeader(String key) {
+    ResponseHeader(String key) {
         this.key = key;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Streams.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Streams.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Streams.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Streams.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Strings.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Strings.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Strings.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Strings.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Timer.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Timer.java
index b53c4de3..f3125176 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Timer.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Timer.java
@@ -3,7 +3,7 @@
 import java.util.concurrent.TimeUnit;
 
 public class Timer {
-    private static enum State { STARTED, STOPPED }
+    private enum State { STARTED, STOPPED }
     private long mStopTimeNanos;
     private long mStartTimeNanos;
     private State mState;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Utils.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Utils.java
index c4b620de..cc5f9e5b 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/Utils.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Utils.java
@@ -1,7 +1,5 @@
 package com.mopub.common.util;
 
-import com.mopub.common.VisibleForTesting;
-
 import java.security.MessageDigest;
 import java.util.Locale;
 import java.util.concurrent.atomic.AtomicLong;
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/VersionCode.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/VersionCode.java
index 606b3782..fee8713e 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/util/VersionCode.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/VersionCode.java
@@ -39,7 +39,7 @@ private static VersionCode forApiLevel(int targetApiLevel) {
         return CUR_DEVELOPMENT;
     }
 
-    private VersionCode(int apiLevel) {
+    VersionCode(int apiLevel) {
         this.mApiLevel = apiLevel;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Views.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Views.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Views.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Views.java
diff --git a/mopub-sdk/src/main/java/com/mopub/common/util/Visibility.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Visibility.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/common/util/Visibility.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/common/util/Visibility.java
diff --git a/mopub-sdk/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/IntentNotResolvableException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/exceptions/UrlParseException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/UrlParseException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/exceptions/UrlParseException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/exceptions/UrlParseException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertGestureListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertReporter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertReporter.java
similarity index 55%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertReporter.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertReporter.java
index ca5087ce..48a7898f 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdAlertReporter.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdAlertReporter.java
@@ -7,25 +7,19 @@
 import android.support.annotation.Nullable;
 import android.util.Base64;
 import android.view.View;
+import android.widget.Toast;
 
 import com.mopub.common.AdReport;
-import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.DateAndTime;
-import com.mopub.common.util.Streams;
+import com.mopub.common.util.Intents;
+import com.mopub.exceptions.IntentNotResolvableException;
 
 import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Locale;
 
 public class AdAlertReporter {
     private static final String EMAIL_RECIPIENT = "creative-review@mopub.com";
-    private static final String EMAIL_SCHEME = "mailto:";
-    private static final String SCREEN_SHOT_FILENAME = "mp_adalert_screenshot.png";
-    private static final String PARAMETERS_FILENAME = "mp_adalert_parameters.txt";
-    private static final String MARKUP_FILENAME = "mp_adalert_markup.html";
     private static final String DATE_FORMAT_PATTERN = "M/d/yy hh:mm:ss a z";
     private static final int IMAGE_QUALITY = 25;
     private static final String BODY_SEPARATOR = "\n=================\n";
@@ -35,7 +29,6 @@
     private final View mView;
     private final Context mContext;
     private Intent mEmailIntent;
-    private ArrayList<Uri> mEmailAttachments;
     private String mParameters;
     private String mResponse;
 
@@ -43,8 +36,6 @@ public AdAlertReporter(final Context context, final View view, @Nullable final A
         mView = view;
         mContext = context;
 
-        mEmailAttachments = new ArrayList<Uri>();
-
         SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT_PATTERN, Locale.US);
         mDateString = dateFormat.format(DateAndTime.now());
 
@@ -60,24 +51,22 @@ public AdAlertReporter(final Context context, final View view, @Nullable final A
 
         addEmailSubject();
         addEmailBody(mParameters, mResponse, screenShotString);
-        addTextAttachment(PARAMETERS_FILENAME, mParameters);
-        addTextAttachment(MARKUP_FILENAME, mResponse);
-        addImageAttachment(SCREEN_SHOT_FILENAME, screenShot);
     }
 
     public void send() {
-        mEmailIntent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, mEmailAttachments);
-
-        Intent chooserIntent = Intent.createChooser(mEmailIntent, "Send Email...");
-        chooserIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        mContext.startActivity(chooserIntent);
+        try {
+            Intents.startActivity(mContext, mEmailIntent);
+        } catch (IntentNotResolvableException e) {
+            Toast.makeText(mContext, "No email client available", Toast.LENGTH_SHORT).show();
+        }
     }
 
     private void initEmailIntent() {
-        Uri emailScheme = Uri.parse(EMAIL_SCHEME);
-        mEmailIntent = new Intent(Intent.ACTION_SEND_MULTIPLE);
-        mEmailIntent.setDataAndType(emailScheme, "plain/text");
-        mEmailIntent.putExtra(Intent.EXTRA_EMAIL, new String[]{EMAIL_RECIPIENT});
+        mEmailIntent = new Intent(Intent.ACTION_SENDTO);
+        // Should not set type since that either overrides (via setType) or conflicts with
+        // (via setDataAndType) the data, resulting in NO applications being able to handle this
+        // intent.
+        mEmailIntent.setData(Uri.parse("mailto:" + EMAIL_RECIPIENT));
     }
 
     private Bitmap takeScreenShot() {
@@ -116,7 +105,8 @@ private String convertBitmapInWEBPToBase64EncodedString(Bitmap bitmap) {
     }
 
     private void addEmailSubject() {
-        mEmailIntent.putExtra(Intent.EXTRA_SUBJECT, "New creative violation report - " + mDateString);
+        mEmailIntent.putExtra(Intent.EXTRA_SUBJECT, "New creative violation report - "
+                + mDateString);
     }
 
     private void addEmailBody(String... data) {
@@ -132,57 +122,11 @@ private void addEmailBody(String... data) {
         mEmailIntent.putExtra(Intent.EXTRA_TEXT, body.toString());
     }
 
-    private void addImageAttachment(String fileName, Bitmap bitmap) {
-        FileOutputStream fileOutputStream = null;
-
-        if (fileName == null || bitmap == null) {
-            return;
-        }
-
-        try {
-            fileOutputStream = mContext.openFileOutput(fileName, Context.MODE_WORLD_READABLE);
-            // image quality is okay to be 0 here, since PNG is lossless and will ignore compression quality
-            bitmap.compress(Bitmap.CompressFormat.PNG, IMAGE_QUALITY, fileOutputStream);
-
-            Uri fileUri = Uri.fromFile(new File(mContext.getFilesDir() + File.separator + fileName));
-            mEmailAttachments.add(fileUri);
-        } catch (Exception exception) {
-            MoPubLog.d("Unable to write text attachment to file: " + fileName);
-        } finally {
-            Streams.closeStream(fileOutputStream);
-        }
-    }
-
-    private void addTextAttachment(String fileName, String body) {
-        FileOutputStream fileOutputStream = null;
-
-        if (fileName == null || body == null) {
-            return;
-        }
-
-        try {
-            fileOutputStream = mContext.openFileOutput(fileName, Context.MODE_WORLD_READABLE);
-            fileOutputStream.write(body.getBytes());
-
-            Uri fileUri = Uri.fromFile(new File(mContext.getFilesDir() + File.separator + fileName));
-            mEmailAttachments.add(fileUri);
-        } catch (Exception exception) {
-            MoPubLog.d("Unable to write text attachment to file: " + fileName);
-        } finally {
-            Streams.closeStream(fileOutputStream);
-        }
-    }
-
     @Deprecated // for testing
     Intent getEmailIntent() {
         return mEmailIntent;
     }
 
-    @Deprecated // for testing
-    ArrayList<Uri> getEmailAttachments() {
-        return mEmailAttachments;
-    }
-
     @Deprecated // for testing
     String getParameters() {
         return mParameters;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdRequestStatusMapping.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdTypeTranslator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
index 36878ac2..7cdeb29e 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdTypeTranslator.java
@@ -27,6 +27,7 @@
         VAST_VIDEO_INTERSTITIAL("vast_interstitial", "com.mopub.mobileads.VastVideoInterstitial"),
         MOPUB_NATIVE("mopub_native", "com.mopub.nativeads.MoPubCustomEventNative"),
         MOPUB_VIDEO_NATIVE("mopub_video_native", "com.mopub.nativeads.MoPubCustomEventVideoNative"),
+        MOPUB_REWARDED_VIDEO("rewarded_video", "com.mopub.mobileads.MoPubRewardedVideo"),
 
         UNSPECIFIED("", null);
 
@@ -70,8 +71,10 @@ public static String getCustomEventName(@NonNull AdFormat adFormat,
             return extractHeader(headers, ResponseHeader.CUSTOM_EVENT_NAME);
         } else if (AdType.STATIC_NATIVE.equalsIgnoreCase(adType)){
             return CustomEventType.MOPUB_NATIVE.toString();
-        } else if (AdType.VIDEO_NATIVE.equalsIgnoreCase(adType)){
+        } else if (AdType.VIDEO_NATIVE.equalsIgnoreCase(adType)) {
             return CustomEventType.MOPUB_VIDEO_NATIVE.toString();
+        } else if (AdType.REWARDED_VIDEO.equalsIgnoreCase(adType)) {
+            return CustomEventType.MOPUB_REWARDED_VIDEO.toString();
         } else if (AdType.HTML.equalsIgnoreCase(adType) || AdType.MRAID.equalsIgnoreCase(adType)) {
             return (AdFormat.INTERSTITIAL.equals(adFormat)
                     ? CustomEventType.fromString(adType + INTERSTITIAL_SUFFIX)
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
index 9ff7c500..98f3d52f 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -1,7 +1,6 @@
 package com.mopub.mobileads;
 
 import android.content.Context;
-import android.content.pm.PackageManager;
 import android.location.Location;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
@@ -17,6 +16,7 @@
 import com.mopub.common.AdReport;
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.Constants;
+import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.event.BaseEvent;
 import com.mopub.common.logging.MoPubLog;
@@ -53,18 +53,13 @@
 
     private final long mBroadcastIdentifier;
 
-    @Nullable
-    private Context mContext;
-    @Nullable
-    private MoPubView mMoPubView;
-    @Nullable
-    private WebViewAdUrlGenerator mUrlGenerator;
+    @Nullable private Context mContext;
+    @Nullable private MoPubView mMoPubView;
+    @Nullable private WebViewAdUrlGenerator mUrlGenerator;
 
-    @Nullable
-    private AdResponse mAdResponse;
+    @Nullable private AdResponse mAdResponse;
     private final Runnable mRefreshRunnable;
-    @NonNull
-    private final AdRequest.Listener mAdListener;
+    @NonNull private final AdRequest.Listener mAdListener;
 
     private boolean mIsDestroyed;
     private Handler mHandler;
@@ -82,13 +77,10 @@
     private Location mLocation;
     private boolean mIsTesting;
     private boolean mAdWasLoaded;
-    @Nullable
-    private String mAdUnitId;
+    @Nullable private String mAdUnitId;
     private int mTimeoutMilliseconds;
-    @Nullable
-    private AdRequest mActiveRequest;
-    @Nullable
-    private Integer mRefreshTimeMillis;
+    @Nullable private AdRequest mActiveRequest;
+    @Nullable private Integer mRefreshTimeMillis;
 
     public static void setShouldHonorServerDimensions(View view) {
         sViewShouldHonorServerDimensions.put(view, true);
@@ -102,7 +94,7 @@ public AdViewController(@NonNull Context context, @NonNull MoPubView view) {
         mContext = context;
         mMoPubView = view;
 
-        // Default timeout means "never refresh"
+        // Timeout value of less than 0 means use the ad format's default timeout
         mTimeoutMilliseconds = -1;
         mBroadcastIdentifier = Utils.generateUniqueId();
 
@@ -141,11 +133,9 @@ void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
         mRefreshTimeMillis = mAdResponse.getRefreshTimeMillis();
         setNotLoading();
 
-        // Get our custom event from the ad response and load into the view.
-        AdLoader adLoader = AdLoader.fromAdResponse(mAdResponse, this);
-        if (adLoader != null) {
-            adLoader.load();
-        }
+        loadCustomEvent(mMoPubView, adResponse.getCustomEventClassName(),
+                adResponse.getServerExtras());
+
         scheduleRefreshTimerIfEnabled();
     }
 
@@ -173,6 +163,20 @@ void onAdLoadError(final VolleyError error) {
         adDidFail(errorCode);
     }
 
+    @VisibleForTesting
+    void loadCustomEvent(@Nullable final MoPubView moPubView,
+            @Nullable final String customEventClassName,
+            @NonNull final Map<String, String> serverExtras) {
+        Preconditions.checkNotNull(serverExtras);
+
+        if (moPubView == null) {
+            MoPubLog.d("Can't load an ad in this ad view because it was destroyed.");
+            return;
+        }
+
+        moPubView.loadCustomEvent(customEventClassName, serverExtras);
+    }
+
     @VisibleForTesting
     @NonNull
     static MoPubErrorCode getErrorCodeFromVolleyError(@NonNull final VolleyError error,
@@ -255,7 +259,10 @@ public void reload() {
         loadNonJavascript(mUrl);
     }
 
-    void loadFailUrl(MoPubErrorCode errorCode) {
+    /**
+     * Returns true if continuing to load the failover url, false if the ad actually did not fill.
+     */
+    boolean loadFailUrl(MoPubErrorCode errorCode) {
         mIsLoading = false;
 
         Log.v("MoPub", "MoPubErrorCode: " + (errorCode == null ? "" : errorCode.toString()));
@@ -264,9 +271,11 @@ void loadFailUrl(MoPubErrorCode errorCode) {
         if (!TextUtils.isEmpty(failUrl)) {
             MoPubLog.d("Loading failover url: " + failUrl);
             loadNonJavascript(failUrl);
+            return true;
         } else {
             // No other URLs to try, so signal a failure.
             adDidFail(MoPubErrorCode.NO_FILL);
+            return false;
         }
     }
 
@@ -308,10 +317,6 @@ public long getBroadcastIdentifier() {
         return mBroadcastIdentifier;
     }
 
-    public void setTimeout(int milliseconds) {
-       mTimeoutMilliseconds = milliseconds;
-    }
-
     public int getAdWidth() {
         if (mAdResponse != null && mAdResponse.getWidth() != null) {
             return mAdResponse.getWidth();
@@ -409,7 +414,7 @@ void cleanup() {
     }
 
     Integer getAdTimeoutDelay() {
-        return mAdResponse == null ? null : mAdResponse.getAdTimeoutMillis();
+        return mTimeoutMilliseconds;
     }
 
     void trackImpression() {
@@ -507,8 +512,9 @@ private boolean isNetworkAvailable() {
             return false;
         }
         // If we don't have network state access, just assume the network is up.
-        int result = mContext.checkCallingPermission(ACCESS_NETWORK_STATE);
-        if (result == PackageManager.PERMISSION_DENIED) return true;
+        if (!DeviceUtils.isPermissionGranted(mContext, ACCESS_NETWORK_STATE)) {
+            return true;
+        }
 
         // Otherwise, perform the connectivity check.
         ConnectivityManager cm
@@ -520,7 +526,7 @@ private boolean isNetworkAvailable() {
     void setAdContentView(final View view) {
         // XXX: This method is called from the WebViewClient's callbacks, which has caused an error on a small portion of devices
         // We suspect that the code below may somehow be running on the wrong UI Thread in the rare case.
-        // see: http://stackoverflow.com/questions/10426120/android-got-calledfromwrongthreadexception-in-onpostexecute-how-could-it-be
+        // see: https://stackoverflow.com/questions/10426120/android-got-calledfromwrongthreadexception-in-onpostexecute-how-could-it-be
         mHandler.post(new Runnable() {
             @Override
             public void run() {
diff --git a/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java
new file mode 100644
index 00000000..9b2e04e4
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseBroadcastReceiver.java
@@ -0,0 +1,58 @@
+package com.mopub.mobileads;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.content.LocalBroadcastManager;
+
+import com.mopub.common.DataKeys;
+import com.mopub.common.Preconditions;
+
+public abstract class BaseBroadcastReceiver extends BroadcastReceiver {
+    private final long mBroadcastIdentifier;
+    @Nullable private Context mContext;
+
+    public BaseBroadcastReceiver(final long broadcastIdentifier) {
+        mBroadcastIdentifier = broadcastIdentifier;
+    }
+
+    static void broadcastAction(@NonNull final Context context, final long broadcastIdentifier,
+            @NonNull final String action) {
+        Preconditions.checkNotNull(context, "context cannot be null");
+        Preconditions.checkNotNull(action, "action cannot be null");
+        Intent intent = new Intent(action);
+        intent.putExtra(DataKeys.BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
+        LocalBroadcastManager.getInstance(context.getApplicationContext()).sendBroadcast(intent);
+    }
+
+    @NonNull
+    public abstract IntentFilter getIntentFilter();
+
+    public void register(final @NonNull BroadcastReceiver broadcastReceiver, Context context) {
+        mContext = context;
+        LocalBroadcastManager.getInstance(mContext).registerReceiver(broadcastReceiver,
+                getIntentFilter());
+    }
+
+    public void unregister(final @Nullable BroadcastReceiver broadcastReceiver) {
+        if (mContext != null && broadcastReceiver != null) {
+            LocalBroadcastManager.getInstance(mContext).unregisterReceiver(broadcastReceiver);
+            mContext = null;
+        }
+    }
+
+    /**
+     * Only consume this broadcast if the identifier on the received Intent and this broadcast
+     * match up. This allows us to target broadcasts to the ad that spawned them. We include
+     * this here because there is no appropriate IntentFilter condition that can recreate this
+     * behavior.
+     */
+    public boolean shouldConsumeBroadcast(@NonNull final Intent intent) {
+        Preconditions.checkNotNull(intent, "intent cannot be null");
+        final long receivedIdentifier = intent.getLongExtra(DataKeys.BROADCAST_IDENTIFIER_KEY, -1);
+        return mBroadcastIdentifier == receivedIdentifier;
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
index 6af45e32..0710d7dc 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java
@@ -8,6 +8,7 @@
 import com.mopub.common.AdReport;
 import com.mopub.common.Constants;
 import com.mopub.common.logging.MoPubLog;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.util.VersionCode.ICE_CREAM_SANDWICH;
 import static com.mopub.common.util.VersionCode.currentApiLevel;
@@ -55,8 +56,8 @@ private void disableScrollingAndZoom() {
     }
 
     void loadHtmlResponse(String htmlResponse) {
-        loadDataWithBaseURL("http://" + Constants.HOST + "/", htmlResponse, "text/html", "utf-8",
-                null);
+        loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/", htmlResponse,
+                "text/html", "utf-8", null);
     }
 
     void initializeOnTouchListener(final boolean isScrollable) {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
index 1a4dc8b5..a3906be0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoPlayerActivity.java
@@ -6,9 +6,8 @@
 import android.content.Intent;
 import android.media.AudioManager;
 
+import com.mopub.common.Constants;
 import com.mopub.common.logging.MoPubLog;
-import com.mopub.nativeads.NativeVideoController;
-import com.mopub.nativeads.NativeVideoViewController;
 
 import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
@@ -72,8 +71,8 @@ public static Intent createIntentNativeVideo(final Context context, final long n
         final Intent intentVideoPlayerActivity = new Intent(context, MraidVideoPlayerActivity.class);
         intentVideoPlayerActivity.setFlags(FLAG_ACTIVITY_NEW_TASK);
         intentVideoPlayerActivity.putExtra(VIDEO_CLASS_EXTRAS_KEY, "native");
-        intentVideoPlayerActivity.putExtra(NativeVideoViewController.NATIVE_VIDEO_ID, nativeVideoId);
-        intentVideoPlayerActivity.putExtra(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG, vastVideoConfig);
+        intentVideoPlayerActivity.putExtra(Constants.NATIVE_VIDEO_ID, nativeVideoId);
+        intentVideoPlayerActivity.putExtra(Constants.NATIVE_VAST_VIDEO_CONFIG, vastVideoConfig);
         return intentVideoPlayerActivity;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
index 9cae4baf..6bc577f0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseVideoViewController.java
@@ -12,10 +12,9 @@
 import android.widget.RelativeLayout;
 import android.widget.VideoView;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.logging.MoPubLog;
 
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-
 public abstract class BaseVideoViewController {
     private final Context mContext;
     private final RelativeLayout mLayout;
@@ -76,7 +75,7 @@ public ViewGroup getLayout() {
 
     protected void videoError(boolean shouldFinish) {
         MoPubLog.e("Video cannot be played.");
-        broadcastAction(ACTION_INTERSTITIAL_FAIL);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_FAIL);
         if (shouldFinish) {
            mBaseVideoViewControllerListener.onFinish();
         }
@@ -90,9 +89,9 @@ protected void videoCompleted(boolean shouldFinish) {
 
     void broadcastAction(final String action) {
         if (mBroadcastIdentifier != null) {
-            EventForwardingBroadcastReceiver.broadcastAction(mContext, mBroadcastIdentifier, action);
+            BaseBroadcastReceiver.broadcastAction(mContext, mBroadcastIdentifier, action);
         } else {
-            MoPubLog.w("Tried to broadcast a video event without a braodcast identifier to send to.");
+            MoPubLog.w("Tried to broadcast a video event without a broadcast identifier to send to.");
         }
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
similarity index 74%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
index a9331a31..84d1e820 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseWebView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/BaseWebView.java
@@ -1,5 +1,6 @@
 package com.mopub.mobileads;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.graphics.Color;
 import android.graphics.PixelFormat;
@@ -11,6 +12,7 @@
 import android.webkit.WebSettings;
 import android.webkit.WebView;
 
+import com.mopub.common.VisibleForTesting;
 import com.mopub.common.util.VersionCode;
 import com.mopub.common.util.Views;
 import com.mopub.mobileads.util.WebViews;
@@ -25,8 +27,9 @@ public BaseWebView(Context context) {
          * an Activity context, as it will leak on Froyo devices and earlier.
          */
         super(context.getApplicationContext());
-        enablePlugins(false);
 
+        enablePlugins(false);
+        restrictDeviceContentAccess();
         WebViews.setDisableJSChromeClient(this);
 
         if (!sDeadlockCleared) {
@@ -35,6 +38,20 @@ public BaseWebView(Context context) {
         }
     }
 
+    @Override
+    public void destroy() {
+        mIsDestroyed = true;
+
+        // Needed to prevent receiving the following error on Android versions using WebViewClassic
+        // https://code.google.com/p/android/issues/detail?id=65833.
+        Views.removeFromParent(this);
+
+        // Even after removing from the parent, WebViewClassic can leak because of a static
+        // reference from HTML5VideoViewProcessor. Removing children fixes this problem.
+        removeAllViews();
+        super.destroy();
+    }
+
     protected void enablePlugins(final boolean enabled) {
         // Android 4.3 and above has no concept of plugin states
         if (VersionCode.currentApiLevel().isAtLeast(VersionCode.JELLY_BEAN_MR2)) {
@@ -48,23 +65,34 @@ protected void enablePlugins(final boolean enabled) {
         }
     }
 
-    @Override
-    public void destroy() {
-        mIsDestroyed = true;
+    /*
+     * Intended to be used with dummy WebViews to precache WebView javascript and assets.
+     */
+    @SuppressLint("SetJavaScriptEnabled")
+    protected void enableJavascriptCaching() {
+        getSettings().setJavaScriptEnabled(true);
+        getSettings().setDomStorageEnabled(true);
+        getSettings().setAppCacheEnabled(true);
+        // Required for the Application Caches API to be enabled
+        // See: http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCachePath(java.lang.String)
+        getSettings().setAppCachePath(getContext().getCacheDir().getAbsolutePath());
+    }
 
-        // Needed to prevent receiving the following error on Android versions using WebViewClassic
-        // https://code.google.com/p/android/issues/detail?id=65833.
-        Views.removeFromParent(this);
+    /*
+     * Disabling file access and content access prevents advertising creatives from
+     * detecting the presence of, or reading, files on the device filesystem.
+     */
+    private void restrictDeviceContentAccess() {
+        getSettings().setAllowFileAccess(false);
 
-        // Even after removing from the parent, WebViewClassic can leak because of a static
-        // reference from HTML5VideoViewProcessor. Removing children fixes this problem.
-        removeAllViews();
-        super.destroy();
-    }
+        if (VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {
+            getSettings().setAllowContentAccess(false);
+        }
 
-    @Deprecated // for testing
-    void setIsDestroyed(boolean isDestroyed) {
-        mIsDestroyed = isDestroyed;
+        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
+            getSettings().setAllowFileAccessFromFileURLs(false);
+            getSettings().setAllowUniversalAccessFromFileURLs(false);
+        }
     }
 
     /**
@@ -80,7 +108,7 @@ void setIsDestroyed(boolean isDestroyed) {
      */
     private void clearWebViewDeadlock(@NonNull final Context context) {
         if (VERSION.SDK_INT == VERSION_CODES.KITKAT) {
-            // Create an invisible webview
+            // Create an invisible WebView
             final WebView webView = new WebView(context.getApplicationContext());
             webView.setBackgroundColor(Color.TRANSPARENT);
 
@@ -104,5 +132,9 @@ private void clearWebViewDeadlock(@NonNull final Context context) {
         }
     }
 
-
+    @VisibleForTesting
+    @Deprecated // for testing
+    void setIsDestroyed(boolean isDestroyed) {
+        mIsDestroyed = isDestroyed;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/FacebookKeywordProvider.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
index 32701441..29ba40f1 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewClient.java
@@ -34,22 +34,27 @@
             UrlAction.FOLLOW_DEEP_LINK);
 
     private final Context mContext;
+    private final String mDspCreativeId;
     private HtmlWebViewListener mHtmlWebViewListener;
     private BaseHtmlWebView mHtmlWebView;
     private final String mClickthroughUrl;
     private final String mRedirectUrl;
 
-    HtmlWebViewClient(HtmlWebViewListener htmlWebViewListener, BaseHtmlWebView htmlWebView, String clickthrough, String redirect) {
+    HtmlWebViewClient(HtmlWebViewListener htmlWebViewListener,
+            BaseHtmlWebView htmlWebView, String clickthrough,
+            String redirect, String dspCreativeId) {
         mHtmlWebViewListener = htmlWebViewListener;
         mHtmlWebView = htmlWebView;
         mClickthroughUrl = clickthrough;
         mRedirectUrl = redirect;
+        mDspCreativeId = dspCreativeId;
         mContext = htmlWebView.getContext();
     }
 
     @Override
     public boolean shouldOverrideUrlLoading(final WebView view, final String url) {
         new UrlHandler.Builder()
+                .withDspCreativeId(mDspCreativeId)
                 .withSupportedUrlActions(SUPPORTED_URL_ACTIONS)
                 .withResultActions(new UrlHandler.ResultActions() {
                     @Override
@@ -93,7 +98,7 @@ public void onPageStarted(WebView view, String url, Bitmap favicon) {
             view.stopLoading();
             if (mHtmlWebView.wasClicked()) {
                 try {
-                    Intents.showMoPubBrowserForUrl(mContext, Uri.parse(url));
+                    Intents.showMoPubBrowserForUrl(mContext, Uri.parse(url), mDspCreativeId);
                 } catch (IntentNotResolvableException e) {
                     MoPubLog.d(e.getMessage());
                 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/HtmlWebViewListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubConversionTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubErrorCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
similarity index 80%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
index d05b71c0..fcb0c4ab 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MoPubView.java
@@ -6,6 +6,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.location.Location;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.AttributeSet;
@@ -14,11 +15,12 @@
 import android.widget.FrameLayout;
 
 import com.mopub.common.AdFormat;
+import com.mopub.common.AdReport;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.ManifestUtils;
+import com.mopub.common.util.Reflection;
 import com.mopub.common.util.Visibility;
 import com.mopub.mobileads.factories.AdViewControllerFactory;
-import com.mopub.mobileads.factories.CustomEventBannerAdapterFactory;
 
 import java.util.Map;
 import java.util.TreeMap;
@@ -34,9 +36,13 @@
         public void onBannerCollapsed(MoPubView banner);
     }
 
+    private final String CUSTOM_EVENT_BANNER_ADAPTER_FACTORY =
+            "com.mopub.mobileads.factories.CustomEventBannerAdapterFactory";
+
     @Nullable
     protected AdViewController mAdViewController;
-    protected CustomEventBannerAdapter mCustomEventBannerAdapter;
+    // mCustomEventBannerAdapter must be a CustomEventBannerAdapter
+    protected Object mCustomEventBannerAdapter;
 
     private Context mContext;
     private int mScreenVisibility;
@@ -60,14 +66,14 @@ public MoPubView(Context context, AttributeSet attrs) {
         setVerticalScrollBarEnabled(false);
 
         // There is a rare bug in Froyo/2.2 where creation of a WebView causes a
-        // NullPointerException. (http://code.google.com/p/android/issues/detail?id=10789)
+        // NullPointerException. (https://code.google.com/p/android/issues/detail?id=10789)
         // It happens when the WebView can't access the local file store to make a cache file.
         // Here, we'll work around it by trying to create a file store and then just go inert
         // if it's not accessible.
         if (WebViewDatabase.getInstance(context) == null) {
             MoPubLog.e("Disabling MoPub. Local cache file is inaccessible so MoPub will " +
                     "fail if we try to create a WebView. Details of this Android bug found at:" +
-                    "http://code.google.com/p/android/issues/detail?id=10789");
+                    "https://code.google.com/p/android/issues/detail?id=10789");
             return;
         }
 
@@ -125,17 +131,32 @@ public void destroy() {
         }
 
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
             mCustomEventBannerAdapter = null;
         }
     }
 
+    private void invalidateAdapter() {
+        if (mCustomEventBannerAdapter != null) {
+            try {
+                new Reflection.MethodBuilder(mCustomEventBannerAdapter, "invalidate")
+                        .setAccessible()
+                        .execute();
+            } catch (Exception e) {
+                MoPubLog.e("Error invalidating adapter", e);
+            }
+        }
+    }
+
     Integer getAdTimeoutDelay() {
         return (mAdViewController != null) ? mAdViewController.getAdTimeoutDelay() : null;
     }
 
-    protected void loadFailUrl(MoPubErrorCode errorCode) {
-        if (mAdViewController != null) mAdViewController.loadFailUrl(errorCode);
+    protected boolean loadFailUrl(@NonNull final MoPubErrorCode errorCode) {
+        if (mAdViewController == null) {
+            return false;
+        }
+        return mAdViewController.loadFailUrl(errorCode);
     }
 
     protected void loadCustomEvent(String customEventClassName, Map<String, String> serverExtras) {
@@ -149,18 +170,31 @@ protected void loadCustomEvent(String customEventClassName, Map<String, String>
         }
 
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
         }
 
         MoPubLog.d("Loading custom event adapter.");
 
-        mCustomEventBannerAdapter = CustomEventBannerAdapterFactory.create(
-                this,
-                customEventClassName,
-                serverExtras,
-                mAdViewController.getBroadcastIdentifier(),
-                mAdViewController.getAdReport());
-        mCustomEventBannerAdapter.loadAd();
+        if (Reflection.classFound(CUSTOM_EVENT_BANNER_ADAPTER_FACTORY)) {
+            try {
+                final Class<?> adapterFactoryClass = Class.forName(CUSTOM_EVENT_BANNER_ADAPTER_FACTORY);
+                mCustomEventBannerAdapter = new Reflection.MethodBuilder(null, "create")
+                        .setStatic(adapterFactoryClass)
+                        .addParam(MoPubView.class, this)
+                        .addParam(String.class, customEventClassName)
+                        .addParam(Map.class, serverExtras)
+                        .addParam(long.class, mAdViewController.getBroadcastIdentifier())
+                        .addParam(AdReport.class, mAdViewController.getAdReport())
+                        .execute();
+                new Reflection.MethodBuilder(mCustomEventBannerAdapter, "loadAd")
+                        .setAccessible()
+                        .execute();
+            } catch (Exception e) {
+                MoPubLog.e("Error loading custom event", e);
+            }
+        } else {
+            MoPubLog.e("Could not load custom event -- missing banner module");
+        }
     }
 
     protected void registerClick() {
@@ -200,7 +234,7 @@ private void setAdVisibility(final int visibility) {
 
     protected void adLoaded() {
         MoPubLog.d("adLoaded");
-        
+
         if (mBannerAdListener != null) {
             mBannerAdListener.onBannerLoaded(this);
         }
@@ -261,10 +295,6 @@ public Location getLocation() {
         return (mAdViewController != null) ? mAdViewController.getLocation() : null;
     }
 
-    public void setTimeout(int milliseconds) {
-        if (mAdViewController != null) mAdViewController.setTimeout(milliseconds);
-    }
-
     public int getAdWidth() {
         return (mAdViewController != null) ? mAdViewController.getAdWidth() : 0;
     }
@@ -330,11 +360,13 @@ public boolean getTesting() {
 
     public void forceRefresh() {
         if (mCustomEventBannerAdapter != null) {
-            mCustomEventBannerAdapter.invalidate();
+            invalidateAdapter();
             mCustomEventBannerAdapter = null;
         }
 
-        if (mAdViewController != null) mAdViewController.forceRefresh();
+        if (mAdViewController != null) {
+            mAdViewController.forceRefresh();
+        }
     }
 
     AdViewController getAdViewController() {
@@ -345,6 +377,13 @@ public AdFormat getAdFormat() {
         return AdFormat.BANNER;
     }
 
+    /**
+     * @deprecated As of release 4.4.0
+     */
+    @Deprecated
+    public void setTimeout(int milliseconds) {
+    }
+
     @Deprecated
     public String getResponseString() {
         return null;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
similarity index 80%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
index bbbf6322..ff1bfc63 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/MraidVideoPlayerActivity.java
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
+import android.content.Context;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.os.Bundle;
@@ -11,16 +12,19 @@
 import android.view.Window;
 import android.view.WindowManager;
 
+import com.mopub.common.IntentActions;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.Intents;
+import com.mopub.common.util.Reflection;
 import com.mopub.mraid.MraidVideoViewController;
-import com.mopub.nativeads.NativeVideoViewController;
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
+import static com.mopub.mobileads.BaseBroadcastReceiver.broadcastAction;
 
 public class MraidVideoPlayerActivity extends BaseVideoPlayerActivity implements BaseVideoViewController.BaseVideoViewControllerListener {
+    private static final String NATIVE_VIDEO_VIEW_CONTROLLER =
+            "com.mopub.nativeads.NativeVideoViewController";
+
     @Nullable private BaseVideoViewController mBaseVideoController;
     private long mBroadcastIdentifier;
 
@@ -39,7 +43,7 @@ protected void onCreate(Bundle savedInstanceState) {
             // This can happen if the activity was started without valid intent extras. We leave
             // mBaseVideoController set to null, and finish the activity immediately.
 
-            broadcastAction(this, mBroadcastIdentifier, ACTION_INTERSTITIAL_FAIL);
+            broadcastAction(this, mBroadcastIdentifier, IntentActions.ACTION_INTERSTITIAL_FAIL);
             finish();
             return;
         }
@@ -110,7 +114,23 @@ private BaseVideoViewController createVideoViewController(Bundle savedInstanceSt
         } else if ("mraid".equals(clazz)) {
             return new MraidVideoViewController(this, getIntent().getExtras(), savedInstanceState, this);
         } else if ("native".equals(clazz)) {
-            return new NativeVideoViewController(this, getIntent().getExtras(), savedInstanceState, this);
+            final Class[] constructorParameterClasses = { Context.class, Bundle.class, Bundle.class,
+                    BaseVideoViewController.BaseVideoViewControllerListener.class };
+            final Object[] constructorParameterValues =
+                    { this, getIntent().getExtras(), savedInstanceState, this };
+
+            if (!Reflection.classFound(NATIVE_VIDEO_VIEW_CONTROLLER)) {
+                throw new IllegalStateException("Missing native video module");
+            }
+
+            try {
+                return Reflection.instantiateClassWithConstructor(NATIVE_VIDEO_VIEW_CONTROLLER,
+                        BaseVideoViewController.class,
+                        constructorParameterClasses,
+                        constructorParameterValues);
+            } catch (Exception e) {
+                throw new IllegalStateException("Missing native video module");
+            }
         } else {
             throw new IllegalStateException("Unsupported video type: " + clazz);
         }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/RepeatingHandlerRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAbsoluteProgressTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastAdXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
index 6bf820ae..6d269f82 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdConfig.java
@@ -129,7 +129,7 @@ void handleImpression(@NonNull Context context, int contentPlayHead) {
      *                               HTML, or an IFrame.
      */
     void handleClick(@NonNull final Context context, final int requestCode,
-            @Nullable final String webViewClickThroughUrl) {
+            @Nullable final String webViewClickThroughUrl, @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
         Preconditions.checkArgument(context instanceof Activity, "context must be an activity");
 
@@ -157,6 +157,9 @@ public void urlHandlingSucceeded(@NonNull String url,
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY,
                                     url);
+                            if (!TextUtils.isEmpty(dspCreativeId)) {
+                                bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+                            }
 
                             final Class clazz = MoPubBrowser.class;
                             final Intent intent = Intents.getStartActivityIntent(
@@ -175,6 +178,7 @@ public void urlHandlingFailed(@NonNull String url,
                             @NonNull UrlAction lastFailedUrlAction) {
                     }
                 })
+                .withDspCreativeId(dspCreativeId)
                 .withoutMoPubBrowser()
                 .build().handleUrl(context, correctClickThroughUrl);
     }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
similarity index 93%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
index abacc76c..1d977fb1 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastCompanionAdXmlManager.java
@@ -28,6 +28,7 @@
     private static final String EVENT = "event";
     private static final String WIDTH = "width";
     private static final String HEIGHT = "height";
+    private static final String AD_SLOT_ID = "adSlotID";
 
     // Attribute values
     private static final String CREATIVE_VIEW = "creativeView";
@@ -63,6 +64,16 @@ Integer getHeight() {
         return XmlUtils.getAttributeValueAsInt(mCompanionNode, HEIGHT);
     }
 
+    /**
+     * Gets the adSlotID attribute from the companion ad or {@code null} if not present.
+     *
+     * @return String adSlotId attribute or {@code null}.
+     */
+    @Nullable
+    String getAdSlotId() {
+        return XmlUtils.getAttributeValue(mCompanionNode, AD_SLOT_ID);
+    }
+
     @NonNull
     VastResourceXmlManager getResourceXmlManager() {
         return mResourceXmlManager;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastErrorCode.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastErrorCode.java
index f216a958..532050bf 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastErrorCode.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastErrorCode.java
@@ -6,7 +6,7 @@
 
 /**
  * The various possible error codes for VAST that MoPub supports. See
- * http://www.iab.net/media/file/VASTv3.0.pdf for more information about the error codes.
+ * https://www.iab.net/media/file/VASTv3.0.pdf for more information about the error codes.
  */
 public enum VastErrorCode {
     /**
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionParentXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastExtensionXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastFractionalProgressTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconConfig.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconConfig.java
index 73648a27..ebf2cbee 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconConfig.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconConfig.java
@@ -136,7 +136,8 @@ void handleImpression(@NonNull Context context, int contentPlayHead, @NonNull St
      * @param webViewClickThroughUri The click through uri for Javascript, HTML and IFrame resources
      *                               from the WebView
      */
-    void handleClick(@NonNull final Context context, @Nullable String webViewClickThroughUri) {
+    void handleClick(@NonNull final Context context, @Nullable String webViewClickThroughUri,
+            @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
 
 
@@ -159,7 +160,9 @@ public void urlHandlingSucceeded(@NonNull String url,
                         if (urlAction == UrlAction.OPEN_IN_APP_BROWSER) {
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY, url);
-
+                            if (!TextUtils.isEmpty(dspCreativeId)) {
+                                bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, dspCreativeId);
+                            }
                             Intent intent = Intents.getStartActivityIntent(
                                     context, MoPubBrowser.class, bundle);
                             try {
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastIconXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastIconXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastInLineXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastLinearXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacro.java
similarity index 89%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacro.java
index dd5cf87b..73881485 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacro.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacro.java
@@ -2,7 +2,7 @@
 
 /**
  * Macros that MoPub supports. This is in the format of [name]. For example, an errorcode macro
- * would show up as "http://www.somesite.com/somemethod?error=[ERRORCODE]"
+ * would show up as "https://www.somesite.com/somemethod?error=[ERRORCODE]"
  */
 enum VastMacro {
     /**
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMacroHelper.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacroHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMacroHelper.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMacroHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
index 3478c8f5..2e1e5fcb 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastManager.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 import android.view.Display;
 import android.view.WindowManager;
 
@@ -19,6 +20,8 @@
  * {@link VastVideoConfig}.
  */
 public class VastManager implements VastXmlManagerAggregator.VastXmlManagerAggregatorListener {
+
+
     /**
      * Users of this class should subscribe to this listener to get updates
      * when a video is found or when no video is available.
@@ -36,6 +39,7 @@
 
     @Nullable private VastManagerListener mVastManagerListener;
     @Nullable private VastXmlManagerAggregator mVastXmlManagerAggregator;
+    @Nullable private String mDspCreativeId;
     private double mScreenAspectRatio;
     private int mScreenAreaDp;
 
@@ -55,6 +59,7 @@ public VastManager(@NonNull final Context context, boolean shouldPreCacheVideo)
      */
     public void prepareVastVideoConfiguration(@Nullable final String vastXml,
             @NonNull final VastManagerListener vastManagerListener,
+            @Nullable String dspCreativeId,
             @NonNull final Context context) {
         Preconditions.checkNotNull(vastManagerListener, "vastManagerListener cannot be null");
         Preconditions.checkNotNull(context, "context cannot be null");
@@ -63,6 +68,7 @@ public void prepareVastVideoConfiguration(@Nullable final String vastXml,
             mVastManagerListener = vastManagerListener;
             mVastXmlManagerAggregator = new VastXmlManagerAggregator(this, mScreenAspectRatio,
                     mScreenAreaDp, context.getApplicationContext());
+            mDspCreativeId = dspCreativeId;
 
             try {
                 AsyncTasks.safeExecuteOnExecutor(mVastXmlManagerAggregator, vastXml);
@@ -96,6 +102,10 @@ public void onAggregationComplete(@Nullable final VastVideoConfig vastVideoConfi
             return;
         }
 
+        if (!TextUtils.isEmpty(mDspCreativeId)) {
+            vastVideoConfig.setDspCreativeId(mDspCreativeId);
+        }
+
         // Return immediately if we already have a cached video or if video precache is not required.
         if (!mShouldPreCacheVideo || updateDiskMediaFileUrl(vastVideoConfig)) {
             mVastManagerListener.onVastVideoConfigurationPrepared(vastVideoConfig);
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastMediaXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastResource.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastResource.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastResourceXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoBlurLastVideoFrameTask.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCloseButtonWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
index 62de92ed..9f53d535 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoConfig.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoConfig.java
@@ -23,7 +23,9 @@
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import static com.mopub.network.TrackingRequest.makeVastTrackingHttpRequest;
 
@@ -46,7 +48,9 @@
     @Nullable private String mSkipOffset;
     @Nullable private VastCompanionAdConfig mLandscapeVastCompanionAdConfig;
     @Nullable private VastCompanionAdConfig mPortraitVastCompanionAdConfig;
+    @NonNull private Map<String, VastCompanionAdConfig> mSocialActionsCompanionAds;
     @Nullable private VastIconConfig mVastIconConfig;
+    private boolean mIsRewardedVideo;
 
     // Custom extensions
     @Nullable private String mCustomCtaText;
@@ -55,12 +59,16 @@
     @NonNull private DeviceUtils.ForceOrientation mCustomForceOrientation = DeviceUtils.ForceOrientation.FORCE_LANDSCAPE; // Default is forcing landscape
     @Nullable private VideoViewabilityTracker mVideoViewabilityTracker;
 
+    // MoPub-specific metadata
+    private String mDspCreativeId;
+
     /**
      * Flag to indicate if the VAST xml document has explicitly set the orientation as opposed to
      * using the default.
      */
     private boolean mIsForceOrientationSet;
 
+
     public VastVideoConfig() {
         mImpressionTrackers = new ArrayList<VastTracker>();
         mFractionalTrackers = new ArrayList<VastFractionalProgressTracker>();
@@ -72,12 +80,22 @@ public VastVideoConfig() {
         mSkipTrackers = new ArrayList<VastTracker>();
         mClickTrackers = new ArrayList<VastTracker>();
         mErrorTrackers = new ArrayList<VastTracker>();
+        mSocialActionsCompanionAds = new HashMap<String, VastCompanionAdConfig>();
+        mIsRewardedVideo = false;
     }
 
     /**
      * Setters
      */
 
+    public void setDspCreativeId(@NonNull final String dspCreativeId) {
+        mDspCreativeId = dspCreativeId;
+    }
+
+    public String getDspCreativeId() {
+        return mDspCreativeId;
+    }
+
     public void addImpressionTrackers(@NonNull final List<VastTracker> impressionTrackers) {
         Preconditions.checkNotNull(impressionTrackers, "impressionTrackers cannot be null");
         mImpressionTrackers.addAll(impressionTrackers);
@@ -170,6 +188,11 @@ public void setVastCompanionAd(@Nullable final VastCompanionAdConfig landscapeVa
         mPortraitVastCompanionAdConfig = portraitVastCompanionAdConfig;
     }
 
+    public void setSocialActionsCompanionAds(
+            @NonNull final Map<String, VastCompanionAdConfig> socialActionsCompanionAds) {
+        this.mSocialActionsCompanionAds = socialActionsCompanionAds;
+    }
+
     public void setVastIconConfig(@Nullable final VastIconConfig vastIconConfig) {
         mVastIconConfig = vastIconConfig;
     }
@@ -211,6 +234,10 @@ public void setVideoViewabilityTracker(@Nullable final VideoViewabilityTracker v
         }
     }
 
+    public void setIsRewardedVideo(final boolean isRewardedVideo) {
+        mIsRewardedVideo = isRewardedVideo;
+    }
+
     /**
      * Getters
      */
@@ -297,6 +324,11 @@ public VastCompanionAdConfig getVastCompanionAd(final int orientation) {
         }
     }
 
+    @NonNull
+    public Map<String, VastCompanionAdConfig> getSocialActionsCompanionAds() {
+        return mSocialActionsCompanionAds;
+    }
+
     @Nullable
     public VastIconConfig getVastIconConfig() {
         return mVastIconConfig;
@@ -356,6 +388,15 @@ public String getSkipOffsetString() {
         return mSkipOffset;
     }
 
+    /**
+     * Returns whether or not this is an unskippable rewarded video.
+     *
+     * @return True if this is a rewarded video, false otherwise.
+     */
+    public boolean isRewardedVideo() {
+        return mIsRewardedVideo;
+    }
+
     /**
      * Called when the video starts playing.
      *
@@ -426,6 +467,7 @@ private void handleClick(@NonNull final Context context, final int contentPlayHe
         }
 
         new UrlHandler.Builder()
+                .withDspCreativeId(mDspCreativeId)
                 .withSupportedUrlActions(
                         UrlAction.IGNORE_ABOUT_SCHEME,
                         UrlAction.OPEN_APP_MARKET,
@@ -441,6 +483,7 @@ public void urlHandlingSucceeded(@NonNull String url,
                         if (urlAction == UrlAction.OPEN_IN_APP_BROWSER) {
                             Bundle bundle = new Bundle();
                             bundle.putString(MoPubBrowser.DESTINATION_URL_KEY, url);
+                            bundle.putString(MoPubBrowser.DSP_CREATIVE_ID, mDspCreativeId);
 
                             final Class clazz = MoPubBrowser.class;
                             final Intent intent = Intents.getStartActivityIntent(
@@ -622,7 +665,7 @@ public int getRemainingProgressTrackerCount() {
 
     /**
      * Gets the skip offset in milliseconds. If the skip offset would be past the video duration,
-     * this returns null. If an error occurs, this returns null.
+     * this returns the video duration. Returns null when the skip offset is not set or cannot be parsed.
      *
      * @param videoDuration Used to calculate percentage based offsets.
      * @return The skip offset in milliseconds. Can return null.
@@ -631,20 +674,24 @@ public int getRemainingProgressTrackerCount() {
     public Integer getSkipOffsetMillis(final int videoDuration) {
         if (mSkipOffset != null) {
             try {
+                final Integer skipOffsetMilliseconds;
                 if (Strings.isAbsoluteTracker(mSkipOffset)) {
-                    Integer skipOffsetMilliseconds = Strings.parseAbsoluteOffset(mSkipOffset);
-                    if (skipOffsetMilliseconds != null && skipOffsetMilliseconds < videoDuration) {
-                        return skipOffsetMilliseconds;
-                    }
+                    skipOffsetMilliseconds = Strings.parseAbsoluteOffset(mSkipOffset);
                 } else if (Strings.isPercentageTracker(mSkipOffset)) {
                     float percentage = Float.parseFloat(mSkipOffset.replace("%", "")) / 100f;
-                    int skipOffsetMillisecondsRounded = Math.round(videoDuration * percentage);
-                    if (skipOffsetMillisecondsRounded < videoDuration) {
-                        return skipOffsetMillisecondsRounded;
-                    }
+                    skipOffsetMilliseconds = Math.round(videoDuration * percentage);
                 } else {
                     MoPubLog.d(
                             String.format("Invalid VAST skipoffset format: %s", mSkipOffset));
+                    return null;
+                }
+
+                if (skipOffsetMilliseconds != null) {
+                    if (skipOffsetMilliseconds < videoDuration) {
+                        return skipOffsetMilliseconds;
+                    } else {
+                        return videoDuration;
+                    }
                 }
             } catch (NumberFormatException e) {
                 MoPubLog.d(String.format("Failed to parse skipoffset %s", mSkipOffset));
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
similarity index 88%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
index 0ca1a1ff..7d3dc4c9 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoCtaButtonWidget.java
@@ -23,6 +23,7 @@
     private boolean mIsVideoComplete;
     private boolean mHasCompanionAd;
     private boolean mHasClickthroughUrl;
+    private boolean mHasSocialActions;
 
     public VastVideoCtaButtonWidget(@NonNull final Context context, final int videoViewId,
             final boolean hasCompanionAd, final boolean hasClickthroughUrl) {
@@ -30,6 +31,7 @@ public VastVideoCtaButtonWidget(@NonNull final Context context, final int videoV
 
         mHasCompanionAd = hasCompanionAd;
         mHasClickthroughUrl = hasClickthroughUrl;
+        mHasSocialActions = false;
 
         setId((int) Utils.generateUniqueId());
 
@@ -46,11 +48,11 @@ public VastVideoCtaButtonWidget(@NonNull final Context context, final int videoV
         mLandscapeLayoutParams.addRule(RelativeLayout.ALIGN_BOTTOM, videoViewId);
         mLandscapeLayoutParams.addRule(RelativeLayout.ALIGN_RIGHT, videoViewId);
 
-        // portrait layout: placed center below video view
+        // portrait layout: placed bottom-right corner of screen
         mPortraitLayoutParams = new RelativeLayout.LayoutParams(width, height);
         mPortraitLayoutParams.setMargins(margin, margin, margin, margin);
-        mPortraitLayoutParams.addRule(RelativeLayout.BELOW, videoViewId);
-        mPortraitLayoutParams.addRule(RelativeLayout.CENTER_HORIZONTAL);
+        mPortraitLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
+        mPortraitLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
 
         updateLayoutAndVisibility();
     }
@@ -66,6 +68,14 @@ void updateCtaText(@NonNull final String customCtaText) {
         mCtaButtonDrawable.setCtaText(customCtaText);
     }
 
+    void setHasSocialActions(final boolean hasSocialActions) {
+        mHasSocialActions = hasSocialActions;
+    }
+
+    boolean getHasSocialActions() {
+        return mHasSocialActions;
+    }
+
     void notifyVideoSkippable() {
         mIsVideoSkippable = true;
         updateLayoutAndVisibility();
@@ -91,7 +101,8 @@ private void updateLayoutAndVisibility() {
         }
 
         // If video has finished playing and there's a companion ad, do not show CTA button
-        if (mIsVideoComplete && mHasCompanionAd) {
+        // Unless the ad has social actions
+        if (mIsVideoComplete && mHasCompanionAd && !mHasSocialActions) {
             setVisibility(View.GONE);
             return;
         }
@@ -100,29 +111,25 @@ private void updateLayoutAndVisibility() {
 
         switch (currentOrientation) {
             case Configuration.ORIENTATION_LANDSCAPE:
-                setVisibility(View.VISIBLE);
                 setLayoutParams(mLandscapeLayoutParams);
                 break;
             case Configuration.ORIENTATION_PORTRAIT:
-                setVisibility(View.VISIBLE);
                 setLayoutParams(mPortraitLayoutParams);
                 break;
             case Configuration.ORIENTATION_UNDEFINED:
                 MoPubLog.d("Screen orientation undefined: CTA button widget defaulting to portrait layout");
-                setVisibility(View.VISIBLE);
                 setLayoutParams(mPortraitLayoutParams);
                 break;
             case Configuration.ORIENTATION_SQUARE:
                 MoPubLog.d("Screen orientation is deprecated ORIENTATION_SQUARE: CTA button widget defaulting to portrait layout");
-                setVisibility(View.VISIBLE);
                 setLayoutParams(mPortraitLayoutParams);
                 break;
             default:
                 MoPubLog.d("Unrecognized screen orientation: CTA button widget defaulting to portrait layout");
-                setVisibility(View.VISIBLE);
                 setLayoutParams(mPortraitLayoutParams);
                 break;
         }
+        setVisibility(View.VISIBLE);
     }
 
     // for testing
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoGradientStripWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoProgressBarWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoRadialCountdownWidget.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
similarity index 81%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
index 9a1f7f5b..2015a857 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewController.java
@@ -16,26 +16,28 @@
 import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
+import android.view.ViewTreeObserver;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
 import android.widget.VideoView;
 
-import com.mopub.common.MoPubBrowser;
+import com.mopub.common.IntentActions;
 import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.util.Dips;
 import com.mopub.common.util.Utils;
+import com.mopub.mobileads.resource.DrawableConstants;
 
 import java.io.Serializable;
+import java.util.Map;
 
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
 import static com.mopub.common.MoPubBrowser.MOPUB_BROWSER_REQUEST_CODE;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.mobileads.VastXmlManagerAggregator.ADS_BY_AD_SLOT_ID;
+import static com.mopub.mobileads.VastXmlManagerAggregator.SOCIAL_ACTIONS_AD_SLOT_ID;
 import static com.mopub.network.TrackingRequest.makeVastTrackingHttpRequest;
 
 public class VastVideoViewController extends BaseVideoViewController {
@@ -71,9 +73,12 @@
     @NonNull private VastVideoCloseButtonWidget mCloseButtonWidget;
 
     @Nullable private VastCompanionAdConfig mVastCompanionAdConfig;
+    @Nullable private final VastIconConfig mVastIconConfig;
     @NonNull private final View mLandscapeCompanionAdView;
     @NonNull private final View mPortraitCompanionAdView;
-    @Nullable private final VastIconConfig mVastIconConfig;
+    @NonNull private final Map<String, VastCompanionAdConfig> mSocialActionsCompanionAds;
+    @NonNull private View mAdsByView;
+    @NonNull private final View mSocialActionsView;
     @NonNull private final View mIconView;
 
     @NonNull private final VastVideoViewProgressRunnable mProgressCheckerRunnable;
@@ -87,6 +92,7 @@
     private boolean mVideoError;
     private boolean mHasSkipOffset = false;
     private boolean mIsCalibrationDone = false;
+    private boolean mHasSocialActions = false;
     private int mDuration;
 
     /**
@@ -126,6 +132,7 @@
 
         mVastCompanionAdConfig = mVastVideoConfig.getVastCompanionAd(
                 activity.getResources().getConfiguration().orientation);
+        mSocialActionsCompanionAds = mVastVideoConfig.getSocialActionsCompanionAds();
         mVastIconConfig = mVastVideoConfig.getVastIconConfig();
 
         mClickThroughListener = new View.OnTouchListener() {
@@ -133,7 +140,7 @@
             public boolean onTouch(View view, MotionEvent motionEvent) {
                 if (motionEvent.getAction() == MotionEvent.ACTION_UP && shouldAllowClickThrough()) {
                     mIsClosing = true;
-                    broadcastAction(ACTION_INTERSTITIAL_CLICK);
+                    broadcastAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
                     mVastVideoConfig.handleClickForResult(activity,
                             mIsVideoFinishedPlaying ? mDuration : getCurrentPosition(),
                             MOPUB_BROWSER_REQUEST_CODE);
@@ -148,6 +155,9 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         // Solid black background
         getLayout().setBackgroundColor(Color.BLACK);
 
+        // Blurred last frame
+        addBlurredLastVideoFrameImageView(activity, View.INVISIBLE);
+
         // Video view
         mVideoView = createVideoView(activity, View.VISIBLE);
         mVideoView.requestFocus();
@@ -174,13 +184,28 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
 
         // Icon view
         mIconView = createIconView(activity, mVastIconConfig, View.INVISIBLE);
-
-        // Blurred last frame
-        addBlurredLastVideoFrameImageView(activity, View.INVISIBLE);
+        mIconView.getViewTreeObserver().addOnGlobalLayoutListener(
+                new ViewTreeObserver.OnGlobalLayoutListener() {
+                    @Override
+                    public void onGlobalLayout() {
+                        // Wait until mIconView has been laid out to get accurate height
+                        mAdsByView = createAdsByView(activity);
+                        mIconView.getViewTreeObserver().removeGlobalOnLayoutListener(this);
+                    }
+                }
+        );
 
         // CTA button
         addCtaButtonWidget(activity);
 
+        // Social Actions
+        final int ctaHeight = Dips.dipsToIntPixels(DrawableConstants.CtaButton.HEIGHT_DIPS,
+                activity);
+        mSocialActionsView = createSocialActionsView(activity,
+                mSocialActionsCompanionAds.get(SOCIAL_ACTIONS_AD_SLOT_ID),
+                ctaHeight, RelativeLayout.ALIGN_TOP, mCtaButtonWidget, View.INVISIBLE,
+                DrawableConstants.SocialActions.SOCIAL_ACTIONS_LEFT_MARGIN_DIPS);
+
         // Close button snapped to top-right corner of screen
         // Always add last to layout since it must be visible above all other views
         addCloseButtonWidget(activity, View.GONE);
@@ -191,6 +216,28 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         mCountdownRunnable = new VastVideoViewCountdownRunnable(this, mainHandler);
     }
 
+    @VisibleForTesting
+    View createAdsByView(Activity activity) {
+        return createSocialActionsView(activity,
+                mSocialActionsCompanionAds.get(ADS_BY_AD_SLOT_ID),
+                mIconView.getHeight(),
+                RelativeLayout.RIGHT_OF, mIconView, View.VISIBLE,
+                DrawableConstants.SocialActions.ADS_BY_LEFT_MARGIN_DIPS
+        );
+    }
+
+    @Deprecated // Just use for testing
+    @VisibleForTesting
+    boolean getHasSocialActions() {
+        return mHasSocialActions;
+    }
+
+    @Deprecated // Just use for testing
+    @VisibleForTesting
+    View getSocialActionsView() {
+        return mSocialActionsView;
+    }
+
     @Override
     protected VideoView getVideoView() {
         return mVideoView;
@@ -216,7 +263,7 @@ protected void onCreate() {
         }
 
         mVastVideoConfig.handleImpression(getContext(), getCurrentPosition());
-        broadcastAction(ACTION_INTERSTITIAL_SHOW);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_SHOW);
     }
 
     @Override
@@ -247,7 +294,7 @@ protected void onPause() {
     @Override
     protected void onDestroy() {
         stopRunnables();
-        broadcastAction(ACTION_INTERSTITIAL_DISMISS);
+        broadcastAction(IntentActions.ACTION_INTERSTITIAL_DISMISS);
 
         mVideoView.onDestroy();
     }
@@ -296,6 +343,12 @@ void onActivityResult(final int requestCode, final int resultCode, final Intent
     private void adjustSkipOffset() {
         int videoDuration = getDuration();
 
+        // If this is a rewarded video, never allow it to be skippable.
+        if (mVastVideoConfig.isRewardedVideo()) {
+            mShowCloseButtonDelay = videoDuration;
+            return;
+        }
+
         // Default behavior: video is non-skippable if duration < 16 seconds
         if (videoDuration < MAX_VIDEO_DURATION_FOR_CLOSE_BUTTON) {
             mShowCloseButtonDelay = videoDuration;
@@ -325,7 +378,7 @@ public void onPrepared(MediaPlayer mp) {
                 // Therefore set it here so that we have access to it at all times
                 mDuration = mVideoView.getDuration();
                 adjustSkipOffset();
-                if (mVastCompanionAdConfig == null) {
+                if (mVastCompanionAdConfig == null || mHasSocialActions) {
                     videoView.prepareBlurredLastVideoFrame(mBlurredLastVideoFrameImageView,
                             mVastVideoConfig.getDiskMediaFileUrl());
                 }
@@ -344,6 +397,9 @@ public void onCompletion(MediaPlayer mp) {
 
                 videoCompleted(false);
                 mIsVideoFinishedPlaying = true;
+                if (mVastVideoConfig.isRewardedVideo()) {
+                    broadcastAction(IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
+                }
 
                 // Only fire the completion tracker if we hit all the progress marks. Some Android implementations
                 // fire the completion event even if the whole video isn't watched.
@@ -354,7 +410,18 @@ public void onCompletion(MediaPlayer mp) {
                 videoView.setVisibility(View.INVISIBLE);
 
                 mProgressBarWidget.setVisibility(View.GONE);
-                mIconView.setVisibility(View.GONE);
+
+                if (mHasSocialActions) {
+                    // Social Actions need the blurred last frame to fill the screen regardless
+                    // of the companion ad.
+                    if (mBlurredLastVideoFrameImageView.getDrawable() != null) {
+                        mBlurredLastVideoFrameImageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
+                        mBlurredLastVideoFrameImageView.setVisibility(View.VISIBLE);
+                    }
+                    // Also, avoid removing DAA icon for social actions
+                } else {
+                    mIconView.setVisibility(View.GONE);
+                }
 
                 mTopGradientStripWidget.notifyVideoComplete();
                 mBottomGradientStripWidget.notifyVideoComplete();
@@ -539,35 +606,7 @@ View createCompanionAdView(@NonNull final Context context,
                         RelativeLayout.LayoutParams.MATCH_PARENT);
         getLayout().addView(relativeLayout, layoutParams);
 
-        VastWebView companionView = VastWebView.createView(context,
-                vastCompanionAdConfig.getVastResource());
-
-        // For javascript, HTML, and IFrames, ignore the traditional clickthrough url and open all
-        // new urls in the MoPub Browser. For static images, use the clickthrough url specified in
-        // the VAST document. These two handleClicks make it so that the correct behavior happens
-        // in these special cases. onVastWebViewClick is called in both circumstances to fire the
-        // click trackers.
-        companionView.setVastWebViewClickListener(new VastWebView.VastWebViewClickListener() {
-            @Override
-            public void onVastWebViewClick() {
-                broadcastAction(ACTION_INTERSTITIAL_CLICK);
-                makeVastTrackingHttpRequest(
-                        vastCompanionAdConfig.getClickTrackers(),
-                        null,
-                        mDuration,
-                        null,
-                        context
-                );
-                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, null);
-            }
-        });
-        companionView.setWebViewClient(new WebViewClient() {
-            @Override
-            public boolean shouldOverrideUrlLoading(WebView view, String url) {
-                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, url);
-                return true;
-            }
-        });
+        VastWebView companionView = createCompanionVastWebView(context, vastCompanionAdConfig);
 
         companionView.setVisibility(initialVisibility);
 
@@ -581,6 +620,62 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
         return companionView;
     }
 
+    /**
+     * Creates and lays out the webviews used to display the social actions.
+     *
+     * @param context The context.
+     * @param vastCompanionAdConfig The data used to populate the view.
+     * @param anchorHeight The height in pixels of the view to use as anchor for the view.
+     * @param layoutVerb The way to layout the view relative to the anchorView.
+     * @param anchorView The view to use as anchor when laying out the view.
+     * @param initialVisibility The visibility the view should have.
+     * @return the populated webview
+     */
+    @NonNull
+    @VisibleForTesting
+    View createSocialActionsView(@NonNull final Context context,
+            @Nullable final VastCompanionAdConfig vastCompanionAdConfig, final int anchorHeight,
+            final int layoutVerb, @NonNull final View anchorView, final int initialVisibility,
+            final int leftMarginDips) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(anchorView);
+
+        if (vastCompanionAdConfig == null) {
+            final View emptyView = new View(context);
+            emptyView.setVisibility(View.INVISIBLE);
+            return emptyView;
+        }
+
+        mHasSocialActions = true;
+        mCtaButtonWidget.setHasSocialActions(mHasSocialActions);
+
+        VastWebView companionView = createCompanionVastWebView(context, vastCompanionAdConfig);
+
+        final int width = Dips.dipsToIntPixels(vastCompanionAdConfig.getWidth(), context);
+        final int height = Dips.dipsToIntPixels(vastCompanionAdConfig.getHeight(), context);
+        final int offset = (anchorHeight - height) / 2;
+        final int leftMargin = Dips.dipsToIntPixels(leftMarginDips, context);
+
+        final RelativeLayout.LayoutParams companionAdLayout =
+                new RelativeLayout.LayoutParams(width, height);
+        companionAdLayout.addRule(layoutVerb, anchorView.getId());
+        companionAdLayout.addRule(RelativeLayout.ALIGN_TOP, anchorView.getId());
+        companionAdLayout.setMargins(leftMargin, offset, 0, 0);
+
+        RelativeLayout relativeLayout = new RelativeLayout(context);
+        relativeLayout.setGravity(Gravity.CENTER_VERTICAL);
+        RelativeLayout.LayoutParams layoutParams =
+                new RelativeLayout.LayoutParams(
+                        RelativeLayout.LayoutParams.WRAP_CONTENT,
+                        RelativeLayout.LayoutParams.WRAP_CONTENT);
+        relativeLayout.addView(companionView, layoutParams);
+
+        getLayout().addView(relativeLayout, companionAdLayout);
+
+        companionView.setVisibility(initialVisibility);
+        return companionView;
+    }
+
     /**
      * Creates and lays out the webview used to display the icon.
      *
@@ -608,25 +703,27 @@ public void onVastWebViewClick() {
                         getNetworkMediaFileUrl(),
                         context
                 );
-                vastIconConfig.handleClick(getContext(), null);
+                vastIconConfig.handleClick(getContext(), null, mVastVideoConfig.getDspCreativeId());
             }
         });
         iconView.setWebViewClient(new WebViewClient() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
-                vastIconConfig.handleClick(getContext(), url);
+                vastIconConfig.handleClick(getContext(), url, mVastVideoConfig.getDspCreativeId());
                 return true;
             }
         });
         iconView.setVisibility(initialVisibility);
 
-        // Add extra room for the WebView to account for the natural padding in Android WebViews.
         RelativeLayout.LayoutParams layoutParams =
                 new RelativeLayout.LayoutParams(
-                        Dips.asIntPixels(vastIconConfig.getWidth() + WEBVIEW_PADDING, context),
-                        Dips.asIntPixels(vastIconConfig.getHeight() + WEBVIEW_PADDING, context));
-        layoutParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
-        layoutParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
+                        Dips.asIntPixels(vastIconConfig.getWidth(), context),
+                        Dips.asIntPixels(vastIconConfig.getHeight(), context));
+        final int leftMargin = Dips.dipsToIntPixels(
+                DrawableConstants.PrivacyInfoIcon.LEFT_MARGIN_DIPS, context);
+        final int topMargin = Dips.dipsToIntPixels(
+                DrawableConstants.PrivacyInfoIcon.TOP_MARGIN_DIPS, context);
+        layoutParams.setMargins(leftMargin, topMargin, 0, 0);
 
         getLayout().addView(iconView, layoutParams);
 
@@ -648,6 +745,7 @@ void makeVideoInteractable() {
         mCloseButtonWidget.setVisibility(View.VISIBLE);
 
         mCtaButtonWidget.notifyVideoSkippable();
+        mSocialActionsView.setVisibility(View.VISIBLE);
     }
 
     boolean shouldBeInteractable() {
@@ -709,6 +807,45 @@ private void stopRunnables() {
         mCountdownRunnable.stop();
     }
 
+    @NonNull
+    private VastWebView createCompanionVastWebView(@NonNull final Context context,
+            @NonNull final VastCompanionAdConfig vastCompanionAdConfig) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(vastCompanionAdConfig);
+
+        VastWebView companionView = VastWebView.createView(context,
+                vastCompanionAdConfig.getVastResource());
+
+        // For javascript, HTML, and IFrames, ignore the traditional clickthrough url and open all
+        // new urls in the MoPub Browser. For static images, use the clickthrough url specified in
+        // the VAST document. These two handleClicks make it so that the correct behavior happens
+        // in these special cases. onVastWebViewClick is called in both circumstances to fire the
+        // click trackers.
+        companionView.setVastWebViewClickListener(new VastWebView.VastWebViewClickListener() {
+            @Override
+            public void onVastWebViewClick() {
+                broadcastAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
+                makeVastTrackingHttpRequest(
+                        vastCompanionAdConfig.getClickTrackers(),
+                        null,
+                        mDuration,
+                        null,
+                        context
+                );
+                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, null, mVastVideoConfig.getDspCreativeId());
+            }
+        });
+        companionView.setWebViewClient(new WebViewClient() {
+            @Override
+            public boolean shouldOverrideUrlLoading(WebView view, String url) {
+                vastCompanionAdConfig.handleClick(context, MOPUB_BROWSER_REQUEST_CODE, url, mVastVideoConfig.getDspCreativeId());
+                return true;
+            }
+        });
+
+        return companionView;
+    }
+
     // for testing
     @Deprecated
     @VisibleForTesting
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewCountdownRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastVideoViewProgressRunnable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWebView.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWebView.java
index 5889cd0b..673dc07f 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWebView.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWebView.java
@@ -12,6 +12,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.util.Utils;
 import com.mopub.common.util.VersionCode;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.util.VersionCode.currentApiLevel;
 
@@ -41,7 +42,7 @@
     }
 
     void loadData(String data) {
-        loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 data, "text/html", "utf-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastWrapperXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
index e13d7c60..8982783b 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManager.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManager.java
@@ -24,7 +24,7 @@
 
 /**
  * Parses the VAST XML to spec. See www.iab.net for details.
- * Currently using the VAST 3.0 spec found here: http://www.iab.net/media/file/VASTv3.0.pdf.
+ * Currently using the VAST 3.0 spec found here: https://www.iab.net/media/file/VASTv3.0.pdf.
  */
 class VastXmlManager {
     private static final String ROOT_TAG = "MPMoVideoXMLDocRoot";
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
similarity index 85%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
index cddac2d9..5f024d94 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VastXmlManagerAggregator.java
@@ -27,8 +27,10 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
 
 import static com.mopub.network.TrackingRequest.makeVastTrackingHttpRequest;
 
@@ -42,6 +44,9 @@
 
     private static final String MOPUB = "MoPub";
 
+    public static final String ADS_BY_AD_SLOT_ID = "adsBy";
+    public static final String SOCIAL_ACTIONS_AD_SLOT_ID = "socialActions";
+
     /**
      * Listener for when the xml parsing is done.
      */
@@ -230,13 +235,15 @@ VastVideoConfig evaluateVastXmlManager(@NonNull final String vastXml,
                 }
                 populateVideoViewabilityTracker(vastWrapperXmlManager, vastVideoConfig);
 
+                final List<VastCompanionAdXmlManager> companionAdXmlManagers =
+                        vastWrapperXmlManager.getCompanionAdXmlManagers();
                 // Only populate a companion ad if we don't already have one from one of the
                 // redirects
                 if (!vastVideoConfig.hasCompanionAd()) {
                     vastVideoConfig.setVastCompanionAd(
-                            getBestCompanionAd(vastWrapperXmlManager.getCompanionAdXmlManagers(),
+                            getBestCompanionAd(companionAdXmlManagers,
                                     CompanionOrientation.LANDSCAPE),
-                            getBestCompanionAd(vastWrapperXmlManager.getCompanionAdXmlManagers(),
+                            getBestCompanionAd(companionAdXmlManagers,
                                     CompanionOrientation.PORTRAIT));
                 } else {
                     // Otherwise append the companion trackers if it doesn't have resources
@@ -245,7 +252,7 @@ VastVideoConfig evaluateVastXmlManager(@NonNull final String vastXml,
                     final VastCompanionAdConfig portraitCompanionAd = vastVideoConfig.getVastCompanionAd(
                             Configuration.ORIENTATION_PORTRAIT);
                     if (landscapeCompanionAd != null && portraitCompanionAd != null) {
-                        for (final VastCompanionAdXmlManager companionAdXmlManager : vastWrapperXmlManager.getCompanionAdXmlManagers()) {
+                        for (final VastCompanionAdXmlManager companionAdXmlManager : companionAdXmlManagers) {
                             if (!companionAdXmlManager.hasResources()) {
                                 landscapeCompanionAd.addClickTrackers(
                                         companionAdXmlManager.getClickTrackers());
@@ -260,6 +267,11 @@ VastVideoConfig evaluateVastXmlManager(@NonNull final String vastXml,
                     }
                 }
 
+                if (vastVideoConfig.getSocialActionsCompanionAds().isEmpty()) {
+                    vastVideoConfig.setSocialActionsCompanionAds(
+                            getSocialActionsCompanionAds(companionAdXmlManagers));
+                }
+
                 populateMoPubCustomElements(xmlManager, vastVideoConfig);
 
                 return vastVideoConfig;
@@ -304,11 +316,15 @@ private VastVideoConfig evaluateInLineXmlManager(
                 vastVideoConfig.setClickThroughUrl(linearXmlManager.getClickThroughUrl());
                 vastVideoConfig.setNetworkMediaFileUrl(bestMediaFileUrl);
 
+                final List<VastCompanionAdXmlManager> companionAdXmlManagers =
+                        vastInLineXmlManager.getCompanionAdXmlManagers();
                 vastVideoConfig.setVastCompanionAd(
-                        getBestCompanionAd(vastInLineXmlManager.getCompanionAdXmlManagers(),
+                        getBestCompanionAd(companionAdXmlManagers,
                                 CompanionOrientation.LANDSCAPE),
-                        getBestCompanionAd(vastInLineXmlManager.getCompanionAdXmlManagers(),
+                        getBestCompanionAd(companionAdXmlManagers,
                                 CompanionOrientation.PORTRAIT));
+                vastVideoConfig.setSocialActionsCompanionAds(
+                        getSocialActionsCompanionAds(companionAdXmlManagers));
                 errorTrackers.addAll(vastInLineXmlManager.getErrorTrackers());
                 vastVideoConfig.addErrorTrackers(errorTrackers);
                 populateVideoViewabilityTracker(vastInLineXmlManager, vastVideoConfig);
@@ -532,7 +548,7 @@ VastCompanionAdConfig getBestCompanionAd(
                     continue;
                 }
 
-                Point vastScaledDimensions = getScaledDimensions(width, height);
+                Point vastScaledDimensions = getScaledDimensions(width, height, type, orientation);
                 VastResource vastResource = VastResource.fromVastResourceXmlManager(
                         companionXmlManager.getResourceXmlManager(), type,
                         vastScaledDimensions.x, vastScaledDimensions.y);
@@ -571,47 +587,119 @@ VastCompanionAdConfig getBestCompanionAd(
         return null;
     }
 
+    @VisibleForTesting
+    @NonNull
+    Map<String, VastCompanionAdConfig> getSocialActionsCompanionAds(
+            @NonNull final List<VastCompanionAdXmlManager> managers) {
+        Preconditions.checkNotNull(managers, "managers cannot be null");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                new HashMap<String, VastCompanionAdConfig>();
+
+        for (VastCompanionAdXmlManager companionXmlManager : managers) {
+            final Integer width = companionXmlManager.getWidth();
+            final Integer height = companionXmlManager.getHeight();
+            if (width == null || height == null) {
+                continue;
+            }
+
+            final String adSlotId = companionXmlManager.getAdSlotId();
+            if (ADS_BY_AD_SLOT_ID.equals(adSlotId)) {
+                // adsBy companion ads must be 25-75dips wide and 10-50dips tall
+                if (width < 25 || width > 75 || height < 10 || height > 50) {
+                    continue;
+                }
+            } else if (SOCIAL_ACTIONS_AD_SLOT_ID.equals(adSlotId)) {
+                // socialActions companion ads must be 50-150dips wide and 10-50dips tall
+                if (width < 50 || width > 150 || height < 10 || height > 50) {
+                    continue;
+                }
+            } else {
+                // Social Actions companion ads must have adsBy or socialActions as adSlotId
+                continue;
+            }
+
+            VastResource vastResource = VastResource.fromVastResourceXmlManager(
+                    companionXmlManager.getResourceXmlManager(), VastResource.Type.HTML_RESOURCE,
+                    width, height);
+            if (vastResource == null) {
+                continue;
+            }
+
+            socialActionsCompanionAds.put(adSlotId,
+                    new VastCompanionAdConfig(
+                        width,
+                        height,
+                        vastResource,
+                        companionXmlManager.getClickThroughUrl(),
+                        companionXmlManager.getClickTrackers(),
+                        companionXmlManager.getCompanionCreativeViewTrackers()));
+        }
+
+        return socialActionsCompanionAds;
+    }
+
     /**
      * Given a width and height for a resource, if the dimensions are larger than the screen size
-     * then scale them down to fit in the screen while maintaining the aspect ratio. Scaling
-     * takes into account the default Android WebView padding.
+     * then scale them down to fit in the screen. This maintains the aspect ratio if the resource is
+     * not an HTMLResource. Since HTML can freely fill any space, the maximum size of an
+     * HTMLResource is the screen size. Scaling takes into account the default Android WebView
+     * padding.
      *
-     * @param widthDp width of the resource in dips
-     * @param heightDp height of the resource in dips
+     * @param widthDp     width of the resource in dips
+     * @param heightDp    height of the resource in dips
+     * @param type        The type of the resource. HTMLResource uses special scaling.
+     * @param orientation Expected orientation of the resource
      * @return the new scaled dimensions that honor the aspect ratio
      */
     @VisibleForTesting
     @NonNull
-    Point getScaledDimensions(int widthDp, int heightDp) {
-        Point defaultPoint = new Point(widthDp, heightDp);
-        final Display display = ((WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+    Point getScaledDimensions(int widthDp, int heightDp, final VastResource.Type type,
+            final CompanionOrientation orientation) {
+        final Point defaultPoint = new Point(widthDp, heightDp);
+        final Display display = ((WindowManager) mContext.getSystemService(
+                Context.WINDOW_SERVICE)).getDefaultDisplay();
         int x = display.getWidth();
         int y = display.getHeight();
 
-        // For landscape, width is always greater than height
-        int screenWidth = Math.max(x, y);
-        int screenHeight = Math.min(x, y);
-
         int widthPx = Dips.dipsToIntPixels(widthDp, mContext);
         int heightPx = Dips.dipsToIntPixels(heightDp, mContext);
 
+        final int screenWidthPx, screenHeightPx;
+        if (CompanionOrientation.LANDSCAPE == orientation) {
+            screenWidthPx = Math.max(x, y);
+            screenHeightPx = Math.min(x, y);
+        } else {
+            screenWidthPx = Math.min(x, y);
+            screenHeightPx = Math.max(x, y);
+        }
+
         // Return if the width and height already fit in the screen
-        if (widthPx <= screenWidth && heightPx <= screenHeight) {
+        if (widthPx <= (screenWidthPx - VastVideoViewController.WEBVIEW_PADDING) &&
+                heightPx <= (screenHeightPx - VastVideoViewController.WEBVIEW_PADDING)) {
             return defaultPoint;
         }
 
-        float widthRatio = (float) widthPx / screenWidth;
-        float heightRatio = (float) heightPx / screenHeight;
-
-        Point point = new Point();
-        if (widthRatio >= heightRatio) {
-            point.x = screenWidth - VastVideoViewController.WEBVIEW_PADDING;
-            point.y = (int) (heightPx / widthRatio) - VastVideoViewController.WEBVIEW_PADDING;
+        final Point point = new Point();
+        if (VastResource.Type.HTML_RESOURCE == type) {
+            point.x = Math.min(screenWidthPx, widthPx);
+            point.y = Math.min(screenHeightPx, heightPx);
         } else {
-            point.x = (int) (widthPx / heightRatio) - VastVideoViewController.WEBVIEW_PADDING;
-            point.y = screenHeight - VastVideoViewController.WEBVIEW_PADDING;
+            float widthRatio = (float) widthPx / screenWidthPx;
+            float heightRatio = (float) heightPx / screenHeightPx;
+
+            if (widthRatio >= heightRatio) {
+                point.x = screenWidthPx;
+                point.y = (int) (heightPx / widthRatio);
+            } else {
+                point.x = (int) (widthPx / heightRatio);
+                point.y = screenHeightPx;
+            }
         }
 
+        point.x -= VastVideoViewController.WEBVIEW_PADDING;
+        point.y -= VastVideoViewController.WEBVIEW_PADDING;
+
         if (point.x < 0 || point.y < 0) {
             return defaultPoint;
         }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoDownloader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoDownloader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoDownloader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoDownloader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTracker.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/ViewGestureDetector.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/ViewGestureDetector.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/WebViewAdUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/AdViewControllerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MoPubViewFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/MraidControllerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/factories/VastManagerFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/BaseWidgetDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CloseButtonDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/CtaButtonDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
similarity index 86%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
index fb810f93..b3dd1bff 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/DrawableConstants.java
@@ -44,12 +44,12 @@
     }
 
     public static class CtaButton {
-        public static final int WIDTH_DIPS = 200;
-        public static final int HEIGHT_DIPS = 42;
+        public static final int WIDTH_DIPS = 150;
+        public static final int HEIGHT_DIPS = 38;
         public static final int MARGIN_DIPS = 16;
         public static final int CORNER_RADIUS_DIPS = 6;
         public static final int OUTLINE_STROKE_WIDTH_DIPS = 2;
-        public static final float TEXT_SIZE_SP = 20f;
+        public static final float TEXT_SIZE_SP = 15f;
 
         public static final int BACKGROUND_COLOR = Color.BLACK;
         public static final int BACKGROUND_ALPHA = 51;
@@ -60,7 +60,7 @@
         public static final Paint.Style OUTLINE_STYLE = Paint.Style.STROKE;
 
         public static final String DEFAULT_CTA_TEXT = "Learn More";
-        public static final Typeface TEXT_TYPEFACE = Typeface.create("Helvetica", Typeface.BOLD);
+        public static final Typeface TEXT_TYPEFACE = Typeface.create("Helvetica", Typeface.NORMAL);
         public static final int TEXT_COLOR = Color.WHITE;
         public static final Paint.Align TEXT_ALIGN = Paint.Align.CENTER;
     }
@@ -88,6 +88,16 @@
     }
 
     public static class BlurredLastVideoFrame {
-        public static final int ALPHA = 128;
+        public static final int ALPHA = 100;
+    }
+
+    public static class PrivacyInfoIcon {
+        public static final int LEFT_MARGIN_DIPS = 12;
+        public static final int TOP_MARGIN_DIPS = 12;
+    }
+
+    public static class SocialActions {
+        public static final int ADS_BY_LEFT_MARGIN_DIPS = 6;
+        public static final int SOCIAL_ACTIONS_LEFT_MARGIN_DIPS = 16;
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/MraidJavascript.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/ProgressBarDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/resource/RadialCountdownDrawable.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/util/WebViews.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/WebViews.java
similarity index 69%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/util/WebViews.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/WebViews.java
index 57eb0f0c..12170703 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/util/WebViews.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/WebViews.java
@@ -14,7 +14,7 @@
 
 public class WebViews {
     @TargetApi(VERSION_CODES.HONEYCOMB)
-    public static void onResume(@NonNull WebView webView) {
+    public static void onResume(@NonNull final WebView webView) {
         if (VERSION.SDK_INT >= VERSION_CODES.HONEYCOMB) {
             webView.onResume();
             return;
@@ -29,7 +29,7 @@ public static void onResume(@NonNull WebView webView) {
     }
 
     @TargetApi(VERSION_CODES.HONEYCOMB)
-    public static void onPause(@NonNull WebView webView, boolean isFinishing) {
+    public static void onPause(@NonNull final WebView webView, boolean isFinishing) {
         // XXX
         // We need to call WebView#stopLoading and WebView#loadUrl here due to an Android
         // bug where the audio of an HTML5 video will continue to play after the activity has been
@@ -53,31 +53,36 @@ public static void onPause(@NonNull WebView webView, boolean isFinishing) {
         }
     }
 
-    public static void setDisableJSChromeClient(WebView webView) {
+    public static void setDisableJSChromeClient(@NonNull final WebView webView) {
         webView.setWebChromeClient(new WebChromeClient() {
             @Override
-            public boolean onJsAlert(WebView view, String url, String message, JsResult result) {
+            public boolean onJsAlert(@NonNull final WebView view, @NonNull final String url,
+                    @NonNull final String message, @NonNull final JsResult result) {
                 MoPubLog.d(message);
                 result.confirm();
                 return true;
             }
 
             @Override
-            public boolean onJsConfirm(WebView view, String url, String message, JsResult result) {
+            public boolean onJsConfirm(@NonNull final WebView view, @NonNull final String url,
+                    @NonNull final String message, @NonNull final JsResult result) {
                 MoPubLog.d(message);
                 result.confirm();
                 return true;
             }
 
             @Override
-            public boolean onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult result) {
+            public boolean onJsPrompt(@NonNull final WebView view, @NonNull final String url,
+                    @NonNull final String message, @NonNull final String defaultValue,
+                    @NonNull final JsPromptResult result) {
                 MoPubLog.d(message);
                 result.confirm();
                 return true;
             }
 
             @Override
-            public boolean onJsBeforeUnload(WebView view, String url, String message, JsResult result) {
+            public boolean onJsBeforeUnload(@NonNull final WebView view, @NonNull final String url,
+                    @NonNull final String message, @NonNull final JsResult result) {
                 MoPubLog.d(message);
                 result.confirm();
                 return true;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/util/XmlUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/XmlUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/util/XmlUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mobileads/util/XmlUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
index bd907c1a..897b22a0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidBridge.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidBridge.java
@@ -30,6 +30,7 @@
 import com.mopub.mobileads.resource.MraidJavascript;
 import com.mopub.mraid.MraidBridge.MraidWebView.OnVisibilityChangedListener;
 import com.mopub.mraid.MraidNativeCommandHandler.MraidCommandFailureListener;
+import com.mopub.network.Networking;
 
 import org.apache.http.NameValuePair;
 import org.apache.http.client.utils.URLEncodedUtils;
@@ -203,7 +204,7 @@ public void setContentHtml(@NonNull String htmlData) {
         }
 
         mHasLoaded = false;
-        mMraidWebView.loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        mMraidWebView.loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 htmlData, "text/html", "UTF-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidCommandException.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidCommandException.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidCommandException.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidCommandException.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
index c66ceb88..aaf3ce0c 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidController.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidController.java
@@ -55,11 +55,11 @@
     private final AdReport mAdReport;
 
     public interface MraidListener {
-        public void onLoaded(View view);
-        public void onFailedToLoad();
-        public void onExpand();
-        public void onOpen();
-        public void onClose();
+        void onLoaded(View view);
+        void onFailedToLoad();
+        void onExpand();
+        void onOpen();
+        void onClose();
     }
 
     public interface UseCustomCloseListener {
@@ -446,8 +446,8 @@ private View getCurrentWebView() {
     }
 
     private boolean isInlineVideoAvailable() {
-        //noinspection SimplifiableIfStatement
         final Activity activity = mWeakActivity.get();
+        //noinspection SimplifiableIfStatement
         if (activity == null || getCurrentWebView() == null) {
             return false;
         }
@@ -617,6 +617,7 @@ private void setViewState(@NonNull ViewState viewState) {
     private void setViewState(@NonNull ViewState viewState, @Nullable Runnable successRunnable) {
         // Make sure this is a valid transition.
         MoPubLog.d("MRAID state set to " + viewState);
+        final ViewState previousViewState = mViewState;
         mViewState = viewState;
         mMraidBridge.notifyViewState(viewState);
 
@@ -628,6 +629,8 @@ private void setViewState(@NonNull ViewState viewState, @Nullable Runnable succe
         if (mMraidListener != null) {
             if (viewState == ViewState.EXPANDED) {
                 mMraidListener.onExpand();
+            } else if (previousViewState == ViewState.EXPANDED && viewState == ViewState.DEFAULT) {
+                mMraidListener.onClose();
             } else if (viewState == ViewState.HIDDEN) {
                 mMraidListener.onClose();
             }
@@ -1036,14 +1039,19 @@ void handleOpen(@NonNull final String url) {
             mMraidListener.onOpen();
         }
 
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(
-                        UrlAction.IGNORE_ABOUT_SCHEME,
-                        UrlAction.OPEN_NATIVE_BROWSER,
-                        UrlAction.OPEN_IN_APP_BROWSER,
-                        UrlAction.HANDLE_SHARE_TWEET,
-                        UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                        UrlAction.FOLLOW_DEEP_LINK)
+        UrlHandler.Builder builder = new UrlHandler.Builder();
+
+        if (mAdReport != null) {
+            builder.withDspCreativeId(mAdReport.getDspCreativeId());
+        }
+
+        builder.withSupportedUrlActions(
+                UrlAction.IGNORE_ABOUT_SCHEME,
+                UrlAction.OPEN_NATIVE_BROWSER,
+                UrlAction.OPEN_IN_APP_BROWSER,
+                UrlAction.HANDLE_SHARE_TWEET,
+                UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
+                UrlAction.FOLLOW_DEEP_LINK)
                 .build().handleUrl(mContext, url);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidJavascriptCommand.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
index 63db6598..b90b60ab 100644
--- a/mopub-sdk/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidNativeCommandHandler.java
@@ -16,6 +16,7 @@
 import android.provider.CalendarContract;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.view.View;
 import android.view.Window;
@@ -27,6 +28,7 @@
 import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.AsyncTasks;
+import com.mopub.common.util.DeviceUtils;
 import com.mopub.common.util.Intents;
 import com.mopub.common.util.Streams;
 import com.mopub.common.util.Utils;
@@ -139,7 +141,7 @@ boolean isSmsAvailable(Context context) {
 
     public static boolean isStorePictureSupported(Context context) {
         return MEDIA_MOUNTED.equals(Environment.getExternalStorageState())
-                && context.checkCallingOrSelfPermission(WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
+                && DeviceUtils.isPermissionGranted(context, WRITE_EXTERNAL_STORAGE);
     }
 
     static boolean isCalendarAvailable(Context context) {
@@ -168,11 +170,11 @@ boolean isInlineVideoAvailable(@NonNull Activity activity, @NonNull View view) {
         // Hardware Acceleration
         // Hardware acceleration for the application and activity is enabled by default
         // in API >= 14 (Ice Cream Sandwich)
-        // http://developer.android.com/reference/android/R.attr.html#hardwareAccelerated
-        // http://developer.android.com/guide/topics/graphics/hardware-accel.html
+        // https://developer.android.com/reference/android/R.attr.html#hardwareAccelerated
+        // https://developer.android.com/guide/topics/graphics/hardware-accel.html
 
         // HTML5 Inline Video
-        // http://developer.android.com/about/versions/android-3.1.html
+        // https://developer.android.com/about/versions/android-3.1.html
 
         // Traverse up the View tree to determine if any views are being software rendered
         // You can only disable hardware acceleration at the view level by setting the layer type
@@ -197,7 +199,7 @@ boolean isInlineVideoAvailable(@NonNull Activity activity, @NonNull View view) {
         // Hardware acceleration can only be enabled for a window, not disabled
         // This flag is automatically set by the system if the android:hardwareAccelerated
         // XML attribute is set to true on an activity or on the application.
-        // http://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_HARDWARE_ACCELERATED
+        // https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_HARDWARE_ACCELERATED
         Window window = activity.getWindow();
         if (window != null) {
             if (Utils.bitMaskContainsFlag(window.getAttributes().flags,
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidOrientation.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidOrientation.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidOrientation.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidOrientation.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidScreenMetrics.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidScreenMetrics.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidVideoViewController.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidVideoViewController.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidVideoViewController.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/MraidWebViewDebugListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/PlacementType.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/PlacementType.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/PlacementType.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/PlacementType.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/ViewState.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/ViewState.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/ViewState.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/mraid/ViewState.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
index 5497d6b2..2118eaa2 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/AdRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdRequest.java
@@ -11,6 +11,7 @@
 import com.mopub.common.AdFormat;
 import com.mopub.common.AdType;
 import com.mopub.common.DataKeys;
+import com.mopub.common.FullAdType;
 import com.mopub.common.LocationService;
 import com.mopub.common.MoPub;
 import com.mopub.common.Preconditions;
@@ -50,7 +51,7 @@
     @NonNull private final Context mContext;
 
     public interface Listener extends Response.ErrorListener {
-        public void onSuccess(AdResponse response);
+        void onSuccess(AdResponse response);
     }
 
     public AdRequest(@NonNull final String url,
@@ -145,6 +146,9 @@ public Listener getListener() {
             );
         }
 
+        String dspCreativeId = extractHeader(headers, ResponseHeader.DSP_CREATIVE_ID);
+        builder.setDspCreativeId(dspCreativeId);
+
         String networkType = extractHeader(headers, ResponseHeader.NETWORK_TYPE);
         builder.setNetworkType(networkType);
 
@@ -251,6 +255,7 @@ public Listener getListener() {
                             .adNetworkType(networkType)
                             .adWidthPx(width)
                             .adHeightPx(height)
+                            .dspCreativeId(dspCreativeId)
                             .geoLatitude(location == null ? null : location.getLatitude())
                             .geoLongitude(location == null ? null : location.getLongitude())
                             .geoAccuracy(location == null ? null : location.getAccuracy())
@@ -263,6 +268,18 @@ public Listener getListener() {
         }
         builder.setServerExtras(serverExtras);
 
+        if (AdType.REWARDED_VIDEO.equals(adTypeString) || AdType.CUSTOM.equals(adTypeString)) {
+            final String rewardedVideoCurrencyName = extractHeader(headers,
+                    ResponseHeader.REWARDED_VIDEO_CURRENCY_NAME);
+            final String rewardedVideoCurrencyAmount = extractHeader(headers,
+                    ResponseHeader.REWARDED_VIDEO_CURRENCY_AMOUNT);
+            final String rewardedVideoCompletionUrl = extractHeader(headers,
+                    ResponseHeader.REWARDED_VIDEO_COMPLETION_URL);
+            builder.setRewardedVideoCurrencyName(rewardedVideoCurrencyName);
+            builder.setRewardedVideoCurrencyAmount(rewardedVideoCurrencyAmount);
+            builder.setRewardedVideoCompletionUrl(rewardedVideoCompletionUrl);
+        }
+
         AdResponse adResponse = builder.build();
         logScribeEvent(adResponse, networkResponse, location);
 
@@ -272,8 +289,9 @@ public Listener getListener() {
 
     private boolean eventDataIsInResponseBody(@Nullable String adType,
             @Nullable String fullAdType) {
-        return "mraid".equals(adType) || "html".equals(adType) ||
-                ("interstitial".equals(adType) && "vast".equals(fullAdType));
+        return AdType.MRAID.equals(adType) || AdType.HTML.equals(adType) ||
+                (AdType.INTERSTITIAL.equals(adType) && FullAdType.VAST.equals(fullAdType)) ||
+                (AdType.REWARDED_VIDEO.equals(adType) && FullAdType.VAST.equals(fullAdType));
     }
 
     // Based on Volley's StringResponse class.
@@ -320,7 +338,7 @@ void logScribeEvent(@NonNull AdResponse adResponse, @NonNull NetworkResponse net
                 new Event.Builder(BaseEvent.Name.AD_REQUEST, BaseEvent.Category.REQUESTS,
                         BaseEvent.SamplingRate.AD_REQUEST.getSamplingRate())
                         .withAdUnitId(mAdUnitId)
-                        .withAdCreativeId(adResponse.getDspCreativeId())
+                        .withDspCreativeId(adResponse.getDspCreativeId())
                         .withAdType(adResponse.getAdType())
                         .withAdNetworkType(adResponse.getNetworkType())
                         .withAdWidthPx(adResponse.getWidth() != null
diff --git a/mopub-sdk/src/main/java/com/mopub/network/AdResponse.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
similarity index 85%
rename from mopub-sdk/src/main/java/com/mopub/network/AdResponse.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
index 6a955e86..29b29c71 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/AdResponse.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/AdResponse.java
@@ -26,6 +26,13 @@
     @Nullable
     private final String mNetworkType;
 
+    @Nullable
+    private final String mRewardedVideoCurrencyName;
+    @Nullable
+    private final String mRewardedVideoCurrencyAmount;
+    @Nullable
+    private final String mRewardedVideoCompletionUrl;
+
     @Nullable
     private final String mRedirectUrl;
     @Nullable
@@ -71,6 +78,11 @@ private AdResponse(@NonNull Builder builder) {
         mAdUnitId = builder.adUnitId;
         mFullAdType = builder.fullAdType;
         mNetworkType = builder.networkType;
+
+        mRewardedVideoCurrencyName = builder.rewardedVideoCurrencyName;
+        mRewardedVideoCurrencyAmount = builder.rewardedVideoCurrencyAmount;
+        mRewardedVideoCompletionUrl = builder.rewardedVideoCompletionUrl;
+
         mRedirectUrl = builder.redirectUrl;
         mClickTrackingUrl = builder.clickTrackingUrl;
         mImpressionTrackingUrl = builder.impressionTrackingUrl;
@@ -129,6 +141,21 @@ public String getNetworkType() {
         return mNetworkType;
     }
 
+    @Nullable
+    public String getRewardedVideoCurrencyName() {
+        return mRewardedVideoCurrencyName;
+    }
+
+    @Nullable
+    public String getRewardedVideoCurrencyAmount() {
+        return mRewardedVideoCurrencyAmount;
+    }
+
+    @Nullable
+    public String getRewardedVideoCompletionUrl() {
+        return mRewardedVideoCompletionUrl;
+    }
+
     @Nullable
     public String getRedirectUrl() {
         return mRedirectUrl;
@@ -224,6 +251,10 @@ public Builder toBuilder() {
         private String fullAdType;
         private String networkType;
 
+        private String rewardedVideoCurrencyName;
+        private String rewardedVideoCurrencyAmount;
+        private String rewardedVideoCompletionUrl;
+
         private String redirectUrl;
         private String clickTrackingUrl;
         private String impressionTrackingUrl;
@@ -266,6 +297,24 @@ public Builder setNetworkType(@Nullable final String networkType) {
             return this;
         }
 
+        public Builder setRewardedVideoCurrencyName(
+                @Nullable final String rewardedVideoCurrencyName) {
+            this.rewardedVideoCurrencyName = rewardedVideoCurrencyName;
+            return this;
+        }
+
+        public Builder setRewardedVideoCurrencyAmount(
+                @Nullable final String rewardedVideoCurrencyAmount) {
+            this.rewardedVideoCurrencyAmount = rewardedVideoCurrencyAmount;
+            return this;
+        }
+
+        public Builder setRewardedVideoCompletionUrl(
+                @Nullable final String rewardedVideoCompletionUrl) {
+            this.rewardedVideoCompletionUrl = rewardedVideoCompletionUrl;
+            return this;
+        }
+
         public Builder setRedirectUrl(@Nullable final String redirectUrl) {
             this.redirectUrl = redirectUrl;
             return this;
diff --git a/mopub-sdk/src/main/java/com/mopub/network/BackoffPolicy.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/BackoffPolicy.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/BackoffPolicy.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/BackoffPolicy.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/CustomSSLSocketFactory.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/CustomSSLSocketFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/HeaderUtils.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/HeaderUtils.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/HeaderUtils.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MaxWidthImageLoader.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MaxWidthImageLoader.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MaxWidthImageLoader.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MoPubNetworkError.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubNetworkError.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MoPubNetworkError.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubNetworkError.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/MoPubRequestQueue.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubRequestQueue.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/MoPubRequestQueue.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/MoPubRequestQueue.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/Networking.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/Networking.java
similarity index 88%
rename from mopub-sdk/src/main/java/com/mopub/network/Networking.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/Networking.java
index e820a0a5..e55db850 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/Networking.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/Networking.java
@@ -32,12 +32,12 @@
     private static final String DEFAULT_USER_AGENT = System.getProperty("http.agent");
 
     // These are volatile so that double-checked locking works.
-    // See http://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java
+    // See https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java
     // for more information.
     private volatile static MoPubRequestQueue sRequestQueue;
     private volatile static String sUserAgent;
     private volatile static MaxWidthImageLoader sMaxWidthImageLoader;
-    public static boolean sUseHttps = false;
+    private static boolean sUseHttps = false;
 
     @Nullable
     public static MoPubRequestQueue getRequestQueue() {
@@ -129,7 +129,11 @@ public static String getUserAgent(@NonNull Context context) {
                 if (userAgent == null) {
                     // As of Android 4.4, WebViews may only be instantiated on the UI thread
                     if (Looper.myLooper() == Looper.getMainLooper()) {
-                        userAgent = new WebView(context).getSettings().getUserAgentString();
+                        try {
+                            userAgent = new WebView(context).getSettings().getUserAgentString();
+                        } catch (Exception e) {
+                            userAgent = DEFAULT_USER_AGENT;
+                        }
                     } else {
                         // In the exceptional case where we can't access the WebView user agent,
                         // fall back to the System-specific user agent.
@@ -190,4 +194,23 @@ public static void useHttps(boolean useHttps) {
     public static boolean useHttps() {
         return sUseHttps;
     }
+
+    /**
+     * Retrieve the scheme that should be used based on {@link #useHttps()}.
+     *
+     * @return "https" if {@link #useHttps()} is true; "http" otherwise.
+     */
+    public static String getScheme() {
+        return useHttps() ? Constants.HTTPS : Constants.HTTP;
+    }
+
+    /**
+     * DSPs are currently not ready for full https creatives. When we flip the switch to go full
+     * https, this should just return {@link #getScheme()}.
+     *
+     * @return "http"
+     */
+    public static String getBaseUrlScheme() {
+        return Constants.HTTP;
+    }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/PlayServicesUrlRewriter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/RequestManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/RequestManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/RequestQueueHttpStack.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestQueueHttpStack.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/RequestQueueHttpStack.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/RequestQueueHttpStack.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeBackoffPolicy.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeBackoffPolicy.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequest.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequest.java
index f04bcdf0..50cfc29a 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequest.java
@@ -23,11 +23,11 @@
 public class ScribeRequest extends Request<Void> {
 
     public interface Listener extends Response.ErrorListener {
-        public void onResponse();
+        void onResponse();
     }
 
     public interface ScribeRequestFactory extends RequestManager.RequestFactory {
-        public ScribeRequest createRequest(ScribeRequest.Listener listener);
+        ScribeRequest createRequest(ScribeRequest.Listener listener);
     }
 
     @NonNull private final List<BaseEvent> mEvents;
diff --git a/mopub-sdk/src/main/java/com/mopub/network/ScribeRequestManager.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequestManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/network/ScribeRequestManager.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/ScribeRequestManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
rename to mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
index 78bb26f7..7d310976 100644
--- a/mopub-sdk/src/main/java/com/mopub/network/TrackingRequest.java
+++ b/mopub-sdk/mopub-sdk-base/src/main/java/com/mopub/network/TrackingRequest.java
@@ -25,8 +25,11 @@
 
 public class TrackingRequest extends Request<Void> {
 
+    // Retrying may cause duplicate impressions
+    private static final int ZERO_RETRIES = 0;
+
     public interface Listener extends Response.ErrorListener {
-        public void onResponse(@NonNull String url);
+        void onResponse(@NonNull String url);
     }
 
     @Nullable private final TrackingRequest.Listener mListener;
@@ -37,7 +40,7 @@ private TrackingRequest(@NonNull final String url, @Nullable final Listener list
         setShouldCache(false);
         setRetryPolicy(new DefaultRetryPolicy(
                 DefaultRetryPolicy.DEFAULT_TIMEOUT_MS,
-                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
+                ZERO_RETRIES,
                 DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
     }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/build.gradle b/mopub-sdk/mopub-sdk-interstitial/build.gradle
new file mode 100644
index 00000000..fe56e07f
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+}
+
+project.description = 'MoPub Android SDK - Interstitial'
+project.ext.displayName = 'MoPub Android SDK - Interstitial'
+project.ext.projectName = 'mopub-sdk-interstitial'
+project.ext.uploadName = 'mopub-android-sdk-interstitial'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..643b97ff
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.interstitial">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
index 1b1ddf21..122787a0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/BaseInterstitialActivity.java
@@ -67,8 +67,6 @@ public void onClose() {
         mCloseableLayout.addView(adView,
                 new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));
         setContentView(mCloseableLayout);
-
-
     }
 
     @Override
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
index 740ec3c4..47feb16c 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/CustomEventInterstitialAdapter.java
@@ -75,9 +75,7 @@ void loadInterstitial() {
             return;
         }
 
-        if (getTimeoutDelayMilliseconds() > 0) {
-            mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
-        }
+        mHandler.postDelayed(mTimeout, getTimeoutDelayMilliseconds());
 
         // Custom event classes can be developed by any third party and may not be tested.
         // We catch all exceptions here to prevent crashes from untested code.
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/DefaultInterstitialAdListener.java
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
new file mode 100644
index 00000000..bfe38ea0
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
@@ -0,0 +1,61 @@
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.support.annotation.NonNull;
+
+import com.mopub.common.IntentActions;
+
+import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
+import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
+
+public class EventForwardingBroadcastReceiver extends BaseBroadcastReceiver {
+    private final CustomEventInterstitialListener mCustomEventInterstitialListener;
+
+
+    private static IntentFilter sIntentFilter;
+
+
+    public EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier) {
+        super(broadcastIdentifier);
+        mCustomEventInterstitialListener = customEventInterstitialListener;
+        getIntentFilter();
+    }
+
+    @NonNull
+    public IntentFilter getIntentFilter() {
+        if (sIntentFilter == null) {
+            sIntentFilter = new IntentFilter();
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_FAIL);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_SHOW);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_DISMISS);
+            sIntentFilter.addAction(IntentActions.ACTION_INTERSTITIAL_CLICK);
+        }
+        return sIntentFilter;
+    }
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        if (mCustomEventInterstitialListener == null) {
+            return;
+        }
+
+        if (!shouldConsumeBroadcast(intent)) {
+            return;
+        }
+
+        final String action = intent.getAction();
+        if (IntentActions.ACTION_INTERSTITIAL_FAIL.equals(action)) {
+            mCustomEventInterstitialListener.onInterstitialFailed(NETWORK_INVALID_STATE);
+        } else if (IntentActions.ACTION_INTERSTITIAL_SHOW.equals(action)) {
+            mCustomEventInterstitialListener.onInterstitialShown();
+        } else if (IntentActions.ACTION_INTERSTITIAL_DISMISS.equals(action)) {
+            mCustomEventInterstitialListener.onInterstitialDismissed();
+            unregister(this);
+        } else if (IntentActions.ACTION_INTERSTITIAL_CLICK.equals(action)) {
+            mCustomEventInterstitialListener.onInterstitialClicked();
+        }
+
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitial.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
index 78795c1b..fb3762c0 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/HtmlInterstitialWebView.java
@@ -16,11 +16,11 @@ public HtmlInterstitialWebView(Context context, AdReport adReport) {
         mHandler = new Handler();
     }
 
-    public void init(final CustomEventInterstitialListener customEventInterstitialListener, boolean isScrollable, String redirectUrl, String clickthroughUrl) {
+    public void init(final CustomEventInterstitialListener customEventInterstitialListener, boolean isScrollable, String redirectUrl, String clickthroughUrl, String dspCreativeId) {
         super.init(isScrollable);
 
         HtmlInterstitialWebViewListener htmlInterstitialWebViewListener = new HtmlInterstitialWebViewListener(customEventInterstitialListener);
-        HtmlWebViewClient htmlWebViewClient = new HtmlWebViewClient(htmlInterstitialWebViewListener, this, clickthroughUrl, redirectUrl);
+        HtmlWebViewClient htmlWebViewClient = new HtmlWebViewClient(htmlInterstitialWebViewListener, this, clickthroughUrl, redirectUrl, dspCreativeId);
         setWebViewClient(htmlWebViewClient);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
similarity index 90%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
index e37622e0..0c5bfb63 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubActivity.java
@@ -27,10 +27,10 @@
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_APPEAR;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_CLOSE;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
 import static com.mopub.mobileads.HtmlWebViewClient.MOPUB_FAIL_LOAD;
 import static com.mopub.mobileads.HtmlWebViewClient.MOPUB_FINISH_LOAD;
@@ -67,15 +67,19 @@ static Intent createIntent(Context context,
 
     static void preRenderHtml(final Context context, final AdReport adReport,
             final CustomEventInterstitialListener customEventInterstitialListener,
-            String htmlData) {
-        HtmlInterstitialWebView dummyWebView = HtmlInterstitialWebViewFactory.create(context, adReport, customEventInterstitialListener, false, null, null);
+            final String htmlData) {
+        final HtmlInterstitialWebView dummyWebView = HtmlInterstitialWebViewFactory.create(context,
+                adReport, customEventInterstitialListener, false, null, null);
+
         dummyWebView.enablePlugins(false);
+        dummyWebView.enableJavascriptCaching();
+
         dummyWebView.setWebViewClient(new WebViewClient() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
-                if (url.equals(MOPUB_FINISH_LOAD)) {
+                if (MOPUB_FINISH_LOAD.equals(url)) {
                     customEventInterstitialListener.onInterstitialLoaded();
-                } else if (url.equals(MOPUB_FAIL_LOAD)) {
+                } else if (MOPUB_FAIL_LOAD.equals(url)) {
                     customEventInterstitialListener.onInterstitialFailed(null);
                 }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
new file mode 100644
index 00000000..92bcde01
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
@@ -0,0 +1,473 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.content.Context;
+import android.location.Location;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+
+import com.mopub.common.AdFormat;
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.mobileads.factories.CustomEventInterstitialAdapterFactory;
+
+import java.util.Map;
+
+import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_NOT_FOUND;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.IDLE;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.LOADING;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.READY;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.SHOWING;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.DESTROYED;
+
+public class MoPubInterstitial implements CustomEventInterstitialAdapter.CustomEventInterstitialAdapterListener {
+    @VisibleForTesting
+    enum InterstitialState {
+        /**
+         * Waiting to something to happen. There is no interstitial currently loaded.
+         */
+        IDLE,
+
+        /**
+         * Loading an interstitial.
+         */
+        LOADING,
+
+        /**
+         * Loaded and ready to be shown.
+         */
+        READY,
+
+        /**
+         * The interstitial is showing.
+         */
+        SHOWING,
+
+        /**
+         * No longer able to accept events as the internal InterstitialView has been destroyed.
+         */
+        DESTROYED
+    }
+
+    @NonNull private MoPubInterstitialView mInterstitialView;
+    @Nullable private CustomEventInterstitialAdapter mCustomEventInterstitialAdapter;
+    @Nullable private InterstitialAdListener mInterstitialAdListener;
+    @NonNull private Activity mActivity;
+    @NonNull private InterstitialState mCurrentInterstitialState;
+
+    public interface InterstitialAdListener {
+        void onInterstitialLoaded(MoPubInterstitial interstitial);
+        void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode);
+        void onInterstitialShown(MoPubInterstitial interstitial);
+        void onInterstitialClicked(MoPubInterstitial interstitial);
+        void onInterstitialDismissed(MoPubInterstitial interstitial);
+    }
+
+    public MoPubInterstitial(@NonNull final Activity activity, @NonNull final String adUnitId) {
+        mActivity = activity;
+
+        mInterstitialView = new MoPubInterstitialView(mActivity);
+        mInterstitialView.setAdUnitId(adUnitId);
+
+        mCurrentInterstitialState = IDLE;
+    }
+
+    private boolean attemptStateTransition(@NonNull final InterstitialState endState) {
+        return attemptStateTransition(endState, false);
+    }
+
+    /**
+     * Attempts to transition to the new state. All state transitions should go through this method.
+     * Other methods should not be modifying mCurrentInterstitialState.
+     *
+     * @param endState     The desired end state.
+     * @param forceRefresh Whether or not this is part of a forceRefresh transition. Force
+     *                     refresh can happen from IDLE, LOADING, or READY. It will ignore
+     *                     the currently loading or loaded ad and attempt to load another.
+     * @return {@code true} if a state change happened, {@code false} if no state change happened.
+     */
+    @VisibleForTesting
+    boolean attemptStateTransition(@NonNull final InterstitialState endState,
+            boolean forceRefresh) {
+        Preconditions.checkNotNull(endState);
+
+        final InterstitialState startState = mCurrentInterstitialState;
+
+        /**
+         * There are 50 potential cases. Any combination that is a no op will not be enumerated
+         * and returns false. The usual case goes IDLE -> LOADING -> READY -> SHOWING -> IDLE. At
+         * most points, having the force refresh flag into IDLE resets MoPubInterstitial and clears
+         * the interstitial adapter. This cannot happen while an interstitial is showing. Also,
+         * MoPubInterstitial can be destroyed arbitrarily, and once this is destroyed, it no longer
+         * can perform any state transitions.
+         */
+        switch (startState) {
+            case IDLE:
+                switch(endState) {
+                    case LOADING:
+                        // Going from IDLE to LOADING is the usual load case
+                        invalidateInterstitialAdapter();
+                        mCurrentInterstitialState = LOADING;
+                        if (forceRefresh) {
+                            // Force-load means a pub-initiated force refresh.
+                            mInterstitialView.forceRefresh();
+                        } else {
+                            // Otherwise, do a normal load
+                            mInterstitialView.loadAd();
+                        }
+                        return true;
+                    case SHOWING:
+                        MoPubLog.d("No interstitial loading or loaded.");
+                        return false;
+                    case DESTROYED:
+                        setInterstitialStateDestroyed();
+                        return true;
+                    default:
+                        return false;
+                }
+            case LOADING:
+                switch (endState) {
+                    case IDLE:
+                        // Being forced back into idle while loading resets MoPubInterstitial while
+                        // not forced just means the load failed. Either way, it should reset the
+                        // state back into IDLE.
+                        invalidateInterstitialAdapter();
+                        mCurrentInterstitialState = IDLE;
+                        return true;
+                    case LOADING:
+                        if (!forceRefresh) {
+                            // Cannot load more than one interstitial at a time
+                            MoPubLog.d("Already loading an interstitial.");
+                        }
+                        return false;
+                    case READY:
+                        // This is the usual load finished transition
+                        mCurrentInterstitialState = READY;
+                        return true;
+                    case SHOWING:
+                        MoPubLog.d("Interstitial is not ready to be shown yet.");
+                        return false;
+                    case DESTROYED:
+                        setInterstitialStateDestroyed();
+                        return true;
+                    default:
+                        return false;
+                }
+            case READY:
+                switch (endState) {
+                    case IDLE:
+                        if (forceRefresh) {
+                            // This happens on a force refresh
+                            invalidateInterstitialAdapter();
+                            mCurrentInterstitialState = IDLE;
+                            return true;
+                        }
+                        return false;
+                    case LOADING:
+                        // This is to prevent loading another interstitial while one is loaded.
+                        MoPubLog.d("Interstitial already loaded. Not loading another.");
+                        // Let the ad listener know that there's already an ad loaded
+                        if (mInterstitialAdListener != null) {
+                            mInterstitialAdListener.onInterstitialLoaded(this);
+                        }
+                        return false;
+                    case SHOWING:
+                        // This is the usual transition from ready to showing
+                        showCustomEventInterstitial();
+                        mCurrentInterstitialState = SHOWING;
+                        return true;
+                    case DESTROYED:
+                        setInterstitialStateDestroyed();
+                        return true;
+                    default:
+                        return false;
+                }
+            case SHOWING:
+                switch(endState) {
+                    case IDLE:
+                        if (forceRefresh) {
+                            MoPubLog.d("Cannot force refresh while showing an interstitial.");
+                            return false;
+                        }
+                        // This is the usual transition when done showing this interstitial
+                        invalidateInterstitialAdapter();
+                        mCurrentInterstitialState = IDLE;
+                        return true;
+                    case LOADING:
+                        if (!forceRefresh) {
+                            MoPubLog.d("Interstitial already showing. Not loading another.");
+                        }
+                        return false;
+                    case SHOWING:
+                        MoPubLog.d("Already showing an interstitial. Cannot show it again.");
+                        return false;
+                    case DESTROYED:
+                        setInterstitialStateDestroyed();
+                        return true;
+                    default:
+                        return false;
+                }
+            case DESTROYED:
+                // Once destroyed, MoPubInterstitial is no longer functional.
+                MoPubLog.d("MoPubInterstitial destroyed. Ignoring all requests.");
+                return false;
+            default:
+                return false;
+        }
+    }
+
+    /**
+     * Sets MoPubInterstitial to be destroyed. This should only be called by attemptStateTransition.
+     */
+    private void setInterstitialStateDestroyed() {
+        invalidateInterstitialAdapter();
+        mInterstitialView.setBannerAdListener(null);
+        mInterstitialView.destroy();
+        mCurrentInterstitialState = DESTROYED;
+    }
+
+    public void load() {
+        attemptStateTransition(LOADING);
+    }
+
+    public boolean show() {
+        return attemptStateTransition(SHOWING);
+    }
+
+    public void forceRefresh() {
+        attemptStateTransition(IDLE, true);
+        attemptStateTransition(LOADING, true);
+    }
+
+    public boolean isReady() {
+        return mCurrentInterstitialState == READY;
+    }
+
+    boolean isDestroyed() {
+        return mCurrentInterstitialState == DESTROYED;
+    }
+
+    Integer getAdTimeoutDelay() {
+        return mInterstitialView.getAdTimeoutDelay();
+    }
+
+    @NonNull
+    MoPubInterstitialView getMoPubInterstitialView() {
+        return mInterstitialView;
+    }
+
+    private void showCustomEventInterstitial() {
+        if (mCustomEventInterstitialAdapter != null) {
+            mCustomEventInterstitialAdapter.showInterstitial();
+        }
+    }
+
+    private void invalidateInterstitialAdapter() {
+        if (mCustomEventInterstitialAdapter != null) {
+            mCustomEventInterstitialAdapter.invalidate();
+            mCustomEventInterstitialAdapter = null;
+        }
+    }
+
+    ////////////////////////////////////////////////////////////////////////////////////////////////
+
+    public void setKeywords(@Nullable final String keywords) {
+        mInterstitialView.setKeywords(keywords);
+    }
+
+    @Nullable
+    public String getKeywords() {
+        return mInterstitialView.getKeywords();
+    }
+
+    @NonNull
+    public Activity getActivity() {
+        return mActivity;
+    }
+
+    @Nullable
+    public Location getLocation() {
+        return mInterstitialView.getLocation();
+    }
+
+    public void destroy() {
+        attemptStateTransition(DESTROYED);
+    }
+
+    public void setInterstitialAdListener(@Nullable final InterstitialAdListener listener) {
+        mInterstitialAdListener = listener;
+    }
+
+    @Nullable
+    public InterstitialAdListener getInterstitialAdListener() {
+        return mInterstitialAdListener;
+    }
+
+    public void setTesting(boolean testing) {
+        mInterstitialView.setTesting(testing);
+    }
+
+    public boolean getTesting() {
+        return mInterstitialView.getTesting();
+    }
+
+    public void setLocalExtras(Map<String, Object> extras) {
+        mInterstitialView.setLocalExtras(extras);
+    }
+
+    @NonNull
+    public Map<String, Object> getLocalExtras() {
+        return mInterstitialView.getLocalExtras();
+    }
+
+    /*
+     * Implements CustomEventInterstitialAdapter.CustomEventInterstitialListener
+     * Note: All callbacks should be no-ops if the interstitial has been destroyed
+     */
+
+    @Override
+    public void onCustomEventInterstitialLoaded() {
+        if (isDestroyed()) {
+            return;
+        }
+
+        attemptStateTransition(READY);
+
+        if (mInterstitialAdListener != null) {
+            mInterstitialAdListener.onInterstitialLoaded(this);
+        }
+    }
+
+    @Override
+    public void onCustomEventInterstitialFailed(@NonNull final MoPubErrorCode errorCode) {
+        if (isDestroyed()) {
+            return;
+        }
+
+        if (!mInterstitialView.loadFailUrl(errorCode)) {
+            attemptStateTransition(IDLE);
+        }
+    }
+
+    @Override
+    public void onCustomEventInterstitialShown() {
+        if (isDestroyed()) {
+            return;
+        }
+
+        mInterstitialView.trackImpression();
+
+        if (mInterstitialAdListener != null) {
+            mInterstitialAdListener.onInterstitialShown(this);
+        }
+    }
+
+    @Override
+    public void onCustomEventInterstitialClicked() {
+        if (isDestroyed()) {
+            return;
+        }
+
+        mInterstitialView.registerClick();
+
+        if (mInterstitialAdListener != null) {
+            mInterstitialAdListener.onInterstitialClicked(this);
+        }
+    }
+
+    @Override
+    public void onCustomEventInterstitialDismissed() {
+        if (isDestroyed()) {
+            return;
+        }
+
+        attemptStateTransition(IDLE);
+
+        if (mInterstitialAdListener != null) {
+            mInterstitialAdListener.onInterstitialDismissed(this);
+        }
+    }
+
+    ////////////////////////////////////////////////////////////////////////////////////////////////
+
+    public class MoPubInterstitialView extends MoPubView {
+        public MoPubInterstitialView(Context context) {
+            super(context);
+            setAutorefreshEnabled(false);
+        }
+
+        @Override
+        public AdFormat getAdFormat() {
+            return AdFormat.INTERSTITIAL;
+        }
+
+        @Override
+        protected void loadCustomEvent(String customEventClassName, Map<String, String> serverExtras) {
+            if (mAdViewController == null) {
+                return;
+            }
+
+            if (TextUtils.isEmpty(customEventClassName)) {
+                MoPubLog.d("Couldn't invoke custom event because the server did not specify one.");
+                loadFailUrl(ADAPTER_NOT_FOUND);
+                return;
+            }
+
+            if (mCustomEventInterstitialAdapter != null) {
+                mCustomEventInterstitialAdapter.invalidate();
+            }
+
+            MoPubLog.d("Loading custom event interstitial adapter.");
+
+            mCustomEventInterstitialAdapter = CustomEventInterstitialAdapterFactory.create(
+                    MoPubInterstitial.this,
+                    customEventClassName,
+                    serverExtras,
+                    mAdViewController.getBroadcastIdentifier(),
+                    mAdViewController.getAdReport());
+            mCustomEventInterstitialAdapter.setAdapterListener(MoPubInterstitial.this);
+            mCustomEventInterstitialAdapter.loadInterstitial();
+        }
+
+        protected void trackImpression() {
+            MoPubLog.d("Tracking impression for interstitial.");
+            if (mAdViewController != null) mAdViewController.trackImpression();
+        }
+
+        @Override
+        protected void adFailed(MoPubErrorCode errorCode) {
+            attemptStateTransition(IDLE);
+            if (mInterstitialAdListener != null) {
+                mInterstitialAdListener.onInterstitialFailed(MoPubInterstitial.this, errorCode);
+            }
+        }
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    void setInterstitialView(@NonNull MoPubInterstitialView interstitialView) {
+        mInterstitialView = interstitialView;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    void setCurrentInterstitialState(@NonNull final InterstitialState interstitialState) {
+        mCurrentInterstitialState = interstitialState;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    @NonNull
+    InterstitialState getCurrentInterstitialState() {
+        return mCurrentInterstitialState;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    void setCustomEventInterstitialAdapter(@NonNull final CustomEventInterstitialAdapter
+            customEventInterstitialAdapter) {
+        mCustomEventInterstitialAdapter = customEventInterstitialAdapter;
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
similarity index 90%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
index 2ae82e8d..7431b47d 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MraidActivity.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MraidActivity.java
@@ -24,16 +24,17 @@
 import com.mopub.mraid.MraidController.UseCustomCloseListener;
 import com.mopub.mraid.MraidWebViewDebugListener;
 import com.mopub.mraid.PlacementType;
+import com.mopub.network.Networking;
 
 import static com.mopub.common.DataKeys.AD_REPORT_KEY;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_APPEAR;
 import static com.mopub.mobileads.BaseInterstitialActivity.JavaScriptWebViewCallbacks.WEB_VIEW_DID_CLOSE;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiver.broadcastAction;
 
 public class MraidActivity extends BaseInterstitialActivity {
@@ -43,9 +44,16 @@
     public static void preRenderHtml(@NonNull final Context context,
             @NonNull final CustomEventInterstitialListener customEventInterstitialListener,
             @NonNull final String htmlData) {
-        BaseWebView dummyWebView = new BaseWebView(context);
+        preRenderHtml(customEventInterstitialListener, htmlData, new BaseWebView(context));
+    }
 
+    @VisibleForTesting
+    static void preRenderHtml(
+            @NonNull final CustomEventInterstitialListener customEventInterstitialListener,
+            @NonNull final String htmlData, @NonNull final BaseWebView dummyWebView) {
         dummyWebView.enablePlugins(false);
+        dummyWebView.enableJavascriptCaching();
+
         dummyWebView.setWebViewClient(new WebViewClient() {
             @Override
             public void onPageFinished(final WebView view, final String url) {
@@ -67,7 +75,7 @@ public void onReceivedError(final WebView view, final int errorCode,
             }
         });
 
-        dummyWebView.loadDataWithBaseURL("http://" + Constants.HOST + "/",
+        dummyWebView.loadDataWithBaseURL(Networking.getBaseUrlScheme() + "://" + Constants.HOST + "/",
                 htmlData, "text/html", "UTF-8", null);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
index a6b3c625..aa84f691 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/ResponseBodyInterstitial.java
@@ -56,7 +56,7 @@ public void loadInterstitial(
 
         mBroadcastReceiver = new EventForwardingBroadcastReceiver(customEventInterstitialListener,
                 mBroadcastIdentifier);
-        mBroadcastReceiver.register(context);
+        mBroadcastReceiver.register(mBroadcastReceiver, context);
 
         preRenderHtml(customEventInterstitialListener);
     }
@@ -64,7 +64,7 @@ public void loadInterstitial(
     @Override
     public void onInvalidate() {
         if (mBroadcastReceiver != null) {
-            mBroadcastReceiver.unregister();
+            mBroadcastReceiver.unregister(mBroadcastReceiver);
         }
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
index a3a14cd9..293336d2 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/VastVideoInterstitial.java
@@ -27,7 +27,8 @@ protected void preRenderHtml(CustomEventInterstitialListener customEventIntersti
         }
 
         mVastManager = VastManagerFactory.create(mContext);
-        mVastManager.prepareVastVideoConfiguration(mVastResponse, this, mContext);
+        mVastManager.prepareVastVideoConfiguration(mVastResponse, this,
+                mAdReport.getDspCreativeId(), mContext);
     }
 
     @Override
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialAdapterFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/CustomEventInterstitialFactory.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
index 65d97a39..e26f34a8 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/factories/HtmlInterstitialWebViewFactory.java
@@ -28,7 +28,7 @@ public HtmlInterstitialWebView internalCreate(
             String redirectUrl,
             String clickthroughUrl) {
         HtmlInterstitialWebView htmlInterstitialWebView = new HtmlInterstitialWebView(context, adReport);
-        htmlInterstitialWebView.init(customEventInterstitialListener, isScrollable, redirectUrl, clickthroughUrl);
+        htmlInterstitialWebView.init(customEventInterstitialListener, isScrollable, redirectUrl, clickthroughUrl, adReport.getDspCreativeId());
         return htmlInterstitialWebView;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/mraid/MraidInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mraid/MraidInterstitial.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mraid/MraidInterstitial.java
rename to mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mraid/MraidInterstitial.java
diff --git a/mopub-sdk/mopub-sdk-native-static/build.gradle b/mopub-sdk/mopub-sdk-native-static/build.gradle
new file mode 100644
index 00000000..26111f70
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-static/build.gradle
@@ -0,0 +1,12 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-base')
+    compile 'com.android.support:recyclerview-v7:23.1.1'
+}
+
+project.description = 'MoPub Android SDK - Native Static'
+project.ext.displayName = 'MoPub Android SDK - Native Static'
+project.ext.projectName = 'mopub-sdk-native-static'
+project.ext.uploadName = 'mopub-android-sdk-native-static'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..ee9149e4
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.native_static">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/AdRendererRegistry.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdRendererRegistry.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/AdapterHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdapterHelper.java
similarity index 88%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/AdapterHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdapterHelper.java
index bc114f96..21206b09 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/AdapterHelper.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/AdapterHelper.java
@@ -1,6 +1,5 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -19,7 +18,10 @@
  */
 @Deprecated
 public final class AdapterHelper {
-    @NonNull private final WeakReference<Activity> mActivity;
+    /**
+     * Preferably an Activity Context.
+     */
+    @NonNull private final WeakReference<Context> mContext;
     @NonNull private final Context mApplicationContext;
     private final int mStart;
     private final int mInterval;
@@ -27,11 +29,10 @@
     @Deprecated
     public AdapterHelper(@NonNull final Context context, final int start, final int interval) {
         Preconditions.checkNotNull(context, "Context cannot be null.");
-        Preconditions.checkArgument(context instanceof Activity, "Context must be an Activity.");
         Preconditions.checkArgument(start >= 0, "start position must be non-negative");
         Preconditions.checkArgument(interval >= 2, "interval must be at least 2");
 
-        mActivity = new WeakReference<Activity>((Activity) context);
+        mContext = new WeakReference<Context>(context);
         mApplicationContext = context.getApplicationContext();
         mStart = start;
         mInterval = interval;
@@ -43,9 +44,9 @@ public View getAdView(@Nullable final View convertView,
             @Nullable final ViewGroup parent,
             @Nullable final NativeAd nativeAd,
             @Nullable final ViewBinder viewBinder) {
-        final Activity activity = mActivity.get();
-        if (activity == null) {
-            MoPubLog.w("Weak reference to Activity Context in"
+        final Context context = mContext.get();
+        if (context == null) {
+            MoPubLog.w("Weak reference to Context in"
                     + " AdapterHelper became null. Returning empty view.");
             return new View(mApplicationContext);
         }
@@ -53,7 +54,7 @@ public View getAdView(@Nullable final View convertView,
         return NativeAdViewHelper.getAdView(
                 convertView,
                 parent,
-                activity,
+                context,
                 nativeAd,
                 viewBinder
         );
@@ -113,7 +114,7 @@ private int numberOfAdsThatCouldFitWithContent(final int contentRowCount) {
     // Testing
     @Deprecated
     @VisibleForTesting
-    void clearActivityContext() {
-        mActivity.clear();
+    void clearContext() {
+        mContext.clear();
     }
 }
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/BaseNativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/BaseNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/BaseNativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/BaseNativeAd.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ClickInterface.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClickInterface.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ClickInterface.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClickInterface.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ClientPositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ClientPositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNative.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNative.java
index dc61916d..0177a1d5 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNative.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 
 import java.util.Map;
@@ -20,18 +20,17 @@
      * native ad from a third-party ad network, or execute any application code. It must also notify
      * the provided {@link CustomEventNativeListener} Object of certain lifecycle events.
      *
-     * @param activity The activity.
+     * @param context The context.
      * @param customEventNativeListener An Object that must be notified of certain lifecycle
      * events.
      * @param localExtras A Map containing additional custom data that is set within your
-     * application by calling {@link MoPubNative#setLocalExtras(Map<String, Object>)}. Note that the
-     * localExtras Map is a copy of the Map supplied to {@link MoPubNative#setLocalExtras(Map<String,
-     * Object>)}.
+     * application by calling {@link MoPubNative#setLocalExtras(Map)}. Note that the
+     * localExtras Map is a copy of the Map supplied to {@link MoPubNative#setLocalExtras(Map)}.
      * @param serverExtras A Map containing additional custom data configurable on the MoPub website
      * that you want to associate with a given custom event request. This data may be used to pass
      * dynamic information, such as publisher IDs, without changes in application code.
      */
-    protected abstract void loadNativeAd(@NonNull final Activity activity,
+    protected abstract void loadNativeAd(@NonNull final Context context,
             @NonNull final CustomEventNativeListener customEventNativeListener,
             @NonNull final Map<String, Object> localExtras,
             @NonNull final Map<String, String> serverExtras);
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
index c84b77b7..8a198b8a 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/CustomEventNativeAdapter.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 
 import com.mopub.common.DataKeys;
@@ -14,7 +14,7 @@
 final class CustomEventNativeAdapter {
     private CustomEventNativeAdapter() {}
 
-    public static void loadNativeAd(@NonNull final Activity activity,
+    public static void loadNativeAd(@NonNull final Context context,
             @NonNull final Map<String, Object> localExtras,
             @NonNull final AdResponse adResponse,
             @NonNull final CustomEventNative.CustomEventNativeListener customEventNativeListener) {
@@ -45,7 +45,7 @@ public static void loadNativeAd(@NonNull final Activity activity,
         // We catch all exceptions here to prevent crashes from untested code.
         try {
             customEventNative.loadNativeAd(
-                    activity,
+                    context,
                     customEventNativeListener,
                     localExtras,
                     adResponse.getServerExtras()
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionInterface.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionInterface.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionInterface.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionInterface.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionTracker.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionTracker.java
similarity index 98%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionTracker.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionTracker.java
index d757285d..d7775eab 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/ImpressionTracker.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ImpressionTracker.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.NonNull;
@@ -46,11 +46,11 @@
     // Listener for when a view becomes visible or non visible
     @Nullable private VisibilityTrackerListener mVisibilityTrackerListener;
 
-    public ImpressionTracker(@NonNull final Activity activity) {
+    public ImpressionTracker(@NonNull final Context context) {
         this(new WeakHashMap<View, ImpressionInterface>(),
                 new WeakHashMap<View, TimestampWrapper<ImpressionInterface>>(),
                 new VisibilityChecker(),
-                new VisibilityTracker(activity),
+                new VisibilityTracker(context),
                 new Handler(Looper.getMainLooper()));
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/IntInterval.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/IntInterval.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/IntInterval.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/IntInterval.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
similarity index 68%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
index e79548bb..04d9c8f3 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubAdRenderer.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.View;
@@ -19,18 +19,21 @@
 public interface MoPubAdRenderer<T extends BaseNativeAd> {
     /**
      * Creates a new view to be used as an ad.
-     *
+     * <p/>
      * This method is called when you call {@link com.mopub.nativeads.MoPubStreamAdPlacer#getAdView}
      * and the convertView is null. You must return a valid view.
      *
-     * @param activity The activity. Useful for creating a view.
-     * @param parent The parent that the view will eventually be attached to. You might use the
-     * parent to determine layout parameters, but should return the view without attaching it to the
-     * parent.
+     * @param context The context. Useful for creating a view. This is recommended to be an
+     *                Activity. If you have custom themes defined in your Activity, not passing
+     *                in that Activity will result in the default Application theme being used
+     *                when creating the ad view.
+     * @param parent  The parent that the view will eventually be attached to. You might use the
+     *                parent to determine layout parameters, but should return the view without
+     *                attaching it to the parent.
      * @return A new ad view.
      */
     @NonNull
-    View createAdView(@NonNull Activity activity, @Nullable ViewGroup parent);
+    View createAdView(@NonNull Context context, @Nullable ViewGroup parent);
 
     /**
      * Renders a view created by {@link #createAdView} by filling it with ad data.
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
similarity index 97%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
index 47f19090..9d31f0d3 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubCustomEventNative.java
@@ -1,6 +1,5 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -11,7 +10,6 @@
 import com.mopub.nativeads.NativeImageHelper.ImageListener;
 
 import org.json.JSONArray;
-import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.util.ArrayList;
@@ -29,7 +27,7 @@
 public class MoPubCustomEventNative extends CustomEventNative {
 
     @Override
-    protected void loadNativeAd(@NonNull final Activity activity,
+    protected void loadNativeAd(@NonNull final Context context,
             @NonNull final CustomEventNativeListener customEventNativeListener,
             @NonNull final Map<String, Object> localExtras,
             @NonNull final Map<String, String> serverExtras) {
@@ -42,10 +40,10 @@ protected void loadNativeAd(@NonNull final Activity activity,
         }
 
         final MoPubStaticNativeAd moPubStaticNativeAd =
-                new MoPubStaticNativeAd(activity,
+                new MoPubStaticNativeAd(context,
                         (JSONObject) json,
-                        new ImpressionTracker(activity),
-                        new NativeClickHandler(activity),
+                        new ImpressionTracker(context),
+                        new NativeClickHandler(context),
                         customEventNativeListener);
 
         try {
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNative.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
similarity index 86%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNative.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
index bcc9ccc3..ebb9293c 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNative.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNative.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -54,8 +54,8 @@ public void onNativeFail(final NativeErrorCode errorCode) {
         }
     };
 
-    // must be an activity since 3rd party networks need it
-    @NonNull private final WeakReference<Activity> mActivity;
+    // Highly recommended to be an Activity since 3rd party networks need it
+    @NonNull private final WeakReference<Context> mContext;
     @NonNull private final String mAdUnitId;
     @NonNull private MoPubNativeNetworkListener mMoPubNativeNetworkListener;
 
@@ -65,25 +65,25 @@ public void onNativeFail(final NativeErrorCode errorCode) {
     @Nullable private AdRequest mNativeRequest;
     @NonNull AdRendererRegistry mAdRendererRegistry;
 
-    public MoPubNative(@NonNull final Activity activity,
+    public MoPubNative(@NonNull final Context context,
             @NonNull final String adUnitId,
             @NonNull final MoPubNativeNetworkListener moPubNativeNetworkListener) {
-        this(activity, adUnitId, new AdRendererRegistry(), moPubNativeNetworkListener);
+        this(context, adUnitId, new AdRendererRegistry(), moPubNativeNetworkListener);
     }
 
     @VisibleForTesting
-    public MoPubNative(@NonNull final Activity activity,
+    public MoPubNative(@NonNull final Context context,
             @NonNull final String adUnitId,
             @NonNull AdRendererRegistry adRendererRegistry,
             @NonNull final MoPubNativeNetworkListener moPubNativeNetworkListener) {
-        Preconditions.checkNotNull(activity, "Activity may not be null.");
+        Preconditions.checkNotNull(context, "context may not be null.");
         Preconditions.checkNotNull(adUnitId, "AdUnitId may not be null.");
         Preconditions.checkNotNull(adRendererRegistry, "AdRendererRegistry may not be null.");
         Preconditions.checkNotNull(moPubNativeNetworkListener, "MoPubNativeNetworkListener may not be null.");
 
-        ManifestUtils.checkNativeActivitiesDeclared(activity);
+        ManifestUtils.checkNativeActivitiesDeclared(context);
 
-        mActivity = new WeakReference<Activity>(activity);
+        mContext = new WeakReference<Context>(context);
         mAdUnitId = adUnitId;
         mMoPubNativeNetworkListener = moPubNativeNetworkListener;
         mAdRendererRegistry = adRendererRegistry;
@@ -100,7 +100,7 @@ public void onErrorResponse(@NonNull final VolleyError volleyError) {
         };
 
         // warm up cache for google play services info
-        fetchAdvertisingInfoAsync(activity, null);
+        fetchAdvertisingInfoAsync(context, null);
     }
 
     /**
@@ -113,7 +113,7 @@ public void registerAdRenderer(MoPubAdRenderer moPubAdRenderer) {
     }
 
     public void destroy() {
-        mActivity.clear();
+        mContext.clear();
         if (mNativeRequest != null) {
             mNativeRequest.cancel();
             mNativeRequest = null;
@@ -139,12 +139,12 @@ public void makeRequest(@Nullable final RequestParameters requestParameters) {
 
     public void makeRequest(@Nullable final RequestParameters requestParameters,
             @Nullable Integer sequenceNumber) {
-        final Activity activity = getActivityOrDestroy();
-        if (activity == null) {
+        final Context context = getContextOrDestroy();
+        if (context == null) {
             return;
         }
 
-        if (!DeviceUtils.isNetworkAvailable(activity)) {
+        if (!DeviceUtils.isNetworkAvailable(context)) {
             mMoPubNativeNetworkListener.onNativeFail(CONNECTION_ERROR);
             return;
         }
@@ -155,12 +155,12 @@ public void makeRequest(@Nullable final RequestParameters requestParameters,
     private void loadNativeAd(
             @Nullable final RequestParameters requestParameters,
             @Nullable final Integer sequenceNumber) {
-        final Activity activity = getActivityOrDestroy();
-        if (activity == null) {
+        final Context context = getContextOrDestroy();
+        if (context == null) {
             return;
         }
 
-        final NativeUrlGenerator generator = new NativeUrlGenerator(activity)
+        final NativeUrlGenerator generator = new NativeUrlGenerator(context)
                 .withAdUnitId(mAdUnitId)
                 .withRequest(requestParameters);
 
@@ -178,8 +178,8 @@ private void loadNativeAd(
     }
 
     void requestNativeAd(@Nullable final String endpointUrl) {
-        final Activity activity = getActivityOrDestroy();
-        if (activity == null) {
+        final Context context = getContextOrDestroy();
+        if (context == null) {
             return;
         }
 
@@ -188,22 +188,22 @@ void requestNativeAd(@Nullable final String endpointUrl) {
             return;
         }
 
-        mNativeRequest = new AdRequest(endpointUrl, AdFormat.NATIVE, mAdUnitId, activity, mVolleyListener);
-        RequestQueue requestQueue = Networking.getRequestQueue(activity);
+        mNativeRequest = new AdRequest(endpointUrl, AdFormat.NATIVE, mAdUnitId, context, mVolleyListener);
+        RequestQueue requestQueue = Networking.getRequestQueue(context);
         requestQueue.add(mNativeRequest);
     }
 
     private void onAdLoad(@NonNull final AdResponse response) {
-        final Activity activity = getActivityOrDestroy();
-        if (activity == null) {
+        final Context context = getContextOrDestroy();
+        if (context == null) {
             return;
         }
         final CustomEventNativeListener customEventNativeListener =
                 new CustomEventNativeListener() {
                     @Override
                     public void onNativeAdLoaded(@NonNull final BaseNativeAd nativeAd) {
-                        final Activity activity = getActivityOrDestroy();
-                        if (activity == null) {
+                        final Context context = getContextOrDestroy();
+                        if (context == null) {
                             return;
                         }
 
@@ -213,7 +213,7 @@ public void onNativeAdLoaded(@NonNull final BaseNativeAd nativeAd) {
                             return;
                         }
 
-                        mMoPubNativeNetworkListener.onNativeLoad(new NativeAd(activity,
+                        mMoPubNativeNetworkListener.onNativeLoad(new NativeAd(context,
                                         response.getImpressionTrackingUrl(),
                                         response.getClickTrackingUrl(),
                                         mAdUnitId,
@@ -230,7 +230,7 @@ public void onNativeAdFailed(final NativeErrorCode errorCode) {
                 };
 
         CustomEventNativeAdapter.loadNativeAd(
-                activity,
+                context,
                 mLocalExtras,
                 response,
                 customEventNativeListener
@@ -268,7 +268,7 @@ void onAdError(@NonNull final VolleyError volleyError) {
             NetworkResponse response = volleyError.networkResponse;
             if (response != null && response.statusCode >= 500 && response.statusCode < 600) {
                 mMoPubNativeNetworkListener.onNativeFail(SERVER_ERROR_RESPONSE_CODE);
-            } else if (response == null && !DeviceUtils.isNetworkAvailable(mActivity.get())) {
+            } else if (response == null && !DeviceUtils.isNetworkAvailable(mContext.get())) {
                 MoPubLog.c(String.valueOf(MoPubErrorCode.NO_CONNECTION.toString()));
                 mMoPubNativeNetworkListener.onNativeFail(CONNECTION_ERROR);
             } else {
@@ -277,14 +277,16 @@ void onAdError(@NonNull final VolleyError volleyError) {
         }
     }
 
-    Activity getActivityOrDestroy() {
-        final Activity activity = mActivity.get();
-        if (activity == null) {
+    @VisibleForTesting
+    @Nullable
+    Context getContextOrDestroy() {
+        final Context context = mContext.get();
+        if (context == null) {
             destroy();
-            MoPubLog.d("Weak reference to Activity in MoPubNative became null. This instance" +
+            MoPubLog.d("Weak reference to Context in MoPubNative became null. This instance" +
                     " of MoPubNative is destroyed and No more requests will be processed.");
         }
-        return activity;
+        return context;
     }
 
     @VisibleForTesting
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdLoadedListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubNativeAdPositioning.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerAdapter.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubRecyclerViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
similarity index 95%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
index 819d8d8f..aec86d57 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStaticNativeAdRenderer.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.LayoutInflater;
@@ -36,9 +36,9 @@ public MoPubStaticNativeAdRenderer(@NonNull final ViewBinder viewBinder) {
 
     @Override
     @NonNull
-    public View createAdView(@NonNull final Activity activity, @Nullable final ViewGroup parent) {
+    public View createAdView(@NonNull final Context context, @Nullable final ViewGroup parent) {
         return LayoutInflater
-                .from(activity)
+                .from(context)
                 .inflate(mViewBinder.layoutId, parent, false);
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
similarity index 99%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
index 2aacb163..3574b303 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/MoPubStreamAdPlacer.java
@@ -388,7 +388,7 @@ public Object getAdData(final int position) {
      * Gets the ad at the given position, or {@code null} if there is no ad at the given position.
      *
      * This method will attempt to reuse the convertView if it is not {@code null}, and will
-     * otherwise create it. See {@link MoPubAdRenderer#createAdView(Activity, ViewGroup)}.
+     * otherwise create it. See {@link MoPubAdRenderer#createAdView(Context, ViewGroup)}.
      *
      * @param position The position to place an ad into.
      * @param convertView A recycled view into which to render data, or {@code null}.
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
index 08124786..afa9e583 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAd.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAd.java
@@ -1,6 +1,5 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -9,7 +8,6 @@
 
 import com.mopub.common.VisibleForTesting;
 import com.mopub.nativeads.MoPubCustomEventNative.MoPubStaticNativeAd;
-import com.mopub.nativeads.MoPubCustomEventVideoNative.MoPubVideoNativeAd;
 import com.mopub.network.AdResponse;
 import com.mopub.network.TrackingRequest;
 
@@ -33,7 +31,7 @@
  *
  * When you have a {@link NativeAd} instance and wish to show a view you should:
  *
- * 1. Call {@link #createAdView(Activity, ViewGroup)} to inflate a {@link View} that can show this ad.
+ * 1. Call {@link #createAdView(Context, ViewGroup)} to inflate a {@link View} that can show this ad.
  * 2. Call {@link #renderAdView(View)} with a compatible {@link View} to render the ad data into the view.
  * 3. Just before the ad is shown to the user, call {@link #prepare(View)}.
  * 4. When the ad view is no longer shown to the user, call {@link #clear(View)}. You can later
@@ -124,7 +122,7 @@ public boolean isDestroyed() {
      * Returns the {@link BaseNativeAd} object for this {@link NativeAd}. This object is created by
      * a {@link CustomEventNative} subclass after a successful ad request and is specific to the ad
      * source. If it comes from the MoPub Exchange or is a directly-served ad it will be of the type
-     * {@link MoPubStaticNativeAd} or {@link MoPubVideoNativeAd}. If it is returned by a mediated ad
+     * {@link MoPubStaticNativeAd} or MoPubVideoNativeAd. If it is returned by a mediated ad
      * network it may have another type.
      */
     @NonNull
@@ -132,9 +130,17 @@ public BaseNativeAd getBaseNativeAd() {
         return mBaseNativeAd;
     }
 
+    /**
+     * Renders the ad view. It is highly recommended that this context is an Activity to preserve
+     * the current activity's theme.
+     *
+     * @param context The context, preferably the Activity.
+     * @param parent  An optional parent.
+     * @return The rendered ad view.
+     */
     @NonNull
-    public View createAdView(@NonNull final Activity activity, @Nullable final ViewGroup parent) {
-        return mMoPubAdRenderer.createAdView(activity, parent);
+    public View createAdView(@NonNull final Context context, @Nullable final ViewGroup parent) {
+        return mMoPubAdRenderer.createAdView(context, parent);
     }
 
     public void renderAdView(View view) {
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdData.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdData.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdData.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdData.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
similarity index 89%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
index b600d00d..0b275866 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeAdViewHelper.java
@@ -1,6 +1,5 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -38,31 +37,31 @@ private NativeAdViewHelper() {
     @NonNull
     static View getAdView(@Nullable View convertView,
             @Nullable final ViewGroup parent,
-            @NonNull final Activity activity,
+            @NonNull final Context context,
             @Nullable final NativeAd nativeAd,
             @Nullable final ViewBinder viewBinder) {
 
         Preconditions.NoThrow.checkNotNull(viewBinder, "ViewBinder is null.");
 
         if (convertView != null) {
-            clearNativeAd(activity, convertView);
+            clearNativeAd(context, convertView);
         }
 
         if (nativeAd == null || nativeAd.isDestroyed() || viewBinder == null) {
             MoPubLog.d("NativeAd or viewBinder null or invalid. Returning empty view");
             // Only create a view if one hasn't been created already
             if (convertView == null || !ViewType.EMPTY.equals(convertView.getTag())) {
-                convertView = new View(activity);
+                convertView = new View(context);
                 convertView.setTag(ViewType.EMPTY);
                 convertView.setVisibility(View.GONE);
             }
         } else {
             // Only create a view if one hasn't been created already
             if (convertView == null || !ViewType.AD.equals(convertView.getTag())) {
-                convertView = nativeAd.createAdView(activity, parent);
+                convertView = nativeAd.createAdView(context, parent);
                 convertView.setTag(ViewType.AD);
             }
-            prepareNativeAd(activity, convertView, nativeAd);
+            prepareNativeAd(context, convertView, nativeAd);
             nativeAd.renderAdView(convertView);
         }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeClickHandler.java
similarity index 86%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeClickHandler.java
index fd66bc7a..045f7ebe 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeClickHandler.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeClickHandler.java
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
@@ -18,11 +19,18 @@
  */
 public class NativeClickHandler {
     @NonNull private final Context mContext;
+    @Nullable private final String mDspCreativeId;
+
     private boolean mClickInProgress;
 
     public NativeClickHandler(@NonNull final Context context) {
+        this(context, null);
+    }
+
+    public NativeClickHandler(@NonNull final Context context, @Nullable final String dspCreativeId) {
         Preconditions.checkNotNull(context);
         mContext = context.getApplicationContext();
+        mDspCreativeId = dspCreativeId;
     }
 
     /**
@@ -115,15 +123,18 @@ void openClickDestinationUrl(@NonNull final String clickDestinationUrl,
             spinningProgressView.addToRoot(view);
         }
 
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(
-                        UrlAction.IGNORE_ABOUT_SCHEME,
-                        UrlAction.OPEN_NATIVE_BROWSER,
-                        UrlAction.OPEN_APP_MARKET,
-                        UrlAction.OPEN_IN_APP_BROWSER,
-                        UrlAction.HANDLE_SHARE_TWEET,
-                        UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
-                        UrlAction.FOLLOW_DEEP_LINK)
+        UrlHandler.Builder builder = new UrlHandler.Builder();
+        if (!TextUtils.isEmpty(mDspCreativeId)) {
+            builder.withDspCreativeId(mDspCreativeId);
+        }
+        builder.withSupportedUrlActions(
+                UrlAction.IGNORE_ABOUT_SCHEME,
+                UrlAction.OPEN_NATIVE_BROWSER,
+                UrlAction.OPEN_APP_MARKET,
+                UrlAction.OPEN_IN_APP_BROWSER,
+                UrlAction.HANDLE_SHARE_TWEET,
+                UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK,
+                UrlAction.FOLLOW_DEEP_LINK)
                 .withResultActions(new UrlHandler.ResultActions() {
                     @Override
                     public void urlHandlingSucceeded(@NonNull String url,
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeErrorCode.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeErrorCode.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeErrorCode.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeErrorCode.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeImageHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeImageHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeImageHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeRendererHelper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeRendererHelper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/NativeUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PlacementData.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PlacementData.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PlacementData.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PlacementData.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningRequest.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningRequest.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningRequest.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningRequest.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/PositioningUrlGenerator.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/RequestParameters.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/RequestParameters.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/RequestParameters.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/RequestParameters.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ServerPositioningSource.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ServerPositioningSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/SpinningProgressView.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/SpinningProgressView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/SpinningProgressView.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/SpinningProgressView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeAd.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeAd.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeAd.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/StaticNativeViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/TaskManager.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TaskManager.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/TaskManager.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TaskManager.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/TimestampWrapper.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TimestampWrapper.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/TimestampWrapper.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/TimestampWrapper.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ViewBinder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/ViewBinder.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/ViewBinder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/VisibilityTracker.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/VisibilityTracker.java
similarity index 81%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/VisibilityTracker.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/VisibilityTracker.java
index 7732643d..39cbfc39 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/VisibilityTracker.java
+++ b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/VisibilityTracker.java
@@ -1,6 +1,7 @@
 package com.mopub.nativeads;
 
 import android.app.Activity;
+import android.content.Context;
 import android.graphics.Rect;
 import android.os.Handler;
 import android.os.SystemClock;
@@ -44,8 +45,8 @@
         void onVisibilityChanged(List<View> visibleViews, List<View> invisibleViews);
     }
 
-    @Nullable @VisibleForTesting OnPreDrawListener mOnPreDrawListener;
-    @NonNull @VisibleForTesting final WeakReference<View> mRootView;
+    @NonNull @VisibleForTesting final OnPreDrawListener mOnPreDrawListener;
+    @NonNull @VisibleForTesting WeakReference<ViewTreeObserver> mWeakViewTreeObserver;
 
     static class TrackingInfo {
         int mMinViewablePercent;
@@ -73,15 +74,15 @@
     // Whether the visibility runnable is scheduled
     private boolean mIsVisibilityScheduled;
 
-    public VisibilityTracker(@NonNull final Activity activity) {
-        this(activity,
+    public VisibilityTracker(@NonNull final Context context) {
+        this(context,
                 new WeakHashMap<View, TrackingInfo>(10),
                 new VisibilityChecker(),
                 new Handler());
     }
 
     @VisibleForTesting
-    VisibilityTracker(@NonNull final Activity activity,
+    VisibilityTracker(@NonNull final Context context,
             @NonNull final Map<View, TrackingInfo> trackedViews,
             @NonNull final VisibilityChecker visibilityChecker,
             @NonNull final Handler visibilityHandler) {
@@ -91,22 +92,57 @@ public VisibilityTracker(@NonNull final Activity activity) {
         mVisibilityRunnable = new VisibilityRunnable();
         mTrimmedViews = new ArrayList<View>(NUM_ACCESSES_BEFORE_TRIMMING);
 
-        final View rootView = activity.getWindow().getDecorView();
-        mRootView = new WeakReference<View>(rootView);
+        mOnPreDrawListener = new OnPreDrawListener() {
+            @Override
+            public boolean onPreDraw() {
+                scheduleVisibilityCheck();
+                return true;
+            }
+        };
+
+        mWeakViewTreeObserver = new WeakReference<ViewTreeObserver>(null);
+        setViewTreeObserver(context, null);
+    }
+
+    private void setViewTreeObserver(@Nullable final Context context, @Nullable final View view) {
+        final ViewTreeObserver originalViewTreeObserver = mWeakViewTreeObserver.get();
+        if (originalViewTreeObserver != null && originalViewTreeObserver.isAlive()) {
+            return;
+        }
+
+        final View rootView = getBestRootView(context, view);
+        if (rootView == null) {
+            MoPubLog.d("Unable to set Visibility Tracker due to no available root view.");
+            return;
+        }
+
         final ViewTreeObserver viewTreeObserver = rootView.getViewTreeObserver();
         if (!viewTreeObserver.isAlive()) {
             MoPubLog.w("Visibility Tracker was unable to track views because the"
                     + " root view tree observer was not alive");
-        } else {
-            mOnPreDrawListener = new OnPreDrawListener() {
-                @Override
-                public boolean onPreDraw() {
-                    scheduleVisibilityCheck();
-                    return true;
-                }
-            };
-            viewTreeObserver.addOnPreDrawListener(mOnPreDrawListener);
+            return;
         }
+
+        mWeakViewTreeObserver = new WeakReference<ViewTreeObserver>(viewTreeObserver);
+        viewTreeObserver.addOnPreDrawListener(mOnPreDrawListener);
+    }
+
+    @VisibleForTesting
+    @Nullable
+    static View getBestRootView(@Nullable final Context context, @Nullable final View view) {
+        if (context instanceof Activity) {
+            return ((Activity) context).getWindow().getDecorView();
+        }
+
+        if (view != null) {
+            final View rootView = view.getRootView();
+            if (rootView != null) {
+                final View rootContentView = rootView.findViewById(android.R.id.content);
+                return rootContentView != null ? rootContentView : rootView;
+            }
+        }
+
+        return null;
     }
 
     void setVisibilityTrackerListener(
@@ -126,6 +162,8 @@ void addView(@NonNull View rootView, @NonNull final View view, final int minPerc
     }
 
     void addView(@NonNull View rootView, @NonNull final View view, final int minVisiblePercentageViewed, final int maxInvisiblePercentageViewed) {
+        setViewTreeObserver(view.getContext(), view);
+
         // Find the view if already tracked
         TrackingInfo trackingInfo = mTrackedViews.get(view);
         if (trackingInfo == null) {
@@ -183,14 +221,11 @@ void clear() {
      */
     void destroy() {
         clear();
-        final View rootView = mRootView.get();
-        if (rootView != null && mOnPreDrawListener != null) {
-            final ViewTreeObserver viewTreeObserver = rootView.getViewTreeObserver();
-            if (viewTreeObserver.isAlive()) {
-                viewTreeObserver.removeOnPreDrawListener(mOnPreDrawListener);
-            }
-            mOnPreDrawListener = null;
+        final ViewTreeObserver viewTreeObserver = mWeakViewTreeObserver.get();
+        if (viewTreeObserver != null && viewTreeObserver.isAlive()) {
+            viewTreeObserver.removeOnPreDrawListener(mOnPreDrawListener);
         }
+        mWeakViewTreeObserver.clear();
         mVisibilityTrackerListener = null;
     }
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java b/mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
rename to mopub-sdk/mopub-sdk-native-static/src/main/java/com/mopub/nativeads/factories/CustomEventNativeFactory.java
diff --git a/mopub-sdk/mopub-sdk-native-video/build.gradle b/mopub-sdk/mopub-sdk-native-video/build.gradle
new file mode 100644
index 00000000..224045ef
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-video/build.gradle
@@ -0,0 +1,12 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-native-static')
+    compile 'com.google.android.exoplayer:exoplayer:r1.5.6'
+}
+
+project.description = 'MoPub Android SDK - Native Video'
+project.ext.displayName = 'MoPub Android SDK - Native Video'
+project.ext.projectName = 'mopub-sdk-native-video'
+project.ext.uploadName = 'mopub-android-sdk-native-video'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..dc41fe9a
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.native_video">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/HttpDiskCompositeDataSource.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaLayout.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaLayout.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaLayout.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaLayout.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewBinder.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewBinder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewBinder.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewBinder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewHolder.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewHolder.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MediaViewHolder.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MediaViewHolder.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
similarity index 91%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
index 6e40313b..67f0655d 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubCustomEventVideoNative.java
@@ -1,7 +1,6 @@
 package com.mopub.nativeads;
 
 import android.annotation.TargetApi;
-import android.app.Activity;
 import android.content.Context;
 import android.graphics.SurfaceTexture;
 import android.media.AudioManager;
@@ -56,7 +55,7 @@
 public class MoPubCustomEventVideoNative extends CustomEventNative {
 
     @Override
-    protected void loadNativeAd(@NonNull final Activity activity,
+    protected void loadNativeAd(@NonNull final Context context,
             @NonNull final CustomEventNativeListener customEventNativeListener,
             @NonNull final Map<String, Object> localExtras,
             @NonNull final Map<String, String> serverExtras) {
@@ -87,7 +86,7 @@ protected void loadNativeAd(@NonNull final Activity activity,
         }
 
         final String clickTrackingUrlFromHeader = (String) clickTrackingUrlFromHeaderObject;
-        final MoPubVideoNativeAd videoNativeAd = new MoPubVideoNativeAd(activity, (JSONObject) json,
+        final MoPubVideoNativeAd videoNativeAd = new MoPubVideoNativeAd(context, (JSONObject) json,
                 customEventNativeListener, videoResponseHeaders, eventDetails,
                 clickTrackingUrlFromHeader);
         try {
@@ -174,6 +173,8 @@ static Parameter from(@NonNull final String name) {
         private final long mId;
         private boolean mNeedsSeek;
         private boolean mNeedsPrepare;
+        private boolean mPauseCanBeTracked = false;
+        private boolean mResumeCanBeTracked = false;
 
         // These variables influence video state.
         private int mLatestVideoControllerState;
@@ -183,20 +184,20 @@ static Parameter from(@NonNull final String name) {
         private boolean mEnded;
 
         public MoPubVideoNativeAd(
-                @NonNull final Activity activity,
+                @NonNull final Context context,
                 @NonNull final JSONObject jsonObject,
                 @NonNull final CustomEventNativeListener customEventNativeListener,
                 @NonNull final VideoResponseHeaders videoResponseHeaders,
                 @Nullable final EventDetails eventDetails,
                 @NonNull final String clickTrackingUrl) {
-            this(activity, jsonObject, customEventNativeListener, videoResponseHeaders,
-                    new VisibilityTracker(activity), new NativeVideoControllerFactory(),
-                    eventDetails, clickTrackingUrl, VastManagerFactory.create(activity.getApplicationContext(), false));
+            this(context, jsonObject, customEventNativeListener, videoResponseHeaders,
+                    new VisibilityTracker(context), new NativeVideoControllerFactory(),
+                    eventDetails, clickTrackingUrl, VastManagerFactory.create(context.getApplicationContext(), false));
         }
 
         @VisibleForTesting
         MoPubVideoNativeAd(
-                @NonNull final Activity activity,
+                @NonNull final Context context,
                 @NonNull final JSONObject jsonObject,
                 @NonNull final CustomEventNativeListener customEventNativeListener,
                 @NonNull final VideoResponseHeaders videoResponseHeaders,
@@ -205,7 +206,7 @@ public MoPubVideoNativeAd(
                 @Nullable final EventDetails eventDetails,
                 @NonNull final String clickTrackingUrl,
                 @NonNull final VastManager vastManager) {
-            Preconditions.checkNotNull(activity);
+            Preconditions.checkNotNull(context);
             Preconditions.checkNotNull(jsonObject);
             Preconditions.checkNotNull(customEventNativeListener);
             Preconditions.checkNotNull(videoResponseHeaders);
@@ -214,7 +215,7 @@ public MoPubVideoNativeAd(
             Preconditions.checkNotNull(clickTrackingUrl);
             Preconditions.checkNotNull(vastManager);
 
-            mContext = activity.getApplicationContext();
+            mContext = context.getApplicationContext();
             mJsonObject = jsonObject;
             mCustomEventNativeListener = customEventNativeListener;
             mVideoResponseHeaders = videoResponseHeaders;
@@ -276,7 +277,9 @@ void loadAd() throws IllegalArgumentException {
                 @Override
                 public void onImagesCached() {
                     mVastManager.prepareVastVideoConfiguration(getVastVideo(),
-                            MoPubVideoNativeAd.this, mContext);
+                            MoPubVideoNativeAd.this,
+                            mEventDetails == null ? null : mEventDetails.getDspCreativeId(),
+                            mContext);
                 }
 
                 @Override
@@ -630,9 +633,19 @@ void applyState(@NonNull final VideoState videoState) {
         @VisibleForTesting
         void applyState(@NonNull final VideoState videoState, boolean transitionToFullScreen) {
             Preconditions.checkNotNull(videoState);
+
+            // Ignore the state change if video player is not ready to take state changes.
+            if (mVastVideoConfig == null || mNativeVideoController == null || mMediaLayout == null) {
+                return;
+            }
+
+            // Check and set mVideoState so any changes we make to exo state don't
+            // trigger a duplicate run of this.
             if (mVideoState == videoState) {
                 return;
             }
+            VideoState previousState = mVideoState;
+            mVideoState = videoState;
 
             switch (videoState) {
                 case FAILED_LOAD:
@@ -640,7 +653,7 @@ void applyState(@NonNull final VideoState videoState, boolean transitionToFullSc
                     mNativeVideoController.setAppAudioEnabled(false);
                     mMediaLayout.setMode(MediaLayout.Mode.IMAGE);
                     // Only log the failed to play event when the video has not started
-                    if (mVideoState != VideoState.PLAYING && mVideoState != VideoState.PLAYING_MUTED) {
+                    if (previousState != VideoState.PLAYING && previousState != VideoState.PLAYING_MUTED) {
                         MoPubEvents.log(Event.createEventFromDetails(
                                 BaseEvent.Name.ERROR_FAILED_TO_PLAY,
                                 BaseEvent.Category.NATIVE_VIDEO,
@@ -658,18 +671,30 @@ void applyState(@NonNull final VideoState videoState, boolean transitionToFullSc
                     mMediaLayout.setMode(MediaLayout.Mode.BUFFERING);
                     break;
                 case PAUSED:
+                    if (transitionToFullScreen) {
+                        // Prevents firing resume trackers when we return from full-screen.
+                        mResumeCanBeTracked = false;
+                    }
+
                     if (!transitionToFullScreen) {
                         mNativeVideoController.setAppAudioEnabled(false);
+                        if (mPauseCanBeTracked) {
+                            TrackingRequest.makeVastTrackingHttpRequest(
+                                    mVastVideoConfig.getPauseTrackers(),
+                                    null, // VastErrorCode
+                                    (int) mNativeVideoController.getCurrentPosition(),
+                                    null, // Asset URI
+                                    mContext);
+                            mPauseCanBeTracked = false;
+                            mResumeCanBeTracked = true;
+                        }
                     }
                     mNativeVideoController.setPlayWhenReady(false);
                     mMediaLayout.setMode(MediaLayout.Mode.PAUSED);
                     break;
                 case PLAYING:
-                    // We force a seek here to get keyframe rendering in ExtractorSampleSource.
-                    if (mNeedsSeek) {
-                        mNeedsSeek = false;
-                        mNativeVideoController.seekTo(mNativeVideoController.getCurrentPosition());
-                    }
+                    handleResumeTrackersAndSeek(previousState);
+
                     mNativeVideoController.setPlayWhenReady(true);
                     mNativeVideoController.setAudioEnabled(true);
                     mNativeVideoController.setAppAudioEnabled(true);
@@ -677,11 +702,8 @@ void applyState(@NonNull final VideoState videoState, boolean transitionToFullSc
                     mMediaLayout.setMuteState(MediaLayout.MuteState.UNMUTED);
                     break;
                 case PLAYING_MUTED:
-                    // We force a seek here to get keyframe rendering in ExtractorSampleSource.
-                    if (mNeedsSeek) {
-                        mNeedsSeek = false;
-                        mNativeVideoController.seekTo(mNativeVideoController.getCurrentPosition());
-                    }
+                    handleResumeTrackersAndSeek(previousState);
+
                     mNativeVideoController.setPlayWhenReady(true);
                     mNativeVideoController.setAudioEnabled(false);
                     mNativeVideoController.setAppAudioEnabled(false);
@@ -692,14 +714,37 @@ void applyState(@NonNull final VideoState videoState, boolean transitionToFullSc
                     if (mNativeVideoController.hasFinalFrame()) {
                         mMediaLayout.setMainImageDrawable(mNativeVideoController.getFinalFrame());
                     }
+                    mPauseCanBeTracked = false;
+                    mResumeCanBeTracked = false;
                     mVastVideoConfig.handleComplete(mContext, 0);
                     mNativeVideoController.setAppAudioEnabled(false);
                     mMediaLayout.setMode(MediaLayout.Mode.FINISHED);
                     mMediaLayout.updateProgress(1000);
                     break;
             }
+        }
+
+        private void handleResumeTrackersAndSeek(VideoState previousState) {
+            if (mResumeCanBeTracked
+                    && previousState != VideoState.PLAYING
+                    && previousState != VideoState.PLAYING_MUTED) {  // If we've played before, fire resume trackers.
+                TrackingRequest.makeVastTrackingHttpRequest(
+                        mVastVideoConfig.getResumeTrackers(),
+                        null, // VastErrorCode
+                        (int) mNativeVideoController.getCurrentPosition(),
+                        null, // Asset URI
+                        mContext
+                );
+                mResumeCanBeTracked = false;
+            }
 
-            mVideoState = videoState;
+            mPauseCanBeTracked = true;
+
+            // We force a seek here to get keyframe rendering in ExtractorSampleSource.
+            if (mNeedsSeek) {
+                mNeedsSeek = false;
+                mNativeVideoController.seekTo(mNativeVideoController.getCurrentPosition());
+            }
         }
 
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
similarity index 90%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
index b5ca8cbf..551e6417 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/MoPubVideoNativeAdRenderer.java
@@ -1,6 +1,6 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
+import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.view.LayoutInflater;
@@ -34,9 +34,9 @@ public MoPubVideoNativeAdRenderer(@NonNull final MediaViewBinder mediaViewBinder
 
     @Override
     @NonNull
-    public View createAdView(@NonNull final Activity activity, @Nullable final ViewGroup parent) {
+    public View createAdView(@NonNull final Context context, @Nullable final ViewGroup parent) {
         return LayoutInflater
-                .from(activity)
+                .from(context)
                 .inflate(mMediaViewBinder.layoutId, parent, false);
     }
 
@@ -71,8 +71,10 @@ private void update(@NonNull final MediaViewHolder mediaViewHolder,
         NativeRendererHelper.addCtaButton(mediaViewHolder.callToActionView,
                 mediaViewHolder.mainView, videoNativeAd.getCallToAction()
         );
-        NativeImageHelper.loadImageView(videoNativeAd.getMainImageUrl(),
-                mediaViewHolder.mediaLayout.getMainImageView());
+        if (mediaViewHolder.mediaLayout != null) {
+            NativeImageHelper.loadImageView(videoNativeAd.getMainImageUrl(),
+                    mediaViewHolder.mediaLayout.getMainImageView());
+        }
         NativeImageHelper.loadImageView(videoNativeAd.getIconImageUrl(),
                 mediaViewHolder.iconImageView);
         NativeRendererHelper.addPrivacyInformationIcon(
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeFullScreenVideoView.java
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
similarity index 94%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
index e012dfef..33e80e12 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoController.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoController.java
@@ -19,6 +19,7 @@
 import com.google.android.exoplayer.ExoPlaybackException;
 import com.google.android.exoplayer.ExoPlayer;
 import com.google.android.exoplayer.MediaCodecAudioTrackRenderer;
+import com.google.android.exoplayer.MediaCodecSelector;
 import com.google.android.exoplayer.MediaCodecVideoTrackRenderer;
 import com.google.android.exoplayer.extractor.Extractor;
 import com.google.android.exoplayer.extractor.ExtractorSampleSource;
@@ -97,10 +98,11 @@
     private boolean mExoPlayerStateStartedFromIdle = true;
 
     /**
-     * Create a new NativeVideoController for this id with the given parameters.
+     * Create a new {@link NativeVideoController} for this id with the given parameters.
      * Any existing entry with the same id is removed.
-     * @param id
-     * @return
+     *
+     * @param id the unique id of the native video ad
+     * @return an initialized {@link NativeVideoController}
      */
     @NonNull
     public static NativeVideoController createForId(final long id,
@@ -130,7 +132,7 @@ public static NativeVideoController createForId(final long id,
     }
 
     @VisibleForTesting
-    static void setForId(final long id,
+    public static void setForId(final long id,
             @NonNull final NativeVideoController nativeVideoController) {
         sManagerMap.put(id, nativeVideoController);
     }
@@ -291,10 +293,9 @@ public void release(@NonNull final Object owner) {
 
     @Override
     public void onPlayerStateChanged(final boolean playWhenReady, final int newState) {
-        startProgressRunnable(playWhenReady, newState);
-
         if (newState == STATE_ENDED && mFinalFrame == null) {
             mFinalFrame = new BitmapDrawable(mContext.getResources(), mTextureView.getBitmap());
+            mNativeVideoProgressRunnable.requestStop();
         }
 
         if (mPreviousExoPlayerState == ExoPlayer.STATE_READY && newState == ExoPlayer.STATE_BUFFERING) {
@@ -360,6 +361,7 @@ public void onPlayerError(ExoPlaybackException e) {
                 mEventDetails));
 
         mListener.onError(e);
+        mNativeVideoProgressRunnable.requestStop();
     }
 
     /**
@@ -386,14 +388,6 @@ void triggerImpressionTrackers() {
         mNativeVideoProgressRunnable.checkImpressionTrackers(true);
     }
 
-    private void startProgressRunnable(final boolean playWhenReady, final int state) {
-        if (playWhenReady && state == STATE_READY) {
-            mNativeVideoProgressRunnable.startRepeating(50);
-        } else {
-            mNativeVideoProgressRunnable.stop();
-        }
-    }
-
     private void clearExistingPlayer() {
         if (mExoPlayer == null) {
             return;
@@ -403,6 +397,7 @@ private void clearExistingPlayer() {
         mExoPlayer.stop();
         mExoPlayer.release();
         mExoPlayer = null;
+        mNativeVideoProgressRunnable.stop();
         mNativeVideoProgressRunnable.setExoPlayer(null);
     }
 
@@ -423,11 +418,14 @@ private void preparePlayer() {
 
             final ExtractorSampleSource sampleSource = new ExtractorSampleSource(Uri.parse(videoUrl),
                     httpSource, allocator, BUFFER_SEGMENT_SIZE * BUFFER_SEGMENT_COUNT, extractor);
-            mVideoTrackRenderer = new MediaCodecVideoTrackRenderer(
-                    sampleSource, MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING,
-                    0, mHandler, null, 10);
-            mAudioTrackRenderer = new MediaCodecAudioTrackRenderer(sampleSource);
+            mVideoTrackRenderer = new MediaCodecVideoTrackRenderer(mContext, sampleSource,
+                    MediaCodecSelector.DEFAULT,
+                    MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING, 0, mHandler, null,
+                    10);
+            mAudioTrackRenderer = new MediaCodecAudioTrackRenderer(sampleSource,
+                    MediaCodecSelector.DEFAULT);
             mExoPlayer.prepare(mAudioTrackRenderer, mVideoTrackRenderer);
+            mNativeVideoProgressRunnable.startRepeating(50);
         }
 
         setExoAudio();
@@ -440,7 +438,6 @@ private void setExoPlayWhenReady() {
         }
 
         mExoPlayer.setPlayWhenReady(mPlayWhenReady);
-        startProgressRunnable(mExoPlayer.getPlayWhenReady(), mExoPlayer.getPlaybackState());
     }
 
     private void setExoAudio() {
@@ -492,7 +489,8 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
         public interface ProgressListener {
             /**
              * Should send a number from 0 to 1000.
-             * @param progressTenthPercent
+             *
+             * @param progressTenthPercent tenth of a percentage of video progress
              */
             void updateProgress(int progressTenthPercent);
         }
@@ -506,6 +504,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
         @Nullable private ProgressListener mProgressListener;
         private long mCurrentPosition;
         private long mDuration;
+        private boolean mStopRequested;
 
         NativeVideoProgressRunnable(@NonNull final Context context,
                 @NonNull final Handler handler,
@@ -532,6 +531,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs, int minRebuffer
             mVisibilityChecker = visibilityChecker;
             mVastVideoConfig = vastVideoConfig;
             mDuration = -1L; // Initialized to -1 so we can distinguish between "never started" and a zero-length video.
+            mStopRequested = false;
         }
 
         void setExoPlayer(@Nullable final ExoPlayer exoPlayer) {
@@ -558,9 +558,15 @@ long getDuration() {
             return mDuration;
         }
 
+        void requestStop() {
+            mStopRequested = true;
+        }
+
         void checkImpressionTrackers(final boolean forceTrigger) {
+            int trackedCount = 0;
             for (VisibilityTrackingEvent event : mVisibilityTrackingEvents) {
                 if (event.isTracked) {
+                    trackedCount++;
                     continue;
                 }
                 if (forceTrigger || mVisibilityChecker.isVisible(mTextureView, mTextureView,
@@ -570,9 +576,13 @@ void checkImpressionTrackers(final boolean forceTrigger) {
                             event.totalQualifiedPlayCounter >= event.totalRequiredPlayTimeMs) {
                         event.strategy.execute();
                         event.isTracked = true;
+                        trackedCount++;
                     }
                 }
             }
+            if (trackedCount == mVisibilityTrackingEvents.size() && mStopRequested) {
+                stop();
+            }
         }
 
         @Override
@@ -583,9 +593,6 @@ public void doWork() {
 
             mCurrentPosition = mExoPlayer.getCurrentPosition();
             mDuration = mExoPlayer.getDuration();
-            if (mDuration <= 0) {
-                return;
-            }
 
             checkImpressionTrackers(false);
 
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
similarity index 96%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
index 99e7c58e..4d8e4e55 100644
--- a/mopub-sdk/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
+++ b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/NativeVideoViewController.java
@@ -16,6 +16,7 @@
 import android.view.ViewGroup.LayoutParams;
 import android.widget.VideoView;
 
+import com.mopub.common.Constants;
 import com.mopub.common.Preconditions;
 import com.mopub.common.UrlAction;
 import com.mopub.common.UrlHandler;
@@ -34,9 +35,6 @@
 
     enum VideoState { NONE, LOADING, BUFFERING, PAUSED, PLAYING, ENDED, FAILED_LOAD }
 
-    @NonNull public static final String NATIVE_VIDEO_ID = "native_video_id";
-    @NonNull public static final String NATIVE_VAST_VIDEO_CONFIG = "native_vast_video_config";
-
     @NonNull private VideoState mVideoState;
     @NonNull private VastVideoConfig mVastVideoConfig;
     @NonNull private final NativeFullScreenVideoView mFullScreenVideoView;
@@ -57,7 +55,7 @@ public NativeVideoViewController(@NonNull final Context context,
         this(context, intentExtras, savedInstanceState, baseVideoViewControllerListener,
                 new NativeFullScreenVideoView(context,
                         context.getResources().getConfiguration().orientation,
-                        ((VastVideoConfig) intentExtras.get(NATIVE_VAST_VIDEO_CONFIG))
+                        ((VastVideoConfig) intentExtras.get(Constants.NATIVE_VAST_VIDEO_CONFIG))
                                 .getCustomCtaText()));
     }
 
@@ -74,9 +72,9 @@ public NativeVideoViewController(@NonNull final Context context,
         Preconditions.checkNotNull(fullScreenVideoView);
 
         mVideoState = VideoState.NONE;
-        mVastVideoConfig = ((VastVideoConfig) intentExtras.get(NATIVE_VAST_VIDEO_CONFIG));
+        mVastVideoConfig = ((VastVideoConfig) intentExtras.get(Constants.NATIVE_VAST_VIDEO_CONFIG));
         mFullScreenVideoView = fullScreenVideoView;
-        final long videoId = (long) intentExtras.get(NATIVE_VIDEO_ID);
+        final long videoId = (long) intentExtras.get(Constants.NATIVE_VIDEO_ID);
         mNativeVideoController = NativeVideoController.getForId(videoId);
 
         // Variables being checked below may be null but if they are it indicates
diff --git a/mopub-sdk/src/main/java/com/mopub/nativeads/VideoNativeAd.java b/mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/VideoNativeAd.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/nativeads/VideoNativeAd.java
rename to mopub-sdk/mopub-sdk-native-video/src/main/java/com/mopub/nativeads/VideoNativeAd.java
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle b/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle
new file mode 100644
index 00000000..f9ad623a
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/build.gradle
@@ -0,0 +1,11 @@
+apply from: '../shared-build.gradle'
+
+dependencies {
+    compile project(':mopub-sdk:mopub-sdk-interstitial')
+}
+
+project.description = 'MoPub Android SDK - Rewarded Video'
+project.ext.displayName = 'MoPub Android SDK - Rewarded Video'
+project.ext.projectName = 'mopub-sdk-rewardedvideo'
+project.ext.uploadName = 'mopub-android-sdk-rewardedvideo'
+apply from: '../publisher.gradle'
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..0e4559c9
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/AndroidManifest.xml
@@ -0,0 +1,4 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.mopub.mobileads.rewarded_video">
+    <application/>
+</manifest>
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPubReward.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/common/MoPubReward.java
similarity index 70%
rename from mopub-sdk/src/main/java/com/mopub/common/MoPubReward.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/common/MoPubReward.java
index 85f0f3c2..0c2b0ce3 100644
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPubReward.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/common/MoPubReward.java
@@ -6,8 +6,23 @@
  * Represents a reward to the user for completing a rewarded task like watching a video.
  */
 public final class MoPubReward {
+    /**
+     * This should be used if there is no reward label specified.
+     */
     public static final String NO_REWARD_LABEL = "";
+
+    /**
+     * Legacy amount for certain custom events that don't take a reward amount. Try not to use this
+     * for any future custom events.
+     */
     public static final int NO_REWARD_AMOUNT = -123;
+
+    /**
+     * The default amount if nothing or an invalid amount is specified. This also is applicable for
+     * custom events that do not require a reward amount.
+     */
+    public static final int DEFAULT_REWARD_AMOUNT = 0;
+
     private final boolean mSuccess;
     private final @NonNull String mLabel;
     private final int mAmount;
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
similarity index 92%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
index ec9edbb4..9e1c961b 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/CustomEventRewardedVideo.java
@@ -4,6 +4,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
+import com.mopub.common.DataKeys;
 import com.mopub.common.LifecycleListener;
 import com.mopub.common.MoPubLifecycleManager;
 import com.mopub.common.VisibleForTesting;
@@ -15,6 +16,7 @@
  *
  */
 public abstract class CustomEventRewardedVideo {
+
     /**
      * This marker interface is used to indicate that an object is a listener for a 3rd party SDKs
      * rewarded video system.
@@ -61,8 +63,8 @@
      * be loaded.
      *
      * @param launcherActivity the "main activity" of the app. Useful for initializing sdks.
-     * @param localExtras
-     * @param serverExtras
+     * @param localExtras a map containing additional custom data set in app
+     * @param serverExtras a map containing additional custom data configurable on the mopub website
      */
     final void loadCustomEvent(@NonNull Activity launcherActivity,
             @NonNull Map<String, Object> localExtras,
@@ -101,8 +103,8 @@ protected abstract boolean checkAndInitializeSdk(@NonNull Activity launcherActiv
      * (onAdLoadSuccess, etc). Instead the SDK delegate/listener should call these methods.
      *
      * @param activity the "main activity" of the app. Useful for initializing sdks.
-     * @param localExtras
-     * @param serverExtras
+     * @param localExtras a map containing additional custom data set in app
+     * @param serverExtras a map containing additional custom data configurable on the mopub website
      */
     protected abstract void loadWithSdkInitialized(@NonNull Activity activity,
             @NonNull Map<String, Object> localExtras,
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java
new file mode 100644
index 00000000..9715fdb0
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideo.java
@@ -0,0 +1,211 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.DataKeys;
+import com.mopub.common.LifecycleListener;
+import com.mopub.common.MoPubReward;
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+import com.mopub.common.logging.MoPubLog;
+
+import java.util.Map;
+
+/**
+ * A custom event for showing MoPub rewarded videos.
+ */
+public class MoPubRewardedVideo extends CustomEventRewardedVideo {
+
+    @NonNull private static final String MOPUB_REWARDED_VIDEO_ID = "mopub_rewarded_video_id";
+
+    @NonNull private RewardedVastVideoInterstitial mRewardedVastVideoInterstitial;
+    @Nullable private String mRewardedVideoCurrencyName;
+    private int mRewardedVideoCurrencyAmount;
+    private boolean mIsLoaded;
+
+    public MoPubRewardedVideo() {
+        mRewardedVastVideoInterstitial = new RewardedVastVideoInterstitial();
+    }
+
+    @Nullable
+    @Override
+    protected CustomEventRewardedVideoListener getVideoListenerForSdk() {
+        // Since MoPub is the SDK, there is no reason to get the SDK video listener
+        // since we have direct access.
+        return null;
+    }
+
+    @Nullable
+    @Override
+    protected LifecycleListener getLifecycleListener() {
+        // RewardedVastVideoInterstitial will handle all lifecycle events.
+        return null;
+    }
+
+    @NonNull
+    @Override
+    protected String getAdNetworkId() {
+        return MOPUB_REWARDED_VIDEO_ID;
+    }
+
+    @Override
+    protected void onInvalidate() {
+        mRewardedVastVideoInterstitial.onInvalidate();
+        mIsLoaded = false;
+    }
+
+    @Override
+    protected boolean checkAndInitializeSdk(@NonNull final Activity launcherActivity,
+            @NonNull final Map<String, Object> localExtras,
+            @NonNull final Map<String, String> serverExtras) throws Exception {
+        // No additional initialization is necessary.
+        return false;
+    }
+
+    @Override
+    protected void loadWithSdkInitialized(@NonNull final Activity activity,
+            @NonNull final Map<String, Object> localExtras,
+            @NonNull final Map<String, String> serverExtras) throws Exception {
+        Preconditions.checkNotNull(activity, "activity cannot be null");
+        Preconditions.checkNotNull(localExtras, "localExtras cannot be null");
+        Preconditions.checkNotNull(serverExtras, "serverExtras cannot be null");
+
+        final Object rewardedVideoCurrencyName = localExtras.get(
+                DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY);
+        if (rewardedVideoCurrencyName instanceof String) {
+            mRewardedVideoCurrencyName = (String) rewardedVideoCurrencyName;
+        } else {
+            MoPubLog.d("No currency name specified for rewarded video. Using the default name.");
+            mRewardedVideoCurrencyName = MoPubReward.NO_REWARD_LABEL;
+        }
+
+        final Object rewardedVideoCurrencyAmount = localExtras.get(
+                DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY);
+        if (rewardedVideoCurrencyAmount instanceof String) {
+            try {
+                mRewardedVideoCurrencyAmount = Integer.parseInt(
+                        (String) rewardedVideoCurrencyAmount);
+            } catch (NumberFormatException e) {
+                MoPubLog.d(
+                        "Unable to convert currency amount: " + rewardedVideoCurrencyAmount +
+                                ". Using the default reward amount: " +
+                                MoPubReward.DEFAULT_REWARD_AMOUNT);
+                mRewardedVideoCurrencyAmount = MoPubReward.DEFAULT_REWARD_AMOUNT;
+            }
+        } else {
+            MoPubLog.d(
+                    "No currency amount specified for rewarded video. Using the default reward amount: " +
+                            MoPubReward.DEFAULT_REWARD_AMOUNT);
+            mRewardedVideoCurrencyAmount = MoPubReward.DEFAULT_REWARD_AMOUNT;
+        }
+
+        if (mRewardedVideoCurrencyAmount < 0) {
+            MoPubLog.d(
+                    "Negative currency amount specified for rewarded video. Using the default reward amount: " +
+                            MoPubReward.DEFAULT_REWARD_AMOUNT);
+            mRewardedVideoCurrencyAmount = MoPubReward.DEFAULT_REWARD_AMOUNT;
+        }
+
+        mRewardedVastVideoInterstitial.loadInterstitial(activity, new MoPubRewardedVideoListener(),
+                localExtras, serverExtras);
+    }
+
+    @Override
+    protected boolean hasVideoAvailable() {
+        return mIsLoaded;
+    }
+
+    @Override
+    protected void showVideo() {
+        if (hasVideoAvailable()) {
+            MoPubLog.d("Showing MoPub rewarded video.");
+            mRewardedVastVideoInterstitial.showInterstitial();
+        } else {
+            MoPubLog.d("Unable to show MoPub rewarded video");
+        }
+    }
+
+    private class MoPubRewardedVideoListener implements CustomEventInterstitial.CustomEventInterstitialListener, RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener {
+        @Override
+        public void onInterstitialLoaded() {
+            mIsLoaded = true;
+            MoPubRewardedVideoManager.onRewardedVideoLoadSuccess(MoPubRewardedVideo.class,
+                    MOPUB_REWARDED_VIDEO_ID);
+        }
+
+        @Override
+        public void onInterstitialFailed(final MoPubErrorCode errorCode) {
+            switch (errorCode) {
+                case VIDEO_PLAYBACK_ERROR:
+                    MoPubRewardedVideoManager.onRewardedVideoPlaybackError(MoPubRewardedVideo.class,
+                            MOPUB_REWARDED_VIDEO_ID, errorCode);
+                    break;
+                default:
+                    MoPubRewardedVideoManager.onRewardedVideoLoadFailure(MoPubRewardedVideo.class,
+                            MOPUB_REWARDED_VIDEO_ID, errorCode);
+            }
+        }
+
+        @Override
+        public void onInterstitialShown() {
+            MoPubRewardedVideoManager.onRewardedVideoStarted(MoPubRewardedVideo.class,
+                    MOPUB_REWARDED_VIDEO_ID);
+        }
+
+        @Override
+        public void onInterstitialClicked() {
+            MoPubRewardedVideoManager.onRewardedVideoClicked(MoPubRewardedVideo.class,
+                    MOPUB_REWARDED_VIDEO_ID);
+        }
+
+        @Override
+        public void onLeaveApplication() {
+        }
+
+        @Override
+        public void onInterstitialDismissed() {
+            MoPubRewardedVideoManager.onRewardedVideoClosed(MoPubRewardedVideo.class,
+                    MOPUB_REWARDED_VIDEO_ID);
+        }
+
+        @Override
+        public void onVideoComplete() {
+            if (mRewardedVideoCurrencyName == null) {
+                MoPubLog.d("No rewarded video was loaded, so no reward is possible");
+            } else {
+                MoPubRewardedVideoManager.onRewardedVideoCompleted(MoPubRewardedVideo.class,
+                        MOPUB_REWARDED_VIDEO_ID,
+                        MoPubReward.success(mRewardedVideoCurrencyName,
+                                mRewardedVideoCurrencyAmount));
+            }
+        }
+    }
+
+    @Deprecated
+    @VisibleForTesting
+    void setRewardedVastVideoInterstitial(
+            @NonNull final RewardedVastVideoInterstitial rewardedVastVideoInterstitial) {
+        mRewardedVastVideoInterstitial = rewardedVastVideoInterstitial;
+    }
+
+    @Deprecated
+    @VisibleForTesting
+    @Nullable
+    String getRewardedVideoCurrencyName() {
+        return mRewardedVideoCurrencyName;
+    }
+
+    @Deprecated
+    @VisibleForTesting
+    int getRewardedVideoCurrencyAmount() {
+        return mRewardedVideoCurrencyAmount;
+    }
+
+    @Deprecated
+    @VisibleForTesting
+    void setIsLoaded(final boolean isLoaded) {
+        mIsLoaded = isLoaded;
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
similarity index 100%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoListener.java
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
similarity index 64%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
index cc285b42..534d2c6a 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideoManager.java
@@ -2,23 +2,27 @@
 
 import android.app.Activity;
 import android.content.Context;
+import android.location.Location;
 import android.os.Handler;
 import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 
 import com.mopub.common.AdFormat;
+import com.mopub.common.AdReport;
 import com.mopub.common.AdUrlGenerator;
+import com.mopub.common.ClientMetadata;
 import com.mopub.common.Constants;
 import com.mopub.common.DataKeys;
-import com.mopub.common.LocationService;
 import com.mopub.common.MediationSettings;
-import com.mopub.common.MoPub;
 import com.mopub.common.MoPubReward;
 import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
 import com.mopub.common.logging.MoPubLog;
 import com.mopub.common.util.MoPubCollections;
 import com.mopub.common.util.Reflection;
+import com.mopub.common.util.Utils;
 import com.mopub.network.AdRequest;
 import com.mopub.network.AdResponse;
 import com.mopub.network.MoPubNetworkError;
@@ -36,18 +40,25 @@
 import java.util.TreeMap;
 
 /**
+ * Handles requesting Rewarded Video ads and mapping Rewarded Video SDK settings to the CustomEvent
+ * that is being loaded.
  */
 public class MoPubRewardedVideoManager {
     private static MoPubRewardedVideoManager sInstance;
     private static final int DEFAULT_LOAD_TIMEOUT = Constants.THIRTY_SECONDS_MILLIS;
 
+    /**
+     * This must an integer because the backend only supports int types for api version.
+     */
+    public static final int API_VERSION = 1;
+
     @NonNull private final Handler mCallbackHandler;
     @NonNull private WeakReference<Activity> mMainActivity;
     @NonNull private final Context mContext;
     @NonNull private final AdRequestStatusMapping mAdRequestStatus;
     @NonNull private final RewardedVideoData mRewardedVideoData;
     @Nullable private MoPubRewardedVideoListener mVideoListener;
-    
+
     @NonNull private final Set<MediationSettings> mGlobalMediationSettings;
     @NonNull private final Map<String, Set<MediationSettings>> mInstanceMediationSettings;
 
@@ -74,6 +85,29 @@ public void onErrorResponse(final VolleyError volleyError) {
         }
     }
 
+    public static final class RequestParameters {
+        @Nullable public final String mKeywords;
+        @Nullable public final Location mLocation;
+        @Nullable public final String mCustomerId;
+
+        public RequestParameters(@Nullable final String keywords) {
+            this(keywords, null);
+        }
+
+        public RequestParameters(@Nullable final String keywords,
+                @Nullable final Location location) {
+            this(keywords, location, null);
+        }
+
+        public RequestParameters(@Nullable final String keywords, @Nullable final Location location,
+                @Nullable final String customerId) {
+            mKeywords = keywords;
+            mLocation = location;
+            mCustomerId = customerId;
+        }
+    }
+
+
     private MoPubRewardedVideoManager(@NonNull Activity mainActivity, MediationSettings... mediationSettings) {
         mMainActivity = new WeakReference<Activity>(mainActivity);
         mContext = mainActivity.getApplicationContext();
@@ -84,7 +118,7 @@ private MoPubRewardedVideoManager(@NonNull Activity mainActivity, MediationSetti
         mInstanceMediationSettings = new HashMap<String, Set<MediationSettings>>();
         mCustomEventTimeoutHandler = new Handler();
         mTimeoutMap = new HashMap<String, Runnable>();
-        
+
         mAdRequestStatus = new AdRequestStatusMapping();
     }
 
@@ -180,15 +214,28 @@ public static void setVideoListener(@Nullable MoPubRewardedVideoListener listene
      * method will not make a new request if there is already a video loading for this adUnitId.
      *
      * @param adUnitId MoPub adUnitId String
+     * @param requestParameters Optional RequestParameters object containing optional keywords,
+     *                          optional location value, and optional customer id
      * @param mediationSettings Optional instance-level MediationSettings to associate with the
      *                          above adUnitId.
      */
-    public static void loadVideo(@NonNull String adUnitId, @Nullable final MediationSettings... mediationSettings) {
+    public static void loadVideo(@NonNull final String adUnitId,
+            @Nullable final RequestParameters requestParameters,
+            @Nullable final MediationSettings... mediationSettings) {
         if (sInstance == null) {
             logErrorNotInitialized();
             return;
         }
 
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (!TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            MoPubLog.d(String.format(Locale.US, "Did not queue rewarded video request for ad " +
+                    "unit %s. The video is already showing.", adUnitId));
+            return;
+        }
+
+
         // If any instance MediationSettings have been specified, update the internal map.
         // Note: This always clears the MediationSettings for the ad unit, whether or not any
         // MediationSettings have been provided.
@@ -196,15 +243,15 @@ public static void loadVideo(@NonNull String adUnitId, @Nullable final Mediation
         MoPubCollections.addAllNonNull(newInstanceMediationSettings, mediationSettings);
         sInstance.mInstanceMediationSettings.put(adUnitId, newInstanceMediationSettings);
 
+        final String customerId = requestParameters == null ? null : requestParameters.mCustomerId;
+        if (!TextUtils.isEmpty(customerId)) {
+            sInstance.mRewardedVideoData.setCustomerId(customerId);
+        }
+
         final AdUrlGenerator urlGenerator = new WebViewAdUrlGenerator(sInstance.mContext, false);
         final String adUrlString = urlGenerator.withAdUnitId(adUnitId)
-                .withLocation(
-                        LocationService.getLastKnownLocation(
-                                sInstance.mContext,
-                                MoPub.getLocationPrecision(),
-                                MoPub.getLocationAwareness()
-                        )
-                )
+                .withKeywords(requestParameters == null ? null : requestParameters.mKeywords)
+                .withLocation(requestParameters == null ? null : requestParameters.mLocation)
                 .generateUrlString(Constants.HOST);
 
         loadVideo(adUnitId, adUrlString);
@@ -249,6 +296,10 @@ public static void showVideo(@NonNull String adUnitId) {
         if (sInstance != null) {
             final CustomEventRewardedVideo customEvent = sInstance.mRewardedVideoData.getCustomEvent(adUnitId);
             if (isPlayable(adUnitId, customEvent)) {
+                sInstance.mRewardedVideoData.updateCustomEventLastShownRewardMapping(
+                        customEvent.getClass(),
+                        sInstance.mRewardedVideoData.getMoPubReward(adUnitId));
+                sInstance.mRewardedVideoData.setCurrentlyShowingAdUnitId(adUnitId);
                 sInstance.mAdRequestStatus.markPlayed(adUnitId);
                 customEvent.showVideo();
             } else {
@@ -279,12 +330,21 @@ private void onAdSuccess(AdResponse adResponse, String adUnitId) {
         }
 
         final String customEventClassName = adResponse.getCustomEventClassName();
+
         if (customEventClassName == null) {
             MoPubLog.e("Couldn't create custom event, class name was null.");
             failover(adUnitId, MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
             return;
         }
 
+        // We only allow one rewarded video to be loaded at a time for each ad unit. This should
+        // clear out the old rewarded video if there already was one loaded and not played.
+        final CustomEventRewardedVideo oldRewardedVideo = mRewardedVideoData.getCustomEvent(
+                adUnitId);
+        if (oldRewardedVideo != null) {
+            oldRewardedVideo.onInvalidate();
+        }
+
         try {
             // Instantiate a custom event
             final CustomEventRewardedVideo customEvent =
@@ -295,6 +355,21 @@ private void onAdSuccess(AdResponse adResponse, String adUnitId) {
             // Put important data into localExtras...
             final Map<String, Object> localExtras = new TreeMap<String, Object>();
             localExtras.put(DataKeys.AD_UNIT_ID_KEY, adUnitId);
+            localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY,
+                    adResponse.getRewardedVideoCurrencyName());
+            localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY,
+                    adResponse.getRewardedVideoCurrencyAmount());
+            localExtras.put(DataKeys.AD_REPORT_KEY,
+                    new AdReport(adUnitId, ClientMetadata.getInstance(mContext), adResponse));
+            localExtras.put(DataKeys.BROADCAST_IDENTIFIER_KEY, Utils.generateUniqueId());
+
+            localExtras.put(DataKeys.REWARDED_VIDEO_CUSTOMER_ID,
+                    mRewardedVideoData.getCustomerId());
+            mRewardedVideoData.updateAdUnitRewardMapping(adUnitId,
+                    adResponse.getRewardedVideoCurrencyName(),
+                    adResponse.getRewardedVideoCurrencyAmount());
+            mRewardedVideoData.updateAdUnitToServerCompletionUrlMapping(adUnitId,
+                    adResponse.getRewardedVideoCompletionUrl());
 
             Activity mainActivity = mMainActivity.get();
             if (mainActivity == null) {
@@ -409,71 +484,175 @@ protected void forEach(@NonNull final String moPubId) {
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoStarted(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
-            @Override
-            protected void forEach(@NonNull final String moPubId) {
-                if (sInstance.mVideoListener != null) {
-                    sInstance.mVideoListener.onRewardedVideoStarted(moPubId);
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
+                @Override
+                protected void forEach(@NonNull final String moPubId) {
+                    onRewardedVideoStartedAction(moPubId);
                 }
-                TrackingRequest.makeTrackingHttpRequest(
-                        sInstance.mAdRequestStatus.getImpressionTrackerUrlString(moPubId),
-                        sInstance.mContext);
-                sInstance.mAdRequestStatus.clearImpressionUrl(moPubId);
-            }
-        });
+            });
+        } else {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    onRewardedVideoStartedAction(currentlyShowingAdUnitId);
+                }
+            });
+        }
+    }
+
+    private static void onRewardedVideoStartedAction(@NonNull final String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+        if (sInstance.mVideoListener != null) {
+            sInstance.mVideoListener.onRewardedVideoStarted(adUnitId);
+        }
+        TrackingRequest.makeTrackingHttpRequest(
+                sInstance.mAdRequestStatus.getImpressionTrackerUrlString(adUnitId),
+                sInstance.mContext);
+        sInstance.mAdRequestStatus.clearImpressionUrl(adUnitId);
     }
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoPlaybackError(@NonNull final Class<T> customEventClass, final String thirdPartyId, final MoPubErrorCode errorCode) {
-        postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
-            @Override
-            protected void forEach(@NonNull final String moPubId) {
-                if (sInstance.mVideoListener != null) {
-                    sInstance.mVideoListener.onRewardedVideoPlaybackError(moPubId, errorCode);
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
+                @Override
+                protected void forEach(@NonNull final String moPubId) {
+                    onRewardedVideoPlaybackErrorAction(moPubId, errorCode);
                 }
-            }
-        });
+            });
+        } else {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    onRewardedVideoPlaybackErrorAction(currentlyShowingAdUnitId, errorCode);
+                }
+            });
+        }
+    }
 
+    private static void onRewardedVideoPlaybackErrorAction(@NonNull final String adUnitId, @NonNull final MoPubErrorCode errorCode) {
+        Preconditions.checkNotNull(adUnitId);
+        Preconditions.checkNotNull(errorCode);
+        if (sInstance.mVideoListener != null) {
+            sInstance.mVideoListener.onRewardedVideoPlaybackError(adUnitId, errorCode);
+        }
     }
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoClicked(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
-            @Override
-            protected void forEach(@NonNull final String moPubId) {
-                TrackingRequest.makeTrackingHttpRequest(
-                        sInstance.mAdRequestStatus.getClickTrackerUrlString(moPubId),
-                        sInstance.mContext);
-                sInstance.mAdRequestStatus.clearClickUrl(moPubId);
-            }
-        });
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
+                @Override
+                protected void forEach(@NonNull final String moPubId) {
+                    onRewardedVideoClickedAction(moPubId);
+                }
+            });
+        } else {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    onRewardedVideoClickedAction(currentlyShowingAdUnitId);
+                }
+            });
+        }
+    }
+
+    private static void onRewardedVideoClickedAction(@NonNull final String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+        TrackingRequest.makeTrackingHttpRequest(
+                sInstance.mAdRequestStatus.getClickTrackerUrlString(adUnitId),
+                sInstance.mContext);
+        sInstance.mAdRequestStatus.clearClickUrl(adUnitId);
     }
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoClosed(@NonNull final Class<T> customEventClass, final String thirdPartyId) {
-        postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
-            @Override
-            protected void forEach(@NonNull final String moPubId) {
-                if (sInstance.mVideoListener != null) {
-                    sInstance.mVideoListener.onRewardedVideoClosed(moPubId);
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+            postToInstance(new ForEachMoPubIdRunnable(customEventClass, thirdPartyId) {
+                @Override
+                protected void forEach(@NonNull final String moPubId) {
+                    onRewardedVideoClosedAction(moPubId);
                 }
-            }
-        });
+            });
+        } else {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    onRewardedVideoClosedAction(currentlyShowingAdUnitId);
+                }
+            });
+        }
+        sInstance.mRewardedVideoData.setCurrentlyShowingAdUnitId(null);
+    }
+
+    private static void onRewardedVideoClosedAction(@NonNull final String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+        if (sInstance.mVideoListener != null) {
+            sInstance.mVideoListener.onRewardedVideoClosed(adUnitId);
+        }
     }
 
     public static <T extends CustomEventRewardedVideo>
     void onRewardedVideoCompleted(@NonNull final Class<T> customEventClass, final String thirdPartyId, @NonNull final MoPubReward moPubReward) {
         // Unlike other callbacks in this class, only call the listener once with all the MoPubIds in the matching set.
-        postToInstance(new Runnable() {
-            @Override
-            public void run() {
-                final Set<String> moPubIds = sInstance.mRewardedVideoData.getMoPubIdsForAdNetwork(customEventClass, thirdPartyId);
-                Set<String> rewarded = new HashSet<String>(moPubIds);
-                if (sInstance.mVideoListener != null) {
-                    sInstance.mVideoListener.onRewardedVideoCompleted(rewarded, moPubReward);
+        final String currentlyShowingAdUnitId =
+                sInstance.mRewardedVideoData.getCurrentlyShowingAdUnitId();
+        final String serverCompletionUrl = sInstance.mRewardedVideoData.getServerCompletionUrl(
+                currentlyShowingAdUnitId);
+        if (TextUtils.isEmpty(serverCompletionUrl)) {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    final MoPubReward chosenReward = chooseReward(
+                            sInstance.mRewardedVideoData.getLastShownMoPubReward(customEventClass),
+                            moPubReward);
+
+                    Set<String> rewardedIds = new HashSet<String>();
+                    if (TextUtils.isEmpty(currentlyShowingAdUnitId)) {
+                        final Set<String> moPubIds = sInstance.mRewardedVideoData.getMoPubIdsForAdNetwork(
+                                customEventClass, thirdPartyId);
+                        rewardedIds.addAll(moPubIds);
+                    } else {
+                        // If we know which ad unit is showing, only reward the currently showing
+                        // ad unit.
+                        rewardedIds.add(currentlyShowingAdUnitId);
+                    }
+
+                    if (sInstance.mVideoListener != null) {
+                        sInstance.mVideoListener.onRewardedVideoCompleted(rewardedIds,
+                                chosenReward);
+                    }
                 }
-            }
-        });
+            });
+        } else {
+            postToInstance(new Runnable() {
+                @Override
+                public void run() {
+                    RewardedVideoCompletionRequestHandler.makeRewardedVideoCompletionRequest(
+                            sInstance.mContext,
+                            serverCompletionUrl,
+                            sInstance.mRewardedVideoData.getCustomerId());
+                }
+            });
+        }
+    }
+
+    @VisibleForTesting
+    static MoPubReward chooseReward(@Nullable final MoPubReward moPubReward, @NonNull final MoPubReward networkReward) {
+        if (!networkReward.isSuccessful()) {
+            return networkReward;
+        }
+
+        return moPubReward != null ? moPubReward : networkReward;
     }
 
     /**
@@ -520,4 +699,14 @@ public void run() {
             }
         }
     }
+
+    @Deprecated
+    @VisibleForTesting
+    @Nullable
+    static RewardedVideoData getRewardedVideoData() {
+        if (sInstance != null) {
+            return sInstance.mRewardedVideoData;
+        }
+        return null;
+    }
 }
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
new file mode 100644
index 00000000..7380fbf2
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/MoPubRewardedVideos.java
@@ -0,0 +1,53 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.MediationSettings;
+import com.mopub.common.Preconditions;
+
+/**
+ * MoPubRewardedVideos is a utility class that holds controller methods for other MoPub rewarded
+ * video classes.
+ */
+public class MoPubRewardedVideos {
+
+    public static void initializeRewardedVideo(@NonNull Activity activity,
+            MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(activity);
+
+        MoPubRewardedVideoManager.init(activity, mediationSettings);
+    }
+
+    public static void setRewardedVideoListener(@Nullable MoPubRewardedVideoListener listener) {
+        MoPubRewardedVideoManager.setVideoListener(listener);
+    }
+
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.loadVideo(adUnitId, null, mediationSettings);
+    }
+
+    public static void loadRewardedVideo(@NonNull String adUnitId,
+            @Nullable MoPubRewardedVideoManager.RequestParameters requestParameters,
+            @Nullable MediationSettings... mediationSettings) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.loadVideo(adUnitId, requestParameters, mediationSettings);
+    }
+
+    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+
+        return MoPubRewardedVideoManager.hasVideo(adUnitId);
+    }
+
+    public static void showRewardedVideo(@NonNull String adUnitId) {
+        Preconditions.checkNotNull(adUnitId);
+
+        MoPubRewardedVideoManager.showVideo(adUnitId);
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java
new file mode 100644
index 00000000..3e1b6c7d
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVastVideoInterstitial.java
@@ -0,0 +1,60 @@
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.VisibleForTesting;
+
+import java.util.Map;
+
+class RewardedVastVideoInterstitial extends VastVideoInterstitial {
+
+    interface CustomEventRewardedVideoInterstitialListener extends CustomEventInterstitialListener {
+        void onVideoComplete();
+    }
+
+    @Nullable private RewardedVideoBroadcastReceiver mRewardedVideoBroadcastReceiver;
+
+    public RewardedVastVideoInterstitial() {
+        super();
+    }
+
+    @Override
+    public void loadInterstitial(
+            Context context,
+            CustomEventInterstitialListener customEventInterstitialListener,
+            Map<String, Object> localExtras,
+            Map<String, String> serverExtras) {
+        super.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
+
+        if (customEventInterstitialListener instanceof CustomEventRewardedVideoInterstitialListener) {
+            mRewardedVideoBroadcastReceiver = new RewardedVideoBroadcastReceiver(
+                    (CustomEventRewardedVideoInterstitialListener) customEventInterstitialListener,
+                    mBroadcastIdentifier);
+            mRewardedVideoBroadcastReceiver.register(mRewardedVideoBroadcastReceiver, context);
+        }
+    }
+
+    @Override
+    public void onVastVideoConfigurationPrepared(final VastVideoConfig vastVideoConfig) {
+        if (vastVideoConfig != null) {
+            vastVideoConfig.setIsRewardedVideo(true);
+        }
+        super.onVastVideoConfigurationPrepared(vastVideoConfig);
+    }
+
+    @Override
+    public void onInvalidate() {
+        super.onInvalidate();
+        if (mRewardedVideoBroadcastReceiver != null) {
+            mRewardedVideoBroadcastReceiver.unregister(mRewardedVideoBroadcastReceiver);
+        }
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    @Nullable
+    RewardedVideoBroadcastReceiver getRewardedVideoBroadcastReceiver() {
+        return mRewardedVideoBroadcastReceiver;
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
new file mode 100644
index 00000000..4ec3c111
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoBroadcastReceiver.java
@@ -0,0 +1,51 @@
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.IntentActions;
+
+public class RewardedVideoBroadcastReceiver extends BaseBroadcastReceiver {
+
+    private static IntentFilter sIntentFilter;
+
+    @Nullable
+    private RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener mRewardedVideoListener;
+
+    public RewardedVideoBroadcastReceiver(
+            @Nullable RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener rewardedVideoListener,
+            final long broadcastIdentifier) {
+        super(broadcastIdentifier);
+        mRewardedVideoListener = rewardedVideoListener;
+        getIntentFilter();
+    }
+
+    @NonNull
+    public IntentFilter getIntentFilter() {
+        if (sIntentFilter == null) {
+            sIntentFilter = new IntentFilter();
+            sIntentFilter.addAction(IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
+        }
+        return sIntentFilter;
+    }
+
+    @Override
+    public void onReceive(@NonNull final Context context, @NonNull final Intent intent) {
+        if (mRewardedVideoListener == null) {
+            return;
+        }
+
+        if (!shouldConsumeBroadcast(intent)) {
+            return;
+        }
+
+        final String action = intent.getAction();
+        if (IntentActions.ACTION_REWARDED_VIDEO_COMPLETE.equals(action)) {
+            mRewardedVideoListener.onVideoComplete();
+            unregister(this);
+        }
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java
new file mode 100644
index 00000000..50f10267
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequest.java
@@ -0,0 +1,42 @@
+package com.mopub.mobileads;
+
+import android.support.annotation.NonNull;
+
+import com.mopub.volley.NetworkResponse;
+import com.mopub.volley.Request;
+import com.mopub.volley.Response;
+import com.mopub.volley.RetryPolicy;
+import com.mopub.volley.toolbox.HttpHeaderParser;
+
+/**
+ * The actual class making the video completion request. Since we actually only care about the
+ * status code of the request, that's the only thing that is delivered.
+ */
+public class RewardedVideoCompletionRequest extends Request<Integer> {
+
+    public interface RewardedVideoCompletionRequestListener extends Response.ErrorListener {
+        void onResponse(Integer response);
+    }
+
+    @NonNull final RewardedVideoCompletionRequestListener mListener;
+
+    public RewardedVideoCompletionRequest(@NonNull final String url,
+            @NonNull final RetryPolicy retryPolicy,
+            @NonNull final RewardedVideoCompletionRequestListener listener) {
+        super(Method.GET, url, listener);
+        setShouldCache(false);
+        setRetryPolicy(retryPolicy);
+        mListener = listener;
+    }
+
+    @Override
+    protected Response<Integer> parseNetworkResponse(final NetworkResponse networkResponse) {
+        return Response.success(networkResponse.statusCode,
+                HttpHeaderParser.parseCacheHeaders(networkResponse));
+    }
+
+    @Override
+    protected void deliverResponse(final Integer response) {
+        mListener.onResponse(response);
+    }
+}
diff --git a/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
new file mode 100644
index 00000000..5e37c66b
--- /dev/null
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandler.java
@@ -0,0 +1,156 @@
+package com.mopub.mobileads;
+
+import android.content.Context;
+import android.net.Uri;
+import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+
+import com.mopub.common.MoPub;
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+import com.mopub.common.logging.MoPubLog;
+import com.mopub.network.Networking;
+import com.mopub.volley.DefaultRetryPolicy;
+import com.mopub.volley.RequestQueue;
+import com.mopub.volley.VolleyError;
+
+/**
+ * Handles the server-to-server rewarded video completion handshake.
+ */
+public class RewardedVideoCompletionRequestHandler implements
+        RewardedVideoCompletionRequest.RewardedVideoCompletionRequestListener {
+
+    /**
+     * Request timeouts. Use the last value if the current retry is higher than the number of values
+     * in this list.
+     */
+    static final int[] RETRY_TIMES = {5000, 10000, 20000, 40000, 60000};
+
+    /**
+     * The actual request should take a little shorter to have the runnable run at the set time and
+     * have the previous request finish.
+     */
+    static final int REQUEST_TIMEOUT_DELAY = 1000;
+
+    static final int MAX_RETRIES = 17;
+    private static final String CUSTOMER_ID_KEY = "&customer_id=";
+    private static final String SDK_VERSION_KEY = "&nv=";
+    private static final String API_VERSION_KEY = "&v=";
+
+    @NonNull private final String mUrl;
+    @NonNull private final Handler mHandler;
+    @NonNull private final RequestQueue mRequestQueue;
+    private int mRetryCount;
+    private volatile boolean mShouldStop;
+
+    RewardedVideoCompletionRequestHandler(@NonNull final Context context,
+            @NonNull final String url, @Nullable final String customerId) {
+        this(context, url, customerId, new Handler());
+    }
+
+    RewardedVideoCompletionRequestHandler(@NonNull final Context context,
+            @NonNull final String url,
+            @Nullable final String customerId,
+            @NonNull final Handler handler) {
+        Preconditions.checkNotNull(context);
+        Preconditions.checkNotNull(url);
+        mUrl = appendParameters(url, customerId);
+        mRetryCount = 0;
+        mHandler = handler;
+        mRequestQueue = Networking.getRequestQueue(context);
+    }
+
+    void makeRewardedVideoCompletionRequest() {
+        if (mShouldStop) {
+            // If we make a successful request, cancel all pending requests, and don't make more.
+            mRequestQueue.cancelAll(mUrl);
+            return;
+        }
+
+        final RewardedVideoCompletionRequest rewardedVideoCompletionRequest =
+                new RewardedVideoCompletionRequest(mUrl,
+                        new DefaultRetryPolicy(getTimeout(mRetryCount) - REQUEST_TIMEOUT_DELAY,
+                                0, 0f), this);
+        rewardedVideoCompletionRequest.setTag(mUrl);
+        mRequestQueue.add(rewardedVideoCompletionRequest);
+
+        if (mRetryCount >= MAX_RETRIES) {
+            MoPubLog.d("Exceeded number of retries for rewarded video completion request.");
+            return;
+        }
+
+        mHandler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                makeRewardedVideoCompletionRequest();
+            }
+        }, getTimeout(mRetryCount));
+        mRetryCount++;
+    }
+
+    @Override
+    public void onResponse(final Integer response) {
+        // Only consider it a failure if we get a 5xx status code.
+        if (response != null && !(response >= 500 && response < 600)) {
+            mShouldStop = true;
+        }
+    }
+
+    @Override
+    public void onErrorResponse(final VolleyError volleyError) {
+        if (volleyError != null && volleyError.networkResponse != null &&
+                !(volleyError.networkResponse.statusCode >= 500
+                        && volleyError.networkResponse.statusCode < 600)) {
+            mShouldStop = true;
+        }
+    }
+
+    public static void makeRewardedVideoCompletionRequest(@Nullable final Context context,
+            @Nullable final String url,
+            @Nullable final String customerId) {
+        if (TextUtils.isEmpty(url) || context == null) {
+            return;
+        }
+
+        new RewardedVideoCompletionRequestHandler(context,
+                url, customerId).makeRewardedVideoCompletionRequest();
+    }
+
+    static int getTimeout(int retryCount) {
+        if (retryCount >= 0 && retryCount < RETRY_TIMES.length) {
+            return RETRY_TIMES[retryCount];
+        } else {
+            return RETRY_TIMES[RETRY_TIMES.length - 1];
+        }
+    }
+
+    private static String appendParameters(@NonNull final String url,
+            @Nullable final String customerId) {
+        Preconditions.checkNotNull(url);
+
+        return url +
+                CUSTOMER_ID_KEY + (customerId == null ? "" : Uri.encode(customerId)) +
+                SDK_VERSION_KEY + Uri.encode(MoPub.SDK_VERSION) +
+                API_VERSION_KEY + MoPubRewardedVideoManager.API_VERSION;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    boolean getShouldStop() {
+        return mShouldStop;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    int getRetryCount() {
+        return mRetryCount;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    void setRetryCount(int retryCount) {
+        mRetryCount = retryCount;
+    }
+}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
similarity index 53%
rename from mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java
rename to mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
index c3d45cec..1023820d 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/RewardedVideoData.java
+++ b/mopub-sdk/mopub-sdk-rewardedvideo/src/main/java/com/mopub/mobileads/RewardedVideoData.java
@@ -2,8 +2,13 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.text.TextUtils;
 import android.util.Pair;
 
+import com.mopub.common.MoPubReward;
+import com.mopub.common.Preconditions;
+import com.mopub.common.VisibleForTesting;
+
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -19,12 +24,26 @@
     @NonNull
     private final Map<String, CustomEventRewardedVideo> mAdUnitToCustomEventMap;
     @NonNull
+    private final Map<String, MoPubReward> mAdUnitToRewardMap;
+    @NonNull
+    private final Map<String, String> mAdUnitToServerCompletionUrlMap;
+    @NonNull
+    private final Map<Class<? extends CustomEventRewardedVideo>, MoPubReward> mCustomEventToRewardMap;
+    @NonNull
     private final Map<TwoPartKey, Set<String>> mCustomEventToMoPubIdMap;
     @NonNull
     private final Set<CustomEventRewardedVideo.CustomEventRewardedVideoListener> mAdNetworkListeners;
+    @Nullable
+    private String mCurrentlyShowingAdUnitId;
+    @Nullable
+    private String mCustomerId;
+
 
     RewardedVideoData() {
         mAdUnitToCustomEventMap = new TreeMap<String, CustomEventRewardedVideo>();
+        mAdUnitToRewardMap = new TreeMap<String, MoPubReward>();
+        mAdUnitToServerCompletionUrlMap = new TreeMap<String, String>();
+        mCustomEventToRewardMap = new HashMap<Class<? extends CustomEventRewardedVideo>, MoPubReward>();
         mCustomEventToMoPubIdMap = new HashMap<TwoPartKey, Set<String>>();
         mAdNetworkListeners = new HashSet<CustomEventRewardedVideo.CustomEventRewardedVideoListener>();
     }
@@ -34,6 +53,24 @@ CustomEventRewardedVideo getCustomEvent(@NonNull String moPubId) {
         return mAdUnitToCustomEventMap.get(moPubId);
     }
 
+    @Nullable
+    MoPubReward getMoPubReward(@Nullable String moPubId) {
+        return mAdUnitToRewardMap.get(moPubId);
+    }
+
+    @Nullable
+    String getServerCompletionUrl(@Nullable final String moPubId) {
+        if (TextUtils.isEmpty(moPubId)) {
+            return null;
+        }
+        return mAdUnitToServerCompletionUrlMap.get(moPubId);
+    }
+
+    @Nullable
+    MoPubReward getLastShownMoPubReward(@NonNull Class<? extends CustomEventRewardedVideo> customEventClass) {
+        return mCustomEventToRewardMap.get(customEventClass);
+    }
+
     @NonNull
     Set<String> getMoPubIdsForAdNetwork(
             @NonNull Class<? extends CustomEventRewardedVideo> customEventClass,
@@ -65,6 +102,53 @@ void updateAdUnitCustomEventMapping(
         associateCustomEventWithMoPubId(customEvent.getClass(), adNetworkId, moPubId);
     }
 
+    void updateAdUnitRewardMapping(
+            @NonNull String moPubId,
+            @Nullable String currencyName,
+            @Nullable String currencyAmount) {
+        Preconditions.checkNotNull(moPubId);
+        if (currencyName == null || currencyAmount == null) {
+            // If we get here it means that the reward was not set on the frontend ad unit
+            mAdUnitToRewardMap.remove(moPubId);
+            return;
+        }
+
+        int intCurrencyAmount;
+        try {
+            intCurrencyAmount = Integer.parseInt(currencyAmount);
+        } catch(NumberFormatException e) {
+            return;
+        }
+
+        if (intCurrencyAmount < 0) {
+            return;
+        }
+
+        mAdUnitToRewardMap.put(moPubId, MoPubReward.success(currencyName, intCurrencyAmount));
+    }
+
+    void updateAdUnitToServerCompletionUrlMapping(@NonNull final String moPubId,
+            @Nullable final String serverCompletionUrl) {
+        Preconditions.checkNotNull(moPubId);
+        mAdUnitToServerCompletionUrlMap.put(moPubId, serverCompletionUrl);
+    }
+
+    /**
+     * This method should be called right before the rewarded video is shown in order to store the
+     * reward associated with the custom event class. If called earlier in the rewarded lifecycle,
+     * it's possible that this mapping will be overridden by another reward value before the video
+     * is shown.
+     *
+     * @param customEventClass the rewarded video custom event class
+     * @param moPubReward the reward from teh MoPub ad server returned in HTTP headers
+     */
+    void updateCustomEventLastShownRewardMapping(
+            @NonNull final Class<? extends CustomEventRewardedVideo> customEventClass,
+            @Nullable final MoPubReward moPubReward) {
+        Preconditions.checkNotNull(customEventClass);
+        mCustomEventToRewardMap.put(customEventClass, moPubReward);
+    }
+
     void associateCustomEventWithMoPubId(
             @NonNull Class<? extends CustomEventRewardedVideo> customEventClass,
             @NonNull String adNetworkId,
@@ -100,6 +184,37 @@ void associateCustomEventWithMoPubId(
         moPubIds.add(moPubId);
     }
 
+    void setCurrentlyShowingAdUnitId(@Nullable final String currentAdUnitId) {
+        mCurrentlyShowingAdUnitId = currentAdUnitId;
+    }
+
+    @Nullable
+    String getCurrentlyShowingAdUnitId() {
+        return mCurrentlyShowingAdUnitId;
+    }
+
+    void setCustomerId(@Nullable final String customerId) {
+        mCustomerId = customerId;
+    }
+
+    @Nullable
+    String getCustomerId() {
+        return mCustomerId;
+    }
+
+    @VisibleForTesting
+    @Deprecated
+    void clear() {
+        mAdUnitToCustomEventMap.clear();
+        mAdUnitToRewardMap.clear();
+        mAdUnitToServerCompletionUrlMap.clear();
+        mCustomEventToRewardMap.clear();
+        mCustomEventToMoPubIdMap.clear();
+        mAdNetworkListeners.clear();
+        mCurrentlyShowingAdUnitId = null;
+        mCustomerId = null;
+    }
+
     private static class TwoPartKey extends Pair<Class<? extends CustomEventRewardedVideo>, String> {
         @NonNull
         final Class<? extends CustomEventRewardedVideo> customEventClass;
diff --git a/mopub-sdk/pom.xml b/mopub-sdk/pom.xml
index 5b6fcdf0..011a3234 100644
--- a/mopub-sdk/pom.xml
+++ b/mopub-sdk/pom.xml
@@ -21,20 +21,20 @@
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-annotations</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>support-v4</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
 
         <dependency>
             <groupId>com.android.support</groupId>
             <artifactId>recyclerview-v7</artifactId>
-            <version>22.0.0</version>
+            <version>23.1.1</version>
             <type>aar</type>
         </dependency>
         
@@ -47,7 +47,7 @@
         <dependency>
             <groupId>com.google.android.exoplayer</groupId>
             <artifactId>exoplayer</artifactId>
-            <version>r1.4.2</version>
+            <version>r1.5.6</version>
             <type>aar</type>
         </dependency>
 
diff --git a/mopub-sdk/publisher.gradle b/mopub-sdk/publisher.gradle
new file mode 100644
index 00000000..ee0f09ea
--- /dev/null
+++ b/mopub-sdk/publisher.gradle
@@ -0,0 +1,63 @@
+apply plugin: 'com.android.library'
+apply plugin: 'com.novoda.bintray-release'
+
+def siteUrl = 'https://github.com/mopub/mopub-android-sdk'
+def gitUrl = 'https://github.com/mopub/mopub-android-sdk.git'
+def bintrayRepo = 'mopub-android-sdk'
+def bintrayUserOrg = 'mopub'
+// Put your credentials (bintray.user, bintray.apikey) in ~/.gradle/gradle.properties
+
+if (JavaVersion.current().isJava8Compatible()) {
+    allprojects {
+        tasks.withType(Javadoc) {
+            // The javadoc task in Java 8 is too strict and throws unnecessary syntax errors
+            // if our comments fail to abide by the new standard.
+            options.addStringOption('Xdoclint:none', '-quiet')
+        }
+    }
+}
+
+android.libraryVariants.all { variant ->
+    def name = variant.buildType.name
+    def task = project.tasks.create "jar${name.capitalize()}", Jar
+
+    task.dependsOn variant.javaCompile
+    task.from variant.javaCompile.destinationDir
+    artifacts.add('archives', task);
+}
+
+android.libraryVariants.all { variant ->
+    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
+        title = project.ext.displayName
+        description "Generates Javadoc for $variant.name."
+        source = variant.javaCompile.source
+        classpath += files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
+        classpath += project.configurations.compile
+
+        options {
+            links "http://docs.oracle.com/javase/7/docs/api/"
+            linksOffline "https://developer.android.com/reference","${android.sdkDirectory}/docs/reference"
+        }
+
+        exclude '**/BuildConfig.java'
+        exclude '**/R.java'
+    }
+}
+
+publish {
+    repoName = bintrayRepo
+    userOrg = bintrayUserOrg
+    groupId = project.group
+    artifactId = project.ext.projectName
+    uploadName = project.ext.uploadName
+    version = project.version
+    description = project.description
+    website = siteUrl
+    repository = gitUrl
+
+    bintrayUser = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
+    bintrayKey = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""
+
+    autoPublish = true
+    dryRun = false
+}
diff --git a/mopub-sdk/res/.README b/mopub-sdk/res/.README
deleted file mode 100644
index 902f3db1..00000000
--- a/mopub-sdk/res/.README
+++ /dev/null
@@ -1 +0,0 @@
-This res directory exists to allow building on Eclipse.
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
new file mode 100644
index 00000000..9b65bf09
--- /dev/null
+++ b/mopub-sdk/shared-build.gradle
@@ -0,0 +1,79 @@
+apply plugin: 'com.android.library'
+
+repositories {
+    mavenCentral()
+    jcenter()
+    flatDir {
+        dirs project(':mopub-sdk').file('../libs')
+    }
+}
+
+project.group = 'com.mopub'
+project.version = '4.9.0'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion '23.0.2'
+    lintOptions { abortOnError false }
+    useLibrary 'org.apache.http.legacy'
+
+    defaultConfig {
+        versionCode 44
+        versionName version
+        minSdkVersion 9
+        targetSdkVersion 23
+        consumerProguardFiles project(':mopub-sdk').file('proguard.txt')
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'src/main/AndroidManifest.xml'
+            java.srcDirs = ['src/main/java']
+            resources.srcDirs = ['src/main/resources']
+            aidl.srcDirs = ['src/main']
+            renderscript.srcDirs = ['src/main']
+            res.srcDirs = ['res']
+            assets.srcDirs = ['assets']
+        }
+    }
+
+    testOptions {
+        unitTests {
+            // This causes android platform methods from the test JAR
+            // to return null, false, etc instead of throwing an exception.
+            // We should periodically disable this and tackle the broken tests
+            // as it exposes when we are hitting platform APIs in our tests.
+            // If these tests *require* platform APIs we may want to make them
+            // connected tests instead.
+            returnDefaultValues = true
+
+            // Test JVM settings since we have a lot of classes loaded.
+            all {
+                jvmArgs '-XX:MaxPermSize=4096m', '-Xmx8192m'
+                forkEvery 200
+            }
+        }
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'),
+                    project(':mopub-sdk').file('proguard.txt')
+        }
+
+        debug {
+            minifyEnabled false
+        }
+    }
+
+    // Note: You will also need a local.properties file to set the location of the SDK in the same
+    // way that the existing SDK requires, using the sdk.dir property.
+    // Alternatively, you can set an environment variable called ANDROID_HOME. There is no
+    // difference between the two methods, you can use the one you prefer.
+}
+
+dependencies {
+    compile 'com.android.support:support-v4:23.1.1'
+    compile 'com.android.support:support-annotations:23.1.1'
+}
diff --git a/mopub-sdk/AndroidManifest.xml b/mopub-sdk/src/main/AndroidManifest.xml
similarity index 87%
rename from mopub-sdk/AndroidManifest.xml
rename to mopub-sdk/src/main/AndroidManifest.xml
index 42216cc5..144e231e 100644
--- a/mopub-sdk/AndroidManifest.xml
+++ b/mopub-sdk/src/main/AndroidManifest.xml
@@ -5,7 +5,7 @@
     android:versionName="1.0">
     <uses-sdk
         android:minSdkVersion="9"
-        android:targetSdkVersion="22"/>
+        android:targetSdkVersion="23"/>
     <application/>
 </manifest>
 
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java b/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
deleted file mode 100644
index d92f8d5d..00000000
--- a/mopub-sdk/src/main/java/com/mopub/common/LifecycleListener.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package com.mopub.common;
-
-import android.app.Activity;
-import android.support.annotation.NonNull;
-
-/**
- * This is a uniform interface to 3rd party SDKs that need to know when Activity lifecycle events
- * occur.
- */
-public interface LifecycleListener {
-
-    public void onCreate(@NonNull Activity activity);
-    public void onStart(@NonNull Activity activity);
-    public void onPause(@NonNull Activity activity);
-    public void onResume(@NonNull Activity activity);
-
-    public void onRestart(@NonNull Activity activity);
-    public void onStop(@NonNull Activity activity);
-    public void onDestroy(@NonNull Activity activity);
-    public void onBackPressed(@NonNull Activity activity);
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/LocationService.java b/mopub-sdk/src/main/java/com/mopub/common/LocationService.java
deleted file mode 100644
index 6602db66..00000000
--- a/mopub-sdk/src/main/java/com/mopub/common/LocationService.java
+++ /dev/null
@@ -1,116 +0,0 @@
-package com.mopub.common;
-
-import android.content.Context;
-import android.location.Location;
-import android.location.LocationManager;
-import android.support.annotation.Nullable;
-
-import com.mopub.common.logging.MoPubLog;
-
-import java.math.BigDecimal;
-
-public class LocationService {
-    public static enum LocationAwareness {
-        NORMAL, TRUNCATED, DISABLED;
-
-        // These deprecated methods are only used to support the deprecated methods
-        // MoPubView#setLocationAwareness, MoPubInterstitial#setLocationAwareness
-        // and should not be used elsewhere. Unless interacting with those methods, use
-        // the type MoPub.LocationAwareness
-
-        @Deprecated
-        public MoPub.LocationAwareness getNewLocationAwareness() {
-            if (this == TRUNCATED) {
-                return MoPub.LocationAwareness.TRUNCATED;
-            } else if (this == DISABLED) {
-                return MoPub.LocationAwareness.DISABLED;
-            } else {
-                return MoPub.LocationAwareness.NORMAL;
-            }
-        }
-
-        @Deprecated
-        public static LocationAwareness
-                fromMoPubLocationAwareness(MoPub.LocationAwareness awareness) {
-            if (awareness == MoPub.LocationAwareness.DISABLED) {
-                return DISABLED;
-            } else if (awareness == MoPub.LocationAwareness.TRUNCATED) {
-                return TRUNCATED;
-            } else {
-                return NORMAL;
-            }
-        }
-    }
-
-    /*
-     * Returns the last known location of the device using its GPS and network location providers.
-     * May be null if:
-     * - Location permissions are not requested in the Android manifest file
-     * - The location providers don't exist
-     * - Location awareness is disabled in the parent MoPubView
-     */
-    @Nullable
-    public static Location getLastKnownLocation(final Context context,
-            final int locationPrecision,
-            final MoPub.LocationAwareness locationLocationAwareness) {
-        Location result;
-
-        if (locationLocationAwareness == MoPub.LocationAwareness.DISABLED) {
-            return null;
-        }
-
-        LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
-        Location gpsLocation = null;
-        try {
-            gpsLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
-        } catch (SecurityException e) {
-            MoPubLog.d("Failed to retrieve GPS location: access appears to be disabled.");
-        } catch (IllegalArgumentException e) {
-            MoPubLog.d("Failed to retrieve GPS location: device has no GPS provider.");
-        } catch (NullPointerException e) { // This happens on 4.2.2 on a few Android TV devices
-            MoPubLog.d("Failed to retrieve GPS location: device has no GPS provider.");
-        }
-
-        Location networkLocation = null;
-        try {
-            networkLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
-        } catch (SecurityException e) {
-            MoPubLog.d("Failed to retrieve network location: access appears to be disabled.");
-        } catch (IllegalArgumentException e) {
-            MoPubLog.d("Failed to retrieve network location: device has no network provider.");
-        }  catch (NullPointerException e) { // This happens on 4.2.2 on a few Android TV devices
-            MoPubLog.d("Failed to retrieve GPS location: device has no network provider.");
-        }
-
-        if (gpsLocation == null && networkLocation == null) {
-            return null;
-        } else if (gpsLocation != null && networkLocation != null) {
-            if (gpsLocation.getTime() > networkLocation.getTime()) {
-                result = gpsLocation;
-            } else {
-                result = networkLocation;
-            }
-        } else if (gpsLocation != null) {
-            result = gpsLocation;
-        } else {
-            result = networkLocation;
-        }
-
-        // Truncate latitude/longitude to the number of digits specified by locationPrecision.
-        if (locationLocationAwareness == MoPub.LocationAwareness.TRUNCATED) {
-            double lat = result.getLatitude();
-            double truncatedLat = BigDecimal.valueOf(lat)
-                    .setScale(locationPrecision, BigDecimal.ROUND_HALF_DOWN)
-                    .doubleValue();
-            result.setLatitude(truncatedLat);
-
-            double lon = result.getLongitude();
-            double truncatedLon = BigDecimal.valueOf(lon)
-                    .setScale(locationPrecision, BigDecimal.ROUND_HALF_DOWN)
-                    .doubleValue();
-            result.setLongitude(truncatedLon);
-        }
-
-        return result;
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java b/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
deleted file mode 100644
index 95e0ce62..00000000
--- a/mopub-sdk/src/main/java/com/mopub/common/MoPub.java
+++ /dev/null
@@ -1,102 +0,0 @@
-package com.mopub.common;
-
-import android.app.Activity;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-
-import com.mopub.mobileads.MoPubRewardedVideoListener;
-import com.mopub.mobileads.MoPubRewardedVideoManager;
-
-public class MoPub {
-    public static final String SDK_VERSION = "4.2.0";
-
-    public static enum LocationAwareness { NORMAL, TRUNCATED, DISABLED }
-
-    private static final int DEFAULT_LOCATION_PRECISION = 6;
-    private static volatile LocationAwareness sLocationLocationAwareness = LocationAwareness.NORMAL;
-    private static volatile int sLocationPrecision = DEFAULT_LOCATION_PRECISION;
-
-    public static LocationAwareness getLocationAwareness() {
-        return sLocationLocationAwareness;
-    }
-
-    public static void setLocationAwareness(LocationAwareness locationAwareness) {
-        sLocationLocationAwareness = locationAwareness;
-    }
-
-    public static int getLocationPrecision() {
-        return sLocationPrecision;
-    }
-
-    /**
-     * Sets the precision to use when the SDK's location awareness is set
-     * to {@link com.mopub.common.MoPub.LocationAwareness#TRUNCATED}.
-     */
-    public static void setLocationPrecision(int precision) {
-        sLocationPrecision = Math.min(Math.max(0, precision), DEFAULT_LOCATION_PRECISION);
-    }
-
-
-    //////// MoPub LifecycleListener messages ////////
-
-    public static void onCreate(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onCreate(activity);
-        updateActivity(activity);
-    }
-
-    public static void onStart(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onStart(activity);
-        updateActivity(activity);
-    }
-
-    public static void onPause(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onPause(activity);
-    }
-
-    public static void onResume(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onResume(activity);
-        updateActivity(activity);
-    }
-
-    public static void onRestart(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onRestart(activity);
-        updateActivity(activity);
-    }
-
-    public static void onStop(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onStop(activity);
-    }
-
-    public static void onDestroy(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onDestroy(activity);
-    }
-
-    public static void onBackPressed(@NonNull final Activity activity) {
-        MoPubLifecycleManager.getInstance(activity).onBackPressed(activity);
-    }
-
-    ////////// MoPub RewardedVideoControl methods //////////
-    public static void initializeRewardedVideo(@NonNull Activity activity, MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.init(activity, mediationSettings);
-    }
-
-    private static void updateActivity(@NonNull Activity activity) {
-        MoPubRewardedVideoManager.updateActivity(activity);
-    }
-
-    public static void setRewardedVideoListener(@Nullable MoPubRewardedVideoListener listener) {
-        MoPubRewardedVideoManager.setVideoListener(listener);
-    }
-
-    public static void loadRewardedVideo(@NonNull String adUnitId, @Nullable MediationSettings... mediationSettings) {
-        MoPubRewardedVideoManager.loadVideo(adUnitId, mediationSettings);
-    }
-
-    public static boolean hasRewardedVideo(@NonNull String adUnitId) {
-        return MoPubRewardedVideoManager.hasVideo(adUnitId);
-    }
-
-    public static void showRewardedVideo(@NonNull String adUnitId) {
-        MoPubRewardedVideoManager.showVideo(adUnitId);
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java
deleted file mode 100644
index 3b0e073c..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdLoader.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package com.mopub.mobileads;
-
-import android.support.annotation.Nullable;
-import android.text.TextUtils;
-
-import com.mopub.common.VisibleForTesting;
-import com.mopub.common.logging.MoPubLog;
-import com.mopub.network.AdResponse;
-
-import java.lang.ref.WeakReference;
-import java.util.Map;
-
-abstract class AdLoader {
-
-    WeakReference<AdViewController> mWeakAdViewController;
-    AdLoader(AdViewController adViewController) {
-        mWeakAdViewController = new WeakReference<AdViewController>(adViewController);
-    }
-
-    abstract void load();
-
-    @Nullable
-    static AdLoader fromAdResponse(AdResponse response, AdViewController adViewController) {
-        MoPubLog.i("Performing custom event.");
-
-        // If applicable, try to invoke the new custom event system (which uses custom classes)
-        String adTypeCustomEventName = response.getCustomEventClassName();
-        if (adTypeCustomEventName != null) {
-            Map<String, String> customEventData = response.getServerExtras();
-            return new CustomEventAdLoader(adViewController, adTypeCustomEventName, customEventData);
-        }
-
-        MoPubLog.i("Failed to create custom event.");
-        return null;
-    }
-
-    static class CustomEventAdLoader extends AdLoader {
-        private String mCustomEventClassName;
-        private Map<String,String> mServerExtras;
-
-        public CustomEventAdLoader(AdViewController adViewController,
-                String customEventCLassName,
-                Map<String, String> serverExtras) {
-            super(adViewController);
-            mCustomEventClassName = customEventCLassName;
-            mServerExtras = serverExtras;
-        }
-
-        @Override
-        void load() {
-            AdViewController adViewController = mWeakAdViewController.get();
-            if (adViewController == null
-                    || adViewController.isDestroyed()
-                    || TextUtils.isEmpty(mCustomEventClassName)) {
-                return;
-            }
-            adViewController.setNotLoading();
-
-            final MoPubView moPubView = adViewController.getMoPubView();
-            if (moPubView == null) {
-                MoPubLog.d("Can't load an ad in this ad view because it was destroyed.");
-                return;
-            }
-            moPubView.loadCustomEvent(mCustomEventClassName, mServerExtras);
-        }
-
-        @VisibleForTesting
-        Map<String, String> getServerExtras() {
-            return mServerExtras;
-        }
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java b/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
deleted file mode 100644
index d5561d92..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/EventForwardingBroadcastReceiver.java
+++ /dev/null
@@ -1,91 +0,0 @@
-package com.mopub.mobileads;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.support.v4.content.LocalBroadcastManager;
-
-import com.mopub.common.DataKeys;
-
-import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
-
-public class EventForwardingBroadcastReceiver extends BroadcastReceiver {
-    private final CustomEventInterstitialListener mCustomEventInterstitialListener;
-    private final long mBroadcastIdentifier;
-    private Context mContext;
-
-    public static final String ACTION_INTERSTITIAL_FAIL = "com.mopub.action.interstitial.fail";
-    public static final String ACTION_INTERSTITIAL_SHOW = "com.mopub.action.interstitial.show";
-    public static final String ACTION_INTERSTITIAL_DISMISS = "com.mopub.action.interstitial.dismiss";
-    public static final String ACTION_INTERSTITIAL_CLICK = "com.mopub.action.interstitial.click";
-    private static IntentFilter sIntentFilter;
-
-
-    public EventForwardingBroadcastReceiver(CustomEventInterstitialListener customEventInterstitialListener, final long broadcastIdentifier) {
-        mCustomEventInterstitialListener = customEventInterstitialListener;
-        mBroadcastIdentifier = broadcastIdentifier;
-        sIntentFilter = getHtmlInterstitialIntentFilter();
-    }
-
-    static void broadcastAction(final Context context, final long broadcastIdentifier, final String action) {
-        Intent intent = new Intent(action);
-        intent.putExtra(DataKeys.BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
-        LocalBroadcastManager.getInstance(context.getApplicationContext()).sendBroadcast(intent);
-    }
-
-    public static IntentFilter getHtmlInterstitialIntentFilter() {
-        if (sIntentFilter == null) {
-            sIntentFilter = new IntentFilter();
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_FAIL);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_SHOW);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_DISMISS);
-            sIntentFilter.addAction(ACTION_INTERSTITIAL_CLICK);
-        }
-        return sIntentFilter;
-    }
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        if (mCustomEventInterstitialListener == null) {
-            return;
-        }
-
-        /**
-         * Only consume this broadcast if the identifier on the received Intent and this broadcast
-         * match up. This allows us to target broadcasts to the ad that spawned them. We include
-         * this here because there is no appropriate IntentFilter condition that can recreate this
-         * behavior.
-         */
-        final long receivedIdentifier = intent.getLongExtra(DataKeys.BROADCAST_IDENTIFIER_KEY, -1);
-        if (mBroadcastIdentifier != receivedIdentifier) {
-            return;
-        }
-
-        final String action = intent.getAction();
-        if (ACTION_INTERSTITIAL_FAIL.equals(action)) {
-            mCustomEventInterstitialListener.onInterstitialFailed(NETWORK_INVALID_STATE);
-        } else if (ACTION_INTERSTITIAL_SHOW.equals(action)) {
-            mCustomEventInterstitialListener.onInterstitialShown();
-        } else if (ACTION_INTERSTITIAL_DISMISS.equals(action)) {
-            mCustomEventInterstitialListener.onInterstitialDismissed();
-            unregister();
-        } else if (ACTION_INTERSTITIAL_CLICK.equals(action)) {
-            mCustomEventInterstitialListener.onInterstitialClicked();
-        }
-
-    }
-
-    public void register(Context context) {
-        mContext = context;
-        LocalBroadcastManager.getInstance(mContext).registerReceiver(this, sIntentFilter);
-    }
-
-    public void unregister() {
-        if (mContext != null) {
-            LocalBroadcastManager.getInstance(mContext).unregisterReceiver(this);
-            mContext = null;
-        }
-    }
-}
diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
deleted file mode 100644
index 25bf2a69..00000000
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
+++ /dev/null
@@ -1,277 +0,0 @@
-package com.mopub.mobileads;
-
-import android.app.Activity;
-import android.content.Context;
-import android.location.Location;
-import android.text.TextUtils;
-
-import com.mopub.common.AdFormat;
-import com.mopub.common.MoPub;
-import com.mopub.common.VisibleForTesting;
-import com.mopub.common.logging.MoPubLog;
-import com.mopub.mobileads.factories.CustomEventInterstitialAdapterFactory;
-
-import java.util.Map;
-
-import static com.mopub.common.LocationService.LocationAwareness;
-import static com.mopub.mobileads.MoPubErrorCode.ADAPTER_NOT_FOUND;
-
-public class MoPubInterstitial implements CustomEventInterstitialAdapter.CustomEventInterstitialAdapterListener {
-
-    private enum InterstitialState {
-        CUSTOM_EVENT_AD_READY,
-        NOT_READY;
-
-        boolean isReady() {
-            return this != InterstitialState.NOT_READY;
-        }
-    }
-
-    private MoPubInterstitialView mInterstitialView;
-    private CustomEventInterstitialAdapter mCustomEventInterstitialAdapter;
-    private InterstitialAdListener mInterstitialAdListener;
-    private Activity mActivity;
-    private String mAdUnitId;
-    private InterstitialState mCurrentInterstitialState;
-    private boolean mIsDestroyed;
-
-    public interface InterstitialAdListener {
-        public void onInterstitialLoaded(MoPubInterstitial interstitial);
-        public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode);
-        public void onInterstitialShown(MoPubInterstitial interstitial);
-        public void onInterstitialClicked(MoPubInterstitial interstitial);
-        public void onInterstitialDismissed(MoPubInterstitial interstitial);
-    }
-
-    public MoPubInterstitial(Activity activity, String id) {
-        mActivity = activity;
-        mAdUnitId = id;
-
-        mInterstitialView = new MoPubInterstitialView(mActivity);
-        mInterstitialView.setAdUnitId(mAdUnitId);
-
-        mCurrentInterstitialState = InterstitialState.NOT_READY;
-
-    }
-
-    public void load() {
-        resetCurrentInterstitial();
-        mInterstitialView.loadAd();
-    }
-
-    public void forceRefresh() {
-        resetCurrentInterstitial();
-        mInterstitialView.forceRefresh();
-    }
-
-    private void resetCurrentInterstitial() {
-        mCurrentInterstitialState = InterstitialState.NOT_READY;
-
-        if (mCustomEventInterstitialAdapter != null) {
-            mCustomEventInterstitialAdapter.invalidate();
-            mCustomEventInterstitialAdapter = null;
-        }
-
-        mIsDestroyed = false;
-    }
-
-    public boolean isReady() {
-        return mCurrentInterstitialState.isReady();
-    }
-
-    boolean isDestroyed() {
-        return mIsDestroyed;
-    }
-
-    public boolean show() {
-        switch (mCurrentInterstitialState) {
-            case CUSTOM_EVENT_AD_READY:
-                showCustomEventInterstitial();
-                return true;
-        }
-        return false;
-    }
-
-    private void showCustomEventInterstitial() {
-        if (mCustomEventInterstitialAdapter != null) mCustomEventInterstitialAdapter.showInterstitial();
-    }
-
-    Integer getAdTimeoutDelay() {
-        return mInterstitialView.getAdTimeoutDelay();
-    }
-
-    MoPubInterstitialView getMoPubInterstitialView() {
-        return mInterstitialView;
-    }
-
-    ////////////////////////////////////////////////////////////////////////////////////////////////
-
-    public void setKeywords(String keywords) {
-        mInterstitialView.setKeywords(keywords);
-    }
-
-    public String getKeywords() {
-        return mInterstitialView.getKeywords();
-    }
-
-    public Activity getActivity() {
-        return mActivity;
-    }
-
-    public Location getLocation() {
-        return mInterstitialView.getLocation();
-    }
-
-    public void destroy() {
-        mIsDestroyed = true;
-
-        if (mCustomEventInterstitialAdapter != null) {
-            mCustomEventInterstitialAdapter.invalidate();
-            mCustomEventInterstitialAdapter = null;
-        }
-
-        mInterstitialView.setBannerAdListener(null);
-        mInterstitialView.destroy();
-    }
-
-    public void setInterstitialAdListener(InterstitialAdListener listener) {
-        mInterstitialAdListener = listener;
-    }
-
-    public InterstitialAdListener getInterstitialAdListener() {
-        return mInterstitialAdListener;
-    }
-
-    public void setTesting(boolean testing) {
-        mInterstitialView.setTesting(testing);
-    }
-
-    public boolean getTesting() {
-        return mInterstitialView.getTesting();
-    }
-
-    public void setLocalExtras(Map<String, Object> extras) {
-        mInterstitialView.setLocalExtras(extras);
-    }
-
-    public Map<String, Object> getLocalExtras() {
-        return mInterstitialView.getLocalExtras();
-    }
-
-    /*
-     * Implements CustomEventInterstitialAdapter.CustomEventInterstitialListener
-     */
-
-    @Override
-    public void onCustomEventInterstitialLoaded() {
-        if (mIsDestroyed) return;
-
-        mCurrentInterstitialState = InterstitialState.CUSTOM_EVENT_AD_READY;
-
-        if (mInterstitialAdListener != null) {
-            mInterstitialAdListener.onInterstitialLoaded(this);
-        }
-    }
-
-    @Override
-    public void onCustomEventInterstitialFailed(MoPubErrorCode errorCode) {
-        if (isDestroyed()) return;
-
-        mCurrentInterstitialState = InterstitialState.NOT_READY;
-        mInterstitialView.loadFailUrl(errorCode);
-    }
-
-    @Override
-    public void onCustomEventInterstitialShown() {
-        if (isDestroyed()) return;
-
-        mInterstitialView.trackImpression();
-
-        if (mInterstitialAdListener != null) {
-            mInterstitialAdListener.onInterstitialShown(this);
-        }
-    }
-
-    @Override
-    public void onCustomEventInterstitialClicked() {
-        if (isDestroyed()) return;
-
-        mInterstitialView.registerClick();
-
-        if (mInterstitialAdListener != null) {
-            mInterstitialAdListener.onInterstitialClicked(this);
-        }
-    }
-
-    @Override
-    public void onCustomEventInterstitialDismissed() {
-        if (isDestroyed()) return;
-
-        mCurrentInterstitialState = InterstitialState.NOT_READY;
-
-        if (mInterstitialAdListener != null) {
-            mInterstitialAdListener.onInterstitialDismissed(this);
-        }
-    }
-
-    ////////////////////////////////////////////////////////////////////////////////////////////////
-
-    public class MoPubInterstitialView extends MoPubView {
-
-        public MoPubInterstitialView(Context context) {
-            super(context);
-            setAutorefreshEnabled(false);
-        }
-
-        @Override
-        public AdFormat getAdFormat() {
-            return AdFormat.INTERSTITIAL;
-        }
-
-        @Override
-        protected void loadCustomEvent(String customEventClassName, Map<String, String> serverExtras) {
-            if (mAdViewController == null) {
-                return;
-            }
-
-            if (TextUtils.isEmpty(customEventClassName)) {
-                MoPubLog.d("Couldn't invoke custom event because the server did not specify one.");
-                loadFailUrl(ADAPTER_NOT_FOUND);
-                return;
-            }
-
-            if (mCustomEventInterstitialAdapter != null) {
-                mCustomEventInterstitialAdapter.invalidate();
-            }
-
-            MoPubLog.d("Loading custom event interstitial adapter.");
-
-            mCustomEventInterstitialAdapter = CustomEventInterstitialAdapterFactory.create(
-                    MoPubInterstitial.this,
-                    customEventClassName,
-                    serverExtras,
-                    mAdViewController.getBroadcastIdentifier(),
-                    mAdViewController.getAdReport());
-            mCustomEventInterstitialAdapter.setAdapterListener(MoPubInterstitial.this);
-            mCustomEventInterstitialAdapter.loadInterstitial();
-        }
-
-        protected void trackImpression() {
-            MoPubLog.d("Tracking impression for interstitial.");
-            if (mAdViewController != null) mAdViewController.trackImpression();
-        }
-
-        @Override
-        protected void adFailed(MoPubErrorCode errorCode) {
-            if (mInterstitialAdListener != null) {
-                mInterstitialAdListener.onInterstitialFailed(MoPubInterstitial.this, errorCode);
-            }
-        }
-    }
-
-    @VisibleForTesting
-    @Deprecated
-    void setInterstitialView(MoPubInterstitialView interstitialView) {
-        mInterstitialView = interstitialView;
-    }
-}
diff --git a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
index 0a2e01f2..511b8e04 100644
--- a/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
+++ b/mopub-sdk/src/main/resources/fabric/com.mopub.sdk.android.mopub.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.mopub.sdk.android:mopub
-fabric-version=4.2.0+kit
+fabric-version=4.9.0+kit
 fabric-build-type=source
diff --git a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
index 03930940..46823d17 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/BrowserWebViewClientTest.java
@@ -53,7 +53,7 @@ public void setUp() {
 
     @Test
     public void shouldOverrideUrlLoading_withHTTPUrl_shouldReturnTrue_shouldLoadUrl() {
-        final String url = "http://twitter.com";
+        final String url = "https://twitter.com";
 
         assertThat(subject.shouldOverrideUrlLoading(MOOT_WEB_VIEW, url)).isTrue();
         verify(mockWebView).loadUrl(url);
@@ -132,8 +132,8 @@ public void shouldOverrideUrlLoading_withDeeplinkPlusUrl_withFailedPrimaryUrl_wi
 
     @Test
     public void shouldOverrideUrlLoading_withDeeplinkPlusUrl_withEncodedQueryString_shouldReturnTrue_shouldFinish() {
-        final String primaryUrl = "ebay://launch?nav=home&referrer=http%3A%2F%2Frover.ebay.com%2Frover%2F1%2F711-212056-53654-1%2F4%3Fmpt%3Dcache_buster%26ff6%3Dclick_id%26ff7%3Difa%26ff9%3Dsegment_name%26ff18%3Dcreative_name%26siteid%3D0%26ipn%3Dadmain2%26placement%3D418737%26ck%3D23932_main%26mpvc%3D";
-        final String fallbackUrl = "http://ebay.com";
+        final String primaryUrl = "ebay://launch?nav=home&referrer=https%3A%2F%2Frover.ebay.com%2Frover%2F1%2F711-212056-53654-1%2F4%3Fmpt%3Dcache_buster%26ff6%3Dclick_id%26ff7%3Difa%26ff9%3Dsegment_name%26ff18%3Dcreative_name%26siteid%3D0%26ipn%3Dadmain2%26placement%3D418737%26ck%3D23932_main%26mpvc%3D";
+        final String fallbackUrl = "https://ebay.com";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java b/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
index 14bcb296..28019855 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/CacheServiceTest.java
@@ -42,7 +42,7 @@
     @Before
     public void setUp() throws Exception {
         context = Robolectric.buildActivity(Activity.class).create().get();
-        key1 = "http://www.mopub.com/";
+        key1 = "https://www.mopub.com/";
         data1 = "image_data_1";
 
         semaphore = new Semaphore(0);
diff --git a/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java b/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java
new file mode 100644
index 00000000..ac6fcc64
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/DoubleTimeTrackerTest.java
@@ -0,0 +1,68 @@
+package com.mopub.common;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class DoubleTimeTrackerTest {
+
+    @Mock DoubleTimeTracker.Clock mockClock;
+    DoubleTimeTracker subject;
+
+    @Before
+    public void setUp() throws Exception {
+        subject = new DoubleTimeTracker(mockClock);
+
+        when(mockClock.elapsedRealTime()).thenReturn(100L, 200L, 300L, 400L, 500L, 600L);
+    }
+
+    @Test
+    public void whenStartThenGetInterval_shouldReturn100() throws Exception {
+        subject.start();
+        assertThat(subject.getInterval()).isEqualTo(100d);
+    }
+
+    @Test
+    public void whenPauseBeforeStart_shouldReturn0() throws Exception {
+        subject.pause();
+        assertThat(subject.getInterval()).isEqualTo(0d);
+    }
+
+    @Test
+    public void whenStartPauseStart_thenGetInterval_shouldReturn200() throws Exception {
+        subject.start();
+        subject.pause();
+        subject.start();
+
+        assertThat(subject.getInterval()).isEqualTo(200d);
+    }
+
+    @Test
+    public void whenStartPauseStartPause_thenGetInterval_shouldReturn200() throws Exception {
+        subject.start();
+        subject.pause();
+        subject.start();
+        subject.pause();
+
+        assertThat(subject.getInterval()).isEqualTo(200d);
+    }
+
+    @Test
+    public void whenMultipleStart_shouldNotAffectInterval_shouldReturn100() throws Exception {
+        subject.start();
+        subject.start();
+        subject.start();
+
+        assertThat(subject.getInterval()).isEqualTo(100d);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java b/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
index 178bc7b3..93256457 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/DownloadResponseTest.java
@@ -31,8 +31,8 @@
     public void setup() throws Exception {
         testHttpResponse = new TestHttpResponseWithHeaders(200, "abcde".getBytes());
         testHttpResponse.addHeader(ResponseHeader.CUSTOM_EVENT_NAME.getKey(), "testCustomEvent");
-        testHttpResponse.addHeader(ResponseHeader.CLICK_TRACKING_URL.getKey().toLowerCase(Locale.US), "http://example.com/");
-        testHttpResponse.addHeader(ResponseHeader.FAIL_URL.getKey().toUpperCase(Locale.US), "http://mopub.com/");
+        testHttpResponse.addHeader(ResponseHeader.CLICK_TRACKING_URL.getKey().toLowerCase(Locale.US), "https://example.com/");
+        testHttpResponse.addHeader(ResponseHeader.FAIL_URL.getKey().toUpperCase(Locale.US), "https://mopub.com/");
         subject = new DownloadResponse(testHttpResponse);
     }
 
@@ -65,8 +65,8 @@ public void testGetContentLength() throws Exception {
     @Test
     public void testGetFirstHeader_caseInsensitive() throws Exception {
         assertEquals("testCustomEvent", subject.getFirstHeader(ResponseHeader.CUSTOM_EVENT_NAME));
-        assertEquals("http://example.com/", subject.getFirstHeader(ResponseHeader.CLICK_TRACKING_URL));
-        assertEquals("http://mopub.com/", subject.getFirstHeader(ResponseHeader.FAIL_URL));
+        assertEquals("https://example.com/", subject.getFirstHeader(ResponseHeader.CLICK_TRACKING_URL));
+        assertEquals("https://mopub.com/", subject.getFirstHeader(ResponseHeader.FAIL_URL));
         assertNull(subject.getFirstHeader(ResponseHeader.CUSTOM_EVENT_DATA));
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java b/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java
new file mode 100644
index 00000000..70c7ec4b
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/LocationServiceTest.java
@@ -0,0 +1,261 @@
+package com.mopub.common;
+
+import android.app.Activity;
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationManager;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
+import org.robolectric.Shadows;
+import org.robolectric.annotation.Config;
+import org.robolectric.shadows.ShadowLocationManager;
+
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.robolectric.Shadows.shadowOf;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class LocationServiceTest {
+    private Activity activity;
+    private Location networkLocation;
+    private Location gpsLocation;
+    private ShadowLocationManager shadowLocationManager;
+
+    @Before
+    public void setUp() {
+        activity = Robolectric.buildActivity(Activity.class).create().get();
+
+        networkLocation = new Location("networkLocation");
+        networkLocation.setLatitude(3.1415926535);
+        networkLocation.setLongitude(-27.18281828459);
+        networkLocation.setAccuracy(10);
+        networkLocation.setTime(100);
+
+        gpsLocation = new Location("gpsLocation");
+        gpsLocation.setLatitude(-1.23456789);
+        gpsLocation.setLongitude(98.7654321);
+        gpsLocation.setAccuracy(1000);
+        gpsLocation.setTime(200);
+
+        shadowLocationManager = shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER, networkLocation);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, gpsLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withFinePermission_shouldReturnMoreRecentLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        // gpsLocation has a more recent timestamp than networkLocation
+        assertThat(result).isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withFinePermission_withLocationAwarenessTruncated_shouldTruncateLocationLatLon() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 2, MoPub.LocationAwareness.TRUNCATED);
+
+        // expected more recent gpsLocation, truncated
+        assertThat(result.getLatitude()).isEqualTo(-1.23);
+        assertThat(result.getLongitude()).isEqualTo(98.77);
+        // accuracy should be unchanged
+        assertThat(result.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void getLastKnownLocation_withOnlyCoarsePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        // only has coarse location access, expected networkLocation
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLastKnownLocation_withOnlyCoarsePermission_withLocationAwarenessTruncated_shouldTruncateLocationLatLon() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 2, MoPub.LocationAwareness.TRUNCATED);
+
+        // expected networkLocation, truncated
+        assertThat(result.getLatitude()).isEqualTo(3.14);
+        assertThat(result.getLongitude()).isEqualTo(-27.18);
+        // accuracy should be unchanged
+        assertThat(result.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void getLastKnownLocation_withNoLocationPermissions_shouldReturnNull() {
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.NORMAL);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLastKnownLocation_withLocationAwarenessDisabled_shouldReturnNull() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        final Location result =
+                LocationService.getLastKnownLocation(activity, 10, MoPub.LocationAwareness.DISABLED);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withCoarsePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withFinePermission_shouldReturnNetworkLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withNetworkProvider_withNoPermissions_shouldReturnNull() {
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.NETWORK);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withCoarsePermission_shouldReturnNull() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isNull();
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withFinePermission_shouldReturnGpsLocation() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_FINE_LOCATION);
+
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getLocationFromProvider_withGpsProvider_withNoPermissions_shouldReturnNull() {
+        final Location result = LocationService.getLocationFromProvider(activity,
+                LocationService.ValidLocationProvider.GPS);
+
+        assertThat(result).isNull();
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void getLocationFromProvider_withNullContext_shouldThrowNPE() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        LocationService.getLocationFromProvider(null, LocationService.ValidLocationProvider.GPS);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void getLocationFromProvider_withNullProvider_shouldThrowNPE() {
+        Shadows.shadowOf(activity).grantPermissions(ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION);
+
+        LocationService.getLocationFromProvider(activity, null);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_shouldReturnMoreRecentLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(networkLocation, gpsLocation))
+                .isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withFirstLocationValid_withSecondLocationNull_shouldReturnFirstLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(networkLocation, null))
+                .isEqualTo(networkLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withSecondLocationValid_withFirstLocationNull_shouldReturnSecondLocation() {
+        assertThat(LocationService.getMostRecentValidLocation(null, gpsLocation))
+                .isEqualTo(gpsLocation);
+    }
+
+    @Test
+    public void getMostRecentValidLocation_withBothLocationsNull_shouldReturnNull() {
+        assertThat(LocationService.getMostRecentValidLocation(null, null)).isNull();
+    }
+
+    @Test
+    public void truncateLocationLatLon_shouldRoundLatitudeAndLongitude() {
+        LocationService.truncateLocationLatLon(networkLocation, 4);
+
+        assertThat(networkLocation.getLatitude()).isEqualTo(3.1416);
+        assertThat(networkLocation.getLongitude()).isEqualTo(-27.1828);
+        // accuracy should be unchanged
+        assertThat(networkLocation.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withZeroPrecision_shouldRemoveFractionalPortion() {
+        LocationService.truncateLocationLatLon(networkLocation, 0);
+
+        assertThat(networkLocation.getLatitude()).isEqualTo(3);
+        assertThat(networkLocation.getLongitude()).isEqualTo(-27);
+        assertThat(networkLocation.getAccuracy()).isEqualTo(10);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withPrecisionLongerThanProvidedDecimalPoints_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(gpsLocation, 100);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withNullLocation_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(null, 1);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+
+    @Test
+    public void truncateLocationLatLon_withNegativePrecision_shouldNotChangeLocation() {
+        LocationService.truncateLocationLatLon(gpsLocation, -1);
+
+        assertThat(gpsLocation.getLatitude()).isEqualTo(-1.23456789);
+        assertThat(gpsLocation.getLongitude()).isEqualTo(98.7654321);
+        assertThat(gpsLocation.getAccuracy()).isEqualTo(1000);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java b/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
index 474dfa45..869a0d60 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/MoPubHttpUrlConnectionTest.java
@@ -24,7 +24,7 @@
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MoPubHttpUrlConnectionTest {
-    private static final String url = "http://www.mopub.com";
+    private static final String url = "https://www.mopub.com";
     private String userAgent;
 
     @Before
@@ -53,15 +53,15 @@ public void getHttpUrlConnection_shouldSetConnectAndReadTimeoutTo10Seconds() thr
     @Test
     public void getHttpUrlConnection_shouldProperlyEncodeUrl() throws Exception {
         HttpURLConnection urlConnection = MoPubHttpUrlConnection.getHttpUrlConnection(
-                "http://host:80/doc|search?q=green robots#over 6\"");
+                "https://host:80/doc|search?q=green robots#over 6\"");
 
         assertThat(urlConnection.getURL().toString())
-                .isEqualTo("http://host:80/doc%7Csearch?q=green%20robots#over%206%22");
+                .isEqualTo("https://host:80/doc%7Csearch?q=green%20robots#over%206%22");
     }
 
     @Test(expected = IllegalArgumentException.class)
     public void getHttpUrlConnection_withImproperlyEncodedUrl_shouldThrowIllegalArgumentException() throws Exception {
-        MoPubHttpUrlConnection.getHttpUrlConnection("http://user:passwrd@host:80/doc%7ZZZC");
+        MoPubHttpUrlConnection.getHttpUrlConnection("https://user:passwrd@host:80/doc%7ZZZC");
     }
 
     @Test(expected = MalformedURLException.class)
@@ -76,24 +76,24 @@ public void getHttpUrlConnection_withNullUrl_shouldThrowNullPointerException() t
 
     @Test
     public void urlEncode_shouldProperlyEncodeUrls() throws Exception {
-        // Example url borrowed from: http://developer.android.com/reference/java/net/URI.html
-        assertThat(urlEncode("http://user:passwrd@host:80/doc|search?q=green robots#over 6\""))
-                .isEqualTo("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
+        // Example url borrowed from: https://developer.android.com/reference/java/net/URI.html
+        assertThat(urlEncode("https://user:passwrd@host:80/doc|search?q=green robots#over 6\""))
+                .isEqualTo("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
 
-        assertThat(urlEncode("http://www.example.com/?key=value\"\"&key2=value2?"))
-                .isEqualTo("http://www.example.com/?key=value%22%22&key2=value2?");
+        assertThat(urlEncode("https://www.example.com/?key=value\"\"&key2=value2?"))
+                .isEqualTo("https://www.example.com/?key=value%22%22&key2=value2?");
 
-        assertThat(urlEncode("http://user:passwrd@host:80/doc?q=green#robots"))
-                .isEqualTo("http://user:passwrd@host:80/doc?q=green#robots");
+        assertThat(urlEncode("https://user:passwrd@host:80/doc?q=green#robots"))
+                .isEqualTo("https://user:passwrd@host:80/doc?q=green#robots");
 
-        assertThat(urlEncode("http://rtr.innovid.com/r1.5460f51c393410.96367393;cb=[timestamp]"))
-                .isEqualTo("http://rtr.innovid.com/r1.5460f51c393410.96367393;cb=%5Btimestamp%5D");
+        assertThat(urlEncode("https://rtr.innovid.com/r1.5460f51c393410.96367393;cb=[timestamp]"))
+                .isEqualTo("https://rtr.innovid.com/r1.5460f51c393410.96367393;cb=%5Btimestamp%5D");
     }
 
     @Test
     public void urlEncode_withProperlyEncodedUrl_shouldReturnUrlWithSameEncoding() throws Exception {
-        assertThat(urlEncode("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22"))
-                .isEqualTo("http://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
+        assertThat(urlEncode("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22"))
+                .isEqualTo("https://user:passwrd@host:80/doc%7Csearch?q=green%20robots#over%206%22");
 
         assertThat(urlEncode("https://www.mywebsite.com%2Fd+ocs%2Fenglish%2Fsite%2Fmybook.do%3Fkey%3Dvalue%3B%23fragment"))
                 .isEqualTo(
@@ -102,13 +102,13 @@ public void urlEncode_withProperlyEncodedUrl_shouldReturnUrlWithSameEncoding() t
 
     @Test(expected = Exception.class)
     public void urlEncode_withImproperlyEncodedUrl_shouldThowException() throws Exception {
-        urlEncode("http://user:passwrd@host:80/doc%7ZZZC");
+        urlEncode("https://user:passwrd@host:80/doc%7ZZZC");
     }
 
 
     @Test(expected = Exception.class)
     public void urlEncode_withImproperlyEncodedUrlScheme_shouldThowException() throws Exception {
-        // From: http://developer.android.com/reference/java/net/URI.html
+        // From: https://developer.android.com/reference/java/net/URI.html
         // A URI's host, port and scheme are not eligible for encoding and must not contain illegal characters.
         urlEncode("https%3A%2F%2Fwww.mywebsite.com%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Fkey%3Dvalue%3B%23fragment");
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java b/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java
new file mode 100644
index 00000000..b54eb796
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/MoPubTest.java
@@ -0,0 +1,188 @@
+package com.mopub.common;
+
+import android.app.Activity;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.common.util.Reflection;
+import com.mopub.mobileads.BuildConfig;
+import com.mopub.mobileads.MoPubRewardedVideoListener;
+import com.mopub.mobileads.MoPubRewardedVideoManager;
+import com.mopub.mobileads.MoPubRewardedVideos;
+
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.powermock.core.classloader.annotations.PowerMockIgnore;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+import org.powermock.modules.junit4.rule.PowerMockRule;
+import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.powermock.api.mockito.PowerMockito.mock;
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+import static org.powermock.api.mockito.PowerMockito.verifyStatic;
+import static org.powermock.api.mockito.PowerMockito.when;
+
+// If you encounter a VerifyError with PowerMock then you need to set Android Studio to use
+// JDK version 7u79 or later. Go to File > Project Structure > [Platform Settings] > SDK to
+// change the JDK version.
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class, sdk = 21)
+@PowerMockIgnore({ "org.mockito.*", "org.robolectric.*", "android.*" })
+@PrepareForTest({MoPubRewardedVideoManager.class})
+public class MoPubTest {
+
+    private Activity mActivity;
+    private MediationSettings[] mMediationSettings;
+    private String mAdUnitId;
+    private MoPubRewardedVideoListener mockRewardedVideoListener;
+    private MoPubRewardedVideoManager.RequestParameters mockRequestParameters;
+
+    @Rule
+    public PowerMockRule rule = new PowerMockRule();
+
+    @Before
+    public void setup() {
+        mActivity = Robolectric.buildActivity(Activity.class).create().get();
+        mMediationSettings = new MediationSettings[0];
+        mAdUnitId = "123";
+
+        mockRewardedVideoListener = mock(MoPubRewardedVideoListener.class);
+        mockRequestParameters = mock(MoPubRewardedVideoManager.RequestParameters.class);
+
+        mockStatic(MoPubRewardedVideoManager.class);
+    }
+
+    @Test
+    public void initializeRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "initializeRewardedVideo", Activity.class, MediationSettings[].class)).isNotNull();
+    }
+
+    @Test
+    public void initializeRewardedVideo_withValidParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.initializeRewardedVideo(mActivity, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.init(mActivity, mMediationSettings);
+    }
+
+    @Test
+    public void updateActivity_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideoManager.class,
+                "updateActivity", Activity.class)).isNotNull();
+    }
+
+    @Test
+    public void updateActivity_withValidActivity_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.updateActivity(mActivity);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.updateActivity(mActivity);
+    }
+
+    @Test
+    public void setRewardedVideoListener_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "setRewardedVideoListener", MoPubRewardedVideoListener.class)).isNotNull();
+    }
+
+    @Test
+    public void setRewardedVideoListener_withValidListener_shouldSetMoPubRewardedVideoManagerListener() throws Exception {
+        MoPub.setRewardedVideoListener(mockRewardedVideoListener);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.setVideoListener(mockRewardedVideoListener);
+    }
+
+    @Test
+    public void setRewardedVideoListener_withNullListener_shouldCallMoPubRewardedVideoManagerListenerWithNull() throws Exception {
+        MoPub.setRewardedVideoListener(null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.setVideoListener(null);
+    }
+
+    @Test
+    public void loadRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "loadRewardedVideo", String.class,
+                MoPubRewardedVideoManager.RequestParameters.class,
+                MediationSettings[].class)).isNotNull();
+    }
+
+    @Test
+    public void loadRewardedVideo_withTwoNonNullParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withTwoParameters_withNullMediationSettings_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, (MediationSettings[]) null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, (MediationSettings[]) null);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeNonNullParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, mockRequestParameters, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, mockRequestParameters, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeParameters_withNullRequestParameters_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, null, mMediationSettings);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, mMediationSettings);
+    }
+
+    @Test
+    public void loadRewardedVideo_withThreeParameters_withNullRequestParameters_withNullMediationSettings_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.loadRewardedVideo(mAdUnitId, null, (MediationSettings[]) null);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.loadVideo(mAdUnitId, null, (MediationSettings[]) null);
+    }
+
+    @Test
+    public void hasRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "hasRewardedVideo", String.class)).isNotNull();
+    }
+
+    @Test
+    public void hasRewardedVideo_withValidAdUnitId_shouldReturnTrue() throws Exception {
+        when(MoPubRewardedVideoManager.hasVideo(mAdUnitId)).thenReturn(true);
+
+        assertThat(MoPub.hasRewardedVideo(mAdUnitId)).isTrue();
+    }
+
+    @Test
+    public void hasRewardedVideo_withInvalidAdUnitId_shouldReturnFalse() throws Exception {
+        assertThat(MoPub.hasRewardedVideo("fakeId")).isFalse();
+    }
+
+    @Test
+    public void showRewardedVideo_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(MoPubRewardedVideos.class,
+                "showRewardedVideo", String.class)).isNotNull();
+    }
+
+    @Test
+    public void showRewardedVideo_withNonNullAdUnitId_shouldCallMoPubRewardedVideoManager() throws Exception {
+        MoPub.showRewardedVideo(mAdUnitId);
+
+        verifyStatic();
+        MoPubRewardedVideoManager.showVideo(mAdUnitId);
+    }
+
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java
new file mode 100644
index 00000000..bde01702
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlActionTest.java
@@ -0,0 +1,133 @@
+package com.mopub.common;
+
+import android.net.Uri;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static com.mopub.common.UrlAction.HANDLE_MOPUB_SCHEME;
+import static com.mopub.common.UrlAction.IGNORE_ABOUT_SCHEME;
+import static com.mopub.common.UrlAction.HANDLE_PHONE_SCHEME;
+import static com.mopub.common.UrlAction.OPEN_NATIVE_BROWSER;
+import static com.mopub.common.UrlAction.OPEN_APP_MARKET;
+import static com.mopub.common.UrlAction.OPEN_IN_APP_BROWSER;
+import static com.mopub.common.UrlAction.HANDLE_SHARE_TWEET;
+import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK;
+import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK;
+import static org.fest.assertions.api.Assertions.assertThat;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class UrlActionTest {
+
+    @Test
+    public void handleMopubScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_MOPUB_SCHEME, "mopub:", true);
+        assertUrlActionMatching(HANDLE_MOPUB_SCHEME, "MoPuB:", true);
+    }
+
+    @Test
+    public void ignoreAboutScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(IGNORE_ABOUT_SCHEME, "about:", true);
+        assertUrlActionMatching(IGNORE_ABOUT_SCHEME, "AbOuT:", true);
+    }
+
+    @Test
+    public void handlePhoneScheme_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "tel:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "TeL:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "voicemail:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "VoIcEmAiL:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "sms:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "SmS:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "mailto:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "MaIlTo:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "geo:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "GeO:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "google.streetview:", true);
+        assertUrlActionMatching(HANDLE_PHONE_SCHEME, "GoOgLe.StReEtViEw:", true);
+                
+    }
+
+    @Test
+    public void openNativeBrowser_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_NATIVE_BROWSER, "mopubnativebrowser:", true);
+        assertUrlActionMatching(OPEN_NATIVE_BROWSER, "MoPuBnAtIvEbRoWsEr:", true);
+    }
+
+    @Test
+    public void openAppMarket_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://play.google.com", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://PlAy.GoOgLe.CoM", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://market.android.com", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "https://MaRkEt.AnDrOiD.CoM", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "market:", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "MaRkEt:", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "play.google.com/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "PlAy.GoOgLe.CoM/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "market.android.com/", true);
+        assertUrlActionMatching(OPEN_APP_MARKET, "MaRkEt.AnDrOiD.CoM/", true);
+    }
+
+    @Test
+    public void openInAppBrowser_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "http:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "HtTp:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "https:", true);
+        assertUrlActionMatching(OPEN_IN_APP_BROWSER, "HtTpS:", true);
+    }
+
+    @Test
+    public void handleShareTweet_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "mopubshare://tweet", true);
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "MoPuBsHaRe://tweet", true);
+        assertUrlActionMatching(HANDLE_SHARE_TWEET, "mopubshare://TwEeT", true);
+    }
+
+    @Test
+    public void followDeepLinkWithFallback_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK_WITH_FALLBACK, "deeplink+:", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK_WITH_FALLBACK, "DeEpLiNk+:", true);
+    }
+
+    @Test
+    public void followDeepLink_shouldBeCaseInsensitive() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "MyApP://", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://myview", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://MyView", true);
+    }
+
+    @Test
+    public void followDeepLink_withEmptyScheme_shouldNotMatch() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "://myview", false);
+    }
+
+    @Test
+    public void followDeepLink_withEmptyHost_shouldMatch() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "myapp://", true);
+    }
+
+    @Test
+    public void followDeepLink_withIntentScheme_withEmptyHost_shouldMatch() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "intent://", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "InTeNt://", true);
+    }
+
+    @Test
+    public void followDeepLink_withIntentScheme_withHost_shouldMatch() throws Exception {
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "intent://host", true);
+        assertUrlActionMatching(FOLLOW_DEEP_LINK, "InTeNt://HoSt", true);
+    }
+
+    private void assertUrlActionMatching(@NonNull final UrlAction action,
+            @Nullable final String url, final boolean shouldMatch) {
+        assertThat(action.shouldTryHandlingUrl(Uri.parse(url))).isEqualTo(shouldMatch);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
index 14a9cb95..66ccbdd2 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlHandlerTest.java
@@ -13,6 +13,7 @@
 import com.mopub.network.Networking;
 
 import org.junit.Before;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
@@ -21,6 +22,8 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowApplication;
 
+import java.net.URISyntaxException;
+
 import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK;
 import static com.mopub.common.UrlAction.FOLLOW_DEEP_LINK_WITH_FALLBACK;
 import static com.mopub.common.UrlAction.HANDLE_MOPUB_SCHEME;
@@ -49,11 +52,18 @@
     @Before
     public void setUp() throws Exception {
         context = Robolectric.buildActivity(Activity.class).create().get().getApplicationContext();
+
+        // This url will be attempted when and intent:// url is not resolvable AND the app package
+        // is missing (see Intents.launchApplicationIntent). In this case, we want the url to be
+        // resolvable so the tests behave as a real device and actually attempt to open it.
+        // This discrepancy between devices and test environment/emulators is was led to the
+        // regression of ADF-2291.
+        makeDeeplinkResolvable("market://details?id=null");
     }
 
     @Test
     public void urlHandler_withoutMoPubBrowser_shouldCallOnClickSuccessButNotStartActivity() {
-        final String url = "http://www.mopub.com/";
+        final String url = "https://www.mopub.com/";
 
         new UrlHandler.Builder()
                 .withSupportedUrlActions(OPEN_IN_APP_BROWSER)
@@ -81,6 +91,19 @@ public void urlHandler_withMatchingMoPubSchemeFinishLoad_shouldCallOnFinishLoad(
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedFinishLoad_shouldCallOnFinishLoad() {
+        final String url = "mopub://FiNiShLoAd";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onFinishLoad();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingMoPubSchemeClose_shouldCallOnClose() {
         final String url = "mopub://close";
@@ -94,6 +117,19 @@ public void urlHandler_withMatchingMoPubSchemeClose_shouldCallOnClose() {
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedClose_shouldCallOnClose() {
+        final String url = "mopub://ClOsE";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onClose();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingMoPubSchemeFailLoad_shouldCallOnFailLoad() {
         final String url = "mopub://failLoad";
@@ -107,6 +143,19 @@ public void urlHandler_withMatchingMoPubSchemeFailLoad_shouldCallOnFailLoad() {
         verifyNoMoreCallbacks();
     }
 
+    @Test
+    public void urlHandler_withMatchingMoPubSchemeUppercasedFailLoad_shouldCallOnFailLoad() {
+        final String url = "mopub://FaIlLoAd";
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(HANDLE_MOPUB_SCHEME)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, url, true, null);
+
+        verify(mockMoPubSchemeListener).onFailLoad();
+        verifyNoMoreCallbacks();
+    }
+
     @Test
     public void urlHandler_withMatchingAboutSchemeUrl_shouldIgnoreClick() {
         final String url = "about:blank";
@@ -171,7 +220,7 @@ public void urlHandler_withMatchingPhoneSchemeUrl_shouldStartActivity() {
 
     @Test
     public void urlHandler_withValidNativeBrowserUrl_shouldCallOnClickSuccess_shouldStartActivity() {
-        final String urlToLoad = "http://www.mopub.com/";
+        final String urlToLoad = "https://www.mopub.com/";
         final String url = "mopubnativebrowser://navigate?url=" + urlToLoad;
 
         new UrlHandler.Builder()
@@ -190,7 +239,7 @@ public void urlHandler_withValidNativeBrowserUrl_shouldCallOnClickSuccess_should
 
     @Test
     public void urlHandler_withMatchingInAppBrowserHttpUrl_shouldCallOnClickSuccess_shouldStartActivity() {
-        final String url = "http://some_url";
+        final String url = "https://some_url";
 
         new UrlHandler.Builder()
                 .withSupportedUrlActions(IGNORE_ABOUT_SCHEME, HANDLE_MOPUB_SCHEME, FOLLOW_DEEP_LINK,
@@ -259,6 +308,25 @@ public void urlHandler_withMatchingDeepLinkUrl_shouldCallOnClickSuccess_shouldSt
         assertThat(startedActivity.getData()).isEqualTo(Uri.parse(deepLinkUrl));
     }
 
+    @Test
+    public void urlHandler_withMatchingIntentUrl_shouldCallOnClickSuccess_shouldStartActivity() throws URISyntaxException {
+        final String appPackage = "com.google.zxing.client.android";
+        final String intentUrl = "intent://scan/#Intent;scheme=zxing;package=" + appPackage
+                + ";end";
+        makeIntentUrlResolvable(intentUrl);
+
+        new UrlHandler.Builder()
+                .withSupportedUrlActions(FOLLOW_DEEP_LINK)
+                .withResultActions(mockResultActions)
+                .withMoPubSchemeListener(mockMoPubSchemeListener)
+                .build().handleResolvedUrl(context, intentUrl, true, null);
+
+        verify(mockResultActions).urlHandlingSucceeded(intentUrl, FOLLOW_DEEP_LINK);
+        verifyNoMoreCallbacks();
+        final Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
+        assertThat(startedActivity.getAction()).isEqualTo(Intent.ACTION_VIEW);
+    }
+
     @Test
     public void urlHandler_withMatchingDeeplinkPlus_shouldCallOnClickSuccess_shouldStartActivity() {
         final String primaryUrl = "twitter://timeline";
@@ -280,7 +348,7 @@ public void urlHandler_withMatchingDeeplinkPlus_shouldCallOnClickSuccess_shouldS
     @Test
     public void urlHandler_withMatchingUnresolvableDeeplinkPlus_withResolvableFallback_shouldResolveRedirects_shouldCallOnClickSuccess_shouldStartActivity() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://www.twitter.com";
+        final String fallbackUrl = "https://www.twitter.com";
         final String fallbackUrlAfterRedirects = "https://twitter.com/";
         final String deeplinkPlusUrl = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl);
@@ -320,10 +388,10 @@ public void urlHandler_withMatchingUnresolvableDeeplinkPlus_withUnresolvableFall
     @Test
     public void urlHandler_withDeeplinkPlus_shouldTriggerPrimaryTracker() {
         final String primaryUrl = "twitter://timeline";
-        final String primaryTracker = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String fallbackUrl = "http://twitter.com";
+        final String primaryTracker = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackUrl = "https://twitter.com";
         final String fallbackTracker =
-                "http://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
+                "https://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
@@ -342,8 +410,8 @@ public void urlHandler_withDeeplinkPlus_shouldTriggerPrimaryTracker() {
     @Test
     public void urlHandler_withDeeplinkPlus_shouldTriggerMultiplePrimaryTrackers() {
         final String primaryUrl = "twitter://timeline";
-        final String primaryTracker1 = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String primaryTracker2 = "http://ads.mopub.com/tracking?pubId=4321&userId=8765";
+        final String primaryTracker1 = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String primaryTracker2 = "https://ads.mopub.com/tracking?pubId=4321&userId=8765";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker1)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker2);
@@ -361,10 +429,10 @@ public void urlHandler_withDeeplinkPlus_shouldTriggerMultiplePrimaryTrackers() {
     @Test
     public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerFallbackTracker() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://twitter.com";
-        final String primaryTracker = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackUrl = "https://twitter.com";
+        final String primaryTracker = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
         final String fallbackTracker =
-                "http://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
+                "https://ads.twitter.com/fallbackTracking?pubId=1234&userId=5678";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&primaryTrackingUrl=" + Uri.encode(primaryTracker)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
@@ -382,9 +450,9 @@ public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerFall
     @Test
     public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerMultiplePrimaryTrackers() {
         final String primaryUrl = "missingApp://somePath";
-        final String fallbackUrl = "http://twitter.com";
-        final String fallbackTracker1 = "http://ads.twitter.com/tracking?pubId=1234&userId=5678";
-        final String fallbackTracker2 = "http://ads.mopub.com/tracking?pubId=4321&userId=8765";
+        final String fallbackUrl = "https://twitter.com";
+        final String fallbackTracker1 = "https://ads.twitter.com/tracking?pubId=1234&userId=5678";
+        final String fallbackTracker2 = "https://ads.mopub.com/tracking?pubId=4321&userId=8765";
         final String url = "deeplink+://navigate?primaryUrl=" + Uri.encode(primaryUrl)
                 + "&fallbackUrl=" + Uri.encode(fallbackUrl)
                 + "&fallbackTrackingUrl=" + Uri.encode(fallbackTracker1)
@@ -399,20 +467,6 @@ public void urlHandler_withDeeplinkPlus_withResolvableFallback_shouldTriggerMult
         verify(mockRequestQueue).add(argThat(isUrl(fallbackTracker2)));
     }
 
-    @Test
-    public void urlHandler_withUppercasedDeeplinkPlus_shouldBeHandled() {
-        final String primaryUrl = "twitter://timeline";
-        final String url = "DeEpLiNk+://navigate?primaryUrl=" + Uri.encode(primaryUrl);
-        makeDeeplinkResolvable(primaryUrl);
-
-        new UrlHandler.Builder()
-                .withSupportedUrlActions(FOLLOW_DEEP_LINK_WITH_FALLBACK)
-                .withResultActions(mockResultActions)
-                .build().handleResolvedUrl(context, url, true, null);
-
-        verify(mockResultActions).urlHandlingSucceeded(url, FOLLOW_DEEP_LINK_WITH_FALLBACK);
-    }
-
     @Test
     public void urlHandler_withdDeeplinkPlus_withUppercasedNavigate_shouldBeHandled() {
         final String primaryUrl = "twitter://timeline";
@@ -891,4 +945,9 @@ private void makeDeeplinkResolvable(String deeplink) {
         RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(Intent.ACTION_VIEW,
                 Uri.parse(deeplink)), new ResolveInfo());
     }
+
+    private void makeIntentUrlResolvable(String intentUrl) throws URISyntaxException {
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(
+                Intent.parseUri(intentUrl, Intent.URI_INTENT_SCHEME), new ResolveInfo());
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java b/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java
new file mode 100644
index 00000000..df0626ea
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/UrlResolutionTaskTest.java
@@ -0,0 +1,145 @@
+package com.mopub.common;
+
+import android.support.annotation.Nullable;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.mobileads.BuildConfig;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.annotation.Config;
+
+import java.io.IOException;
+import java.net.HttpURLConnection;
+import java.net.URISyntaxException;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class UrlResolutionTaskTest {
+    private final String BASE_URL =  "https://a.example.com/b/c/d?e=f";
+    @Mock private HttpURLConnection mockHttpUrlConnection;
+
+    @Test
+    public void resolveRedirectLocation_withAbsoluteRedirect_shouldReturnAbsolutePath() throws Exception {
+        setupMockHttpUrlConnection(302, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://www.abc.com");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeRedirect_shouldReplaceFileWithRelativePath() throws Exception {
+        setupMockHttpUrlConnection(302, "foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeFromRootRedirect_shouldReturnAmendedPathFromRoot() throws Exception {
+        setupMockHttpUrlConnection(302, "/foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeFromOneLevelUpRedirect_shouldReturnAmendedPathFromOneLevelUp() throws Exception {
+        setupMockHttpUrlConnection(302, "../foo/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/foo/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRelativeAndQueryParamsRedirect_shouldReturnAmendedPathWithQueryParams() throws Exception {
+        setupMockHttpUrlConnection(302, "../foo/bar?x=y");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/foo/bar?x=y");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRedirectWithoutScheme_shouldCompleteTheScheme() throws Exception {
+        setupMockHttpUrlConnection(302, "//foo.example.com/bar");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://foo.example.com/bar");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withRedirectDifferentScheme_shouldReturnRedirectScheme() throws Exception {
+        setupMockHttpUrlConnection(302, "https://a.example.com/b/c/d?e=f");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/d?e=f");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withOnlyQueryParamsRedirect_shouldReturnAmendedPathWithQueryParams() throws Exception {
+        setupMockHttpUrlConnection(302, "?x=y");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/?x=y");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withOnlyFragmentRedirect_shouldReturnAmendedPathWithFragment() throws Exception {
+        setupMockHttpUrlConnection(302, "#x");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/d?e=f#x");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withDotRedirect_shouldStripFile() throws Exception {
+        setupMockHttpUrlConnection(302, ".");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://a.example.com/b/c/");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withResponseCode301_shouldResolvePath() throws Exception {
+        setupMockHttpUrlConnection(301, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isEqualTo("https://www.abc.com");
+    }
+
+    @Test
+    public void resolveRedirectLocation_withResponseCode200_shouldReturnNull() throws Exception {
+        setupMockHttpUrlConnection(200, "https://www.abc.com");
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isNull();
+    }
+
+    @Test
+    public void resolveRedirectLocation_withoutLocation_shouldReturnNull() throws Exception {
+        setupMockHttpUrlConnection(200, null);
+
+        assertThat(UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection))
+                .isNull();
+    }
+
+    @Test(expected = URISyntaxException.class)
+    public void resolveRedirectLocation_withInvalidUrl_shouldThrowURISyntaxException() throws Exception {
+        setupMockHttpUrlConnection(301, "https://a.example.com/b c/d");
+
+        UrlResolutionTask.resolveRedirectLocation(BASE_URL, mockHttpUrlConnection);
+    }
+
+    private void setupMockHttpUrlConnection(final int responseCode,
+            @Nullable final String absolutePathUrl) throws IOException {
+        mockHttpUrlConnection = mock(HttpURLConnection.class);
+        when(mockHttpUrlConnection.getResponseCode()).thenReturn(responseCode);
+        when(mockHttpUrlConnection.getHeaderField("Location")).thenReturn(absolutePathUrl);
+    }
+
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java b/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
index 085d607f..a5c0d99f 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/event/BaseEventTest.java
@@ -58,7 +58,7 @@ public void setUp() {
                 .withPerformanceDurationMs(100.0)
                 .withRequestId("b550796074da4559a27c5072dcba2b27")
                 .withRequestStatusCode(200)
-                .withRequestUri("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")
+                .withRequestUri("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")
                 .withRequestRetries(0)
                 .build();
     }
@@ -140,7 +140,7 @@ public void constructor_shouldCorrectlyAssignFieldsFromBuilder() throws Exceptio
         assertThat(subject.getPerformanceDurationMs()).isEqualTo(100.0);
         assertThat(subject.getRequestId()).isEqualTo("b550796074da4559a27c5072dcba2b27");
         assertThat(subject.getRequestStatusCode()).isEqualTo(200);
-        assertThat(subject.getRequestUri()).isEqualTo("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        assertThat(subject.getRequestUri()).isEqualTo("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         assertThat(subject.getRequestRetries()).isEqualTo(0);
         assertThat(subject.getSamplingRate()).isEqualTo(0.10000123);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java b/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
index 52e4eb84..34d030ba 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/event/EventSerializerTest.java
@@ -1,6 +1,7 @@
 package com.mopub.common.event;
 
 import android.app.Activity;
+import android.content.Context;
 
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -25,7 +26,6 @@
 public class EventSerializerTest {
 
     private EventSerializer subject;
-    private Activity context;
 
     @Mock private Event mockEvent;
     @Mock private ErrorEvent mockErrorEvent;
@@ -35,7 +35,7 @@ public void setUp() {
         subject = new EventSerializer();
 
         // initialize client meta data with context
-        context = Robolectric.buildActivity(Activity.class).create().get();
+        Context context = Robolectric.buildActivity(Activity.class).create().get();
         ClientMetadata.getInstance(context);
 
         populateBaseEventFields(mockEvent);
@@ -115,6 +115,7 @@ private void populateBaseEventFields(BaseEvent mockBaseEvent) {
         when(mockBaseEvent.getAdNetworkType()).thenReturn("admob");
         when(mockBaseEvent.getAdWidthPx()).thenReturn(320.0);
         when(mockBaseEvent.getAdHeightPx()).thenReturn(50.0);
+        when(mockBaseEvent.getDspCreativeId()).thenReturn("jack!fake234");
         when(mockBaseEvent.getAppPlatform()).thenReturn(BaseEvent.AppPlatform.ANDROID);
         when(mockBaseEvent.getAppName()).thenReturn("MoPub Sample App");
         when(mockBaseEvent.getAppPackageName()).thenReturn("com.mopub.simpleadsdemo");
@@ -141,7 +142,7 @@ private void populateBaseEventFields(BaseEvent mockBaseEvent) {
         when(mockBaseEvent.getNetworkSimIsoCountryCode()).thenReturn("US");
         when(mockBaseEvent.getRequestId()).thenReturn("b550796074da4559a27c5072dcba2b27");
         when(mockBaseEvent.getRequestStatusCode()).thenReturn(200);
-        when(mockBaseEvent.getRequestUri()).thenReturn("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        when(mockBaseEvent.getRequestUri()).thenReturn("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         when(mockBaseEvent.getRequestRetries()).thenReturn(0);
         when(mockBaseEvent.getTimestampUtcMs()).thenReturn(1416447053472L);
     }
@@ -165,6 +166,7 @@ private void validateBaseEventFields(JSONObject jsonObject) throws Exception {
         assertThat(jsonObject.getString("ad_network_type")).isEqualTo("admob");
         assertThat(jsonObject.getDouble("ad_width_px")).isEqualTo(320.0);
         assertThat(jsonObject.getDouble("ad_height_px")).isEqualTo(50.0);
+        assertThat(jsonObject.getString("dsp_creative_id")).isEqualTo("jack!fake234");
 
         // App Details
         assertThat(jsonObject.getInt("app_platform")).isEqualTo(2);
@@ -204,7 +206,7 @@ private void validateBaseEventFields(JSONObject jsonObject) throws Exception {
         // Request Details
         assertThat(jsonObject.getString("req_id")).isEqualTo("b550796074da4559a27c5072dcba2b27");
         assertThat(jsonObject.getInt("req_status_code")).isEqualTo(200);
-        assertThat(jsonObject.getString("req_uri")).isEqualTo("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
+        assertThat(jsonObject.getString("req_uri")).isEqualTo("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca");
         assertThat(jsonObject.getInt("req_retries")).isEqualTo(0);
 
         // Timestamp Details
diff --git a/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java b/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
index 9f3cf277..19552de1 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/test/support/SdkTestRunner.java
@@ -4,13 +4,16 @@
 import com.mopub.common.ClientMetadata;
 import com.mopub.common.MoPub;
 import com.mopub.common.MoPubHttpUrlConnection;
+import com.mopub.common.Preconditions;
 import com.mopub.common.event.EventDispatcher;
 import com.mopub.common.event.MoPubEvents;
 import com.mopub.common.factories.MethodBuilderFactory;
 import com.mopub.common.util.AsyncTasks;
 import com.mopub.common.util.DateAndTime;
+import com.mopub.common.util.Reflection;
 import com.mopub.common.util.test.support.ShadowAsyncTasks;
 import com.mopub.common.util.test.support.ShadowMoPubHttpUrlConnection;
+import com.mopub.common.util.test.support.ShadowReflection;
 import com.mopub.common.util.test.support.TestDateAndTime;
 import com.mopub.common.util.test.support.TestMethodBuilderFactory;
 import com.mopub.mobileads.factories.AdViewControllerFactory;
@@ -58,6 +61,7 @@ public InstrumentationConfiguration createClassLoaderConfig() {
         InstrumentationConfiguration.Builder builder = InstrumentationConfiguration.newBuilder();
         builder.addInstrumentedClass(AsyncTasks.class.getName());
         builder.addInstrumentedClass(MoPubHttpUrlConnection.class.getName());
+        builder.addInstrumentedClass(Reflection.class.getName());
         // To mitigate: https://github.com/robolectric/robolectric/issues/2129
         builder.addInstrumentedPackage("org.xyz.testMp");
         return builder.build();
@@ -73,6 +77,10 @@ public InstrumentationConfiguration createClassLoaderConfig() {
         public void prepareTest(Object test) {
             ClientMetadata.clearForTesting();
 
+            // Precondition exceptions should not be thrown during tests so that we can test
+            // for unexpected behavior even after failing a precondition.
+            Preconditions.NoThrow.setStrictMode(false);
+
             DateAndTime.setInstance(new TestDateAndTime());
             CustomEventBannerFactory.setInstance(new TestCustomEventBannerFactory());
             CustomEventInterstitialFactory.setInstance(new TestCustomEventInterstitialFactory());
@@ -89,6 +97,7 @@ public void prepareTest(Object test) {
 
             ShadowAsyncTasks.reset();
             ShadowMoPubHttpUrlConnection.reset();
+            ShadowReflection.reset();
             MoPubEvents.setEventDispatcher(mock(EventDispatcher.class));
             MoPub.setLocationAwareness(LocationAwareness.NORMAL);
             MoPub.setLocationPrecision(6);
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
index d26247a6..18932043 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/DeviceUtilsTest.java
@@ -1,5 +1,6 @@
 package com.mopub.common.util;
 
+import android.Manifest;
 import android.app.Activity;
 import android.content.pm.ActivityInfo;
 import android.content.res.Configuration;
@@ -15,6 +16,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -135,4 +137,28 @@ public void lockOrientation_toPortraitWhenLandscape_shouldBeLandscape() {
         DeviceUtils.lockOrientation(testActivity, CreativeOrientation.PORTRAIT);
         assertThat(testActivity.getRequestedOrientation()).isEqualTo(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
     }
+
+    @Test
+    public void isPermissionGranted_withPermissionGranted_shouldReturnTrue() {
+        Shadows.shadowOf(testActivity).grantPermissions(Manifest.permission.ACCESS_FINE_LOCATION);
+
+        assertThat(DeviceUtils.isPermissionGranted(testActivity, Manifest.permission.ACCESS_FINE_LOCATION)).isTrue();
+    }
+
+    @Test
+    public void isPermissionGranted_withPermissionNotGranted_shouldReturnFalse() {
+        Shadows.shadowOf(testActivity).grantPermissions(Manifest.permission.ACCESS_COARSE_LOCATION);
+
+        assertThat(DeviceUtils.isPermissionGranted(testActivity, Manifest.permission.ACCESS_FINE_LOCATION)).isFalse();
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void isPermissionGranted_withNullContext_shouldThrowNPE() {
+        DeviceUtils.isPermissionGranted(null, Manifest.permission.INTERNET);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void isPermissionGranted_withNullPermission_shouldThrowNPE() {
+        DeviceUtils.isPermissionGranted(testActivity, null);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
index 260747e3..159d9b32 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/IntentsTest.java
@@ -17,6 +17,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.shadows.ShadowApplication;
 
 import java.util.ArrayList;
@@ -122,27 +123,27 @@ public void deviceCanHandleIntent_whenActivityCanNotResolveIntent_shouldReturnFa
     public void intentForNativeBrowserScheme_shouldProperlyHandleEncodedUrls() throws UrlParseException {
         Intent intent;
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.example.com"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.example.com"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com");
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http://www.example.com/?query=1&two=2"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https://www.example.com/?query=1&two=2"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com/?query=1");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com/?query=1");
 
-        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.example.com%2F%3Fquery%3D1%26two%3D2"));
+        intent = Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.example.com%2F%3Fquery%3D1%26two%3D2"));
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        assertThat(intent.getDataString()).isEqualTo("http://www.example.com/?query=1&two=2");
+        assertThat(intent.getDataString()).isEqualTo("https://www.example.com/?query=1&two=2");
     }
 
     @Test(expected = UrlParseException.class)
     public void intentForNativeBrowserScheme_whenNotMoPubNativeBrowser_shouldThrowException() throws UrlParseException {
-        Intents.intentForNativeBrowserScheme(Uri.parse("mailto://navigate?url=http://www.example.com"));
+        Intents.intentForNativeBrowserScheme(Uri.parse("mailto://navigate?url=https://www.example.com"));
     }
 
     @Test(expected = UrlParseException.class)
     public void intentForNativeBrowserScheme_whenNotNavigate_shouldThrowException() throws UrlParseException {
-        Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://getout?url=http://www.example.com"));
+        Intents.intentForNativeBrowserScheme(Uri.parse("mopubnativebrowser://getout?url=https://www.example.com"));
     }
 
     @Test(expected = UrlParseException.class)
@@ -194,13 +195,55 @@ public void intentForShareTweetScheme_whenTweetIdParameterIsEmpty_shouldThrowExc
 
     @Test
     public void launchIntentForUserClick_shouldStartActivity() throws Exception {
-        Context context = Robolectric.buildActivity(Activity.class).create().get()
-                .getApplicationContext();
         Intent intent = mock(Intent.class);
 
-        Intents.launchIntentForUserClick(context, intent, null);
+        Intents.launchIntentForUserClick(applicationContext, intent, null);
         final Intent startedActivity = ShadowApplication.getInstance().peekNextStartedActivity();
 
         assertThat(startedActivity).isNotNull();
     }
+
+    @Test
+    public void launchApplicationUrl_withResolvableUrl_shouldOpenActivity() throws Exception {
+        final String url = "url_to_installed_app";
+        makeUrlResolvable(url);
+
+        Intents.launchApplicationUrl(activityContext, Uri.parse(url));
+        final Intent startedActivity = ShadowApplication.getInstance().peekNextStartedActivity();
+
+        assertThat(startedActivity).isNotNull();
+    }
+
+    @Test(expected = IntentNotResolvableException.class)
+    public void launchApplicationUrl_withUnresolvableUrl_shouldThrowIntentNotResolvableException() throws Exception {
+        final String url = "url_to_installed_app";
+
+        Intents.launchApplicationUrl(activityContext, Uri.parse(url));
+        final Intent startedActivity = ShadowApplication.getInstance().peekNextStartedActivity();
+
+        assertThat(startedActivity).isNull();
+    }
+
+    @Test
+    public void getPlayStoreUri_shouldBuildUriFromIntentPackage() throws Exception {
+        final Intent intent = new Intent();
+        final String appPackage = "com.mopub.test";
+        intent.setPackage(appPackage);
+
+        assertThat(Intents.getPlayStoreUri(intent).toString()).isEqualTo("market://details?id="
+                + appPackage);
+    }
+
+    @Test
+    public void getPlayStoreUri_shouldNotBlowUpWithEmptyPackage() throws Exception {
+        final Intent intent = new Intent();
+
+        assertThat(Intents.getPlayStoreUri(intent).toString())
+                .isEqualTo("market://details?id=null");
+    }
+
+    private void makeUrlResolvable(String url) {
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(
+                new Intent(Intent.ACTION_VIEW, Uri.parse(url)), new ResolveInfo());
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
index 8db4a294..a42b716d 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ManifestUtilsTest.java
@@ -62,6 +62,8 @@ public void tearDown() throws Exception {
         setDebugMode(false);
         // This may have been set to a mock during testing. Reset this class back to normal
         ManifestUtils.setFlagCheckUtil(new ManifestUtils.FlagCheckUtil());
+
+        addInterstitialModule();
     }
 
     @Test
@@ -108,6 +110,21 @@ public void displayWarningForMissingActivities_withAllActivitiesDeclared_shouldN
         assertThat(ShadowLog.getLogs()).isEmpty();
     }
 
+    @Test
+    public void displayWarningForMissingActivities_withoutInterstitialModule_withoutInterstitialActivitiesDeclared_shouldNotShowLogOrToast() throws Exception {
+        removeInterstitialModule();
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MraidVideoPlayerActivity.class), mockResolveInfo);
+        RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MoPubBrowser.class), mockResolveInfo);
+
+        ShadowLog.setupLogging();
+        setDebugMode(true);
+
+        ManifestUtils.displayWarningForMissingActivities(context, requiredWebViewSdkActivities);
+
+        assertThat(ShadowToast.getLatestToast()).isNull();
+        assertThat(ShadowLog.getLogs()).isEmpty();
+    }
+
     @Test
      public void displayWarningForMissingActivities_withOneMissingActivity_shouldLogOnlyThatOne() throws Exception {
         RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(context, MoPubActivity.class), mockResolveInfo);
@@ -363,6 +380,15 @@ public void getRequiredWebViewSdkActivities_shouldIncludeRequiredActivities() th
         );
     }
 
+    @Test
+    public void getRequiredWebViewSdkActivities_withoutInterstitialModule_shouldNotHaveAllRequiredActivities() throws Exception {
+        removeInterstitialModule();
+        assertThat(requiredWebViewSdkActivities).containsOnly(
+                MraidVideoPlayerActivity.class,
+                MoPubBrowser.class
+        );
+    }
+
     @SuppressWarnings("unchecked")
     @Test
     public void getRequiredNativeSdkActivities_shouldIncludeRequiredActivities() throws Exception {
@@ -371,6 +397,24 @@ public void getRequiredNativeSdkActivities_shouldIncludeRequiredActivities() thr
         );
     }
 
+    private void addInterstitialModule() {
+        Class moPubActivityClass = com.mopub.mobileads.MoPubActivity.class;
+        Class mraidActivityClass = com.mopub.mobileads.MraidActivity.class;
+        if (!ManifestUtils.getRequiredWebViewSdkActivities().contains(moPubActivityClass)) {
+            ManifestUtils.getRequiredWebViewSdkActivities().add(moPubActivityClass);
+        }
+        if (!ManifestUtils.getRequiredWebViewSdkActivities().contains(mraidActivityClass)) {
+            ManifestUtils.getRequiredWebViewSdkActivities().add(mraidActivityClass);
+        }
+    }
+
+    private void removeInterstitialModule() {
+        Class moPubActivityClass = com.mopub.mobileads.MoPubActivity.class;
+        Class mraidActivityClass = com.mopub.mobileads.MraidActivity.class;
+        ManifestUtils.getRequiredWebViewSdkActivities().remove(moPubActivityClass);
+        ManifestUtils.getRequiredWebViewSdkActivities().remove(mraidActivityClass);
+    }
+
     private void setDebugMode(boolean enabled) {
         final ApplicationInfo applicationInfo = context.getApplicationInfo();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java b/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
index b36ae026..781d273a 100644
--- a/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/ReflectionTest.java
@@ -9,6 +9,9 @@
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 
+import java.math.BigDecimal;
+import java.math.BigInteger;
+
 import static com.mopub.common.util.Reflection.MethodBuilder;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.fest.assertions.api.Assertions.fail;
@@ -158,4 +161,48 @@ public void execute_withAccessibility_shouldRunPrivateMethods() throws Exception
 
         assertThat(result).isEqualTo(-1);
     }
+
+    @Test
+    public void instantiateClassWithConstructor_withCorrectParameters_shouldInstiantiateObject() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+        Number integer = Reflection.instantiateClassWithConstructor("java.lang.Integer",
+                Number.class, classes, parameters);
+
+        assertThat(integer).isEqualTo(new Integer(30));
+    }
+
+    @Test
+    public void instantiateClassWithConstructor_withCorrectMultipleParameters_shouldInstiantiateObject() throws Exception {
+        Class[] classes = {BigInteger.class, int.class};
+        Object[] parameters = {new BigInteger("10"), 5};
+        Number bigDecimal = Reflection.instantiateClassWithConstructor("java.math.BigDecimal",
+                Number.class, classes, parameters);
+
+        assertThat(bigDecimal).isEqualTo(new BigDecimal(new BigInteger("10"), 5));
+    }
+
+    @Test(expected = ClassCastException.class)
+    public void instantiateClassWithConstructor_withInvalidSuperClass_shouldThrowException() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.Integer", String.class, classes, parameters);
+    }
+
+    @Test(expected = ClassNotFoundException.class)
+    public void instantiateClassWithConstructor_withClassNotFound_shouldThrowException() throws Exception {
+        Class[] classes = {int.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.FakeClass123", Integer.class, classes, parameters);
+    }
+
+    @Test(expected = Exception.class)
+    public void instantiateClassWithConstructor_withMismatchingClassParameters_shouldThrowException() throws Exception {
+        Class[] classes = {boolean.class};
+        Object[] parameters = {30};
+
+        Reflection.instantiateClassWithConstructor("java.lang.Integer", Number.class, classes, parameters);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java b/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java
new file mode 100644
index 00000000..3446601f
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/common/util/test/support/ShadowReflection.java
@@ -0,0 +1,33 @@
+package com.mopub.common.util.test.support;
+
+import com.mopub.common.util.Reflection;
+
+import org.robolectric.annotation.Implementation;
+import org.robolectric.annotation.Implements;
+import org.robolectric.util.ReflectionHelpers;
+
+import static org.robolectric.internal.Shadow.directlyOn;
+
+@Implements(Reflection.class)
+public class ShadowReflection {
+    private static boolean sNextClassNotFound;
+
+    public static void reset() {
+        sNextClassNotFound = false;
+    }
+
+    @Implementation
+    public static boolean classFound(final String className) throws Exception {
+        if (sNextClassNotFound) {
+            sNextClassNotFound = false;
+            return false;
+        }
+
+        return directlyOn(Reflection.class, "classFound",
+                new ReflectionHelpers.ClassParameter<>(String.class, className));
+    }
+
+    public static void setNextClassNotFound(final boolean nextNotFound) {
+        sNextClassNotFound = nextNotFound;
+    }
+}
\ No newline at end of file
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
index da4c0bb0..d743e27c 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdAlertReporterTest.java
@@ -1,6 +1,5 @@
 package com.mopub.mobileads;
 
-import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -17,19 +16,16 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
-import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowApplication;
 
-import java.io.File;
-import java.io.FileOutputStream;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.Locale;
 
 import static org.fest.assertions.api.Assertions.assertThat;
-import static org.mockito.Matchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.reset;
@@ -68,10 +64,8 @@ public void constructor_shouldCreateSendToIntentWithEmailAddress() throws Except
         subject = new AdAlertReporter(mockContext, mockView, mockAdReport);
         emailIntent = subject.getEmailIntent();
 
-        assertThat(emailIntent.getAction()).isEqualTo(Intent.ACTION_SEND_MULTIPLE);
-        assertThat(emailIntent.getType()).isEqualTo("plain/text");
-        assertThat(emailIntent.getData().toString()).isEqualTo("mailto:");
-        assertThat(emailIntent.getStringArrayExtra(Intent.EXTRA_EMAIL)[0]).isEqualTo(EMAIL_ADDRESS);
+        assertThat(emailIntent.getAction()).isEqualTo(Intent.ACTION_SENDTO);
+        assertThat(emailIntent.getData()).isEqualTo(Uri.parse("mailto:creative-review@mopub.com"));
     }
 
     @Test
@@ -118,30 +112,6 @@ public void constructor_shouldCreateIntentWithImageStringAndParametersAndRespons
         assertThat(imageString).isEqualTo("Qml0bWFwICgxMCB4IDEwKSBjcmVhdGVkIGZyb20gQml0bWFwIG9iamVjdCBjb21wcmVzc2VkIGFz\nIEpQRUcgd2l0aCBxdWFsaXR5IDI1\n");
     }
 
-    @Test
-    public void constructor_shouldAddBitmapToAttachmentArray() throws Exception {
-        stub(mockContext.getFilesDir()).toReturn(new File("filesDir"));
-        stub(mockContext.openFileOutput(any(String.class), any(int.class))).toReturn(mock(FileOutputStream.class));
-        subject = new AdAlertReporter(mockContext, mockView, mockAdReport);
-
-        emailAttachments = subject.getEmailAttachments();
-        Uri fileUri = Uri.fromFile(new File("filesDir/mp_adalert_screenshot.png"));
-
-        assertThat(emailAttachments).contains(fileUri);
-    }
-
-    @Test
-    public void constructor_shouldAddParametersTextFileToAttachmentArray() throws Exception {
-        stub(mockContext.getFilesDir()).toReturn(new File("filesDir"));
-        stub(mockContext.openFileOutput(any(String.class), any(int.class))).toReturn(mock(FileOutputStream.class));
-        subject = new AdAlertReporter(mockContext, mockView, mockAdReport);
-
-        emailAttachments = subject.getEmailAttachments();
-        Uri fileUri = Uri.fromFile(new File("filesDir/mp_adalert_parameters.txt"));
-
-        assertThat(emailAttachments).contains(fileUri);
-    }
-
     @Test
     public void constructor_whenAdReportIsNull_shouldReturnEmptyString() throws Exception {
         subject = new AdAlertReporter(mockContext, mockView, null);
@@ -160,45 +130,16 @@ public void constructor_shouldSetCorrectResponseString() throws Exception {
         assertThat(subject.getResponse()).isEqualTo(expectedResponse);
     }
 
-    @Test
-    public void constructor_shouldAddMarkupTextFileToAttachmentArray() throws Exception {
-        stub(mockAdReport.getResponseString()).toReturn("anything!");
-        stub(mockContext.getFilesDir()).toReturn(new File("filesDir"));
-        stub(mockContext.openFileOutput(any(String.class), any(int.class))).toReturn(mock(FileOutputStream.class));
-        subject = new AdAlertReporter(mockContext, mockView, mockAdReport);
-
-        emailAttachments = subject.getEmailAttachments();
-        Uri fileUri = Uri.fromFile(new File("filesDir/mp_adalert_markup.html"));
-
-        assertThat(emailAttachments).contains(fileUri);
-    }
-
-    @Test
-    public void send_shouldAddAttachmentsToIntent() throws Exception {
-        stub(mockContext.getFilesDir()).toReturn(new File("filesDir"));
-        stub(mockContext.openFileOutput(any(String.class), any(int.class))).toReturn(mock(FileOutputStream.class));
-        stub(mockAdReport.getResponseString()).toReturn("anything!");
-        subject = new AdAlertReporter(mockContext, mockView, mockAdReport);
-        subject.send();
-
-        emailIntent = subject.getEmailIntent();
-        ArrayList<Uri> attachments = emailIntent.getParcelableArrayListExtra(Intent.EXTRA_STREAM);
-
-        assertThat(attachments.size()).isEqualTo(3);
-        assertThat(attachments).contains(Uri.fromFile(new File("filesDir/mp_adalert_screenshot.png")));
-        assertThat(attachments).contains(Uri.fromFile(new File("filesDir/mp_adalert_parameters.txt")));
-        assertThat(attachments).contains(Uri.fromFile(new File("filesDir/mp_adalert_markup.html")));
-    }
-
     @Test
     public void send_shouldCreateEmailChooserIntent() throws Exception {
-
-        subject = new AdAlertReporter(Robolectric.buildActivity(Activity.class).create().get(), mockView, mockAdReport);
+        final Context applicationContext = RuntimeEnvironment.application;
+        // A real device uses application context here, which causes Intents.startActivity to add
+        // FLAG_ACTIVITY_NEW_TASK (and thus we assert for it below)
+        subject = new AdAlertReporter(applicationContext, mockView, mockAdReport);
         subject.send();
 
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
-        assertThat(intent.getAction()).isEqualTo(Intent.ACTION_CHOOSER);
-        assertThat(intent.getStringExtra(Intent.EXTRA_TITLE)).isEqualTo("Send Email...");
+        assertThat(intent.getAction()).isEqualTo(Intent.ACTION_SENDTO);
         assertThat(intent.getFlags() & Intent.FLAG_ACTIVITY_NEW_TASK).isNotEqualTo(0);
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java
deleted file mode 100644
index dbf9250f..00000000
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdLoaderTest.java
+++ /dev/null
@@ -1,142 +0,0 @@
-package com.mopub.mobileads;
-
-import com.mopub.common.test.support.SdkTestRunner;
-import com.mopub.network.AdResponse;
-
-import org.fest.assertions.core.Condition;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.robolectric.annotation.Config;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import static org.fest.assertions.api.Assertions.assertThat;
-import static org.mockito.Matchers.anyMapOf;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
-import static org.mockito.Mockito.verifyZeroInteractions;
-import static org.mockito.Mockito.when;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class AdLoaderTest {
-
-    @Mock
-    private AdViewController adViewController;
-    @Mock
-    private MoPubView moPubView;
-    private AdResponse adResponse;
-    private Map<String, String> serverExtras;
-
-    @Before
-    public void setup() {
-        adResponse = new AdResponse.Builder()
-                .setResponseBody("<html></html>")
-                .setClickTrackingUrl("clickthrough")
-                .setRedirectUrl("redirect")
-                .setScrollable(false)
-                .build();
-        serverExtras = new HashMap<String, String>();
-        serverExtras.put("test", "hi");
-        when(adViewController.getMoPubView()).thenReturn(moPubView);
-    }
-
-    @Test
-    public void fromAdResponse_whenCustomEvent_shouldCreateAdLoadTask() throws Exception {
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-        assertThat(customEventTask).isNotNull();
-        assertThat(customEventTask.getServerExtras()).isEqualTo(serverExtras);
-    }
-
-
-    @Test
-    public void fromAdResponse_whenHtml_shouldBeModernAdLoadTask() {
-        adResponse = adResponse.toBuilder()
-                .setAdType("html")
-                .setCustomEventClassName("com.mopub.mobileads.HtmlBanner")
-                .setServerExtras(serverExtras)
-                .build();
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-        assertThat(customEventTask).isNotNull();
-        assertThat(customEventTask.getServerExtras()).has(new Condition<Map<String, String>>() {
-            @Override
-            public boolean matches(final Map<String, String> stringStringMap) {
-                return stringStringMap.containsKey("test");
-            }
-        });
-    }
-
-    @Test
-    public void fromAdResponse_whenCustomMethod_shouldReturnNull() {
-        adResponse = adResponse.toBuilder()
-                .setCustomEventClassName(null)
-                .build();
-
-        assertThat(AdLoader.fromAdResponse(adResponse, adViewController)).isNull();
-    }
-
-    @Test
-    public void load_shouldCallAdViewController() {
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-        verify(adViewController).getMoPubView();
-        verify(moPubView).loadCustomEvent(eq("custom event name"), anyMapOf(String.class, String.class));
-    }
-
-    @Test
-    public void load_controllerDestroyed_shouldDoNothing() {
-        when(adViewController.isDestroyed()).thenReturn(true);
-
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-        verify(adViewController).isDestroyed();
-        verifyNoMoreInteractions(adViewController);
-        verifyZeroInteractions(moPubView);
-    }
-
-    @Test
-    public void load_withNullMoPubView_shouldDoNothing() throws Exception {
-        when(adViewController.getMoPubView()).thenReturn(null);
-
-        adResponse = adResponse.toBuilder()
-                .setAdType("custom")
-                .setCustomEventClassName("custom event name")
-                .setServerExtras(serverExtras)
-                .build();
-
-        AdLoader.CustomEventAdLoader customEventTask = (AdLoader.CustomEventAdLoader) AdLoader.fromAdResponse(adResponse, adViewController);
-
-        customEventTask.load();
-
-        verify(adViewController).getMoPubView();
-        verifyZeroInteractions(moPubView);
-    }
-}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdTypeTranslatorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdTypeTranslatorTest.java
index 5123a7f2..64071c25 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdTypeTranslatorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdTypeTranslatorTest.java
@@ -131,4 +131,12 @@ public void getCustomEventName_whenInvalidAdTypeAndInvalidFullAdType_shouldRetur
                 headers);
         assertThat(customEventName).isNull();
     }
+
+    @Test
+    public void getCustomEventName_withRewardedVideoFormat_shouldBeMoPubRewardedVideo() {
+        customEventName = AdTypeTranslator.getCustomEventName(AdFormat.REWARDED_VIDEO,
+                AdType.REWARDED_VIDEO, null, headers);
+
+        assertThat(customEventName).isEqualTo("com.mopub.mobileads.MoPubRewardedVideo");
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
index 02afa4e4..9728aa1b 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/AdViewControllerTest.java
@@ -36,10 +36,13 @@
 import org.robolectric.shadows.ShadowLooper;
 
 import java.util.Collections;
+import java.util.Map;
 
 import static com.mopub.common.VolleyRequestMatcher.isUrl;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyMap;
+import static org.mockito.Matchers.anyString;
 import static org.mockito.Matchers.argThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
@@ -60,10 +63,8 @@
             409, 410, 411, 412, 413, 414, 415, 416, 417, 500, 501, 502, 503, 504, 505};
 
     private AdViewController subject;
-    @Mock
-    private MoPubView mockMoPubView;
-    @Mock
-    private MoPubRequestQueue mockRequestQueue;
+    @Mock private MoPubView mockMoPubView;
+    @Mock private MoPubRequestQueue mockRequestQueue;
     private Reflection.MethodBuilder methodBuilder;
 
     private AdResponse response;
@@ -315,6 +316,7 @@ public void fetchAd_withNullMoPubView_shouldNotMakeRequest() throws Exception {
     public void loadAd_shouldNotLoadWithoutConnectivity() throws Exception {
         ConnectivityManager connectivityManager = (ConnectivityManager) RuntimeEnvironment.application.getSystemService(Context.CONNECTIVITY_SERVICE);
         Shadows.shadowOf(connectivityManager.getActiveNetworkInfo()).setConnectionStatus(false);
+        subject.setAdUnitId("adunit");
 
         subject.loadAd();
         verifyZeroInteractions(mockRequestQueue);
@@ -329,7 +331,7 @@ public void loadAd_shouldNotLoadUrlIfAdUnitIdIsNull() throws Exception {
 
     @Test
     public void loadNonJavascript_shouldFetchAd() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
 
         verify(mockRequestQueue).add(argThat(isUrl(url)));
@@ -337,7 +339,7 @@ public void loadNonJavascript_shouldFetchAd() throws Exception {
 
     @Test
     public void loadNonJavascript_whenAlreadyLoading_shouldNotFetchAd() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
         reset(mockRequestQueue);
         subject.loadNonJavascript(url);
@@ -353,7 +355,7 @@ public void loadNonJavascript_shouldAcceptNullParameter() throws Exception {
 
     @Test
     public void reload_shouldReuseOldUrl() throws Exception {
-        String url = "http://www.guy.com";
+        String url = "https://www.guy.com";
         subject.loadNonJavascript(url);
         subject.setNotLoading();
         reset(mockRequestQueue);
@@ -571,6 +573,32 @@ public void onAdLoadError_withInvalidServerResponse_shouldReturnErrorCodeServerE
         verify(mockMoPubView, times(HTML_ERROR_CODES.length)).adFailed(MoPubErrorCode.SERVER_ERROR);
     }
 
+    @Test
+    public void loadCustomEvent_shouldCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        String customEventClassName = "customEventClassName";
+        subject.loadCustomEvent(mockMoPubView, customEventClassName, serverExtras);
+
+        verify(mockMoPubView).loadCustomEvent(customEventClassName, serverExtras);
+    }
+
+    @Test
+    public void loadCustomEvent_withNullMoPubView_shouldNotCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        String customEventClassName = "customEventClassName";
+        subject.loadCustomEvent(null, customEventClassName, serverExtras);
+
+        verify(mockMoPubView, never()).loadCustomEvent(anyString(), anyMap());
+    }
+
+    @Test
+    public void loadCustomEvent_withNullCustomEventClassName_shouldCallMoPubViewLoadCustomEvent() throws Exception {
+        Map serverExtras = mock(Map.class);
+        subject.loadCustomEvent(mockMoPubView, null, serverExtras);
+
+        verify(mockMoPubView).loadCustomEvent(null, serverExtras);
+    }
+
     @Test
     public void getErrorCodeFromVolleyError_whenNoConnection_shouldReturnErrorCodeNoConnection() {
         final VolleyError noConnectionError = new NoConnectionError();
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
index 7c420081..d7f57390 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseVideoPlayerActivityTest.java
@@ -30,7 +30,7 @@
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class BaseVideoPlayerActivityTest {
-    private static final String MRAID_VIDEO_URL = "http://mraidVideo";
+    private static final String MRAID_VIDEO_URL = "https://mraidVideo";
 
     private long testBroadcastIdentifier;
     private VastVideoConfig mVastVideoConfig;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
index c63b638d..89eb1187 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/BaseWebViewTest.java
@@ -14,6 +14,7 @@
 import org.robolectric.Robolectric;
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
+import org.robolectric.fakes.RoboWebSettings;
 import org.robolectric.shadows.ShadowWebView;
 
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -44,6 +45,33 @@ public void beforeJellyBeanMr1_shouldDisablePluginsByDefault() throws Exception
         assertThat(webSettings.getPluginState()).isEqualTo(WebSettings.PluginState.ON);
     }
 
+    @Test
+    public void allPlatforms_shouldDisableFileAccess() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowFileAccess()).isEqualTo(false);
+    }
+
+    @Config(sdk = VERSION_CODES.JELLY_BEAN) // Robo doesn't go earlier than this.
+    @Test
+    public void atLeastHoneyComb_shouldDisableContentAccess() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowContentAccess()).isEqualTo(false);
+    }
+
+    @Config(sdk = VERSION_CODES.JELLY_BEAN)
+    @Test
+    public void atLeastJellybean_shouldDisableAccessFromFileUrls() {
+        subject = new BaseWebView(context);
+
+        final WebSettings webSettings = subject.getSettings();
+        assertThat(webSettings.getAllowFileAccessFromFileURLs()).isEqualTo(false);
+        assertThat(webSettings.getAllowUniversalAccessFromFileURLs()).isEqualTo(false);
+    }
+
     @Config(sdk = VERSION_CODES.JELLY_BEAN_MR2)
     @Test
     public void atLeastJellybeanMr2_shouldPass() throws Exception {
@@ -54,6 +82,19 @@ public void atLeastJellybeanMr2_shouldPass() throws Exception {
         // pass
     }
 
+    @Test
+    public void enableJavascriptCaching_enablesJavascriptDomStorageAndAppCache() {
+        subject = new BaseWebView(context);
+        final RoboWebSettings settings = (RoboWebSettings) subject.getSettings();
+
+        subject.enableJavascriptCaching();
+
+        assertThat(settings.getJavaScriptEnabled()).isTrue();
+        assertThat(settings.getDomStorageEnabled()).isTrue();
+        assertThat(settings.getAppCacheEnabled()).isTrue();
+        assertThat(settings.getAppCachePath()).isEqualTo(context.getCacheDir().getAbsolutePath());
+    }
+
     @Test
     public void destroy_shouldRemoveSelfFromParent_beforeCallingDestroy() throws Exception {
         subject = new BaseWebView(context);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java
deleted file mode 100644
index 072156bd..00000000
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventAdLoaderTest.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.mopub.mobileads;
-
-import com.mopub.common.test.support.SdkTestRunner;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.never;
-import static org.mockito.Mockito.stub;
-import static org.mockito.Mockito.verify;
-
-@RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
-public class CustomEventAdLoaderTest {
-
-    private AdViewController adViewController;
-    private AdLoader.CustomEventAdLoader subject;
-    private String customEventName;
-    private Map<String, String> serverExtras;
-    private MoPubView moPubView;
-
-    @Before
-    public void setup() {
-        moPubView = mock(MoPubView.class);
-        adViewController = mock(AdViewController.class);
-        stub(adViewController.getMoPubView()).toReturn(moPubView);
-        customEventName = "testCustomEvent";
-        serverExtras = new HashMap<String, String>();
-        subject = new AdLoader.CustomEventAdLoader(adViewController,
-                customEventName, serverExtras);
-    }
-
-    @Test
-    public void execute_shouldCallLoadCustomEvent() throws Exception {
-        subject.load();
-
-        verify(adViewController).setNotLoading();
-        verify(moPubView).loadCustomEvent(eq(customEventName), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenAdViewControllerIsNull_shouldDoNothing() throws Exception {
-        subject = new AdLoader.CustomEventAdLoader(null, customEventName, serverExtras);
-
-        subject.load();
-        // pass
-    }
-
-    @Test
-    public void execute_whenAdViewControllerIsDestroyed_shouldDoNothing() throws Exception {
-        stub(adViewController.isDestroyed()).toReturn(true);
-
-        subject.load();
-
-        verify(adViewController, never()).setNotLoading();
-        verify(moPubView, never()).loadCustomEvent(eq(customEventName), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenCustomEventIsNull_shouldDoNothing() {
-        subject = new AdLoader.CustomEventAdLoader(adViewController, null, serverExtras);
-
-        subject.load();
-
-        verify(adViewController, never()).setNotLoading();
-        verify(moPubView, never()).loadCustomEvent((String) eq(null), eq(serverExtras));
-    }
-
-    @Test
-    public void execute_whenParamsMapIsNull_shouldLoadNullParamsMap() throws Exception {
-        subject = new AdLoader.CustomEventAdLoader(adViewController, customEventName, null);
-
-        subject.load();
-
-        verify(adViewController).setNotLoading();
-        verify(moPubView).loadCustomEvent(eq(customEventName), (Map<String, String>) eq(null));
-    }
-}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
index a08a9163..1dd64a58 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventBannerAdapterTest.java
@@ -197,6 +197,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(assertTimeoutRunnableHasStarted)
                 .when(banner)
                 .loadBanner(
@@ -224,6 +225,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(justCallOnBannerFailed)
                 .when(banner)
                 .loadBanner(
@@ -317,6 +319,7 @@ public void invalidate_shouldCauseLoadAdToDoNothing() throws Exception {
 
         subject.loadAd();
 
+        // noinspection unchecked
         verify(banner, never()).loadBanner(
                 any(Context.class),
                 any(CustomEventBannerListener.class),
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
index fcbf5a2e..e5934618 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/CustomEventInterstitialAdapterTest.java
@@ -196,6 +196,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(assertTimeoutRunnableHasStarted)
                 .when(interstitial)
                 .loadInterstitial(
@@ -222,6 +223,7 @@ public Object answer(InvocationOnMock invocationOnMock) throws Throwable {
             }
         };
 
+        // noinspection unchecked
         doAnswer(justCallOnInterstitialFailed)
                 .when(interstitial)
                 .loadInterstitial(
@@ -298,6 +300,7 @@ public void invalidate_shouldCauseLoadInterstitialToDoNothing() throws Exception
 
         subject.loadInterstitial();
 
+        // noinspection unchecked
         verify(interstitial, never()).loadInterstitial(
                 any(Context.class),
                 any(CustomEventInterstitialListener.class),
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
index b4944b80..e5f40f61 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/EventForwardingBroadcastReceiverTest.java
@@ -23,11 +23,10 @@
 import java.util.Set;
 
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
@@ -99,7 +98,7 @@ public void constructor_shouldSetIntentFilter() throws Exception {
                 ACTION_INTERSTITIAL_CLICK
         );
 
-        final IntentFilter intentFilter = EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter();
+        final IntentFilter intentFilter = subject.getIntentFilter();
         final Iterator<String> actionIterator = intentFilter.actionsIterator();
 
         assertThat(intentFilter.countActions()).isEqualTo(4);
@@ -174,7 +173,7 @@ public void onReceiver_whenCustomEventInterstitialListenerIsNull_shouldNotBlowUp
 
     @Test
     public void register_shouldEnableReceivingBroadcasts() throws Exception {
-        subject.register(context);
+        subject.register(subject, context);
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
         ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
@@ -183,9 +182,9 @@ public void register_shouldEnableReceivingBroadcasts() throws Exception {
 
     @Test
     public void unregister_shouldDisableReceivingBroadcasts() throws Exception {
-        subject.register(context);
+        subject.register(subject, context);
 
-        subject.unregister();
+        subject.unregister(subject);
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
         ShadowLocalBroadcastManager.getInstance(context).sendBroadcast(intent);
 
@@ -194,18 +193,18 @@ public void unregister_shouldDisableReceivingBroadcasts() throws Exception {
 
     @Test
     public void unregister_whenNotRegistered_shouldNotBlowUp() throws Exception {
-        subject.unregister();
+        subject.unregister(subject);
 
         // pass
     }
 
     @Test
     public void unregister_shouldNotLeakTheContext() throws Exception {
-        subject.register(context);
-        subject.unregister();
+        subject.register(subject, context);
+        subject.unregister(subject);
 
-        LocalBroadcastManager.getInstance(context).registerReceiver(subject, getHtmlInterstitialIntentFilter());
-        subject.unregister();
+        LocalBroadcastManager.getInstance(context).registerReceiver(subject, subject.getIntentFilter());
+        subject.unregister(subject);
 
         // Unregister shouldn't know the context any more and so should not have worked
         Intent intent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, broadcastIdentifier);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
index 89168462..dc2a4ce6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlBannerWebViewTest.java
@@ -30,6 +30,7 @@
     private CustomEventBannerListener customEventBannerListener;
     private String clickthroughUrl;
     private String redirectUrl;
+    private String dspCreativeId;
 
     @Before
     public void setup() throws Exception {
@@ -38,11 +39,12 @@ public void setup() throws Exception {
         customEventBannerListener = mock(CustomEventBannerListener.class);
         clickthroughUrl = "clickthroughUrl";
         redirectUrl = "redirectUrl";
+        dspCreativeId = "dspCreativeId";
     }
 
     @Test
     public void init_shouldSetupWebViewClient() throws Exception {
-        subject.init(customEventBannerListener, false, clickthroughUrl, redirectUrl);
+        subject.init(customEventBannerListener, false, clickthroughUrl, redirectUrl, dspCreativeId);
         WebViewClient webViewClient = Shadows.shadowOf(subject).getWebViewClient();
         assertThat(webViewClient).isNotNull();
         assertThat(webViewClient).isInstanceOf(HtmlWebViewClient.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
index df8821fe..d641f19c 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialTest.java
@@ -23,8 +23,8 @@
 import static com.mopub.common.DataKeys.REDIRECT_URL_KEY;
 import static com.mopub.common.DataKeys.SCROLLABLE_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
index a649c6a9..2a73c7d3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlInterstitialWebViewTest.java
@@ -32,6 +32,7 @@
     private String clickthroughUrl;
     private boolean isScrollable;
     private String redirectUrl;
+    private String dspCreativeId;
 
     @Before
     public void setUp() throws Exception {
@@ -41,11 +42,12 @@ public void setUp() throws Exception {
         isScrollable = false;
         clickthroughUrl = "clickthroughUrl";
         redirectUrl = "redirectUrl";
+        dspCreativeId = "dspCreativeId";
     }
 
     @Test
     public void init_shouldSetupWebViewClient() throws Exception {
-        subject.init(customEventInterstitialListener, false, clickthroughUrl, redirectUrl);
+        subject.init(customEventInterstitialListener, false, clickthroughUrl, redirectUrl, dspCreativeId);
         WebViewClient webViewClient = Shadows.shadowOf(subject).getWebViewClient();
         assertThat(webViewClient).isNotNull();
         assertThat(webViewClient).isInstanceOf(HtmlWebViewClient.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
index 3f388835..ddc9feb7 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/HtmlWebViewClientTest.java
@@ -36,7 +36,7 @@
 @Config(constants = BuildConfig.class)
 public class HtmlWebViewClientTest {
 
-    private static final String CLICKTHROUGH_URL = "http://clickthrough";
+    private static final String CLICKTHROUGH_URL = "https://clickthrough";
 
     private HtmlWebViewClient subject;
     private HtmlWebViewListener htmlWebViewListener;
@@ -50,7 +50,8 @@ public void setUp() throws Exception {
         context = Robolectric.buildActivity(Activity.class).create().get().getApplicationContext();
         when(htmlWebView.getContext()).thenReturn(context);
         when(htmlWebView.wasClicked()).thenReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL,
+                "redirect", "dsp_creative_id");
     }
 
     @Test
@@ -91,7 +92,7 @@ public void shouldOverrideUrlLoading_withPhoneIntent_shouldStartDefaultIntent()
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_andCanHandleCustomIntent_shouldTryToLaunchCustomIntent() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
         RuntimeEnvironment.getRobolectricPackageManager().addResolveInfoForIntent(new Intent(Intent.ACTION_VIEW, Uri.parse(customUrl)), new ResolveInfo());
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
@@ -106,7 +107,7 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_a
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withoutUserClick_shouldNotTryToLaunchIntent() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
 
@@ -120,7 +121,7 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withoutUserClic
     public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_butCanNotHandleCustomIntent_shouldFailSilently() throws Exception {
         String customUrl = "myintent://something";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, customUrl);
 
@@ -134,8 +135,8 @@ public void shouldOverrideUrlLoading_withCustomApplicationIntent_withUserClick_b
     @Test
     public void shouldOverrideUrlLoading_withHttpUrl_withUserClick_shouldOpenBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
-        String validUrl = "http://www.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, "dsp_creative_id");
+        String validUrl = "https://www.mopub.com";
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
 
         assertThat(didOverrideUrl).isTrue();
@@ -144,14 +145,15 @@ public void shouldOverrideUrlLoading_withHttpUrl_withUserClick_shouldOpenBrowser
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getComponent().getClassName()).isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY)).isEqualTo(validUrl);
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID)).isEqualTo("dsp_creative_id");
         assertThat(startedActivity.getData()).isNull();
     }
 
     @Test
     public void shouldOverrideUrlLoading_withHttpUrl_withoutUserClick_shouldNotOpenBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
-        String validUrl = "http://www.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
+        String validUrl = "https://www.mopub.com";
         boolean didOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
 
         assertThat(didOverrideUrl).isTrue();
@@ -162,7 +164,7 @@ public void shouldOverrideUrlLoading_withHttpUrl_withoutUserClick_shouldNotOpenB
 
     @Test
     public void shouldOverrideUrlLoading_withClickTrackingRedirect_withUserClick_shouldNotChangeUrl() throws Exception {
-        String validUrl = "http://www.mopub.com";
+        String validUrl = "https://www.mopub.com";
         stub(htmlWebView.wasClicked()).toReturn(true);
 
         subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
@@ -173,7 +175,7 @@ public void shouldOverrideUrlLoading_withClickTrackingRedirect_withUserClick_sho
 
     @Test
     public void shouldOverrideUrlLoading_withClickTrackingRedirect_withoutUserClick_shouldChangeUrl() throws Exception {
-        String validUrl = "http://www.mopub.com";
+        String validUrl = "https://www.mopub.com";
         stub(htmlWebView.wasClicked()).toReturn(false);
 
         subject.shouldOverrideUrlLoading(htmlWebView, validUrl);
@@ -184,7 +186,7 @@ public void shouldOverrideUrlLoading_withClickTrackingRedirect_withoutUserClick_
     @Test
     public void shouldOverrideUrlLoading_withEmptyUrl_withUserClick_shouldFailSilently() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "");
 
@@ -195,7 +197,7 @@ public void shouldOverrideUrlLoading_withEmptyUrl_withUserClick_shouldFailSilent
     @Test
     public void shouldOverrideUrlLoading_withEmptyUrl_withoutUserClick_shouldLoadAboutBlank() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "");
 
@@ -205,26 +207,26 @@ public void shouldOverrideUrlLoading_withEmptyUrl_withoutUserClick_shouldLoadAbo
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withUserClick_shouldStartIntentWithActionView() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView,
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com");
 
         assertThat(shouldOverrideUrl).isTrue();
         verify(htmlWebViewListener).onClicked();
         verify(htmlWebView).onResetUserClick();
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getAction()).isEqualTo("android.intent.action.VIEW");
-        assertThat(startedActivity.getData().toString()).isEqualTo("http://www.mopub.com");
+        assertThat(startedActivity.getData().toString()).isEqualTo("https://www.mopub.com");
     }
 
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withoutUserClick_shouldStartIntentWithActionView() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView,
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com");
 
         assertThat(shouldOverrideUrl).isTrue();
         verify(htmlWebViewListener, never()).onClicked();
@@ -235,8 +237,8 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withoutUserClick_sh
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withUserClick_shouldNotBeHandledByNativeBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=http%3A%2F%2Fwww.mopub.com";
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=https%3A%2F%2Fwww.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, opaqueNativeBrowserUriString);
 
@@ -250,8 +252,8 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withUs
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withoutUserClick_shouldNotLoad() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=http%3A%2F%2Fwww.mopub.com";
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        String opaqueNativeBrowserUriString = "mopubnativebrowser:navigate?url=https%3A%2F%2Fwww.mopub.com";
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, opaqueNativeBrowserUriString);
 
@@ -265,7 +267,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_butOpaqueUri_withou
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSchemeUrl_withUserClick_shouldFailSilently() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, "something://blah?url=invalid");
 
@@ -280,7 +282,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSche
     @Test
     public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSchemeUrl_withoutUserClick_shouldNotInvokeNativeBrowser() throws Exception {
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         boolean shouldOverrideUrl = subject.shouldOverrideUrlLoading(htmlWebView, "something://blah?url=invalid");
 
@@ -292,7 +294,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserScheme_withInvalidHostSche
 
     @Test
     public void shouldOverrideUrlLoading_withAboutBlankUrl_shouldFailSilently() {
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null);
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, null, null);
 
         subject.shouldOverrideUrlLoading(htmlWebView, "about:blank");
 
@@ -328,7 +330,7 @@ public void shouldOverrideUrlLoading_withPhoneScheme_withoutUserClick_shouldDoNo
 
     @Test
     public void shouldOverrideUrlLoading_withMarketUrl_withoutUserClick_shouldDoNothing() throws Exception {
-        assertNothingHappensWithoutClick("http://play.google.com/");
+        assertNothingHappensWithoutClick("https://play.google.com/");
     }
 
     @Test
@@ -338,7 +340,7 @@ public void shouldOverrideUrlLoading_withNativeBrowserUrl_withoutUserClick_shoul
 
     @Test
     public void shouldOverrideUrlLoading_withInAppBrowserUrl_withoutUserClick_shouldDoNothing() throws Exception {
-        assertNothingHappensWithoutClick("http://twitter.com");
+        assertNothingHappensWithoutClick("https://twitter.com");
     }
 
     @Test
@@ -350,7 +352,7 @@ public void shouldOverrideUrlLoading_withDeepLinkUrl_withoutUserClick_shouldDoNo
     public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOpenInBrowser() throws Exception {
         String url = "redirectUrlToLoad";
         stub(htmlWebView.wasClicked()).toReturn(true);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect", "dsp_creative_id");
         WebView view = mock(WebView.class);
         subject.onPageStarted(view, url, null);
 
@@ -358,6 +360,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOp
 
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(intent.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY)).isEqualTo(url);
+        assertThat(intent.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID)).isEqualTo("dsp_creative_id");
         assertThat(intent.getFlags() & Intent.FLAG_ACTIVITY_NEW_TASK).isNotEqualTo(0);
         assertThat(intent.getComponent().getClassName()).isEqualTo("com.mopub.common.MoPubBrowser");
     }
@@ -366,7 +369,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirect_withUserClick_shouldOp
     public void onPageStarted_whenLoadedUrlStartsWithRedirect_withoutUserClick_shouldOpenInBrowser() throws Exception {
         String url = "redirectUrlToLoad";
         stub(htmlWebView.wasClicked()).toReturn(false);
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, null, "redirect", "dsp_creative_id");
         WebView view = mock(WebView.class);
         subject.onPageStarted(view, url, null);
 
@@ -414,7 +417,7 @@ public void onPageStarted_whenLoadedUrlStartsWithRedirectAndHasClickthrough_with
                 .doNothing()
                 .when(mockContext).startActivity(any(Intent.class));
 
-        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect");
+        subject = new HtmlWebViewClient(htmlWebViewListener, htmlWebView, CLICKTHROUGH_URL, "redirect", "dsp_creative_id");
         subject.onPageStarted(htmlWebView, url, null);
 
         ArgumentCaptor<Intent> intentArgumentCaptor = ArgumentCaptor.forClass(Intent.class);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
index 1254bd10..10dd9951 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubActivityTest.java
@@ -34,11 +34,10 @@
 import static com.mopub.common.DataKeys.REDIRECT_URL_KEY;
 import static com.mopub.common.DataKeys.SCROLLABLE_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.UNSPECIFIED;
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -57,7 +56,7 @@
     private static final boolean EXPECTED_IS_SCROLLABLE = true;
     @Mock private AdReport mockAdReport;
     private static final String EXPECTED_REDIRECT_URL = "redirectUrl";
-    private static final String EXPECTED_CLICKTHROUGH_URL = "http://expected_url";
+    private static final String EXPECTED_CLICKTHROUGH_URL = "https://expected_url";
     private static final CreativeOrientation EXPECTED_ORIENTATION = CreativeOrientation.PORTRAIT;
 
     @Mock private BroadcastReceiver broadcastReceiver;
@@ -81,7 +80,9 @@ public void setUp() throws Exception {
 
         final ActivityController<MoPubActivity> subjectController = Robolectric.buildActivity(MoPubActivity.class).withIntent(moPubActivityIntent);
         subject = subjectController.get();
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
         subjectController.create();
 
         customEventInterstitialListener = mock(CustomEventInterstitialListener.class);
@@ -103,6 +104,14 @@ public void preRenderHtml_shouldPreloadTheHtml() throws Exception {
         verify(htmlInterstitialWebView).loadHtmlResponse(htmlData);
     }
 
+    @Test
+    public void preRenderHtml_shouldEnableJavascriptCachingForDummyWebView() {
+        MoPubActivity.preRenderHtml(subject, mockAdReport, customEventInterstitialListener,
+                "html_data");
+
+        verify(htmlInterstitialWebView).enableJavascriptCaching();
+    }
+
     @Test
     public void preRenderHtml_shouldHaveAWebViewClientThatForwardsFinishLoad() throws Exception {
         MoPubActivity.preRenderHtml(subject, mockAdReport, customEventInterstitialListener, null);
@@ -212,7 +221,9 @@ public void getAdView_shouldCreateHtmlInterstitialWebViewAndLoadResponse() throw
     public void getAdView_shouldSetUpForBroadcastingClicks() throws Exception {
         subject.getAdView();
         BroadcastReceiver broadcastReceiver = mock(BroadcastReceiver.class);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
         TestHtmlInterstitialWebViewFactory.getLatestListener().onInterstitialClicked();
 
@@ -226,7 +237,9 @@ public void getAdView_shouldSetUpForBroadcastingClicks() throws Exception {
     public void getAdView_shouldSetUpForBroadcastingFail() throws Exception {
         subject.getAdView();
         BroadcastReceiver broadcastReceiver = mock(BroadcastReceiver.class);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
         TestHtmlInterstitialWebViewFactory.getLatestListener().onInterstitialFailed(UNSPECIFIED);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
index 2c0b3f95..c81d7166 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubInterstitialTest.java
@@ -1,6 +1,7 @@
 package com.mopub.mobileads;
 
 import android.app.Activity;
+import android.support.annotation.NonNull;
 
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.test.support.TestAdViewControllerFactory;
@@ -22,13 +23,18 @@
 import static com.mopub.mobileads.MoPubErrorCode.CANCELLED;
 import static com.mopub.mobileads.MoPubErrorCode.INTERNAL_ERROR;
 import static com.mopub.mobileads.MoPubErrorCode.UNSPECIFIED;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.DESTROYED;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.IDLE;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.LOADING;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.READY;
+import static com.mopub.mobileads.MoPubInterstitial.InterstitialState.SHOWING;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.reset;
 import static org.mockito.Mockito.verify;
-
+import static org.mockito.Mockito.verifyZeroInteractions;
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MoPubInterstitialTest {
@@ -68,6 +74,7 @@ public void setUp() throws Exception {
     public void forceRefresh_shouldResetInterstitialViewAndMarkNotDestroyed() throws Exception {
         subject.setInterstitialView(interstitialView);
         subject.onCustomEventInterstitialLoaded();
+        subject.setCurrentInterstitialState(READY);
         subject.forceRefresh();
 
         assertThat(subject.isReady()).isFalse();
@@ -267,6 +274,7 @@ public void newlyCreated_shouldNotBeReadyAndNotShow() throws Exception {
 
     @Test
     public void loadingCustomEventInterstitial_shouldBecomeReadyToShowCustomEventAd() throws Exception {
+        subject.load();
         subject.onCustomEventInterstitialLoaded();
 
         assertShowsCustomEventInterstitial(true);
@@ -333,6 +341,350 @@ public void adFailed_shouldNotifyInterstitialAdListener() throws Exception {
         verify(interstitialAdListener).onInterstitialFailed(eq(subject), eq(CANCELLED));
     }
 
+    @Test
+    public void attemptStateTransition_withIdleStartState() {
+        /**
+         * IDLE can go to LOADING when load or forceRefresh is called. IDLE can also go to
+         * DESTROYED if the interstitial view is destroyed.
+         */
+
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(IDLE);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verify(customEventInterstitialAdapter).invalidate();
+        verify(interstitialView).loadAd();
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verify(customEventInterstitialAdapter).invalidate();
+        verify(interstitialView).forceRefresh();
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(IDLE);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+    }
+
+    @Test
+    public void attemptStateTransition_withLoadingStartState() {
+        /**
+         * LOADING can go to IDLE if a force refresh happens. LOADING can also go into IDLE if an
+         * ad failed to load. LOADING should go to READY when the interstitial is done loading.
+         * LOADING can go to DESTROYED if the interstitial view is destroyed.
+         */
+
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(LOADING);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(LOADING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(LOADING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+    }
+
+    @Test
+    public void attemptStateTransition_withReadyStartState() {
+        /**
+         * This state should succeed for going to SHOWING. It is also possible to force refresh from
+         * here into IDLE. Also, READY can go into DESTROYED.
+         */
+
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(READY);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+        verify(interstitialAdListener).onInterstitialLoaded(subject);
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+        verify(interstitialAdListener).onInterstitialLoaded(subject);
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(READY);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verify(customEventInterstitialAdapter).showInterstitial();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verify(customEventInterstitialAdapter).showInterstitial();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(READY);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+    }
+
+    @Test
+    public void attemptStateTransition_withShowingStartState() {
+        /**
+         * When the interstitial is dismissed, this should transition to IDLE. Otherwise, block
+         * other transitions except to DESTROYED. You cannot force refresh while an interstitial
+         * is showing.
+         */
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(SHOWING);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(IDLE);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(SHOWING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(SHOWING);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+
+        resetMoPubInterstitial(SHOWING);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isTrue();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verify(customEventInterstitialAdapter).invalidate();
+    }
+    @Test
+    public void attemptStateTransition_withDestroyedStartState() {
+        // All state transitions should fail if starting from a destroyed state
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setCurrentInterstitialState(DESTROYED);
+        boolean stateDidChange = subject.attemptStateTransition(IDLE, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(IDLE, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(READY, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(READY, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(LOADING, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, false);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+        verifyZeroInteractions(customEventInterstitialAdapter);
+
+        resetMoPubInterstitial(DESTROYED);
+        stateDidChange = subject.attemptStateTransition(DESTROYED, true);
+        assertThat(stateDidChange).isFalse();
+        assertThat(subject.getCurrentInterstitialState()).isEqualTo(DESTROYED);
+    }
+
     private void loadCustomEvent() {
         MoPubInterstitial.MoPubInterstitialView moPubInterstitialView = subject.new MoPubInterstitialView(activity);
 
@@ -353,4 +705,12 @@ private void assertShowsCustomEventInterstitial(boolean shouldBeReady) {
             verify(customEventInterstitialAdapter, never()).showInterstitial();
         }
     }
+
+    private void resetMoPubInterstitial(
+            @NonNull final MoPubInterstitial.InterstitialState interstitialState) {
+        reset(customEventInterstitialAdapter, interstitialAdListener, interstitialView);
+        subject.setCustomEventInterstitialAdapter(customEventInterstitialAdapter);
+        subject.setInterstitialView(interstitialView);
+        subject.setCurrentInterstitialState(interstitialState);
+    }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
index f519befc..112b3ff3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoManagerTest.java
@@ -1,10 +1,12 @@
 package com.mopub.mobileads;
 
 import android.app.Activity;
+import android.net.Uri;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
 import com.mopub.common.AdType;
+import com.mopub.common.DataKeys;
 import com.mopub.common.LifecycleListener;
 import com.mopub.common.MoPubReward;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -12,12 +14,15 @@
 import com.mopub.network.AdResponse;
 import com.mopub.network.MoPubRequestQueue;
 import com.mopub.network.Networking;
+import com.mopub.volley.Request;
 import com.mopub.volley.VolleyError;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.mockito.ArgumentCaptor;
+import org.mockito.ArgumentMatcher;
 import org.mockito.Mock;
 import org.mockito.invocation.InvocationOnMock;
 import org.mockito.stubbing.Answer;
@@ -26,13 +31,18 @@
 import org.robolectric.shadows.ShadowLooper;
 
 import java.util.Map;
+import java.util.Set;
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
 import static org.mockito.Matchers.anyString;
+import static org.mockito.Matchers.argThat;
 import static org.mockito.Matchers.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.reset;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.verifyNoMoreInteractions;
+import static org.mockito.Mockito.verifyZeroInteractions;
 import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
@@ -40,6 +50,8 @@
 public class
         MoPubRewardedVideoManagerTest {
 
+    public static final String MOPUB_REWARD = "mopub_reward";
+
     @Mock
     MoPubRequestQueue mockRequestQueue;
     @Mock
@@ -71,6 +83,53 @@ public Object answer(final InvocationOnMock invocationOnMock) throws Throwable {
     public void tearDown() {
         // Unpause the main looper in case a test terminated while the looper was paused.
         ShadowLooper.unPauseMainLooper();
+        MoPubRewardedVideoManager.getRewardedVideoData().clear();
+    }
+
+    @Test
+    public void loadVideo_withRequestParameters_shouldGenerateUrlWithKeywords() {
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", new MoPubRewardedVideoManager.RequestParameters("nonsense;garbage;keywords"));
+
+        verify(mockRequestQueue).add(argThat(new RequestUrlContains(Uri.encode("nonsense;garbage;keywords"))));
+
+        // Finish the request
+        requestListener.onErrorResponse(new VolleyError("end test"));
+        ShadowLooper.unPauseMainLooper();
+    }
+
+    @Test
+    public void loadVideo_withCustomerIdInRequestParameters_shouldSetCustomerId() {
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", new MoPubRewardedVideoManager.RequestParameters("keywords", null, "testCustomerId"));
+
+        assertThat(MoPubRewardedVideoManager.getRewardedVideoData().getCustomerId()).isEqualTo("testCustomerId");
+
+        // Finish the request
+        requestListener.onErrorResponse(new VolleyError("end test"));
+        ShadowLooper.unPauseMainLooper();
+    }
+
+    @Test
+    public void loadVideo_withVideoAlreadyShowing_shouldNotLoadVideo() {
+        // To simulate that a video is showing
+        MoPubRewardedVideoManager.getRewardedVideoData().setCurrentlyShowingAdUnitId("testAdUnit");
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+
+        ShadowLooper.unPauseMainLooper();
+
+        verifyZeroInteractions(mockRequestQueue);
     }
 
     @Test
@@ -87,16 +146,21 @@ public void callbackMethods_withNullListener_shouldNotError() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         // Triggers a call to MoPubRewardedVideoManager.onRewardedVideoLoadSuccess
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
 
-        MoPubRewardedVideoManager.onRewardedVideoClicked(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoClosed(TestCustomEvent.class, "id!");
-        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, "id!", MoPubReward.success("test", 111));
+        MoPubRewardedVideoManager.onRewardedVideoClicked(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoClosed(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID);
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class,
+                TestCustomEvent.AD_NETWORK_ID,
+                MoPubReward.success("test", 111));
 
         // The test passed because none of the above calls thew an exception even though the listener is null.
     }
@@ -111,7 +175,7 @@ public void onAdSuccess_noActivityFound_shouldNotCallFailUrl() {
                 .build();
 
         MoPubRewardedVideoManager.updateActivity(null);
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         verify(mockRequestQueue).add(any(AdRequest.class));
@@ -128,11 +192,12 @@ public void onAdSuccess_noCEFound_shouldCallFailCallback() throws Exception {
                 .setCustomEventClassName("doesn't_Exist")
                 .build();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         requestListener.onSuccess(testResponse);
 
-        verify(mockVideoListener).onRewardedVideoLoadFailure(eq("testAdUnit"), eq(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR));
+        verify(mockVideoListener).onRewardedVideoLoadFailure(eq("testAdUnit"),
+                eq(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR));
         verifyNoMoreInteractions(mockVideoListener);
     }
 
@@ -144,7 +209,7 @@ public void onAdSuccess_noCEFound_shouldLoadFailUrl() {
                 .setFailoverUrl("fail.url")
                 .build();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         assertThat(request.getUrl()).contains("testAdUnit");
         requestListener.onSuccess(testResponse);
@@ -156,7 +221,8 @@ public void onAdSuccess_noCEFound_shouldLoadFailUrl() {
     @Test
     public void onAdSuccess_shouldInstantiateCustomEvent_andLoad() {
         AdResponse testResponse = new AdResponse.Builder()
-                .setCustomEventClassName("com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
                 .setAdType(AdType.CUSTOM)
                 .build();
 
@@ -164,7 +230,7 @@ public void onAdSuccess_shouldInstantiateCustomEvent_andLoad() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -174,6 +240,121 @@ public void onAdSuccess_shouldInstantiateCustomEvent_andLoad() {
         verifyNoMoreInteractions(mockVideoListener);
     }
 
+    @Test
+    public void onAdSuccess_withCustomEventAlreadyLoaded_shouldInvalidateOldCustomEvent() throws Exception {
+        final CustomEventRewardedVideo mockCustomEvent = mock(CustomEventRewardedVideo.class);
+        MoPubRewardedVideoManager.getRewardedVideoData().updateAdUnitCustomEventMapping(
+                "testAdUnit", mockCustomEvent, null, TestCustomEvent.AD_NETWORK_ID);
+
+        AdResponse testResponse = new AdResponse.Builder()
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setAdType(AdType.CUSTOM)
+                .build();
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        // Load the first custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Verify the first custom event
+        assertThat(MoPubRewardedVideoManager.hasVideo("testAdUnit")).isTrue();
+        verify(mockVideoListener).onRewardedVideoLoadSuccess(eq("testAdUnit"));
+        verifyNoMoreInteractions(mockVideoListener);
+        reset(mockVideoListener);
+
+        ShadowLooper.pauseMainLooper();
+
+        // Load the second custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Verify the second custom event was loaded
+        assertThat(MoPubRewardedVideoManager.hasVideo("testAdUnit")).isTrue();
+        verify(mockVideoListener).onRewardedVideoLoadSuccess(eq("testAdUnit"));
+        verifyNoMoreInteractions(mockVideoListener);
+
+        // Verify that the first custom event was invalidated
+        verify(mockCustomEvent).onInvalidate();
+        verifyNoMoreInteractions(mockCustomEvent);
+    }
+
+    @Test
+    public void onAdSuccess_shouldHaveUniqueBroadcastIdsSetForEachCustomEvent() throws Exception {
+        AdResponse testResponse = new AdResponse.Builder()
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setAdType(AdType.CUSTOM)
+                .build();
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        // Load the first custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit1", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Get the first custom event's broadcast id
+        TestCustomEvent testCustomEvent1 = (TestCustomEvent)
+                MoPubRewardedVideoManager.getRewardedVideoData().getCustomEvent("testAdUnit1");
+        Long broadcastId1 = (Long) testCustomEvent1.getLocalExtras().get(
+                DataKeys.BROADCAST_IDENTIFIER_KEY);
+        assertThat(broadcastId1).isNotNull();
+
+        ShadowLooper.pauseMainLooper();
+
+        // Load the second custom event
+        MoPubRewardedVideoManager.loadVideo("testAdUnit2", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        // Get the second custom event's broadcast id
+        TestCustomEvent testCustomEvent2 = (TestCustomEvent)
+                MoPubRewardedVideoManager.getRewardedVideoData().getCustomEvent("testAdUnit2");
+        Long broadcastId2 = (Long) testCustomEvent2.getLocalExtras().get(
+                DataKeys.BROADCAST_IDENTIFIER_KEY);
+        assertThat(broadcastId2).isNotNull();
+
+        // Make sure they're different
+        assertThat(broadcastId1).isNotEqualTo(broadcastId2);
+    }
+
+    @Test
+    public void onAdSuccess_shouldUpdateAdUnitRewardMapping() throws Exception {
+        AdResponse testResponse = new AdResponse.Builder()
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setAdType(AdType.CUSTOM)
+                .setRewardedVideoCurrencyName("currency_name")
+                .setRewardedVideoCurrencyAmount("123")
+                .build();
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        MoPubReward moPubReward =
+                MoPubRewardedVideoManager.getRewardedVideoData().getMoPubReward("testAdUnit");
+        assertThat(moPubReward.getAmount()).isEqualTo(123);
+        assertThat(moPubReward.getLabel()).isEqualTo("currency_name");
+    }
+
     @Test
     public void playVideo_shouldSetHasVideoFalse() {
         AdResponse testResponse = new AdResponse.Builder()
@@ -185,7 +366,7 @@ public void playVideo_shouldSetHasVideoFalse() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -208,7 +389,7 @@ public void playVideo_whenNotHasVideo_shouldFail() {
         // in an actual app we have to pause the main looper until we're done successfully loading the ad.
         ShadowLooper.pauseMainLooper();
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
         requestListener.onSuccess(testResponse);
 
         ShadowLooper.unPauseMainLooper();
@@ -220,11 +401,38 @@ public void playVideo_whenNotHasVideo_shouldFail() {
         verify(mockVideoListener).onRewardedVideoLoadFailure(eq("testAdUnit"), eq(MoPubErrorCode.VIDEO_NOT_AVAILABLE));
     }
 
+    @Test
+    public void playVideo_shouldUpdateLastShownCustomEventRewardMapping() throws Exception {
+        AdResponse testResponse = new AdResponse.Builder()
+                .setCustomEventClassName(
+                        "com.mopub.mobileads.MoPubRewardedVideoManagerTest$TestCustomEvent")
+                .setAdType(AdType.CUSTOM)
+                .setRewardedVideoCurrencyName("currency_name")
+                .setRewardedVideoCurrencyAmount("123")
+                .build();
+
+        // Robolectric executes its handlers immediately, so if we want the async behavior we see
+        // in an actual app we have to pause the main looper until we're done successfully loading the ad.
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
+        requestListener.onSuccess(testResponse);
+
+        ShadowLooper.unPauseMainLooper();
+
+        MoPubRewardedVideoManager.showVideo("testAdUnit");
+
+        MoPubReward moPubReward =
+                MoPubRewardedVideoManager.getRewardedVideoData().getLastShownMoPubReward(TestCustomEvent.class);
+        assertThat(moPubReward.getAmount()).isEqualTo(123);
+        assertThat(moPubReward.getLabel()).isEqualTo("currency_name");
+    }
+
     @Test
     public void onAdFailure_shouldCallFailCallback() {
         VolleyError e = new VolleyError("testError!");
 
-        MoPubRewardedVideoManager.loadVideo("testAdUnit");
+        MoPubRewardedVideoManager.loadVideo("testAdUnit", null);
 
         assertThat(request.getUrl()).contains("testAdUnit");
         requestListener.onErrorResponse(e);
@@ -232,8 +440,82 @@ public void onAdFailure_shouldCallFailCallback() {
         verifyNoMoreInteractions(mockVideoListener);
     }
 
+    @Test
+    public void chooseReward_shouldReturnMoPubRewardOverNetworkReward() throws Exception {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        MoPubReward networkReward = MoPubReward.success("network_reward", 456);
+
+        MoPubReward chosenReward =
+                MoPubRewardedVideoManager.chooseReward(moPubReward, networkReward);
+        assertThat(chosenReward).isEqualTo(moPubReward);
+    }
+
+    @Test
+    public void chooseReward_withNetworkRewardNotSuccessful_shouldReturnNetworkReward() throws Exception {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        MoPubReward networkReward = MoPubReward.failure();
+
+        MoPubReward chosenReward =
+                MoPubRewardedVideoManager.chooseReward(moPubReward, networkReward);
+        assertThat(chosenReward).isEqualTo(networkReward);
+    }
+    
+    @Test
+    public void onRewardedVideoCompleted_withEmptyServerCompletionUrl_withCurrentlyShowingAdUnitId_shouldNotifyRewardedVideoCompletedForOneAdUnitId() {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        RewardedVideoData rewardedVideoData = MoPubRewardedVideoManager.getRewardedVideoData();
+        rewardedVideoData.setCurrentlyShowingAdUnitId("testAdUnit1");
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit1", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit2", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        // Server completion url empty and custom event has no server reward set
+
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID,
+                moPubReward);
+        
+        ShadowLooper.unPauseMainLooper();
+
+        ArgumentCaptor<Set<String>> rewardedIdsCaptor = ArgumentCaptor.forClass((Class) Set.class);
+        verify(mockVideoListener).onRewardedVideoCompleted(rewardedIdsCaptor.capture(),
+                eq(moPubReward));
+        assertThat(rewardedIdsCaptor.getValue()).containsOnly("testAdUnit1");
+    }
+
+    @Test
+    public void onRewardedVideoCompleted_withEmptyServerCompletionUrl_withNoCurrentlyShowingAdUnitId_shouldNotifyRewardedVideoCompletedForAllAdUnitIds() {
+        MoPubReward moPubReward = MoPubReward.success(MOPUB_REWARD, 123);
+        RewardedVideoData rewardedVideoData = MoPubRewardedVideoManager.getRewardedVideoData();
+        rewardedVideoData.setCurrentlyShowingAdUnitId(null);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit1", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit2", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        rewardedVideoData.updateAdUnitCustomEventMapping("testAdUnit3", new TestCustomEvent(), null,
+                TestCustomEvent.AD_NETWORK_ID);
+        // Server completion url empty and custom event has no server reward set
+
+        ShadowLooper.pauseMainLooper();
+
+        MoPubRewardedVideoManager.onRewardedVideoCompleted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID,
+                moPubReward);
+
+        ShadowLooper.unPauseMainLooper();
+
+        ArgumentCaptor<Set<String>> rewardedIdsCaptor = ArgumentCaptor.forClass((Class) Set.class);
+        verify(mockVideoListener).onRewardedVideoCompleted(rewardedIdsCaptor.capture(),
+                eq(moPubReward));
+        assertThat(rewardedIdsCaptor.getValue()).containsOnly("testAdUnit1", "testAdUnit2",
+                "testAdUnit3");
+    }
+
     public static class TestCustomEvent extends CustomEventRewardedVideo {
-        protected boolean mPlayable = false;
+        public static final String AD_NETWORK_ID = "id!";
+
+        boolean mPlayable = false;
+        private Map<String, Object> mLocalExtras;
 
         @Nullable
         @Override
@@ -250,7 +532,7 @@ protected LifecycleListener getLifecycleListener() {
         @NonNull
         @Override
         protected String getAdNetworkId() {
-            return "id!";
+            return AD_NETWORK_ID;
         }
 
         @Override
@@ -271,7 +553,9 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
                 @NonNull final Map<String, String> serverExtras) throws Exception {
             // Do nothing because robolectric handlers execute immediately.
             mPlayable = true;
-            MoPubRewardedVideoManager.onRewardedVideoLoadSuccess(TestCustomEvent.class, "id!");
+            MoPubRewardedVideoManager.onRewardedVideoLoadSuccess(TestCustomEvent.class,
+                    TestCustomEvent.AD_NETWORK_ID);
+            mLocalExtras = localExtras;
         }
 
         @Override
@@ -281,7 +565,12 @@ protected boolean hasVideoAvailable() {
 
         @Override
         protected void showVideo() {
-            MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, "id!");
+            MoPubRewardedVideoManager.onRewardedVideoStarted(TestCustomEvent.class, TestCustomEvent.AD_NETWORK_ID);
+        }
+
+        @Nullable
+        Map<String, Object> getLocalExtras() {
+            return mLocalExtras;
         }
     }
 
@@ -291,7 +580,22 @@ protected void loadWithSdkInitialized(@NonNull final Activity activity,
                 @NonNull final Map<String, Object> localExtras,
                 @NonNull final Map<String, String> serverExtras) throws Exception {
             mPlayable = false;
-            MoPubRewardedVideoManager.onRewardedVideoLoadFailure(NoVideoCustomEvent.class, "id!", MoPubErrorCode.NETWORK_NO_FILL);
+            MoPubRewardedVideoManager.onRewardedVideoLoadFailure(NoVideoCustomEvent.class, TestCustomEvent.AD_NETWORK_ID, MoPubErrorCode.NETWORK_NO_FILL);
+        }
+    }
+
+    private static class RequestUrlContains extends ArgumentMatcher<Request> {
+
+        private final String mMustContain;
+
+        RequestUrlContains(String stringToFind) {
+            mMustContain = stringToFind;
+        }
+
+        @Override
+        public boolean matches(final Object argument) {
+            return argument instanceof Request
+                    && ((Request) argument).getUrl().contains(mMustContain);
         }
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoTest.java
new file mode 100644
index 00000000..5d64984d
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubRewardedVideoTest.java
@@ -0,0 +1,205 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+
+import com.mopub.common.DataKeys;
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.TreeMap;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.eq;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.verifyNoMoreInteractions;
+import static org.mockito.Mockito.verifyZeroInteractions;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class MoPubRewardedVideoTest {
+
+    private Activity activity;
+    private MoPubRewardedVideo subject;
+
+    @Mock private RewardedVastVideoInterstitial mockRewardedVastVideoInterstitial;
+
+    @Before
+    public void setup() {
+        activity = Robolectric.buildActivity(Activity.class).create().get();
+        MoPubRewardedVideoManager.init(activity);
+
+        subject = new MoPubRewardedVideo();
+    }
+
+    @Test
+    public void onInvalidate_withVastVideoInterstitial_shouldInvalidateVastVideoInterstitial() {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+
+        subject.onInvalidate();
+
+        verify(mockRewardedVastVideoInterstitial).onInvalidate();
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+    }
+
+    @Test
+    public void onInvalidate_withNullVastVideoInterstitial_shouldNotInvalidateVastVideoInterstitial() {
+        subject.onInvalidate();
+
+        verifyZeroInteractions(mockRewardedVastVideoInterstitial);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withLocalExtrasIncomplete_shouldLoadVastVideoInterstitial() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        subject.loadWithSdkInitialized(activity, new TreeMap<String, Object>(),
+                new HashMap<String, String>());
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity), any(
+                        CustomEventInterstitial.CustomEventInterstitialListener.class),
+                eq(new TreeMap<String, Object>()),
+                eq(new HashMap<String, String>()));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(0);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withRewardedVideoCurrencyNameIncorrectType_shouldLoadVastVideoInterstitial_shouldSetCurrencyNameToEmptyString() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, new Object());
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, "10");
+
+        subject.loadWithSdkInitialized(activity, localExtras, new HashMap<String, String>());
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity), any(
+                        CustomEventInterstitial.CustomEventInterstitialListener.class),
+                eq(localExtras),
+                eq(new HashMap<String, String>()));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(10);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withRewardedVideoCurrencyAmountIncorrectType_shouldLoadVastVideoInterstitial_shouldSetCurrencyAmountToZero() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, "currencyName");
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, new Object());
+
+        subject.loadWithSdkInitialized(activity, localExtras, new HashMap<String, String>());
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity), any(
+                        CustomEventInterstitial.CustomEventInterstitialListener.class),
+                eq(localExtras),
+                eq(new HashMap<String, String>()));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("currencyName");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(0);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withRewardedVideoCurrencyAmountNotInteger_shouldLoadVastVideoInterstitial_shouldSetCurrencyAmountToZero() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, "currencyName");
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, "foo");
+
+        subject.loadWithSdkInitialized(activity, localExtras, new HashMap<String, String>());
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity), any(
+                        CustomEventInterstitial.CustomEventInterstitialListener.class),
+                eq(localExtras),
+                eq(new HashMap<String, String>()));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("currencyName");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(0);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withRewardedVideoCurrencyAmountNegative_shouldLoadVastVideoInterstitial_shouldSetCurrencyAmountToZero() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, "currencyName");
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, "-42");
+
+        subject.loadWithSdkInitialized(activity, localExtras, new HashMap<String, String>());
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity), any(
+                        CustomEventInterstitial.CustomEventInterstitialListener.class),
+                eq(localExtras),
+                eq(new HashMap<String, String>()));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("currencyName");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(0);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withCorrectLocalExtras_shouldLoadVastVideoInterstitial() throws Exception {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        final Map<String, String> serverExtras = new HashMap<String, String>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, "currencyName");
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, "10");
+
+        subject.loadWithSdkInitialized(activity, localExtras, serverExtras);
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity),
+                any(CustomEventInterstitial.CustomEventInterstitialListener.class), eq(localExtras),
+                eq(serverExtras));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("currencyName");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(10);
+    }
+
+    @Test
+    public void loadWithSdkInitialized_withEmptyCurrencyName_withNegativeCurrencyAmount_shouldLoadVastVideoInterstitial_shouldNotChangeCurrencyName_shouldSetCurrencyAmountToZero() throws Exception {
+        // We pass whatever was sent to this custom event to the app as long as it exists, but
+        // if the currency value is negative, set it to 0
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        final Map<String, Object> localExtras = new TreeMap<String, Object>();
+        final Map<String, String> serverExtras = new HashMap<String, String>();
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_NAME_KEY, "");
+        localExtras.put(DataKeys.REWARDED_VIDEO_CURRENCY_AMOUNT_STRING_KEY, "-10");
+
+        subject.loadWithSdkInitialized(activity, localExtras, serverExtras);
+
+        verify(mockRewardedVastVideoInterstitial).loadInterstitial(eq(activity),
+                any(CustomEventInterstitial.CustomEventInterstitialListener.class), eq(localExtras),
+                eq(serverExtras));
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+        assertThat(subject.getRewardedVideoCurrencyName()).isEqualTo("");
+        assertThat(subject.getRewardedVideoCurrencyAmount()).isEqualTo(0);
+    }
+
+    @Test
+    public void showVideo_withVideoLoaded_shouldShowVastVideoInterstitial() {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        subject.setIsLoaded(true);
+
+        subject.showVideo();
+
+        verify(mockRewardedVastVideoInterstitial).showInterstitial();
+        verifyNoMoreInteractions(mockRewardedVastVideoInterstitial);
+    }
+
+    @Test
+    public void showVideo_withVideoNotLoaded_shouldDoNothing() {
+        subject.setRewardedVastVideoInterstitial(mockRewardedVastVideoInterstitial);
+        subject.setIsLoaded(false);
+
+        subject.showVideo();
+
+        verifyZeroInteractions(mockRewardedVastVideoInterstitial);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
index 16fd1507..0b440d17 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MoPubViewTest.java
@@ -6,9 +6,12 @@
 import android.view.View;
 
 import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.common.util.Reflection;
+import com.mopub.common.util.test.support.ShadowReflection;
 import com.mopub.mobileads.test.support.TestAdViewControllerFactory;
 import com.mopub.mobileads.test.support.TestCustomEventBannerAdapterFactory;
 
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -28,7 +31,7 @@
 import static org.mockito.Mockito.verify;
 
 @RunWith(SdkTestRunner.class)
-@Config(constants = BuildConfig.class)
+@Config(constants = BuildConfig.class, shadows = {ShadowReflection.class})
 public class MoPubViewTest {
     private MoPubView subject;
     private Map<String,String> paramsMap = new HashMap<String, String>();
@@ -45,6 +48,11 @@ public void setup() {
         adViewController = TestAdViewControllerFactory.getSingletonMock();
     }
 
+    @After
+    public void tearDown() {
+        ShadowReflection.reset();
+    }
+
     @Test
     public void screenStateBroadcastReceiver_withActionUserPresent_shouldUnpauseRefresh() throws Exception {
         broadcastIntent(new Intent(Intent.ACTION_USER_PRESENT));
@@ -191,6 +199,57 @@ public void loadCustomEvent_whenParamsMapIsNull_shouldCallLoadFailUrl() throws E
         verify(customEventBannerAdapter, never()).loadAd();
     }
 
+    @Test
+    public void loadCustomEvent_withTwoCalls_shouldInvalidateAdapterOnce() throws Exception {
+        subject.loadCustomEvent("name", paramsMap);
+        subject.loadCustomEvent("name", paramsMap);
+
+        verify(customEventBannerAdapter).invalidate();
+    }
+
+    @Test
+    public void forceRefresh_withCallToLoadCustomEvent_shouldInvalidateAdapter() throws Exception {
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(customEventBannerAdapter).invalidate();
+    }
+
+    @Test
+    public void loadCustomEvent_withoutBannerModule_shouldNotLoadAd() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+
+        verify(customEventBannerAdapter, never()).loadAd();
+    }
+
+    @Test
+    public void forceRefresh_withoutBannerModule_withCallToLoadCustomEvent_shouldNotInvalidateAdapter() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(customEventBannerAdapter, never()).invalidate();
+    }
+
+    @Test
+    public void forceRefresh_withoutBannerModule_withCallToLoadCustomEvent_shouldForceRefreshAdViewController() throws Exception {
+        ShadowReflection.setNextClassNotFound(true);
+
+        subject.loadCustomEvent("name", paramsMap);
+        subject.forceRefresh();
+
+        verify(adViewController).forceRefresh();
+    }
+
+    @Test
+    public void invalidateAdapter_withReflection_shouldExist() throws Exception {
+        assertThat(Reflection.getDeclaredMethodWithTraversal(CustomEventBannerAdapter.class,
+                "invalidate")).isNotNull();
+    }
+
     private void broadcastIntent(final Intent intent) {
         final List<ShadowApplication.Wrapper> wrappers = ShadowApplication.getInstance().getRegisteredReceivers();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
index 2d2e16f3..189d3ad8 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidActivityTest.java
@@ -1,5 +1,6 @@
 package com.mopub.mobileads;
 
+import android.app.Activity;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
 import android.content.Context;
@@ -32,10 +33,9 @@
 
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
@@ -49,45 +49,64 @@
 @Config(constants = BuildConfig.class)
 public class MraidActivityTest {
     static final String EXPECTED_SOURCE = "expected source";
+    static final String HTML_DATA = "html_data";
 
-    @Mock MraidWebView mraidWebView;
+    @Mock MraidWebView mockMraidWebView;
     @Mock MraidBridge mraidBridge;
     @Mock MraidController mraidController;
     @Mock CustomEventInterstitial.CustomEventInterstitialListener
             customEventInterstitialListener;
     @Mock BroadcastReceiver broadcastReceiver;
 
+    Context context;
+
+    // These fields are relics of a previous version of this class (all tests using them have since
+    // been deprecated).
+    MraidActivity subject;
+    ActivityController<MraidActivity> activityController;
+
     long testBroadcastIdentifier = 2222;
 
-    ActivityController<TestMraidActivity> activityController;
-    TestMraidActivity subject;
+    @Before
+    public void setUp() throws Exception {
+        context = Robolectric.buildActivity(Activity.class).create().get();
+    }
 
-    // Make a concrete version of the abstract class for testing purposes.
-    private static class TestMraidActivity extends MraidActivity {
-        View mraidWebView;
+    @Test
+    public void preRenderHtml_shouldEnableJavascriptCachingForDummyWebView() {
+        MraidActivity.preRenderHtml(customEventInterstitialListener, HTML_DATA, mockMraidWebView);
 
-        @Override
-        public View getAdView() {
-            return mraidWebView;
-        }
+        verify(mockMraidWebView).enableJavascriptCaching();
     }
 
-    @Before
-    public void setUp() throws Exception {
-        activityController = Robolectric.buildActivity(TestMraidActivity.class).start();
-        subject = activityController.get();
-        subject.mraidWebView = mraidWebView;
-        activityController.create();
+    @Test
+    public void preRenderHtml_shouldDisablePluginsForDummyWebView() {
+        MraidActivity.preRenderHtml(customEventInterstitialListener, HTML_DATA, mockMraidWebView);
+
+        verify(mockMraidWebView).enablePlugins(false);
+    }
+
+    @Test
+    public void preRenderHtml_shouldLoadHtml() {
+        MraidActivity.preRenderHtml(customEventInterstitialListener, HTML_DATA, mockMraidWebView);
+
+        verify(mockMraidWebView).loadDataWithBaseURL(
+                "http://ads.mopub.com/",
+                HTML_DATA,
+                "text/html",
+                "UTF-8",
+                null
+        );
     }
 
     @Ignore("Mraid 2.0")
     @Test
-    public void preRenderHtml_shouldDisablePluginsSetListenersAndLoadHtml() throws Exception {
+    public void preRenderHtml_shouldSetWebViewClient() throws Exception {
         MraidActivity.preRenderHtml(subject, customEventInterstitialListener, "3:27");
 
-        verify(mraidWebView).enablePlugins(eq(false));
+        verify(mockMraidWebView).enablePlugins(eq(false));
         verify(mraidController).setMraidListener(any(MraidListener.class));
-        verify(mraidWebView).setWebViewClient(any(WebViewClient.class));
+        verify(mockMraidWebView).setWebViewClient(any(WebViewClient.class));
         verify(mraidBridge).setContentHtml(eq("3:27"));
     }
 
@@ -125,7 +144,7 @@ public void preRenderHtml_whenWebViewClientShouldOverrideUrlLoading_shouldReturn
         MraidActivity.preRenderHtml(subject, customEventInterstitialListener, "");
 
         ArgumentCaptor<WebViewClient> webViewClientArgumentCaptor = ArgumentCaptor.forClass(WebViewClient.class);
-        verify(mraidWebView).setWebViewClient(webViewClientArgumentCaptor.capture());
+        verify(mockMraidWebView).setWebViewClient(webViewClientArgumentCaptor.capture());
         WebViewClient webViewClient = webViewClientArgumentCaptor.getValue();
 
         boolean consumeUrlLoading = webViewClient.shouldOverrideUrlLoading(null, null);
@@ -142,7 +161,7 @@ public void preRenderHtml_shouldCallCustomEventInterstitialOnInterstitialLoaded_
         MraidActivity.preRenderHtml(subject, customEventInterstitialListener, "");
 
         ArgumentCaptor<WebViewClient> webViewClientArgumentCaptor = ArgumentCaptor.forClass(WebViewClient.class);
-        verify(mraidWebView).setWebViewClient(webViewClientArgumentCaptor.capture());
+        verify(mockMraidWebView).setWebViewClient(webViewClientArgumentCaptor.capture());
         WebViewClient webViewClient = webViewClientArgumentCaptor.getValue();
 
         webViewClient.onPageFinished(null, null);
@@ -163,7 +182,7 @@ public void onCreate_shouldSetContentView() throws Exception {
     public void onCreate_shouldSetupAnMraidView() throws Exception {
         subject.onCreate(null);
 
-        assertThat(getContentView().getChildAt(0)).isSameAs(mraidWebView);
+        assertThat(getContentView().getChildAt(0)).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(any(MraidListener.class));
 
         verify(mraidBridge).setContentHtml(EXPECTED_SOURCE);
@@ -176,7 +195,7 @@ public void onCreate_shouldSetLayoutOfMraidView() throws Exception {
 
         ArgumentCaptor<FrameLayout.LayoutParams> captor = ArgumentCaptor.forClass(
                 FrameLayout.LayoutParams.class);
-        verify(mraidWebView).setLayoutParams(captor.capture());
+        verify(mockMraidWebView).setLayoutParams(captor.capture());
         FrameLayout.LayoutParams actualLayoutParams = captor.getValue();
 
         assertThat(actualLayoutParams.width).isEqualTo(FrameLayout.LayoutParams.MATCH_PARENT);
@@ -208,23 +227,24 @@ public void onCreate_beforeIcs_shouldNotSetHardwareAcceleratedFlag() throws Exce
     public void onDestroy_DestroyMraidView() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, subject.getBroadcastIdentifier());
         ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
-                getHtmlInterstitialIntentFilter());
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
         subject.onDestroy();
 
         verify(broadcastReceiver).onReceive(any(Context.class), eq(expectedIntent));
-        verify(mraidWebView).destroy();
+        verify(mockMraidWebView).destroy();
         assertThat(getContentView().getChildCount()).isEqualTo(0);
     }
 
     @Ignore("Mraid 2.0")
     @Test
     public void getAdView_shouldSetupOnReadyListener() throws Exception {
-        reset(mraidWebView);
+        reset(mockMraidWebView);
         ArgumentCaptor<MraidListener> captor = ArgumentCaptor.forClass(MraidListener.class);
         View actualAdView = subject.getAdView();
 
-        assertThat(actualAdView).isSameAs(mraidWebView);
+        assertThat(actualAdView).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(captor.capture());
 
         subject.hideInterstitialCloseButton();
@@ -234,33 +254,33 @@ public void getAdView_shouldSetupOnReadyListener() throws Exception {
     @Ignore("Mraid 2.0")
     @Test
     public void baseMraidListenerOnReady_shouldFireJavascriptWebViewDidAppear() throws Exception {
-        reset(mraidWebView);
+        reset(mockMraidWebView);
         ArgumentCaptor<MraidListener> captor = ArgumentCaptor.forClass(MraidListener.class);
         View actualAdView = subject.getAdView();
 
-        assertThat(actualAdView).isSameAs(mraidWebView);
+        assertThat(actualAdView).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(captor.capture());
 
         MraidListener baseMraidListener = captor.getValue();
         baseMraidListener.onLoaded(null);
 
-        verify(mraidWebView).loadUrl(eq("javascript:webviewDidAppear();"));
+        verify(mockMraidWebView).loadUrl(eq("javascript:webviewDidAppear();"));
     }
 
     @Ignore("Mraid 2.0")
     @Test
     public void baseMraidListenerOnClose_shouldFireJavascriptWebViewDidClose() throws Exception {
-        reset(mraidWebView);
+        reset(mockMraidWebView);
         ArgumentCaptor<MraidListener> captor = ArgumentCaptor.forClass(MraidListener.class);
         View actualAdView = subject.getAdView();
 
-        assertThat(actualAdView).isSameAs(mraidWebView);
+        assertThat(actualAdView).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(captor.capture());
 
         MraidListener baseMraidListener = captor.getValue();
         baseMraidListener.onClose();
 
-        verify(mraidWebView).loadUrl(eq("javascript:webviewDidClose();"));
+        verify(mockMraidWebView).loadUrl(eq("javascript:webviewDidClose();"));
     }
 
     @Ignore("Mraid 2.0")
@@ -268,14 +288,15 @@ public void baseMraidListenerOnClose_shouldFireJavascriptWebViewDidClose() throw
     public void baseMraidListenerOnOpen_shouldBroadcastClickEvent() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_CLICK, testBroadcastIdentifier);
         ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
-                getHtmlInterstitialIntentFilter());
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
-        reset(mraidWebView);
+        reset(mockMraidWebView);
 
         ArgumentCaptor<MraidListener> captor = ArgumentCaptor.forClass(MraidListener.class);
         View actualAdView = subject.getAdView();
 
-        assertThat(actualAdView).isSameAs(mraidWebView);
+        assertThat(actualAdView).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(captor.capture());
 
         MraidListener baseMraidListener = captor.getValue();
@@ -287,11 +308,11 @@ public void baseMraidListenerOnOpen_shouldBroadcastClickEvent() throws Exception
     @Ignore("Mraid 2.0")
     @Test
     public void getAdView_shouldSetupOnCloseListener() throws Exception {
-        reset(mraidWebView);
+        reset(mockMraidWebView);
         ArgumentCaptor<MraidListener> captor = ArgumentCaptor.forClass(MraidListener.class);
         View actualAdView = subject.getAdView();
 
-        assertThat(actualAdView).isSameAs(mraidWebView);
+        assertThat(actualAdView).isSameAs(mockMraidWebView);
         verify(mraidController).setMraidListener(captor.capture());
 
         captor.getValue().onClose();
@@ -304,7 +325,7 @@ public void getAdView_shouldSetupOnCloseListener() throws Exception {
     public void onPause_shouldOnPauseMraidView() throws Exception {
         activityController.pause();
 
-        verify(mraidWebView).onPause();
+        verify(mockMraidWebView).onPause();
     }
 
     @Ignore("Mraid 2.0")
@@ -313,7 +334,7 @@ public void onResume_shouldResumeMraidView() throws Exception {
         subject.onCreate(null);
         Shadows.shadowOf(subject).pauseAndThenResume();
 
-        verify(mraidWebView).onResume();
+        verify(mockMraidWebView).onResume();
     }
 
     private Intent createMraidActivityIntent(String expectedSource) {
@@ -330,7 +351,9 @@ private Intent createMraidActivityIntent(String expectedSource) {
     @Test
     public void onCreate_shouldBroadcastInterstitialShow() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_SHOW, testBroadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
         verify(broadcastReceiver).onReceive(any(Context.class), eq(expectedIntent));
     }
@@ -339,7 +362,9 @@ public void onCreate_shouldBroadcastInterstitialShow() throws Exception {
     @Test
     public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
         Intent expectedIntent = getIntentForActionAndIdentifier(ACTION_INTERSTITIAL_DISMISS, testBroadcastIdentifier);
-        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(subject).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(customEventInterstitialListener,
+                        testBroadcastIdentifier).getIntentFilter());
 
         subject.onDestroy();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
index ef88b18d..8c120a01 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/MraidVideoPlayerActivityTest.java
@@ -1,16 +1,24 @@
 package com.mopub.mobileads;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
+import android.graphics.Bitmap;
+import android.os.Build;
 import android.os.Bundle;
+import android.view.TextureView;
 import android.view.View;
 import android.widget.ImageView;
 
+import com.mopub.common.Constants;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mraid.MraidVideoViewController;
+import com.mopub.nativeads.NativeFullScreenVideoView;
+import com.mopub.nativeads.NativeVideoController;
+import com.mopub.nativeads.NativeVideoViewController;
 
 import org.junit.Before;
 import org.junit.Ignore;
@@ -21,17 +29,22 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowActivity;
 
+import java.lang.reflect.Constructor;
+
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
 @Config(constants = BuildConfig.class)
 public class MraidVideoPlayerActivityTest {
     private static final String VAST = "vast";
     private static final String MRAID = "mraid";
+    private static final String NATIVE_VIDEO_VIEW_CONTROLLER =
+            "com.mopub.nativeads.NativeVideoViewController";
 
     private MraidVideoPlayerActivity subject;
     private long testBroadcastIdentifier;
@@ -63,6 +76,13 @@ public void onCreate_withMraidExtraKey_shouldUseMraidVideoViewController() throw
         assertThat(subject.getBaseVideoViewController()).isInstanceOf(MraidVideoViewController.class);
     }
 
+    @Test
+    public void onCreate_withNativeExtraKey_shouldUseNativeVideoViewController() throws Exception {
+        initializeSubjectForNative();
+
+        assertThat(subject.getBaseVideoViewController()).isInstanceOf(NativeVideoViewController.class);
+    }
+
     @Ignore("pending: this is currently impossible to write")
     @Test
     public void onCreate_shouldForwardOnCreateToViewController() throws Exception {
@@ -167,6 +187,16 @@ public void onStartActivityForResult_withNullClass_shouldNotStartAnActivity() th
         assertThat(intentForResult).isNull();
     }
 
+    @Test
+    public void createVideoViewController_withNativeVideoViewControllerReflectionConstructor_shouldExist() throws Exception {
+        final Class<?> nativeVideoViewController = Class.forName(NATIVE_VIDEO_VIEW_CONTROLLER);
+        final Constructor<?> declaredConstructor = nativeVideoViewController.getDeclaredConstructor(
+                Context.class, Bundle.class, Bundle.class,
+                BaseVideoViewController.BaseVideoViewControllerListener.class);
+
+        assertThat(declaredConstructor).isNotNull();
+    }
+
     private void initializeSubjectForMraid() {
         intent.putExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY, "mraid");
 
@@ -188,6 +218,32 @@ private void initializeSubjectForVast() {
                 .get();
     }
 
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
+    private void initializeSubjectForNative() {
+        intent.putExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY, "native");
+
+        NativeFullScreenVideoView mockFullScreenVideoView = mock(NativeFullScreenVideoView.class);
+        NativeVideoController mockVideoController = mock(NativeVideoController.class);
+        VastVideoConfig mockVastVideoConfig = mock(VastVideoConfig.class);
+        TextureView mockTextureView = mock(TextureView.class);
+        Bitmap mockBitmap = mock(Bitmap.class);
+
+        when(mockVastVideoConfig.getCustomCtaText()).thenReturn("Learn More");
+        when(mockFullScreenVideoView.getTextureView()).thenReturn(mockTextureView);
+        when(mockTextureView.getBitmap()).thenReturn(mockBitmap);
+
+        Bundle additionalExtras = new Bundle();
+        additionalExtras.putSerializable(Constants.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
+        additionalExtras.putLong(Constants.NATIVE_VIDEO_ID, 123);
+        NativeVideoController.setForId(123, mockVideoController);
+        intent.putExtras(additionalExtras);
+
+        subject = Robolectric.buildActivity(MraidVideoPlayerActivity.class)
+                .withIntent(intent)
+                .create()
+                .get();
+    }
+
     private void initializeSubjectWithMockViewController() {
         initializeSubjectForMraid();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVastVideoInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVastVideoInterstitialTest.java
new file mode 100644
index 00000000..9e840b27
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVastVideoInterstitialTest.java
@@ -0,0 +1,77 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.content.Context;
+
+import com.mopub.common.AdReport;
+import com.mopub.common.DataKeys;
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import static com.mopub.common.DataKeys.AD_REPORT_KEY;
+import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class RewardedVastVideoInterstitialTest {
+
+    private Context context;
+    private RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener customEventRewardedVideoInterstitialListener;
+    private Map<String, Object> localExtras;
+    private Map<String, String> serverExtras;
+    private RewardedVastVideoInterstitial subject;
+
+    @Mock AdReport mockAdReport;
+
+    @Before
+    public void setUp() throws Exception {
+        subject = new RewardedVastVideoInterstitial();
+
+        final String expectedResponse = "<VAST>hello</VAST>";
+
+        context = Robolectric.buildActivity(Activity.class).create().get();
+        customEventRewardedVideoInterstitialListener = mock(
+                RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener.class);
+        localExtras = new HashMap<String, Object>();
+        serverExtras = new HashMap<String, String>();
+        serverExtras.put(DataKeys.HTML_RESPONSE_BODY_KEY, expectedResponse);
+
+        final long broadcastIdentifier = 2222;
+        localExtras.put(BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
+        when(mockAdReport.getDspCreativeId()).thenReturn("dsp_creative_id");
+        localExtras.put(AD_REPORT_KEY, mockAdReport);
+    }
+
+    @Test
+    public void loadInterstitial_withCustomEventRewardedVideoInterstitialListener_shouldRegisterRewardedVideoBroadcastReceiver() {
+        subject.loadInterstitial(context, customEventRewardedVideoInterstitialListener, localExtras,
+                serverExtras);
+
+        assertThat(subject.getRewardedVideoBroadcastReceiver()).isNotNull();
+    }
+
+    @Test
+    public void onVastVideoConfigurationPrepared_withProperVastConfig_shouldSetRewardedVideoFlag() {
+        subject.loadInterstitial(context, customEventRewardedVideoInterstitialListener, localExtras,
+                serverExtras);
+        final VastVideoConfig mockVastVideoConfig = mock(VastVideoConfig.class);
+
+        subject.onVastVideoConfigurationPrepared(mockVastVideoConfig);
+
+        verify(mockVastVideoConfig).setIsRewardedVideo(true);
+    }
+
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java
new file mode 100644
index 00000000..97a711ec
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoBroadcastReceiverTest.java
@@ -0,0 +1,68 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.IntentFilter;
+
+import com.mopub.common.IntentActions;
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.fest.util.Sets;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import java.util.Iterator;
+import java.util.Set;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class RewardedVideoBroadcastReceiverTest {
+
+    private RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener customEventRewardedVideoInterstitialListener;
+    private RewardedVideoBroadcastReceiver subject;
+    private Activity context;
+    private long broadcastIdentifier;
+
+    @Before
+    public void setUp() throws Exception {
+        customEventRewardedVideoInterstitialListener = mock(
+                RewardedVastVideoInterstitial.CustomEventRewardedVideoInterstitialListener.class);
+        broadcastIdentifier = 123456L;
+        subject = new RewardedVideoBroadcastReceiver(customEventRewardedVideoInterstitialListener,
+                broadcastIdentifier);
+        context = new Activity();
+    }
+
+    @Test
+    public void constructor_shouldSetIntentFilter() throws Exception {
+        Set<String> expectedActions = Sets.newLinkedHashSet(
+                IntentActions.ACTION_REWARDED_VIDEO_COMPLETE
+        );
+
+        final IntentFilter intentFilter = subject.getIntentFilter();
+        final Iterator<String> actionIterator = intentFilter.actionsIterator();
+
+        assertThat(intentFilter.countActions()).isEqualTo(1);
+        while (actionIterator.hasNext()) {
+            assertThat(expectedActions.contains(actionIterator.next()));
+        }
+    }
+
+    @Test
+    public void onReceive_withActionRewardedVideoComplete_shouldNotifyListener() {
+        final Intent rewardedVideoCompleteIntent = new Intent();
+        rewardedVideoCompleteIntent.setAction(
+                IntentActions.ACTION_REWARDED_VIDEO_COMPLETE);
+        rewardedVideoCompleteIntent.putExtra("broadcastIdentifier", broadcastIdentifier);
+
+        subject.onReceive(context, rewardedVideoCompleteIntent);
+
+        verify(customEventRewardedVideoInterstitialListener).onVideoComplete();
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandlerTest.java
new file mode 100644
index 00000000..d73f8bd8
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoCompletionRequestHandlerTest.java
@@ -0,0 +1,185 @@
+package com.mopub.mobileads;
+
+import android.app.Activity;
+import android.content.Context;
+import android.net.Uri;
+import android.os.Handler;
+
+import com.mopub.common.MoPub;
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.network.MoPubRequestQueue;
+import com.mopub.network.Networking;
+import com.mopub.volley.NetworkResponse;
+import com.mopub.volley.VolleyError;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
+
+import static com.mopub.common.VolleyRequestMatcher.isUrl;
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.argThat;
+import static org.mockito.Matchers.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.verifyZeroInteractions;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class RewardedVideoCompletionRequestHandlerTest {
+    @Mock
+    private MoPubRequestQueue mockRequestQueue;
+    private Context context;
+    private String url;
+
+    @Before
+    public void setup() {
+        context = Robolectric.buildActivity(Activity.class).create().get();
+        url = "testUrl";
+        Networking.setRequestQueueForTesting(mockRequestQueue);
+    }
+
+    @Test
+    public void makeRewardedVideoCompletionRequest_shouldAddMacros_shouldMakeVideoCompletionRequest() throws Exception {
+        RewardedVideoCompletionRequestHandler.makeRewardedVideoCompletionRequest(context, url,
+                "customer id");
+
+        verify(mockRequestQueue).add(argThat(isUrl(
+                "testUrl&customer_id=customer%20id&nv=" +
+                        Uri.encode(MoPub.SDK_VERSION) + "&v=" +
+                        MoPubRewardedVideoManager.API_VERSION)));
+    }
+
+    @Test
+    public void getTimeout_shouldReturnCorrectTimeoutBasedOnRetry() {
+        final int maxTimeout = RewardedVideoCompletionRequestHandler.RETRY_TIMES[RewardedVideoCompletionRequestHandler.RETRY_TIMES.length - 1];
+
+        assertThat(RewardedVideoCompletionRequestHandler.getTimeout(-1)).isEqualTo(maxTimeout);
+
+        assertThat(RewardedVideoCompletionRequestHandler.getTimeout(0)).isEqualTo(
+                RewardedVideoCompletionRequestHandler.RETRY_TIMES[0]);
+
+        assertThat(RewardedVideoCompletionRequestHandler.getTimeout(1)).isEqualTo(
+                RewardedVideoCompletionRequestHandler.RETRY_TIMES[1]);
+
+        assertThat(RewardedVideoCompletionRequestHandler.getTimeout(1234567)).isEqualTo(
+                maxTimeout);
+    }
+
+    @Test
+    public void retryTimes_shouldAllBeGreaterThanRequestTimeoutDelay() {
+        for (int retryTime : RewardedVideoCompletionRequestHandler.RETRY_TIMES) {
+            assertThat(
+                    retryTime - RewardedVideoCompletionRequestHandler.REQUEST_TIMEOUT_DELAY)
+                    .isGreaterThanOrEqualTo(0);
+        }
+    }
+
+    @Test
+    public void onErrorResponse_shouldSetShouldStopToTrueWhenResponseNot500To599() {
+        RewardedVideoCompletionRequestHandler subject =
+                new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(500, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(501, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(599, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(200, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(499, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onErrorResponse(new VolleyError(new NetworkResponse(600, null, null, true)));
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+    }
+
+    @Test
+    public void onResponse_shouldSetShouldStopToTrueWhenResponseNot500To599() {
+        RewardedVideoCompletionRequestHandler subject =
+                new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject.onResponse(500);
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onResponse(501);
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onResponse(599);
+        assertThat(subject.getShouldStop()).isEqualTo(false);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onResponse(200);
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onResponse(499);
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+
+        subject = new RewardedVideoCompletionRequestHandler(context, "url", "customer_id");
+        subject.onResponse(600);
+        assertThat(subject.getShouldStop()).isEqualTo(true);
+    }
+
+    @Test
+    public void makeRewardedVideoCompletionRequest_shouldRetry() {
+        Handler mockHandler = mock(Handler.class);
+        RewardedVideoCompletionRequestHandler subject =
+                new RewardedVideoCompletionRequestHandler(context, "url", "customer_id",
+                        mockHandler);
+
+        subject.makeRewardedVideoCompletionRequest();
+
+        assertThat(subject.getRetryCount()).isEqualTo(1);
+        verify(mockHandler).postDelayed(any(Runnable.class),
+                eq((long) RewardedVideoCompletionRequestHandler.RETRY_TIMES[0]));
+    }
+
+    @Test
+    public void makeRewardedVideoCompletionRequest_shouldNotRetryIfShouldStopIsSetToTrue() {
+        Handler mockHandler = mock(Handler.class);
+        RewardedVideoCompletionRequestHandler subject =
+                new RewardedVideoCompletionRequestHandler(context, "url", "customer_id",
+                        mockHandler);
+        // This should set shouldStop to true.
+        subject.onResponse(200);
+
+        subject.makeRewardedVideoCompletionRequest();
+
+        assertThat(subject.getShouldStop()).isTrue();
+        verifyZeroInteractions(mockHandler);
+    }
+
+    @Test
+    public void makeRewardedVideoCompletionRequest_shouldNotRetryIfMaxRetriesReached() {
+        Handler mockHandler = mock(Handler.class);
+        RewardedVideoCompletionRequestHandler subject =
+                new RewardedVideoCompletionRequestHandler(context, "url", "customer_id",
+                        mockHandler);
+        subject.setRetryCount(RewardedVideoCompletionRequestHandler.MAX_RETRIES);
+
+        subject.makeRewardedVideoCompletionRequest();
+
+        verifyZeroInteractions(mockHandler);
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoDataTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoDataTest.java
new file mode 100644
index 00000000..512ac0e7
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/RewardedVideoDataTest.java
@@ -0,0 +1,73 @@
+package com.mopub.mobileads;
+
+import com.mopub.common.MoPubReward;
+import com.mopub.common.test.support.SdkTestRunner;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class RewardedVideoDataTest {
+
+    private RewardedVideoData subject;
+
+    @Before
+    public void setup() {
+        subject = new RewardedVideoData();
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_shouldMapAdUnitIdToReward() throws Exception {
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", "123");
+        MoPubReward moPubReward = subject.getMoPubReward("mopub_id");
+        assertThat(moPubReward.getLabel()).isEqualTo("currency_name");
+        assertThat(moPubReward.getAmount()).isEqualTo(123);
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_withNullCurrencyName_shouldRemoveExistingAdUnitMapping_shouldNotMapAdUnitIdToReward() throws Exception {
+        // Insert initial value to be removed with next call
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", "123");
+        MoPubReward moPubReward = subject.getMoPubReward("mopub_id");
+        assertThat(moPubReward.getLabel()).isEqualTo("currency_name");
+        assertThat(moPubReward.getAmount()).isEqualTo(123);
+
+        subject.updateAdUnitRewardMapping("mopub_id", null, "123");
+        assertThat(subject.getMoPubReward("mopub_id")).isNull();
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_withNullCurrencyName_shouldNotMapAdUnitIdToReward() throws Exception {
+        // Insert initial value to be removed with next call
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", "123");
+        MoPubReward moPubReward = subject.getMoPubReward("mopub_id");
+        assertThat(moPubReward.getLabel()).isEqualTo("currency_name");
+        assertThat(moPubReward.getAmount()).isEqualTo(123);
+
+        subject.updateAdUnitRewardMapping("mopub_id", null, "123");
+        assertThat(subject.getMoPubReward("mopub_id")).isNull();
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_withNullCurrencyAmount_shouldNotMapAdUnitIdToReward() throws Exception {
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", null);
+        assertThat(subject.getMoPubReward("mopub_id")).isNull();
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_withNonNumberCurrencyAmount_shouldNotMapAdUnitIdToReward() throws Exception {
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", "abc");
+        assertThat(subject.getMoPubReward("mopub_id")).isNull();
+    }
+
+    @Test
+    public void updateAdUnitRewardMapping_withCurrencyAmountLessThanZero_shouldNotMapAdUnitIdToReward() throws Exception {
+        subject.updateAdUnitRewardMapping("mopub_id", "currency_name", "-1");
+        assertThat(subject.getMoPubReward("mopub_id")).isNull();
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
index 97b53591..b7cd5153 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastAdXmlManagerTest.java
@@ -22,12 +22,12 @@ public void getInLineXmlManager_shouldReturnInLineXmlManager() throws Exception
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -37,7 +37,7 @@ public void getInLineXmlManager_shouldReturnInLineXmlManager() throws Exception
 
         VastInLineXmlManager vastInLineXmlManager = subject.getInLineXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastInLineXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inline");
+                .containsOnly("https://impression/m/inline");
     }
 
     @Test
@@ -45,17 +45,17 @@ public void getInLineXmlManager_withMultipleInLineNodes_shouldReturnFirstInLineX
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -65,7 +65,7 @@ public void getInLineXmlManager_withMultipleInLineNodes_shouldReturnFirstInLineX
 
         VastInLineXmlManager vastInLineXmlManager = subject.getInLineXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastInLineXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inlineOne");
+                .containsOnly("https://impression/m/inlineOne");
     }
 
     @Test
@@ -73,7 +73,7 @@ public void getInLineXmlManager_withNoInLineNodes_shouldReturnNull() throws Exce
         String adXml = "<Ad id=\"223626102\">" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -89,12 +89,12 @@ public void getWrapperXmlManager_shouldReturnWrapperXmlManager() throws Exceptio
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapper]]>" +
+                "                 <![CDATA[https://impression/m/wrapper]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -104,7 +104,7 @@ public void getWrapperXmlManager_shouldReturnWrapperXmlManager() throws Exceptio
 
         VastWrapperXmlManager vastWrapperXmlManager = subject.getWrapperXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastWrapperXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/wrapper");
+                .containsOnly("https://impression/m/wrapper");
     }
 
     @Test
@@ -112,17 +112,17 @@ public void getWrapperXmlManager_withMultipleWrapperNodes_shouldReturnFirstWrapp
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapperOne]]>" +
+                "                 <![CDATA[https://impression/m/wrapperOne]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "    <Wrapper>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/wrapperTwo]]>" +
+                "                 <![CDATA[https://impression/m/wrapperTwo]]>" +
                 "          </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
@@ -132,7 +132,7 @@ public void getWrapperXmlManager_withMultipleWrapperNodes_shouldReturnFirstWrapp
 
         VastWrapperXmlManager vastWrapperXmlManager = subject.getWrapperXmlManager();
         assertThat(VastUtils.vastTrackersToStrings(vastWrapperXmlManager.getImpressionTrackers()))
-                .containsOnly("http://impression/m/wrapperOne");
+                .containsOnly("https://impression/m/wrapperOne");
     }
 
     @Test
@@ -140,7 +140,7 @@ public void getWrapperXmlManager_withNoWrapperNodes_shouldReturnNull() throws Ex
         String adXml = "<Ad id=\"223626102\">" +
                 "    <InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inline]]>" +
+                "                 <![CDATA[https://impression/m/inline]]>" +
                 "          </Impression>" +
                 "    </InLine>" +
                 "</Ad>";
@@ -156,12 +156,12 @@ public void getSequence_shouldReturnSequence() throws Exception {
         String adXml = "<Ad id=\"223626102\" sequence=\"42\">" +
                 "    <InLine>" +
                 "        <Impression id=\"DART\">" +
-                "            <![CDATA[http://impression/m/inline]]>" +
+                "            <![CDATA[https://impression/m/inline]]>" +
                 "        </Impression>" +
                 "    </InLine>" +
                 "    <Wrapper>" +
                 "        <Impression id=\"DART\">" +
-                "            <![CDATA[http://impression/m/wrapper]]>" +
+                "            <![CDATA[https://impression/m/wrapper]]>" +
                 "        </Impression>" +
                 "    </Wrapper>" +
                 "</Ad>";
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
index 01533c96..559db818 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastBaseInLineWrapperXmlManagerTest.java
@@ -22,17 +22,17 @@
     public void getImpressionTrackers_shouldReturnImpressionTrackers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/close]]>" +
+                "                                   <![CDATA[https://tracking/m/close]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -44,7 +44,7 @@ public void getImpressionTrackers_shouldReturnImpressionTrackers() throws Except
         subject = new VastInLineXmlManager(inLineNode);
 
         assertThat(VastUtils.vastTrackersToStrings(subject.getImpressionTrackers()))
-                .containsOnly("http://impression/m/inlineOne", "http://impression/m/inlineTwo");
+                .containsOnly("https://impression/m/inlineOne", "https://impression/m/inlineTwo");
     }
 
     @Test
@@ -62,17 +62,17 @@ public void getImpressionTrackers_withNoImpressionTrackers_shouldReturnEmptyList
     public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeOne]]>" +
+                "                                   <![CDATA[https://tracking/m/closeOne]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -80,7 +80,7 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/ignored]]>" +
+                "                                   <![CDATA[https://tracking/m/ignored]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -93,7 +93,7 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -107,26 +107,26 @@ public void getLinearXmlManagers_shouldReturnLinearXmlManagers() throws Exceptio
         List<VastLinearXmlManager> linearXmlManagers = subject.getLinearXmlManagers();
         assertThat(linearXmlManagers).hasSize(2);
         assertThat(VastUtils.vastTrackersToStrings(linearXmlManagers.get(0).getVideoCloseTrackers()))
-                .containsOnly("http://tracking/m/closeOne");
+                .containsOnly("https://tracking/m/closeOne");
         assertThat(VastUtils.vastTrackersToStrings(linearXmlManagers.get(1).getVideoCloseTrackers()))
-                .containsOnly("http://tracking/m/closeTwo");
+                .containsOnly("https://tracking/m/closeTwo");
     }
 
     @Test
     public void getLinearXmlManagers_withNoLinearNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <NonLinearAds>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/close]]>" +
+                "                                   <![CDATA[https://tracking/m/close]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </NonLinearAds>" +
@@ -144,16 +144,16 @@ public void getLinearXmlManagers_withNoLinearNodes_shouldReturnEmptyList() throw
     public void getLinearXmlManagers_withNoCreativeNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -170,16 +170,16 @@ public void getLinearXmlManagers_withNoCreativeNodes_shouldReturnEmptyList() thr
     public void getLinearXmlManagers_withNoCreativesNodes_shouldReturnEmptyList() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "                 <Creative>" +
                 "                       <Linear>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                   <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </Linear>" +
@@ -196,17 +196,17 @@ public void getLinearXmlManagers_withNoCreativesNodes_shouldReturnEmptyList() th
     public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throws Exception {
         String inLineXml = "<InLine>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineOne]]>" +
+                "                 <![CDATA[https://impression/m/inlineOne]]>" +
                 "          </Impression>" +
                 "          <Impression id=\"DART\">" +
-                "                 <![CDATA[http://impression/m/inlineTwo]]>" +
+                "                 <![CDATA[https://impression/m/inlineTwo]]>" +
                 "          </Impression>" +
                 "          <Creatives>" +
                 "                 <Creative>" +
                 "                       <NonLinearAds>" +
                 "                           <TrackingEvents>" +
                 "                               <Tracking event=\"close\">" +
-                "                                   <![CDATA[http://tracking/m/closeOne]]>" +
+                "                                   <![CDATA[https://tracking/m/closeOne]]>" +
                 "                               </Tracking>" +
                 "                           </TrackingEvents>" +
                 "                       </NonLinearAds>" +
@@ -216,20 +216,20 @@ public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throw
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeTwo]]>" +
+                "                                     <![CDATA[https://tracking/m/closeTwo]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                             <CompanionClickTracking>" +
-                "                                 <![CDATA[http://clicktrackingOne]]>" +
+                "                                 <![CDATA[https://clicktrackingOne]]>" +
                 "                             </CompanionClickTracking>" +
                 "                         </Companion>"+
                 "                         <Companion>" +
                 "                             <CompanionClickTracking>" +
-                "                                 <![CDATA[http://clicktrackingTwo]]>" +
+                "                                 <![CDATA[https://clicktrackingTwo]]>" +
                 "                             </CompanionClickTracking>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -243,9 +243,9 @@ public void getCompanionAdXmlManagers_shouldReturnCompanionAdXmlManagers() throw
 
         assertThat(subject.getCompanionAdXmlManagers()).hasSize(2);
         assertThat(VastUtils.vastTrackersToStrings(subject.getCompanionAdXmlManagers().get(0).getClickTrackers()))
-                .containsOnly("http://clicktrackingOne");
+                .containsOnly("https://clicktrackingOne");
         assertThat(VastUtils.vastTrackersToStrings(subject.getCompanionAdXmlManagers().get(1).getClickTrackers()))
-                .containsOnly("http://clicktrackingTwo");
+                .containsOnly("https://clicktrackingTwo");
     }
 
     @Test
@@ -275,7 +275,7 @@ public void getCompanionAdXmlManagers_withNoCompanionAdsNodes_shouldReturnEmptyL
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -297,7 +297,7 @@ public void getCompanionAdXmlManagers_withNoCreativeNodes_shouldReturnEmptyList(
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -319,7 +319,7 @@ public void getCompanionAdXmlManagers_withNoCreativesNodes_shouldReturnEmptyList
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
@@ -378,7 +378,7 @@ public void getVastExtensionParentXmlManager_withoutExtensions_shouldReturnNull(
                 "                         <Companion>" +
                 "                             <TrackingEvents>" +
                 "                                 <Tracking event=\"creativeView\">" +
-                "                                     <![CDATA[http://tracking/m/closeThree]]>" +
+                "                                     <![CDATA[https://tracking/m/closeThree]]>" +
                 "                                 </Tracking>" +
                 "                             </TrackingEvents>" +
                 "                         </Companion>"+
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
index e77fcc62..8ff23e7a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigTest.java
@@ -29,7 +29,7 @@
 @Config(constants = BuildConfig.class)
 public class VastCompanionAdConfigTest {
 
-    private static final String RESOLVED_CLICKTHROUGH_URL = "http://www.mopub.com/";
+    private static final String RESOLVED_CLICKTHROUGH_URL = "https://www.mopub.com/";
     private static final String CLICKTHROUGH_URL = "deeplink+://navigate?" +
             "&primaryUrl=bogus%3A%2F%2Furl" +
             "&fallbackUrl=" + Uri.encode(RESOLVED_CLICKTHROUGH_URL);
@@ -76,7 +76,7 @@ public void handleImpression_shouldTrackImpression() throws Exception {
 
     @Test
     public void handleClick_shouldNotTrackClick() throws Exception {
-        subject.handleClick(context, 1, null);
+        subject.handleClick(context, 1, null, "dsp_creative_id");
 
         verifyNoMoreInteractions(mockRequestQueue);
     }
@@ -84,7 +84,7 @@ public void handleClick_shouldNotTrackClick() throws Exception {
 
     @Test
     public void handleClick_shouldOpenMoPubBrowser() throws Exception {
-        subject.handleClick(context, 1, null);
+        subject.handleClick(context, 1, null, "dsp_creative_id");
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
@@ -92,6 +92,8 @@ public void handleClick_shouldOpenMoPubBrowser() throws Exception {
                 .isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY))
                 .isEqualTo(RESOLVED_CLICKTHROUGH_URL);
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID))
+                .isEqualTo("dsp_creative_id");
         assertThat(startedActivity.getData()).isNull();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
index 6c608e42..a738a601 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastCompanionAdConfigXmlManagerTest.java
@@ -22,19 +22,19 @@
     @Before
     public void setup() throws Exception {
         String companionXml = "<Companion id=\"valid\" height=\"250\" width=\"300\">" +
-                "    <StaticResource creativeType=\"image/png\">http://pngimage</StaticResource>" +
+                "    <StaticResource creativeType=\"image/png\">https://pngimage</StaticResource>" +
                 "    <TrackingEvents>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView1</Tracking>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView2</Tracking>" +
-                "        <Tracking event=\"creativeView\">http://tracking/creativeView3</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView1</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView2</Tracking>" +
+                "        <Tracking event=\"creativeView\">https://tracking/creativeView3</Tracking>" +
                 "    </TrackingEvents>" +
-                "    <CompanionClickThrough>http://clickthrough</CompanionClickThrough>" +
-                "    <CompanionClickThrough>http://second_clickthrough</CompanionClickThrough>" +
+                "    <CompanionClickThrough>https://clickthrough</CompanionClickThrough>" +
+                "    <CompanionClickThrough>https://second_clickthrough</CompanionClickThrough>" +
                 "    <CompanionClickTracking>" +
-                "        <![CDATA[http://clicktrackingOne]]>" +
+                "        <![CDATA[https://clicktrackingOne]]>" +
                 "    </CompanionClickTracking>" +
                 "    <CompanionClickTracking>" +
-                "        <![CDATA[http://clicktrackingTwo]]>" +
+                "        <![CDATA[https://clicktrackingTwo]]>" +
                 "    </CompanionClickTracking>" +
                 "    <RandomUnusedTag>This_is_unused</RandomUnusedTag>" +
                 "</Companion>";
@@ -78,19 +78,19 @@ public void getHeight_withNoHeightAttribute_shouldReturnNull() throws Exception
     @Test
     public void getResourceXmlManager_shouldReturnVastResourceXmlManager() throws Exception {
         VastResourceXmlManager resourceXmlManager = subject.getResourceXmlManager();
-        assertThat(resourceXmlManager.getStaticResource()).isEqualTo("http://pngimage");
+        assertThat(resourceXmlManager.getStaticResource()).isEqualTo("https://pngimage");
         assertThat(resourceXmlManager.getStaticResourceType()).isEqualTo("image/png");
     }
 
     @Test
     public void getClickThroughUrl_shouldReturnFirstStringUrl() {
-        assertThat(subject.getClickThroughUrl()).isEqualTo("http://clickthrough");
+        assertThat(subject.getClickThroughUrl()).isEqualTo("https://clickthrough");
     }
 
     @Test
     public void getClickTrackers_shouldReturnAllUrls() {
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
-                .containsOnly("http://clicktrackingOne",
-                        "http://clicktrackingTwo");
+                .containsOnly("https://clicktrackingOne",
+                        "https://clicktrackingTwo");
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
index b5f09038..395b2ee6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastExtensionXmlManagerTest.java
@@ -29,7 +29,7 @@ public void getVideoViewabilityTracker_shouldReturnVideoViewabilityTracker() thr
                 "                  <MoPubViewabilityTracker" +
                 "                          viewablePlaytime=\"2.5\"" +
                 "                          percentViewable=\"50%\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
@@ -39,7 +39,7 @@ public void getVideoViewabilityTracker_shouldReturnVideoViewabilityTracker() thr
         assertThat(tracker).isNotNull();
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(2500);
         assertThat(tracker.getPercentViewable()).isEqualTo(50);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.gif");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
@@ -57,7 +57,7 @@ public void getVideoViewabilityTracker_withoutVieweablePlaytime_shouldReturnNull
         String extensionXml = "<Extension type=\"MoPub\">" +
                 "                  <MoPubViewabilityTracker" +
                 "                          percentViewable=\"50%\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
@@ -72,7 +72,7 @@ public void getVideoViewabilityTracker_withoutPercentViewable_shouldReturnNull()
         String extensionXml = "<Extension type=\"MoPub\">" +
                 "                  <MoPubViewabilityTracker" +
                 "                          viewablePlaytime=\"2.5\">" +
-                "                      <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                      <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                  </MoPubViewabilityTracker>" +
                 "              </Extension>";
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
index 292a0414..3a636ccb 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastIconConfigTest.java
@@ -31,6 +31,7 @@
     private VastIconConfig subject;
     private Context context;
     @Mock private MoPubRequestQueue mockRequestQueue;
+    private String dspCreativeId;
 
     @Before
     public void setup() {
@@ -38,10 +39,11 @@ public void setup() {
                 new VastResource("resource", VastResource.Type.STATIC_RESOURCE, VastResource
                         .CreativeType.IMAGE, 123, 456),
                 VastUtils.stringsToVastTrackers("clickTrackerOne", "clickTrackerTwo"),
-                "http://www.mopub.com/",
+                "https://www.mopub.com/",
                 VastUtils.stringsToVastTrackers("viewTrackerOne", "viewTrackerTwo")
         );
         context = Robolectric.buildActivity(Activity.class).create().get();
+        dspCreativeId = "dspCreativeId";
         Networking.setRequestQueueForTesting(mockRequestQueue);
     }
 
@@ -57,7 +59,7 @@ public void constructor_shouldSetParamsCorrectly() throws Exception {
                 .isEqualTo(VastResource.CreativeType.IMAGE);
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackingUris()))
                 .containsOnly("clickTrackerOne", "clickTrackerTwo");
-        assertThat(subject.getClickThroughUri()).isEqualTo("http://www.mopub.com/");
+        assertThat(subject.getClickThroughUri()).isEqualTo("https://www.mopub.com/");
         assertThat(VastUtils.vastTrackersToStrings(subject.getViewTrackingUris()))
                 .containsOnly("viewTrackerOne", "viewTrackerTwo");
     }
@@ -85,7 +87,7 @@ public void handleImpression_shouldTrackImpression() throws Exception {
 
     @Test
     public void handleClick_shouldNotTrackClick() throws Exception {
-        subject.handleClick(context, null);
+        subject.handleClick(context, null, dspCreativeId);
 
         verifyNoMoreInteractions(mockRequestQueue);
     }
@@ -93,14 +95,16 @@ public void handleClick_shouldNotTrackClick() throws Exception {
 
     @Test
     public void handleClick_shouldOpenMoPubBrowser() throws Exception {
-        subject.handleClick(context, null);
+        subject.handleClick(context, null, dspCreativeId);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent startedActivity = ShadowApplication.getInstance().getNextStartedActivity();
         assertThat(startedActivity.getComponent().getClassName())
                 .isEqualTo("com.mopub.common.MoPubBrowser");
         assertThat(startedActivity.getStringExtra(MoPubBrowser.DESTINATION_URL_KEY))
-                .isEqualTo("http://www.mopub.com/");
+                .isEqualTo("https://www.mopub.com/");
+        assertThat(startedActivity.getStringExtra(MoPubBrowser.DSP_CREATIVE_ID))
+                .isEqualTo("dspCreativeId");
         assertThat(startedActivity.getData()).isNull();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
index 65e91898..c16f52b6 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastLinearXmlManagerTest.java
@@ -28,167 +28,167 @@ public void setup() throws Exception {
                 "<TrackingEvents>" +
                 "    <Tracking event=\"creativeView\">" +
                 "        <![CDATA[" +
-                "        http://creativeView/one" +
+                "        https://creativeView/one" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"creativeView\">" +
                 "        <![CDATA[" +
-                "        http://creativeView/two" +
+                "        https://creativeView/two" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"start\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"progress\" offset=\"13%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"progress\" offset=\"01:01:10.300\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to ambiguous offset.
                 "    <Tracking event=\"progress\" offset=\"01:01\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a too-high percentage offset.
                 "    <Tracking event=\"progress\" offset=\"113%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a negative percentage offset.
                 "    <Tracking event=\"progress\" offset=\"-113%\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 // Invalid tracking due to a non-number offset
                 "    <Tracking event=\"progress\" offset=\"ten seconds\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"midpoint\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"midpoint\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"firstQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"firstQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"thirdQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"thirdQuartile\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"complete\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"complete\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"close\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/close?q=ignatius" +
+                "        https://www.mopub.com/close?q=ignatius" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"close\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/close?q=j3" +
+                "        https://www.mopub.com/close?q=j3" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"closeLinear\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/closeLinear" +
+                "        https://www.mopub.com/closeLinear" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"skip\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/skip?q=ignatius" +
+                "        https://www.mopub.com/skip?q=ignatius" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"skip\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/skip?q=j3" +
+                "        https://www.mopub.com/skip?q=j3" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"mute\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"pause\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/pause?num=1" +
+                "        https://www.mopub.com/pause?num=1" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"pause\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/pause?num=2" +
+                "        https://www.mopub.com/pause?num=2" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"resume\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/resume?num=1" +
+                "        https://www.mopub.com/resume?num=1" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"resume\">" +
                 "        <![CDATA[" +
-                "        http://www.mopub.com/resume?num=2" +
+                "        https://www.mopub.com/resume?num=2" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"fullscreen\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
+                "        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "    <Tracking event=\"fullscreen\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
+                "        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
                 "        ]]>" +
                 "    </Tracking>" +
                 "</TrackingEvents>" +
                 "<AdParameters/>" +
                 "<VideoClicks>" +
                 "    <ClickThrough>" +
-                "        <![CDATA[ http://www.google.com/support/richmedia ]]>" +
+                "        <![CDATA[ https://www.google.com/support/richmedia ]]>" +
                 "    </ClickThrough>" +
                 "    <ClickTracking id=\"DART\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
+                "        https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
                 "        ]]>" +
                 "    </ClickTracking>" +
                 "    <ClickTracking id=\"ThirdParty\">" +
                 "        <![CDATA[" +
-                "        http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia" +
+                "        https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia" +
                 "        ]]>" +
                 "    </ClickTracking>" +
                 "</VideoClicks>" +
@@ -196,13 +196,13 @@ public void setup() throws Exception {
                 "    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "    <MediaFile id=\"2\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "</MediaFiles>" +
@@ -236,31 +236,31 @@ public void getFractionalTrackers_shouldReturnCorrectValues() {
 
         VastFractionalProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.trackingFraction()).isEqualTo(0.13f);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker4 = trackers.get(4);
         assertThat(tracker4.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker4.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
+        assertThat(tracker4.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker5 = trackers.get(5);
         assertThat(tracker5.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker5.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
+        assertThat(tracker5.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker6 = trackers.get(6);
         assertThat(tracker6.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker6.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
+        assertThat(tracker6.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
     }
 
     @Test
@@ -272,19 +272,19 @@ public void getAbsoluteProgressTrackers_shouldReturnCorrectValues() {
 
         VastAbsoluteProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.getTrackingMilliseconds()).isEqualTo(0);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://creativeView/one");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://creativeView/one");
 
         VastAbsoluteProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.getTrackingMilliseconds()).isEqualTo(0);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://creativeView/two");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://creativeView/two");
 
         VastAbsoluteProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.getTrackingMilliseconds()).isEqualTo(2000);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastAbsoluteProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.getTrackingMilliseconds()).isEqualTo(3670300);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;" +
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;" +
                 "src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;" +
                 "rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
     }
@@ -293,17 +293,17 @@ public void getAbsoluteProgressTrackers_shouldReturnCorrectValues() {
     public void getVideoCompleteTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoCompleteTrackers()))
-                .containsOnly("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?");
+                .containsOnly("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?");
     }
 
     @Test
     public void getVideoCloseTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoCloseTrackers()))
-                .containsOnly("http://www.mopub.com/close?q=ignatius",
-                        "http://www.mopub.com/close?q=j3",
-                        "http://www.mopub.com/closeLinear");
+                .containsOnly("https://www.mopub.com/close?q=ignatius",
+                        "https://www.mopub.com/close?q=j3",
+                        "https://www.mopub.com/closeLinear");
     }
 
     @Test
@@ -313,8 +313,8 @@ public void getPauseTrackers_shouldReturnRepeatableVastTrackers() {
             assertThat(vastTracker.isRepeatable());
         }
         assertThat(VastUtils.vastTrackersToStrings(subject.getPauseTrackers()))
-                .containsOnly("http://www.mopub.com/pause?num=1",
-                        "http://www.mopub.com/pause?num=2");
+                .containsOnly("https://www.mopub.com/pause?num=1",
+                        "https://www.mopub.com/pause?num=2");
     }
 
     @Test
@@ -324,16 +324,16 @@ public void getResumeTrackers_shouldReturnRepeatableVastTrackers() {
             assertThat(vastTracker.isRepeatable());
         }
         assertThat(VastUtils.vastTrackersToStrings(subject.getResumeTrackers()))
-                .containsOnly("http://www.mopub.com/resume?num=1",
-                        "http://www.mopub.com/resume?num=2");
+                .containsOnly("https://www.mopub.com/resume?num=1",
+                        "https://www.mopub.com/resume?num=2");
     }
 
     @Test
     public void getVideoSkipTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getVideoSkipTrackers()))
-                .containsOnly("http://www.mopub.com/skip?q=ignatius",
-                        "http://www.mopub.com/skip?q=j3");
+                .containsOnly("https://www.mopub.com/skip?q=ignatius",
+                        "https://www.mopub.com/skip?q=j3");
     }
 
     @Test
@@ -341,18 +341,18 @@ public void getClickThroughUrl_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         String url = subject.getClickThroughUrl();
 
-        assertThat(url).isEqualTo("http://www.google.com/support/richmedia");
+        assertThat(url).isEqualTo("https://www.google.com/support/richmedia");
     }
 
     @Test
     public void getClickTrackers_shouldReturnTheCorrectValue() {
         subject = new VastLinearXmlManager(linearNode);
         assertThat(VastUtils.vastTrackersToStrings(subject.getClickTrackers()))
-                .containsOnly("http://ad.doubleclick" +
+                .containsOnly("https://ad.doubleclick" +
                                 ".net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0" +
                                 "%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0" +
                                 "/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
-                        "http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google" +
+                        "https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google" +
                                 ".com/support/richmedia");
     }
 
@@ -393,9 +393,9 @@ public void getMediaXmlManagers_shouldReturnMediaXmlManagers() {
 
         assertThat(mediaXmlManagers.size()).isEqualTo(2);
 
-        assertThat(mediaXmlManagers.get(0).getMediaUrl()).isEqualTo("http://s3.amazonaws" +
+        assertThat(mediaXmlManagers.get(0).getMediaUrl()).isEqualTo("https://s3.amazonaws" +
                 ".com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
-        assertThat(mediaXmlManagers.get(1).getMediaUrl()).isEqualTo("http://s3.amazonaws" +
+        assertThat(mediaXmlManagers.get(1).getMediaUrl()).isEqualTo("https://s3.amazonaws" +
                 ".com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny_2.mp4");
     }
 
@@ -419,7 +419,7 @@ public void getMediaXmlManagers_withNoMediaFilesNode_shouldReturnEmptyList() thr
                 "    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+                "        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "    </MediaFile>" +
                 "</Linear>";
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
index c2fd0853..9b1cb0ae 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMacroHelperTest.java
@@ -29,7 +29,7 @@
     @Before
     @SuppressWarnings("unchecked")
     public void setup() {
-        defaultUri = "http://www.derp.com/herp?errorcode=[ERRORCODE]&contentplayhead=[CONTENTPLAYHEAD]&asseturi=[ASSETURI]&cachebusting=[CACHEBUSTING]";
+        defaultUri = "https://www.derp.com/herp?errorcode=[ERRORCODE]&contentplayhead=[CONTENTPLAYHEAD]&asseturi=[ASSETURI]&cachebusting=[CACHEBUSTING]";
         // Suppressing unchecked cast to List<String> with Collections#singletonList(Object)
         subject = new VastMacroHelper(Collections.singletonList(defaultUri));
     }
@@ -37,7 +37,7 @@ public void setup() {
     @Test
     public void constructor_shouldSetCacheBusting() throws Exception {
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
@@ -62,32 +62,32 @@ public void constructor_shouldCreateRandomCacheBustingValues() throws Exception
     public void withErrorCode_shouldSetErrorCode() throws Exception {
         subject.withErrorCode(VastErrorCode.XML_PARSING_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=100&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=100&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.WRAPPER_TIMEOUT);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=301&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=301&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.NO_ADS_VAST_RESPONSE);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=303&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=303&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.GENERAL_LINEAR_AD_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=400&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=400&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.GENERAL_COMPANION_AD_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=600&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=600&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withErrorCode(VastErrorCode.UNDEFINED_ERROR);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
@@ -95,70 +95,70 @@ public void withErrorCode_shouldSetErrorCode() throws Exception {
     public void withContentPlayHead_shouldFormatTime_shouldSetContentPlayHead() throws Exception {
         subject.withContentPlayHead(3600000);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=01:00:00.000&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=01:00:00.000&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(360000000);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=100:00:00.000&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=100:00:00.000&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(3599999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:59:59.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:59:59.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(59999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:00:59.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:00:59.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(999);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=00:00:00.999&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=00:00:00.999&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
 
         subject.withContentPlayHead(45296789);
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=12:34:56.789&asseturi=&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=12:34:56.789&asseturi=&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
     @Test
     public void withAssetUri_shouldSetAssetUri() throws Exception {
-        final String expectedAssetUri = "http://thisIsAnAsset.Uri";
+        final String expectedAssetUri = "https://thisIsAnAsset.Uri";
         subject.withAssetUri(expectedAssetUri);
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=http%3A%2F%2FthisIsAnAsset.Uri&cachebusting=" +
+                "https://www.derp.com/herp?errorcode=&contentplayhead=&asseturi=https%3A%2F%2FthisIsAnAsset.Uri&cachebusting=" +
                         getAndCheckCachebusting(subject.getUris().get(0)));
     }
 
     @Test
     @SuppressWarnings("unchecked")
     public void withManyMacros_shouldReplaceAllOfThem() throws Exception {
-        final String multiUrl = "http://www.someurl.com/dosomething?[ERRORCODE][ERRORCODE][CONTENTPLAYHEAD][ERRORCODE][ASSETURI][CONTENTPLAYHEAD][ERRORCODE]";
+        final String multiUrl = "https://www.someurl.com/dosomething?[ERRORCODE][ERRORCODE][CONTENTPLAYHEAD][ERRORCODE][ASSETURI][CONTENTPLAYHEAD][ERRORCODE]";
         subject = new VastMacroHelper(Collections.singletonList(multiUrl))
                 .withAssetUri("asset")
                 .withContentPlayHead(100000)
                 .withErrorCode(VastErrorCode.UNDEFINED_ERROR);
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.someurl.com/dosomething?90090000:01:40.000900asset00:01:40.000900");
+                "https://www.someurl.com/dosomething?90090000:01:40.000900asset00:01:40.000900");
     }
 
     @Test
     @SuppressWarnings("unchecked")
     public void withSpecialCharactersInAsseturi_shouldUrlEncode() {
-        final String specialUrl = "http://www.someurl.com/somedirectory/somemethod?errorcode=[ERRORCODE]&asseturi=[ASSETURI]";
+        final String specialUrl = "https://www.someurl.com/somedirectory/somemethod?errorcode=[ERRORCODE]&asseturi=[ASSETURI]";
         subject = new VastMacroHelper(Collections.singletonList(specialUrl))
                 .withErrorCode(VastErrorCode.UNDEFINED_ERROR)
                 .withAssetUri(
-                        "http://aaddss.mmooppuubb.ccoomm:123/method?args=one~`!@#$%^&*()_+-[]{}|:,.<>/");
+                        "https://aaddss.mmooppuubb.ccoomm:123/method?args=one~`!@#$%^&*()_+-[]{}|:,.<>/");
 
         assertThat(subject.getUris()).containsOnly(
-                "http://www.someurl.com/somedirectory/somemethod?errorcode=900&asseturi=" +
-                        "http%3A%2F%2Faaddss.mmooppuubb.ccoomm%3A123%2Fmethod%3Fargs%3Done" +
+                "https://www.someurl.com/somedirectory/somemethod?errorcode=900&asseturi=" +
+                        "https%3A%2F%2Faaddss.mmooppuubb.ccoomm%3A123%2Fmethod%3Fargs%3Done" +
                         "%7E%60%21%40%23%24%25%5E%26*%28%29_%2B-%5B%5D%7B%7D%7C%3A%2C.%3C%3E%2F");
     }
 
@@ -176,11 +176,11 @@ public void withManyUrls_shouldReturnListOfUrls() {
 
         assertThat(subject.getUris().size()).isEqualTo(3);
         assertThat(subject.getUris().get(0)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et");
         assertThat(subject.getUris().get(1)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&asset2=https%3A%2F%2Fa.ss.et");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&asset2=https%3A%2F%2Fa.ss.et");
         assertThat(subject.getUris().get(2)).isEqualTo(
-                "http://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&cph2=00:00:00.500");
+                "https://www.derp.com/herp?errorcode=900&contentplayhead=00:00:00.500&asseturi=https%3A%2F%2Fa.ss.et&cph2=00:00:00.500");
     }
 
     @Test
@@ -207,7 +207,7 @@ public void withDeeplink_shouldNotAttemptToReformat() {
     @Test
     @SuppressWarnings("unchecked")
     public void withNormalUri_shouldReturnUnchangedUri() {
-        final String normalUri = "http://www.thisisanormal.uri/with?some=query";
+        final String normalUri = "https://www.thisisanormal.uri/with?some=query";
         subject = new VastMacroHelper(Collections.singletonList(normalUri));
 
         assertThat(subject.getUris()).containsOnly(normalUri);
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
index e36212ca..d53c7cc3 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastManagerTest.java
@@ -31,22 +31,23 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowMoPubHttpUrlConnection.class})
 public class VastManagerTest {
     static final String EXTENSIONS_SNIPPET_PLACEHOLDER = "<![CDATA[EXTENSIONS_SNIPPET]]>";
-    static final String TEST_VAST_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='progress' offset='00:00:03.100'>http://myTrackingURL/wrapper/progress</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='close'>http://myTrackingURL/wrapper/close</Tracking><Tracking event='skip'>http://myTrackingURL/wrapper/skip</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative><Creative AdID=\"601364-Companion\"> <CompanionAds><Companion width=\"9000\"></Companion> </CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[http://wrapperErrorTracker]]></Error></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
-    static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><VAST version='2.0'><Ad id='57722'><InLine><AdSystem version='1.0'>Tapad</AdSystem><AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle><Description/><Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression><Creatives><Creative sequence='1' id='57722'><Linear><TrackingEvents><Tracking event='close'>http://myTrackingURL/wrapper/nested_close</Tracking><Tracking event='skip'>http://myTrackingURL/wrapper/nested_skip</Tracking></TrackingEvents><Duration>00:00:15</Duration><VideoClicks><ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough></VideoClicks><MediaFiles><MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video.mp4]]></MediaFile><MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4]]></MediaFile></MediaFiles></Linear></Creative><Creative AdID=\"601364-Companion\"><CompanionAds><Companion id=\"valid\" height=\"250\" width=\"300\"><StaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/Blistex1.jpg</StaticResource><TrackingEvents><Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking><Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking></TrackingEvents><CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough><CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking><CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking></Companion></CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[http://inLineErrorTracker]]></Error></InLine></Ad></VAST>";
-    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_VAST_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='progress' offset='00:00:03.100'>https://myTrackingURL/wrapper/progress</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='close'>https://myTrackingURL/wrapper/close</Tracking><Tracking event='skip'>https://myTrackingURL/wrapper/skip</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative><Creative AdID=\"601364-Companion\"> <CompanionAds><Companion width=\"9000\"></Companion> </CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[https://wrapperErrorTracker]]></Error></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><VAST version='2.0'><Ad id='57722'><InLine><AdSystem version='1.0'>Tapad</AdSystem><AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle><Description/><Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression><Creatives><Creative sequence='1' id='57722'><Linear><TrackingEvents><Tracking event='close'>https://myTrackingURL/wrapper/nested_close</Tracking><Tracking event='skip'>https://myTrackingURL/wrapper/nested_skip</Tracking></TrackingEvents><Duration>00:00:15</Duration><VideoClicks><ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough></VideoClicks><MediaFiles><MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video.mp4]]></MediaFile><MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'><![CDATA[https://s3.amazonaws.com/mopub-vast/tapad-video1.mp4]]></MediaFile></MediaFiles></Linear></Creative><Creative AdID=\"601364-Companion\"><CompanionAds><Companion id=\"valid\" height=\"250\" width=\"300\"><StaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/Blistex1.jpg</StaticResource><TrackingEvents><Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking><Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking></TrackingEvents><CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough><CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking><CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking></Companion></CompanionAds></Creative></Creatives><![CDATA[EXTENSIONS_SNIPPET]]><Error><![CDATA[https://inLineErrorTracker]]></Error></InLine></Ad></VAST>";
+    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives></Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
 
     private VastManager subject;
     private VastManagerListener vastManagerListener;
     private Activity context;
     private VastVideoConfig mVastVideoConfig;
     private Semaphore semaphore;
+    private String dspCreativeId;
 
     @Before
     public void setup() {
         context = Robolectric.buildActivity(Activity.class).create().get();
         CacheService.initializeDiskCache(context);
         subject = new VastManager(context, true);
-
+        dspCreativeId = "dspCreativeId";
         semaphore = new Semaphore(0);
         vastManagerListener = mock(VastManagerListener.class);
         doAnswer(new Answer() {
@@ -66,7 +67,7 @@ public void tearDown() {
     }
 
     private void prepareVastVideoConfiguration() {
-        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -88,7 +89,7 @@ public void prepareVastVideoConfiguration_shouldNotifyTheListenerAndContainTheCo
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
 
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(5);
 
         // Verify quartile trackers
@@ -119,16 +120,16 @@ public void prepareVastVideoConfiguration_shouldNotifyTheListenerAndContainTheCo
         assertThat(vastCompanionAdConfig.getWidth()).isEqualTo(300);
         assertThat(vastCompanionAdConfig.getHeight()).isEqualTo(250);
         assertThat(vastCompanionAdConfig.getVastResource().getResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
         assertThat(vastCompanionAdConfig.getVastResource().getType())
                 .isEqualTo(VastResource.Type.STATIC_RESOURCE);
         assertThat(vastCompanionAdConfig.getVastResource().getCreativeType())
                 .isEqualTo(VastResource.CreativeType.IMAGE);
-        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
 
         assertThat(VastUtils.vastTrackersToStrings(vastCompanionAdConfig.getClickTrackers()))
-                .containsOnly("http://companionClickTracking1",
-                        "http://companionClickTracking2");
+                .containsOnly("https://companionClickTracking1",
+                        "https://companionClickTracking2");
     }
 
     @Test
@@ -150,7 +151,7 @@ public void prepareVastVideoConfiguration_shouldHandleMultipleRedirects() throws
         final String expectedFilePathDiskCache = CacheService.getFilePathDiskCache(mVastVideoConfig.getNetworkMediaFileUrl());
         assertThat(mVastVideoConfig.getDiskMediaFileUrl()).isEqualTo(expectedFilePathDiskCache);
 
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(13);
 
         assertThat(mVastVideoConfig.getAbsoluteTrackers().size()).isEqualTo(9);
@@ -187,15 +188,15 @@ public void prepareVastVideoConfiguration_shouldHandleMultipleRedirects() throws
         assertThat(vastCompanionAdConfig.getWidth()).isEqualTo(300);
         assertThat(vastCompanionAdConfig.getHeight()).isEqualTo(250);
         assertThat(vastCompanionAdConfig.getVastResource().getResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
         assertThat(vastCompanionAdConfig.getVastResource().getType())
                 .isEqualTo(VastResource.Type.STATIC_RESOURCE);
         assertThat(vastCompanionAdConfig.getVastResource().getCreativeType())
                 .isEqualTo(VastResource.CreativeType.IMAGE);
-        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+        assertThat(vastCompanionAdConfig.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
         assertThat(VastUtils.vastTrackersToStrings(vastCompanionAdConfig.getClickTrackers()))
-                .containsOnly("http://companionClickTracking1",
-                        "http://companionClickTracking2");
+                .containsOnly("https://companionClickTracking1",
+                        "https://companionClickTracking2");
     }
 
     @Test
@@ -243,11 +244,12 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
                             "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -258,7 +260,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderWrapper_shouldConta
         // Verify custom extensions
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
@@ -271,7 +273,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
                                 "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>custom CTA text</MoPubCtaText>" +
                                 "<MoPubSkipText>skip</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
@@ -286,7 +288,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderInline_shouldContai
         // Verify custom extensions
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("custom CTA text");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.DEVICE_ORIENTATION);
     }
 
@@ -299,7 +301,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                                 "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>CTA 2</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 2</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>landscape</MoPubForceOrientation>" +
                                 "</Extension>" +
                                 "</Extensions>"));
@@ -313,11 +315,12 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
                             "<Extension type=\"MoPub\">" +
                                 "<MoPubCtaText>CTA 1</MoPubCtaText>" +
                                 "<MoPubSkipText>skip 1</MoPubSkipText>" +
-                                "<MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png</MoPubCloseIcon>" +
+                                "<MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png</MoPubCloseIcon>" +
                                 "<MoPubForceOrientation>device orientation</MoPubForceOrientation>" +
                             "</Extension>" +
                         "</Extensions>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -329,7 +332,7 @@ public void prepareVastVideoConfiguration_withExtensionsUnderBothWrapperAndInlin
         // Verify custom extension values are the ones last parsed in TEST_NESTED_VAST_XML_STRING
         assertThat(mVastVideoConfig.getCustomCtaText()).isEqualTo("CTA 2");
         assertThat(mVastVideoConfig.getCustomSkipText()).isEqualTo("skip 2");
-        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png");
+        assertThat(mVastVideoConfig.getCustomCloseIconUrl()).isEqualTo("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_2.png");
         assertThat(mVastVideoConfig.getCustomForceOrientation()).isEqualTo(DeviceUtils.ForceOrientation.FORCE_LANDSCAPE);
     }
 
@@ -490,6 +493,7 @@ public void prepareVastVideoConfiguration_withSkipOffsets_shouldReturnLastParsed
         subject.prepareVastVideoConfiguration(
                 TEST_VAST_XML_STRING.replace("<Linear>", "<Linear skipoffset='00:03:14'>"),
                 vastManagerListener,
+                dspCreativeId,
                 context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
@@ -520,7 +524,7 @@ public void prepareVastVideoConfiguration_withEmptySkipOffset_shouldReturnNull()
     @Test
     public void prepareVastVideoConfiguration_withNoMediaUrlInXml_shouldReturnNull() throws Exception {
         subject.prepareVastVideoConfiguration(TEST_VAST_BAD_NEST_URL_XML_STRING,
-                vastManagerListener, context);
+                vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -532,7 +536,7 @@ public void prepareVastVideoConfiguration_withNoMediaUrlInXml_shouldReturnNull()
 
     @Test
     public void prepareVastVideoConfiguration_withNullXml_shouldReturnNull() throws Exception {
-        subject.prepareVastVideoConfiguration(null, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(null, vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -544,7 +548,7 @@ public void prepareVastVideoConfiguration_withNullXml_shouldReturnNull() throws
 
     @Test
     public void prepareVastVideoConfiguration_withEmptyXml_shouldReturnNull() throws Exception {
-        subject.prepareVastVideoConfiguration("", vastManagerListener, context);
+        subject.prepareVastVideoConfiguration("", vastManagerListener, dspCreativeId, context);
 
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         ShadowLooper.runUiThreadTasks();
@@ -587,7 +591,7 @@ public void cancel_shouldCancelBackgroundProcessingAndNotNotifyListenerWithNull(
 
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, context);
+        subject.prepareVastVideoConfiguration(TEST_VAST_XML_STRING, vastManagerListener, dspCreativeId, context);
 
         subject.cancel();
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
index c50ec72c..e1effa81 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastMediaXmlManagerTest.java
@@ -24,7 +24,7 @@ public void setup() throws Exception {
                 "bitrate=\"457\"" +
                 "               width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -43,7 +43,7 @@ public void getWidth_withNoWidthAttribute_shouldReturnNull() throws Exception {
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" " +
                 "bitrate=\"457\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -64,7 +64,7 @@ public void getHeight_withNoHeightAttribute_shouldReturnNull() throws Exception
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" " +
                 "bitrate=\"457\" width=\"300\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -85,7 +85,7 @@ public void getType_withNoTypeAttribute_shouldReturnNull() throws Exception {
         String mediaXml = "<MediaFile id=\"1\" delivery=\"progressive\" " +
                 "bitrate=\"457\" width=\"300\" height=\"225\">" +
                 "        <![CDATA[" +
-                "        http://s3.amazonaws.com/uploads.hipchat" +
+                "        https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
                 "        ]]>" +
                 "</MediaFile>";
@@ -98,7 +98,7 @@ public void getType_withNoTypeAttribute_shouldReturnNull() throws Exception {
 
     @Test
     public void getMediaUrl_shouldReturnMediaFileUrl() {
-        assertThat(subject.getMediaUrl()).isEqualTo("http://s3.amazonaws.com/uploads.hipchat" +
+        assertThat(subject.getMediaUrl()).isEqualTo("https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
index 504a0822..9d38dd63 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoConfigTest.java
@@ -157,40 +157,40 @@ public void handleClickForResult_withNullClickThroughUrl_shouldNotOpenNewActivit
     @Test
     public void handleClickForResult_withMoPubNativeBrowserClickThroughUrl_shouldOpenExternalBrowser_shouldMakeTrackingHttpRequest() throws Exception {
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com%2F");
         subject.addClickTrackers(
-                Arrays.asList(new VastTracker("http://trackerone+content=[CONTENTPLAYHEAD]"),
-                        new VastTracker("http://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
+                Arrays.asList(new VastTracker("https://trackerone+content=[CONTENTPLAYHEAD]"),
+                        new VastTracker("https://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
 
         subject.handleClickForResult(activity, 2345, 1234);
 
         Robolectric.getForegroundThreadScheduler().unPause();
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
-        assertThat(intent.getDataString()).isEqualTo("http://www.mopub.com/");
+        assertThat(intent.getDataString()).isEqualTo("https://www.mopub.com/");
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackerone+content=00:00:02.345")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackertwo+error=&asset=video_url")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackerone+content=00:00:02.345")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackertwo+error=&asset=video_url")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
     @Test
     public void handleClickWithoutResult_shouldOpenExternalBrowser_shouldMakeTrackingHttpRequest() throws Exception {
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url=https%3A%2F%2Fwww.mopub.com%2F");
         subject.addClickTrackers(
-                Arrays.asList(new VastTracker("http://trackerone+content=[CONTENTPLAYHEAD]"),
-                        new VastTracker("http://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
+                Arrays.asList(new VastTracker("https://trackerone+content=[CONTENTPLAYHEAD]"),
+                        new VastTracker("https://trackertwo+error=[ERRORCODE]&asset=[ASSETURI]")));
 
         subject.handleClickWithoutResult(activity.getApplicationContext(), 2345);
 
         Robolectric.getForegroundThreadScheduler().unPause();
         Robolectric.getBackgroundThreadScheduler().advanceBy(0);
         Intent intent = ShadowApplication.getInstance().getNextStartedActivity();
-        assertThat(intent.getDataString()).isEqualTo("http://www.mopub.com/");
+        assertThat(intent.getDataString()).isEqualTo("https://www.mopub.com/");
         assertThat(intent.getAction()).isEqualTo(Intent.ACTION_VIEW);
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackerone+content=00:00:02.345")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://trackertwo+error=&asset=video_url")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackerone+content=00:00:02.345")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://trackertwo+error=&asset=video_url")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -198,7 +198,7 @@ public void handleClickWithoutResult_shouldOpenExternalBrowser_shouldMakeTrackin
     public void handleClickForResult_withMalformedMoPubNativeBrowserClickThroughUrl_shouldNotOpenANewActivity() throws Exception {
         // url2 is an invalid query parameter
         subject.setClickThroughUrl(
-                "mopubnativebrowser://navigate?url2=http%3A%2F%2Fwww.mopub.com%2F");
+                "mopubnativebrowser://navigate?url2=https%3A%2F%2Fwww.mopub.com%2F");
 
         subject.handleClickForResult(activity, 3456, 1);
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoCtaButtonWidgetTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoCtaButtonWidgetTest.java
index 091ebf86..2943bfea 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoCtaButtonWidgetTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoCtaButtonWidgetTest.java
@@ -166,6 +166,18 @@ public void notifyVideoComplete_withCompanionAdAndOrientationUndefined_shouldBeG
         assertThat(subject.getLayoutParams()).isNull();
     }
 
+    @Test
+    public void notifyVideoComplete_withCompanionAd_withSocialActions_shouldBeVisible() throws Exception {
+        context.getResources().getConfiguration().orientation = Configuration.ORIENTATION_UNDEFINED;
+        subject = new VastVideoCtaButtonWidget(context, 0, true, true);
+        subject.setHasSocialActions(true);
+        subject.setVisibility(View.VISIBLE);
+
+        subject.notifyVideoComplete();
+
+        assertThat(subject.getVisibility()).isEqualTo(View.VISIBLE);
+    }
+
     // Video is complete, no companion ad, has clickthrough url, CTA button already visible
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
index 8c7e91e9..1fa858ca 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoInterstitialTest.java
@@ -4,6 +4,7 @@
 import android.content.Context;
 import android.content.Intent;
 
+import com.mopub.common.AdReport;
 import com.mopub.common.CacheServiceTest;
 import com.mopub.common.DataKeys;
 import com.mopub.common.test.support.SdkTestRunner;
@@ -14,6 +15,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.mockito.Mock;
 import org.robolectric.Robolectric;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.httpclient.FakeHttp;
@@ -23,11 +25,12 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import static com.mopub.common.DataKeys.AD_REPORT_KEY;
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static com.mopub.mobileads.VastManager.VastManagerListener;
@@ -38,6 +41,7 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 import static org.mockito.Mockito.withSettings;
 
 @RunWith(SdkTestRunner.class)
@@ -53,13 +57,15 @@
     private String videoUrl;
     private long broadcastIdentifier;
 
+    @Mock AdReport mockAdReport;
+
     @Before
     public void setUp() throws Exception {
         subject = new VastVideoInterstitial();
 
         vastManager = TestVastManagerFactory.getSingletonMock();
         expectedResponse = "<VAST>hello</VAST>";
-        videoUrl = "http://www.video.com";
+        videoUrl = "https://www.video.com";
 
         context = Robolectric.buildActivity(Activity.class).create().get();
         customEventInterstitialListener = mock(CustomEventInterstitialListener.class);
@@ -71,6 +77,8 @@ public void setUp() throws Exception {
 
         broadcastIdentifier = 2222;
         localExtras.put(BROADCAST_IDENTIFIER_KEY, broadcastIdentifier);
+        when(mockAdReport.getDspCreativeId()).thenReturn("dsp_creative_id");
+        localExtras.put(AD_REPORT_KEY, mockAdReport);
     }
 
     @Test
@@ -82,12 +90,13 @@ public void preRenderHtml_whenCreatingVideoCache_butItHasInitializationErrors_sh
         verify(customEventInterstitialListener).onInterstitialFailed(
                 eq(MoPubErrorCode.VIDEO_CACHE_ERROR));
         verify(vastManager, never()).prepareVastVideoConfiguration(anyString(),
-                any(VastManagerListener.class), any(Context.class));
+                any(VastManagerListener.class), any(String.class), any(Context.class));
     }
 
     @Test
     public void loadInterstitial_shouldParseHtmlResponseBodyServerExtra() throws Exception {
-        subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
+        subject.loadInterstitial(context, customEventInterstitialListener, localExtras,
+                serverExtras);
 
         assertThat(((VastVideoInterstitial) subject).getVastResponse()).isEqualTo(expectedResponse);
     }
@@ -106,7 +115,7 @@ public void loadInterstitial_shouldCreateVastManagerAndProcessVast() throws Exce
         subject.loadInterstitial(context, customEventInterstitialListener, localExtras, serverExtras);
 
         verify(vastManager).prepareVastVideoConfiguration(eq(expectedResponse),
-                eq((VastVideoInterstitial) subject), eq(context));
+                eq((VastVideoInterstitial) subject), eq("dsp_creative_id"), eq(context));
     }
 
     @Test
@@ -117,7 +126,7 @@ public void loadInterstitial_whenServerExtrasDoesNotContainResponse_shouldSignal
 
         verify(customEventInterstitialListener).onInterstitialFailed(NETWORK_INVALID_STATE);
         verify(vastManager, never()).prepareVastVideoConfiguration(anyString(),
-                any(VastManagerListener.class), any(Context.class));
+                any(VastManagerListener.class), any(String.class), any(Context.class));
     }
 
     @Test
@@ -161,6 +170,7 @@ public void showInterstitial_shouldStartVideoPlayerActivityWithAllValidTrackers(
                 vastVideoConfig,
                 broadcastIdentifier
                 );
+        assertThat(vastVideoConfig.isRewardedVideo()).isFalse();
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
index 1f6f19ca..1c063c3a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewControllerTest.java
@@ -55,23 +55,27 @@
 import org.robolectric.shadows.support.v4.ShadowLocalBroadcastManager;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
 
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;
 import static android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;
 import static com.mopub.common.VolleyRequestMatcher.isUrl;
 import static com.mopub.mobileads.BaseVideoViewController.BaseVideoViewControllerListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_FAIL;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_FAIL;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.VastVideoViewController.CURRENT_POSITION;
 import static com.mopub.mobileads.VastVideoViewController.DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON;
 import static com.mopub.mobileads.VastVideoViewController.MAX_VIDEO_DURATION_FOR_CLOSE_BUTTON;
 import static com.mopub.mobileads.VastVideoViewController.RESUMED_VAST_CONFIG;
 import static com.mopub.mobileads.VastVideoViewController.VAST_VIDEO_CONFIG;
+import static com.mopub.mobileads.VastXmlManagerAggregator.ADS_BY_AD_SLOT_ID;
+import static com.mopub.mobileads.VastXmlManagerAggregator.SOCIAL_ACTIONS_AD_SLOT_ID;
 import static com.mopub.volley.toolbox.ImageLoader.ImageListener;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.junit.Assert.fail;
@@ -100,11 +104,11 @@
     private static final String COMPANION_CLICK_TRACKING_URL_1 = "companion_click_tracking_url_1";
     private static final String COMPANION_CLICK_TRACKING_URL_2 = "companion_click_tracking_url_2";
     private static final String COMPANION_CLICK_TRACKING_URL_3 = "companion_click_tracking_url_3";
-    private static final String COMPANION_CLICK_DESTINATION_URL = "http://companion_click_destination_url";
+    private static final String COMPANION_CLICK_DESTINATION_URL = "https://companion_click_destination_url";
     private static final String COMPANION_CREATIVE_VIEW_URL_1 = "companion_creative_view_url_1";
     private static final String COMPANION_CREATIVE_VIEW_URL_2 = "companion_creative_view_url_2";
     private static final String COMPANION_CREATIVE_VIEW_URL_3 = "companion_creative_view_url_3";
-    private static final String RESOLVED_CLICKTHROUGH_URL = "http://www.mopub.com/";
+    private static final String RESOLVED_CLICKTHROUGH_URL = "https://www.mopub.com/";
     private static final String CLICKTHROUGH_URL = "deeplink+://navigate?" +
             "&primaryUrl=bogus%3A%2F%2Furl" +
             "&fallbackUrl=" + Uri.encode(RESOLVED_CLICKTHROUGH_URL);
@@ -147,6 +151,7 @@ public void setUp() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setNetworkMediaFileUrl("video_url");
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setDspCreativeId("dsp_creative_id");
         vastVideoConfig.addAbsoluteTrackers(
                 Arrays.asList(new VastAbsoluteProgressTracker("start" + MACRO_TAGS, 2000)));
         vastVideoConfig.addFractionalTrackers(
@@ -202,6 +207,16 @@ public void setUp() throws Exception {
         when(mMockVastIconConfig.getVastResource()).thenReturn(vastResource);
         vastVideoConfig.setVastIconConfig(mMockVastIconConfig);
 
+
+        final ArrayList<VastTracker> vastTrackers = new ArrayList<>();
+        VastCompanionAdConfig socialActionsCompanionAd =
+                new VastCompanionAdConfig(65, 20, vastResource, "", vastTrackers, vastTrackers);
+        Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                new HashMap<String, VastCompanionAdConfig>();
+        socialActionsCompanionAds.put(ADS_BY_AD_SLOT_ID, socialActionsCompanionAd);
+        socialActionsCompanionAds.put(SOCIAL_ACTIONS_AD_SLOT_ID, socialActionsCompanionAd);
+        vastVideoConfig.setSocialActionsCompanionAds(socialActionsCompanionAds);
+
         when(mockMediaMetadataRetriever.getFrameAtTime(anyLong(), anyInt())).thenReturn(mockBitmap);
 
         bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
@@ -220,7 +235,9 @@ public boolean matches(HttpRequest request) {
             }
         }, new TestHttpResponse(200, "body"));
 
-        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(null,
+                testBroadcastIdentifier).getIntentFilter());
 
         expectedUserAgent = new WebView(context).getSettings().getUserAgentString();
     }
@@ -268,6 +285,38 @@ public void constructor_shouldAddRadialCountdownWidgetToLayoutAndSetInvisibleWit
         assertThat(radialCountdownWidgetShadow.getOnTouchListener()).isNull();
     }
 
+    @Test
+    public void constructor_shouldAddIconViewToLayoutAndSetInvisibleWithWebViewClickListener() throws Exception {
+        initializeSubject();
+
+        View iconView = subject.getIconView();
+        assertThat(iconView.getParent()).isEqualTo(subject.getLayout());
+        assertThat(iconView.getVisibility()).isEqualTo(View.INVISIBLE);
+        assertThat(((VastWebView)iconView).getVastWebViewClickListener()).isNotNull();
+    }
+
+    @Test
+    public void constructor_withAdsByCompanion_shouldAddAdsByViewToLayout() throws Exception {
+        initializeSubject();
+
+        View adsByView = subject.createAdsByView((Activity) context);
+        assertThat(adsByView.getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(subject.getHasSocialActions()).isTrue();
+        assertThat(subject.getCtaButtonWidget().getHasSocialActions()).isTrue();
+        assertThat(((VastWebView) adsByView).getVastWebViewClickListener()).isNotNull();
+    }
+
+    @Test
+    public void constructor_withSocialActionsCompanion_shouldAddSocialActionsViewToLayout() throws Exception {
+        initializeSubject();
+
+        View socialActionsView = subject.getSocialActionsView();
+        assertThat(socialActionsView.getVisibility()).isEqualTo(View.INVISIBLE);
+        assertThat(subject.getHasSocialActions()).isTrue();
+        assertThat(subject.getCtaButtonWidget().getHasSocialActions()).isTrue();
+        assertThat(((VastWebView) socialActionsView).getVastWebViewClickListener()).isNotNull();
+    }
+
     @Test
     public void constructor_shouldAddCloseButtonWidgetToLayoutAndSetToGoneWithOnTouchListeners() throws Exception {
         initializeSubject();
@@ -441,13 +490,13 @@ public void constructor_whenCustomCloseIconSpecified_shouldUseCustomCloseIcon()
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setCustomCloseIconUrl(
-                "http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png");
+                "https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png");
         bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
 
         initializeSubject();
 
         verify(mockImageLoader).get(
-                eq("http://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png"),
+                eq("https://ton.twitter.com/exchange-media/images/v4/star_icon_3x_1.png"),
                 any(ImageListener.class));
     }
 
@@ -581,7 +630,7 @@ public void VastWebView_onVastWebViewClick_shouldCallVastCompanionAdHandleClick(
                 vastCompanionAdConfig, View.INVISIBLE);
 
         view.getVastWebViewClickListener().onVastWebViewClick();
-        verify(vastCompanionAdConfig).handleClick(any(Context.class), eq(1), anyString());
+        verify(vastCompanionAdConfig).handleClick(any(Context.class), eq(1), anyString(), eq("dsp_creative_id"));
     }
 
     @Test
@@ -629,7 +678,8 @@ public void onDestroy_shouldBroadcastInterstitialDismiss() throws Exception {
     public void onDestroy_withBlurLastVideoFrameTaskStillRunning_shouldCancelTask() throws Exception {
         initializeSubject();
 
-        VastVideoBlurLastVideoFrameTask mockBlurLastVideoFrameTask = mock(VastVideoBlurLastVideoFrameTask.class);
+        VastVideoBlurLastVideoFrameTask mockBlurLastVideoFrameTask = mock(
+                VastVideoBlurLastVideoFrameTask.class);
         when(mockBlurLastVideoFrameTask.getStatus()).thenReturn(AsyncTask.Status.RUNNING);
         subject.getVastVideoView().setBlurLastVideoFrameTask(mockBlurLastVideoFrameTask);
 
@@ -1035,7 +1085,7 @@ public void onPrepared_whenSkipOffsetIsZero_shouldSetShowCloseButtonDelayToZero(
     }
 
     @Test
-    public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldNotSetShowCloseButtonDelay() throws Exception {
+    public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldSetShowCloseButtonDelay() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setSkipOffset("00:00:11");   // 11s
@@ -1048,11 +1098,11 @@ public void onPrepared_whenSkipOffsetIsLongerThanDurationForShortVideo_shouldNot
         getShadowVideoView().getOnPreparedListener().onPrepared(null);
 
         assertThat(subject.getShowCloseButtonDelay()).isEqualTo(10 * 1000);
-        assertThat(subject.getHasSkipOffset()).isFalse();
+        assertThat(subject.getHasSkipOffset()).isTrue();
     }
 
     @Test
-    public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldNotSetShowCloseButtonDelay() throws Exception {
+    public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldSetShowCloseButtonDelay() throws Exception {
         VastVideoConfig vastVideoConfig = new VastVideoConfig();
         vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
         vastVideoConfig.setSkipOffset("00:00:21");   // 21s
@@ -1064,8 +1114,41 @@ public void onPrepared_whenSkipOffsetIsLongerThanDurationForLongVideo_shouldNotS
 
         getShadowVideoView().getOnPreparedListener().onPrepared(null);
 
-        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(
-                DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON);
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(20 * 1000);
+        assertThat(subject.getHasSkipOffset()).isTrue();
+    }
+
+    @Test
+    public void onPrepared_whenSkipOffset100Percent_shouldSetShowCloseButtonDelayToVideoDuration() throws Exception {
+        VastVideoConfig vastVideoConfig = new VastVideoConfig();
+        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setSkipOffset("100%");   // 20000 ms
+        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
+
+        initializeSubject();
+        spyOnVideoView();
+        setVideoViewParams(0, 20000);    // 20s: long video
+
+        getShadowVideoView().getOnPreparedListener().onPrepared(null);
+
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(20000);
+        assertThat(subject.getHasSkipOffset()).isTrue();
+    }
+
+    @Test
+    public void onPrepared_whenSkipOffsetGreaterThan100Percent_shouldSetShowCloseButtonDelayToDefault() throws Exception {
+        VastVideoConfig vastVideoConfig = new VastVideoConfig();
+        vastVideoConfig.setDiskMediaFileUrl("disk_video_path");
+        vastVideoConfig.setSkipOffset("101%");   // 20200 ms
+        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
+
+        initializeSubject();
+        spyOnVideoView();
+        setVideoViewParams(0, 20000);    // 20s: long video
+
+        getShadowVideoView().getOnPreparedListener().onPrepared(null);
+
+        assertThat(subject.getShowCloseButtonDelay()).isEqualTo(DEFAULT_VIDEO_DURATION_FOR_CLOSE_BUTTON);
         assertThat(subject.getHasSkipOffset()).isFalse();
     }
 
@@ -1265,6 +1348,10 @@ public void onCompletion_shouldStopProgressCheckerAndCountdown() throws Exceptio
 
     @Test
     public void onCompletion_whenCompanionAdAvailable_shouldShowCompanionAdAndHideBlurredLastVideoFrame() throws Exception {
+        final VastVideoConfig vastVideoConfig =
+                (VastVideoConfig) bundle.getSerializable(VAST_VIDEO_CONFIG);
+        vastVideoConfig.setSocialActionsCompanionAds(new HashMap<String, VastCompanionAdConfig>());
+        bundle.putSerializable(VAST_VIDEO_CONFIG, vastVideoConfig);
         initializeSubject();
 
         final View companionView = subject.getLandscapeCompanionAdView();
@@ -1406,6 +1493,30 @@ public void onCompletion_whenCompanionAdNotAvailableAndBlurredLastVideoFrameNotP
         assertThat(bottomGradientStripWidget.getVisibility()).isEqualTo(View.GONE);
     }
 
+    @Test
+    public void onCompletion_withSocialActions_shouldShowCompanionAdAndShowBlurredLastVideoFrame() throws Exception {
+        initializeSubject();
+
+        final View companionView = subject.getLandscapeCompanionAdView();
+        final ImageView blurredLastVideoFrameImageView = subject.getBlurredLastVideoFrameImageView();
+
+        assertThat(subject.getVideoView().getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(companionView.getVisibility()).isEqualTo(View.INVISIBLE);
+        assertThat(blurredLastVideoFrameImageView.getVisibility()).isEqualTo(View.INVISIBLE);
+
+        getShadowVideoView().getOnPreparedListener().onPrepared(null);
+        Robolectric.getBackgroundThreadScheduler().unPause();
+        Robolectric.getForegroundThreadScheduler().unPause();
+        Thread.sleep(NETWORK_DELAY);
+
+        getShadowVideoView().getOnCompletionListener().onCompletion(null);
+
+        assertThat(subject.getVastVideoView().getBlurLastVideoFrameTask()).isNotNull();
+        assertThat(subject.getVideoView().getVisibility()).isEqualTo(View.INVISIBLE);
+        assertThat(companionView.getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(blurredLastVideoFrameImageView.getVisibility()).isEqualTo(View.VISIBLE);
+    }
+
     @Test
     public void onError_shouldFireVideoErrorAndReturnFalse() throws Exception {
         initializeSubject();
@@ -2115,7 +2226,7 @@ public void VastWebView_onVastWebViewClick_shouldCallVastIconHandleClick() throw
         VastWebView view = (VastWebView) subject.createIconView(context, vastIconConfig, View.INVISIBLE);
 
         view.getVastWebViewClickListener().onVastWebViewClick();
-        verify(vastIconConfig).handleClick(any(Context.class), anyString());
+        verify(vastIconConfig).handleClick(any(Context.class), anyString(), eq("dsp_creative_id"));
     }
 
     @Test
@@ -2157,13 +2268,14 @@ public void handleIconDisplay_withCurrentPositionGreaterThanOffsetPlusDuration_s
     }
 
     @Test
-    public void makeInteractable_shouldHideCountdownWidgetAndShowCtaAndCloseButtonWidgets() throws Exception {
+    public void makeInteractable_shouldHideCountdownWidgetAndShowCtaAndCloseButtonWidgetsAndShowSocialActions() throws Exception {
         initializeSubject();
 
         subject.makeVideoInteractable();
 
         assertThat(subject.getRadialCountdownWidget().getVisibility()).isEqualTo(View.GONE);
         assertThat(subject.getCloseButtonWidget().getVisibility()).isEqualTo(View.VISIBLE);
+        assertThat(subject.getSocialActionsView().getVisibility()).isEqualTo(View.VISIBLE);
     }
 
     private void initializeSubject() throws IllegalAccessException {
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
index 1ae2abae..4097331e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastVideoViewProgressRunnableTest.java
@@ -49,8 +49,8 @@ public void setup() {
     @Test
     public void doWork_whenTrackersReturned_shouldMakeTrackingRequests() {
         List<VastTracker> testTrackers = new ArrayList<VastTracker>();
-        testTrackers.add(new VastAbsoluteProgressTracker("http://example.com/", 1999));
-        testTrackers.add(new VastAbsoluteProgressTracker("http://example1.com/", 2000));
+        testTrackers.add(new VastAbsoluteProgressTracker("https://example.com/", 1999));
+        testTrackers.add(new VastAbsoluteProgressTracker("https://example1.com/", 2000));
 
         when(mockVideoConfig.getUntriggeredTrackersBefore(eq(3000), eq(4000)))
                 .thenReturn(testTrackers);
@@ -72,8 +72,8 @@ public void doWork_whenTrackersReturned_shouldMakeTrackingRequests() {
         verify(mockRequestQueue, times(2)).add(requestCaptor.capture());
         final List<TrackingRequest> allValues = requestCaptor.getAllValues();
         assertThat(allValues).hasSize(2);
-        assertThat(allValues.get(0).getUrl()).isEqualTo("http://example.com/");
-        assertThat(allValues.get(1).getUrl()).isEqualTo("http://example1.com/");
+        assertThat(allValues.get(0).getUrl()).isEqualTo("https://example.com/");
+        assertThat(allValues.get(1).getUrl()).isEqualTo("https://example1.com/");
 
         verifyNoMoreInteractions(mockVastVideoViewController, mockRequestQueue);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
index 887fd533..0475625f 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastWrapperXmlManagerTest.java
@@ -20,22 +20,22 @@
     public void getVastAdTagURI_shouldReturnStringURI() throws Exception {
         String wrapperXml = "<Wrapper>" +
                 "    <Impression id=\"DART\">" +
-                "        <![CDATA[http://impression/m/wrapperOne]]>" +
+                "        <![CDATA[https://impression/m/wrapperOne]]>" +
                 "    </Impression>" +
-                "    <VASTAdTagURI>http://redirecturl/xml</VASTAdTagURI>" +
+                "    <VASTAdTagURI>https://redirecturl/xml</VASTAdTagURI>" +
                 "</Wrapper>";
 
         Node wrapperNode = createNode(wrapperXml);
         subject = new VastWrapperXmlManager(wrapperNode);
 
-        assertThat(subject.getVastAdTagURI()).isEqualTo("http://redirecturl/xml");
+        assertThat(subject.getVastAdTagURI()).isEqualTo("https://redirecturl/xml");
     }
 
     @Test
     public void getVastAdTagURI_withNoVastAdTagURI_shouldReturnNull() throws Exception {
         String wrapperXml = "<Wrapper>" +
                 "    <Impression id=\"DART\">" +
-                "        <![CDATA[http://impression/m/wrapperOne]]>" +
+                "        <![CDATA[https://impression/m/wrapperOne]]>" +
                 "    </Impression>" +
                 "</Wrapper>";
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
index 597efc83..5b7e6444 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerAggregatorTest.java
@@ -25,6 +25,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Map;
 import java.util.concurrent.Semaphore;
 
 import static com.mopub.common.VolleyRequestMatcher.isUrl;
@@ -44,7 +45,7 @@
     static final String TEST_VAST_XML_STRING = "<VAST version='2.0'>" +
             "    <Ad id='empty'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http:emptyimpression]]></Impression>" +
+            "            <Impression><![CDATA[https:emptyimpression]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
@@ -53,37 +54,37 @@
             "                    </Linear>" +
             "                </Creative>" +
             "            </Creatives>" +
-            "            <Error><![CDATA[http://neverCallThisError]]></Error>" +
+            "            <Error><![CDATA[https://neverCallThisError]]></Error>" +
             "        </InLine>" +
             "    </Ad>" +
             "    <Ad id='62833' sequence='1'>" +
             "        <Wrapper>" +
             "            <AdSystem>Tapad</AdSystem>" +
-            "            <VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI>" +
-            "            <Impression>http://myTrackingURL/wrapper/impression1</Impression>" +
-            "            <Impression>http://myTrackingURL/wrapper/impression2</Impression>" +
+            "            <VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml</VASTAdTagURI>" +
+            "            <Impression>https://myTrackingURL/wrapper/impression1</Impression>" +
+            "            <Impression>https://myTrackingURL/wrapper/impression2</Impression>" +
             "            <Creatives>" +
             "                <Creative AdID='62833'>" +
             "                    <Linear>" +
             "                        <TrackingEvents>" +
-            "                            <Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking>" +
-            "                            <Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking>" +
-            "                            <Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking>" +
-            "                            <Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking>" +
-            "                            <Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking>" +
-            "                            <Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking>" +
-            "                            <Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking>" +
-            "                            <Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking>" +
-            "                            <Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking>" +
-            "                            <Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking>" +
-            "                            <Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking>" +
+            "                            <Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking>" +
+            "                            <Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking>" +
+            "                            <Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking>" +
+            "                            <Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking>" +
+            "                            <Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking>" +
+            "                            <Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking>" +
+            "                            <Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking>" +
+            "                            <Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking>" +
+            "                            <Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking>" +
+            "                            <Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking>" +
+            "                            <Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking>" +
             "                        </TrackingEvents>" +
             "                        <VideoClicks>" +
-            "                            <ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking>" +
+            "                            <ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://videosInWrappersShouldNeverBePlayed]]>" +
+            "                                <![CDATA[https://videosInWrappersShouldNeverBePlayed]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -92,22 +93,22 @@
             "                    <CompanionAds>" +
             "                        <Companion id=\"wrappercompanion\" height=\"250\" width=\"456\">" +
             "                            <StaticResource creativeType=\"image/jpeg\">" +
-            "                                http://wrapperCompanionAdStaticResource" +
+            "                                https://wrapperCompanionAdStaticResource" +
             "                            </StaticResource>" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://firstWrapperCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://secondWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://firstWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://secondWrapperCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://wrapperCompanionClickThrough</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://wrapperCompanionClickTracking]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://wrapperCompanionClickThrough</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://wrapperCompanionClickTracking]]></CompanionClickTracking>" +
             "                        </Companion> " +
             "                        <Companion id=\"noresource\" height=\"250\" width=\"456\">" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://firstNoResourceWrapperCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://secondNoResourceWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://firstNoResourceWrapperCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://secondNoResourceWrapperCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://noResourceWrapperCompanionClickThrough</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://noResourceWrapperCompanionClickTracking1]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://noResourceWrapperCompanionClickThrough</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://noResourceWrapperCompanionClickTracking1]]></CompanionClickTracking>" +
             "                        </Companion> " +
             "                    </CompanionAds>" +
             "                </Creative>" +
@@ -117,18 +118,18 @@
             "                    <MoPubViewabilityTracker" +
             "                            viewablePlaytime=\"2.5\"" +
             "                            percentViewable=\"50%\">" +
-            "                        <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+            "                        <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
             "                    </MoPubViewabilityTracker>" +
             "                </Extension>" +
             "            </Extensions>" +
-            "            <Error><![CDATA[http://wrapperErrorOne?errorcode=[ERRORCODE]]]></Error>" +
-            "            <Error><![CDATA[http://wrapperErrorTwo?errorcode=[ERRORCODE]]]></Error>" +
+            "            <Error><![CDATA[https://wrapperErrorOne?errorcode=[ERRORCODE]]]></Error>" +
+            "            <Error><![CDATA[https://wrapperErrorTwo?errorcode=[ERRORCODE]]]></Error>" +
             "        </Wrapper>" +
             "    </Ad>" +
             "</VAST>" +
             "<MP_TRACKING_URLS>" +
-            "    <MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL>" +
-            "    <MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL>" +
+            "    <MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL>" +
+            "    <MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL>" +
             "</MP_TRACKING_URLS>";
 
     static final String TEST_NESTED_VAST_XML_STRING = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" +
@@ -138,7 +139,7 @@
             "            <AdSystem version='1.0'>Tapad</AdSystem>" +
             "            <AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle>" +
             "            <Description/>" +
-            "            <Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
+            "            <Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
             "            <Creatives>" +
             "                <Creative sequence='1' id='57722'>" +
             "                    <Linear>" +
@@ -170,7 +171,7 @@
             "                        </Icons>" +
             "                        <Duration>00:00:15</Duration>" +
             "                        <VideoClicks>" +
-            "                            <ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough>" +
+            "                            <ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'>" +
@@ -183,21 +184,63 @@
             "                    <CompanionAds>" +
             "                        <Companion id=\"valid\" height=\"250\" width=\"300\">" +
             "                            <StaticResource creativeType=\"image/jpeg\">" +
-            "                                http://demo.tremormedia.com/proddev/vast/Blistex1.jpg" +
+            "                                https://demo.tremormedia.com/proddev/vast/Blistex1.jpg" +
             "                            </StaticResource>" +
             "                            <TrackingEvents>" +
-            "                                <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                            </TrackingEvents>" +
-            "                            <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
-            "                            <CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking>" +
-            "                            <CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking>" +
+            "                            <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
+            "                            <CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking>" +
+            "                            <CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking>" +
+            "                        </Companion>" +
+            "                        <Companion id=\"valid\" height=\"10000\" width=\"10000\">" +
+            "                            <HTMLResource>" +
+            "                                <![CDATA[" +
+            "                                    <link rel=\"stylesheet\" href=\"https://ton.twimg.com/exchange-media/staging/video_companions_style-29c86cb8e4193a6c4da8.css\">" +
+            "                                    <div class=\"tweet_wrapper\">" +
+            "                                    <div class=\"tweet\">" +
+            "                                    <img class=\"icon\" src=\"https://pbs.twimg.com/profile_images/641346383606235136/XLhN-zvk_reasonably_small.jpg\"/>" +
+            "                                    <span class=\"title\">Frappuccino</span>" +
+            "                                    <span id=\"tweet_text\" class=\"tweet-text\">" +
+            "                                    " +
+            "                                    The best use of your Frappuccino cup is to hold your Frappuccino. The second best is to hold your terrarium. \uD83C\uDF35☀️" +
+            "                                    </span>" +
+            "                                    </div>" +
+            "                                    </div>" +
+            "                                ]]>" +
+            "                            </HTMLResource>" +
+            "                            <TrackingEvents>" +
+            "                                <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                            </TrackingEvents>" +
+            "                            <CompanionClickThrough>https://frappucinoCompanion.com</CompanionClickThrough>" +
+            "                        </Companion>" +
+            "                        <Companion height=\"30\" width=\"65\" adSlotID=\"adsBy\">" +
+            "                            <HTMLResource>" +
+            "                                <![CDATA[" +
+            "                                    <link rel=\"stylesheet\" href=\"https://ton.twimg.com/exchange-media/staging/video_companions_style-29c86cb8e4193a6c4da8.css\">" +
+            "                                    <div class=\"ads-by-twitter\">" +
+            "                                    Ads by <div class=\"larry\"></div>" +
+            "                                    </div>" +
+            "                                ]]>" +
+            "                            </HTMLResource>" +
+            "                        </Companion>" +
+            "                        <Companion height=\"22\" width=\"130\" adSlotID=\"socialActions\">" +
+            "                            <HTMLResource>" +
+            "                                <![CDATA[" +
+            "                                    <link rel=\"stylesheet\" href=\"https://ton.twimg.com/exchange-media/staging/video_companions_style-29c86cb8e4193a6c4da8.css\">" +
+            "                                    <div class=\"social-actions\">" +
+            "                                    <a href=\"mopubshare://tweet?screen_name=frappuccino&tweet_id=590877845037056000\" class=\"retweet-button\"><div class=\"icon\"></div>310&nbsp;</a>" +
+            "                                    <a href=\"twitter://intent/favorite?id=590877845037056000\" class=\"like-button\"><div class=\"icon\"></div>1118&nbsp;</a>" +
+            "                                    </div>" +
+            "                                ]]>" +
+            "                            </HTMLResource>" +
             "                        </Companion>" +
             "                    </CompanionAds>" +
             "                </Creative>" +
             "            </Creatives>" +
-            "            <Error><![CDATA[http://nestedInLineErrorOne]]></Error>" +
-            "            <Error><![CDATA[http://nestedInLineErrorTwo]]></Error>" +
+            "            <Error><![CDATA[https://nestedInLineErrorOne]]></Error>" +
+            "            <Error><![CDATA[https://nestedInLineErrorTwo]]></Error>" +
             "        </InLine>" +
             "    </Ad>" +
             "</VAST>";
@@ -209,13 +252,13 @@
             "            <AdSystem version='1.0'>Tapad</AdSystem>" +
             "            <AdTitle><![CDATA[PKW6T_LIV_DSN_Audience_TAPAD_3rd Party Audience Targeting_Action Movi]]></AdTitle>" +
             "            <Description/>" +
-            "            <Impression><![CDATA[http://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
+            "            <Impression><![CDATA[https://rtb-test.dev.tapad.com:8080/creative/imp.png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1]]></Impression>" +
             "            <Creatives>" +
             "                <Creative sequence='1' id='57722'>" +
             "                    <Linear>" +
             "                        <Duration>00:00:15</Duration>" +
             "                        <VideoClicks>" +
-            "                            <ClickThrough><![CDATA[http://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com]]></ClickThrough>" +
+            "                            <ClickThrough><![CDATA[https://rtb-test.dev.tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com]]></ClickThrough>" +
             "                        </VideoClicks>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='800' height='480' type='video/mp4'>" +
@@ -230,7 +273,7 @@
             "                    <MoPubViewabilityTracker" +
             "                            viewablePlaytime=\"3.5\"" +
             "                            percentViewable=\"70%\">" +
-            "                        <![CDATA[http://ad.server.com/impression/dot.png]]>" +
+            "                        <![CDATA[https://ad.server.com/impression/dot.png]]>" +
             "                    </MoPubViewabilityTracker>" +
             "                </Extension>" +
             "            </Extensions>" +
@@ -238,10 +281,10 @@
             "    </Ad>" +
             "</VAST>";
 
-    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>http://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>http://myTrackingURL/wrapper/impression1</Impression><Impression>http://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>http://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>http://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>http://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>http://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>http://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>http://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>http://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>http://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>http://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>http://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>http://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>http://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives><Error>![CDATA[http://badNestedError]]</Error]</Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
+    static final String TEST_VAST_BAD_NEST_URL_XML_STRING = "<VAST version='2.0'><Ad id='62833'><Wrapper><AdSystem>Tapad</AdSystem><VASTAdTagURI>https://dsp.x-team.staging.mopub.com/xml\"$|||</VASTAdTagURI><Impression>https://myTrackingURL/wrapper/impression1</Impression><Impression>https://myTrackingURL/wrapper/impression2</Impression><Creatives><Creative AdID='62833'><Linear><TrackingEvents><Tracking event='creativeView'>https://myTrackingURL/wrapper/creativeView</Tracking><Tracking event='start'>https://myTrackingURL/wrapper/start</Tracking><Tracking event='midpoint'>https://myTrackingURL/wrapper/midpoint</Tracking><Tracking event='firstQuartile'>https://myTrackingURL/wrapper/firstQuartile</Tracking><Tracking event='thirdQuartile'>https://myTrackingURL/wrapper/thirdQuartile</Tracking><Tracking event='complete'>https://myTrackingURL/wrapper/complete</Tracking><Tracking event='mute'>https://myTrackingURL/wrapper/mute</Tracking><Tracking event='unmute'>https://myTrackingURL/wrapper/unmute</Tracking><Tracking event='pause'>https://myTrackingURL/wrapper/pause</Tracking><Tracking event='resume'>https://myTrackingURL/wrapper/resume</Tracking><Tracking event='fullscreen'>https://myTrackingURL/wrapper/fullscreen</Tracking></TrackingEvents><VideoClicks><ClickTracking>https://myTrackingURL/wrapper/click</ClickTracking></VideoClicks></Linear></Creative></Creatives><Error>![CDATA[https://badNestedError]]</Error]</Wrapper></Ad></VAST><MP_TRACKING_URLS><MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL><MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL></MP_TRACKING_URLS>";
 
     static final String TEST_JUST_ERROR_XML_STRING = "<VAST version='3.0'>" +
-            "<Error><![CDATA[http://justErrorTracking?errorcode=[ERRORCODE]]]></Error>" +
+            "<Error><![CDATA[https://justErrorTracking?errorcode=[ERRORCODE]]]></Error>" +
             "</VAST>";
 
     static final String TEST_INVALID_VAST_XML_STRING = "<VAST version='fail'>" +
@@ -253,13 +296,13 @@
     static final String TEST_VAST_WITH_NEGATIVE_SEQUENCE_NUMBER_XML_STRING = "<VAST version='3.0'>" +
             "    <Ad id='sequenceTooHigh' sequence='42'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http:sequenceTooHighImp]]></Impression>" +
+            "            <Impression><![CDATA[https:sequenceTooHighImp]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://sequenceTooHighVideo]]>" +
+            "                                <![CDATA[https://sequenceTooHighVideo]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -269,13 +312,13 @@
             "    </Ad>" +
             "    <Ad id='negativeSequence' sequence='-2'>" +
             "        <InLine>" +
-            "            <Impression><![CDATA[http://negativeSequence]]></Impression>" +
+            "            <Impression><![CDATA[https://negativeSequence]]></Impression>" +
             "            <Creatives>" +
             "                <Creative>" +
             "                    <Linear>" +
             "                        <MediaFiles>" +
             "                            <MediaFile delivery='progressive' bitrate='416' width='300' height='250' type='video/mp4'>" +
-            "                                <![CDATA[http://negativeSequence]]>" +
+            "                                <![CDATA[https://negativeSequence]]>" +
             "                            </MediaFile>" +
             "                        </MediaFiles>" +
             "                    </Linear>" +
@@ -349,7 +392,7 @@ public void doInBackground_shouldFollowMaxRedirectsMinusOne() throws Exception {
 
         assertThat(mVastVideoConfig.getNetworkMediaFileUrl()).isEqualTo("https://s3" +
                 ".amazonaws.com/mopub-vast/tapad-video.mp4");
-        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("http://rtb-test.dev" +
+        assertThat(mVastVideoConfig.getClickThroughUrl()).isEqualTo("https://rtb-test.dev" +
                 ".tapad.com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMj" +
                 "AwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTN" +
                 "BMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxh" +
@@ -358,7 +401,7 @@ public void doInBackground_shouldFollowMaxRedirectsMinusOne() throws Exception {
                 "E2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzM" +
                 "wMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlk" +
                 "PUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3" +
-                "D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad." +
+                "D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad." +
                 "com");
         assertThat(mVastVideoConfig.getImpressionTrackers().size()).isEqualTo(4 *
                 VastXmlManagerAggregator.MAX_TIMES_TO_FOLLOW_VAST_REDIRECT + 1);
@@ -513,7 +556,7 @@ public void getBestMediaFileUrl_withInvalidMediaTypeAndNullMediaType_shouldRetur
     @Test
     public void getBestCompanionAd_shouldReturnCompanionAd() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager = initializeCompanionXmlManagerMock(
-                300, 250, "image_url", "image/jpeg", null, null);
+                300, 250, "image_url", "image/jpeg", null, null, null);
 
         final VastCompanionAdConfig bestCompanionAd =
                 subject.getBestCompanionAd(Arrays.asList(companionXmlManager),
@@ -524,7 +567,7 @@ public void getBestCompanionAd_shouldReturnCompanionAd() throws Exception {
     @Test
     public void getBestCompanionAd_withInvalidVastResource_shouldReturnNull() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager = initializeCompanionXmlManagerMock(
-                300, 250, "image_url", "image/INVALID", null, null);
+                300, 250, "image_url", "image/INVALID", null, null, null);
 
         final VastCompanionAdConfig bestCompanionAd =
                 subject.getBestCompanionAd(Arrays.asList(companionXmlManager),
@@ -535,7 +578,7 @@ public void getBestCompanionAd_withInvalidVastResource_shouldReturnNull() throws
     @Test
     public void getBestCompanionAd_withNullDimension_shouldReturnNull() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager =
-                initializeCompanionXmlManagerMock(null, 250, "image_url", "image/png", null, null);
+                initializeCompanionXmlManagerMock(null, 250, "image_url", "image/png", null, null, null);
 
         final VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager),
@@ -546,7 +589,7 @@ public void getBestCompanionAd_withNullDimension_shouldReturnNull() throws Excep
     @Test
     public void getBestCompanionAd_withWidthTooSmall_shouldReturnNull() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager =
-                initializeCompanionXmlManagerMock(299, 250, "image_url", "image/png", null, null);
+                initializeCompanionXmlManagerMock(299, 250, "image_url", "image/png", null, null, null);
 
         final VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager),
@@ -557,7 +600,7 @@ public void getBestCompanionAd_withWidthTooSmall_shouldReturnNull() throws Excep
     @Test
     public void getBestCompanionAd_withHeightTooSmall_shouldReturnNull() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager =
-                initializeCompanionXmlManagerMock(300, 249, "image_url", "image/png", null, null);
+                initializeCompanionXmlManagerMock(300, 249, "image_url", "image/png", null, null, null);
 
         final VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager),
@@ -574,10 +617,10 @@ public void getBestCompanionAd_withSameAspectRatios_shouldReturnCompanionAdWithA
 
         // Triple screen size
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(2400, 1440, "image_url1", "image/png", null, null);
+                initializeCompanionXmlManagerMock(2400, 1440, "image_url1", "image/png", null, null, null);
         // Double screen size
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(1600, 960, "image_url2", "image/bmp", null, null);
+                initializeCompanionXmlManagerMock(1600, 960, "image_url2", "image/bmp", null, null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager1, companionXmlManager2),
@@ -594,10 +637,10 @@ public void getBestCompanionAd_withSameAspectRatios_shouldReturnCompanionAdWithA
 
         // Triple screen size
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(2400, 1440, "image_url1", "image/png", null, null);
+                initializeCompanionXmlManagerMock(2400, 1440, "image_url1", "image/png", null, null, null);
         // Half screen size
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(400, 250, "image_url2", "image/bmp", null, null);
+                initializeCompanionXmlManagerMock(400, 250, "image_url2", "image/bmp", null, null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager1, companionXmlManager2),
@@ -614,10 +657,10 @@ public void getBestCompanionAd_withSameArea_shouldReturnLandscapeCompanionAdWith
 
         // Landscape
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(400, 250, "image_url1", "image/png", null, null);
+                initializeCompanionXmlManagerMock(400, 250, "image_url1", "image/png", null, null, null);
         // Portrait
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(250, 400, "image_url2", "image/bmp", null, null);
+                initializeCompanionXmlManagerMock(250, 400, "image_url2", "image/bmp", null, null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager1, companionXmlManager2),
@@ -634,10 +677,10 @@ public void getBestCompanionAd_withSameArea_shouldReturnPortraitCompanionAdWithA
 
         // Landscape
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(400, 300, "image_url1", "image/png", null, null);
+                initializeCompanionXmlManagerMock(400, 300, "image_url1", "image/png", null, null, null);
         // Portrait
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(300, 400, "image_url2", "image/bmp", null, null);
+                initializeCompanionXmlManagerMock(300, 400, "image_url2", "image/bmp", null, null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager1, companionXmlManager2),
@@ -650,13 +693,13 @@ public void getBestCompanionAd_withAllThreeResourceTypes_shouldReturnStaticResou
         // Static Resource
         final VastCompanionAdXmlManager companionXmlManager1 =
                 initializeCompanionXmlManagerMock(400, 250, "StaticResource", "image/png", null,
-                        null);
+                        null, null);
         // HTML Resource
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(250, 400, null, null, null, "HTMLResource");
+                initializeCompanionXmlManagerMock(250, 400, null, null, null, "HTMLResource", null);
         // IFrame Resource
         final VastCompanionAdXmlManager companionXmlManager3 =
-                initializeCompanionXmlManagerMock(250, 400, null, null, "IFrameResource", null);
+                initializeCompanionXmlManagerMock(250, 400, null, null, "IFrameResource", null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager3, companionXmlManager2, companionXmlManager1),
@@ -668,10 +711,10 @@ public void getBestCompanionAd_withAllThreeResourceTypes_shouldReturnStaticResou
     public void getBestCompanionAd_withHTMLAndStaticResourceTypes_shouldReturnStaticResourceType() throws Exception {
         // Static Resource
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(400, 250, "StaticResource", "image/png", null, null);
+                initializeCompanionXmlManagerMock(400, 250, "StaticResource", "image/png", null, null, null);
         // HTML Resource
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(250, 400, null, null, null, "HTMLResource");
+                initializeCompanionXmlManagerMock(250, 400, null, null, null, "HTMLResource", null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager2, companionXmlManager1),
@@ -683,9 +726,9 @@ public void getBestCompanionAd_withHTMLAndStaticResourceTypes_shouldReturnStatic
     public void getBestCompanionAd_withInvalidStaticResource_withValidHtmlResource_shouldReturnHtmlResource() throws Exception {
         final VastCompanionAdXmlManager companionXmlManager1 =
                 initializeCompanionXmlManagerMock(400, 250, "StaticResource", "INVALID",
-                        "IFrameResource", null);
+                        "IFrameResource", null, null);
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(300, 400, null, null, null, "HTMLResource");
+                initializeCompanionXmlManagerMock(300, 400, null, null, null, "HTMLResource", null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager2, companionXmlManager1),
@@ -703,9 +746,9 @@ public void getBestCompanionAd_withCompanionAdTooSmall_shouldReturnCompanionAdWi
         // 305 x 305 is both fewer pixels (screen area) and a worse aspect ratio. It still should be
         // chosen because 240 is not wide enough to be considered for a companion ad
         final VastCompanionAdXmlManager companionXmlManager1 =
-                initializeCompanionXmlManagerMock(305, 305, "image_url1", "image/png", null, null);
+                initializeCompanionXmlManagerMock(305, 305, "image_url1", "image/png", null, null, null);
         final VastCompanionAdXmlManager companionXmlManager2 =
-                initializeCompanionXmlManagerMock(240, 400, "image_url2", "image/bmp", null, null);
+                initializeCompanionXmlManagerMock(240, 400, "image_url2", "image/bmp", null, null, null);
 
         VastCompanionAdConfig bestCompanionAd = subject.getBestCompanionAd(
                 Arrays.asList(companionXmlManager1, companionXmlManager2),
@@ -714,73 +757,493 @@ public void getBestCompanionAd_withCompanionAdTooSmall_shouldReturnCompanionAdWi
     }
 
     @Test
-    public void getScaledDimensions_withWidthLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+    public void getSocialActionsCompanionAds_shouldReturnSocialActionsCompanionAds() throws Exception {
+        final VastCompanionAdXmlManager adsByXmlManager =
+                initializeCompanionXmlManagerMock(65, 20, null, "HTMLResource", null,
+                        "<p>Ads by</p>", "adsBy");
+        final VastCompanionAdXmlManager socialActionsXmlManager =
+                initializeCompanionXmlManagerMock(130, 30, null, "HTMLResource", null,
+                        "<p>Retweet Like</p>", "socialActions");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                subject.getSocialActionsCompanionAds(
+                        Arrays.asList(adsByXmlManager, socialActionsXmlManager));
+        final VastCompanionAdConfig adsByVastConfig = socialActionsCompanionAds.get("adsBy");
+        final VastCompanionAdConfig socialActionsVastConfig = socialActionsCompanionAds
+                .get("socialActions");
+
+        assertThat(adsByVastConfig.getWidth()).isEqualTo(65);
+        assertThat(adsByVastConfig.getHeight()).isEqualTo(20);
+        assertThat(adsByVastConfig.getVastResource().getResource()).isEqualTo("<p>Ads by</p>");
+        assertThat(socialActionsVastConfig.getWidth()).isEqualTo(130);
+        assertThat(socialActionsVastConfig.getHeight()).isEqualTo(30);
+        assertThat(socialActionsVastConfig.getVastResource().getResource())
+                .isEqualTo("<p>Retweet Like</p>");
+    }
+
+    @Test
+    public void getSocialActionsCompanionAds_withoutSocialActions_shouldNotReturnSocialActionsCompanionAds() throws Exception {
+        final VastCompanionAdXmlManager adsByXmlManager =
+                initializeCompanionXmlManagerMock(65, 20, null, "HTMLResource", null,
+                        "<p>Ads by</p>", "NOTadsBy");
+        final VastCompanionAdXmlManager socialActionsXmlManager =
+                initializeCompanionXmlManagerMock(130, 30, null, "HTMLResource", null,
+                        "<p>Retweet Like</p>", "NOTsocialActions");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                subject.getSocialActionsCompanionAds(
+                        Arrays.asList(adsByXmlManager, socialActionsXmlManager));
+
+        assertThat(socialActionsCompanionAds.size()).isEqualTo(0);
+    }
+
+    @Test
+    public void getSocialActionsCompanionAds_withoutHTMLResource_shouldNotReturnSocialActionsCompanionAds() throws Exception {
+        final VastCompanionAdXmlManager adsByXmlManager =
+                initializeCompanionXmlManagerMock(65, 20, null, "HTMLResource", null, null,
+                        "adsBy");
+        final VastCompanionAdXmlManager socialActionsXmlManager =
+                initializeCompanionXmlManagerMock(130, 30, null, "HTMLResource", null,
+                        null, "socialActions");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                subject.getSocialActionsCompanionAds(
+                        Arrays.asList(adsByXmlManager, socialActionsXmlManager));
+        final VastCompanionAdConfig adsByVastConfig = socialActionsCompanionAds.get("adsBy");
+        final VastCompanionAdConfig socialActionsVastConfig = socialActionsCompanionAds
+                .get("socialActions");
+
+        assertThat(socialActionsCompanionAds.size()).isEqualTo(0);
+    }
+
+    @Test
+    public void getSocialActionsCompanionAds_whenTooWide_shouldNotReturnSocialActionsCompanionAds() throws Exception {
+        final VastCompanionAdXmlManager adsByXmlManager =
+                initializeCompanionXmlManagerMock(76, 20, null, "HTMLResource", null,
+                        "<p>Ads by</p>", "adsBy");
+        final VastCompanionAdXmlManager socialActionsXmlManager =
+                initializeCompanionXmlManagerMock(151, 30, null, "HTMLResource", null,
+                        "<p>Retweet Like</p>", "socialActions");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                subject.getSocialActionsCompanionAds(
+                        Arrays.asList(adsByXmlManager, socialActionsXmlManager));
+
+        assertThat(socialActionsCompanionAds.size()).isEqualTo(0);
+    }
+
+    @Test
+    public void getSocialActionsCompanionAds_whenTooTall_shouldNotReturnSocialActionsCompanionAds() throws Exception {
+        final VastCompanionAdXmlManager adsByXmlManager =
+                initializeCompanionXmlManagerMock(65, 51, null, "HTMLResource", null,
+                        "<p>Ads by</p>", "adsBy");
+        final VastCompanionAdXmlManager socialActionsXmlManager =
+                initializeCompanionXmlManagerMock(130, 51, null, "HTMLResource", null,
+                        "<p>Retweet Like</p>", "socialActions");
+
+        final Map<String, VastCompanionAdConfig> socialActionsCompanionAds =
+                subject.getSocialActionsCompanionAds(
+                        Arrays.asList(adsByXmlManager, socialActionsXmlManager));
+
+        assertThat(socialActionsCompanionAds.size()).isEqualTo(0);
+    }
+
+    @Test
+    public void evaluateVastXmlManager_withSocialActions_shouldKeepSocialActionsFromInLineAndNotOverwriteFromWrapper() throws Exception {
+        ShadowMoPubHttpUrlConnection.addPendingResponse(200, TEST_NESTED_VAST_XML_STRING);
+        VastVideoConfig vastVideoConfig = subject.evaluateVastXmlManager(
+                TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
+
+        VastCompanionAdConfig adsByCompanionAd = vastVideoConfig.getSocialActionsCompanionAds()
+                .get(VastXmlManagerAggregator.ADS_BY_AD_SLOT_ID);
+        assertThat(adsByCompanionAd.getVastResource().getType())
+                .isEqualTo(VastResource.Type.HTML_RESOURCE);
+        assertThat(adsByCompanionAd.getVastResource().getResource().trim())
+                .isEqualTo(
+                        "<link rel=\"stylesheet\" href=\"https://ton.twimg.com/exchange-media/staging/video_companions_style-29c86cb8e4193a6c4da8.css\">" +
+                                "                                    <div class=\"ads-by-twitter\">" +
+                                "                                    Ads by <div class=\"larry\"></div>" +
+                                "                                    </div>");
+        VastCompanionAdConfig socialActionsCompanionAd = vastVideoConfig
+                .getSocialActionsCompanionAds()
+                .get(VastXmlManagerAggregator.SOCIAL_ACTIONS_AD_SLOT_ID);
+        assertThat(socialActionsCompanionAd.getVastResource()
+                .getType()).isEqualTo(VastResource.Type.HTML_RESOURCE);
+        assertThat(socialActionsCompanionAd.getVastResource().getResource().trim())
+        .isEqualTo("<link rel=\"stylesheet\" href=\"https://ton.twimg.com/exchange-media/staging/video_companions_style-29c86cb8e4193a6c4da8.css\">" +
+                "                                    <div class=\"social-actions\">" +
+                "                                    <a href=\"mopubshare://tweet?screen_name=frappuccino&tweet_id=590877845037056000\" class=\"retweet-button\"><div class=\"icon\"></div>310&nbsp;</a>" +
+                "                                    <a href=\"twitter://intent/favorite?id=590877845037056000\" class=\"like-button\"><div class=\"icon\"></div>1118&nbsp;</a>" +
+                "                                    </div>");
+    }
+
+    @Test
+    public void
+    getScaledDimensions_withStaticResource_withWidthLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
         // Default screen width is 480, height is 800
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         assertThat(display.getWidth()).isEqualTo(480);
         assertThat(display.getHeight()).isEqualTo(800);
 
         // Width and height are evaluated in landscape
-        Point point = subject.getScaledDimensions(1600, 400);
+        Point landscapePoint = subject.getScaledDimensions(1600, 400,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
 
-        assertThat(point.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
-        assertThat(point.y).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(960, 600,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(300 - VastVideoViewController.WEBVIEW_PADDING);
     }
 
     @Test
-    public void getScaledDimensions_withHeightLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+    public void getScaledDimensions_withStaticResource_withHeightLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
         // Default screen width is 480, height is 800
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         assertThat(display.getWidth()).isEqualTo(480);
         assertThat(display.getHeight()).isEqualTo(800);
 
         // Width and height are evaluated in landscape
-        Point point = subject.getScaledDimensions(400, 960);
+        Point landscapePoint = subject.getScaledDimensions(400, 960,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
 
-        assertThat(point.x).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
-        assertThat(point.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(400, 1600,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
     }
 
     @Test
-    public void getScaledDimensions_withWidthAndHeightSmallerThanScreen_shouldNotScaleWidthAndHeight() throws Exception {
+    public void getScaledDimensions_withStaticResource_withWidthAndHeightEqualToScreen_shouldNotScaleWidthAndHeight() throws Exception {
         // Default screen width is 480, height is 800
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         assertThat(display.getWidth()).isEqualTo(480);
         assertThat(display.getHeight()).isEqualTo(800);
 
         // Width and height are evaluated in landscape
-        Point point = subject.getScaledDimensions(800, 480);
+        Point landscapePoint = subject.getScaledDimensions(
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
 
-        assertThat(point.x).isEqualTo(800);
-        assertThat(point.y).isEqualTo(480);
+    @Test
+    public void getScaledDimensions_withStaticResource_withWidthAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(
+                Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(1600);
+        assertThat(landscapePoint.y).isEqualTo(2);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(1600);
+        assertThat(portraitPoint.y).isEqualTo(2);
     }
 
     @Test
-    public void getScaledDimensions_withWidthAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+    public void getScaledDimensions_withStaticResource_withHeightAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
         // Default screen width is 480, height is 800
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         assertThat(display.getWidth()).isEqualTo(480);
         assertThat(display.getHeight()).isEqualTo(800);
 
         // Width and height are evaluated in landscape
-        Point point = subject.getScaledDimensions(1600, 2);
+        Point landscapePoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(2);
+        assertThat(landscapePoint.y).isEqualTo(960);
 
-        assertThat(point.x).isEqualTo(1600);
-        assertThat(point.y).isEqualTo(2);
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.STATIC_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(2);
+        assertThat(portraitPoint.y).isEqualTo(960);
     }
 
     @Test
-    public void getScaledDimensions_withHeightAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+    public void getScaledDimensions_withHTMLResource_withWidthLargerThanScreen_shouldScaleWidthAndHeight()
+            throws Exception {
         // Default screen width is 480, height is 800
         final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         assertThat(display.getWidth()).isEqualTo(480);
         assertThat(display.getHeight()).isEqualTo(800);
 
         // Width and height are evaluated in landscape
-        Point point = subject.getScaledDimensions(2, 960);
+        Point landscapePoint = subject.getScaledDimensions(1600, 400,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(400 - VastVideoViewController.WEBVIEW_PADDING);
 
-        assertThat(point.x).isEqualTo(2);
-        assertThat(point.y).isEqualTo(960);
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(960, 600,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(600 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withHTMLResource_withHeightLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(400, 960,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(400 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(400, 1600,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(400 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withHTMLResource_withWidthAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(
+                Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(1600);
+        assertThat(landscapePoint.y).isEqualTo(2);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(1600);
+        assertThat(portraitPoint.y).isEqualTo(2);
+    }
+
+    @Test
+    public void getScaledDimensions_withHTMLResource_withHeightAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(2);
+        assertThat(landscapePoint.y).isEqualTo(960);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(2);
+        assertThat(portraitPoint.y).isEqualTo(960);
+    }
+
+    @Test
+    public void getScaledDimensions_withHTMLResource_withWidthAndHeightEqualToScreen_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withHTMLResource_withWidthAndHeightLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(5000, 5000,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(1337, 4200,
+                VastResource.Type.HTML_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withIFrameResource_withWidthLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(1600, 400,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(960, 600,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(300 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withIFrameResource_withHeightLargerThanScreen_shouldScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(400, 960,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(400, 1600,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(200 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withIFrameResource_withWidthAndHeightEqualToScreen_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(landscapePoint.y).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(
+                480 - VastVideoViewController.WEBVIEW_PADDING,
+                800 - VastVideoViewController.WEBVIEW_PADDING,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(480 - VastVideoViewController.WEBVIEW_PADDING);
+        assertThat(portraitPoint.y).isEqualTo(800 - VastVideoViewController.WEBVIEW_PADDING);
+    }
+
+    @Test
+    public void getScaledDimensions_withIFrameResource_withWidthAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(
+                Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(1600);
+        assertThat(landscapePoint.y).isEqualTo(2);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(1600, 2,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(1600);
+        assertThat(portraitPoint.y).isEqualTo(2);
+    }
+
+    @Test
+    public void getScaledDimensions_withIFrameResource_withHeightAdjustedToLessThanZero_shouldNotScaleWidthAndHeight() throws Exception {
+        // Default screen width is 480, height is 800
+        final Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+        assertThat(display.getWidth()).isEqualTo(480);
+        assertThat(display.getHeight()).isEqualTo(800);
+
+        // Width and height are evaluated in landscape
+        Point landscapePoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.LANDSCAPE);
+        assertThat(landscapePoint.x).isEqualTo(2);
+        assertThat(landscapePoint.y).isEqualTo(960);
+
+        // Width and height are evaluated in portrait
+        Point portraitPoint = subject.getScaledDimensions(2, 960,
+                VastResource.Type.IFRAME_RESOURCE,
+                VastXmlManagerAggregator.CompanionOrientation.PORTRAIT);
+        assertThat(portraitPoint.x).isEqualTo(2);
+        assertThat(portraitPoint.y).isEqualTo(960);
     }
 
     @Test
@@ -939,7 +1402,7 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
                 TEST_NESTED_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
-                .containsOnly("http://rtb-test.dev.tapad.com:8080/creative/imp" +
+                .containsOnly("https://rtb-test.dev.tapad.com:8080/creative/imp" +
                         ".png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp&ta_pinfo" +
                         "=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1");
         assertThat(vastVideoConfig.getFractionalTrackers()).isEmpty();
@@ -951,13 +1414,13 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
         assertThat(vastVideoConfig.getSkipTrackers()).isEmpty();
         assertThat(vastVideoConfig.getClickTrackers()).isEmpty();
         assertThat(vastVideoConfig.getClickThroughUrl()).isEqualTo(
-                "http://rtb-test.dev.tapad" +
-                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+                "https://rtb-test.dev.tapad" +
+                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
                 "https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
         assertThat(vastVideoConfig.getSkipOffsetString()).isNull();
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getErrorTrackers()))
-                .containsOnly("http://nestedInLineErrorOne", "http://nestedInLineErrorTwo");
+                .containsOnly("https://nestedInLineErrorOne", "https://nestedInLineErrorTwo");
 
         VastCompanionAdConfig[] companionAds = new VastCompanionAdConfig[2];
         companionAds[0] = vastVideoConfig.getVastCompanionAd(
@@ -968,18 +1431,18 @@ public void evaluateVastXmlManager_withStandardInline_shouldReturnValidVastVideo
             assertThat(companionAd.getWidth()).isEqualTo(300);
             assertThat(companionAd.getHeight()).isEqualTo(250);
             assertThat(companionAd.getVastResource().getResource())
-                    .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                    .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
             assertThat(companionAd.getVastResource().getType())
                     .isEqualTo(VastResource.Type.STATIC_RESOURCE);
             assertThat(companionAd.getVastResource().getCreativeType())
                     .isEqualTo(VastResource.CreativeType.IMAGE);
-            assertThat(companionAd.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+            assertThat(companionAd.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://companionClickTracking1",
-                            "http://companionClickTracking2");
+                    .containsOnly("https://companionClickTracking1",
+                            "https://companionClickTracking2");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://myTrackingURL/firstCompanionCreativeView",
-                            "http://myTrackingURL/secondCompanionCreativeView");
+                    .containsExactly("https://myTrackingURL/firstCompanionCreativeView",
+                            "https://myTrackingURL/secondCompanionCreativeView");
         }
 
         VastIconConfig vastIconConfig = vastVideoConfig.getVastIconConfig();
@@ -1005,57 +1468,57 @@ public void evaluateVastXmlManager_withAWrapperToAnInline_shouldReturnValidVastV
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
                 .containsOnly(
-                        "http://rtb-test.dev.tapad.com:8080/creative/imp" +
+                        "https://rtb-test.dev.tapad.com:8080/creative/imp" +
                                 ".png?ts=1374099035457&svid=1&creative_id=30731&ctx_type=InApp" +
                                 "&ta_pinfo" +
                                 "=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&liverail_cp=1",
-                        "http://myTrackingURL/wrapper/impression1",
-                        "http://myTrackingURL/wrapper/impression2",
-                        "http://www.mopub.com/imp1",
-                        "http://www.mopub.com/imp2");
+                        "https://myTrackingURL/wrapper/impression1",
+                        "https://myTrackingURL/wrapper/impression2",
+                        "https://www.mopub.com/imp1",
+                        "https://www.mopub.com/imp2");
 
         assertThat(vastVideoConfig.getFractionalTrackers()).hasSize(3);
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(0)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/firstQuartile",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/firstQuartile",
                         0.25f));
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(1)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/midpoint",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/midpoint",
                         0.5f));
         assertThat(
                 vastVideoConfig.getFractionalTrackers().get(2)).isEqualsToByComparingFields(
-                new VastFractionalProgressTracker("http://myTrackingURL/wrapper/thirdQuartile",
+                new VastFractionalProgressTracker("https://myTrackingURL/wrapper/thirdQuartile",
                         0.75f));
 
         assertThat(vastVideoConfig.getAbsoluteTrackers().size()).isEqualTo(2);
         assertThat(vastVideoConfig.getAbsoluteTrackers().get(0)).isEqualsToByComparingFields(
-                new VastAbsoluteProgressTracker("http://myTrackingURL/wrapper/creativeView", 0));
+                new VastAbsoluteProgressTracker("https://myTrackingURL/wrapper/creativeView", 0));
         assertThat(vastVideoConfig.getAbsoluteTrackers().get(1)).isEqualsToByComparingFields(
-                new VastAbsoluteProgressTracker("http://myTrackingURL/wrapper/start", 2000));
+                new VastAbsoluteProgressTracker("https://myTrackingURL/wrapper/start", 2000));
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getPauseTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/pause");
+                .containsOnly("https://myTrackingURL/wrapper/pause");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getResumeTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/resume");
+                .containsOnly("https://myTrackingURL/wrapper/resume");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getCompleteTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/complete");
+                .containsOnly("https://myTrackingURL/wrapper/complete");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getErrorTrackers()))
                 .containsExactly(
-                        "http://wrapperErrorOne?errorcode=[ERRORCODE]",
-                        "http://wrapperErrorTwo?errorcode=[ERRORCODE]",
-                        "http://nestedInLineErrorOne",
-                        "http://nestedInLineErrorTwo");
+                        "https://wrapperErrorOne?errorcode=[ERRORCODE]",
+                        "https://wrapperErrorTwo?errorcode=[ERRORCODE]",
+                        "https://nestedInLineErrorOne",
+                        "https://nestedInLineErrorTwo");
 
         assertThat(vastVideoConfig.getCloseTrackers()).isEmpty();
         assertThat(vastVideoConfig.getSkipTrackers()).isEmpty();
 
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getClickTrackers()))
-                .containsOnly("http://myTrackingURL/wrapper/click");
+                .containsOnly("https://myTrackingURL/wrapper/click");
 
         assertThat(vastVideoConfig.getClickThroughUrl()).isEqualTo(
-                "http://rtb-test.dev.tapad" +
-                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=http%3A%2F%2Ftapad.com");
+                "https://rtb-test.dev.tapad" +
+                        ".com:8080/click?ta_pinfo=JnRhX2JpZD1iNDczNTQwMS1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmaXA9OTguMTE2LjEyLjk0JnNzcD1MSVZFUkFJTCZ0YV9iaWRkZXJfaWQ9NTEzJTNBMzA1NSZjdHg9MTMzMSZ0YV9jYW1wYWlnbl9pZD01MTMmZGM9MTAwMjAwMzAyOSZ1YT1Nb3ppbGxhJTJGNS4wKyUyOE1hY2ludG9zaCUzQitJbnRlbCtNYWMrT1MrWCsxMF84XzMlMjkrQXBwbGVXZWJLaXQlMkY1MzcuMzYrJTI4S0hUTUwlMkMrbGlrZStHZWNrbyUyOStDaHJvbWUlMkYyNy4wLjE0NTMuMTE2K1NhZmFyaSUyRjUzNy4zNiZjcHQ9VkFTVCZkaWQ9ZDgyNWZjZDZlNzM0YTQ3ZTE0NWM4ZTkyNzMwMjYwNDY3YjY1NjllMSZpZD1iNDczNTQwMC1lZjJkLTExZTItYTNkNS0yMjAwMGE4YzEwOWQmcGlkPUNPTVBVVEVSJnN2aWQ9MSZicD0zNS4wMCZjdHhfdHlwZT1BJnRpZD0zMDU1JmNyaWQ9MzA3MzE%3D&crid=30731&ta_action_id=click&ts=1374099035458&redirect=https%3A%2F%2Ftapad.com");
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
                 "https://s3.amazonaws.com/mopub-vast/tapad-video.mp4");
         assertThat(vastVideoConfig.getSkipOffsetString()).isNull();
@@ -1069,21 +1532,21 @@ public void evaluateVastXmlManager_withAWrapperToAnInline_shouldReturnValidVastV
             assertThat(companionAd.getWidth()).isEqualTo(300);
             assertThat(companionAd.getHeight()).isEqualTo(250);
             assertThat(companionAd.getVastResource().getResource())
-                    .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
+                    .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.jpg");
             assertThat(companionAd.getVastResource().getType())
                     .isEqualTo(VastResource.Type.STATIC_RESOURCE);
             assertThat(companionAd.getVastResource().getCreativeType())
                     .isEqualTo(VastResource.CreativeType.IMAGE);
-            assertThat(companionAd.getClickThroughUrl()).isEqualTo("http://www.tremormedia.com");
+            assertThat(companionAd.getClickThroughUrl()).isEqualTo("https://www.tremormedia.com");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://companionClickTracking1",
-                            "http://companionClickTracking2",
-                            "http://noResourceWrapperCompanionClickTracking1");
+                    .containsOnly("https://companionClickTracking1",
+                            "https://companionClickTracking2",
+                            "https://noResourceWrapperCompanionClickTracking1");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://myTrackingURL/firstCompanionCreativeView",
-                            "http://myTrackingURL/secondCompanionCreativeView",
-                            "http://firstNoResourceWrapperCompanionCreativeView",
-                            "http://secondNoResourceWrapperCompanionCreativeView");
+                    .containsExactly("https://myTrackingURL/firstCompanionCreativeView",
+                            "https://myTrackingURL/secondCompanionCreativeView",
+                            "https://firstNoResourceWrapperCompanionCreativeView",
+                            "https://secondNoResourceWrapperCompanionCreativeView");
         }
 
         VastIconConfig vastIconConfig = vastVideoConfig.getVastIconConfig();
@@ -1125,15 +1588,15 @@ public void evaluateVastXmlManager_withRedirectHavingNoCompanionAd_shouldReturnV
         for (VastCompanionAdConfig companionAd : companionAds) {
             assertThat(companionAd.getWidth()).isEqualTo(456);
             assertThat(companionAd.getHeight()).isEqualTo(250);
-            assertThat(companionAd.getVastResource().getResource()).isEqualTo("http" +
+            assertThat(companionAd.getVastResource().getResource()).isEqualTo("https" +
                     "://wrapperCompanionAdStaticResource");
             assertThat(companionAd.getClickThroughUrl()).isEqualTo(
-                    "http://wrapperCompanionClickThrough");
+                    "https://wrapperCompanionClickThrough");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getClickTrackers()))
-                    .containsOnly("http://wrapperCompanionClickTracking");
+                    .containsOnly("https://wrapperCompanionClickTracking");
             assertThat(VastUtils.vastTrackersToStrings(companionAd.getCreativeViewTrackers()))
-                    .containsExactly("http://firstWrapperCompanionCreativeView",
-                            "http://secondWrapperCompanionCreativeView");
+                    .containsExactly("https://firstWrapperCompanionCreativeView",
+                            "https://secondWrapperCompanionCreativeView");
         }
     }
 
@@ -1144,9 +1607,9 @@ public void evaluateVastXmlManager_withSequenceNumbers_shouldReturnVastVideoConf
                 new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig.getNetworkMediaFileUrl()).isEqualTo(
-                "http://negativeSequence");
+                "https://negativeSequence");
         assertThat(VastUtils.vastTrackersToStrings(vastVideoConfig.getImpressionTrackers()))
-                .containsOnly("http://negativeSequence");
+                .containsOnly("https://negativeSequence");
     }
 
     @Test
@@ -1157,7 +1620,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerInLine_shouldRetur
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(70);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(3500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.png");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.png");
     }
 
     @Test
@@ -1169,7 +1632,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerInWrapper_shouldRe
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(50);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(2500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.gif");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
@@ -1182,7 +1645,7 @@ public void evaluateVastXmlManager_withVideoViewabilityTrackerBothInWrapperAndIn
         VideoViewabilityTracker tracker = vastVideoConfig.getVideoViewabilityTracker();
         assertThat(tracker.getPercentViewable()).isEqualTo(70);
         assertThat(tracker.getViewablePlaytimeMS()).isEqualTo(3500);
-        assertThat(tracker.getTrackingUrl()).isEqualTo("http://ad.server.com/impression/dot.png");
+        assertThat(tracker.getTrackingUrl()).isEqualTo("https://ad.server.com/impression/dot.png");
     }
 
     @Test
@@ -1232,7 +1695,7 @@ public void evaluateVastXmlManager_withJustError_shouldReturnNullVastVideoConfig
                 new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://justErrorTracking?errorcode=900")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://justErrorTracking?errorcode=900")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1243,7 +1706,7 @@ public void evaluateVastXmlManager_withWrapperToJustError_shouldReturnNullVastVi
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://justErrorTracking?errorcode=303")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://justErrorTracking?errorcode=303")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1264,8 +1727,8 @@ public void evaluateVastXmlManager_withWrapperToInvalidXml_shouldReturnNullVastV
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorOne?errorcode=100")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorTwo?errorcode=100")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorOne?errorcode=100")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorTwo?errorcode=100")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1275,8 +1738,8 @@ public void evaluateVastXmlManager_withWrapperToNoHttpResponse_shouldReturnNullV
                 TEST_VAST_XML_STRING, new ArrayList<VastTracker>());
 
         assertThat(vastVideoConfig).isNull();
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorOne?errorcode=301")));
-        verify(mockRequestQueue).add(argThat(isUrl("http://wrapperErrorTwo?errorcode=301")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorOne?errorcode=301")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://wrapperErrorTwo?errorcode=301")));
         verifyNoMoreInteractions(mockRequestQueue);
     }
 
@@ -1299,10 +1762,12 @@ private VastCompanionAdXmlManager initializeCompanionXmlManagerMock(
             final String staticResource,
             final String staticResourceType,
             final String iFrameResource,
-            final String htmlResource) {
+            final String htmlResource,
+            final String adSlotId) {
         VastCompanionAdXmlManager companionXmlManager = mock(VastCompanionAdXmlManager.class);
         when(companionXmlManager.getWidth()).thenReturn(width);
         when(companionXmlManager.getHeight()).thenReturn(height);
+        when(companionXmlManager.getAdSlotId()).thenReturn(adSlotId);
 
         VastResourceXmlManager mockResourceXmlManager = initializeVastResourceXmlManagerMock(
                 staticResource,
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
index 798d13e9..3f2a1ddd 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VastXmlManagerTest.java
@@ -21,7 +21,7 @@
 @Config(constants = BuildConfig.class)
 public class VastXmlManagerTest {
     private static final String XML_HEADER_TAG = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";
-    private static final String TEST_VAST_XML_STRING = "<VAST xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
+    private static final String TEST_VAST_XML_STRING = "<VAST xmlns:xsi=\"https://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
             "            <Ad id=\"223626102\">" +
             "                <InLine>" +
             "                    <AdSystem version=\"2.0\">DART_DFA</AdSystem>" +
@@ -30,12 +30,12 @@
             "                    <Survey/>" +
             "                    <Impression id=\"DART\">" +
             "                        <![CDATA[" +
-            "                        http://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn.net/dot.gif" +
+            "                        https://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn.net/dot.gif" +
             "                        ]]>" +
             "                    </Impression>" +
             "                    <Impression id=\"ThirdParty\">" +
             "                        <![CDATA[" +
-            "                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?" +
+            "                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?" +
             "                        ]]>" +
             "                    </Impression>" +
             "                    <Creatives>" +
@@ -45,137 +45,137 @@
             "                                <TrackingEvents>" +
             "                                    <Tracking event=\"start\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"progress\" offset=\"13%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"progress\" offset=\"01:01:10.300\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to ambiguous offset.
             "                                    <Tracking event=\"progress\" offset=\"01:01\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a too-high percentage offset.
             "                                    <Tracking event=\"progress\" offset=\"113%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a negative percentage offset.
             "                                    <Tracking event=\"progress\" offset=\"-113%\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             // Invalid tracking due to a non-number offset
             "                                    <Tracking event=\"progress\" offset=\"ten seconds\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"midpoint\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"midpoint\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"firstQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"firstQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"thirdQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"thirdQuartile\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"complete\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=13;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"complete\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"close\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/close?q=ignatius" +
+            "                                        https://www.mopub.com/close?q=ignatius" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"close\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/close?q=j3" +
+            "                                        https://www.mopub.com/close?q=j3" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"skip\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/skip?q=ignatius" +
+            "                                        https://www.mopub.com/skip?q=ignatius" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"skip\">" +
             "                                        <![CDATA[" +
-            "                                        http://www.mopub.com/skip?q=j3" +
+            "                                        https://www.mopub.com/skip?q=j3" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"mute\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=16;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"pause\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=15;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=15;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"fullscreen\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
+            "                                        https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=19;ecn1=1;etm1=0;" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                    <Tracking event=\"fullscreen\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
+            "                                        https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.6;sz=1x1;ord=2922389?" +
             "                                        ]]>" +
             "                                    </Tracking>" +
             "                                </TrackingEvents>" +
             "                                <AdParameters/>" +
             "                                <VideoClicks>" +
             "                                    <ClickThrough>" +
-            "                                        <![CDATA[ http://www.google.com/support/richmedia ]]>" +
+            "                                        <![CDATA[ https://www.google.com/support/richmedia ]]>" +
             "                                    </ClickThrough>" +
             "                                    <ClickTracking id=\"DART\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
+            "                                        https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif" +
             "                                        ]]>" +
             "                                    </ClickTracking>" +
             "                                    <ClickTracking id=\"ThirdParty\">" +
             "                                        <![CDATA[" +
-            "                                        http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia" +
+            "                                        https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia" +
             "                                        ]]>" +
             "                                    </ClickTracking>" +
             "                                </VideoClicks>" +
@@ -183,7 +183,7 @@
             "                                    <MediaFile id=\"1\" delivery=\"progressive\" type=\"video/quicktime\" bitrate=\"457\"" +
             "                                               width=\"300\" height=\"225\">" +
             "                                        <![CDATA[" +
-            "                                        http://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
+            "                                        https://s3.amazonaws.com/uploads.hipchat.com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4" +
             "                                        ]]>" +
             "                                    </MediaFile>" +
             "                                </MediaFiles>" +
@@ -218,92 +218,92 @@
             "                        <Creative AdID=\"601364-Companion\">" +
             "                            <CompanionAds>" +
             "                               <Companion height=\"90\" width=\"728\">" +
-            "                                   <StaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg</StaticResource>" +
-            "                                   <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
+            "                                   <StaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg</StaticResource>" +
+            "                                   <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
             "                                   <BADTrackingEvents>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                   </BADTrackingEvents>" +
             "                               </Companion>" +
             "                               <Companion id=\"valid\" height=\"250\" width=\"300\">" +
-            "                                   <StaticResource creativeType=\"image/png\">http://demo.tremormedia.com/proddev/vast/Blistex1.png</StaticResource>" +
+            "                                   <StaticResource creativeType=\"image/png\">https://demo.tremormedia.com/proddev/vast/Blistex1.png</StaticResource>" +
             "                                   <TrackingEvents>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                       <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                       <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                   </TrackingEvents>" +
-            "                                   <CompanionClickThrough>http://www.tremormedia.com</CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking1]]></CompanionClickTracking>" +
+            "                                   <CompanionClickThrough>https://www.tremormedia.com</CompanionClickThrough>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking1]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion height=\"789\" width=\"456\">" +
             "                                   <StaticResource creativeType=\"image/bmp\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset/229/7969/300x250.bmp" +
+            "                                           https://cdn.liverail.com/adasset/229/7969/300x250.bmp" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <TrackingEvents>" +
             "                                       <Tracking event=\"creativeView\">" +
             "                                           <![CDATA[" +
-            "                                               http://trackingUrl1.com/" +
+            "                                               https://trackingUrl1.com/" +
             "                                           ]]>" +
             "                                       </Tracking>" +
             "                                   </TrackingEvents>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl1.com/" +
+            "                                           https://clickThroughUrl1.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking2]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking2]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion height=\"789\" width=\"1011\">" +
             "                                   <StaticResource creativeType=\"image/gif\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset/229/7969/300x250.gif" +
+            "                                           https://cdn.liverail.com/adasset/229/7969/300x250.gif" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl2.com/" +
+            "                                           https://clickThroughUrl2.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking3]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking3]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion width=\"300\" height=\"60\">" +
             "                                   <StaticResource creativeType=\"application/x-shockwave-flash\">" +
             "                                       <![CDATA[" +
-            "                                           http://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf" +
+            "                                           https://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf" +
             "                                       ]]>" +
             "                                   </StaticResource>" +
             "                                   <TrackingEvents>" +
             "                                       <Tracking event=\"creativeView\">" +
             "                                           <![CDATA[" +
-            "                                               http://trackingUrl2.com/" +
+            "                                               https://trackingUrl2.com/" +
             "                                           ]]>" +
             "                                       </Tracking>" +
             "                                   </TrackingEvents>" +
             "                                   <CompanionClickThrough>" +
             "                                       <![CDATA[" +
-            "                                           http://clickThroughUrl3.com/" +
+            "                                           https://clickThroughUrl3.com/" +
             "                                       ]]>" +
             "                                   </CompanionClickThrough>" +
-            "                                   <CompanionClickTracking><![CDATA[http://companionClickTracking4]]></CompanionClickTracking>" +
+            "                                   <CompanionClickTracking><![CDATA[https://companionClickTracking4]]></CompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion id=\"valid\" height=\"249\" width=\"299\">" +
-            "                                   <BADStaticResource creativeType=\"image/jpeg\">http://demo.tremormedia.com/proddev/vast/Blistex1.jpg</BADStaticResource>" +
+            "                                   <BADStaticResource creativeType=\"image/jpeg\">https://demo.tremormedia.com/proddev/vast/Blistex1.jpg</BADStaticResource>" +
             "                                   <TrackingEvents>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
-            "                                           <BADTracking event=\"creativeView\">http://myTrackingURL/thirdCompanionCreativeView</BADTracking>" +
-            "                                           <Tracking BADevent=\"creativeView\">http://myTrackingURL/fourthCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"BADcreativeView\">http://myTrackingURL/fifthCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                           <BADTracking event=\"creativeView\">https://myTrackingURL/thirdCompanionCreativeView</BADTracking>" +
+            "                                           <Tracking BADevent=\"creativeView\">https://myTrackingURL/fourthCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"BADcreativeView\">https://myTrackingURL/fifthCompanionCreativeView</Tracking>" +
             "                                   </TrackingEvents>" +
-            "                                   <BADCompanionClickThrough>http://www.tremormedia.com</BADCompanionClickThrough>" +
-            "                                   <BADCompanionClickTracking><![CDATA[http://companionClickTracking5]]></BADCompanionClickTracking>" +
+            "                                   <BADCompanionClickThrough>https://www.tremormedia.com</BADCompanionClickThrough>" +
+            "                                   <BADCompanionClickTracking><![CDATA[https://companionClickTracking5]]></BADCompanionClickTracking>" +
             "                               </Companion>" +
             "                               <Companion width=\"9000\">" +
             "                                   <TrackingEvents>" +
             "                                       <ThisWillNotBeFound>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/firstCompanionCreativeView</Tracking>" +
-            "                                           <Tracking event=\"creativeView\">http://myTrackingURL/secondCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/firstCompanionCreativeView</Tracking>" +
+            "                                           <Tracking event=\"creativeView\">https://myTrackingURL/secondCompanionCreativeView</Tracking>" +
             "                                       </ThisWillNotBeFound>" +
             "                                   </TrackingEvents>" +
             "                               </Companion>" +
@@ -327,13 +327,13 @@
             "                        <Extension type=\"MoPub\">" +
             "                           <MoPubCtaText>custom CTA text</MoPubCtaText>" +
             "                           <MoPubSkipText>skip</MoPubSkipText>" +
-            "                           <MoPubCloseIcon>http://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
+            "                           <MoPubCloseIcon>https://ton.twitter.com/exchange-media/images/v4/star_icon_3x.png</MoPubCloseIcon>" +
             "                           <MoPubForceOrientation>device</MoPubForceOrientation>" +
             "                           <MoPubViewabilityTracker" +
 "                                           viewablePlaytime=\"2.5\"" +
             "                               percentViewable=\"50%\">" +
             "                               <![CDATA[" +
-            "                                   http://ad.server.com/impression/dot.gif" +
+            "                                   https://ad.server.com/impression/dot.gif" +
             "                               ]]>" +
             "                           </MoPubViewabilityTracker>" +
             "                        </Extension>" +
@@ -341,16 +341,16 @@
             "                </InLine>" +
             "                <Wrapper>" +
             "                   <AdSystem>Acudeo Compatible</AdSystem>" +
-            "                   <VASTAdTagURI>http://0.dsp.dev1.mopub.com/xml</VASTAdTagURI>" +
-            "                   <Impression>http://myTrackingURL/wrapper/impression</Impression>" +
+            "                   <VASTAdTagURI>https://0.dsp.dev1.mopub.com/xml</VASTAdTagURI>" +
+            "                   <Impression>https://myTrackingURL/wrapper/impression</Impression>" +
             "                   <Creatives>" +
             "                   </Creatives>" +
             "                </Wrapper>" +
             "            </Ad>" +
             "        </VAST>" +
             "<MP_TRACKING_URLS>" +
-            "   <MP_TRACKING_URL>http://www.mopub.com/imp1</MP_TRACKING_URL>" +
-            "   <MP_TRACKING_URL>http://www.mopub.com/imp2</MP_TRACKING_URL>" +
+            "   <MP_TRACKING_URL>https://www.mopub.com/imp1</MP_TRACKING_URL>" +
+            "   <MP_TRACKING_URL>https://www.mopub.com/imp2</MP_TRACKING_URL>" +
             "</MP_TRACKING_URLS>";
 
     private VastXmlManager mXmlManager;
@@ -432,7 +432,7 @@ public void parseVastXml_withMalformedNodes_shouldNotCauseProblems() {
 
     @Test
     public void getAdXmlManagers_shouldReturnAllAdXmlManagers() throws Exception {
-        String vastXml = "<VAST xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
+        String vastXml = "<VAST xmlns:xsi=\"https://www.w3.org/2001/XMLSchema-instance\" version=\"2.0\" xsi:noNamespaceSchemaLocation=\"vast.xsd\">" +
                 "    <Ad id=\"12345678\">" +
                 "        <InLine></InLine>" +
                 "    </Ad>" +
@@ -455,7 +455,7 @@ public void getAdXmlManagers_shouldReturnAllAdXmlManagers() throws Exception {
     @Test
     public void getMoPubImpressionTrackers_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getMoPubImpressionTrackers()))
-                .containsOnly("http://www.mopub.com/imp1", "http://www.mopub.com/imp2");
+                .containsOnly("https://www.mopub.com/imp1", "https://www.mopub.com/imp2");
     }
 
     @Test
@@ -476,7 +476,7 @@ public void getCustomSkipText_shouldReturnTheCorrectValue() {
     public void getCustomCloseIconUrl_shouldReturnTheCorrectValue() {
         String customCloseIconUrl = mXmlManager.getCustomCloseIconUrl();
 
-        assertThat(customCloseIconUrl).isEqualTo("http://ton.twitter" +
+        assertThat(customCloseIconUrl).isEqualTo("https://ton.twitter" +
                 ".com/exchange-media/images/v4/star_icon_3x.png");
     }
 
@@ -495,17 +495,17 @@ public void getCustomForceOrientation_shouldReturnTheCorrectValue() {
     public void getVastAdTagURI_withWrapperXmlManager_shouldReturnTheCorrectValue() {
         String url = mXmlManager.getAdXmlManagers().get(0).getWrapperXmlManager().getVastAdTagURI();
 
-        assertThat(url).isEqualTo("http://0.dsp.dev1.mopub.com/xml");
+        assertThat(url).isEqualTo("https://0.dsp.dev1.mopub.com/xml");
     }
 
     @Test
     public void getImpressionTrackers_withInLineXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getImpressionTrackers()))
-                .containsOnly("http://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;" +
+                .containsOnly("https://ad.doubleclick.net/imp;v7;x;223626102;0-0;0;47414672;0/0;" +
                                 "30477563/30495440/1;;~aopt=0/0/ff/0;~cs=j%3fhttp://s0.2mdn" +
                                 ".net/dot.gif",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?");
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145;sz=1x1;ord=2922389?");
     }
 
     @Test
@@ -519,9 +519,9 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(0).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/jpeg");
         assertThat(imageCompanionAdXmlManagers.get(0).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/728x90_banner1.jpg");
         assertThat(imageCompanionAdXmlManagers.get(0).getClickThroughUrl()).isEqualTo(
-                "http://www.tremormedia.com");
+                "https://www.tremormedia.com");
         assertThat(imageCompanionAdXmlManagers.get(0).getClickTrackers()).isEmpty();
 
         assertThat(imageCompanionAdXmlManagers.get(1).getWidth()).isEqualTo(300);
@@ -529,35 +529,35 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(1).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/png");
         assertThat(imageCompanionAdXmlManagers.get(1).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://demo.tremormedia.com/proddev/vast/Blistex1.png");
+                .isEqualTo("https://demo.tremormedia.com/proddev/vast/Blistex1.png");
         assertThat(imageCompanionAdXmlManagers.get(1).getClickThroughUrl()).isEqualTo(
-                "http://www.tremormedia.com");
+                "https://www.tremormedia.com");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(1)
-                .getClickTrackers())).containsOnly("http://companionClickTracking1");
+                .getClickTrackers())).containsOnly("https://companionClickTracking1");
 
         assertThat(imageCompanionAdXmlManagers.get(2).getWidth()).isEqualTo(456);
         assertThat(imageCompanionAdXmlManagers.get(2).getHeight()).isEqualTo(789);
         assertThat(imageCompanionAdXmlManagers.get(2).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/bmp");
         assertThat(imageCompanionAdXmlManagers.get(2).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://cdn.liverail.com/adasset/229/7969/300x250.bmp");
+                .isEqualTo("https://cdn.liverail.com/adasset/229/7969/300x250.bmp");
         assertThat(imageCompanionAdXmlManagers.get(2).getClickThroughUrl())
-                .isEqualTo("http://clickThroughUrl1.com/");
+                .isEqualTo("https://clickThroughUrl1.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(2)
-                .getClickTrackers())).containsOnly("http://companionClickTracking2");
+                .getClickTrackers())).containsOnly("https://companionClickTracking2");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(2)
-                .getCompanionCreativeViewTrackers())).containsOnly("http://trackingUrl1.com/");
+                .getCompanionCreativeViewTrackers())).containsOnly("https://trackingUrl1.com/");
 
         assertThat(imageCompanionAdXmlManagers.get(3).getWidth()).isEqualTo(1011);
         assertThat(imageCompanionAdXmlManagers.get(3).getHeight()).isEqualTo(789);
         assertThat(imageCompanionAdXmlManagers.get(3).getResourceXmlManager().getStaticResourceType())
                 .isEqualTo("image/gif");
         assertThat(imageCompanionAdXmlManagers.get(3).getResourceXmlManager().getStaticResource())
-                .isEqualTo("http://cdn.liverail.com/adasset/229/7969/300x250.gif");
+                .isEqualTo("https://cdn.liverail.com/adasset/229/7969/300x250.gif");
         assertThat(imageCompanionAdXmlManagers.get(3).getClickThroughUrl()).isEqualTo(
-                "http://clickThroughUrl2.com/");
+                "https://clickThroughUrl2.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(3)
-                .getClickTrackers())).containsOnly("http://companionClickTracking3");
+                .getClickTrackers())).containsOnly("https://companionClickTracking3");
         assertThat(imageCompanionAdXmlManagers.get(3).getCompanionCreativeViewTrackers()).isEmpty();
 
         assertThat(imageCompanionAdXmlManagers.get(4).getWidth()).isEqualTo(300);
@@ -566,13 +566,13 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
                 .isEqualTo("application/x-shockwave-flash");
         assertThat(imageCompanionAdXmlManagers.get(4).getResourceXmlManager().getStaticResource())
                 .isEqualTo(
-                        "http://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf");
+                        "https://cdn.liverail.com/adasset4/1331/229/7969/5122396e510b80db6b5ef4013ddabe90.swf");
         assertThat(imageCompanionAdXmlManagers.get(4).getClickThroughUrl()).isEqualTo(
-                "http://clickThroughUrl3.com/");
+                "https://clickThroughUrl3.com/");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(4)
-                .getClickTrackers())).containsOnly("http://companionClickTracking4");
+                .getClickTrackers())).containsOnly("https://companionClickTracking4");
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(4)
-                .getCompanionCreativeViewTrackers())).containsOnly("http://trackingUrl2.com/");
+                .getCompanionCreativeViewTrackers())).containsOnly("https://trackingUrl2.com/");
 
         assertThat(imageCompanionAdXmlManagers.get(5).getWidth()).isEqualTo(299);
         assertThat(imageCompanionAdXmlManagers.get(5).getHeight()).isEqualTo(249);
@@ -582,8 +582,8 @@ public void getCompanionAdXmlManagers_withInLineXmlManager_shouldReturnListOfPop
         assertThat(imageCompanionAdXmlManagers.get(5).getClickTrackers()).isEmpty();
         assertThat(VastUtils.vastTrackersToStrings(imageCompanionAdXmlManagers.get(5)
                 .getCompanionCreativeViewTrackers()))
-                .containsOnly("http://myTrackingURL/firstCompanionCreativeView",
-                        "http://myTrackingURL/secondCompanionCreativeView");
+                .containsOnly("https://myTrackingURL/firstCompanionCreativeView",
+                        "https://myTrackingURL/secondCompanionCreativeView");
 
         assertThat(imageCompanionAdXmlManagers.get(6).getWidth()).isEqualTo(9000);
         assertThat(imageCompanionAdXmlManagers.get(6).getHeight()).isNull();
@@ -603,11 +603,11 @@ public void getAbsoluteProgressTrackers_withLinearXmlManager_shouldReturnCorrect
 
         VastAbsoluteProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.getTrackingMilliseconds()).isEqualTo(2000);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastAbsoluteProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.getTrackingMilliseconds()).isEqualTo(3670300);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;" +
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;" +
                 "src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;" +
                 "rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
     }
@@ -621,40 +621,40 @@ public void getFractionalTrackers_withLinearXmlManager_shouldReturnCorrectValues
 
         VastFractionalProgressTracker tracker0 = trackers.get(0);
         assertThat(tracker0.trackingFraction()).isEqualTo(0.13f);
-        assertThat(tracker0.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
+        assertThat(tracker0.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=11;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker1 = trackers.get(1);
         assertThat(tracker1.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker1.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
+        assertThat(tracker1.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=26;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker2 = trackers.get(2);
         assertThat(tracker2.trackingFraction()).isEqualTo(0.25f);
-        assertThat(tracker2.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
+        assertThat(tracker2.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.2;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker3 = trackers.get(3);
         assertThat(tracker3.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker3.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
+        assertThat(tracker3.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=18;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker4 = trackers.get(4);
         assertThat(tracker4.trackingFraction()).isEqualTo(0.5f);
-        assertThat(tracker4.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
+        assertThat(tracker4.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.3;sz=1x1;ord=2922389?");
 
         VastFractionalProgressTracker tracker5 = trackers.get(5);
         assertThat(tracker5.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker5.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
+        assertThat(tracker5.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;timestamp=2922389;eid1=27;ecn1=1;etm1=0;");
 
         VastFractionalProgressTracker tracker6 = trackers.get(6);
         assertThat(tracker6.trackingFraction()).isEqualTo(0.75f);
-        assertThat(tracker6.getTrackingUrl()).isEqualTo("http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
+        assertThat(tracker6.getTrackingUrl()).isEqualTo("https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.4;sz=1x1;ord=2922389?");
     }
 
     @Test
     public void getVideoCompleteTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager().getLinearXmlManagers().get(0).getVideoCompleteTrackers()))
-                .containsOnly("http://ad.doubleclick.net/activity;src=2215309;met=1;v=1;" +
+                .containsOnly("https://ad.doubleclick.net/activity;src=2215309;met=1;v=1;" +
                                 "pid=47414672;aid=223626102;ko=0;cid=30477563;rid=30495440;rv=1;" +
                                 "timestamp=2922389;eid1=13;ecn1=1;etm1=0;",
-                        "http://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;" +
+                        "https://ad.doubleclick.net/ad/N270.Process_Other/B3473145.5;sz=1x1;" +
                                 "ord=2922389?");
     }
 
@@ -662,16 +662,16 @@ public void getVideoCompleteTrackers_withLinearXmlManager_shouldReturnTheCorrect
     public void getVideoCloseTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getVideoCloseTrackers()))
-                .containsOnly("http://www.mopub.com/close?q=ignatius",
-                        "http://www.mopub.com/close?q=j3");
+                .containsOnly("https://www.mopub.com/close?q=ignatius",
+                        "https://www.mopub.com/close?q=j3");
     }
 
     @Test
     public void getVideoSkipTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getVideoSkipTrackers()))
-                .containsOnly("http://www.mopub.com/skip?q=ignatius",
-                        "http://www.mopub.com/skip?q=j3");
+                .containsOnly("https://www.mopub.com/skip?q=ignatius",
+                        "https://www.mopub.com/skip?q=j3");
     }
 
     @Test
@@ -679,14 +679,14 @@ public void getClickThroughUrl_withLinearXmlManager_shouldReturnTheCorrectValue(
         String url = mXmlManager.getAdXmlManagers().get(0)
                 .getInLineXmlManager().getLinearXmlManagers().get(0).getClickThroughUrl();
 
-        assertThat(url).isEqualTo("http://www.google.com/support/richmedia");
+        assertThat(url).isEqualTo("https://www.google.com/support/richmedia");
     }
 
     @Test
     public void getClickTrackers_withLinearXmlManager_shouldReturnTheCorrectValue() {
         assertThat(VastUtils.vastTrackersToStrings(mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager().getLinearXmlManagers().get(0).getClickTrackers()))
-                .containsOnly("http://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
-                        "http://ad.doubleclick.net/clk;212442087;33815766;i?http://www.google.com/support/richmedia");
+                .containsOnly("https://ad.doubleclick.net/click%3Bh%3Dv8/3e1b/3/0/%2a/z%3B223626102%3B0-0%3B0%3B47414672%3B255-0/0%3B30477563/30495440/1%3B%3B%7Eaopt%3D0/0/ff/0%3B%7Esscs%3D%3fhttp://s0.2mdn.net/dot.gif",
+                        "https://ad.doubleclick.net/clk;212442087;33815766;i?https://www.google.com/support/richmedia");
     }
 
     @Test
@@ -702,7 +702,7 @@ public void getMediaFileUrl_withMediaXmlManager_shouldReturnTheCorrectValue() {
         String url = mXmlManager.getAdXmlManagers().get(0).getInLineXmlManager()
                 .getLinearXmlManagers().get(0).getMediaXmlManagers().get(0).getMediaUrl();
 
-        assertThat(url).isEqualTo("http://s3.amazonaws.com/uploads.hipchat" +
+        assertThat(url).isEqualTo("https://s3.amazonaws.com/uploads.hipchat" +
                 ".com/10627/429509/t8hqeqf98nvtir7/big_buck_bunny.mp4");
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
index ed1cee96..7b3ce325 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoDownloaderTest.java
@@ -31,8 +31,8 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowAsyncTasks.class, ShadowMoPubHttpUrlConnection.class})
 public class VideoDownloaderTest {
     @Mock VideoDownloaderListener mockListener;
-    private final static String expectedUrl1 = "http://video_url";
-    private final static String expectedUrl2 = "http://video_url2";
+    private final static String expectedUrl1 = "https://video_url";
+    private final static String expectedUrl2 = "https://video_url2";
 
     @Before
     public void setUp() {
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
index 7e435cdc..0a7acd72 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/VideoViewabilityTrackerXmlManagerTest.java
@@ -19,7 +19,7 @@ public void getViewablePlaytimeMS_shouldParseHourFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"01:01:01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -32,7 +32,7 @@ public void getViewablePlaytimeMS_shouldParseSecondsFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -45,7 +45,7 @@ public void getViewablePlaytimeMS_shouldParseIntegerFormat() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"2\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -57,7 +57,7 @@ public void getViewablePlaytimeMS_shouldParseIntegerFormat() throws Exception {
     public void getViewablePlaytimeMS_withoutViewablePlaytimeMS_shouldReturnNull() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -70,7 +70,7 @@ public void getViewablePlaytimeMS_withNegativeInteger_shouldReturnNull() throws
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"-1\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -83,7 +83,7 @@ public void getViewablePlaytimeMS_withInvalidHourFormat_shouldReturnNull() throw
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"a01:01:01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -96,7 +96,7 @@ public void getViewablePlaytimeMS_withInvalidSecondsFormat_shouldReturnNull() th
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"a01.001\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -109,7 +109,7 @@ public void getViewablePlaytimeMS_withInvalidViewablePlaytimeMS_shouldReturnNull
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1234!@#$%^*(asdf\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -122,7 +122,7 @@ public void getPercentViewable_shouldParseWithPercentSign() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -135,7 +135,7 @@ public void getPercentViewable_shouldParseWithoutPercentSign() throws Exception
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -148,7 +148,7 @@ public void getPercentViewable_shouldTruncateFloats() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"25.9\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -160,7 +160,7 @@ public void getPercentViewable_shouldTruncateFloats() throws Exception {
     public void getPercentViewable_withoutPercentViewable_shouldReturnNull() throws Exception {
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -173,7 +173,7 @@ public void getPercentViewable_withNegativeInteger_shouldReturnNull() throws Exc
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"-25\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -186,7 +186,7 @@ public void getPercentViewable_withIntegerGreaterThan100_shouldReturnNull() thro
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"101\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -199,7 +199,7 @@ public void getPercentViewable_withInvalidPercentViewable_shouldReturnNull() thr
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"1\"" +
                 "                             percentViewable=\"1234!@#$%^*(asdf\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
@@ -212,13 +212,13 @@ public void getVideoViewabilityTrackerUrl_shouldReturnVideoViewabilityTrackerUrl
         String videoViewabilityXml = "<MoPubViewabilityTracker" +
                 "                             viewablePlaytime=\"2\"" +
                 "                             percentViewable=\"50%\">" +
-                "                         <![CDATA[http://ad.server.com/impression/dot.gif]]>" +
+                "                         <![CDATA[https://ad.server.com/impression/dot.gif]]>" +
                 "                     </MoPubViewabilityTracker>";
 
         subject = new VideoViewabilityTrackerXmlManager(createNode(videoViewabilityXml));
 
         assertThat(subject.getVideoViewabilityTrackerUrl())
-                .isEqualTo("http://ad.server.com/impression/dot.gif");
+                .isEqualTo("https://ad.server.com/impression/dot.gif");
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
index 0c20e34f..af013817 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/WebViewAdUrlGeneratorTest.java
@@ -28,7 +28,6 @@
 import com.mopub.common.util.test.support.TestMethodBuilderFactory;
 import com.mopub.mobileads.test.support.MoPubShadowTelephonyManager;
 import com.mopub.mraid.MraidNativeCommandHandler;
-import com.mopub.network.Networking;
 import com.mopub.network.PlayServicesUrlRewriter;
 
 import org.junit.After;
@@ -45,6 +44,8 @@
 import org.robolectric.shadows.ShadowLocationManager;
 import org.robolectric.shadows.ShadowNetworkInfo;
 
+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static android.net.ConnectivityManager.TYPE_DUMMY;
 import static android.net.ConnectivityManager.TYPE_ETHERNET;
@@ -85,6 +86,8 @@
     public void setup() {
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_COARSE_LOCATION);
 
         // Set the expected screen dimensions to arbitrary numbers
         final Resources spyResources = spy(context.getResources());
@@ -124,7 +127,6 @@ public Object answer(final InvocationOnMock invocationOnMock) throws Throwable {
         shadowTelephonyManager = (MoPubShadowTelephonyManager) Shadows.shadowOf((TelephonyManager) RuntimeEnvironment.application.getSystemService(Context.TELEPHONY_SERVICE));
         shadowConnectivityManager = Shadows.shadowOf((ConnectivityManager) RuntimeEnvironment.application.getSystemService(Context.CONNECTIVITY_SERVICE));
         methodBuilder = TestMethodBuilderFactory.getSingletonMock();
-        Networking.useHttps(false);
     }
 
     @After
@@ -143,9 +145,8 @@ public void generateAdUrl_shouldIncludeMinimumFields() throws Exception {
 
     @Test
     public void generateAdUrl_withHttpsScheme() throws Exception {
-        Networking.useHttps(true);
         String adUrl = generateMinimumUrlString();
-        assertThat(adUrl).startsWith("https://");
+        assertThat(adUrl).startsWith("http://");
     }
 
     @Test
@@ -396,6 +397,91 @@ public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_sh
         assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
     }
 
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithFineLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("37.0,-122.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithCoarseLocationPermissionOnly_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceGpsProviderHasMostRecentLocation_WithNoLocationPermission_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(37);
+        locationFromSdk.setLongitude(-122);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.GPS_PROVIDER, locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
     @Test
     public void generateAdUrl_whenDeveloperSuppliesMoreRecentLocationThanLocationService_shouldUseDeveloperSuppliedLocation() {
         Location locationFromDeveloper = new Location("");
@@ -450,6 +536,94 @@ public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocatio
         assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
     }
 
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithFineLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("38.0,-123.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithCoarseLocationPermissionOnly_shouldUseLocationServiceValue() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("38.0,-123.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("5");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEqualTo("1");
+    }
+
+    @Test
+    public void generateAdUrl_whenLocationServiceNetworkProviderHasMostRecentLocation_WithNoLocationPermission_shouldUseDeveloperSuppliedLocation() {
+        Shadows.shadowOf(context).denyPermissions(ACCESS_FINE_LOCATION);
+        Shadows.shadowOf(context).denyPermissions(ACCESS_COARSE_LOCATION);
+
+        Location locationFromDeveloper = new Location("");
+        locationFromDeveloper.setLatitude(42);
+        locationFromDeveloper.setLongitude(-42);
+        locationFromDeveloper.setAccuracy(3.5f);
+        locationFromDeveloper.setTime(1000);
+
+        // Mock out the LocationManager's last known location to be more recent than the
+        // developer-supplied location.
+        ShadowLocationManager shadowLocationManager = Shadows.shadowOf(
+                (LocationManager) RuntimeEnvironment.application.getSystemService(Context.LOCATION_SERVICE));
+        Location locationFromSdk = new Location("");
+        locationFromSdk.setLatitude(38);
+        locationFromSdk.setLongitude(-123);
+        locationFromSdk.setAccuracy(5.0f);
+        locationFromSdk.setTime(2000);
+        shadowLocationManager.setLastKnownLocation(LocationManager.NETWORK_PROVIDER,
+                locationFromSdk);
+
+        String adUrl = subject.withLocation(locationFromDeveloper)
+                .generateUrlString("ads.mopub.com");
+        assertThat(getParameterFromRequestUrl(adUrl, "ll")).isEqualTo("42.0,-42.0");
+        assertThat(getParameterFromRequestUrl(adUrl, "lla")).isEqualTo("3");
+        assertThat(getParameterFromRequestUrl(adUrl, "llsdk")).isEmpty();
+    }
+
     @Test
     public void generateAdUrl_withNullPackageName_withEmptyPackageName_shouldNotIncludeBundleKey() {
         when(context.getPackageName()).thenReturn(null).thenReturn("");
@@ -537,7 +711,7 @@ public String build() {
             return "http://ads.mopub.com/m/ad" +
                     "?v=6" +
                     paramIfNotEmpty("id", adUnitId) +
-                    "&nv=" + MoPub.SDK_VERSION +
+                    "&nv=" + Uri.encode(MoPub.SDK_VERSION) +
                     "&dn=" + Build.MANUFACTURER +
                     "%2C" + Build.MODEL +
                     "%2C" + Build.PRODUCT +
diff --git a/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java b/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
index 5ec0131c..61ac31e0 100644
--- a/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mobileads/util/XmlUtilsTest.java
@@ -31,7 +31,7 @@
 
     // From Microsoft's sample xml documents page: https://msdn.microsoft.com/en-us/library/bb387026.aspx
     private String testXml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
-            "<aw:PurchaseOrders xmlns:aw=\"http://www.adventure-works.com\">\n" +
+            "<aw:PurchaseOrders xmlns:aw=\"https://www.adventure-works.com\">\n" +
             "  <aw:PurchaseOrder aw:PurchaseOrderNumber=\"99503\" aw:OrderDate=\"1999-10-20\">\n" +
             "    <aw:Address aw:Type=\"Shipping\">\n" +
             "      <aw:Name>Ellen Adams</aw:Name>\n" +
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
index 04db1b0d..03d09d1a 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidBridgeTest.java
@@ -232,7 +232,7 @@ public void handleShouldOverrideUrl_smsUrl_clicked_shouldStartActivity() {
     @Test
     public void handleShouldOverrideUrl_normalUrl_shouldReturnFalse() {
         attachWebViews();
-        boolean result = subjectBanner.handleShouldOverrideUrl("http://www.mopub.com");
+        boolean result = subjectBanner.handleShouldOverrideUrl("https://www.mopub.com");
 
         assertThat(result).isFalse();
     }
@@ -245,7 +245,7 @@ public void runCommand_requiresClick_notClicked_shouldThrowException()
         subjectBanner.attachView(mockBannerWebView);
         subjectBanner.setClicked(false);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
     }
@@ -255,7 +255,7 @@ public void runCommand_requiresClick_clicked_shouldNotThrowException()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
     }
@@ -266,7 +266,7 @@ public void runCommand_interstitial_requiresClick_notClicked_shouldThrowExceptio
         attachWebViews();
         subjectInterstitial.setClicked(false);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectInterstitial.runCommand(MraidJavascriptCommand.OPEN, params);
     }
@@ -277,7 +277,7 @@ public void runCommand_interstitial_requiresClick_clicked_shouldNotThrowExceptio
         attachWebViews();
         subjectInterstitial.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("url", "http://valid-url");
+        params.put("url", "https://valid-url");
 
         subjectInterstitial.runCommand(MraidJavascriptCommand.OPEN, params);
     }
@@ -312,7 +312,7 @@ public void runCommand_expand_withUrl_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("url", "http://valid-url");
+        params.put("url", "https://valid-url");
         params.put("shouldUseCustomClose", "true");
 
         subjectBanner.runCommand(MraidJavascriptCommand.EXPAND, params);
@@ -320,7 +320,7 @@ public void runCommand_expand_withUrl_shouldCallListener()
         ArgumentCaptor<URI> uriCaptor = ArgumentCaptor.forClass(URI.class);
         verify(mockBridgeListener).onExpand(
                 uriCaptor.capture(), eq(true));
-        assertThat(uriCaptor.getValue().toString()).isEqualTo("http://valid-url");
+        assertThat(uriCaptor.getValue().toString()).isEqualTo("https://valid-url");
     }
 
     @Test
@@ -329,13 +329,13 @@ public void runCommand_playVideo_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.PLAY_VIDEO, params);
 
         ArgumentCaptor<URI> uriCaptor = ArgumentCaptor.forClass(URI.class);
         verify(mockBridgeListener).onPlayVideo(uriCaptor.capture());
-        assertThat(uriCaptor.getValue().toString()).isEqualTo("http://valid-url");
+        assertThat(uriCaptor.getValue().toString()).isEqualTo("https://valid-url");
     }
 
     @Test
@@ -344,11 +344,11 @@ public void runCommand_storePicture_shouldCallListener()
         attachWebViews();
         subjectBanner.setClicked(true);
         Map<String, String> params = new HashMap<String, String>();
-        params.put("uri", "http://valid-url");
+        params.put("uri", "https://valid-url");
 
         subjectBanner.runCommand(MraidJavascriptCommand.STORE_PICTURE, params);
 
-        verify(mockNativeCommandHandler).storePicture(any(Context.class), eq("http://valid-url"),
+        verify(mockNativeCommandHandler).storePicture(any(Context.class), eq("https://valid-url"),
                 any(MraidCommandFailureListener.class));
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
index 6a21c2a5..4d79a2e2 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidControllerTest.java
@@ -388,11 +388,11 @@ public void handleExpand_withTwoPartUrl_shouldAttachTwoPartBridge_shouldCallOnEx
         // Move to DEFAULT state
         subject.handlePageLoad();
 
-        subject.handleExpand(URI.create("http://two-part-url"), false);
+        subject.handleExpand(URI.create("https://two-part-url"), false);
 
         verify(mockTwoPartBridge).setMraidBridgeListener(any(MraidBridgeListener.class));
         verify(mockTwoPartBridge).attachView(any(MraidWebView.class));
-        verify(mockTwoPartBridge).setContentUrl(URI.create("http://two-part-url").toString());
+        verify(mockTwoPartBridge).setContentUrl(URI.create("https://two-part-url").toString());
 
         assertThat(subject.getExpandedAdContainer().getChildCount()).isEqualTo(2);
         assertThat(subject.getAdContainer().getChildCount()).isEqualTo(1);
@@ -409,7 +409,7 @@ public void handleClose_afterDestroy_shouldNotFireOnClose() {
     }
 
     @Test
-    public void handleClose_fromExpandedState_shouldMoveWebViewToOriginalContainer_shouldNotFireOnClose() throws MraidCommandException {
+    public void handleClose_fromExpandedState_shouldMoveWebViewToOriginalContainer_shouldFireOnClose() throws MraidCommandException {
         // Move to EXPANDED state
         subject.handlePageLoad();
         subject.handleExpand(null, false);
@@ -419,13 +419,13 @@ public void handleClose_fromExpandedState_shouldMoveWebViewToOriginalContainer_s
         assertThat(subject.getExpandedAdContainer().getChildCount()).isEqualTo(1);
         assertThat(subject.getAdContainer().getChildCount()).isEqualTo(1);
         assertThat(subject.getViewState()).isEqualTo(ViewState.DEFAULT);
-        verify(mockMraidListener, never()).onClose();
+        verify(mockMraidListener).onClose();
     }
 
     @Test
-    public void handleClose_fromTwoPartExpandedState_shouldDetachTwoPartBridge_shouldMoveWebViewToOriginalContainer_shouldNotFireOnClose()
+    public void handleClose_fromTwoPartExpandedState_shouldDetachTwoPartBridge_shouldMoveWebViewToOriginalContainer_shouldFireOnClose()
             throws MraidCommandException {
-        URI uri = URI.create("http://two-part-url");
+        URI uri = URI.create("https://two-part-url");
 
         // Move to two part EXPANDED state
         subject.handlePageLoad();
@@ -439,7 +439,7 @@ public void handleClose_fromTwoPartExpandedState_shouldDetachTwoPartBridge_shoul
         assertThat(subject.getAdContainer().getChildCount()).isEqualTo(1);
         assertThat(subject.getViewState()).isEqualTo(ViewState.DEFAULT);
 
-        verify(mockMraidListener, never()).onClose();
+        verify(mockMraidListener).onClose();
     }
 
     @Test
@@ -458,9 +458,9 @@ public void handleClose_fromDefaultState_shouldHideAdContainer_shouldCallOnClose
 
     @Test
     public void handleShowVideo_shouldStartVideoPlayerActivity() {
-        subject.handleShowVideo("http://video");
+        subject.handleShowVideo("https://video");
         BaseVideoPlayerActivityTest.assertMraidVideoPlayerActivityStarted(
-                MraidVideoPlayerActivity.class, "http://video");
+                MraidVideoPlayerActivity.class, "https://video");
     }
 
     @Test
@@ -521,7 +521,7 @@ public void handleOpen_withApplicationUrl_shouldStartNewIntent() {
 
     @Test
     public void handleOpen_withHttpApplicationUrl_shouldStartMoPubBrowser() {
-        String applicationUrl = "http://www.mopub.com/";
+        String applicationUrl = "https://www.mopub.com/";
 
         subject.handleOpen(applicationUrl);
 
@@ -975,7 +975,7 @@ public void destroy_withExpandedState_shouldSetMraidWebViewsToNull()
         // Necessary to set up the webview before expanding. Also moves the state to DEFAULT.
         subject.handlePageLoad();
         assertThat(subject.getViewState()).isEqualTo(ViewState.DEFAULT);
-        subject.handleExpand(URI.create("http://two-part-url"), false);
+        subject.handleExpand(URI.create("https://two-part-url"), false);
 
         assertThat(subject.getMraidWebView()).isNotNull();
         assertThat(subject.getTwoPartWebView()).isNotNull();
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
index 3d38b27f..2744dc6e 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidInterstitialTest.java
@@ -24,9 +24,9 @@
 import static com.mopub.common.DataKeys.BROADCAST_IDENTIFIER_KEY;
 import static com.mopub.common.DataKeys.HTML_RESPONSE_BODY_KEY;
 import static com.mopub.mobileads.CustomEventInterstitial.CustomEventInterstitialListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_CLICK;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_DISMISS;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.ACTION_INTERSTITIAL_SHOW;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_CLICK;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_DISMISS;
+import static com.mopub.common.IntentActions.ACTION_INTERSTITIAL_SHOW;
 import static com.mopub.mobileads.EventForwardingBroadcastReceiverTest.getIntentForActionAndIdentifier;
 import static com.mopub.mobileads.MoPubErrorCode.NETWORK_INVALID_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
index 7217f6ba..e8ee9387 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidNativeCommandHandlerTest.java
@@ -74,7 +74,7 @@
 @Config(constants = BuildConfig.class, shadows = {ShadowAsyncTasks.class, ShadowMoPubHttpUrlConnection.class})
 public class MraidNativeCommandHandlerTest {
     private static final String IMAGE_URI_VALUE = "file://tmp/expectedFile.jpg";
-    private static final String REMOTE_IMAGE_URL = "http://www.mopub.com/expectedFile.jpg";
+    private static final String REMOTE_IMAGE_URL = "https://www.mopub.com/expectedFile.jpg";
     private static final int TIME_TO_PAUSE_FOR_NETWORK = 300;
     private static final String FAKE_IMAGE_DATA = "imageFileData";
     //XXX: Robolectric or JUNIT doesn't support the correct suffix ZZZZZ in the parse pattern, so replacing xx:xx with xxxx for time.
@@ -866,4 +866,4 @@ public Void answer(InvocationOnMock invocation) throws Throwable {
         params.put("description", "Some Event");
         params.put("start", CALENDAR_START_TIME);
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
index d133ec0d..b46389de 100644
--- a/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/mraid/MraidVideoViewControllerTest.java
@@ -27,7 +27,6 @@
 import static android.view.View.VISIBLE;
 import static com.mopub.mobileads.BaseVideoPlayerActivity.VIDEO_URL;
 import static com.mopub.mobileads.BaseVideoViewController.BaseVideoViewControllerListener;
-import static com.mopub.mobileads.EventForwardingBroadcastReceiver.getHtmlInterstitialIntentFilter;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
@@ -48,7 +47,7 @@ public void setUp() throws Exception {
         bundle = new Bundle();
         baseVideoViewControllerListener = mock(BaseVideoViewControllerListener.class);
 
-        bundle.putString(VIDEO_URL, "http://video_url");
+        bundle.putString(VIDEO_URL, "https://video_url");
 
         Robolectric.getForegroundThreadScheduler().pause();
         Robolectric.getBackgroundThreadScheduler().pause();
@@ -60,7 +59,8 @@ public boolean matches(HttpRequest request) {
             }
         }, new TestHttpResponse(200, "body"));
 
-        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver, getHtmlInterstitialIntentFilter());
+        ShadowLocalBroadcastManager.getInstance(context).registerReceiver(broadcastReceiver,
+                new EventForwardingBroadcastReceiver(null, 0).getIntentFilter());
     }
 
     @After
@@ -80,7 +80,7 @@ public void constructor_shouldSetListenersAndVideoPath() throws Exception {
         assertThat(shadowSubject.getOnCompletionListener()).isNotNull();
         assertThat(shadowSubject.getOnErrorListener()).isNotNull();
 
-        assertThat(shadowSubject.getVideoPath()).isEqualTo("http://video_url");
+        assertThat(shadowSubject.getVideoPath()).isEqualTo("https://video_url");
         assertThat(subject.getVideoView().hasFocus()).isTrue();
     }
     
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/AdapterHelperTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/AdapterHelperTest.java
index a9b49fa1..32c3c858 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/AdapterHelperTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/AdapterHelperTest.java
@@ -32,14 +32,14 @@ public void setUp() {
         subject = new AdapterHelper(context, start, interval);
     }
 
-    @Test(expected = IllegalArgumentException.class)
-    public void constructor_whenPassedAnApplicationContext_shouldThrowIllegalArgumentException() {
+    @Test
+    public void constructor_whenPassedAnApplicationContext_shouldNotThrowIllegalArgumentException() {
         new AdapterHelper(context.getApplicationContext(), start, interval);
     }
 
     @Test
     public void getAdView_withNullActivityContext_shouldReturnEmptyViewWithApplicationContext() {
-        subject.clearActivityContext();
+        subject.clearContext();
         Context viewContext = subject.getAdView(null, null, mock(NativeAd.class),
                 mock(ViewBinder.class)).getContext();
         assertThat(viewContext).isEqualTo(context.getApplication());
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
index 24f3725b..a369b0ef 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/HttpDiskCompositeDataSourceTest.java
@@ -50,7 +50,7 @@ public void setUp() throws Exception {
         Context context = Robolectric.buildActivity(Activity.class).create().get();
         CacheService.initialize(context);
         subject = new HttpDiskCompositeDataSource(context, "userAgent", null, mockHttpDataSource);
-        uri = new Uri.Builder().scheme("http").path("www.someurl").build();
+        uri = new Uri.Builder().scheme("https").path("www.someurl").build();
         dataSpec = new DataSpec(uri, 0, -1, null);
     }
 
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
index e7fba934..d8bb770b 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubNativeTest.java
@@ -83,12 +83,12 @@ public void registerAdRenderer_shouldCallAdRednererRegistryRegisterAdRenderer()
 
     @Test
     public void destroy_shouldSetListenersToEmptyAndClearContext() {
-        assertThat(subject.getActivityOrDestroy()).isSameAs(context);
+        assertThat(subject.getContextOrDestroy()).isSameAs(context);
         assertThat(subject.getMoPubNativeNetworkListener()).isSameAs(mockNetworkListener);
 
         subject.destroy();
 
-        assertThat(subject.getActivityOrDestroy()).isNull();
+        assertThat(subject.getContextOrDestroy()).isNull();
         assertThat(subject.getMoPubNativeNetworkListener()).isSameAs(EMPTY_NETWORK_LISTENER);
     }
 
@@ -104,10 +104,10 @@ public void loadNativeAd_shouldReturnFast() {
 
     @Test
     public void requestNativeAd_shouldFireNetworkRequest() {
-        subject.requestNativeAd("http://www.mopub.com");
+        subject.requestNativeAd("https://www.mopub.com");
 
         verify(mockNetworkListener, never()).onNativeFail(any(NativeErrorCode.class));
-        verify(mockRequestQueue).add(argThat(isUrl("http://www.mopub.com")));
+        verify(mockRequestQueue).add(argThat(isUrl("https://www.mopub.com")));
     }
 
     @Test
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubStaticNativeAdRendererTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubStaticNativeAdRendererTest.java
index 80d3fdfc..a7bae9ed 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubStaticNativeAdRendererTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubStaticNativeAdRendererTest.java
@@ -1,15 +1,12 @@
 package com.mopub.nativeads;
 
-import android.app.Activity;
 import android.graphics.Bitmap;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
-import com.mopub.common.MoPub;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.common.util.Utils;
 import com.mopub.mobileads.BuildConfig;
@@ -25,7 +22,6 @@
 import org.junit.rules.ExpectedException;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
-import org.robolectric.Robolectric;
 import org.robolectric.annotation.Config;
 
 import static org.fest.assertions.api.Assertions.assertThat;
@@ -34,7 +30,9 @@
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.stub;
+import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.verifyNoMoreInteractions;
 import static org.mockito.Mockito.when;
 
 @RunWith(SdkTestRunner.class)
@@ -50,6 +48,7 @@
     @Mock private TextView callToActionView;
     @Mock private ImageView mainImageView;
     @Mock private ImageView iconImageView;
+    @Mock private ImageView privacyInformationIconImageView;
     @Mock private ImageView badView;
     @Mock private MoPubRequestQueue mockRequestQueue;
     @Mock private MaxWidthImageLoader mockImageLoader;
@@ -61,8 +60,6 @@ public void setUp() throws Exception {
         Networking.setImageLoaderForTesting(mockImageLoader);
         stub(mockImageContainer.getBitmap()).toReturn(mock(Bitmap.class));
 
-        Activity context = Robolectric.buildActivity(Activity.class).create().get();
-
         when(relativeLayout.getId()).thenReturn((int) Utils.generateUniqueId());
 
         mStaticNativeAd = new StaticNativeAd() {};
@@ -78,6 +75,7 @@ public void setUp() throws Exception {
         setViewIdInLayout(callToActionView, relativeLayout);
         setViewIdInLayout(mainImageView, relativeLayout);
         setViewIdInLayout(iconImageView, relativeLayout);
+        setViewIdInLayout(privacyInformationIconImageView, relativeLayout);
         setViewIdInLayout(badView, relativeLayout);
 
         viewBinder = new ViewBinder.Builder(relativeLayout.getId())
@@ -86,6 +84,7 @@ public void setUp() throws Exception {
                 .callToActionId(callToActionView.getId())
                 .mainImageId(mainImageView.getId())
                 .iconImageId(iconImageView.getId())
+                .privacyInformationIconImageId(privacyInformationIconImageView.getId())
                 .build();
 
         subject = new MoPubStaticNativeAdRenderer(viewBinder);
@@ -149,6 +148,10 @@ public void renderAdView_withFailedViewBinder_shouldNotWriteViews() {
         verify(titleView, never()).setText(anyString());
         verify(textView, never()).setText(anyString());
         verify(callToActionView, never()).setText(anyString());
+        verify(mainImageView, times(2)).getId();
+        verifyNoMoreInteractions(mainImageView);
+        verify(iconImageView, times(2)).getId();
+        verifyNoMoreInteractions(iconImageView);
     }
 
     @Test
@@ -177,12 +180,16 @@ static private void compareNativeViewHolders(final StaticNativeViewHolder actual
         assertThat(actualViewHolder.callToActionView).isEqualTo(expectedViewHolder.callToActionView);
         assertThat(actualViewHolder.mainImageView).isEqualTo(expectedViewHolder.mainImageView);
         assertThat(actualViewHolder.iconImageView).isEqualTo(expectedViewHolder.iconImageView);
+        assertThat(actualViewHolder.privacyInformationIconImageView).isEqualTo(
+                expectedViewHolder.privacyInformationIconImageView);
     }
 
     @Test
-    public void supports_withInstanceOfBaseForwardingNativeAd_shouldReturnTrue() throws Exception {
+    public void supports_withCorrectInstanceOfBaseNativeAd_shouldReturnTrue() throws Exception {
         assertThat(subject.supports(new StaticNativeAd() {})).isTrue();
         assertThat(subject.supports(mock(MoPubStaticNativeAd.class))).isTrue();
         assertThat(subject.supports(mock(BaseNativeAd.class))).isFalse();
+        assertThat(subject.supports(mock(MoPubCustomEventVideoNative.MoPubVideoNativeAd.class)))
+                .isFalse();
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdRendererTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdRendererTest.java
new file mode 100644
index 00000000..02f53e1f
--- /dev/null
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdRendererTest.java
@@ -0,0 +1,215 @@
+package com.mopub.nativeads;
+
+import android.graphics.Bitmap;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.mopub.common.test.support.SdkTestRunner;
+import com.mopub.common.util.Utils;
+import com.mopub.mobileads.BuildConfig;
+import com.mopub.network.MaxWidthImageLoader;
+import com.mopub.network.MoPubRequestQueue;
+import com.mopub.network.Networking;
+import com.mopub.volley.toolbox.ImageLoader;
+
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.robolectric.annotation.Config;
+
+import static org.fest.assertions.api.Assertions.assertThat;
+import static org.mockito.Matchers.anyString;
+import static org.mockito.Matchers.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.stub;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.verifyNoMoreInteractions;
+import static org.mockito.Mockito.when;
+
+@RunWith(SdkTestRunner.class)
+@Config(constants = BuildConfig.class)
+public class MoPubVideoNativeAdRendererTest {
+    private MoPubVideoNativeAdRenderer subject;
+    private VideoNativeAd videoNativeAd;
+    @Mock private RelativeLayout relativeLayout;
+    @Mock private ViewGroup viewGroup;
+    private MediaViewBinder mediaViewBinder;
+    @Mock private TextView titleView;
+    @Mock private TextView textView;
+    @Mock private TextView callToActionView;
+    @Mock private MediaLayout mediaLayoutView;
+    @Mock private ImageView iconImageView;
+    @Mock private ImageView privacyInformationIconImageView;
+    @Mock private ImageView badView;
+    @Mock private MoPubRequestQueue mockRequestQueue;
+    @Mock private MaxWidthImageLoader mockImageLoader;
+    @Mock private ImageLoader.ImageContainer mockImageContainer;
+
+    @Before
+    public void setUp() throws Exception {
+        Networking.setRequestQueueForTesting(mockRequestQueue);
+        Networking.setImageLoaderForTesting(mockImageLoader);
+        stub(mockImageContainer.getBitmap()).toReturn(mock(Bitmap.class));
+
+        when(relativeLayout.getId()).thenReturn((int) Utils.generateUniqueId());
+
+        videoNativeAd = new VideoNativeAd() {
+
+            @Override
+            public void onStateChanged(final boolean playWhenReady, final int playbackState) {
+            }
+
+            @Override
+            public void onError(final Exception e) {
+            }
+        };
+        videoNativeAd.setTitle("test title");
+        videoNativeAd.setText("test text");
+        videoNativeAd.setCallToAction("test call to action");
+        videoNativeAd.setClickDestinationUrl("destinationUrl");
+        videoNativeAd.setMainImageUrl("testUrl");
+        videoNativeAd.setIconImageUrl("testUrl");
+        videoNativeAd.setVastVideo("test video");
+
+        setViewIdInLayout(titleView, relativeLayout);
+        setViewIdInLayout(textView, relativeLayout);
+        setViewIdInLayout(callToActionView, relativeLayout);
+        setViewIdInLayout(mediaLayoutView, relativeLayout);
+        setViewIdInLayout(iconImageView, relativeLayout);
+        setViewIdInLayout(privacyInformationIconImageView, relativeLayout);
+        setViewIdInLayout(badView, relativeLayout);
+
+        mediaViewBinder = new MediaViewBinder.Builder(relativeLayout.getId())
+                .titleId(titleView.getId())
+                .textId(textView.getId())
+                .callToActionId(callToActionView.getId())
+                .mediaLayoutId(mediaLayoutView.getId())
+                .iconImageId(iconImageView.getId())
+                .privacyInformationIconImageId(privacyInformationIconImageView.getId())
+                .build();
+
+        subject = new MoPubVideoNativeAdRenderer(mediaViewBinder);
+    }
+
+    private void setViewIdInLayout(View mockView, RelativeLayout mockLayout) {
+        int id = (int) Utils.generateUniqueId();
+        when(mockView.getId()).thenReturn(id);
+        when(mockLayout.findViewById(eq(id))).thenReturn(mockView);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void createAdView_withNullContext_shouldThrowNPE() {
+        subject.createAdView(null, viewGroup);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void renderAdView_withNullView_shouldThrowNPE() {
+        subject.renderAdView(null, videoNativeAd);
+    }
+
+    @Test(expected = NullPointerException.class)
+    public void renderAdView_withNullNativeAd_shouldThrowNPE() {
+        subject.renderAdView(relativeLayout, null);
+    }
+
+    @Rule public ExpectedException exception = ExpectedException.none();
+
+    @Test
+    public void renderAdView_withNullViewBinder_shouldThrowNPE() {
+        subject = new MoPubVideoNativeAdRenderer(null);
+
+        exception.expect(NullPointerException.class);
+        subject.renderAdView(relativeLayout, videoNativeAd);
+    }
+
+    @Test
+    public void renderAdView_shouldReturnPopulatedView() {
+        subject.renderAdView(relativeLayout, videoNativeAd);
+
+        verify(titleView).setText(eq("test title"));
+        verify(textView).setText(eq("test text"));
+        verify(callToActionView).setText(eq("test call to action"));
+
+        // not testing images due to testing complexity
+    }
+
+    @Test
+    public void renderAdView_withFailedViewBinder_shouldNotWriteViews() {
+        mediaViewBinder = new MediaViewBinder.Builder(relativeLayout.getId())
+                .titleId(titleView.getId())
+                .textId(badView.getId())
+                .callToActionId(callToActionView.getId())
+                .mediaLayoutId(mediaLayoutView.getId())
+                .iconImageId(iconImageView.getId())
+                .build();
+
+        subject = new MoPubVideoNativeAdRenderer(mediaViewBinder);
+        subject.renderAdView(relativeLayout, videoNativeAd);
+
+        verify(titleView, never()).setText(anyString());
+        verify(textView, never()).setText(anyString());
+        verify(callToActionView, never()).setText(anyString());
+        verify(mediaLayoutView, times(2)).getId();
+        verifyNoMoreInteractions(mediaLayoutView);
+        verify(iconImageView, times(2)).getId();
+        verifyNoMoreInteractions(iconImageView);
+    }
+
+    @Test
+    public void renderAdView_withNoViewHolder_shouldCreateNativeViewHolder() {
+        subject.renderAdView(relativeLayout, videoNativeAd);
+
+        MediaViewHolder expectedViewHolder = MediaViewHolder.fromViewBinder
+                (relativeLayout,
+                mediaViewBinder);
+        MediaViewHolder viewHolder = subject.mMediaViewHolderMap.get(relativeLayout);
+        compareNativeViewHolders(expectedViewHolder, viewHolder);
+    }
+
+    @Test
+    public void getOrCreateNativeViewHolder_withViewHolder_shouldNotReCreateNativeViewHolder() {
+        subject.renderAdView(relativeLayout, videoNativeAd);
+        MediaViewHolder expectedViewHolder = subject.mMediaViewHolderMap.get(relativeLayout);
+        subject.renderAdView(relativeLayout, videoNativeAd);
+
+        MediaViewHolder viewHolder = subject.mMediaViewHolderMap.get(relativeLayout);
+        assertThat(viewHolder).isEqualTo(expectedViewHolder);
+    }
+
+    static private void compareNativeViewHolders(final MediaViewHolder actualViewHolder,
+            final MediaViewHolder expectedViewHolder) {
+        assertThat(actualViewHolder.titleView).isEqualTo(expectedViewHolder.titleView);
+        assertThat(actualViewHolder.textView).isEqualTo(expectedViewHolder.textView);
+        assertThat(actualViewHolder.callToActionView).isEqualTo(expectedViewHolder.callToActionView);
+        assertThat(actualViewHolder.mediaLayout).isEqualTo(expectedViewHolder.mediaLayout);
+        assertThat(actualViewHolder.iconImageView).isEqualTo(expectedViewHolder.iconImageView);
+        assertThat(actualViewHolder.privacyInformationIconImageView).isEqualTo(
+                expectedViewHolder.privacyInformationIconImageView);
+    }
+
+    @Test
+    public void supports_withCorrectInstanceOfBaseNativeAd_shouldReturnTrue() throws Exception {
+        assertThat(subject.supports(new VideoNativeAd() {
+            @Override
+            public void onStateChanged(final boolean playWhenReady, final int playbackState) {
+            }
+
+            @Override
+            public void onError(final Exception e) {
+            }
+        })).isTrue();
+        assertThat(subject.supports(
+                mock(MoPubCustomEventVideoNative.MoPubVideoNativeAd.class))).isTrue();
+        assertThat(subject.supports(mock(BaseNativeAd.class))).isFalse();
+        assertThat(subject.supports(mock(MoPubCustomEventNative.MoPubStaticNativeAd.class)))
+                .isFalse();
+    }
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
index 742eda2b..f3cd7f58 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/MoPubVideoNativeAdTest.java
@@ -13,6 +13,7 @@
 import android.view.TextureView.SurfaceTextureListener;
 import android.view.View;
 
+import com.mopub.common.Constants;
 import com.mopub.common.event.EventDetails;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.BaseVideoPlayerActivity;
@@ -51,6 +52,7 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowApplication;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -130,6 +132,7 @@ public void setUp() throws Exception {
                 mockVisibilityTracker, mockNativeVideoControllerFactory, null,
                 "header click tracker", mockVastManager);
         subject.setNativeEventListener(mockNativeEventListener);
+        // noinspection unchecked
         when(mockNativeVideoControllerFactory
                 .createForId(anyInt(), any(Context.class), any(List.class), eq(mockVastVideoConfig),
                         any(EventDetails.class)))
@@ -207,7 +210,7 @@ public void loadAd_shouldPrecacheImages_andLoadVastXml() {
         verify(mockImageLoader).get(eq("iconimageurl"), any(ImageListener.class));
         verify(mockImageLoader).get(eq("extraimageurl"), any(ImageListener.class));
         verify(mockVastManager).prepareVastVideoConfiguration(eq("video"),
-                any(VastManager.VastManagerListener.class), any(Context.class));
+                any(VastManager.VastManagerListener.class), anyString(), any(Context.class));
     }
 
     @Test
@@ -216,6 +219,7 @@ public void onVastVideoConfigurationPrepared_withNullVastVideoConfig_shouldNotif
         verify(mockCustomEventNativeListener).onNativeAdFailed(NativeErrorCode.INVALID_RESPONSE);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldConstructNativeVideoController_shouldNotifyListenerOfAdLoaded() {
         subject.loadAd();
@@ -242,6 +246,7 @@ public void onVastVideoConfigurationPrepared_shouldConstructNativeVideoControlle
         verify(mockCustomEventNativeListener).onNativeAdLoaded(subject);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldMergeHeaderAndJsonClickTrackers() {
         final ArgumentCaptor<List> argumentCaptor = ArgumentCaptor.forClass(List.class);
@@ -260,6 +265,7 @@ public void onVastVideoConfigurationPrepared_shouldMergeHeaderAndJsonClickTracke
         assertThat(jsonClickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldDedupeHeaderAndJsonClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
@@ -277,6 +283,7 @@ public void onVastVideoConfigurationPrepared_shouldDedupeHeaderAndJsonClickTrack
         assertThat(clickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldAcceptJsonArrayClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
@@ -301,6 +308,7 @@ public void onVastVideoConfigurationPrepared_shouldAcceptJsonArrayClickTrackers(
         assertThat(headerClickTracker.isRepeatable()).isFalse();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void onVastVideoConfigurationPrepared_shouldDedupeJsonArrayClickTrackers() throws Exception {
         jsonObject.remove("clktracker");
@@ -517,9 +525,9 @@ public void MediaLayout_clickListener_shouldPrepareToLeaveView_shouldTriggerImpr
                 .isEqualTo(MraidVideoPlayerActivity.class.getName());
         assertThat(startedActivity.getStringExtra(BaseVideoPlayerActivity.VIDEO_CLASS_EXTRAS_KEY))
                 .isEqualTo("native");
-        assertThat(startedActivity.getLongExtra(NativeVideoViewController.NATIVE_VIDEO_ID, 0L))
+        assertThat(startedActivity.getLongExtra(Constants.NATIVE_VIDEO_ID, 0L))
                 .isGreaterThan(0L);
-        assertThat(startedActivity.getSerializableExtra(NativeVideoViewController
+        assertThat(startedActivity.getSerializableExtra(Constants
                 .NATIVE_VAST_VIDEO_CONFIG))
                 .isEqualTo(mockVastVideoConfig);
     }
@@ -855,6 +863,46 @@ public void applyState_withVideoStatePlayingEnded_withFinalFrame_shouldSetMainIm
         verify(mockMediaLayout).setMainImageDrawable(mockNativeVideoController.getFinalFrame());
     }
 
+    @Test
+    public void applyState_withVideoStatePause_afterVideoStatePlayingMuted_shouldFirePauseTrackers() {
+        final ArrayList<VastTracker> testList = new ArrayList<VastTracker>();
+        testList.add(new VastTracker("testUrl", true));
+
+        when(mockVastVideoConfig.getPauseTrackers()).thenReturn(testList);
+
+        subject.loadAd();
+        subject.onVastVideoConfigurationPrepared(mockVastVideoConfig);
+        subject.prepare(mockRootView);
+        subject.render(mockMediaLayout);
+
+        subject.applyState(VideoState.PLAYING_MUTED);
+        subject.applyState(VideoState.PAUSED);
+
+        verify(mockVastVideoConfig).getPauseTrackers();
+        verify(mockRequestQueue).add(argThat(isUrl("testUrl")));
+    }
+
+    @Test
+    public void applyState_withVideoStatePlayingMuted_afterPaused_afterPlaying_shouldFireResumeTrackers() {
+        final ArrayList<VastTracker> testList = new ArrayList<VastTracker>();
+        testList.add(new VastTracker("testResumeUrl", true));
+
+        when(mockVastVideoConfig.getResumeTrackers()).thenReturn(testList);
+
+        subject.loadAd();
+        subject.onVastVideoConfigurationPrepared(mockVastVideoConfig);
+        subject.prepare(mockRootView);
+        subject.render(mockMediaLayout);
+
+        subject.applyState(VideoState.PLAYING_MUTED);
+        subject.applyState(VideoState.PAUSED);
+        subject.applyState(VideoState.BUFFERING);
+        subject.applyState(VideoState.PLAYING_MUTED);
+
+        verify(mockVastVideoConfig).getPauseTrackers();
+        verify(mockRequestQueue).add(argThat(isUrl("testResumeUrl")));
+    }
+
     @Test
     public void HeaderVisibilityStrategy_execute_shouldNotifyAdImpressed() throws Exception {
         HeaderVisibilityStrategy headerVisibilityStrategy
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
index ff8d06b1..6946d3af 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeAdSourceTest.java
@@ -267,6 +267,7 @@ public void replenishCache_withRequestInFlight_shouldNotLoadNativeAd() {
         assertThat(subject.mRequestInFlight).isTrue();
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void replenishCache_withCacheSizeAtLimit_shouldNotLoadNativeAd() {
         // Default cache size may change in the future and this test will have to be updated
@@ -326,6 +327,7 @@ public void moPubNativeNetworkListener_onNativeLoad_shouldIncrementSequenceNumbe
         assertThat(subject.mSequenceNumber).isEqualTo(6);
     }
 
+    @SuppressWarnings("unchecked")
     @Test
     public void moPubNativeNetworkListener_onNativeLoad_withFullCache_shouldResetRequestInFlight() {
         subject.setMoPubNative(mockMoPubNative);
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
index 6e0f201e..b1574b84 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeClickHandlerTest.java
@@ -85,7 +85,7 @@ public void clearOnClickListener_shouldClearClickListenerFromViewHierarchy() thr
     public void handleClick_shouldShowSpinner_shouldRemoveSpinner_WhenSucceeded() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
 
         verify(mockSpinningProgressView).addToRoot(mockView);
 
@@ -108,8 +108,8 @@ public void handleClick_shouldShowSpinner_shouldRemoveSpinner_WhenFailed() {
     public void handleClick_shouldShowSpinnerOnceWhileClickIsResolving() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
-        subject.openClickDestinationUrl("http://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", mockView, mockSpinningProgressView);
 
         // only is called once
         verify(mockSpinningProgressView).addToRoot(mockView);
@@ -130,10 +130,10 @@ public void handleClick_withNullClickDestinationUrl_shouldNotThrowNPE_shouldDoNo
     public void handleClick_withNullView_shouldNotShowSpinner() {
         Robolectric.getBackgroundThreadScheduler().pause();
 
-        subject.openClickDestinationUrl("http://www.mopub.com", null, mockSpinningProgressView);
+        subject.openClickDestinationUrl("https://www.mopub.com", null, mockSpinningProgressView);
 
         verify(mockSpinningProgressView, never()).addToRoot(mockView);
         Robolectric.getBackgroundThreadScheduler().unPause();
         verify(mockSpinningProgressView, never()).removeFromRoot();
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
index 33bd9b0c..b7f167b6 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeUrlGeneratorTest.java
@@ -18,7 +18,6 @@
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.BuildConfig;
 import com.mopub.mobileads.test.support.MoPubShadowTelephonyManager;
-import com.mopub.network.Networking;
 
 import org.junit.Before;
 import org.junit.Test;
@@ -36,6 +35,7 @@
 import java.util.EnumSet;
 import java.util.List;
 
+import static android.Manifest.permission.ACCESS_FINE_LOCATION;
 import static android.Manifest.permission.ACCESS_NETWORK_STATE;
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Matchers.any;
@@ -57,9 +57,9 @@
 
     @Before
     public void setup() {
-        Networking.useHttps(false);
         context = spy(Robolectric.buildActivity(Activity.class).create().get());
         Shadows.shadowOf(context).grantPermissions(ACCESS_NETWORK_STATE);
+        Shadows.shadowOf(context).grantPermissions(ACCESS_FINE_LOCATION);
         when(context.getPackageName()).thenReturn("testBundle");
         shadowTelephonyManager = (MoPubShadowTelephonyManager)
                 Shadows.shadowOf((TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE));
@@ -290,7 +290,7 @@ public void generateUrlString_withOnlyAdUnitSet_shouldReturnMinimumUrl() {
         assertThat(adUrl).isEqualTo(
                 "http://ads.mopub.com/m/ad?id=" +
                         AD_UNIT_ID +
-                        "&nsv=" + MoPub.SDK_VERSION + 
+                        "&nsv=" + Uri.encode(MoPub.SDK_VERSION) +
                         "&dn=unknown%2Cunknown%2Cunknown" +
                         "&bundle=testBundle" +
                         "&z=-0700" +
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
index 11fa6062..c31c2167 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoControllerTest.java
@@ -33,6 +33,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
+import org.mockito.Mockito;
 import org.robolectric.Robolectric;
 import org.robolectric.annotation.Config;
 import org.robolectric.util.ReflectionHelpers;
@@ -72,6 +73,7 @@
     private ArrayList<VisibilityTrackingEvent> visibilityTrackingEvents;
     private VastVideoConfig vastVideoConfig;
     private NativeVideoProgressRunnable nativeVideoProgressRunnable;
+    private NativeVideoProgressRunnable spyNativeVideoProgressRunnable;
     @Mock private ExoPlayer mockExoPlayer;
     @Mock private NativeVideoProgressRunnable mockNativeVideoProgressRunnable;
     @Mock private TextureView mockTextureView;
@@ -164,6 +166,7 @@ public ExoPlayer newInstance(int rendererCount, int minBufferMs,
         nativeVideoProgressRunnable.setTextureView(mockTextureView);
         nativeVideoProgressRunnable.setExoPlayer(mockExoPlayer);
         nativeVideoProgressRunnable.setProgressListener(mockProgressListener);
+        spyNativeVideoProgressRunnable = Mockito.spy(nativeVideoProgressRunnable);
 
         Networking.setRequestQueueForTesting(mockRequestQueue);
     }
@@ -193,7 +196,7 @@ public void setPlayWhenReady_shouldUpdatePlayWhenReady() {
     }
 
     @Test
-    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_shouldStartVideoProgressRunnable() {
+    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_shouldSetPlayeWhenReadyOnExoPlayer() {
         subject.prepare(this);
         reset(mockNativeVideoProgressRunnable);
 
@@ -202,38 +205,6 @@ public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyTrue_should
         subject.setPlayWhenReady(true);
 
         verify(mockExoPlayer).setPlayWhenReady(true);
-        verify(mockNativeVideoProgressRunnable).startRepeating(50);
-    }
-
-    @Test
-    public void setPlayWhenReady_withPlayBackStateNotReady_withPlayWhenReadyTrue_shouldStopVideoProgressRunnable() {
-        subject.prepare(this);
-        reset(mockNativeVideoProgressRunnable);
-
-        when(mockExoPlayer.getPlaybackState()).thenReturn(STATE_PREPARING);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(true);
-        subject.setPlayWhenReady(true);
-
-        verify(mockExoPlayer).setPlayWhenReady(true);
-        verify(mockNativeVideoProgressRunnable).stop();
-        verify(mockNativeVideoProgressRunnable, never()).startRepeating(anyInt());
-    }
-
-    @Test
-    public void setPlayWhenReady_withPlayBackStateReady_withPlayWhenReadyFalse_shouldStopVideoProgressRunnable() {
-        subject.prepare(this);
-        // initialize the subject to true so that the next call with false will run
-        subject.setPlayWhenReady(true);
-        reset(mockNativeVideoProgressRunnable);
-        reset(mockExoPlayer);
-
-        when(mockExoPlayer.getPlaybackState()).thenReturn(STATE_READY);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(false);
-        subject.setPlayWhenReady(false);
-
-        verify(mockExoPlayer).setPlayWhenReady(false);
-        verify(mockNativeVideoProgressRunnable).stop();
-        verify(mockNativeVideoProgressRunnable, never()).startRepeating(anyInt());
     }
 
     @Test
@@ -346,6 +317,7 @@ public void prepare_shouldClearExistingPlayer() {
                 eq(MediaCodecVideoTrackRenderer.MSG_SET_SURFACE), eq(null));
         verify(mockExoPlayer).stop();
         verify(mockExoPlayer).release();
+        verify(mockNativeVideoProgressRunnable).stop();
         verify(mockNativeVideoProgressRunnable).setExoPlayer(null);
     }
 
@@ -364,6 +336,7 @@ public void prepare_shouldPreparePlayer() {
 
         verify(mockExoPlayerFactory).newInstance(2, 1000, 5000);
         verify(mockNativeVideoProgressRunnable).setExoPlayer(mockExoPlayer);
+        verify(mockNativeVideoProgressRunnable).startRepeating(50);
         verify(mockExoPlayer).addListener(subject);
         verify(mockExoPlayer).prepare(any(MediaCodecAudioTrackRenderer.class),
                 any(MediaCodecVideoTrackRenderer.class));
@@ -376,7 +349,6 @@ public void prepare_shouldPreparePlayer() {
 
         // play when ready
         verify(mockExoPlayer).setPlayWhenReady(false);
-        verify(mockNativeVideoProgressRunnable).stop();
 
         // set surface
         verify(mockExoPlayer).sendMessage(any(MediaCodecVideoTrackRenderer.class),
@@ -434,19 +406,7 @@ public void release_withMismatchingOwner_shouldNotClearExistingPlayer() {
     }
 
     @Test
-    public void onPlayerStateChanged_withPlayWhenReadyTrue_withStateReady_shouldStartProgressRunnable() {
-        subject.prepare(this);
-
-        reset(mockExoPlayer);
-        reset(mockNativeVideoProgressRunnable);
-        subject.onPlayerStateChanged(true, STATE_READY);
-
-        verify(mockNativeVideoProgressRunnable).startRepeating(50);
-    }
-
-
-    @Test
-    public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame() {
+    public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame_shouldRequestProgressRunnableToStop() {
         subject.setTextureView(mockTextureView);
         subject.prepare(this);
 
@@ -459,6 +419,7 @@ public void onPlayerStateChanged_withStateEnded_shouldSetFinalFrame() {
         assertThat(subject.hasFinalFrame()).isTrue();
         assertThat(subject.getFinalFrame()).isNotNull();
         assertThat(((BitmapDrawable) subject.getFinalFrame()).getBitmap()).isEqualTo(mockBitmap);
+        verify(mockNativeVideoProgressRunnable).requestStop();
     }
 
     @Test
@@ -495,12 +456,13 @@ public void getDuration_shouldReturnProgressRunnableDuration() {
     }
 
     @Test
-    public void onPlayerError_shouldNotifyListener() {
+    public void onPlayerError_shouldNotifyListener_shouldRequestProgressRunnableToStop() {
         ExoPlaybackException exoPlaybackException = new ExoPlaybackException("exception");
         subject.setListener(mockListener);
         subject.onPlayerError(exoPlaybackException);
 
         verify(mockListener).onError(exoPlaybackException);
+        verify(mockNativeVideoProgressRunnable).requestStop();
     }
 
     @Test
@@ -628,37 +590,35 @@ public void NativeVideoProgressRunnable_doWork_withExoPlayerGetPlayWhenReadyFals
     }
 
     @Test
-    public void NativeVideoProgressRunnable_doWork_withDurationLessThan0_shouldReturnFast() {
-        when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
-        when(mockExoPlayer.getDuration()).thenReturn(-1L);
-        when(mockExoPlayer.getPlayWhenReady()).thenReturn(true);
-
-        VastTracker vastTracker = new VastTracker("vastTrackingUrl");
-        List<VastTracker> vastTrackers = new ArrayList<VastTracker>();
-        vastTrackers.add(vastTracker);
-        when(mockVastVideoConfig.getUntriggeredTrackersBefore(10, 25)).thenReturn(vastTrackers);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerNotTrackedEvents_shouldNotStopRunnable() {
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
+        when(mockExoPlayer.getDuration()).thenReturn(50L);
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
+                .thenReturn(true);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
 
-        nativeVideoProgressRunnable.doWork();
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
-        assertThat(visibilityTrackingEvents.get(0).isTracked).isFalse();
-        assertThat(visibilityTrackingEvents.get(1).isTracked).isFalse();
-        assertThat(vastTracker.isTracked()).isFalse();
-        verifyNoMoreInteractions(mockVisibilityChecker);
-        verifyNoMoreInteractions(mockVastVideoConfig);
-        verifyNoMoreInteractions(mockRequestQueue);
-        verifyNoMoreInteractions(mockProgressListener);
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable,never()).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerNotTrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_withStopRequested_shouldOnlyTriggerNotTrackedEvents_shouldStopRunnable() {
+        // Enough time has passed for all impressions to trigger organically
         when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
         when(mockExoPlayer.getDuration()).thenReturn(50L);
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
                 .thenReturn(true);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(false);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
@@ -666,17 +626,40 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldOnlyTriggerNotTrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldOnlyTriggerNotTrackedEvents_shouldNotStopRunnable() {
+        // Not enough time has passed for impressions to trigger organically, but all of them will
+        // be triggered because forceTrigger is true
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(5L);
+        when(mockExoPlayer.getDuration()).thenReturn(50L);
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
+                .thenReturn(true);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
+
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
+    }
+
+    @Test
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_withStopRequested_shouldOnlyTriggerNotTrackedEvents_shouldStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(50L);
         when(mockExoPlayer.getDuration()).thenReturn(50L);
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), anyInt()))
                 .thenReturn(true);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(50);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(true);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
@@ -684,12 +667,18 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_shouldOnlyTriggerVisibleAndPlayedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerFalse_withStopRequested_shouldOnlyTriggerVisibleAndPlayedEvents_shouldNotStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
         when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
         // trackingUrl1: visible & played = track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
                 .thenReturn(true);
@@ -702,9 +691,10 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         // trackingUrl4: !visible & played = !track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
                 .thenReturn(false);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(false);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ false);
 
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isFalse();
@@ -714,12 +704,18 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
     }
 
     @Test
-    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldTriggerAllUntrackedEvents() {
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_shouldTriggerAllUntrackedEvents_shouldNotStopRunnable() {
         when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
         when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
         // trackingUrl1: visible & played = track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
                 .thenReturn(true);
@@ -732,10 +728,49 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         // trackingUrl4: !visible & played = !track
         when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
                 .thenReturn(false);
-        nativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
+
+        // Because forceTrigger was true, tracking of all impressions is forced
+        assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
+        assertThat(visibilityTrackingEvents.get(3).isTracked).isTrue();
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl1")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
+        verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
+        verify(mockRequestQueue).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable, never()).stop();
+    }
+
+    @Test
+    public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTriggerTrue_withStopRequested_shouldTriggerAllUntrackedEvents_shouldStopRunnable() {
+        when(mockExoPlayer.getCurrentPosition()).thenReturn(10L);
+        when(mockExoPlayer.getDuration()).thenReturn(10L);
+
+        // visible: checks whether the minimum percentage visible is met
+        // played: checks whether the required playtime is met
+        // track: whether the impression should be organically triggered
+
+        // trackingUrl1: visible & played = track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(10)))
+                .thenReturn(true);
+        // trackingUrl2: visible & !played = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(20)))
+                .thenReturn(true);
+        // trackingUrl3: already tracked = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(30)))
+                .thenReturn(true);
+        // trackingUrl4: !visible & played = !track
+        when(mockVisibilityChecker.isVisible(eq(mockTextureView), eq(mockTextureView), eq(9)))
+                .thenReturn(false);
+        spyNativeVideoProgressRunnable.setUpdateIntervalMillis(10);
+        spyNativeVideoProgressRunnable.requestStop();
 
-        nativeVideoProgressRunnable.checkImpressionTrackers(true);
+        spyNativeVideoProgressRunnable.checkImpressionTrackers(/* forceTrigger = */ true);
 
+        // Because forceTrigger was true, tracking of all impressions is forced
         assertThat(visibilityTrackingEvents.get(0).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(1).isTracked).isTrue();
         assertThat(visibilityTrackingEvents.get(2).isTracked).isTrue();
@@ -744,5 +779,6 @@ public void NativeVideoProgressRunnable_checkImpressionTrackers_withForceTrigger
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl2")));
         verify(mockRequestQueue, never()).add(argThat(isUrl("trackingUrl3")));
         verify(mockRequestQueue).add(argThat(isUrl("trackingUrl4")));
+        verify(spyNativeVideoProgressRunnable).stop();
     }
 }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
index 79307f38..6c35d102 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/NativeVideoViewControllerTest.java
@@ -12,6 +12,7 @@
 import android.view.View;
 import android.view.ViewGroup.LayoutParams;
 
+import com.mopub.common.Constants;
 import com.mopub.common.MoPubBrowser;
 import com.mopub.common.test.support.SdkTestRunner;
 import com.mopub.mobileads.BaseVideoViewController.BaseVideoViewControllerListener;
@@ -63,13 +64,13 @@ public void setUp() {
         activity = Robolectric.buildActivity(Activity.class).create().get();
 
         intentExtras = new Bundle();
-        intentExtras.putLong(NativeVideoViewController.NATIVE_VIDEO_ID, 123);
+        intentExtras.putLong(Constants.NATIVE_VIDEO_ID, 123);
         NativeVideoController.setForId(123, mockVideoController);
 
         when(mockVastVideoConfig.getCustomCtaText()).thenReturn("Learn More");
         when(mockFullScreenVideoView.getTextureView()).thenReturn(mockTextureView);
         when(mockTextureView.getBitmap()).thenReturn(mockBitmap);
-        intentExtras.putSerializable(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
+        intentExtras.putSerializable(Constants.NATIVE_VAST_VIDEO_CONFIG, mockVastVideoConfig);
 
         subject = new NativeVideoViewController(activity, intentExtras, null,
                 mockBaseVideoViewControllerListener, mockFullScreenVideoView);
@@ -100,7 +101,7 @@ public void constructor_withNullNativeVideoController_shouldThrowNPE() {
 
     @Test(expected = NullPointerException.class)
     public void onCreate_withNullNativeVideoController_shouldThrowNPE() {
-        intentExtras.remove(NativeVideoViewController.NATIVE_VAST_VIDEO_CONFIG);
+        intentExtras.remove(Constants.NATIVE_VAST_VIDEO_CONFIG);
         subject = new NativeVideoViewController(activity, intentExtras, null,
                 mockBaseVideoViewControllerListener, mockFullScreenVideoView);
     }
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
index 8cf41406..5f42e4ac 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/PositioningRequestTest.java
@@ -23,7 +23,7 @@
 @Config(constants = BuildConfig.class)
 public class PositioningRequestTest {
 
-    String url = "http://example.com";
+    String url = "https://example.com";
     @Mock
     Response.Listener<MoPubNativeAdPositioning.MoPubClientPositioning> mockListener;
     @Mock
@@ -144,4 +144,4 @@ private void checkException(String json, String expectedMessage) throws Exceptio
         }
         fail("Should have received an exception");
     }
-}
\ No newline at end of file
+}
diff --git a/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java b/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
index 5eb3c14a..c176e2a4 100644
--- a/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/nativeads/VisibilityTrackerTest.java
@@ -93,9 +93,9 @@ public void constructor_shouldSetOnPreDrawListenerForDecorView() throws Exceptio
         when(viewTreeObserver.isAlive()).thenReturn(true);
 
         subject = new VisibilityTracker(activity1, trackedViews, visibilityChecker, visibilityHandler);
-        assertThat(subject.mRootView.get()).isEqualTo(decorView);
         assertThat(subject.mOnPreDrawListener).isNotNull();
         verify(viewTreeObserver).addOnPreDrawListener(subject.mOnPreDrawListener);
+        assertThat(subject.mWeakViewTreeObserver.get()).isEqualTo(viewTreeObserver);
     }
 
     @Test
@@ -111,9 +111,72 @@ public void constructor_withNonAliveViewTreeObserver_shouldNotSetOnPreDrawListen
         when(viewTreeObserver.isAlive()).thenReturn(false);
 
         subject = new VisibilityTracker(activity1, trackedViews, visibilityChecker, visibilityHandler);
-        assertThat(subject.mRootView.get()).isEqualTo(decorView);
-        assertThat(subject.mOnPreDrawListener).isNull();
         verify(viewTreeObserver, never()).addOnPreDrawListener(subject.mOnPreDrawListener);
+        assertThat(subject.mWeakViewTreeObserver.get()).isNull();
+    }
+
+    @Test
+    public void constructor_withApplicationContext_shouldNotSetOnPreDrawListener() {
+        subject = new VisibilityTracker(activity.getApplicationContext(), trackedViews,
+                visibilityChecker, visibilityHandler);
+
+        assertThat(subject.mWeakViewTreeObserver.get()).isNull();
+    }
+
+    @Test
+    public void getBestRootView_withActivity_withNullView_shouldReturnActivityDecorView() {
+        Activity activity1 = mock(Activity.class);
+        Window window = mock(Window.class);
+        View decorView = mock(View.class);
+        ViewTreeObserver viewTreeObserver = mock(ViewTreeObserver.class);
+
+        when(activity1.getWindow()).thenReturn(window);
+        when(window.getDecorView()).thenReturn(decorView);
+        when(decorView.getViewTreeObserver()).thenReturn(viewTreeObserver);
+        when(viewTreeObserver.isAlive()).thenReturn(true);
+
+        View view = VisibilityTracker.getBestRootView(activity1, null);
+
+        assertThat(view).isEqualTo(decorView);
+    }
+
+    @Test
+    public void getBestRootView_withApplicationContext_withRootView_shouldReturnRootView() {
+        View rootView = new View(activity.getApplicationContext());
+
+        View view = VisibilityTracker.getBestRootView(activity.getApplicationContext(), rootView);
+
+        assertThat(view).isEqualTo(rootView);
+    }
+
+    @Test
+    public void getBestRootView_withApplicationContext_withContentView_shouldReturnContentView() {
+        View rootView = mock(View.class);
+        View contentView = mock(View.class);
+
+        when(rootView.findViewById(android.R.id.content)).thenReturn(contentView);
+        when(rootView.getRootView()).thenReturn(rootView);
+
+        View view = VisibilityTracker.getBestRootView(activity.getApplicationContext(), rootView);
+
+        assertThat(view).isEqualTo(contentView);
+    }
+
+    @Test
+    public void getBestRootView_withApplicationContext_withNullView_shouldReturnNull() {
+        View view = VisibilityTracker.getBestRootView(activity.getApplicationContext(), null);
+
+        assertThat(view).isNull();
+    }
+
+    @Test
+    public void getBestRootView_withApplicationContext_withNullRootView_withNullParentView_shouldReturnNull() {
+        View originalView = mock(View.class);
+        when(originalView.getRootView()).thenReturn(null);
+
+        View view = VisibilityTracker.getBestRootView(activity.getApplicationContext(), originalView);
+
+        assertThat(view).isNull();
     }
 
     @Test
@@ -123,7 +186,24 @@ public void addView_withVisibleView_shouldAddVisibleViewToTrackedViews() throws
         assertThat(trackedViews).hasSize(1);
     }
 
-    @Test(expected = AssertionError.class)
+    @Test
+    public void addView_withViewTreeObserverNotSet_shouldSetViewTreeObserver() {
+        ViewTreeObserver viewTreeObserver = mock(ViewTreeObserver.class);
+        View rootView = mock(View.class);
+
+        when(view.getContext()).thenReturn(activity.getApplicationContext());
+        when(view.getRootView()).thenReturn(rootView);
+        when(rootView.getViewTreeObserver()).thenReturn(viewTreeObserver);
+        when(viewTreeObserver.isAlive()).thenReturn(true);
+
+        subject = new VisibilityTracker(activity.getApplicationContext(), trackedViews,
+                visibilityChecker, visibilityHandler);
+        subject.addView(view, MIN_PERCENTAGE_VIEWED);
+
+        assertThat(subject.mWeakViewTreeObserver.get()).isEqualTo(viewTreeObserver);
+    }
+
+    @Test(expected = NullPointerException.class)
     public void addView_whenViewIsNull_shouldThrowNPE() throws Exception {
         subject.addView(null, MIN_PERCENTAGE_VIEWED);
 
@@ -177,7 +257,7 @@ public void destroy_shouldCallClear_shouldRemoveListenerFromDecorView() throws E
         assertThat(trackedViews).isEmpty();
         verify(visibilityHandler).removeMessages(0);
         verify(viewTreeObserver).removeOnPreDrawListener(any(OnPreDrawListener.class));
-        assertThat(subject.mOnPreDrawListener).isNull();
+        assertThat(subject.mWeakViewTreeObserver.get()).isNull();
     }
 
     @Test
@@ -199,6 +279,7 @@ public void visibilityRunnable_run_withNonVisibleView_shouldCallOnNonVisibleCall
 
         ArgumentCaptor<List> visibleCaptor = ArgumentCaptor.forClass(List.class);
         ArgumentCaptor<List> invisibleCaptor = ArgumentCaptor.forClass(List.class);
+        // noinspection unchecked
         verify(visibilityTrackerListener).onVisibilityChanged(visibleCaptor.capture(),
                 invisibleCaptor.capture());
         assertThat(visibleCaptor.getValue().size()).isEqualTo(0);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java b/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
index e15ea711..4c3c70e8 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/AdRequestTest.java
@@ -342,6 +342,25 @@ public void parseNetworkResponse_withBadJSON_shouldReturnError() {
         assertThat(response.error.getCause()).isExactlyInstanceOf(JSONException.class);
     }
 
+    @Test
+    public void parseNetworkResponse_forRewardedVideo_shouldSucceed() {
+        defaultHeaders.put(ResponseHeader.AD_TYPE.getKey(), AdType.REWARDED_VIDEO);
+        defaultHeaders.put(ResponseHeader.REWARDED_VIDEO_CURRENCY_NAME.getKey(), "currencyName");
+        defaultHeaders.put(ResponseHeader.REWARDED_VIDEO_CURRENCY_AMOUNT.getKey(), "25");
+        defaultHeaders.put(ResponseHeader.REWARDED_VIDEO_COMPLETION_URL.getKey(),
+                "http://completionUrl");
+        NetworkResponse testResponse = new NetworkResponse(200,
+                "{\"abc\": \"def\"}".getBytes(Charset.defaultCharset()), defaultHeaders, false);
+
+        final Response<AdResponse> response = subject.parseNetworkResponse(testResponse);
+
+        assertThat(response.result.getAdType()).isEqualTo(AdType.REWARDED_VIDEO);
+        assertThat(response.result.getRewardedVideoCurrencyName()).isEqualTo("currencyName");
+        assertThat(response.result.getRewardedVideoCurrencyAmount()).isEqualTo("25");
+        assertThat(response.result.getRewardedVideoCompletionUrl()).isEqualTo(
+                "http://completionUrl");
+    }
+
     @Test
     public void deliverResponse_shouldCallListenerOnSuccess() throws Exception {
         subject.deliverResponse(mockAdResponse);
@@ -350,7 +369,7 @@ public void deliverResponse_shouldCallListenerOnSuccess() throws Exception {
 
     @Test
     public void getRequestId_shouldParseAndReturnRequestIdFromFailUrl() throws Exception {
-        String requestId = subject.getRequestId("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca&exclude=043fde1fe2f9470c9aa67fec262a0596&request_id=7fd6dd3bf1c84f87876b4740c1dd7baa&fail=1");
+        String requestId = subject.getRequestId("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca&exclude=043fde1fe2f9470c9aa67fec262a0596&request_id=7fd6dd3bf1c84f87876b4740c1dd7baa&fail=1");
 
         assertThat(requestId).isEqualTo("7fd6dd3bf1c84f87876b4740c1dd7baa");
     }
@@ -362,7 +381,7 @@ public void getRequestId_withNullFailUrl_shouldReturnNull() throws Exception {
 
     @Test
     public void getRequestId_withUrlWithNoRequestIdParam_shouldReturnNull() throws Exception {
-        assertThat(subject.getRequestId("http://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")).isNull();
+        assertThat(subject.getRequestId("https://ads.mopub.com/m/ad?id=8cf00598d3664adaaeccd800e46afaca")).isNull();
     }
 
     @Test
@@ -447,7 +466,7 @@ public Object answer(InvocationOnMock invocation) throws Throwable {
                 assertThat(baseEvent.getCategory()).isEqualTo(BaseEvent.Category.REQUESTS);
                 assertThat(baseEvent.getSamplingRate()).isEqualTo(0.1);
                 assertThat(baseEvent.getAdUnitId()).isEqualTo(adUnitId);
-                assertThat(baseEvent.getAdCreativeId()).isEqualTo("dsp_creative_id");
+                assertThat(baseEvent.getDspCreativeId()).isEqualTo("dsp_creative_id");
                 assertThat(baseEvent.getAdType()).isEqualTo("html");
                 assertThat(baseEvent.getAdNetworkType()).isEqualTo("network_type");
                 assertThat(baseEvent.getAdWidthPx()).isEqualTo(320);
diff --git a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
index b5137256..042df01a 100644
--- a/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
+++ b/mopub-sdk/src/test/java/com/mopub/network/PlayServicesUrlRewriterTest.java
@@ -49,8 +49,8 @@ public void rewriteUrl_whenPlayServicesPresent_shouldUsePlayServicesValue() thro
                 adInfo.LIMIT_AD_TRACKING_ENABLED
         );
 
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
-                .isEqualToIgnoringCase("http://ads.mopub.com/m/ad?ad_id=abcece&udid=ifa%3A38400000-8cf0-11bd-b23e-10b96e40000d&dnt=1");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
+                .isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid=ifa%3A38400000-8cf0-11bd-b23e-10b96e40000d&dnt=1");
     }
 
     @Test
@@ -60,12 +60,12 @@ public void rewriteUrl_whenPlayServicesNotPresent_shouldUseDeviceValue() throws
         // return error code so it fails
         when(methodBuilder.execute()).thenReturn(GpsHelper.GOOGLE_PLAY_SUCCESS_CODE + 1);
 
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
-                .isEqualToIgnoringCase("http://ads.mopub.com/m/ad?ad_id=abcece&udid=sha%3AtestDeviceId&dnt=0");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad?ad_id=abcece&udid=mp_tmpl_advertising_id&dnt=mp_tmpl_do_not_track"))
+                .isEqualToIgnoringCase("https://ads.mopub.com/m/ad?ad_id=abcece&udid=sha%3AtestDeviceId&dnt=0");
     }
 
     @Test
     public void rewriteUrl_noTemplates_shouldReturnIdentical() throws Exception {
-        assertThat(subject.rewriteUrl("http://ads.mopub.com/m/ad")).isEqualTo("http://ads.mopub.com/m/ad");
+        assertThat(subject.rewriteUrl("https://ads.mopub.com/m/ad")).isEqualTo("https://ads.mopub.com/m/ad");
     }
 }
diff --git a/mopub-sdk/src/test/resources/robolectric.properties b/mopub-sdk/src/test/resources/robolectric.properties
index dbe9f738..3cbe9a8d 100644
--- a/mopub-sdk/src/test/resources/robolectric.properties
+++ b/mopub-sdk/src/test/resources/robolectric.properties
@@ -1,2 +1,3 @@
 sdk=21
 shadows=com.mopub.nativeads.test.support.MoPubShadowDisplay,com.mopub.nativeads.test.support.MoPubShadowBitmap,com.mopub.mobileads.test.support.ShadowVastVideoView
+manifest=src/main/AndroidManifest.xml
\ No newline at end of file
diff --git a/robotium-sample/AndroidManifest.xml b/robotium-sample/AndroidManifest.xml
deleted file mode 100644
index c4277cd0..00000000
--- a/robotium-sample/AndroidManifest.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="com.mopub.mobileads.robotium"
-      android:versionCode="1"
-      android:versionName="1.0">
-    <uses-sdk
-        android:minSdkVersion="9"
-        android:targetSdkVersion="19"/>
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    
-    <application android:label="Cool Activity">
-	    <activity android:name=".RobotiumTestSupportActivity"
-	            android:label="Cool Activity" android:theme="@android:style/Theme.NoTitleBar" >
-	        <intent-filter>
-	            <action android:name="android.intent.action.MAIN" />
-	            <category android:name="android.intent.category.LAUNCHER" />
-	        </intent-filter>
-	    </activity>
-
-        <activity android:name="com.mopub.mobileads.MoPubActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.mobileads.MraidActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.common.MoPubBrowser"
-                android:configChanges="keyboardHidden|orientation"/>
-        <activity android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-                android:configChanges="keyboardHidden|orientation"/>
-    </application>
-
-</manifest>
diff --git a/robotium-sample/pom.xml b/robotium-sample/pom.xml
deleted file mode 100644
index 468cbf9b..00000000
--- a/robotium-sample/pom.xml
+++ /dev/null
@@ -1,115 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>com.mopub.mobileads</groupId>
-        <artifactId>mopub-android</artifactId>
-        <version>1.0</version>
-    </parent>
-
-    <artifactId>robotium-sample</artifactId>
-    <version>1.0.0-SNAPSHOT</version>
-    <packaging>apk</packaging>
-    <name>MoPub Robotium Sample</name>
-    <description>Sample application that can be exercised by Robotium.</description>
-
-    <dependencies>
-
-        <!--main-->
-        <dependency>
-            <groupId>com.mopub.mobileads</groupId>
-            <artifactId>mopub-sdk</artifactId>
-            <version>1.0.0-SNAPSHOT</version>
-            <type>aar</type>
-        </dependency>
-
-
-        <!--test-->
-
-        <dependency>
-            <groupId>com.squareup</groupId>
-            <artifactId>fest-android</artifactId>
-            <version>1.0.1</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!-- this needs to come above fest-reflect or we pick up the wrong org.fest.util.Strings -->
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-assert-core</artifactId>
-            <version>2.0M9</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.easytesting</groupId>
-            <artifactId>fest-reflect</artifactId>
-            <version>1.4</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.8.2</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-            <version>1.9.5</version>
-            <scope>test</scope>
-        </dependency>
-
-        <!--android -->
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>4.4.2</version>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.artifactId}</finalName>
-
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.3.2</version>
-                <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>4.2.0</version>
-                <configuration>
-                    <androidManifestFile>AndroidManifest.xml</androidManifestFile>
-                    <resourceDirectory>res</resourceDirectory>
-                    <sdk>
-                        <!-- platform or api level (api level 4 = platform 1.6)-->
-                        <platform>22</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>2.6</version>
-                <configuration>
-                    <excludes>
-                        <exclude>**/Test*.java</exclude>
-                    </excludes>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/robotium-sample/res/layout/main.xml b/robotium-sample/res/layout/main.xml
deleted file mode 100644
index f8b562bf..00000000
--- a/robotium-sample/res/layout/main.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:layout_width="fill_parent"
-              android:layout_height="fill_parent">
-
-    <EditText
-            android:id="@+id/banner_adunit_id_field"
-            android:hint="Enter banner adunit ID"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            >
-    </EditText>
-
-    <Button
-            android:id="@+id/banner_load_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Load Banner"
-            >
-    </Button>
-
-    <com.mopub.mobileads.MoPubView
-            android:id="@+id/mopubview"
-            android:layout_width="320dp"
-            android:layout_height="50dp"
-            >
-    </com.mopub.mobileads.MoPubView>
-
-    <EditText
-            android:id="@+id/interstitial_adunit_id_field"
-            android:hint="Enter interstitial adunit ID"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            >
-    </EditText>
-
-    <Button
-            android:id="@+id/interstitial_load_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Load Interstitial"
-            >
-    </Button>
-
-    <Button
-            android:id="@+id/interstitial_show_button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="20dp"
-            android:text="Show Interstitial"
-            >
-    </Button>
-
-</LinearLayout>
diff --git a/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java b/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java
deleted file mode 100644
index 217d8db8..00000000
--- a/robotium-sample/src/main/java/com/mopub/mobileads/robotium/RobotiumTestSupportActivity.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.mopub.mobileads.robotium;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mopub.mobileads.MoPubInterstitial;
-import com.mopub.mobileads.MoPubView;
-
-import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
-
-public class RobotiumTestSupportActivity extends Activity {
-
-    private MoPubView moPubView;
-    private String bannerAdUnitId;
-    private EditText bannerEditText;
-    private InterstitialAdListener interstitialListener;
-    private EditText interstitialEditText;
-    private MoPubInterstitial moPubInterstitial;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
-
-        moPubView = (MoPubView) findViewById(R.id.mopubview);
-        bannerEditText = (EditText) findViewById(R.id.banner_adunit_id_field);
-        interstitialEditText = (EditText) findViewById(R.id.interstitial_adunit_id_field);
-
-        // Banners
-        Button loadBannerButton = (Button) findViewById(R.id.banner_load_button);
-        loadBannerButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                bannerAdUnitId = bannerEditText.getText().toString();
-                moPubView.setAdUnitId(bannerAdUnitId);
-                moPubView.loadAd();
-            }
-        });
-
-        // Interstitials
-        Button loadInterstitialButton = (Button) findViewById(R.id.interstitial_load_button);
-        loadInterstitialButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String interstitialAdUnitId = interstitialEditText.getText().toString();
-                moPubInterstitial = new MoPubInterstitial(RobotiumTestSupportActivity.this, interstitialAdUnitId);
-                moPubInterstitial.setInterstitialAdListener(interstitialListener);
-                moPubInterstitial.load();
-            }
-        });
-
-        Button showInterstitialButton = (Button) findViewById(R.id.interstitial_show_button);
-        showInterstitialButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (moPubInterstitial != null && moPubInterstitial.isReady()) {
-                    moPubInterstitial.show();
-                }
-            }
-        });
-    }
-
-    @Override
-    protected void onDestroy() {
-        if (moPubView != null) moPubView.destroy();
-        if (moPubInterstitial != null) moPubInterstitial.destroy();
-        super.onDestroy();
-    }
-
-    public void setInterstitialListener(InterstitialAdListener interstitialListener) {
-        this.interstitialListener = interstitialListener;
-    }
-}
diff --git a/robotium-tests/AndroidManifest.xml b/robotium-tests/AndroidManifest.xml
deleted file mode 100644
index 43a6b6d4..00000000
--- a/robotium-tests/AndroidManifest.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-		package="com.mopub.mobileads.test"
-		android:versionCode="1"
-		android:versionName="1.0">
-    <uses-sdk
-        android:minSdkVersion="9"
-        android:targetSdkVersion="19"/>
-
-    <instrumentation android:targetPackage="com.mopub.mobileads.robotium" android:name="android.test.InstrumentationTestRunner" />
-
-    <application android:label="Cool Activity Test">
-        <uses-library android:name="android.test.runner" />
-
-        <meta-data android:name="com.google.android.gms.version"
-                   android:value="@integer/google_play_services_version" />
-    </application>
-</manifest>
diff --git a/robotium-tests/pom.xml b/robotium-tests/pom.xml
deleted file mode 100644
index 99a113ce..00000000
--- a/robotium-tests/pom.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <parent>
-        <groupId>com.mopub.mobileads</groupId>
-        <artifactId>mopub-android</artifactId>
-        <version>1.0</version>
-    </parent>
-
-    <artifactId>robotium-tests</artifactId>
-    <version>1.0.0-SNAPSHOT</version>
-    <packaging>apk</packaging>
-    <name>MoPub Robotium Tests</name>
-    <description>Robotium tests for the sample application.</description>
-
-    <dependencies>
-
-        <!--main-->
-        <dependency>
-            <groupId>com.mopub.mobileads</groupId>
-            <artifactId>robotium-sample</artifactId>
-            <version>1.0.0-SNAPSHOT</version>
-            <scope>provided</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.google.android.gms</groupId>
-            <artifactId>play-services-ads</artifactId>
-            <version>7.0.0</version>
-            <type>aar</type>
-        </dependency>
-
-        <!--test-->
-
-        <dependency>
-            <groupId>com.jayway.android.robotium</groupId>
-            <artifactId>robotium-solo</artifactId>
-            <version>5.0.1</version>
-        </dependency>
-
-        <!--android -->
-        <dependency>
-            <groupId>com.google.android</groupId>
-            <artifactId>android</artifactId>
-            <version>4.4.2</version>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <finalName>${project.artifactId}</finalName>
-
-        <plugins>
-            <plugin>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>2.3.2</version>
-                <configuration>
-                    <source>1.6</source>
-                    <target>1.6</target>
-                </configuration>
-            </plugin>
-            <plugin>
-                <groupId>com.simpligility.maven.plugins</groupId>
-                <artifactId>android-maven-plugin</artifactId>
-                <version>4.2.0</version>
-                <configuration>
-                    <androidManifestFile>AndroidManifest.xml</androidManifestFile>
-                    <resourceDirectory>res</resourceDirectory>
-                    <sdk>
-                        <!-- platform or api level (api level 4 = platform 1.6)-->
-                        <platform>22</platform>
-                    </sdk>
-                    <undeployBeforeDeploy>true</undeployBeforeDeploy>
-                </configuration>
-                <extensions>true</extensions>
-            </plugin>
-        </plugins>
-    </build>
-</project>
diff --git a/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java b/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java
deleted file mode 100644
index fdf5c296..00000000
--- a/robotium-tests/src/main/java/com/mopub/mobileads/test/RobotiumTestSupportActivityTest.java
+++ /dev/null
@@ -1,223 +0,0 @@
-package com.mopub.mobileads.test;
-
-import android.test.ActivityInstrumentationTestCase2;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mopub.common.MoPubBrowser;
-import com.mopub.mobileads.MoPubActivity;
-import com.mopub.mobileads.MoPubErrorCode;
-import com.mopub.mobileads.MoPubInterstitial;
-import com.mopub.mobileads.MoPubView;
-import com.mopub.mobileads.robotium.R;
-import com.mopub.mobileads.robotium.RobotiumTestSupportActivity;
-import com.robotium.solo.Solo;
-
-import static com.mopub.mobileads.MoPubInterstitial.InterstitialAdListener;
-
-public class RobotiumTestSupportActivityTest extends ActivityInstrumentationTestCase2<RobotiumTestSupportActivity>{
-    private static final long NETWORK_SLEEP_TIME = 8000;
-    private static final String BANNER_AD_UNIT_ID = "agltb3B1Yi1pbmNyDAsSBFNpdGUY8fgRDA";
-    private static final String INTERSTITIAL_AD_UNIT_ID = "agltb3B1Yi1pbmNyDAsSBFNpdGUY6tERDA";
-
-    private Solo solo;
-    private EditText bannerEditText;
-    private EditText interstitialEditText;
-    private Button bannerLoadButton;
-    private Button interstitialLoadButton;
-    private Button interstitialShowButton;
-    private MoPubView banner;
-
-    public RobotiumTestSupportActivityTest() {
-        super(RobotiumTestSupportActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        solo = new Solo(getInstrumentation(), getActivity());
-
-        bannerEditText = (EditText) solo.getView(R.id.banner_adunit_id_field);
-        interstitialEditText = (EditText) solo.getView(R.id.interstitial_adunit_id_field);
-
-        bannerLoadButton = (Button) solo.getView(R.id.banner_load_button);
-        interstitialLoadButton = (Button) solo.getView(R.id.interstitial_load_button);
-        interstitialShowButton = (Button) solo.getView(R.id.interstitial_show_button);
-
-        banner = (MoPubView) solo.getView(R.id.mopubview);
-    }
-
-    @Override
-    public void tearDown() throws Exception {
-        solo.finishOpenedActivities();
-        super.tearDown();
-    }
-
-    public void testMoPubBannerLoadAndClick() throws Exception {
-        enterBannerAdUnitId();
-        TestBannerAdListener listener = new TestBannerAdListener();
-        banner.setBannerAdListener(listener);
-
-        solo.clickOnView(bannerLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Banner was not loaded.", listener.bannerWasLoaded());
-
-        solo.clickOnView(banner);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Banner was not clicked.", listener.bannerWasClicked());
-
-        solo.assertCurrentActivity("expected a MoPubBrowser", MoPubBrowser.class);
-    }
-
-    public void testMoPubInterstitialLoadShowAndClick() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Interstitial was not loaded.", listener.interstitialWasLoaded());
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        assertTrue("Interstitial was not shown.", listener.interstitialWasShown());
-        solo.assertCurrentActivity("expected MoPubActivity", MoPubActivity.class);
-
-        solo.clickOnView(solo.getCurrentActivity().findViewById(android.R.id.content));
-        Thread.sleep(NETWORK_SLEEP_TIME);
-        solo.assertCurrentActivity("expected MoPubBrowser", MoPubBrowser.class);
-    }
-
-    public void testMoPubInterstitialLoadShowAndDismissWithCloseButton() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnImageButton(0);
-        Thread.sleep(500);
-        assertTrue("Interstitial was not dismissed.", listener.interstitialWasDismissed());
-    }
-
-    public void testMoPubInterstitialLoadShowAndDismissWithBackButton() throws Exception {
-        enterInterstitialAdUnitId();
-        TestInterstitialAdListener listener = new TestInterstitialAdListener();
-        ((RobotiumTestSupportActivity) solo.getCurrentActivity()).setInterstitialListener(listener);
-
-        solo.clickOnView(interstitialLoadButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.clickOnView(interstitialShowButton);
-        Thread.sleep(NETWORK_SLEEP_TIME);
-
-        solo.goBack();
-        assertTrue("Interstitial was not dismissed.", listener.interstitialWasDismissed());
-    }
-
-    private void enterBannerAdUnitId() {
-        solo.enterText(bannerEditText, BANNER_AD_UNIT_ID);
-    }
-
-    private void enterInterstitialAdUnitId() {
-        solo.enterText(interstitialEditText, INTERSTITIAL_AD_UNIT_ID);
-    }
-
-    private static class TestBannerAdListener implements MoPubView.BannerAdListener {
-        private boolean bannerWasLoaded;
-        private boolean bannerWasClicked;
-
-        private boolean bannerWasLoaded() {
-            return bannerWasLoaded;
-        }
-
-        private boolean bannerWasClicked() {
-            return bannerWasClicked;
-        }
-
-        @Override
-        public void onBannerLoaded(MoPubView banner) {
-            bannerWasLoaded = true;
-        }
-
-        @Override
-        public void onBannerFailed(MoPubView banner, MoPubErrorCode errorCode) {
-        }
-
-        @Override
-        public void onBannerClicked(MoPubView banner) {
-            bannerWasClicked = true;
-        }
-
-        @Override
-        public void onBannerExpanded(MoPubView banner) {
-        }
-
-        @Override
-        public void onBannerCollapsed(MoPubView banner) {
-        }
-
-        void reset() {
-            bannerWasLoaded = false;
-            bannerWasClicked = false;
-        }
-    }
-
-    private static class TestInterstitialAdListener implements InterstitialAdListener {
-        private boolean interstitialWasLoaded;
-        private boolean interstitialWasShown;
-        private boolean interstitialWasDismissed;
-        private boolean interstitialWasClicked;
-
-        private boolean interstitialWasLoaded() {
-            return interstitialWasLoaded;
-        }
-
-        private boolean interstitialWasShown() {
-            return interstitialWasShown;
-        }
-
-        private boolean isInterstitialWasClicked() {
-            return interstitialWasClicked;
-        }
-
-        public boolean interstitialWasDismissed() {
-            return interstitialWasDismissed;
-        }
-
-        @Override
-        public void onInterstitialLoaded(MoPubInterstitial interstitial) {
-            interstitialWasLoaded = true;
-        }
-
-        @Override
-        public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
-        }
-
-        @Override
-        public void onInterstitialShown(MoPubInterstitial interstitial) {
-            interstitialWasShown = true;
-        }
-
-        @Override
-        public void onInterstitialClicked(MoPubInterstitial interstitial) {
-            interstitialWasClicked = true;
-        }
-
-        @Override
-        public void onInterstitialDismissed(MoPubInterstitial interstitial) {
-            interstitialWasDismissed = true;
-        }
-
-        void reset() {
-            interstitialWasLoaded = false;
-            interstitialWasShown = false;
-            interstitialWasClicked = false;
-            interstitialWasDismissed = false;
-        }
-    }
-}
diff --git a/settings.gradle b/settings.gradle
index 281d020c..e0667c15 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,3 +1,4 @@
 rootProject.name = 'mopub-android'
-include ':mopub-sdk', ':mopub-sample'
-
+include ':mopub-sdk', ':mopub-sample', ':mopub-sdk:mopub-sdk-base', ':mopub-sdk:mopub-sdk-banner',
+        ':mopub-sdk:mopub-sdk-interstitial', ':mopub-sdk:mopub-sdk-rewardedvideo',
+        ':mopub-sdk:mopub-sdk-native-static', ':mopub-sdk:mopub-sdk-native-video'
