diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index e410426d..d7f29eaa 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -8,6 +8,7 @@
 import com.mojang.base.Analytics;
 import com.mojang.base.Helper;
 import com.mojang.base.InternetObserver;
+import com.mojang.base.Logger;
 import com.mojang.base.events.AppEvent;
 import com.mojang.base.events.GameEvent;
 
@@ -48,10 +49,10 @@ public Ads(Interstitial interstitial) {
         }
 
         if (InternetObserver.isInternetAvaible()) {
-            Helper.wtf("start", true);
+            Logger.Log("::start");
             interstitial.init(false);
         } else {
-            Helper.wtf("start: No Internet Avaible for ads", true);
+            Logger.Log("::start: No Internet Avaible for ads");
         }
 
         EventBus.getDefault().register(this);
@@ -100,13 +101,13 @@ public void onGameEvent(GameEvent gameEvent) {
         switch (gameEvent.event) {
             case PlayerConnected:
                 numOfPlayers++;
-                Helper.wtf("Number of players in game = " + numOfPlayers);
+                Logger.Log("Number of players in game = " + numOfPlayers);
                 if (numOfPlayers > 1) interstitial.lock.lockLocalMultiplayer();
                 break;
             case PlayerDisconnected:
                 if (numOfPlayers > 0) {
                     numOfPlayers--;
-                    Helper.wtf("Number of players in game = " + numOfPlayers);
+                    Logger.Log("Number of players in game = " + numOfPlayers);
                 }
                 if (numOfPlayers == 1) interstitial.lock.unlockLocalMultiplayer();
                 break;
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 6b135848..c32df539 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -14,10 +14,7 @@
 import android.view.View;
 import android.view.ViewConfiguration;
 
-import com.mojang.base.Analytics;
-import com.mojang.base.FileManager;
-import com.mojang.base.Helper;
-import com.mojang.base.Screen;
+import com.mojang.base.*;
 import com.mojang.base.json.Data;
 import com.mopub.ads.adapters.FastAd;
 import com.mopub.common.ClientMetadata;
@@ -89,7 +86,7 @@ public void run() {
         this.showRunnable = new Runnable() {
             @Override
             public void run() {
-                Helper.wtf("PeriodicShowRunnable", "isLocked: " + "multiplayerLocalOnline [" + lock.localMultiplayer + " "+lock.onlineMultiplayer+ "]" + " " + "internet [" + lock.internet + "]" + " " + "gap [" + lock.gap + "]" + " " + "stop [" + lock.stop + "] " + "game [" + lock.game + "]");
+                Logger.Log("::PeriodicShowRunnable", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: "+lock.onlineMultiplayer+ "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + " " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
                 if (!lock.isAnyLocked()) {
                     show(true);
                 }
@@ -109,9 +106,9 @@ public void run() {
     private void getNativeBackPressed() {
         try {
             nativeBackPressedMethod = minecraftActivity.getClass().getMethod("callNativeBackPressed");
-            Helper.wtf("got nativeBackPressed");
+            Logger.Log("::got nativeBackPressed");
         } catch (NoSuchMethodException e) {
-            Helper.wtf("----NATIVE BACK PRESS MISSING----", true);
+            Logger.Log("::----NATIVE BACK PRESS MISSING----");
         }
     }
 
@@ -125,7 +122,7 @@ public void run() {
                 try {
                     boolean hasMenuKey = ViewConfiguration.get(activity).hasPermanentMenuKey();
                     boolean hasBackKey = KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_BACK);
-                    Helper.wtf("hasMenuKey(false) = " + hasMenuKey + " hasBackKey(false) =" + hasBackKey);
+                    Logger.Log("::hasMenuKey(false) = " + hasMenuKey + ":: hasBackKey(false) =" + hasBackKey);
                     if (!hasMenuKey && !hasBackKey) {
                         // Do whatever you need to do, this device has a navigation bar
                         hideNavBar(activity);
@@ -148,8 +145,8 @@ private static void hideNavBar(Activity activity) {
                     | View.SYSTEM_UI_FLAG_FULLSCREEN
                     | View.SYSTEM_UI_FLAG_LOW_PROFILE
                     | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
-            Helper.wtf("Curent visibility " + currentVis + " hiddenVisibility " + hidenVisibility);
-            Helper.wtf("HIDING NAVBAR", true);
+            Logger.Log("::Curent visibility " + currentVis + ":: hiddenVisibility " + hidenVisibility);
+            Logger.Log("::HIDING NAVBAR");
 
             decorView.setSystemUiVisibility(hidenVisibility);
         }
@@ -166,15 +163,15 @@ public void run() {
                         if (nativeBackPressedMethod != null && !dontBackPress) {
                             nativeBackPressedMethod.invoke(minecraftActivity);
                             dontBackPress = false;
-                            Helper.wtf("called -- NativeBackPressed");
+                            Logger.Log("::called -- NativeBackPressed");
                         }else{
-                            Helper.wtf("nativeBackPressedMethod != null = "+ (nativeBackPressedMethod != null) + " dontBackPress = " + dontBackPress);
+                            Logger.Log("::nativeBackPressedMethod != null = "+ (nativeBackPressedMethod != null) + ":: dontBackPress = " + dontBackPress);
                         }
                     } catch (InvocationTargetException e) {
-                        Helper.wtf("failed back press");
+                        Logger.Log("::failed back press");
                         e.printStackTrace();
                     } catch (IllegalAccessException e) {
-                        Helper.wtf("failed back press");
+                        Logger.Log("::failed back press");
                         e.printStackTrace();
                     }
                     pauseScreenShowed = false;
@@ -186,7 +183,7 @@ public void run() {
 
     @Override
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialDismissed", true);
+        Logger.Log("::onInterstitialDismissed");
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
         Helper.setVolume(curentVolume, audioManager);
         loadAfterDelay(3000);
@@ -199,7 +196,7 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
 
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
-        Helper.wtf("Interstitial: onInterstitialLoaded", true);
+        Logger.Log("::::Interstitial: onInterstitialLoaded");
 
         if (!onLoadedOnce) {
             String country = getCountryCode();
@@ -232,27 +229,27 @@ private String getCountryCode() {
 
     @Override
     public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {
-        Helper.wtf(TAG, "onInterstitialFailed: " + errorCode);
+        Logger.Log(TAG, "::onInterstitialFailed: " + errorCode);
 
         if (errorCode.equals(MoPubErrorCode.NO_FILL) || errorCode.equals(MoPubErrorCode.UNSPECIFIED)) {
             final double BACKOFF_FACTOR = 1.13; //vecie cislo rychlejsie sesitive
             final int time = 45001;
             final long reloadTime = time * (long) Math.pow(BACKOFF_FACTOR, backOffPower);
             backOffPower++;
-            Helper.wtf("Loading again in " + reloadTime);
+            Logger.Log("::Loading again in " + reloadTime);
             loadAfterDelay(reloadTime);
         }
     }
 
     @Override
     public void onInterstitialShown(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialShown", true);
+        Logger.Log("::onInterstitialShown");
         curentVolume = Helper.setQuietVolume(audioManager);
     }
 
     @Override
     public void onInterstitialClicked(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialClicked", true);
+        Logger.Log("::onInterstitialClicked");
 
         MoPubInterstitial.AdType adType = interstitial.getAdType();
 
@@ -265,16 +262,16 @@ public void onInterstitialClicked(MoPubInterstitial interstitial) {
     public boolean show(boolean isPeriodicShow) {
         boolean showSuccesful = false;
         boolean isMopubNull = mopubInterstitial == null;
-        Helper.wtf("I", "isLocked: " + "multiplayerLocalOnline [" + lock.localMultiplayer + " "+lock.onlineMultiplayer+ "]" + " " + "internet [" + lock.internet + "]" + " " + "gap [" + lock.gap + "]" + " " + "stop [" + lock.stop + "] " + "game [" + lock.game + "]");
+        Logger.Log("::I", "::isLocked: " + "::multiplayerLocalOnline [" + lock.localMultiplayer + ":: "+lock.onlineMultiplayer+ "::]" + ":: " + "::internet [" + lock.internet + "::]" + ":: " + "::gap [" + lock.gap + "::]" + ":: " + "::stop [" + lock.stop + "::] " + "::game [" + lock.game + "::]");
         boolean isLocked = isPeriodicShow ? lock.isAnyLocked() : lock.isHardLocked();
         boolean isMopubReady = !isMopubNull && mopubInterstitial.isReady();
-        Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isSoftLocked(false) = " + lock.isSoftLocked() + "] " +  "[isHardLocked(false) = " + lock.isHardLocked() + "] " +"[isMopubReady(true) = " + isMopubReady + "]");
+        Logger.Log("::[isMopubNull(false) = " + isMopubNull + "::] " + "::[isSoftLocked(false) = " + lock.isSoftLocked() + "::] " +  "::[isHardLocked(false) = " + lock.isHardLocked() + "::] " +"::[isMopubReady(true) = " + isMopubReady + "::]");
         if (!fastAdShowed && fastAd != null && !isLocked) {
             nesmrtelnost(true);
             fastAd.show(mopubInterstitial);
             fastAd = null;
         } else if (!isMopubNull && !isLocked && isMopubReady) {
-            Helper.wtf("Showing mopubInterstitial", true);
+            Logger.Log("::Showing mopubInterstitial");
             nesmrtelnost(true);
             showSuccesful = mopubInterstitial.show();
         }
@@ -295,10 +292,10 @@ private void nesmrtelnost(boolean zapnut) {
             if (zapnut) nesmrtelnostON();
             else nesmrtelnostOFF();
         } catch (UnsatisfiedLinkError ignored) {
-            Helper.wtf("!Failed to zapnut nesmrtelnost");
+            Logger.Log("::!Failed to zapnut nesmrtelnost");
         }
         if(Data.hasMinecraft) {
-            Helper.wtf("Nesmrtelnos = " + zapnut);
+            Logger.Log("::Nesmrtelnos = " + zapnut);
         }
     }
 
@@ -330,7 +327,7 @@ public void init(final boolean fromOnlineAccepted) {
         } else if (Data.hasMinecraft) {
             //We are using fast ad if we have minecraft game
             if (!fastAdShowed) {
-                Helper.wtf(TAG, "Interstitial init and load fast ad");
+                Logger.Log(TAG, "::Interstitial init and load fast ad");
                 fastAd = new FastAd(Data.Ads.Interstitial.failoverId, this);
                 fastAd.load(minecraftActivity, new Runnable() {
                     @Override
@@ -355,32 +352,32 @@ public void run() {
     public void showUnityAdsVideo() {
         if (!lock.isOnlineMultiplayerLocked() && !lock.isHardLocked()) {
             if (!UnityAds.isReady()) {
-                Helper.wtf(TAG, "showUnityAdsVideo: show false");
+                Logger.Log(TAG, "::showUnityAdsVideo: show false");
                 show(true);
             } else {
                 gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
                 UnityAds.show(minecraftActivity);
             }
         } else {
-            Helper.wtf(TAG, "showUnityAdsVideo: show false multiplayer locked or hard locked");
+            Logger.Log(TAG, "::showUnityAdsVideo: show false multiplayer locked or hard locked");
         }
     }
 
 
     public void schedulePeriodicShows() {
         if (!periodicScheduled) {
-            Helper.wtf("schedulePeriodicShows: Scheduled za " + String.valueOf(periodicMills));
+            Logger.Log("::schedulePeriodicShows: Scheduled za " + String.valueOf(periodicMills));
             mainHandler.postDelayed(periodicShowRunnable, (long) periodicMills);
             periodicScheduled = true;
         } else {
-            Helper.wtf("Not scheduling periodic cause already scheduled");
+            Logger.Log("::Not scheduling periodic cause already scheduled");
         }
     }
 
     public void unschedulePeriodicShows() {
         if (periodicScheduled) {
-            Helper.wtf(TAG, "unschedulePeriodicshows");
-            Helper.wtf(TAG, String.valueOf(periodicMills));
+            Logger.Log(TAG, "::unschedulePeriodicshows");
+            Logger.Log(TAG, String.valueOf(periodicMills));
             mainHandler.removeCallbacks(periodicShowRunnable);
             periodicScheduled = false;
         }
@@ -388,7 +385,7 @@ public void unschedulePeriodicShows() {
 
 
     public void _initDelayed(int delay) {
-        Helper.wtf("Initing Mopub in 4 sec...");
+        Logger.Log("::Initing Mopub in 4 sec...");
         Helper.runOnWorkerThread(new Runnable() {
             @Override
             public void run() {
@@ -398,12 +395,12 @@ public void run() {
                     mopubInterstitial.setKeywords("game,minecraft,business,twitter");
                     mopubInterstitial.load();
                 } else if (!mopubInterstitial.isReady()) {
-                    Helper.wtf("Mopub Forcing Refresh");
+                    Logger.Log("::Mopub Forcing Refresh");
                     mopubInterstitial.forceRefresh();
                 }
 
                 if (UnityAds.isSupported() && !UnityAds.isInitialized()) {
-                    Helper.wtf("Initing Unity ads");
+                    Logger.Log("::Initing Unity ads");
                     //final String _69633 = Helper.convertString("4E6A6B324D7A4D3D");
                     UnityAds.initialize(minecraftActivity, null, null, Helper.USE_UNITY_TEST_ADS);
                 }
@@ -420,7 +417,7 @@ private void lockOutSE(String countryCode) {
 
         //create file
         FileManager.i().put(FileManager.SE, null);
-        Helper.wtf("Crating SE file");
+        Logger.Log("::Crating SE file");
         //clear firewall result so he can go through check again
         SharedPreferences LromSP = minecraftActivity.getApplicationContext().getSharedPreferences("vic", Context.MODE_PRIVATE);
         LromSP.edit().clear().apply();
@@ -450,7 +447,7 @@ void setPeriodicMillsAndFingerChance(String interstitialCountryCode) {
 
     private void gapLockForTime(long minimalAdGapMills) {
         lock.gapLock();
-        Helper.wtf(TAG, "lockForTime: scheduling unlock runnable za sec " + minimalAdGapMills / 1000);
+        Logger.Log(TAG, "::lockForTime: scheduling unlock runnable za sec " + minimalAdGapMills / 1000);
         mainHandler.removeCallbacks(gapUnlockRunnable);
         mainHandler.postDelayed(gapUnlockRunnable, minimalAdGapMills);
     }
@@ -502,63 +499,63 @@ public boolean isOnlineMultiplayerLocked() {
         }
 
         public void unlockStop() {
-            Helper.wtf("I", "unlockStop: ");
+            Logger.Log("::I", "::unlockStop: ");
             stop = false;
         }
 
         public void stopLock() {
-            Helper.wtf("I", "stopLock: ");
+            Logger.Log("::I", "::stopLock: ");
             stop = true;
         }
 
 
         public void unlockGap() {
-            Helper.wtf("I", "unlockGap: ");
+            Logger.Log("::I", "::unlockGap: ");
             gap = false;
         }
 
         public void gapLock() {
-            Helper.wtf("I", "gapLock: ");
+            Logger.Log("::I", "::gapLock: ");
             gap = true;
         }
 
         public void lockMultiplayer() {
-            Helper.wtf("I", "lockMultiplayer: ");
+            Logger.Log("::I", "::lockMultiplayer: ");
             onlineMultiplayer = true;
         }
 
         public void unlockOnlineMultiplayer() {
-            Helper.wtf("I", "unlockOnlineMultiplayer: ");
+            Logger.Log("::I", "::unlockOnlineMultiplayer: ");
             onlineMultiplayer = false;
         }
 
         public void gameUnlock() {
-            Helper.wtf("I", "gameUnlock: ");
+            Logger.Log("::I", "::gameUnlock: ");
             game = false;
         }
 
         public void gameLock() {
-            Helper.wtf("I", "gameLock: ");
+            Logger.Log("::I", "::gameLock: ");
             game = true;
         }
 
         public void internetLock() {
-            Helper.wtf("I", "internetLock: ");
+            Logger.Log("::I", "::internetLock: ");
             internet = true;
         }
 
         public void internetUnlock() {
-            Helper.wtf("I", "internetUnlock: ");
+            Logger.Log("::I", "::internetUnlock: ");
             internet = false;
         }
 
         public void unlockLocalMultiplayer() {
-            Helper.wtf("I", "unlockLocalMultiplayer: ");
+            Logger.Log("::I", "::unlockLocalMultiplayer: ");
             localMultiplayer = false;
         }
 
         public void lockLocalMultiplayer() {
-            Helper.wtf("I", "lockLocalMultiplayer: ");
+            Logger.Log("::I", "::lockLocalMultiplayer: ");
             localMultiplayer = true;
         }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Proxy.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Proxy.java
index 344e8b5b..1a6e8371 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Proxy.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Proxy.java
@@ -7,6 +7,7 @@
 
 //import com.google.android.gms.ads.InterstitialAd;
 import com.mojang.base.Helper;
+import com.mojang.base.Logger;
 import com.mojang.base.events.AppEvent;
 import com.mopub.mobileads.CustomEventInterstitial;
 
@@ -21,21 +22,21 @@
     //private static InterstitialAd mGoogleInterstitialAd;
 
     public void startProxyActivity(Context context, CustomEventInterstitial customEventInterstitial) {
-        Helper.wtf(proxy, "startProxyActivity - mopub");
+        Logger.Log(proxy, "::startProxyActivity - mopub");
         Proxy.customEventInterstitial = customEventInterstitial;
         Intent proxyIntent = new Intent(context, Proxy.class);
         context.startActivity(proxyIntent);
     }
 
 //    public void startProxyActivity(Context context, InterstitialAd mGoogleInterstitialAd) {
-//        Helper.wtf(proxy, "startProxyActivity - mGoogleInterstitialAd");
+//        Logger.Log(proxy, "startProxyActivity - mGoogleInterstitialAd");
 //        Proxy.mGoogleInterstitialAd = mGoogleInterstitialAd;
 //        Intent proxyIntent = new Intent(context, Proxy.class);
 //        context.startActivity(proxyIntent);
 //    }
 
     public void Finish() {
-        Helper.wtf(proxy, "Finish -- posting fake stop");
+        Logger.Log(proxy, "::Finish -- posting fake stop");
         EventBus.getDefault().post(new AppEvent(Stop));
         finish();
     }
@@ -43,7 +44,7 @@ public void Finish() {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        Helper.wtf(proxy, "create");
+        Logger.Log(proxy, "::create");
 
         if (Proxy.customEventInterstitial != null) {
             Proxy.customEventInterstitial.showInterstitial();
@@ -57,7 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        Helper.wtf(proxy, "destroy");
+        Logger.Log(proxy, "::destroy");
         Proxy.customEventInterstitial = null;
         //Proxy.mGoogleInterstitialAd = null;
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index fbac1b50..0b26d85f 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -21,6 +21,7 @@
 import com.applovin.sdk.AppLovinSdk;
 import com.applovin.sdk.AppLovinSdkSettings;
 import com.mojang.base.Helper;
+import com.mojang.base.Logger;
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
 
@@ -38,8 +39,9 @@
      * Abstract methods from CustomEventInterstitial
      */
     @Override
-    public void loadInterstitial(Context context, CustomEventInterstitial.CustomEventInterstitialListener interstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras) {
-        Helper.wtf("Applovin Load");
+    public void loadInterstitial(Context context, CustomEventInterstitial.CustomEventInterstitialListener interstitialListener, Map<String, Object> localExtras, Map<String, String> serverExtras)
+    {
+        Logger.Log("::Applovin Load");
 
         mInterstitialListener = interstitialListener;
 
@@ -50,7 +52,7 @@ public void loadInterstitial(Context context, CustomEventInterstitial.CustomEven
             return;
         }
 
-        Helper.wtf("Applovin: Request received for new interstitial.");
+        Logger.Log("::Applovin: Request received for new interstitial." );
 
         AppLovinSdkSettings setting = new AppLovinSdkSettings();
         setting.setVerboseLogging(Helper.canLog);
@@ -79,8 +81,10 @@ private String getKeyFromExtras(Map<String, String> serverExtras) {
     public void showInterstitial() {
         final AppLovinAd adToRender = lastReceived;
 
-        if (adToRender != null) {
-            Helper.wtf("Showing AppLovin interstitial ad...", true);
+        if ( adToRender != null )
+        {
+            Logger.Log("::Showing AppLovin interstitial ad...");
+
 
             parentActivity.runOnUiThread(new Runnable() {
                 public void run() {
@@ -108,10 +112,12 @@ public void adHidden(AppLovinAd appLovinAd) {
 
                     inter.showAndRender(adToRender);
                 }
-            });
-        } else {
-            Helper.wtf("Showing AppLovin failed adToRender null");
-        }
+                    } );
+
+                    inter.showAndRender( adToRender );
+                }
+            } );
+        }else{Logger.Log("::Showing AppLovin failed adToRender null" );}
     }
 
     @Override
@@ -126,8 +132,9 @@ public void onInvalidate() {
     }
 
     @Override
-    public void adReceived(AppLovinAd ad) {
-        Helper.wtf("AppLovin interstitial loaded successfully.");
+    public void adReceived(AppLovinAd ad)
+    {
+        Logger.Log("::AppLovin interstitial loaded successfully." );
 
         lastReceived = ad;
 
@@ -142,8 +149,8 @@ public void run() {
     public void failedToReceiveAd(final int errorCode) {
         parentActivity.runOnUiThread(new Runnable() {
             public void run() {
-                Helper.wtf("Applovin Fail");
-                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
+                Logger.Log("::Applovin Fail");
+                    mInterstitialListener.onInterstitialFailed( MoPubErrorCode.NETWORK_NO_FILL );
             }
         });
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 3120b872..d99c1718 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -14,6 +14,7 @@
 //import com.google.android.gms.ads.AdRequest;
 //import com.google.android.gms.ads.InterstitialAd;
 import com.mojang.base.Helper;
+import com.mojang.base.Logger;
 import com.mojang.base.json.Data;
 import com.mopub.ads.Ads;
 import com.mopub.ads.Interstitial;
@@ -39,7 +40,7 @@ public FastAd(String admobId, Interstitial interstitial) {
     }
 
     public void load(final Context context, final Runnable initMopubRunnable) {
-        Helper.wtf("FastAd", "load: LOADING FAST AD");
+        Logger.Log("::FastAd", "::load: LOADING FAST AD");
         this.activity = (Activity) context;
         this.initMopubRunnable = initMopubRunnable;
         this.useApplovin = Data.Ads.Interstitial.fastAdApplovin | hasCountryForApplovin(context);
@@ -73,7 +74,7 @@ private boolean hasCountryForApplovin(Context context) {
     }
 
     private void loadApplovin() {
-        Helper.wtf("loading Applovin fastad", true);
+        Logger.Log("::loading Applovin fastad");
         sdk = AppLovinSdk.getInstance(this.activity);
         sdk.getAdService().loadNextAd(AppLovinAdSize.INTERSTITIAL, new AppLovinAdLoadListener() {
             @Override
@@ -83,7 +84,7 @@ public void adReceived(AppLovinAd appLovinAd) {
 
             @Override
             public void failedToReceiveAd(int i) {
-                Helper.wtf("Fast Ads applovin failed init mopub");
+                Logger.Log("::Fast Ads applovin failed init mopub");
                 initMopubRunnable.run();
             }
         });
@@ -91,7 +92,7 @@ public void failedToReceiveAd(int i) {
 
 
 //    private void loadAdmob() {
-//        Helper.wtf("loading Admob fastad", true);
+//        Logger.Log("loading Admob fastad", true);
 //        mGoogleInterstitialAd = new InterstitialAd(activity);
 //        mGoogleInterstitialAd.setAdUnitId(admobId);
 //        mGoogleInterstitialAd.setAdListener(new AdListener() {
@@ -133,7 +134,7 @@ public void failedToReceiveAd(int i) {
 //    }
 
     public boolean show(MoPubInterstitial mopubInterstitial) {
-        Helper.wtf("FastAd", "show() called with: FastAd");
+        Logger.Log("::FastAd", "::show() called with: FastAd");
         interstitial.fastAdShowed = true;
         if (Data.isActivityRunning) {
             //WE TRY MOPUB IF WE CAN
@@ -151,7 +152,7 @@ public void adDisplayed(AppLovinAd appLovinAd) {
 
                         @Override
                         public void adHidden(AppLovinAd appLovinAd) {
-                            Helper.wtf("Fast Ads applovin hidden init mopub");
+                            Logger.Log("::Fast Ads applovin hidden init mopub");
                             initMopubRunnable.run();
                             interstitial.onInterstitialDismissed(null);
                         }
@@ -165,7 +166,7 @@ public void adHidden(AppLovinAd appLovinAd) {
 //                return true;
             }
         }
-        Helper.wtf("Failed to show fastad");
+        Logger.Log("::Failed to show fastad");
         initMopubRunnable.run();
         return false;
     }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
index 2f03dd1a..e3070c61 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
@@ -45,7 +45,7 @@
 //        mInterstitialListener = customEventInterstitialListener;
 //        final String adUnitId;
 //
-//        Helper.wtf("Admob Load");
+//        Logger.Log("Admob Load");
 //        setSharedPreferences(context);
 //        mContext = context;
 //
@@ -93,7 +93,7 @@
 //
 //        if((numOfClickToday+1) >= Data.Ads.Interstitial.maximumClicksPerDay){
 //            sharedPreferences.edit().putInt(DISABLED_DAY_KEY,currentDayNumber).apply();
-//            Helper.wtf("DISABLING ADMOB");
+//            Logger.Log("DISABLING ADMOB");
 //            Analytics.i().sendOther("Admob","Disabled");
 //        }
 //    }
@@ -108,7 +108,7 @@
 //        int disabledDay = sharedPreferences.getInt(DISABLED_DAY_KEY, -1);
 //        boolean isDisabled = disabledDay == currentDayNumber;
 //        if(isDisabled){
-//            Helper.wtf("ADMOB DISABLED",true);
+//            Logger.Log("ADMOB DISABLED",true);
 //        }
 //        return isDisabled;
 //    }
@@ -116,11 +116,11 @@
 //    @Override
 //    public void showInterstitial() {
 //        if (mGoogleInterstitialAd.isLoaded()) {
-//            Helper.wtf("Showing Admob",true);
+//            Logger.Log("Showing Admob",true);
 //            Interstitial.FAST_BACK_PRESS = true;
 //            mGoogleInterstitialAd.show();
 //        } else {
-//            Helper.wtf("MoPub", "Tried to show a Google Play Services interstitial ad before it finished loading. Please try again.");
+//            Logger.Log("MoPub", "Tried to show a Google Play Services interstitial ad before it finished loading. Please try again.");
 //        }
 //    }
 //
@@ -146,7 +146,7 @@
 //    	 */
 //        @Override
 //        public void onAdClosed() {
-//            Helper.wtf("MoPub", "Google Play Services interstitial ad dismissed.");
+//            Logger.Log("MoPub", "Google Play Services interstitial ad dismissed.");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialDismissed();
 //            }
@@ -154,8 +154,8 @@
 //
 //        @Override
 //        public void onAdFailedToLoad(int errorCode) {
-//            Helper.wtf("MoPub", "Google Play Services interstitial ad failed to load.");
-//            Helper.wtf("Admob Failed");
+//            Logger.Log("MoPub", "Google Play Services interstitial ad failed to load.");
+//            Logger.Log("Admob Failed");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
 //            }
@@ -163,7 +163,7 @@
 //
 //        @Override
 //        public void onAdLeftApplication() {
-//            Helper.wtf("MoPub", "Google Play Services interstitial ad clicked.");
+//            Logger.Log("MoPub", "Google Play Services interstitial ad clicked.");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialClicked();
 //            }
@@ -172,7 +172,7 @@
 //
 //        @Override
 //        public void onAdLoaded() {
-//            Helper.wtf("MoPub", "Google Play Services interstitial ad loaded successfully.");
+//            Logger.Log("MoPub", "Google Play Services interstitial ad loaded successfully.");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialLoaded();
 //            }
@@ -180,7 +180,7 @@
 //
 //        @Override
 //        public void onAdOpened() {
-//            Helper.wtf("MoPub", "Showing Google Play Services interstitial ad.");
+//            Logger.Log("MoPub", "Showing Google Play Services interstitial ad.");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialShown();
 //            }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java
index 64f27db7..568cc86d 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/HeyzapInterstitial.java
@@ -25,7 +25,7 @@
 //        if (context instanceof Activity) {
 //            activity = (Activity) context;
 //        } else {
-//            Helper.wtf("Cound not load heyzap because context is not instance of activity");
+//            Logger.Log("Cound not load heyzap because context is not instance of activity");
 //            if (mInterstitialListener != null) {
 //                mInterstitialListener.onInterstitialFailed(MoPubErrorCode.NO_FILL);
 //            }
@@ -44,7 +44,7 @@
 //        if (serverExtras.containsKey(KEY_ID)) {
 //            return serverExtras.get(KEY_ID);
 //        } else {
-//            Helper.wtf("Failed to extract key from heyzap server extrass");
+//            Logger.Log("Failed to extract key from heyzap server extrass");
 //            return null;
 //        }
 //    }
@@ -52,10 +52,10 @@
 //    @Override
 //    public void showInterstitial() {
 //        if (InterstitialAd.isAvailable()) {
-//            Helper.wtf("Showing Heyzap");
+//            Logger.Log("Showing Heyzap");
 //            InterstitialAd.display(activity);
 //        } else {
-//            Helper.wtf("Wanted to show heyzap but wasnt avaible");
+//            Logger.Log("Wanted to show heyzap but wasnt avaible");
 //        }
 //    }
 //
@@ -71,7 +71,7 @@
 //
 //    @Override
 //    public void onNetworkCallback(String s, String s1) {
-//        Helper.wtf("Heyzap network callback " + s + " : " + s1);
+//        Logger.Log("Heyzap network callback " + s + " : " + s1);
 //    }
 //
 //    @Override
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
index 5574e966..4179fe3f 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
@@ -4,6 +4,7 @@
 import android.content.Context;
 
 import com.mojang.base.Helper;
+import com.mojang.base.Logger;
 import com.mopub.mobileads.CustomEventInterstitial;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.unity3d.ads.UnityAds;
@@ -26,11 +27,11 @@ protected void loadInterstitial(Context context,
                                     Map<String, Object> localExtras,
                                     Map<String, String> serverExtras) {
 
-        Helper.wtf("Loading Unity Ads");
+        Logger.Log("::Loading Unity Ads");
         final String mGameId = serverExtras.get("gameId");
 
         if(mGameId == null || mGameId.isEmpty()){
-            Helper.wtf("No game id bailing out",true);
+            Logger.Log("::No game id bailing out");
             mopubListener.onInterstitialFailed(MoPubErrorCode.ADAPTER_CONFIGURATION_ERROR);
             return;
         }
@@ -44,7 +45,7 @@ protected void loadInterstitial(Context context,
         mopubListener = customEventInterstitialListener;
 
         if (!sInitialized || !UnityAds.isInitialized()) {
-            Helper.wtf("Unity Debug");
+            Logger.Log("::Unity Debug");
             Helper.runOnWorkerThread(new Runnable() {
                 @Override
                 public void run() {
@@ -70,10 +71,10 @@ public void run() {
     @Override
     public void showInterstitial() {
         if (UnityAds.isReady() && mLauncherActivity != null) {
-            Helper.wtf("Showing Unity Ads", true);
+            Logger.Log("::Showing Unity Ads");
             UnityAds.show(mLauncherActivity);
         } else {
-            Helper.wtf("Failed to show unity ads isReady = " + UnityAds.isReady() + "activity null = " + mLauncherActivity);
+            Logger.Log("::Failed to show unity ads isReady = " + UnityAds.isReady() + "::activity null = " + mLauncherActivity);
             mopubListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
         }
     }
@@ -91,7 +92,7 @@ protected void onInvalidate() {
 
     @Override
     public void onUnityAdsReady(String placementId) {
-        Helper.wtf("onUnityAdsReady");
+        Logger.Log("::onUnityAdsReady");
         if (!sAdCached) {
             sAdCached = true;
             mopubListener.onInterstitialLoaded();
@@ -100,25 +101,25 @@ public void onUnityAdsReady(String placementId) {
 
     @Override
     public void onUnityAdsStart(String placementId) {
-        Helper.wtf("onUnityAdsStart");
+        Logger.Log("::onUnityAdsStart");
         mopubListener.onInterstitialShown();
     }
 
     @Override
     public void onUnityAdsFinish(String placementId, UnityAds.FinishState result) {
-        Helper.wtf("onUnityAdsFinish");
+        Logger.Log("::onUnityAdsFinish");
         mopubListener.onInterstitialDismissed();
     }
 
     @Override
     public void onUnityAdsError(UnityAds.UnityAdsError error, String message) {
-        Helper.wtf("onUnityAdsError + "+ error +" message:"+ message);
+        Logger.Log("::onUnityAdsError + "+ error +":: message:"+ message);
         mopubListener.onInterstitialFailed(MoPubErrorCode.NETWORK_NO_FILL);
     }
 
     @Override
     public void onUnityAdsClick(String placementId) {
-        Helper.wtf("onUnityAdsClick + " + placementId);
+        Logger.Log("::onUnityAdsClick + " + placementId);
         mopubListener.onInterstitialClicked();
     }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
index b1d15f95..884d6c37 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/mobileads/MoPubInterstitial.java
@@ -9,6 +9,7 @@
 import android.text.TextUtils;
 
 import com.mojang.base.Helper;
+import com.mojang.base.Logger;
 import com.mopub.common.AdFormat;
 import com.mopub.common.Preconditions;
 import com.mopub.common.VisibleForTesting;
@@ -109,7 +110,7 @@ private void setAdType(String className) {
                 mAdType = AdType.UNKNOWN;
                 break;
         }
-        Helper.wtf("adType set to: " + className);
+        Logger.Log("::adType set to: " + className);
     }
 
     public interface InterstitialAdListener {
diff --git a/mopub-sdk/shared-build.gradle b/mopub-sdk/shared-build.gradle
index cd586e0c..805516d5 100644
--- a/mopub-sdk/shared-build.gradle
+++ b/mopub-sdk/shared-build.gradle
@@ -15,7 +15,7 @@ project.group = 'com.mopub'
 project.version = '4.19.0'
 
 android {
-    compileSdkVersion 23
+    compileSdkVersion 27
     buildToolsVersion '27.0.3'
     lintOptions { abortOnError false }
     useLibrary 'org.apache.http.legacy'
@@ -24,7 +24,7 @@ android {
         versionCode 57
         versionName version
         minSdkVersion 16
-        targetSdkVersion 23
+        targetSdkVersion 27
         //consumerProguardFiles project(':mopub-sdk').file('proguard.txt')
     }
 
