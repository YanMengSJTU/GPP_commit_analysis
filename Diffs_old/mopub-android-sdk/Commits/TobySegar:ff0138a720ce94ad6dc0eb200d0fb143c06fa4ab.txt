diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
index 43b0fdaf..47d4e589 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Ads.java
@@ -142,10 +142,10 @@ public void onViewEvent(OfflineEvent viewEvent) {
 
     public void init() {
         if (InternetObserver.isInternetAvaible()) {
-            Helper.wtf(TAG, "start");
+            Helper.wtf("start",true);
             interstitial.init(false);
         } else {
-            Helper.wtf(TAG, "start: No Internet Avaible for ads");
+            Helper.wtf("start: No Internet Avaible for ads",true);
         }
     }
 
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
index 48a63172..ca8a8f31 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/Interstitial.java
@@ -8,6 +8,7 @@
 import android.os.Environment;
 import android.os.Handler;
 import android.os.Looper;
+import android.support.annotation.Nullable;
 import android.view.KeyCharacterMap;
 import android.view.KeyEvent;
 import android.view.View;
@@ -18,8 +19,11 @@
 import com.mojang.base.Screen;
 import com.mojang.base.json.Data;
 import com.mopub.ads.adapters.FastAd;
+import com.mopub.common.ClientMetadata;
+import com.mopub.mobileads.AdViewController;
 import com.mopub.mobileads.MoPubErrorCode;
 import com.mopub.mobileads.MoPubInterstitial;
+import com.mopub.mobileads.MoPubView;
 import com.unity3d.ads.UnityAds;
 
 import java.io.File;
@@ -99,7 +103,7 @@ private void getNativeBackPressed() {
             nativeBackPressedMethod = minecraftActivity.getClass().getMethod("callNativeBackPressed");
             Helper.wtf("got nativeBackPressed");
         } catch (NoSuchMethodException e) {
-            Helper.wtf("----NATIVE BACK PRESS MISSING----");
+            Helper.wtf("----NATIVE BACK PRESS MISSING----",true);
         }
     }
 
@@ -134,7 +138,7 @@ private void hideNavBar() {
                 | View.SYSTEM_UI_FLAG_FULLSCREEN
                 | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
         Helper.wtf("Curent visibility " + currentVis + " hiddenVisibility " + hidenVisibility);
-        Helper.wtf("HIDING NAVBAR");
+        Helper.wtf("HIDING NAVBAR",true);
 
         decorView.setSystemUiVisibility(hidenVisibility);
     }
@@ -166,7 +170,7 @@ public void run() {
 
     @Override
     public void onInterstitialDismissed(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialDismissed");
+        Helper.wtf("onInterstitialDismissed",true);
         gapLockForTime(Data.Ads.Interstitial.minimalGapMills);
         loadAfterDelay(3000);
 
@@ -176,9 +180,9 @@ public void onInterstitialDismissed(MoPubInterstitial interstitial) {
 
     @Override
     public void onInterstitialLoaded(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialLoaded");
-        String country = interstitial.getCountryCode();
+        Helper.wtf("onInterstitialLoaded",true);
 
+        String country = getCountryCode();
         if (!onLoadedOnce && country != null && !country.isEmpty()) {
             setPeriodicMillsAndFingerChance(country);
             lockOutSE(country);
@@ -186,7 +190,24 @@ public void onInterstitialLoaded(MoPubInterstitial interstitial) {
         }
     }
 
-    public void setFreePeriod(boolean freePeriod) {
+
+    /**
+     * @return country code like SK,US http://www.mcc-mnc.com/
+     */
+    @Nullable
+    private String getCountryCode() {
+        try {
+            String c1 = AdViewController.getCountryCodeFromMopubResponse();
+            if (c1 != null) return c1.toUpperCase();
+            String c2 = ClientMetadata.getInstance().getIsoCountryCode();
+            if (c2 != null) return c2.toUpperCase();
+            return ClientMetadata.getInstance().getSimIsoCountryCode().toUpperCase();
+        } catch (Exception ignored) {
+            return null;
+        }
+    }
+
+    void setFreePeriod(boolean freePeriod) {
         this.freePeriod = freePeriod;
     }
 
@@ -200,19 +221,17 @@ public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode
             final long reloadTime = time * (long) Math.pow(BACKOFF_FACTOR, backOffPower);
             backOffPower++;
             loadAfterDelay(reloadTime);
-
-            //Analytics.sendMopubError(MoPubErrorCode.NO_FILL.toString() + " " + interstitial.getCountryCode());
         }
     }
 
     @Override
     public void onInterstitialShown(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialShown");
+        Helper.wtf("onInterstitialShown",true);
     }
 
     @Override
     public void onInterstitialClicked(MoPubInterstitial interstitial) {
-        Helper.wtf("onInterstitialClicked");
+        Helper.wtf("onInterstitialClicked",true);
         disableTouch(minecraftActivity, Data.Ads.Interstitial.disableTouchChance);
     }
 
@@ -225,8 +244,8 @@ public boolean show() {
         boolean isFreePeriod = freePeriod;
         Helper.wtf("[isMopubNull(false) = " + isMopubNull + "] " + "[isLocked(false) = " + isLocked + "] " + "[isMopubReady(true) = " + isMopubReady + "] [isFreePeriod(false) = " + isFreePeriod + "]");
         if (!isMopubNull && !isLocked && isMopubReady && !isFreePeriod) {
+            Helper.wtf("Showing mopubInterstitial",true);
             showSuccesful = mopubInterstitial.show();
-            Helper.wtf("Called mopub show with result = " + showSuccesful);
         }
         return showSuccesful;
     }
@@ -239,7 +258,7 @@ public void showDelayed(int mills, final Runnable runnable) {
         mainHandler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                if(!show()){
+                if (!show()) {
                     Helper.wtf("We failed to show turning on backpressing");
                     dontBackPress = false;
                 }
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
index 2a3067bc..f99e63ff 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/ApplovinInterstitial.java
@@ -63,7 +63,7 @@ public void showInterstitial()
 
         if ( adToRender != null )
         {
-            Helper.wtf("Showing AppLovin interstitial ad..." );
+            Helper.wtf("Showing AppLovin interstitial ad..." ,true);
 
             parentActivity.runOnUiThread( new Runnable() {
                 public void run()
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
index 12bc9b3a..d76b93bf 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/FastAd.java
@@ -58,7 +58,7 @@ public void load(final Context context, final Runnable initMopubRunnable) {
     }
 
     private void loadApplovin() {
-        Helper.wtf("loading Applovin fastad");
+        Helper.wtf("loading Applovin fastad",true);
         sdk = AppLovinSdk.getInstance(this.activity);
         sdk.getAdService().loadNextAd(AppLovinAdSize.INTERSTITIAL, new AppLovinAdLoadListener() {
             @Override
@@ -75,7 +75,7 @@ public void failedToReceiveAd(int i) {
     }
 
     private void loadAdmob() {
-        Helper.wtf("loading Admob fastad");
+        Helper.wtf("loading Admob fastad",true);
         mGoogleInterstitialAd = new InterstitialAd(activity);
         mGoogleInterstitialAd.setAdUnitId(admobId);
         mGoogleInterstitialAd.setAdListener(new AdListener() {
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
index ebbb537e..1b5ba58b 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/GooglePlayServicesInterstitial.java
@@ -107,13 +107,16 @@ public static boolean isDisabled(Context context) {
         }
         int disabledDay = sharedPreferences.getInt(DISABLED_DAY_KEY, -1);
         boolean isDisabled = disabledDay == currentDayNumber;
-        if(isDisabled){Helper.wtf("ADMOB DISABLED");}
+        if(isDisabled){
+            Helper.wtf("ADMOB DISABLED",true);
+        }
         return isDisabled;
     }
 
     @Override
     public void showInterstitial() {
         if (mGoogleInterstitialAd.isLoaded()) {
+            Helper.wtf("Showing Admob",true);
             Interstitial.FAST_BACK_PRESS = true;
             mGoogleInterstitialAd.show();
         } else {
diff --git a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
index 71105274..6c15f0d6 100644
--- a/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
+++ b/mopub-sdk/mopub-sdk-interstitial/src/main/java/com/mopub/ads/adapters/UnityAdsMopubEvents.java
@@ -50,7 +50,7 @@ protected void loadInterstitial(Context context,
     public void showInterstitial() {
         Helper.wtf("UnityAds Adapter called show");
         if(UnityAds.isReady() && UnityAds.isInitialized()) {
-            Helper.wtf("Should be showing");
+            Helper.wtf("Should be showing Unity Ads",true);
             UnityAds.show(activity);
         } else {
             Helper.wtf("Failed to show unity ads");
