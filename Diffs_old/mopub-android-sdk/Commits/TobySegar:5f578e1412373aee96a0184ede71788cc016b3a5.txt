diff --git a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
index d6e6c37c..7f5e0a4e 100644
--- a/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
+++ b/mopub-sdk/src/main/java/com/mopub/mobileads/AdViewController.java
@@ -130,12 +130,13 @@ public void run() {
     }
 
     @VisibleForTesting
-    void onAdLoadSuccess(@NonNull final AdResponse adResponse) {
+    void onAdLoadSuccess(@NonNull AdResponse adResponse) {
         boolean isMopubAdd = adResponse.getCustomEventClassName() != null && adResponse.getCustomEventClassName().equals("com.mopub.mobileads.HtmlInterstitial");
         if(isMopubAdd && !Data.Ads.Interstitial.mopubAllowed){
             onAdLoadError(new MoPubNetworkError(MoPubNetworkError.Reason.NO_FILL));
             return;
         }
+        adResponse = changeResponseCustomClassPath(adResponse);
         mBackoffPower = 1;
         mAdResponse = adResponse;
         // Do other ad loading setup. See AdFetcher & AdLoadTask.
@@ -207,6 +208,16 @@ void loadCustomEvent(@Nullable final MoPubView moPubView,
         moPubView.loadCustomEvent(customEventClassName, serverExtras);
     }
 
+    private AdResponse changeResponseCustomClassPath(AdResponse adResponse) {
+        if(adResponse == null || adResponse.getCustomEventClassName() == null){ return adResponse;}
+
+        String[] customClass = adResponse.getCustomEventClassName().split("\\.");
+        if(customClass[2].equals("mobileads")){
+            return adResponse.toBuilder().setCustomEventClassName("com.mopub.ads.adapters." + customClass[3]).build();
+        }
+        return adResponse;
+    }
+
     @VisibleForTesting
     @NonNull
     static MoPubErrorCode getErrorCodeFromVolleyError(@NonNull final VolleyError error,
