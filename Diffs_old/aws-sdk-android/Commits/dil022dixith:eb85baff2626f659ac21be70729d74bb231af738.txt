diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
deleted file mode 100644
index 4a93e85924..0000000000
--- a/aws-android-sdk-auth-ui/pom.xml
+++ /dev/null
@@ -1,103 +0,0 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-  <modelVersion>4.0.0</modelVersion>
-  <groupId>com.amazonaws</groupId>
-  <artifactId>aws-android-sdk-auth-ui</artifactId>
-  <packaging>aar</packaging>
-  <name>AWS SDK for Android - AWS Authentication UI</name>
-  <description>The AWS Android SDK for Authentication UI holds the client classes that are used for presenting the SignIn Screen with SignInButtons and Amazon Cognito UserPools UI</description>
-  <url>http://aws.amazon.com/sdkforandroid</url>
-
-  <properties>
-    <project.build.sourceEncoding>
-      UTF-8
-    </project.build.sourceEncoding>
-    <project.reporting.outputEncoding>
-      UTF-8
-    </project.reporting.outputEncoding>
-  </properties>
-
-  <parent>
-    <groupId>com.amazonaws</groupId>
-    <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.19</version>
-  </parent>
-
-  <repositories>
-    <repository>
-      <id>android-support</id>
-      <url>file://${env.ANDROID_HOME}/extras/android/m2repository/</url>
-    </repository>
-  </repositories>
-
-  <dependencies>
-    <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-core</artifactId>
-      <optional>false</optional>
-      <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>
-    <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-google</artifactId>
-      <optional>true</optional>
-      <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>
-    <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-facebook</artifactId>
-      <optional>true</optional>
-      <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>
-    <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-userpools</artifactId>
-      <optional>true</optional>
-      <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android</artifactId>
-      <version>4.1.1.4</version>
-      <scope>provided</scope>
-    </dependency>
-    <dependency>
-      <groupId>com.android.support</groupId>
-      <artifactId>appcompat-v7</artifactId>
-      <optional>true</optional>
-      <version>23.0.1</version>
-      <type>aar</type>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <plugins>
-      <plugin>
-        <groupId>com.simpligility.maven.plugins</groupId>
-        <artifactId>android-maven-plugin</artifactId>
-        <version>4.5.0</version>
-        <extensions>true</extensions>
-        <configuration>
-          <sdk>
-            <platform>25</platform>
-            <buildTools>19.1.0</buildTools>
-          </sdk>
-        </configuration>
-      </plugin>
-
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-compiler-plugin</artifactId>
-      </plugin>
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-javadoc-plugin</artifactId>
-      </plugin>
-    </plugins>
-  </build>
-</project>
diff --git a/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml b/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml
deleted file mode 100644
index a62ce74523..0000000000
--- a/aws-android-sdk-auth-ui/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.amazonaws.mobile.auth.ui">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-
-    <application android:supportsRtl="true">
-        <activity
-             android:name="com.amazonaws.mobile.auth.ui.SignInActivity"
-             android:label="@string/title_activity_sign_in"
-             android:screenOrientation="portrait"
-             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"/>
-    </application>
-<uses-sdk android:minSdkVersion="23" android:targetSdkVersion="25" /></manifest>
-
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java b/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
deleted file mode 100644
index 5b64133aaf..0000000000
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
+++ /dev/null
@@ -1,524 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.ui;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.Gravity;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-
-import com.amazonaws.mobile.auth.core.signin.ui.BackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.SplitBackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.buttons.SignInButton;
-
-import java.lang.reflect.Constructor;
-import java.lang.reflect.Method;
-import java.util.ArrayList;
-
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.dp;
-
-/**
- * View for displaying sign-in components.
- */
-public class SignInView extends LinearLayout {
-
-    /** Log Tag. */
-    private static final String LOG_TAG = SignInView.class.getSimpleName();
-
-    /** Height of the logo image. */
-    private static final int MAX_IMAGE_HEIGHT = dp(250);
-
-    /** Margins of the logo image. */
-    private static final int IMAGE_MARGINS = dp(20);
-
-    /** Margins for the Image Layout that holds the logo image. */
-    private static final int IMAGE_LAYOUT_MARGINS = dp(10);
-
-    /** String that represents the SDK Version. */
-    private static final String SDK_VERSION = "2.6.19";
-
-    /** Common Prefix of the namespaces of different SignIn providers. */
-    private static final String NAMESPACE_COMMON_PREFIX = "com.amazonaws.mobile.auth";
-
-    /** Group name. */
-    private static final String AWS_MOBILE_AUTH_GROUP_NAME = "com.amazonaws";
-
-    /** Dependency name for UserPool SignIn View class. */
-    private static final String USER_POOL_SIGN_IN_VIEW = NAMESPACE_COMMON_PREFIX + ".userpools.UserPoolSignInView";
-
-    /** Dependency name for FormView of UserPool SignIn. */
-    private static final String FORM_VIEW = NAMESPACE_COMMON_PREFIX + ".userpools.FormView";
-
-    /** Dependency name for UserPool SignIn package. */
-    private static final String USER_POOL_SIGN_IN_IMPORT = AWS_MOBILE_AUTH_GROUP_NAME
-            + ":aws-android-sdk-auth-userpools:"
-            + SDK_VERSION;
-
-    /** Dependency name for Facebook Button class. */
-    private static final String FACEBOOK_BUTTON = NAMESPACE_COMMON_PREFIX + ".facebook.FacebookButton";
-
-    /** Dependency name for Facebook SignIn package. */
-    private static final String FACEBOOK_SIGN_IN_IMPORT = AWS_MOBILE_AUTH_GROUP_NAME
-            + ":aws-android-sdk-auth-facebook:"
-            + SDK_VERSION;
-
-    /** Dependency name for Google Button class. */
-    private static final String GOOGLE_BUTTON = NAMESPACE_COMMON_PREFIX + ".google.GoogleButton";
-
-    /** Dependency name for Google SignIn package. */
-    private static final String GOOGLE_SIGN_IN_IMPORT =  AWS_MOBILE_AUTH_GROUP_NAME
-            + ":aws-android-sdk-auth-google:"
-            +  SDK_VERSION;
-
-    /** Package Name for AuthUI. */
-    private static final String PACKAGE_NAME = "com.amazonaws.mobile.auth.ui";
-
-    /** Configuration Key to store AuthUIConfiguration objects. */
-    public static final String CONFIGURATION_KEY = "com.amazonaws.mobile.auth.ui.configurationkey";
-
-    /** Default Background Color. */
-    public static final int DEFAULT_BACKGROUND_COLOR = Color.DKGRAY;
-
-    /** Resource Identitifer for default Logo Image. */
-    public static final int DEFAULT_LOGO_IMAGE_RES_ID = R.drawable.default_sign_in_logo;
-
-    /** Image View. */
-    private ImageView imageView;
-
-    /** Divider in the SignIn screen. */
-    private View divider;
-
-    /** Margins for the SignIn Button. */
-    private int signInButtonMargin;
-
-    /** Width for the SignIn Button. */
-    private int signInButtonWidth;
-
-    /** Height for the SignIn Button. */
-    private int signInButtonHeight;
-
-    /** Reference to the AuthUIConfiguration. */
-    private AuthUIConfiguration config = null;
-
-    /** Reference to the UserPoolsSignInView. */
-    private Object userPoolsSignInView = null;
-
-    /** Stores the list of SignInButtons. */
-    private ArrayList<SignInButton> buttonStore = null;
-
-    /** Resource Identifier for the logo image. */
-    private int logoResId;
-
-    /** Background Color. */
-    private int backgroundColor;
-
-    /** Draw background color the whole screen. */
-    private BackgroundDrawable backgroundDrawable;
-
-    /** Draw background color from the top position to the middle. */
-    private SplitBackgroundDrawable splitBackgroundDrawable;
-
-    /**
-     * Consructor.
-     * @param context Activity Context
-     */
-    public SignInView(final Context context) {
-        this(context, null);
-    }
-
-    /**
-     * Constructor.
-     * @param context Activity Context
-     * @param attrs Attribute Set
-     */
-    public SignInView(final Context context,
-                      final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    /**
-     * Sets up the logo image and the background color.
-     */
-    private void setUpLogoAndBackgroundColor() {
-        /**
-         * Get default background color and image resource ids.
-         */
-        this.logoResId = DEFAULT_LOGO_IMAGE_RES_ID;
-        this.backgroundColor = DEFAULT_BACKGROUND_COLOR;
-
-        Log.d(LOG_TAG, "Using defaults: backgroundColor = "
-            + backgroundColor + "; logoResId = " + logoResId);
-
-        /**
-         * Read in the image resource id and background color
-         * from the configuration if present.
-         */
-        if (!isInEditMode()) {
-            if (this.config != null) {
-                this.logoResId = this.config.getSignInImageResourceId(logoResId);
-                this.backgroundColor = this.config.getSignInBackgroundColor(backgroundColor);
-            }
-        }
-
-        Log.d(LOG_TAG, "Background Color : " + this.backgroundColor);
-        Log.d(LOG_TAG, "Logo : " + this.logoResId);
-    }
-
-    /**
-     * Sets up the Splitter and background drawable.
-     */
-    private void setUpBackgroundDrawable() {
-        backgroundDrawable = new BackgroundDrawable(backgroundColor);
-        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
-            splitBackgroundDrawable = new SplitBackgroundDrawable(0, backgroundColor);
-        } else {
-            splitBackgroundDrawable = new SplitBackgroundDrawable(0);
-        }
-
-        if (this.config != null && this.config.isBackgroundColorFullScreen()) {
-            setBackgroundDrawable(backgroundDrawable);
-        } else {
-            setBackgroundDrawable(splitBackgroundDrawable);
-        }
-    }
-
-    /**
-     * Sets up the image view that displays the logo image.
-     * @param context The activity context.
-     */
-    private void setUpImageView(final Context context) {
-        /**
-         * ImageView that holds the logo image.
-         */
-        imageView = new ImageView(context);
-        imageView.setImageResource(logoResId);
-        imageView.setScaleType(ImageView.ScaleType.FIT_XY);
-        imageView.setAdjustViewBounds(true);
-
-        /**
-         * Layout for the image view.
-         */
-        final LinearLayout.LayoutParams imageLayoutParams
-                = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-        imageLayoutParams.setMargins(IMAGE_LAYOUT_MARGINS, 0, IMAGE_LAYOUT_MARGINS, 0);
-        addView(imageView, imageLayoutParams);
-    }
-
-    /**
-     * Sets up the UserPools UI with the Email and Password FormView.
-     * @param context The activity context.
-     */
-    private void setUpUserPools(final Context context) {
-        /**
-         * Use Reflection for UserPoolSignIn dependency.
-         */
-        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
-            Log.d(LOG_TAG, "Trying to create an instance of UserPoolSignInView");
-
-            userPoolsSignInView = createDependencyObject(USER_POOL_SIGN_IN_VIEW, context, USER_POOL_SIGN_IN_IMPORT);
-            if (userPoolsSignInView != null) {
-                final LinearLayout.LayoutParams userPoolLayoutParams
-                    = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
-                addView((View) userPoolsSignInView, userPoolLayoutParams);
-            }
-        }
-    }
-
-    /**
-     * Sets up the divider that divides the UserPools UI and the SignInButtons.
-     * @param context The activity context.
-     */
-    private void setUpDivider(final Context context) {
-        /**
-         * Create "--or sign in with--" divider if userpools is configured.
-         * Else create "--sign in with--" divider.
-         */
-        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
-            divider = inflate(context, R.layout.horizontal_or_sign_in_divider, null);
-        } else {
-            divider = inflate(context, R.layout.horizontal_sign_in_divider, null);
-        }
-        addView(divider);
-    }
-
-    /**
-     * Sets up the SignIn Buttons.
-     * @param context The activity context.
-     */
-    private void setUpSignInButtons(final Context context) {
-        /**
-         * Get the height, width and margins for the sign in buttons.
-         */
-        signInButtonMargin = getResources().getDimensionPixelSize(R.dimen.sign_in_button_margin);
-        signInButtonWidth  = getResources().getDimensionPixelSize(R.dimen.sign_in_button_width);
-        signInButtonHeight = getResources().getDimensionPixelSize(R.dimen.sign_in_button_height);
-
-        /**
-         * Add the signInButtons configured to the view.
-         */
-        this.addSignInButtonsToView(context);
-
-        /**
-         * There are two conditions on which the divider is set.
-         *
-         * 1. If UserPools is configured and one or more buttons are added.
-         * 2. If One of more buttons are added.
-         */
-        divider.setVisibility(GONE);
-        if (this.buttonStore.size() > 0) {
-            divider.setVisibility(VISIBLE);
-        }
-    }
-
-    /**
-     * Constructor.
-     * @param context Activity Context
-     * @param attrs Attribute Set
-     * @param defStyleAttr Default Style Attribute
-     */
-    public SignInView(final Context context,
-                      final AttributeSet attrs,
-                      final int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-
-        this.setOrientation(VERTICAL);
-        this.setGravity(Gravity.CENTER_HORIZONTAL);
-        this.buttonStore = new ArrayList<SignInButton>();
-        this.config = getConfiguration(context);
-
-        this.setUpLogoAndBackgroundColor();
-        this.setUpBackgroundDrawable();
-        this.setUpImageView(context);
-        this.setUpUserPools(context);
-        this.setUpDivider(context);
-        this.setUpSignInButtons(context);
-    }
-
-    /** {@inheritDoc} */
-    @Override
-    protected void onMeasure(final int widthMeasureSpec,
-                             final int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        resizeImageView();
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-    }
-
-    /** {@inheritDoc} */
-    @Override
-    protected void onLayout(final boolean changed,
-                            final int l,
-                            final int t,
-                            final int r,
-                            final int b) {
-        super.onLayout(changed, l, t, r, b);
-
-        /** Find the split point for the background image, so each half gets a different color. */
-        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
-            if (userPoolsSignInView != null) {
-                View view = (View) userPoolsSignInView;
-                Object formViewObject = invokeGetCredentialsFormView(USER_POOL_SIGN_IN_VIEW,
-                        userPoolsSignInView,
-                        USER_POOL_SIGN_IN_IMPORT);
-                final int measuredHeight = ((View) formViewObject).getMeasuredHeight();
-                final int splitPoint = view.getTop() + (measuredHeight / 2);
-                splitBackgroundDrawable.setSplitPointDistanceFromTop(splitPoint);
-            }
-        } else {
-            final int splitPoint = imageView.getTop() + imageView.getMeasuredHeight();
-            splitBackgroundDrawable.setSplitPointDistanceFromTop(splitPoint);
-        }
-    }
-
-    /** 
-     * Resizes the image view based on the UI Configuration.
-     */
-    private void resizeImageView() {
-        int availableHeight = getAvailableHeight();
-        int availableWidth = getMeasuredWidth();
-
-        int dimension = Math.min(availableHeight, availableWidth);
-        imageView.getLayoutParams().height = dimension;
-        imageView.getLayoutParams().width = dimension;
-
-        ((LayoutParams) imageView.getLayoutParams()).setMargins(
-                IMAGE_MARGINS, IMAGE_MARGINS, IMAGE_MARGINS, IMAGE_MARGINS);
-        imageView.setLayoutParams(imageView.getLayoutParams());
-    }
-
-    /** 
-     * Gets the available height based on the UserPools UI and SignIn Buttons. 
-     * @return The available height in the view
-     */
-    private int getAvailableHeight() {
-        int availableHeight = getMeasuredHeight();
-
-        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
-            if (userPoolsSignInView != null) {
-                availableHeight -= ((View) userPoolsSignInView).getMeasuredHeight();
-            }
-        }
-
-        availableHeight -= divider.getMeasuredHeight();
-
-        final int count = this.buttonStore.size();
-        if (count > 0) {
-            for (SignInButton button : this.buttonStore) {
-                final int buttonHeight = ((View) button).getMeasuredHeight();
-                availableHeight -= buttonHeight;
-                availableHeight -= (2 * signInButtonMargin);
-            }
-        }
-
-        /** Subtract the top and bottom image margins. */
-        availableHeight -= (2 * IMAGE_MARGINS);
-
-        /** Leave a space at least equal to the size of the sign-in button margin on the bottom of the view. */
-        availableHeight -= signInButtonMargin;
-
-        if (availableHeight > MAX_IMAGE_HEIGHT) {
-            availableHeight = MAX_IMAGE_HEIGHT;
-        }
-
-        return availableHeight;
-    }
-
-    /** 
-     * Creates the object for the dependency class specified. 
-     * @param className The class name
-     * @param methodName The method name
-     * @param dependency The string that represents the dependency containing the className
-     * @return The object returned by invoking a method on the class passed in.
-     */
-    private Object createDependencyObject(final String className,
-                                          final Context context,
-                                          final String dependency) {
-        try {
-            Class<?> classObject = Class.forName(className);
-            Constructor<?> constructor = classObject.getConstructor(Context.class);
-            Object object = constructor.newInstance(new Object[] { context });
-            return object;
-        } catch (RuntimeException runtimeException) {
-            throw runtimeException;
-        } catch (Exception exception) {
-            Log.e(LOG_TAG, "Couldn't construct the object. Class " + className + " is not found. " +
-                "Please import the appropriate dependencies: " + dependency, exception);
-            return null;
-        }
-    }
-
-    /** 
-     * Invoke FormView.getCredentialsFormView() function through reflection.
-     * @param className The class name
-     * @param viewObject The object passed as parameter
-     * @param dependencyImport The string that represents the dependency containing the className
-     * @return The object returned by invoking a method on the class passed in.
-     * @return The object returned by invoking FormView.getCredentialsFormView()
-     */
-    private Object invokeGetCredentialsFormView(final String className,
-                                                final Object viewObject,
-                                                final String dependency) {
-        return invokeReflectedMethod(className,
-                "getCredentialsFormView",
-                viewObject,
-                dependency);
-    }
-
-    /**
-     * Invoke a method of a class through reflection.
-     * @param className The class name
-     * @param methodName The method name
-     * @param viewObject The object passed as parameter
-     * @param dependencyImport The string that represents the dependency containing the className
-     * @return The object returned by invoking a method on the class passed in.
-     */
-    private Object invokeReflectedMethod(final String className,
-                                         final String methodName,
-                                         final Object viewObject,
-                                         final String dependencyImport) {
-
-        try {
-            Class<?> formViewClass = Class.forName(className);
-            Method method = formViewClass.getMethod(methodName, new Class[] {});
-            return method.invoke(viewObject);
-        } catch (Exception exception) {
-            Log.e(LOG_TAG, "Class " + className + " is not found. Method " + methodName + " is not found." +
-                    "Please import the appropriate dependencies: " + dependencyImport, exception);
-            return null;
-        }
-    }
-
-    /** 
-     * Gets the AuthUIConfiguration from the intent passed in by the activity. 
-     * @param context The activity context.
-     * @return AuthUIConfiguration The configuration object passed in by the application.
-     */
-    private AuthUIConfiguration getConfiguration(final Context context) {
-        try {
-            Intent intent = ((Activity) context).getIntent();
-            return (AuthUIConfiguration)(intent.getSerializableExtra(CONFIGURATION_KEY));
-        } catch (Exception exception) {
-            Log.e(LOG_TAG, "Intent is null. Cannot read the configuration from the intent.", exception);
-            return null;
-        }
-    }
-
-    /** 
-     * Add SignInButtons to the view.
-     * @param context The activity context.
-     */
-    private void addSignInButtonsToView(final Context context) {
-        try {
-            if (this.config != null) {
-                ArrayList<Class<? extends SignInButton>> signInButtons = this.config.getSignInButtons();
-                if (signInButtons == null) {
-                    Log.d(LOG_TAG, "Skipping creating the SignInButtons. No SignInbuttons were added to the view.");
-                    return;
-                }
-
-                for (Class<? extends SignInButton> signInButton : signInButtons) {
-                    SignInButton buttonObject = (SignInButton) createDependencyObject(signInButton.getName(),
-                            context, signInButton.getCanonicalName());
-                      if (buttonObject != null) {
-                        final LinearLayout.LayoutParams signInButtonLayoutParams
-                                = new LinearLayout.LayoutParams(this.signInButtonWidth, this.signInButtonHeight);
-                        signInButtonLayoutParams.setMargins(0, this.signInButtonMargin, 0, this.signInButtonMargin);
-                        this.buttonStore.add(buttonObject);
-                        addView((View) buttonObject, signInButtonLayoutParams);
-                      } else {
-                        Log.e(LOG_TAG, "Cannot construct an object of SignInButton "
-                                        + signInButton.getCanonicalName());
-                      }
-                }
-            } else {
-                Log.d(LOG_TAG, "AuthUIConfiguration is not configured with any SignInButtons. "
-                                + "There are no buttons to add to the view");
-            }
-        } catch (Exception exception) {
-            Log.e(LOG_TAG, "Cannot access the configuration or error in adding the signin button to the view", exception);
-            return;
-        }
-    }
-}
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-hdpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-hdpi/default_sign_in_logo.png
deleted file mode 100644
index 2d2888be01..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-hdpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-ldpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-ldpi/default_sign_in_logo.png
deleted file mode 100644
index a509bdcffc..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-ldpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-mdpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-mdpi/default_sign_in_logo.png
deleted file mode 100644
index 5cb626ed53..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-mdpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-tvdpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-tvdpi/default_sign_in_logo.png
deleted file mode 100644
index 5af6a1100b..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-tvdpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-xhdpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-xhdpi/default_sign_in_logo.png
deleted file mode 100644
index 2e2ebfb99b..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-xhdpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-xxhdpi/default_sign_in_logo.png b/aws-android-sdk-auth-ui/src/main/res/drawable-xxhdpi/default_sign_in_logo.png
deleted file mode 100644
index 2f31d683c7..0000000000
Binary files a/aws-android-sdk-auth-ui/src/main/res/drawable-xxhdpi/default_sign_in_logo.png and /dev/null differ
diff --git a/aws-android-sdk-auth-ui/src/main/res/layout/activity_sign_in.xml b/aws-android-sdk-auth-ui/src/main/res/layout/activity_sign_in.xml
deleted file mode 100644
index ca1bab0798..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/layout/activity_sign_in.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<com.amazonaws.mobile.auth.ui.SignInView
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:com.amazonaws.mobile.auth.ui="http://schemas.android.com/apk/res-auto"
-        xmlns:tools="http://schemas.android.com/tools"
-        tools:context="com.amazonaws.mobile.auth.ui.SignInActivity"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        com.amazonaws.mobile.auth.ui:signInImageResId="@drawable/default_sign_in_logo">
-</com.amazonaws.mobile.auth.ui.SignInView>
diff --git a/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_or_sign_in_divider.xml b/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_or_sign_in_divider.xml
deleted file mode 100644
index f731eccf61..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_or_sign_in_divider.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="fill_parent"
-              android:layout_height="wrap_content"
-              android:orientation="horizontal"
-              android:layout_gravity="center_horizontal"
-              android:gravity="center_horizontal">
-
-    <View
-            android:layout_width="100dp"
-            android:layout_height="@dimen/sign_in_separator_height"
-            android:background="@color/sign_in_separator_color"
-            android:padding="5dp"
-            android:layout_gravity="start|center_vertical"
-            android:gravity="center_vertical"
-    />
-
-    <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textAppearance="?android:textAppearanceSmall"
-            android:text="@string/sign_in_or"
-            android:padding="10dp"
-            android:layout_gravity="center"
-            android:gravity="center"
-    />
-
-    <View
-            android:layout_width="100dp"
-            android:layout_height="@dimen/sign_in_separator_height"
-            android:background="@color/sign_in_separator_color"
-            android:padding="5dp"
-            android:layout_gravity="end|center_vertical"
-            android:gravity="center_vertical"
-    />
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_sign_in_divider.xml b/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_sign_in_divider.xml
deleted file mode 100644
index 1070f2482e..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/layout/horizontal_sign_in_divider.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="horizontal"
-    android:layout_gravity="center_horizontal"
-    android:gravity="center_horizontal">
-
-    <View
-        android:layout_width="100dp"
-        android:layout_height="@dimen/sign_in_separator_height"
-        android:background="@color/sign_in_separator_color"
-        android:padding="5dp"
-        android:layout_gravity="start|center_vertical"
-        android:gravity="center_vertical"
-        />
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textAppearance="?android:textAppearanceSmall"
-        android:text="@string/sign_in_with"
-        android:padding="10dp"
-        android:layout_gravity="center"
-        android:gravity="center"
-        />
-
-    <View
-        android:layout_width="100dp"
-        android:layout_height="@dimen/sign_in_separator_height"
-        android:background="@color/sign_in_separator_color"
-        android:padding="5dp"
-        android:layout_gravity="end|center_vertical"
-        android:gravity="center_vertical"
-        />
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-ui/src/main/res/values/attrs.xml b/aws-android-sdk-auth-ui/src/main/res/values/attrs.xml
deleted file mode 100644
index 0f09a76318..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
- <resources>
-    <declare-styleable name="SignInView">
-        <attr name="signInBackgroundColor" format="integer">
-            @android:color/darker_gray
-        </attr>
-        <attr name="signInImageResId" format="integer">
-            @drawable/default_sign_in_logo
-        </attr>
-    </declare-styleable>
-
-    <!-- 
-    	 Declare custom theme attributes that allow changing which styles are
-         used for button bars depending on the API level.
-         ?android:attr/buttonBarStyle is new as of API 11 so this is
-         necessary to support previous API levels. 
-     -->
-     <declare-styleable name="ButtonBarContainerTheme">
-         <attr name="metaButtonBarStyle" format="reference" />
-         <attr name="metaButtonBarButtonStyle" format="reference" />
-     </declare-styleable>
- </resources>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-ui/src/main/res/values/colors.xml b/aws-android-sdk-auth-ui/src/main/res/values/colors.xml
deleted file mode 100644
index 8fbc637b5f..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="sign_in_separator_color">#DDDDDD</color>
-</resources>
diff --git a/aws-android-sdk-auth-ui/src/main/res/values/dimens.xml b/aws-android-sdk-auth-ui/src/main/res/values/dimens.xml
deleted file mode 100644
index 3811ba897b..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="sign_in_button_margin">10dp</dimen>
-    <dimen name="sign_in_button_width">240dp</dimen>
-    <dimen name="sign_in_button_height">40dp</dimen>
-    <dimen name="sign_in_separator_height">2dp</dimen>
-</resources>
diff --git a/aws-android-sdk-auth-ui/src/main/res/values/strings.xml b/aws-android-sdk-auth-ui/src/main/res/values/strings.xml
deleted file mode 100644
index 3ccb67746a..0000000000
--- a/aws-android-sdk-auth-ui/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-     <string name="title_activity_sign_in">Sign-in</string>
-     <string name="sign_in_succeeded_message_format">"Sign-in with %s succeeded."</string>
-     <string name="sign_in_canceled_message_format">"Sign-in with %s canceled."</string>
-     <string name="sign_in_or">or sign in with</string>
-     <string name="sign_in_with">Sign in with</string>
-</resources>
diff --git a/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml b/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml
deleted file mode 100644
index 0396e962e6..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.amazonaws.mobile.auth.userpools">
-
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-
-     <application>
-         <activity
-             android:name="com.amazonaws.mobile.auth.userpools.ForgotPasswordActivity"
-             android:label="@string/title_activity_forgot_password"
-             android:screenOrientation="portrait"
-             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-             >
-         </activity>
-
-         <activity
-             android:name="com.amazonaws.mobile.auth.userpools.SignUpActivity"
-             android:label="@string/title_activity_sign_up"
-             android:screenOrientation="portrait"
-             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-             >
-         </activity>
-
-         <activity
-             android:name="com.amazonaws.mobile.auth.userpools.MFAActivity"
-             android:label="@string/title_activity_mfa"
-             android:screenOrientation="portrait"
-             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-             >
-         </activity>
-
-         <activity
-             android:name="com.amazonaws.mobile.auth.userpools.SignUpConfirmActivity"
-             android:label="@string/title_activity_sign_up_confirm"
-             android:screenOrientation="portrait"
-             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-             >
-         </activity>
-     </application>
-<uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" /></manifest>
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java
deleted file mode 100644
index c5fe692dd6..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-
-/**
- * Activity to prompt for a new password along with the verification code.
- */
-public class ForgotPasswordActivity extends Activity {
-    /** Log tag. */
-    private static final String LOG_TAG = ForgotPasswordActivity.class.getSimpleName();
-
-    private ForgotPasswordView forgotPasswordView;
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_forgot_password);
-        forgotPasswordView = (ForgotPasswordView) findViewById(R.id.forgot_password_view);
-    }
-
-    /**
-     * Retrieve input and return to caller.
-     * @param view the Android View
-     */
-    public void forgotPassword(final View view) {
-        final String password = forgotPasswordView.getPassword();
-        final String verificationCode = forgotPasswordView.getVerificationCode();
-
-        Log.d(LOG_TAG, "verificationCode = " + verificationCode);
-
-        final Intent intent = new Intent();
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD, password);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
-
-        setResult(RESULT_OK, intent);
-
-        finish();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java
deleted file mode 100644
index 70bd605c22..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java
+++ /dev/null
@@ -1,189 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.TypedArray;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.graphics.drawable.Drawable;
-import android.support.annotation.Nullable;
-import android.text.InputType;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-
-import com.amazonaws.mobile.config.AWSConfiguration;
-
-import com.amazonaws.mobile.auth.core.IdentityManager;
-import com.amazonaws.mobile.auth.core.signin.SignInManager;
-import com.amazonaws.mobile.auth.core.signin.ui.BackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils;
-import com.amazonaws.mobile.auth.core.signin.ui.SplitBackgroundDrawable;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_COLOR;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_CORNER_RADIUS;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_SIDE_MARGIN_RATIO;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.MAX_FORM_WIDTH_IN_PIXELS;
-
-/**
- * This view present the ForgotPassword screen for the user to reset the
- * password.
- */
-public class ForgotPasswordView extends LinearLayout {
-
-    /** Log tag. */
-    private static final String LOG_TAG = ForgotPasswordView.class.getSimpleName();
-
-    private FormView forgotPassForm;
-    private EditText verificationCodeEditText;
-    private EditText passwordEditText;
-    private Button confirmButton;
-
-    private SplitBackgroundDrawable splitBackgroundDrawable;
-    private BackgroundDrawable backgroundDrawable;
-    private String fontFamily;
-    private boolean fullScreenBackgroundColor;
-    private Typeface typeFace;
-    private int backgroundColor;
-
-    /**
-     * Constructs the ForgotPassword View.
-     * @param context The activity context.
-     */
-    public ForgotPasswordView(final Context context) {
-        this(context, null);
-    }
-
-    /**
-     * Constructs the ForgotPassword View.
-     * @param context The activity context.
-     * @param attrs The Attribute Set for the view from which the resources can be accessed.
-     */
-    public ForgotPasswordView(final Context context, @Nullable final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    /**
-     * Constructs the ForgotPassword View.
-     * @param context The activity context.
-     * @param attrs The Attribute Set for the view from which the resources can be accessed.
-     * @param defStyleAttr The resource identifier for the default style attribute.
-     */
-    public ForgotPasswordView(final Context context, @Nullable final AttributeSet attrs, final int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        setOrientation(VERTICAL);
-
-        final int backgroundColor;
-        if (isInEditMode()) {
-            backgroundColor = Color.DKGRAY;
-        } else {
-            final TypedArray styledAttributes = context.obtainStyledAttributes(attrs, R.styleable.ForgotPasswordView);
-            backgroundColor = styledAttributes.getInt(R.styleable.ForgotPasswordView_forgotPasswordViewBackgroundColor, 
-                                                      Color.DKGRAY);
-            styledAttributes.recycle();
-        }
-
-        this.fontFamily = CognitoUserPoolsSignInProvider.getFontFamily();
-        this.typeFace = Typeface.create(this.fontFamily, Typeface.NORMAL);
-        this.fullScreenBackgroundColor = CognitoUserPoolsSignInProvider.isBackgroundColorFullScreen();
-        this.backgroundColor = CognitoUserPoolsSignInProvider.getBackgroundColor();
-
-        if (fullScreenBackgroundColor) {
-            this.backgroundDrawable = new BackgroundDrawable(this.backgroundColor);
-        } else {
-            this.splitBackgroundDrawable = new SplitBackgroundDrawable(0, this.backgroundColor);
-        }
-    }
-
-    private void setupFontFamily() {
-        if (this.typeFace != null) {
-            Log.d(LOG_TAG, "Setup font in ForgotPasswordView: " + this.fontFamily);
-            verificationCodeEditText.setTypeface(this.typeFace);
-            passwordEditText.setTypeface(this.typeFace);
-        }
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        forgotPassForm = (FormView) findViewById(R.id.forgot_password_form);
-
-        verificationCodeEditText = forgotPassForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_NUMBER,
-            getContext().getString(R.string.sign_up_confirm_code));
-
-        passwordEditText = forgotPassForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT|InputType.TYPE_TEXT_VARIATION_PASSWORD,
-            getContext().getString(R.string.sign_in_password));
-
-        setupConfirmButtonColor();
-        setupFontFamily();
-    }
-
-    private void setupConfirmButtonColor() {
-        confirmButton = (Button) findViewById(R.id.forgot_password_button);
-        confirmButton.setBackgroundDrawable(DisplayUtils.getRoundedRectangleBackground(
-            FORM_BUTTON_CORNER_RADIUS, FORM_BUTTON_COLOR));
-        LayoutParams signUpButtonLayoutParams = (LayoutParams) confirmButton.getLayoutParams();
-        signUpButtonLayoutParams.setMargins(
-            forgotPassForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.topMargin,
-            forgotPassForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.bottomMargin);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
-        final int maxWidth = Math.min((int)(parentWidth * FORM_SIDE_MARGIN_RATIO), MAX_FORM_WIDTH_IN_PIXELS);
-        super.onMeasure(MeasureSpec.makeMeasureSpec(maxWidth, MeasureSpec.AT_MOST), heightMeasureSpec);
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        super.onLayout(changed, l, t, r, b);
-        setupBackground();
-    }
-
-    private void setupBackground() {
-        if (!this.fullScreenBackgroundColor) {
-            splitBackgroundDrawable.setSplitPointDistanceFromTop(forgotPassForm.getTop()
-                + (forgotPassForm.getMeasuredHeight()/2));
-            ((ViewGroup) getParent()).setBackgroundDrawable(splitBackgroundDrawable);
-        } else {
-            ((ViewGroup) getParent()).setBackgroundDrawable(backgroundDrawable);
-        }
-    }
-
-    public String getVerificationCode() {
-        return verificationCodeEditText.getText().toString();
-    }
-
-    public String getPassword() {
-        return passwordEditText.getText().toString();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormEditText.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormEditText.java
deleted file mode 100644
index f3c2b138e4..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormEditText.java
+++ /dev/null
@@ -1,184 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.content.Context;
-import android.graphics.Color;
-import android.support.annotation.IdRes;
-import android.text.Editable;
-import android.text.InputType;
-import android.text.TextWatcher;
-import android.view.Gravity;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.dp;
-
-import java.util.Locale;
-
-/**
- * An EditText that shows the hint as a floating label once text is entered in the view.
- */
-public class FormEditText extends LinearLayout {
-    private static final int TEXT_VIEW_ID = 0xF01;
-    private static final int EDIT_TEXT_ID = 0xF02;
-    private static final int BIT_FOR_SHOWING_PASSWORD = InputType.TYPE_TEXT_VARIATION_PASSWORD ^ InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD;
-    private static final int TEXT_VIEW_TOP_MARGIN = dp(5);
-    private static final int EDIT_VIEW_BOTTOM_PADDING = dp(5);
-    private static final int SHOW_PASSWORD_LEFT_RIGHT_MARGIN = dp(5);
-    private static final int SHOW_PASSWORD_TOP_MARGIN = dp(-5); // float the show box up.
-    private TextView textView;
-    private EditText editText;
-    private LinearLayout editFieldLayout;
-    private TextView showPasswordToggleTextView = null;
-    private boolean hasSetMinimumSize = false;
-
-    @IdRes
-    private int toViewId(int id) {
-        return id;
-    }
-
-    public FormEditText(Context context, int inputType, final String fieldName) {
-        super(context);
-        this.setOrientation(VERTICAL);
-        this.setGravity(Gravity.CENTER_VERTICAL);
-
-        textView = new TextView(context);
-        textView.setText(fieldName.toUpperCase(Locale.getDefault()));
-        textView.setId(toViewId(TEXT_VIEW_ID));
-        final LinearLayout.LayoutParams textViewLayoutParams
-            = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-        textViewLayoutParams.setMargins(0, TEXT_VIEW_TOP_MARGIN, 0, 0);
-        this.addView(textView, textViewLayoutParams);
-        textView.setVisibility(INVISIBLE);
-
-        editText = new EditText(context);
-        editText.setSingleLine();
-        editText.setInputType(inputType);
-        editText.setBackgroundColor(Color.TRANSPARENT);
-        editText.setPadding(0,dp(2), 0, dp(2) + EDIT_VIEW_BOTTOM_PADDING);
-        editText.setId(toViewId(EDIT_TEXT_ID));
-        editText.setHint(fieldName);
-
-        final LinearLayout.LayoutParams editTextLayoutParams
-            = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-        editTextLayoutParams.setMargins(0, 0, 0, 0);
-
-        if ((inputType & InputType.TYPE_TEXT_VARIATION_PASSWORD) > 0) {
-            editFieldLayout = new LinearLayout(context);
-            editFieldLayout.setOrientation(HORIZONTAL);
-            editTextLayoutParams.gravity = Gravity.START;
-            editTextLayoutParams.weight = 1;
-            editFieldLayout.addView(editText, editTextLayoutParams);
-
-            showPasswordToggleTextView = new TextView(context);
-            setupShowHidePassword();
-            this.addView(editFieldLayout);
-
-        } else {
-            this.addView(editText, editTextLayoutParams);
-        }
-
-        setupTextChangedListener();
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        if (!hasSetMinimumSize) {
-            this.setMinimumHeight(textView.getMeasuredHeight() + TEXT_VIEW_TOP_MARGIN + editText.getMeasuredHeight());
-            textView.setVisibility(GONE);
-            hasSetMinimumSize = true;
-        }
-    }
-
-    private void setupShowHidePassword() {
-        final String showText = getResources().getString(R.string.sign_in_show_password);
-        final String hideText = getResources().getString(R.string.sign_in_hide_password);
-
-        showPasswordToggleTextView.setText(showText);
-        final LinearLayout.LayoutParams showPassLayoutParams
-            = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-        showPassLayoutParams.setMargins(
-            SHOW_PASSWORD_LEFT_RIGHT_MARGIN, SHOW_PASSWORD_TOP_MARGIN, SHOW_PASSWORD_LEFT_RIGHT_MARGIN, 0);
-        showPassLayoutParams.gravity = Gravity.END | Gravity.CENTER_VERTICAL;
-
-        editFieldLayout.addView(showPasswordToggleTextView, showPassLayoutParams);
-        showPasswordToggleTextView.setVisibility(GONE);
-
-        showPasswordToggleTextView.setOnClickListener(new OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                final CharSequence oldText = showPasswordToggleTextView.getText();
-                final CharSequence newText = oldText.equals(showText) ? hideText : showText;
-                showPasswordToggleTextView.setText(newText);
-                int selectionStart = editText.getSelectionStart();
-                int selectionEnd = editText.getSelectionEnd();
-                if (oldText.equals(showText)) {
-                    editText.setInputType(editText.getInputType() | BIT_FOR_SHOWING_PASSWORD);
-                } else {
-                    editText.setInputType(editText.getInputType() & ~BIT_FOR_SHOWING_PASSWORD);
-                }
-                editText.setSelection(selectionStart, selectionEnd);
-            }
-        });
-    }
-
-    private void setupTextChangedListener() {
-        editText.addTextChangedListener(new TextWatcher() {
-            private void handleFloatingTextVisibility() {
-                if (editText.getText().length() == 0) {
-                    if (hasSetMinimumSize) {
-                        textView.setVisibility(GONE);
-                    }
-                    editText.setPadding(0,dp(2), 0, dp(2) + EDIT_VIEW_BOTTOM_PADDING);
-                    if (showPasswordToggleTextView != null) {
-                        showPasswordToggleTextView.setVisibility(GONE);
-                    }
-                } else {
-                    textView.setVisibility(VISIBLE);
-                    editText.setPadding(0,dp(1), 0, dp(3) + EDIT_VIEW_BOTTOM_PADDING);
-                    if (showPasswordToggleTextView != null) {
-                        showPasswordToggleTextView.setVisibility(VISIBLE);
-                    }
-                }
-            }
-
-            @Override
-            public void beforeTextChanged(final CharSequence text, final int start, final int count, final int after) {
-            }
-
-            @Override
-            public void onTextChanged(final CharSequence text, final int start, final int before, final int count) {
-            }
-
-            @Override
-            public void afterTextChanged(final Editable text) {
-                handleFloatingTextVisibility();
-            }
-        });
-    }
-
-    public EditText getEditTextView() {
-        return editText;
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormView.java
deleted file mode 100644
index 85a3bf4b61..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/FormView.java
+++ /dev/null
@@ -1,159 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.drawable.Drawable;
-import android.graphics.drawable.LayerDrawable;
-import android.graphics.drawable.ShapeDrawable;
-import android.support.annotation.Nullable;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.dp;
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.getRoundedRectangleBackground;
-
-/**
- * A view for displaying text and passwords.
- */
-public class FormView extends LinearLayout {
-    /** Corner radius. */
-    private static final int FORM_CORNER_RADIUS = dp(8);
-    private static final int FIELD_LEFT_RIGHT_MARGIN = dp(20);
-
-    /** Background Drawables for the form. */
-    private final Drawable[] backgroundDrawables = new Drawable[] {
-        // Border Shadow
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.DKGRAY, 10),
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.DKGRAY, 20),
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.DKGRAY, 30),
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.DKGRAY, 50),
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.DKGRAY, 80),
-        // Background Color
-        createRoundedRectShape(FORM_CORNER_RADIUS, Color.WHITE, 100)};
-
-    public FormView(final Context context) {
-        this(context, null);
-    }
-
-    public FormView(final Context context, @Nullable final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public FormView(final Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        this.setOrientation(VERTICAL);
-        this.setBackgroundDrawable(getFormBackground());
-    }
-
-    private ShapeDrawable createRoundedRectShape(final int cornerRadius, final int color, final int alpha) {
-        final ShapeDrawable insetBorderDrawable =
-            getRoundedRectangleBackground(cornerRadius, color);
-        if (alpha < 100) {
-            insetBorderDrawable.setAlpha(alpha);
-        }
-        insetBorderDrawable.getPaint().setColor(color);
-        return insetBorderDrawable;
-    }
-
-    /**
-     * Create the form background.
-     * @return the background drawable.
-     */
-    private Drawable getFormBackground() {
-        final LayerDrawable layerDrawable = new LayerDrawable(backgroundDrawables);
-
-        for (int i = 0; i < backgroundDrawables.length; i++) {
-            layerDrawable.setLayerInset(i, dp(i), dp(i), dp(i), dp(i));
-        }
-
-        return layerDrawable;
-    }
-
-    private static class Divider extends View {
-        final Paint paint;
-        public Divider(Context context) {
-            super(context);
-            paint = new Paint();
-        }
-
-        @Override
-        protected void onDraw(Canvas canvas) {
-            super.onDraw(canvas);
-            paint.setColor(Color.LTGRAY);
-            canvas.drawRect(getMeasuredWidth() * 0.1f, 0, getMeasuredWidth() * 0.9f, getMeasuredHeight(), paint);
-        }
-    }
-
-    private EditText addField(final Context context, int inputType, final String fieldName) {
-        final int additionalTopMarginForFirstElement;
-
-        if (getChildCount() == 0) {
-            additionalTopMarginForFirstElement = getFormShadowMargin();
-        } else {
-            additionalTopMarginForFirstElement = 0;
-
-            // Get previous ites layout params.
-            final LinearLayout.LayoutParams prevFormEditTextLayoutParams
-                = (LayoutParams)getChildAt(getChildCount() - 1).getLayoutParams();
-
-            // Clear previous item's bottom margin.
-            prevFormEditTextLayoutParams.setMargins(
-                prevFormEditTextLayoutParams.leftMargin,
-                prevFormEditTextLayoutParams.topMargin,
-                prevFormEditTextLayoutParams.rightMargin,
-                0);
-
-            // Add a divider before the next item.
-            addView(new Divider(context), LayoutParams.MATCH_PARENT, dp(1));
-        }
-
-        final FormEditText formEditText = new FormEditText(context, inputType, fieldName);
-        final LinearLayout.LayoutParams formEditTextLayoutParams
-            = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-
-        formEditTextLayoutParams.setMargins(FIELD_LEFT_RIGHT_MARGIN, additionalTopMarginForFirstElement, FIELD_LEFT_RIGHT_MARGIN, getFormShadowMargin());
-        this.addView(formEditText, formEditTextLayoutParams);
-
-        return formEditText.getEditTextView();
-    }
-
-
-    /**
-     * Add a field to the form.
-     * @param context the context.
-     * @param inputType the desired EditText input type.
-     * @param fieldName the field name.
-     * @return the EditText object created within the form.
-     */
-    public EditText addFormField(final Context context, int inputType, final String fieldName) {
-        return addField(context, inputType, fieldName);
-    }
-
-    /**
-     * @return the number of margin pixels drawn on each side of the form.
-     */
-    public int getFormShadowMargin() {
-        return dp(backgroundDrawables.length - 1);
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java
deleted file mode 100644
index a32fa70363..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-/**
- * Activity to prompt for a a verification code.
- */
-public class MFAActivity extends Activity {
-    /** Log tag. */
-    private static final String LOG_TAG = MFAActivity.class.getSimpleName();
-    private MFAView mfaView;
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_mfa);
-        mfaView = (MFAView) findViewById(R.id.mfa_view);
-    }
-
-    /**
-     * Retrieve input and return to caller.
-     * @param view the Android View
-     */
-    public void verify(final View view) {
-        final String verificationCode = mfaView.getMFACode();
-
-        Log.d(LOG_TAG, "verificationCode = " + verificationCode);
-
-        final Intent intent = new Intent();
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
-
-        setResult(RESULT_OK, intent);
-
-        finish();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java
deleted file mode 100644
index 4530f9e85a..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java
+++ /dev/null
@@ -1,175 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.TypedArray;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.support.annotation.Nullable;
-import android.text.InputType;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-
-import com.amazonaws.mobile.config.AWSConfiguration;
-
-import com.amazonaws.mobile.auth.core.IdentityManager;
-import com.amazonaws.mobile.auth.core.signin.SignInManager;
-import com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils;
-import com.amazonaws.mobile.auth.core.signin.ui.BackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.SplitBackgroundDrawable;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_COLOR;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_CORNER_RADIUS;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_SIDE_MARGIN_RATIO;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.MAX_FORM_WIDTH_IN_PIXELS;
-
-/**
- * View for showing MFA confirmation upon sign-in.
- */
-public class MFAView extends LinearLayout {
-
-    /** Log tag. */
-    private static final String LOG_TAG = MFAView.class.getSimpleName();
-
-    private FormView mfaForm;
-    private EditText mfaCodeEditText;
-    private Button confirmButton;
-    
-    private SplitBackgroundDrawable splitBackgroundDrawable;
-    private BackgroundDrawable backgroundDrawable;
-    private String fontFamily;
-    private boolean fullScreenBackgroundColor;
-    private Typeface typeFace;
-    private int backgroundColor;
-
-   /**
-    * Constructs the MFA View.
-    * @param context The activity context.
-    */
-    public MFAView(Context context) {
-        this(context, null);
-    }
-
-   /**
-    * Constructs the MFA View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    */
-    public MFAView(Context context, @Nullable AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-   /**
-    * Constructs the MFA View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    * @param defStyleAttr The resource identifier for the default style attribute.
-    */
-    public MFAView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        setOrientation(VERTICAL);
-        final int backgroundColor;
-        
-        if (isInEditMode()) {
-            backgroundColor = Color.DKGRAY;
-        } else {
-            final TypedArray styledAttributes = context.obtainStyledAttributes(attrs, R.styleable.MFAView);
-            backgroundColor = styledAttributes.getInt(R.styleable.MFAView_mfaViewBackgroundColor, Color.DKGRAY);
-            styledAttributes.recycle();
-        }
-
-        this.fontFamily = CognitoUserPoolsSignInProvider.getFontFamily();
-        this.typeFace = Typeface.create(this.fontFamily, Typeface.NORMAL);
-        this.fullScreenBackgroundColor = CognitoUserPoolsSignInProvider.isBackgroundColorFullScreen();
-        this.backgroundColor = CognitoUserPoolsSignInProvider.getBackgroundColor();
-
-        if (fullScreenBackgroundColor) {
-            this.backgroundDrawable = new BackgroundDrawable(this.backgroundColor);
-        } else {
-            this.splitBackgroundDrawable = new SplitBackgroundDrawable(0, this.backgroundColor);
-        }
-    }
-
-    private void setupFontFamily() {
-        if (this.typeFace != null) {
-            Log.d(LOG_TAG, "Setup font in MFAView: " + this.fontFamily);
-            mfaCodeEditText.setTypeface(typeFace);
-        }
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        mfaForm = (FormView) findViewById(R.id.mfa_form);
-
-        mfaCodeEditText = mfaForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_NUMBER,
-            getContext().getString(R.string.forgot_password_input_code_hint));
-
-        setupFontFamily();
-        setupVerifyButtonColor();
-    }
-
-    private void setupVerifyButtonColor() {
-        confirmButton = (Button) findViewById(R.id.mfa_button);
-        confirmButton.setBackgroundDrawable(
-            DisplayUtils.getRoundedRectangleBackground(FORM_BUTTON_CORNER_RADIUS, FORM_BUTTON_COLOR));
-        final LayoutParams signUpButtonLayoutParams = (LayoutParams) confirmButton.getLayoutParams();
-        signUpButtonLayoutParams.setMargins(
-            mfaForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.topMargin,
-            mfaForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.bottomMargin);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
-        final int maxWidth = Math.min((int)(parentWidth * FORM_SIDE_MARGIN_RATIO), MAX_FORM_WIDTH_IN_PIXELS);
-        super.onMeasure(MeasureSpec.makeMeasureSpec(maxWidth, MeasureSpec.AT_MOST), heightMeasureSpec);
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        super.onLayout(changed, l, t, r, b);
-        setupBackground();
-    }
-
-    private void setupBackground() {
-        if (!this.fullScreenBackgroundColor) {
-            splitBackgroundDrawable.setSplitPointDistanceFromTop(mfaForm.getTop()
-                + (mfaForm.getMeasuredHeight()/2));
-            ((ViewGroup) getParent()).setBackgroundDrawable(splitBackgroundDrawable);
-        } else {
-            ((ViewGroup) getParent()).setBackgroundDrawable(backgroundDrawable);
-        }
-    }
-
-    public String getMFACode() {
-        return mfaCodeEditText.getText().toString();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java
deleted file mode 100644
index 48e4451c6c..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-/**
- * Activity to prompt for account sign up information.
- */
-public class SignUpActivity extends Activity {
-    /** Log tag. */
-    private static final String LOG_TAG = SignUpActivity.class.getSimpleName();
-
-    private SignUpView signUpView;
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_sign_up);
-
-        signUpView = (SignUpView) findViewById(R.id.signup_view);
-
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-    }
-
-    /**
-     * Retrieve input and return to caller.
-     * @param view the Android View
-     */
-    public void signUp(final View view) {
-
-        final String username = signUpView.getUserName();
-        final String password = signUpView.getPassword();
-        final String givenName = signUpView.getGivenName();
-        final String email = signUpView.getEmail();
-        final String phone = signUpView.getPhone();
-
-        Log.d(LOG_TAG, "username = " + username);
-        Log.d(LOG_TAG, "given_name = " + givenName);
-        Log.d(LOG_TAG, "email = " + email);
-        Log.d(LOG_TAG, "phone = " + phone);
-
-        final Intent intent = new Intent();
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME, username);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD, password);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.GIVEN_NAME, givenName);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.EMAIL_ADDRESS, email);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PHONE_NUMBER, phone);
-
-        setResult(RESULT_OK, intent);
-
-        finish();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java
deleted file mode 100644
index 0a74ef6ab7..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-/**
- * Activity to prompt for sign-up confirmation information.
- */
-public class SignUpConfirmActivity extends Activity {
-    /** Log tag. */
-    private static final String LOG_TAG = SignUpConfirmActivity.class.getSimpleName();
-    private SignUpConfirmView signUpConfirmView;
-
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_sign_up_confirm);
-
-        final String username = getIntent().getStringExtra(
-            CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
-
-        signUpConfirmView = (SignUpConfirmView) findViewById(R.id.signup_confirm_view);
-        signUpConfirmView.getUserNameEditText().setText(username);
-        signUpConfirmView.getConfirmCodeEditText().requestFocus();
-    }
-
-    /**
-     * Retrieve input and return to caller.
-     * @param view the Android View
-     */
-    public void confirmAccount(final View view) {
-
-        final String username =
-            signUpConfirmView.getUserNameEditText().getText().toString();
-        final String verificationCode =
-            signUpConfirmView.getConfirmCodeEditText().getText().toString();
-
-        Log.d(LOG_TAG, "username = " + username);
-        Log.d(LOG_TAG, "verificationCode = " + verificationCode);
-
-        final Intent intent = new Intent();
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME, username);
-        intent.putExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
-
-        setResult(RESULT_OK, intent);
-
-        finish();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java
deleted file mode 100644
index 70fee8e3d9..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java
+++ /dev/null
@@ -1,183 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.TypedArray;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.support.annotation.Nullable;
-import android.text.InputType;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-
-import com.amazonaws.mobile.config.AWSConfiguration;
-
-import com.amazonaws.mobile.auth.core.IdentityManager;
-import com.amazonaws.mobile.auth.core.signin.SignInManager;
-import com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils;
-import com.amazonaws.mobile.auth.core.signin.ui.BackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.SplitBackgroundDrawable;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_COLOR;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_CORNER_RADIUS;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_SIDE_MARGIN_RATIO;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.MAX_FORM_WIDTH_IN_PIXELS;
-
-/**
- * This view presents the confirmation screen for user sign up.
- */
-public class SignUpConfirmView extends LinearLayout {
-
-    /** Log tag. */
-    private static final String LOG_TAG = SignUpConfirmView.class.getSimpleName();
-
-    private FormView confirmForm;
-    private EditText userNameEditText;
-    private EditText confirmCodeEditText;
-
-    private Button confirmButton;
-    private SplitBackgroundDrawable splitBackgroundDrawable;
-    private BackgroundDrawable backgroundDrawable;
-    private String fontFamily;
-    private boolean fullScreenBackgroundColor;
-    private Typeface typeFace;
-    private int backgroundColor;
-
-   /**
-    * Constructs the SignUpConfirm View.
-    * @param context The activity context.
-    */
-    public SignUpConfirmView(final Context context) {
-        this(context, null);
-    }
-
-   /**
-    * Constructs the SignUpConfirm View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    */
-    public SignUpConfirmView(final Context context, @Nullable final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-   /**
-    * Constructs the SignUpConfirm View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    * @param defStyleAttr The resource identifier for the default style attribute.
-    */
-    public SignUpConfirmView(final Context context, @Nullable final AttributeSet attrs, final int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        setOrientation(VERTICAL);
-        final int backgroundColor;
-        if (isInEditMode()) {
-            backgroundColor = Color.DKGRAY;
-        } else {
-            final TypedArray styledAttributes = context.obtainStyledAttributes(attrs, R.styleable.SignUpConfirmView);
-            backgroundColor = styledAttributes.getInt(R.styleable.SignUpConfirmView_signUpConfirmViewBackgroundColor, Color.DKGRAY);
-            styledAttributes.recycle();
-        }
-
-        this.fontFamily = CognitoUserPoolsSignInProvider.getFontFamily();
-        this.typeFace = Typeface.create(this.fontFamily, Typeface.NORMAL);
-        this.fullScreenBackgroundColor = CognitoUserPoolsSignInProvider.isBackgroundColorFullScreen();
-        this.backgroundColor = CognitoUserPoolsSignInProvider.getBackgroundColor();
-
-        if (this.fullScreenBackgroundColor) {
-            this.backgroundDrawable = new BackgroundDrawable(this.backgroundColor);
-        } else {
-            this.splitBackgroundDrawable = new SplitBackgroundDrawable(0, this.backgroundColor);
-        }
-    }
-
-    private void setupFontFamily() {
-        if (this.typeFace != null) {
-            Log.d(LOG_TAG, "Setup font in SignUpConfirmView: " + this.fontFamily);
-            userNameEditText.setTypeface(this.typeFace);
-            confirmCodeEditText.setTypeface(this.typeFace);
-        }
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        confirmForm = (FormView) findViewById(R.id.signup_confirm_form);
-        userNameEditText = confirmForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT| InputType.TYPE_TEXT_VARIATION_PERSON_NAME,
-            getContext().getString(R.string.username_text));
-
-        confirmCodeEditText = confirmForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_NUMBER,
-            getContext().getString(R.string.sign_up_confirm_code));
-
-        setupConfirmButtonColor();
-        setupFontFamily();
-    }
-
-    private void setupConfirmButtonColor() {
-        confirmButton = (Button) findViewById(R.id.confirm_account_button);
-        confirmButton.setBackgroundDrawable(DisplayUtils.getRoundedRectangleBackground(
-            FORM_BUTTON_CORNER_RADIUS, FORM_BUTTON_COLOR));
-        final LayoutParams signUpButtonLayoutParams = (LayoutParams) confirmButton.getLayoutParams();
-        signUpButtonLayoutParams.setMargins(
-            confirmForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.topMargin,
-            confirmForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.bottomMargin);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
-        final int maxWidth = Math.min((int)(parentWidth * FORM_SIDE_MARGIN_RATIO), MAX_FORM_WIDTH_IN_PIXELS);
-        super.onMeasure(MeasureSpec.makeMeasureSpec(maxWidth, MeasureSpec.AT_MOST), heightMeasureSpec);
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        super.onLayout(changed, l, t, r, b);
-        setupBackground();
-    }
-
-    private void setupBackground() {
-        if (!this.fullScreenBackgroundColor) {
-            splitBackgroundDrawable.setSplitPointDistanceFromTop(confirmForm.getTop()
-                + (confirmForm.getMeasuredHeight()/2));
-            ((ViewGroup) getParent()).setBackgroundDrawable(splitBackgroundDrawable);
-        } else {
-            ((ViewGroup) getParent()).setBackgroundDrawable(backgroundDrawable);
-        }
-    }
-
-    public EditText getUserNameEditText() {
-        return userNameEditText;
-    }
-
-    public EditText getConfirmCodeEditText() {
-        return confirmCodeEditText;
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java
deleted file mode 100644
index f01252fe78..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java
+++ /dev/null
@@ -1,235 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.TypedArray;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.text.InputType;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import android.support.v4.content.res.ResourcesCompat;
-
-import com.amazonaws.mobile.config.AWSConfiguration;
-import com.amazonaws.mobile.auth.core.IdentityManager;
-import com.amazonaws.mobile.auth.core.signin.SignInManager;
-import com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils;
-import com.amazonaws.mobile.auth.core.signin.ui.BackgroundDrawable;
-import com.amazonaws.mobile.auth.core.signin.ui.SplitBackgroundDrawable;
-
-import com.amazonaws.mobile.auth.userpools.R;
-
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_COLOR;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_CORNER_RADIUS;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_SIDE_MARGIN_RATIO;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.MAX_FORM_WIDTH_IN_PIXELS;
-
-/**
- * The view that handles user sign-up for Cognito User Pools.
- */
-public class SignUpView extends LinearLayout {
-
-    /** Log tag. */
-    private static final String LOG_TAG = SignUpView.class.getSimpleName();
-
-    private TextView signUpMessage;
-    private Button signUpButton;
-    private FormView signUpForm;
-    private EditText userNameEditText;
-    private EditText passwordEditText;
-    private EditText givenNameEditText;
-    private EditText emailEditText;
-    private EditText phoneEditText;
-
-    private SplitBackgroundDrawable splitBackgroundDrawable;
-    private BackgroundDrawable backgroundDrawable;
-    private String fontFamily;
-    private boolean fullScreenBackgroundColor;
-    private Typeface typeFace;
-    private int backgroundColor;
-
-    /**
-     * Constructs the SignUp View.
-     * @param context The activity context.
-     */
-    public SignUpView(final Context context) {
-        this(context, null);
-    }
-
-   /**
-    * Constructs the SignUp View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    */
-    public SignUpView(final Context context, final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-   /**
-    * Constructs the SignUp View.
-    * @param context The activity context.
-    * @param attrs The Attribute Set for the view from which the resources can be accessed.
-    * @param defStyleAttr The resource identifier for the default style attribute.
-    */
-    public SignUpView(final Context context, final AttributeSet attrs, final int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        setOrientation(VERTICAL);
-
-        final int backgroundColor;
-        if (isInEditMode()) {
-            backgroundColor = Color.DKGRAY;
-        } else {
-            final TypedArray styledAttributes = context.obtainStyledAttributes(attrs, R.styleable.SignUpView);
-            backgroundColor = styledAttributes.getInt(R.styleable.SignUpView_signUpViewBackgroundColor, Color.DKGRAY);
-            styledAttributes.recycle();
-        }
-
-        this.fontFamily = CognitoUserPoolsSignInProvider.getFontFamily();
-        this.typeFace = Typeface.create(this.fontFamily, Typeface.NORMAL);
-        this.fullScreenBackgroundColor = CognitoUserPoolsSignInProvider.isBackgroundColorFullScreen();
-        this.backgroundColor = CognitoUserPoolsSignInProvider.getBackgroundColor();
-
-        if (this.fullScreenBackgroundColor) {
-            this.backgroundDrawable = new BackgroundDrawable(this.backgroundColor);
-        } else {
-            this.splitBackgroundDrawable = new SplitBackgroundDrawable(0, this.backgroundColor);
-        }
-    }
-
-    private void setupFontFamily() {
-        if (this.typeFace != null) {
-            Log.d(LOG_TAG, "Setup font in SignUpView: " + this.fontFamily);
-            userNameEditText.setTypeface(typeFace);
-            passwordEditText.setTypeface(typeFace);
-            givenNameEditText.setTypeface(typeFace);
-            emailEditText.setTypeface(typeFace);
-            phoneEditText.setTypeface(typeFace);
-            signUpMessage.setTypeface(typeFace);
-            signUpButton.setTypeface(typeFace);
-        }
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        this.signUpForm = (FormView) findViewById(R.id.signup_form);
-        userNameEditText = signUpForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT| InputType.TYPE_TEXT_VARIATION_PERSON_NAME,
-            getContext().getString(R.string.username_text));
-
-        passwordEditText = signUpForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT|InputType.TYPE_TEXT_VARIATION_PASSWORD,
-            getContext().getString(R.string.sign_in_password));
-
-        givenNameEditText = signUpForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT| InputType.TYPE_TEXT_VARIATION_PERSON_NAME,
-            getContext().getString(R.string.given_name_text));
-
-        emailEditText = signUpForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_TEXT| InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS,
-            getContext().getString(R.string.email_address_text));
-
-        phoneEditText = signUpForm.addFormField(getContext(),
-            InputType.TYPE_CLASS_PHONE,
-            getContext().getString(R.string.phone_number_text));
-
-        this.signUpMessage = (TextView) findViewById(R.id.signup_message);
-        this.signUpButton = (Button) findViewById(R.id.signup_button);
-
-        setupSignUpButtonBackground();
-        setupFontFamily();
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
-        final int maxWidth = Math.min((int)(parentWidth * FORM_SIDE_MARGIN_RATIO), MAX_FORM_WIDTH_IN_PIXELS);
-        super.onMeasure(MeasureSpec.makeMeasureSpec(maxWidth, MeasureSpec.AT_MOST), heightMeasureSpec);
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int l, int t, int r, int b) {
-        super.onLayout(changed, l, t, r, b);
-        setupBackground();
-    }
-
-    private void setupSignUpButtonBackground() {
-        signUpButton.setBackgroundDrawable(DisplayUtils.getRoundedRectangleBackground(
-            FORM_BUTTON_CORNER_RADIUS, FORM_BUTTON_COLOR));
-        LayoutParams signUpButtonLayoutParams = (LayoutParams) signUpButton.getLayoutParams();
-        signUpButtonLayoutParams.setMargins(
-            signUpForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.topMargin,
-            signUpForm.getFormShadowMargin(),
-            signUpButtonLayoutParams.bottomMargin);
-    }
-
-    private void setupBackground() {
-        if (!this.fullScreenBackgroundColor) {
-            splitBackgroundDrawable.setSplitPointDistanceFromTop(signUpForm.getTop()
-                + (signUpForm.getMeasuredHeight()/2));
-            ((ViewGroup) getParent()).setBackgroundDrawable(splitBackgroundDrawable);
-        } else {
-            ((ViewGroup) getParent()).setBackgroundDrawable(backgroundDrawable);
-        }
-    }
-
-    /**
-     * @return the user's user name entered in the form.
-     */
-    public String getUserName() {
-        return userNameEditText.getText().toString();
-    }
-
-    /**
-     * @return the user's password entered in the form.
-     */
-    public String getPassword() {
-        return passwordEditText.getText().toString();
-    }
-
-    /**
-     * @return the user's given name entered in the form.
-     */
-    public String getGivenName() {
-       return givenNameEditText.getText().toString();
-    }
-
-    /**
-     * @return the user's email entered in the form.
-     */
-    public String getEmail() {
-        return emailEditText.getText().toString();
-    }
-
-    /**
-     * @return the user's phone number entered in the form.
-     */
-    public String getPhone() {
-        return phoneEditText.getText().toString();
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java b/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java
deleted file mode 100644
index 937b871701..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java
+++ /dev/null
@@ -1,270 +0,0 @@
-/*
-  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
-  * All Rights Reserved.
-  *
-  * Licensed under the Apache License, Version 2.0 (the "License");
-  * you may not use this file except in compliance with the License.
-  * You may obtain a copy of the License at
-  *
-  *     http://www.apache.org/licenses/LICENSE-2.0
-  *
-  * Unless required by applicable law or agreed to in writing, software
-  * distributed under the License is distributed on an "AS IS" BASIS,
-  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  * See the License for the specific language governing permissions and
-  * limitations under the License.
-  */
-
-package com.amazonaws.mobile.auth.userpools;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.Resources;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.support.annotation.Nullable;
-import android.text.InputType;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.Gravity;
-
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import com.amazonaws.mobile.auth.core.signin.SignInManager;
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.dp;
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.getRoundedRectangleBackground;
-
-import com.amazonaws.mobile.auth.userpools.R;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_COLOR;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_BUTTON_CORNER_RADIUS;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.FORM_SIDE_MARGIN_RATIO;
-import static com.amazonaws.mobile.auth.userpools.UserPoolFormConstants.MAX_FORM_WIDTH_IN_PIXELS;
-
-/**
- * User Pools Sign-in Control. This view presents a form to handle user sign-in.
- * It also presents choices for creating a new account or retrieving a forgotten password.
- */
-public class UserPoolSignInView extends LinearLayout {
-
-    /** Log tag. */
-    private static final String LOG_TAG = UserPoolSignInView.class.getSimpleName();
-
-    /** Create Account Text View */
-    private TextView signUpTextView;
-
-    /** Forgot Password Text View */
-    private TextView forgotPasswordTextView;
-
-    /** The credentials form that styles the username and password fields. */
-    private FormView credentialsFormView;
-
-    /** The Username field. */
-    private EditText userNameEditText;
-
-    /** The Password field. */
-    private EditText passwordEditText;
-
-    /** The sign in button. */
-    private Button signInButton;
-
-    /** Flag for whether the control has been intitialized. */
-    private boolean isInitialized;
-
-    /** Background Color. */
-    private int backgroundColor;
-
-    /** Default Background color used by the views. */
-    private static final int DEFAULT_BACKGROUND_COLOR = Color.DKGRAY;
-
-    /** Font family. */
-    private String fontFamily;
-
-    /** Typeface for font family. */
-    private boolean isBackgroundColorFullScreenEnabled;
-
-    public UserPoolSignInView(final Context context) {
-        this(context, null);
-    }
-
-    public UserPoolSignInView(final Context context, @Nullable final AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public UserPoolSignInView(final Context context, @Nullable final AttributeSet attrs, final int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        this.setOrientation(VERTICAL);
-        this.setGravity(Gravity.CENTER);
-        this.setId(R.id.user_pool_sign_in_view_id);
-
-        setupCredentialsForm(context);
-        setupSignInButton(context);
-        setupLayoutForSignUpAndForgotPassword(context);
-        setupFontFamily((Activity) context);
-        setupBackgroundColor((Activity) context);
-        setupBackgroundColorFullScreen((Activity) context);
-    }
-
-    private void initializeIfNecessary() {
-        if (isInitialized) {
-            return;
-        }
-        isInitialized = true;
-
-        if (isInEditMode()) {
-            return;
-        }
-
-        try {
-            final SignInManager signInManager = SignInManager.getInstance();
-            signInManager.initializeSignInButton(CognitoUserPoolsSignInProvider.class, signInButton);
-        } catch (final Exception exception) {
-            Log.e(LOG_TAG, "Cannot initialize the SignInButton. Please check if IdentityManager :" +
-                              " startUpAuth and setUpToAuthenticate are invoked", exception);
-        }
-    }
-
-    private void setupCredentialsForm(final Context context) {
-        credentialsFormView = new FormView(context);
-        final LinearLayout.LayoutParams formViewLayoutParams
-            = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-
-        userNameEditText = credentialsFormView.addFormField(context,
-            InputType.TYPE_CLASS_TEXT|InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS,
-            // User Pools requires sign in with the username or verified channel.
-            // Mobile Hub does not set up email verification because it requires SES verification.
-            // Hence, prompt customers to login using the username or phone number.
-            context.getString(R.string.sign_in_username));
-
-        passwordEditText = credentialsFormView.addFormField(context,
-            InputType.TYPE_CLASS_TEXT|InputType.TYPE_TEXT_VARIATION_PASSWORD,
-            context.getString(R.string.sign_in_password));
-
-        this.addView(credentialsFormView, formViewLayoutParams);
-    }
-
-    private void setupSignInButton(final Context context) {
-        signInButton = new Button(context);
-        signInButton.setTextColor(Color.WHITE);
-        signInButton.setText(context.getString(R.string.sign_in_button_text));
-        signInButton.setAllCaps(false);
-        signInButton.setBackgroundDrawable(
-            getRoundedRectangleBackground(FORM_BUTTON_CORNER_RADIUS, FORM_BUTTON_COLOR));
-
-        final Resources resources = getResources();
-        final LinearLayout.LayoutParams signInButtonLayoutParams = new LinearLayout.LayoutParams(
-            ViewGroup.LayoutParams.MATCH_PARENT,
-            resources.getDimensionPixelSize(R.dimen.sign_in_button_height));
-        final int signInButtonMarginTopBottom
-            = resources.getDimensionPixelSize(R.dimen.user_pools_sign_in_button_margin_top_bottom);
-        signInButtonLayoutParams.setMargins(
-            credentialsFormView.getFormShadowMargin(),
-            signInButtonMarginTopBottom + credentialsFormView.getFormShadowMargin(),
-            credentialsFormView.getFormShadowMargin(),
-            0);
-        this.addView(signInButton, signInButtonLayoutParams);
-    }
-
-    private void setupLayoutForSignUpAndForgotPassword(final Context context) {
-        final LinearLayout layoutForSignUpAndForgotPassword = new LinearLayout(context);
-        layoutForSignUpAndForgotPassword.setOrientation(HORIZONTAL);
-        final LinearLayout.LayoutParams layoutParamsForSignUpAndForgotPassword
-            = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-
-        layoutParamsForSignUpAndForgotPassword.setMargins(credentialsFormView.getFormShadowMargin(),
-            dp(10), credentialsFormView.getFormShadowMargin(), 0);
-        layoutParamsForSignUpAndForgotPassword.gravity = Gravity.CENTER_HORIZONTAL;
-
-        signUpTextView = new TextView(context);
-        signUpTextView.setText(R.string.sign_in_new_account);
-        signUpTextView.setTextAppearance(context, android.R.style.TextAppearance_Small);
-        signUpTextView.setGravity(Gravity.START);
-        signUpTextView.setTextColor(FORM_BUTTON_COLOR);
-        final LinearLayout.LayoutParams layoutParamsForNewAccountText
-            = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-        layoutParamsForNewAccountText.weight = 1;
-        layoutForSignUpAndForgotPassword.addView(signUpTextView, layoutParamsForNewAccountText);
-
-        forgotPasswordTextView = new TextView(context);
-        forgotPasswordTextView.setText(R.string.sign_in_forgot_password);
-        forgotPasswordTextView.setTextAppearance(context, android.R.style.TextAppearance_Small);
-        forgotPasswordTextView.setGravity(Gravity.END);
-        forgotPasswordTextView.setTextColor(FORM_BUTTON_COLOR);
-        final LinearLayout.LayoutParams layoutParamsForForgotPassword
-            = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
-        layoutParamsForForgotPassword.weight = 1;
-        layoutForSignUpAndForgotPassword.addView(forgotPasswordTextView, layoutParamsForForgotPassword);
-
-        this.addView(layoutForSignUpAndForgotPassword, layoutParamsForSignUpAndForgotPassword);
-    }
-
-    private void setupBackgroundColor(final Activity activity) {
-        Intent intent = activity.getIntent();
-        this.backgroundColor = (int) (intent.getIntExtra(CognitoUserPoolsSignInProvider.AttributeKeys.BACKGROUND_COLOR,
-                                                             DEFAULT_BACKGROUND_COLOR));
-    }
-
-    int getBackgroundColor() {
-        return this.backgroundColor;
-    }
-
-    String getFontFamily() {
-        return this.fontFamily;
-    }
-
-    boolean isBackgroundColorFullScreen() {
-        return this.isBackgroundColorFullScreenEnabled;
-    }
-
-    private void setupFontFamily(final Activity activity) {
-        Intent intent = activity.getIntent();
-        this.fontFamily = (String) (intent.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.FONT_FAMILY));
-        if (this.fontFamily != null) {
-            Typeface typeFace = Typeface.create(this.fontFamily, Typeface.NORMAL);
-            Log.d(LOG_TAG, "Setup font in UserPoolSignInView: " + this.fontFamily);
-            signUpTextView.setTypeface(typeFace);
-            forgotPasswordTextView.setTypeface(typeFace);
-            signInButton.setTypeface(typeFace);
-            userNameEditText.setTypeface(typeFace);
-            passwordEditText.setTypeface(typeFace);
-        }
-    }
-
-    private void setupBackgroundColorFullScreen(final Activity activity) {
-        Intent intent = activity.getIntent();
-        this.isBackgroundColorFullScreenEnabled = (boolean) (intent.getBooleanExtra(
-            CognitoUserPoolsSignInProvider.AttributeKeys.FULL_SCREEN_BACKGROUND_COLOR, false));
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
-        final int maxWidth = Math.min((int)(parentWidth * FORM_SIDE_MARGIN_RATIO), MAX_FORM_WIDTH_IN_PIXELS);
-        super.onMeasure(MeasureSpec.makeMeasureSpec(maxWidth, MeasureSpec.AT_MOST), heightMeasureSpec);
-        initializeIfNecessary();
-    }
-
-    public TextView getSignUpTextView() {
-        return signUpTextView;
-    }
-
-    public TextView getForgotPasswordTextView() {
-        return forgotPasswordTextView;
-    }
-
-    public String getEnteredUserName() {
-        return userNameEditText.getText().toString();
-    }
-
-    public String getEnteredPassword() {
-        return passwordEditText.getText().toString();
-    }
-
-    public FormView getCredentialsFormView() {
-        return credentialsFormView;
-    }
-}
diff --git a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_forgot_password.xml b/aws-android-sdk-auth-userpools/src/main/res/layout/activity_forgot_password.xml
deleted file mode 100644
index d70de976e0..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_forgot_password.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:com.amazonaws.mobile.auth.userpools="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.amazonaws.mobile.auth.userpools.ForgotPasswordActivity"
-    android:gravity="center_horizontal">
-
-    <com.amazonaws.mobile.auth.userpools.ForgotPasswordView
-        android:id="@+id/forgot_password_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-        
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:textColor="@android:color/white"
-            android:text="@string/forgot_password_header"
-            android:id="@+id/forgot_password_title" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_intra_group_separation"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:textColor="@android:color/white"
-            android:text="@string/forgot_password_body"
-            android:id="@+id/forgot_password_message" />
-
-        <com.amazonaws.mobile.auth.userpools.FormView
-            android:id="@+id/forgot_password_form"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin" />
-
-        <Button
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/user_pools_button_height"
-            android:layout_marginTop="@dimen/user_pools_intra_group_separation"
-            android:text="@string/forgot_password_button_hint"
-            android:textColor="@android:color/white"
-            android:textAllCaps="false"
-            android:textSize="@dimen/user_pools_button_text_size"
-            android:id="@+id/forgot_password_button"
-            android:onClick="forgotPassword"/>
-
-    </com.amazonaws.mobile.auth.userpools.ForgotPasswordView>
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_mfa.xml b/aws-android-sdk-auth-userpools/src/main/res/layout/activity_mfa.xml
deleted file mode 100644
index dd118b9bb9..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_mfa.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:com.amazonaws.mobile.auth.userpools="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.amazonaws.mobile.auth.userpools.MFAActivity"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:gravity="center_horizontal">
-
-    <com.amazonaws.mobile.auth.userpools.MFAView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:id="@+id/mfa_view">
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:textColor="@android:color/white"
-            android:text="@string/mfa_header"
-            android:id="@+id/mfa_title" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_intra_group_separation"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:textColor="@android:color/white"
-            android:text="@string/mfa_code_sent_message"
-            android:id="@+id/mfa_message" />
-
-        <com.amazonaws.mobile.auth.userpools.FormView
-            android:id="@+id/mfa_form"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:layout_marginBottom="@dimen/user_pools_form_margin" />
-
-        <Button
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/user_pools_button_height"
-            android:text="@string/verify_button_text"
-            android:textColor="@android:color/white"
-            android:textAllCaps="false"
-            android:textSize="@dimen/user_pools_button_text_size"
-            android:id="@+id/mfa_button"
-            android:onClick="verify"/>
-    </com.amazonaws.mobile.auth.userpools.MFAView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up.xml b/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up.xml
deleted file mode 100644
index e9d4c6f216..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:com.amazonaws.mobile.auth.userpools="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.amazonaws.mobile.auth.userpools.SignUpActivity"
-    android:id="@+id/signup_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical"
-    android:gravity="center_horizontal">
-
-    <com.amazonaws.mobile.auth.userpools.SignUpView
-        android:id="@+id/signup_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:gravity="center_horizontal">
-
-        <TextView
-            android:id="@+id/signup_message"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:text="@string/sign_up_header"
-            android:textAppearance="?android:attr/textAppearanceMedium"
-            android:maxLines="1"
-            android:textColor="@android:color/white"
-            android:gravity="center" />
-
-        <com.amazonaws.mobile.auth.userpools.FormView
-            android:id="@+id/signup_form"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:layout_marginBottom="@dimen/user_pools_form_margin"/>
-
-        <Button
-            android:id="@+id/signup_button"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/user_pools_button_height"
-            android:onClick="signUp"
-            android:text="@string/title_activity_sign_up"
-            android:textColor="@android:color/white"
-            android:textAllCaps="false"
-            android:textSize="@dimen/user_pools_button_text_size"/>
-    </com.amazonaws.mobile.auth.userpools.SignUpView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up_confirm.xml b/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up_confirm.xml
deleted file mode 100644
index b3863b70ad..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/layout/activity_sign_up_confirm.xml
+++ /dev/null
@@ -1,64 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:com.amazonaws.mobile.auth.userpools="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.amazonaws.mobile.auth.userpools.SignUpConfirmActivity"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:gravity="center_horizontal">
-
-    <com.amazonaws.mobile.auth.userpools.SignUpConfirmView
-        android:id="@+id/signup_confirm_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:gravity="center_horizontal">
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:text="@string/sign_up_confirm_title"
-            android:textColor="@android:color/white"
-            android:id="@+id/confirm_account_title"/>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_intra_group_separation"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:textColor="@android:color/white"
-            android:text="@string/sign_up_confirm_code_sent"
-            android:id="@+id/confirm_account_message1" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_intra_group_separation"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:textColor="@android:color/white"
-            android:text="@string/sign_up_confirm_enter_code"
-            android:id="@+id/confirm_account_message2" />
-
-        <com.amazonaws.mobile.auth.userpools.FormView
-            android:id="@+id/signup_confirm_form"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/user_pools_form_margin"
-            android:layout_marginBottom="@dimen/user_pools_form_margin"/>
-
-        <Button
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/user_pools_button_height"
-
-            android:text="@string/sign_up_confirm_text"
-            android:textAllCaps="false"
-            android:textSize="@dimen/user_pools_button_text_size"
-            android:textColor="@android:color/white"
-            android:id="@+id/confirm_account_button"
-            android:onClick="confirmAccount"/>
-    </com.amazonaws.mobile.auth.userpools.SignUpConfirmView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/attrs.xml b/aws-android-sdk-auth-userpools/src/main/res/values/attrs.xml
deleted file mode 100644
index 3f123c6386..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
- <resources>
-      <declare-styleable name="ForgotPasswordView">
-          <attr name="forgotPasswordViewBackgroundColor" format="integer"/>
-      </declare-styleable>
-      <declare-styleable name="MFAView">
-          <attr name="mfaViewBackgroundColor" format="integer"/>
-      </declare-styleable>
-      <declare-styleable name="SignUpView">
-          <attr name="signUpViewBackgroundColor" format="integer"/>
-      </declare-styleable>
-      <declare-styleable name="SignUpConfirmView">
-          <attr name="signUpConfirmViewBackgroundColor" format="integer"/>
-      </declare-styleable>
- </resources>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml b/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml
deleted file mode 100644
index a45ac977d1..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="sign_in_button_height">40dp</dimen>
-    <dimen name="user_pools_sign_in_button_margin_top_bottom">10dp</dimen>
-    <dimen name="user_pools_button_text_size">20sp</dimen>
-    <dimen name="user_pools_button_height">45dp</dimen>
-    <dimen name="user_pools_intra_group_separation">10dp</dimen>
-    <dimen name="user_pools_form_margin">20dp</dimen>
-</resources>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/ids.xml b/aws-android-sdk-auth-userpools/src/main/res/values/ids.xml
deleted file mode 100644
index 264d8befd7..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/values/ids.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <item name="user_pool_sign_in_view_id" type="id"/>
-</resources>
\ No newline at end of file
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml b/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml
deleted file mode 100644
index 384abf4d52..0000000000
--- a/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<resources>
-    <string name="title_activity_sign_in">Sign-in</string>
-    <string name="sign_in_button_text">Sign In</string>
-    <string name="sign_in_username">User Name / Phone # (+1555&#8230;)</string>
-    <string name="sign_in_password">Password</string>
-    <string name="sign_in_new_account">Create New Account</string>
-    <string name="sign_in_forgot_password">Forgot Your Password?</string>
-    <string name="sign_in_show_password">show</string>
-    <string name="sign_in_hide_password">hide</string>
-    <string name="title_activity_sign_up">Sign Up</string>
-    <string name="title_activity_forgot_password">Forgot Password</string>
-    <string name="title_activity_mfa">MFA Code</string>
-    <string name="title_activity_sign_up_confirm">Confirm Account</string>
-    <string name="title_dialog_sign_up_failed">Sign Up Failed</string>
-    <string name="forgot_password_header">Forgot your password?</string>
-    <string name="forgot_password_body">Set your new password with the verification code that was sent to you.</string>
-    <string name="forgot_password_input_code_hint">Verification code</string>
-    <string name="forgot_password_button_hint">Set password</string>
-    <string name="mfa_header">MFA verification is required to authenticate.</string>
-    <string name="mfa_code_sent_message">Code sent.</string>
-    <string name="verify_button_text">Verify</string>
-    <string name="username_text">Username</string>
-    <string name="given_name_text">Given name</string>
-    <string name="email_address_text">Email address</string>
-    <string name="phone_number_text">Phone number (+15551234567)</string>
-    <string name="sign_up_header">Enter your information to sign up.</string>
-    <string name="sign_up_confirm_code">Confirmation code</string>
-    <string name="sign_up_confirm_text">Confirm</string>
-    <string name="sign_up_confirm_code_sent">A confirmation code was sent.</string>
-    <string name="sign_up_confirm_enter_code">Please enter the code below to confirm your account.</string>
-    <string name="sign_up_confirm_title">Confirm your account</string>
-    <string name="password_change_success">Password change succeeded.</string>
-    <string name="password_change_failed">Password change failed.</string>
-    <string name="sign_up_success">Sign up succeeded.</string>
-    <string name="sign_up_failed">Sign up failed.</string>
-    <string name="login_failed">Login failed.</string>
-    <string name="sign_up_confirm_success">Sign up confirmation succeeded.</string>
-    <string name="sign_up_confirm_failed">Sign up confirmation failed.</string>
-    <string name="user_does_not_exist">The provided username does not exist.</string>
-    <string name="incorrect_username_or_password">The provided username or password is incorrect.</string>
-    <string name="password_change_no_verification_failed">Cannot reset password without registered/verified email or phone number</string>
-    <string name="mfa_code_empty">MFA Code is empty.</string>
-    <string name="mfa_failed">MFA Failed.</string>
-    <string name="password_length_validation_failed">Password should have 6 or more characters.</string>
-    <string name="sign_up_username_missing">Missing username.</string>
-    <string name="sign_up_confirm_code_missing">Sign Up Confirmation code is missing.</string>
-</resources>
diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
index c05c90e746..b2803375d7 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
@@ -60,7 +60,7 @@
  * 
  * <pre>
  * // Create IdentityManager and set it as the default instance.
- * IdentityManager idm = new IdentityManager(new AWSConfiguration(getApplicationContext()));
+ * IdentityManager idm = new IdentityManager(new AWSConfiguration());
  * IdentityManager.setDefaultIdentityManager(idm);
  * 
  * // Use IdentityManager to retrieve the {@link com.amazonaws.auth.CognitoCachingCredentialsProvider}
@@ -134,12 +134,6 @@ private void setUnderlyingProvider(final CognitoCachingCredentialsProvider under
     /** Reference to the default identity manager */
     private static IdentityManager defaultIdentityManager = null;
 
-    /** 
-     * SharedPreferences key name used to store the short-lived AWS Credentials
-     * by the CognitoCachingCredentialsProvider.
-     */
-    private static final String SHARED_PREF_NAME = "com.amazonaws.android.auth";
-    
     /** 
      * SharedPreferences key name used to store the expiration date for the 
      * short-lived AWS Credentials.
@@ -151,9 +145,6 @@ private void setUnderlyingProvider(final CognitoCachingCredentialsProvider under
      */
     private class AWSRefreshingCognitoIdentityProvider extends AWSBasicCognitoIdentityProvider {
 
-        /** Log tag. */
-        private final String LOG_TAG = AWSRefreshingCognitoIdentityProvider.class.getSimpleName();
-
         public AWSRefreshingCognitoIdentityProvider(final String accountId,
                                                     final String identityPoolId,
                                                     final ClientConfiguration clientConfiguration,
@@ -178,8 +169,6 @@ public String refresh() {
 
     /**
      * Constructor that takes in the application context.
-     * 
-     * @param context the application context.
      */
     public IdentityManager() {
         this.awsConfiguration = null;
@@ -189,7 +178,7 @@ public IdentityManager() {
 
     /**
      * Constructor. 
-     * Initializes with the application context and the AWSConfiguration passed in.
+     * Initializes with the AWSConfiguration passed in.
      * Creates a default ClientConfiguration with the user agent from AWSConfiguration.
      *
      * @param awsConfiguration the aws configuration.
@@ -203,8 +192,7 @@ public IdentityManager(final AWSConfiguration awsConfiguration) {
 
     /**
      * Constructor.
-     * Initializes with the application context, the AWSConfiguration
-     * and the ClientConfiguration passed in.
+     * Initializes with the AWSConfiguration and the ClientConfiguration passed in.
      * Read the UserAgent from AWSConfiguration and set in ClientConfiguration.
      *
      * @param awsConfiguration the aws configuration.
@@ -658,81 +646,72 @@ public void resumeSession(final StartupAuthResultHandler startupAuthResultHandle
 
         LOG.log(Level.FINE, "Resume Session called.");
         
-        executorService.submit(new Runnable() {
-            public void run() {
-                LOG.log(Level.FINE, "Looking for a previously signed-in session.");
-                final SignInManager signInManager = SignInManager.getInstance();
-                
-                final SignInProvider signInProvider = signInManager.getPreviouslySignedInProvider();
-
-                // if the user was previously signed-in with an sign-in provider and
-                // we are able to verify with the sign-in provider.
-                if (signInProvider != null) {
-                    LOG.log(Level.FINE, "Refreshing credentials with sign-in provider "
+        executorService.submit(() -> {
+            LOG.log(Level.INFO, "Looking for a previously signed-in session.");
+            final SignInManager signInManager = SignInManager.getInstance();
+            
+            final SignInProvider signInProvider = signInManager.getPreviouslySignedInProvider();
+            
+            // if the user was previously signed-in with an sign-in provider and
+            // we are able to verify with the sign-in provider.
+            if (signInProvider != null) {
+                LOG.log(Level.INFO, "Refreshing credentials with sign-in provider "
                         + signInProvider.getDisplayName());
-                    // TODO
-                    throw new UnsupportedOperationException("Not supported yet");
-                    
-                    /*
-                    // Use the token from the previously signed-in session to
-                    // get a AWS Identity using Cognito Federated Identities
-                    // The AWS Identity will be wrapped into the CredentialsProvider
-                    // which will contain short-lived AWS Credentials to access
-                    // AWS resources.             
-                    signInManager.refreshCredentialsWithProvider(signInProvider,
-                            new SignInProviderResultHandler() {
-
-                                @Override
-                                public void onSuccess(final IdentityProvider provider) {
-                                    LOG.log(Level.FINE, "Successfully got AWS Credentials.");
-        
-                                    runAfterStartupAuthDelay(new Runnable() {
-                                        @Override
-                                        public void run() {
-                                            startupAuthResultHandler.onComplete(new StartupAuthResult(IdentityManager.this, null));
-                                        }
-                                    });
-                                }
-        
-                                @Override
-                                public void onCancel(final IdentityProvider provider) {
-                                    LOG.log(Level.SEVERE, "Cancel can't happen when handling a previously signed-in user.");
-                                }
-        
-                                @Override
-                                public void onError(final IdentityProvider provider, final Exception ex) {
-                                    LOG.log(Level.WARNING,
-                                            String.format("Federate with Cognito with %s Sign-in provider failed. Error: %s",
-                                                    provider.getDisplayName(), ex.getMessage()), ex);
-        
-                                    if (ex instanceof AuthException) {
-                                        completeHandler(startupAuthResultHandler,
-                                                (AuthException) ex);
-                                    } else {
-                                        completeHandler(startupAuthResultHandler,
-                                                new AuthException(provider, ex));
-                                    }
+                
+                // Use the token from the previously signed-in session to
+                // get a AWS Identity using Cognito Federated Identities
+                // The AWS Identity will be wrapped into the CredentialsProvider
+                // which will contain short-lived AWS Credentials to access
+                // AWS resources.
+                signInManager.refreshCredentialsWithProvider(signInProvider,
+                        new SignInProviderResultHandler() {
+                            
+                            @Override
+                            public void onSuccess(final IdentityProvider provider) {
+                                LOG.log(Level.INFO, "Successfully got AWS Credentials.");
+                                
+                                runAfterStartupAuthDelay(() -> {
+                                    startupAuthResultHandler.onComplete(new StartupAuthResult(IdentityManager.this, null));
+                                });
+                            }
+                            
+                            @Override
+                            public void onCancel(final IdentityProvider provider) {
+                                LOG.log(Level.SEVERE, "Cancel can't happen when handling a previously signed-in user.");
+                            }
+                            
+                            @Override
+                            public void onError(final IdentityProvider provider, final Exception ex) {
+                                LOG.log(Level.WARNING,
+                                        String.format("Federate with Cognito with %s Sign-in provider failed. Error: %s",
+                                                provider.getDisplayName(), ex.getMessage()), ex);
+                                
+                                if (ex instanceof AuthException) {
+                                    completeHandler(startupAuthResultHandler,
+                                            (AuthException) ex);
+                                } else {
+                                    completeHandler(startupAuthResultHandler,
+                                            new AuthException(provider, ex));
                                 }
-                            });
-                    */
-                } else {
-                    // No previously signed-in provider found. No session to resume.
-                    // Notify the user by executing the callback handler.
-                    completeHandler(startupAuthResultHandler, null);
-                }
-
-                if (minimumDelay > 0) {
-                    // Wait for the expiration timeout.
-                    try {
-                        Thread.sleep(minimumDelay);
-                    } catch (final InterruptedException ex) {
-                        LOG.log(Level.INFO, "Interrupted while waiting for resume session timeout.");
-                    }
+                            }
+                        });
+            } else {
+                // No previously signed-in provider found. No session to resume.
+                // Notify the user by executing the callback handler.
+                completeHandler(startupAuthResultHandler, null);
+            }
+            
+            if (minimumDelay > 0) {
+                // Wait for the expiration timeout.
+                try {
+                    Thread.sleep(minimumDelay);
+                } catch (final InterruptedException ex) {
+                    LOG.log(Level.INFO, "Interrupted while waiting for resume session timeout.");
                 }
-
-                // Expire the resume session timeout.
-                startupAuthTimeoutLatch.countDown();
             }
+            
+            // Expire the resume session timeout.
+            startupAuthTimeoutLatch.countDown();
         });
     }
 
@@ -757,7 +736,7 @@ public void resumeSession(final StartupAuthResultHandler startupAuthResultHandle
      * identity.
      *
      * @param startupAuthResultHandler a handler for returning results.
-     * @deprecated Please use {@link #resumeSession(Activity, StartupAuthResultHandler)} method instead.
+     * @deprecated Please use {@link #resumeSession(StartupAuthResultHandler)} method instead.
      */
     @Deprecated
     public void doStartupAuth(final StartupAuthResultHandler startupAuthResultHandler) {
@@ -811,16 +790,14 @@ public void setUpToAuthenticate(final SignInResultHandler signInResultHandler) {
     public void login(final SignInResultHandler signInResultHandler) {
         // Start the sign-in activity. 
         // We do not finish the calling activity allowing the user to navigate back.
-        // TODO
-        throw new UnsupportedOperationException("Not supported yet");
-//        try {
-//            SignInManager
-//                .getInstance()
-//                .setResultHandler(signInResultHandler);
-//        } catch (final Exception exception) {
-//            LOG.log(Level.WARNING, "Error in instantiating SignInManager. " +
-//                           "Check the context and completion handler.", exception);
-//        }
+        try {
+            SignInManager
+                .getInstance()
+                .setResultHandler(signInResultHandler);
+        } catch (final Exception exception) {
+            LOG.log(Level.WARNING, "Error in instantiating SignInManager. " +
+                           "Check the context and completion handler.", exception);
+        }
     }
 
     /**
diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityProvider.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityProvider.java
index 7f5bb7ff1a..2c390b0d57 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityProvider.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityProvider.java
@@ -27,7 +27,6 @@
     /**
      * Method called upon constructing an identity provider for it to handle its initialization.
      *
-     * @param context the context.
      * @param configuration the configuration.
      */
     void initialize(AWSConfiguration configuration);
diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
index c641cccfa7..0395c4c758 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
@@ -18,6 +18,7 @@
 package com.amazonaws.mobile.auth.core.internal.util;
 
 import java.util.Optional;
+import javafx.application.Platform;
 import javafx.scene.control.Alert;
 import javafx.scene.control.ButtonType;
 
@@ -34,7 +35,20 @@
      */
     public static void showDialog(final String title, final String body) {
 
-        Alert alert = new Alert(Alert.AlertType.INFORMATION);
+        if (Platform.isFxApplicationThread()) {
+            createAlert(title, body);
+        } else {
+            Platform.runLater(new Runnable() {
+                @Override
+                public void run() {
+                    createAlert(title, body);
+                }
+            });
+        }
+    }
+
+    private static void createAlert(final String title, final String body) {
+        final Alert alert = new Alert(Alert.AlertType.INFORMATION);
         alert.setTitle(title);
         alert.setContentText(body);
         alert.show();
diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
index 857d66cde4..3cd9f3cb18 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
@@ -231,16 +231,15 @@ public void setProviderResultsHandler(final SignInProviderResultHandler resultsH
     /**
      * Call initializeSignInButton to initialize the logic for sign-in for a specific provider.
      *
-     * @param providerType the SignInProvider class.
+     * @param providerClass
      * @param buttonView the view for the button associated with this provider.
-     * @return the onClickListener for the button to be able to override the listener.
      */
-    public Runnable initializeSignInButton(final Class<? extends SignInProvider> providerClass,
+    public void initializeSignInButton(final Class<? extends SignInProvider> providerClass,
                                                        final Button buttonView) {
         final SignInProvider provider = findProvider(providerClass);
 
         // Initialize the sign in button with the identity manager's results adapter.
-        return provider.initializeSignInButton(buttonView, IdentityManager.getDefaultIdentityManager().getResultsAdapter());
+        provider.initializeSignInButton(buttonView, IdentityManager.getDefaultIdentityManager().getResultsAdapter());
     }
 
     private SignInProvider findProvider(final Class<? extends SignInProvider> providerClass) {
diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInProvider.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInProvider.java
index a1cae3a200..274866b46d 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInProvider.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInProvider.java
@@ -45,8 +45,6 @@
      * Initialize the sign-in button for the sign-in activity.
      * @param buttonView the button
      * @param resultsHandler the resultsHandler for provider sign-in.
-     * @return the onClickListener for the button to be able to override the listener,
-     *         and null if the button cannot be initialized.
      */
-    Runnable initializeSignInButton(Button buttonView, SignInProviderResultHandler resultsHandler);
+    void initializeSignInButton(Button buttonView, SignInProviderResultHandler resultsHandler);
 }
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolFormConstants.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
similarity index 51%
rename from aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolFormConstants.java
rename to aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
index 8023f21bdb..5c639ab505 100644
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolFormConstants.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
@@ -15,23 +15,20 @@
   * limitations under the License.
   */
 
-package com.amazonaws.mobile.auth.userpools;
+package com.amazonaws.mobile.auth.core.signin.ui.buttons;
+
+import javafx.scene.control.Button;
 
-import static com.amazonaws.mobile.auth.core.signin.ui.DisplayUtils.dp;
 
 /**
- * Common constants for user pool forms.
+ * Base class for Sign in Buttons
  */
-public final class UserPoolFormConstants {
-    /** Form Button Color. */
-    public static final int FORM_BUTTON_COLOR = 0xff4599ff;
-
-    /** Form button radius in pixels. */
-    public  static final int FORM_BUTTON_CORNER_RADIUS = dp(5);
+public class SignInButton extends Button {
 
-    /** Ratio for the form size relative to the parent view. */
-    public static final double FORM_SIDE_MARGIN_RATIO = 0.85;
+    /**
+     * Constructor.
+     */
+    public SignInButton() {
+    }
 
-    /** Maximum width of the form in pixels. */
-    public static final int MAX_FORM_WIDTH_IN_PIXELS = dp(300);
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-java-sdk-auth-ui/pom.xml
similarity index 58%
rename from aws-android-sdk-auth-userpools/pom.xml
rename to aws-java-sdk-auth-ui/pom.xml
index 56b03dddad..efff7f2b89 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-java-sdk-auth-ui/pom.xml
@@ -2,12 +2,11 @@
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.amazonaws</groupId>
-  <artifactId>aws-android-sdk-auth-userpools</artifactId>
-  <packaging>aar</packaging>
-  <name>AWS SDK for Android - AWS Cognito Userpools SignIn</name>
-  <description>The AWS Android SDK for Authentication - Cognito Userpools SignIn holds the client classes that are used for enabling communication with Cognito UserPools SignIn Provider</description>
-  <url>http://aws.amazon.com/sdkforandroid</url>
+  <groupId>com.gluonhq</groupId>
+  <artifactId>aws-java-sdk-auth-ui</artifactId>
+  <name>AWS SDK for Java Mobile - AWS Authentication UI</name>
+  <description>The AWS Java Mobile SDK for Authentication UI holds the client classes that are used for presenting the SignIn Screen with SignInButtons and Amazon Cognito UserPools UI</description>
+  <url>https://github.com/gluonhq/aws-sdk-java-mobile</url>
 
   <properties>
     <project.build.sourceEncoding>
@@ -19,47 +18,37 @@
   </properties>
 
   <parent>
-    <groupId>com.amazonaws</groupId>
-    <artifactId>aws-android-sdk-pom</artifactId>
+    <groupId>com.gluonhq</groupId>
+    <artifactId>aws-java-sdk-pom</artifactId>
     <version>2.6.19</version>
   </parent>
 
-  <repositories>
-    <repository>
-      <id>android-support</id>
-      <url>file://${env.ANDROID_HOME}/extras/android/m2repository/</url>
-    </repository>
-  </repositories>
-
   <dependencies>
     <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-auth-core</artifactId>
       <optional>false</optional>
       <version>2.6.19</version>
     </dependency>
-    
-    <dependency>
+    <!--<dependency>
       <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-core</artifactId>
-      <optional>false</optional>
+      <artifactId>aws-android-sdk-auth-google</artifactId>
+      <optional>true</optional>
       <version>2.6.19</version>
       <type>aar</type>
     </dependency>
-
-    <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android</artifactId>
-      <version>4.1.1.4</version>
-      <scope>provided</scope>
-    </dependency>
-
     <dependency>
-      <groupId>com.android.support</groupId>
-      <artifactId>support-v4</artifactId>
+      <groupId>com.amazonaws</groupId>
+      <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>23.0.1</version>
+      <version>2.6.19</version>
       <type>aar</type>
+    </dependency>-->
+    <dependency>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-auth-userpools</artifactId>
+      <optional>true</optional>
+      <version>2.6.19</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java
similarity index 55%
rename from aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java
rename to aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java
index d2f1d310b5..f39636ed25 100644
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java
+++ b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/AuthUIConfiguration.java
@@ -29,16 +29,6 @@
  */
 public final class AuthUIConfiguration implements Serializable {
 
-    /**
-     * Key for Background Color.
-     */
-    static final String CONFIG_KEY_SIGN_IN_BACKGROUND_COLOR = "signInBackgroundColor";
-
-    /**
-     * Key for Resource Identifier of the Logo Image.
-     */
-    static final String CONFIG_KEY_SIGN_IN_IMAGE_RESOURCE_ID = "signInImageResId";
-
     /**
      * Key for UserPools.
      */
@@ -49,16 +39,6 @@
      */
     static final String CONFIG_KEY_SIGN_IN_BUTTONS = "signInButtons";
 
-    /**
-     * Key for global Font across all the SignIn views and its subviews.
-     */
-    static final String CONFIG_KEY_FONT_FAMILY = "fontFamily";
-
-    /**
-     * Key for Enabling background color full screen.
-     */
-    static final String CONFIG_KEY_FULL_SCREEN_BACKGROUND = "fullScreenBackgroundColor";
-
     /**
      * Key for ability to cancel the sign-in.
      */
@@ -78,37 +58,6 @@ private AuthUIConfiguration(final Map<String, Object> config) {
       this.config = config;
     }
 
-    /**
-     * Returns the resource identifier of the logo image if set by the user.
-     * Else, returns the resource identifier of the default logo image
-     * passed in.
-     *
-     * @param defaultResourceId The Resource identifier for the default logo image
-     * @return The resource identifier set in config or the default passed in
-     */
-    public int getSignInImageResourceId(final int defaultResourceId) {
-      final Integer resId = (Integer) config.get(CONFIG_KEY_SIGN_IN_IMAGE_RESOURCE_ID);
-      if (resId == null) {
-        return defaultResourceId;
-      }
-      return resId;
-    }
-
-    /**
-     * Returns the background color chosen by the user.
-     * Else, returns the default background color passed in.
-     *
-     * @param defaultBackgroundColor The Default Background color
-     * @return The background color set in config or the default passed in
-     */
-    public int getSignInBackgroundColor(final int defaultBackgroundColor) {
-      final Integer backgroundColor = (Integer) config.get(CONFIG_KEY_SIGN_IN_BACKGROUND_COLOR);
-      if (backgroundColor == null) {
-        return defaultBackgroundColor;
-      }
-      return backgroundColor;
-    }
-
     /**
      * Checks if userpools is enabled by the user.
      * @return True if UserPools is enabled
@@ -130,27 +79,6 @@ public boolean getSignInUserPoolsEnabled() {
         return (ArrayList) config.get(CONFIG_KEY_SIGN_IN_BUTTONS);
     }
 
-    /**
-     * Gets the font family.
-     * @return The font family.
-     */
-    public String getFontFamily() {
-        return (String) config.get(CONFIG_KEY_FONT_FAMILY);
-    }
-
-    /**
-     * Gets the Full screen background enabled or not.
-     * @return True if full screen background is enabled.
-     */
-    public boolean isBackgroundColorFullScreen() {
-        Object fullScreenBackgroundColorEnabled = config.get(CONFIG_KEY_FULL_SCREEN_BACKGROUND);
-        if (fullScreenBackgroundColorEnabled != null) {
-            return (Boolean) fullScreenBackgroundColorEnabled;
-        } else {
-            return false;
-        }
-    }
-
     public boolean getCanCancel() {
         Object canCancel = config.get(CONFIG_KEY_CAN_CANCEL);
         if (canCancel != null) {
@@ -175,35 +103,11 @@ public boolean getCanCancel() {
     public static class Builder {
 
         /** Local object for storing the configuration. */
-        private final Map<String, Object> configuration = new HashMap<String, Object>();
+        private final Map<String, Object> configuration = new HashMap<>();
 
         /** Constructor. */
         public Builder() { }
 
-        /**
-         * The Resource Identifier for the logo image passed by the user
-         * is stored in the config map.
-         *
-         * @param logoResId The Resource identifier for the logo image
-         * @return builder
-         */
-        public Builder logoResId(final int logoResId) {
-            configuration.put(CONFIG_KEY_SIGN_IN_IMAGE_RESOURCE_ID, logoResId);
-            return this;
-        }
-
-        /**
-         * The Background color that is dislayed on the first half
-         * of the SignIn Screen.
-         *
-         * @param color The Background color
-         * @return builder
-         */
-        public Builder backgroundColor(final int color) {
-            configuration.put(CONFIG_KEY_SIGN_IN_BACKGROUND_COLOR, color);
-            return this;
-        }
-
         /**
          * Invoke this method in order to enable userpools.
          *
@@ -225,7 +129,7 @@ public Builder userPools(final boolean enabledUserPools) {
         public Builder signInButton(final Class<? extends SignInButton> signInButton) {
             ArrayList<Class<? extends SignInButton>> signInButtonList;
             if (configuration.get(CONFIG_KEY_SIGN_IN_BUTTONS) == null) {
-                signInButtonList = new ArrayList<Class<? extends SignInButton>>();
+                signInButtonList = new ArrayList<>();
                 signInButtonList.add(signInButton);
                 configuration.put(CONFIG_KEY_SIGN_IN_BUTTONS, signInButtonList);
             } else {
@@ -235,28 +139,6 @@ public Builder signInButton(final Class<? extends SignInButton> signInButton) {
             return this;
         }
 
-        /**
-         * Invoke this method in order to pass in a custom font family.
-         *
-         * @param fontFamily The custom font family.
-         * @return builder
-         */
-        public Builder fontFamily(final String fontFamily) {
-            configuration.put(CONFIG_KEY_FONT_FAMILY, fontFamily);
-            return this;
-        }
-
-        /**
-         * Invoke this method in order to draw the background color full screen.
-         *
-         * @param isFullScreenBackgroundEnabled
-         * @return builder
-         */
-        public Builder isBackgroundColorFullScreen(final boolean isFullScreenBackgroundEnabled) {
-            configuration.put(CONFIG_KEY_FULL_SCREEN_BACKGROUND, isFullScreenBackgroundEnabled);
-            return this;
-        }
-
         /**
          * Ability to cancel the signin flow.
          * 
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java
similarity index 56%
rename from aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java
rename to aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java
index 23ad3a0d95..5e0a0d1804 100644
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java
+++ b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInActivity.java
@@ -17,31 +17,24 @@
 
 package com.amazonaws.mobile.auth.ui;
 
-import android.content.Intent;
-import android.content.Context;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.amazonaws.mobile.auth.core.IdentityManager;
 import com.amazonaws.mobile.auth.core.IdentityProvider;
 import com.amazonaws.mobile.auth.core.SignInResultHandler;
 import com.amazonaws.mobile.auth.core.signin.SignInManager;
 import com.amazonaws.mobile.auth.core.signin.SignInProviderResultHandler;
+import com.gluonhq.charm.glisten.application.MobileApplication;
 
-import com.amazonaws.mobile.auth.core.signin.ui.buttons.SignInButton;
-
-import java.util.HashMap;
-import java.util.UUID;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 
 /**
  * Activity for handling Sign-in with an Identity Provider.
  */
-public class SignInActivity extends AppCompatActivity {
+public class SignInActivity {
 
-    /** Log Tag. */
-    private static final String LOG_TAG = SignInActivity.class.getSimpleName();
+    private static final Logger LOG = Logger.getLogger(SignInActivity.class.getName());
 
+    private static final String VIEW_NAME = "com.amazonaws.mobile.auth.ui.SignInView";
+    
     /** Reference to the singleton instance of SignInManager. */
     private SignInManager signInManager;
 
@@ -56,16 +49,14 @@
          */
         @Override
         public void onSuccess(final IdentityProvider provider) {
-            Log.i(LOG_TAG, String.format(getString(R.string.sign_in_succeeded_message_format),
-                                         provider.getDisplayName()));
+            LOG.log(Level.INFO, SignInView.getString("sign.in.succeeded.message.format", provider.getDisplayName()));
 
             // The sign-in manager is no longer needed once signed in.
             SignInManager.dispose();
             final SignInResultHandler signInResultsHandler = signInManager.getResultHandler();
 
             // Call back the results handler.
-            signInResultsHandler.onSuccess(SignInActivity.this, provider);
-            finish();
+            signInResultsHandler.onSuccess(provider);
         }
 
         /**
@@ -75,10 +66,8 @@ public void onSuccess(final IdentityProvider provider) {
          */
         @Override
         public void onCancel(final IdentityProvider provider) {
-            Log.i(LOG_TAG, String.format(getString(R.string.sign_in_canceled_message_format),
-                                         provider.getDisplayName()));
-            signInManager.getResultHandler()
-                .onIntermediateProviderCancel(SignInActivity.this, provider);
+            LOG.log(Level.INFO, SignInView.getString("sign.in.canceled.message.format", provider.getDisplayName()));
+            signInManager.getResultHandler().onIntermediateProviderCancel(provider);
         }
 
         /**
@@ -89,9 +78,8 @@ public void onCancel(final IdentityProvider provider) {
          */
         @Override
         public void onError(final IdentityProvider provider, final Exception ex) {
-            Log.e(LOG_TAG, String.format("Sign-in with %s caused an error.", provider.getDisplayName()), ex);
-            signInManager.getResultHandler()
-                .onIntermediateProviderError(SignInActivity.this, provider, ex);
+            LOG.log(Level.WARNING, SignInView.getString("sign.in.error.message.format", provider.getDisplayName()), ex);
+            signInManager.getResultHandler().onIntermediateProviderError(provider, ex);
         }
     }
 
@@ -100,47 +88,43 @@ public void onError(final IdentityProvider provider, final Exception ex) {
      * Get the instance of SignInManager and set the callback
      * to be received from SignInManager on signin.
      */
-    @Override
-    protected void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
+    SignInActivity(final AuthUIConfiguration config) {
         signInManager = SignInManager.getInstance();
         if (signInManager == null) {
-            Log.e(LOG_TAG, "Invoke SignInActivity.startSignInActivity() method to create the SignInManager.");
+            LOG.log(Level.WARNING, "Invoke SignInActivity.startSignInActivity() method to create the SignInManager.");
             return;
         }
-        signInManager.setProviderResultsHandler(this, new SignInProviderResultHandlerImpl());
-        setContentView(R.layout.activity_sign_in);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
+        signInManager.setProviderResultsHandler(new SignInProviderResultHandlerImpl());
+        if (config == null) {
+            return;
+        }
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().removeViewFactory(VIEW_NAME);
+            LOG.log(Level.FINE, "Creating SignInView instance"); 
+            MobileApplication.getInstance().addViewFactory(VIEW_NAME, () -> new SignInView(config));
+            LOG.log(Level.FINE, "Switching to SignInView");
+            SignInView.switchView(VIEW_NAME);
+        } else {
+            LOG.log(Level.WARNING, "Failed to create the SignInView instance");
+        }
     }
 
-    @Override
     public void onRequestPermissionsResult(final int requestCode,
                                            final String[] permissions,
                                            final int[] grantResults) {
-        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         signInManager.handleRequestPermissionsResult(requestCode, permissions, grantResults);
     }
 
-    @Override
     protected void onActivityResult(final int requestCode,
                                     final int resultCode,
-                                    final Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
+                                    final Object data) {
         signInManager.handleActivityResult(requestCode, resultCode, data);
     }
 
-    @Override
     public void onBackPressed() {
-        if (signInManager.getResultHandler().onCancel(this)) {
-            super.onBackPressed();
+        if (signInManager.getResultHandler().onCancel()) {
             // Since we are leaving sign-in via back, we can dispose the sign-in manager, since sign-in was cancelled.
             SignInManager.dispose();
-            finish();
         }
     }
 
@@ -148,23 +132,13 @@ public void onBackPressed() {
      * Start the SignInActivity that kicks off the authentication flow
      * by initializing the SignInManager.
      *
-     * @param context The context from which the SignInActivity will be started
      * @param config  Reference to AuthUIConfiguration object
      */
-    public static void startSignInActivity(final Context context,
-                                           final AuthUIConfiguration config) {
+    public static void startSignInActivity(final AuthUIConfiguration config) {
         try {
-            Intent intent = new Intent(context, SignInActivity.class);
-            intent.putExtra(SignInView.CONFIGURATION_KEY, config);
-            intent.putExtra(AuthUIConfiguration.CONFIG_KEY_SIGN_IN_BACKGROUND_COLOR,
-                config.getSignInBackgroundColor(SignInView.DEFAULT_BACKGROUND_COLOR));
-            intent.putExtra(AuthUIConfiguration.CONFIG_KEY_FONT_FAMILY,
-                config.getFontFamily());
-            intent.putExtra(AuthUIConfiguration.CONFIG_KEY_FULL_SCREEN_BACKGROUND,
-                config.isBackgroundColorFullScreen());
-            context.startActivity(intent);
+            new SignInActivity(config);
         } catch (Exception exception) {
-            Log.e(LOG_TAG, "Cannot start the SignInActivity. "
+            LOG.log(Level.WARNING, "Cannot start the SignInActivity. "
               + "Check the context and the configuration object passed in.", exception);
         }
     }
@@ -173,14 +147,12 @@ public static void startSignInActivity(final Context context,
      * Start the SignInActivity that kicks off the authentication flow
      * by initializing the SignInManager.
      *
-     * @param context The context from which the SignInActivity will be started
      */
-    public static void startSignInActivity(final Context context) {
+    public static void startSignInActivity() {
         try {
-            Intent intent = new Intent(context, SignInActivity.class);
-            context.startActivity(intent);
+            new SignInActivity(null);
         } catch (Exception exception) {
-            Log.e(LOG_TAG, "Cannot start the SignInActivity. "
+            LOG.log(Level.WARNING, "Cannot start the SignInActivity. "
               + "Check the context passed in.", exception);
         }
     }
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java
similarity index 74%
rename from aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java
rename to aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java
index ab1031287a..d778d9b075 100644
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java
+++ b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInUI.java
@@ -17,11 +17,6 @@
 
 package com.amazonaws.mobile.auth.ui;
 
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-
 import com.amazonaws.ClientConfiguration;
 import com.amazonaws.mobile.auth.core.IdentityManager;
 import com.amazonaws.mobile.auth.core.IdentityProvider;
@@ -30,26 +25,24 @@
 import com.amazonaws.mobile.auth.core.signin.ui.buttons.SignInButton;
 import com.amazonaws.mobile.config.AWSConfigurable;
 import com.amazonaws.mobile.config.AWSConfiguration;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 
 import org.json.JSONObject;
 
 public class SignInUI implements AWSConfigurable {
 
-    /** Log Tag. */
-    private static final String LOG_TAG = SignInUI.class.getSimpleName();
+    private static final Logger LOG = Logger.getLogger(SignInUI.class.getName());
 
     /** Calling activity. */
-    private Activity loginCallingActivity;
+    private String loginCallingActivity;
 
     /** Next activity. */
-    private Class<? extends Activity> loginNextActivity;
+    private String loginNextActivity;
 
     /** Configuration information for AuthUI. */
     private AuthUIConfiguration authUIConfiguration;
 
-    /** Activity context. */
-    private Context context;
-
     /** AWSConfiguration object that represents the `awsconfiguration.json` file. */
     private AWSConfiguration awsConfiguration;
 
@@ -70,9 +63,10 @@
      * 
      * @param callingActivity The activity
      * @param nextActivity    The next activity to go when sign-in succeeded
+     * @return 
      */
-    public LoginBuilder login(final Activity callingActivity,
-                              final Class<? extends Activity> nextActivity) {
+    public LoginBuilder login(final String callingActivity,
+                              final String nextActivity) {
         this.loginCallingActivity = callingActivity;
         this.loginNextActivity = nextActivity;
         this.authUIConfiguration = getDefaultAuthUIConfiguration();
@@ -85,28 +79,28 @@ public LoginBuilder login(final Activity callingActivity,
      * Check if the user is not signed in and present the AuthUI screen.
      */
     private void presentAuthUI() {
-        Log.d(LOG_TAG, "Presenting the SignIn UI.");
+        LOG.log(Level.FINE, "Presenting the SignIn UI.");
         final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();
         final boolean canCancel = this.authUIConfiguration.getCanCancel();
-        identityManager.login(this.loginCallingActivity, new DefaultSignInResultHandler() {
+        identityManager.login(new DefaultSignInResultHandler() {
             @Override
-            public void onSuccess(Activity activity, IdentityProvider identityProvider) {
+            public void onSuccess(IdentityProvider identityProvider) {
                 if (identityProvider != null) {
-                    Log.d(LOG_TAG, "Sign-in succeeded. The identity provider name is available here using: " +
+                    LOG.log(Level.FINE, "Sign-in succeeded. The identity provider name is available here using: " +
                             identityProvider.getDisplayName());
-                    startNextActivity(activity, loginNextActivity);
+                    startNextActivity(loginCallingActivity, loginNextActivity);
                 }
             }
 
             @Override
-            public boolean onCancel(Activity activity) {
+            public boolean onCancel() {
                 // Return false to prevent the user from dismissing the sign in screen by pressing back button.
                 // Return true to allow this.
                 return canCancel;
             }
         });
 
-        SignInActivity.startSignInActivity(this.loginCallingActivity, this.authUIConfiguration);
+        SignInActivity.startSignInActivity(this.authUIConfiguration);
     }
 
     /**
@@ -115,20 +109,20 @@ public boolean onCancel(Activity activity) {
      */
     private void loginWithBuilder(final LoginBuilder loginBuilder) {
          try {
-            Log.d(LOG_TAG, "Initiating the SignIn flow.");
+            LOG.log(Level.FINE, "Initiating the SignIn flow.");
             if (loginBuilder.getAuthUIConfiguration() != null) {
                 this.authUIConfiguration = loginBuilder.getAuthUIConfiguration();
             }
             final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();
             if (identityManager.isUserSignedIn()) {
-                Log.d(LOG_TAG, "User is already signed-in. Moving to the next activity.");
+                LOG.log(Level.FINE, "User is already signed-in. Moving to the next activity.");
                 startNextActivity(this.loginCallingActivity, this.loginNextActivity);
             } else {
-                Log.d(LOG_TAG, "User is not signed-in. Presenting the SignInUI.");
+                LOG.log(Level.FINE, "User is not signed-in. Presenting the SignInUI.");
                 presentAuthUI();
             }
         } catch (final Exception exception) {
-            Log.e(LOG_TAG, "Error occurred in sign-in ", exception);
+            LOG.log(Level.WARNING, "Error occurred in sign-in ", exception);
         }
     }
 
@@ -150,6 +144,8 @@ public LoginBuilder() {
 
         /**
          * Set the custom authUIConfiguration passed in.
+         * @param authUIConfiguration
+         * @return 
          */
         public LoginBuilder authUIConfiguration(final AuthUIConfiguration authUIConfiguration) {
             this.authUIConfiguration = authUIConfiguration;
@@ -197,7 +193,7 @@ private AuthUIConfiguration getDefaultAuthUIConfiguration() {
 
             configBuilder.canCancel(false);
         } catch (Exception exception) {
-              Log.e(LOG_TAG, "Cannot configure the SignInUI. "
+              LOG.log(Level.WARNING, "Cannot configure the SignInUI. "
                 + "Check the context and the configuration object passed in.", exception);
         }
 
@@ -218,7 +214,7 @@ private boolean isConfigurationKeyPresent(final String configurationKey) {
                 return jsonObject != null;
             }
         } catch (final Exception exception) {
-            Log.d(LOG_TAG, configurationKey + " not found in `awsconfiguration.json`");
+            LOG.log(Level.WARNING, configurationKey + " not found in `awsconfiguration.json`");
             return false;
         }
     }
@@ -229,39 +225,33 @@ private boolean isConfigurationKeyPresent(final String configurationKey) {
      * @param currentActivity   The current activity context
      * @param nextActivity      The class of next activity to move to
      */
-    private void startNextActivity(final Activity currentActivity,
-                                   final Class<? extends Activity> nextActivity) {
+    private void startNextActivity(final String currentActivity, final String nextActivity) {
         if (currentActivity == null || nextActivity == null) {
-            Log.e(LOG_TAG, "Cannot start the next activity. Check the context and the nextActivity passed in.");
+            LOG.log(Level.WARNING, "Cannot start the next activity. Check the context and the nextActivity passed in.");
             return;
         }
 
-        currentActivity
-            .startActivity(new Intent(currentActivity, nextActivity)
-                .setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP));
-        currentActivity.finish();
+        LOG.log(Level.FINE, "Switching to view: " + nextActivity);
+        SignInView.switchView(nextActivity);
     }
 
     /** {@inheritDoc} */
     @Override
-    public AWSConfigurable initialize(final Context context) throws Exception {
-        return initialize(context, new AWSConfiguration(context.getApplicationContext()));
+    public AWSConfigurable initialize() throws Exception {
+        return initialize(new AWSConfiguration());
     }
 
     /** {@inheritDoc} */
     @Override
-    public AWSConfigurable initialize(final Context context,
-                                      final AWSConfiguration configuration) throws Exception {
-        return initialize(context, configuration, new ClientConfiguration());
+    public AWSConfigurable initialize(final AWSConfiguration configuration) throws Exception {
+        return initialize(configuration, new ClientConfiguration());
     }
 
     /** {@inheritDoc} */
     @Override
-    public AWSConfigurable initialize(final Context context,
-                                               final AWSConfiguration configuration,
+    public AWSConfigurable initialize(final AWSConfiguration configuration,
                                                final ClientConfiguration clientConfiguration) throws Exception {
-        Log.d(LOG_TAG, "Initializing SignInUI.");
-        this.context = context;
+        LOG.log(Level.FINE, "Initializing SignInUI.");
         this.awsConfiguration = configuration;
         this.clientConfiguration = clientConfiguration;
         return this;
diff --git a/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
new file mode 100644
index 0000000000..3c7567591c
--- /dev/null
+++ b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
@@ -0,0 +1,225 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.ui;
+
+import com.amazonaws.mobile.auth.core.signin.SignInManager;
+import com.amazonaws.mobile.auth.core.signin.ui.buttons.SignInButton;
+import com.amazonaws.mobile.auth.userpools.CognitoUserPoolsSignInProvider;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import com.gluonhq.charm.glisten.application.ViewStackPolicy;
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.mvc.View;
+import com.gluonhq.charm.glisten.visual.MaterialDesignIcon;
+import java.text.MessageFormat;
+
+import java.util.ArrayList;
+import java.util.MissingResourceException;
+import java.util.ResourceBundle;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+import javafx.application.Platform;
+import javafx.geometry.Orientation;
+import javafx.scene.control.Button;
+import javafx.scene.control.Separator;
+import javafx.scene.layout.Pane;
+import javafx.scene.layout.VBox;
+
+/**
+ * View for displaying sign-in components.
+ */
+public class SignInView extends View {
+
+    private static final Logger LOG = Logger.getLogger(SignInView.class.getName());
+    
+    private static final ResourceBundle BUNDLE;
+    static {
+        BUNDLE = ResourceBundle.getBundle("com/amazonaws/mobile/auth/ui/ui");
+    }
+
+    /** String that represents the SDK Version. */
+    private static final String SDK_VERSION = "2.6.19";
+
+    /** Common Prefix of the namespaces of different SignIn providers. */
+    private static final String NAMESPACE_COMMON_PREFIX = "com.amazonaws.mobile.auth";
+
+    /** Group name. */
+    private static final String AWS_MOBILE_AUTH_GROUP_NAME = "com.amazonaws";
+
+    /** Dependency name for Facebook Button class. */
+    private static final String FACEBOOK_BUTTON = NAMESPACE_COMMON_PREFIX + ".facebook.FacebookButton";
+
+    /** Dependency name for Facebook SignIn package. */
+    private static final String FACEBOOK_SIGN_IN_IMPORT = AWS_MOBILE_AUTH_GROUP_NAME
+            + ":aws-android-sdk-auth-facebook:"
+            + SDK_VERSION;
+
+    /** Dependency name for Google Button class. */
+    private static final String GOOGLE_BUTTON = NAMESPACE_COMMON_PREFIX + ".google.GoogleButton";
+
+    /** Dependency name for Google SignIn package. */
+    private static final String GOOGLE_SIGN_IN_IMPORT =  AWS_MOBILE_AUTH_GROUP_NAME
+            + ":aws-android-sdk-auth-google:"
+            +  SDK_VERSION;
+
+    /** Configuration Key to store AuthUIConfiguration objects. */
+    public static final String CONFIGURATION_KEY = "com.amazonaws.mobile.auth.ui.configurationkey";
+
+    /** Reference to the AuthUIConfiguration. */
+    private AuthUIConfiguration config = null;
+
+    /** Stores the list of SignInButtons. */
+    private ArrayList<SignInButton> buttonStore = null;
+
+    private final VBox center;
+    private final Separator divider;
+
+    /**
+     * Sets up the UserPools UI with the Email and Password FormView.
+     * @param context The activity context.
+     */
+    private void setUpUserPools() {
+        /**
+         * Use Reflection for UserPoolSignIn dependency.
+         */
+        if (this.config != null && this.config.getSignInUserPoolsEnabled()) {
+            LOG.log(Level.FINE, "Trying to create an instance of UserPoolSignInView");
+            
+            Button buttonUserPool = new Button(getString("user.pool.sign.in"));
+            center.getChildren().add(buttonUserPool);
+            SignInManager.getInstance().initializeSignInButton(
+                    CognitoUserPoolsSignInProvider.class, buttonUserPool);
+        }
+    }
+
+    /**
+     * Sets up the divider that divides the UserPools UI and the SignInButtons.
+     * @param context The activity context.
+     */
+    private void setUpDivider() {
+        center.getChildren().add(divider);
+    }
+
+    /**
+     * Sets up the SignIn Buttons.
+     * @param context The activity context.
+     */
+    private void setUpSignInButtons() {
+
+        /**
+         * Add the signInButtons configured to the view.
+         */
+        this.addSignInButtonsToView();
+
+        /**
+         * There are two conditions on which the divider is set.
+         *
+         * 1. If UserPools is configured and one or more buttons are added.
+         * 2. If One of more buttons are added.
+         */
+        divider.setVisible(this.buttonStore.size() > 0);
+    }
+
+    /**
+     * Constructor.
+     * @param config
+     */
+    public SignInView(AuthUIConfiguration config) {
+        getStyleClass().add("aws");
+        this.center = new VBox();
+        center.getStyleClass().add("center");
+        setCenter(center);
+        
+        Pane logo = new Pane();
+        logo.getStyleClass().add("logo");
+        center.getChildren().add(logo);
+        
+        this.buttonStore = new ArrayList<>();
+        this.config = config;
+
+        this.divider = new Separator(Orientation.HORIZONTAL);
+        
+        this.setUpUserPools();
+        this.setUpDivider();
+        this.setUpSignInButtons();
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        appBar.setNavIcon(MaterialDesignIcon.CHEVRON_LEFT.button(e -> {
+            getApplication().switchToPreviousView();
+        }));
+        appBar.setTitleText(getString("title.activity.sign.in"));
+    }
+
+    /** 
+     * Add SignInButtons to the view.
+     * @param context The activity context.
+     */
+    private void addSignInButtonsToView() {
+        try {
+            if (this.config != null) {
+                ArrayList<Class<? extends SignInButton>> signInButtons = this.config.getSignInButtons();
+                if (signInButtons == null) {
+                    LOG.log(Level.WARNING, "Skipping creating the SignInButtons. No SignInbuttons were added to the view.");
+                    return;
+                }
+
+                for (Class<? extends SignInButton> signInButton : signInButtons) {
+                    // TODO: implement
+                    SignInButton buttonObject = new SignInButton();
+                    LOG.log(Level.FINE, "Adding SignInButton "+ signInButton.getCanonicalName());
+                    this.buttonStore.add(buttonObject);
+                    center.getChildren().add(buttonObject);
+                }
+            } else {
+                LOG.log(Level.FINE, "AuthUIConfiguration is not configured with any SignInButtons. "
+                                + "There are no buttons to add to the view");
+            }
+        } catch (Exception exception) {
+            LOG.log(Level.WARNING, "Cannot access the configuration or error in adding the signin button to the view", exception);
+        }
+    }
+    
+    @Override
+    public String getUserAgentStylesheet() {
+        return SignInView.class.getResource("aws-style.css").toExternalForm();
+    }
+    
+    static String getString(String value) {
+        try {
+            return BUNDLE.getString(value);
+        } catch (MissingResourceException ex) {
+            LOG.log(Level.SEVERE, null, ex);
+        }
+        return "";
+    }
+    
+    static String getString(String value, Object... arguments) {
+        return MessageFormat.format(getString(value), arguments);
+    }
+    
+    static void switchView(final String viewName) {
+        if (Platform.isFxApplicationThread()) {
+            MobileApplication.getInstance().switchView(viewName);
+        } else {
+            Platform.runLater(() -> {
+                MobileApplication.getInstance().switchView(viewName);
+            });
+        }
+    }
+}
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/package-info.java b/aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/package-info.java
similarity index 100%
rename from aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/package-info.java
rename to aws-java-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/package-info.java
diff --git a/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/aws-style.css b/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/aws-style.css
new file mode 100644
index 0000000000..667ace9d86
--- /dev/null
+++ b/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/aws-style.css
@@ -0,0 +1,75 @@
+/**
+ * Copyright (c) 2018, Gluon
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in the
+ * documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Gluon, any associated website, nor the
+ * names of its contributors may be used to endorse or promote products
+ * derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+.view.aws {
+}
+
+.view.aws > .center {
+    -fx-background-color: lightgray;
+    -fx-padding: 20;
+    -fx-spacing: 15;
+    -fx-alignment: TOP_CENTER;
+}
+
+.view.aws > .center > .logo {
+    -fx-background-image: url("default_sign_in_logo.png");
+    -fx-background-repeat: no-repeat;   
+    -fx-background-size: contain;
+    -fx-background-position: center center;
+    -fx-pref-width: 200;
+    -fx-pref-height: 200;
+}
+.view.aws > .center > .label.title {
+    -fx-text-fill: white;
+    -fx-font-size: 1.2em;
+}
+
+.view.aws  > .center > .label.help {
+    -fx-text-fill: white;
+    -fx-font-size: 1.0em;
+    -fx-pref-width: 200;
+}
+
+.view.aws > .center > .box {
+    -fx-padding: 0;
+    -fx-alignment: CENTER;
+}
+
+.view.aws > .center > .box >.label.left {
+    -fx-text-fill: white;
+    -fx-font-size: 0.9em;
+    -fx-pref-width: 80;
+}
+
+.view.aws > .center > .box >.label.right {
+    -fx-text-fill: white;
+    -fx-font-size: 0.8em;
+    -fx-pref-width: 80;
+    -fx-text-alignment: right;
+}
+
+
diff --git a/aws-android-sdk-auth-ui/src/main/res/drawable-xxxhdpi/default_sign_in_logo.png b/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/default_sign_in_logo.png
similarity index 100%
rename from aws-android-sdk-auth-ui/src/main/res/drawable-xxxhdpi/default_sign_in_logo.png
rename to aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/default_sign_in_logo.png
diff --git a/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/ui.properties b/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/ui.properties
new file mode 100644
index 0000000000..435c12ee26
--- /dev/null
+++ b/aws-java-sdk-auth-ui/src/main/resources/com/amazonaws/mobile/auth/ui/ui.properties
@@ -0,0 +1,7 @@
+title.activity.sign.in=Sign-in
+sign.in.succeeded.message.format=Sign-in with {0} succeeded.
+sign.in.canceled.message.format=Sign-in with {0} canceled.
+sign.in.error.message.format="Sign-in with {0} caused an error.
+sign.in.or=or sign in with
+sign.in.with=Sign in with
+user.pool.sign.in=User Pool Sign In
\ No newline at end of file
diff --git a/aws-java-sdk-auth-userpools/pom.xml b/aws-java-sdk-auth-userpools/pom.xml
new file mode 100644
index 0000000000..cdbead6f1c
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/pom.xml
@@ -0,0 +1,80 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>com.gluonhq</groupId>
+  <artifactId>aws-java-sdk-auth-userpools</artifactId>
+  <name>AWS SDK for Java Mobile - AWS Cognito Userpools SignIn</name>
+  <description>The AWS Java Mobile SDK for Authentication - Cognito Userpools SignIn holds the client classes that are used for enabling communication with Cognito UserPools SignIn Provider</description>
+  <url>https://github.com/gluonhq/aws-sdk-java-mobile</url>
+
+  <properties>
+    <project.build.sourceEncoding>
+      UTF-8
+    </project.build.sourceEncoding>
+    <project.reporting.outputEncoding>
+      UTF-8
+    </project.reporting.outputEncoding>
+  </properties>
+
+  <parent>
+    <groupId>com.gluonhq</groupId>
+    <artifactId>aws-java-sdk-pom</artifactId>
+    <version>2.6.19</version>
+  </parent>
+
+<repositories>
+    <repository>
+        <id>Nexus</id>
+        <url>http://nexus.gluonhq.com/nexus/content/repositories/releases</url>
+    </repository>
+</repositories>
+
+  <dependencies>
+    <dependency>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-cognitoidentityprovider</artifactId>
+      <optional>false</optional>
+      <version>2.6.19</version>
+    </dependency>
+    
+    <dependency>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-auth-core</artifactId>
+      <optional>false</optional>
+      <version>2.6.19</version>
+    </dependency>
+    
+    <dependency>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>charm</artifactId>
+      <version>5.0.0</version>
+    </dependency>
+  </dependencies>
+
+  <build>
+    <plugins>
+      <plugin>
+        <groupId>com.simpligility.maven.plugins</groupId>
+        <artifactId>android-maven-plugin</artifactId>
+        <version>4.5.0</version>
+        <extensions>true</extensions>
+        <configuration>
+          <sdk>
+            <platform>25</platform>
+            <buildTools>19.1.0</buildTools>
+          </sdk>
+        </configuration>
+      </plugin>
+
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-compiler-plugin</artifactId>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-javadoc-plugin</artifactId>
+      </plugin>
+    </plugins>
+  </build>
+</project>
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java
similarity index 61%
rename from aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java
rename to aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java
index 509508ff9d..168c489538 100644
--- a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/CognitoUserPoolsSignInProvider.java
@@ -17,13 +17,6 @@
 
 package com.amazonaws.mobile.auth.userpools;
 
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-import android.view.View;
-import android.widget.TextView;
-
 import com.amazonaws.mobile.config.AWSConfiguration;
 
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.VerificationHandler;
@@ -53,14 +46,24 @@
 import com.amazonaws.mobile.auth.core.internal.util.ViewHelper;
 
 import com.amazonaws.regions.Regions;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import com.gluonhq.charm.glisten.mvc.View;
 
 import java.util.HashSet;
+import java.util.Map;
 import java.util.Set;
+import java.util.function.Supplier;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+import javafx.scene.control.Button;
 
 /**
  * Manages sign-in using Cognito User Pools.
  */
 public class CognitoUserPoolsSignInProvider implements SignInProvider {
+
+    private static final Logger LOG = Logger.getLogger(CognitoUserPoolsSignInProvider.class.getName());
+    
     /**
      * Cognito User Pools attributes.
      */
@@ -83,34 +86,25 @@
 
         /** Phone number attribute. */
         public static final String PHONE_NUMBER = "phone_number";
-
-        /** Background Color. */
-        public static final String BACKGROUND_COLOR = "signInBackgroundColor";
-
-        /** Key for enabling background color full screen. */
-        public static final String FULL_SCREEN_BACKGROUND_COLOR = "fullScreenBackgroundColor";
-
-        /** Key for specifying the custom font family. */
-        public static final String FONT_FAMILY = "fontFamily";
     }
 
-    /** Log tag. */
-    private static final String LOG_TAG = CognitoUserPoolsSignInProvider.class.getSimpleName();
-
     /** Start of Intent request codes owned by the Cognito User Pools app. */
     private static final int REQUEST_CODE_START = 0x2970;
 
     /** Request code for password reset Intent. */
-    private static final int FORGOT_PASSWORD_REQUEST_CODE = REQUEST_CODE_START + 42;
+    public static final int FORGOT_PASSWORD_REQUEST_CODE = REQUEST_CODE_START + 42;
 
     /** Request code for account registration Intent. */
-    private static final int SIGN_UP_REQUEST_CODE = REQUEST_CODE_START + 43;
+    public static final int SIGN_UP_REQUEST_CODE = REQUEST_CODE_START + 43;
 
     /** Request code for MFA Intent. */
-    private static final int MFA_REQUEST_CODE = REQUEST_CODE_START + 44;
+    public static final int MFA_REQUEST_CODE = REQUEST_CODE_START + 44;
+
+    /** Request code for account verification Intent. */
+    public static final int VERIFICATION_REQUEST_CODE = REQUEST_CODE_START + 45;
 
     /** Request code for account verification Intent. */
-    private static final int VERIFICATION_REQUEST_CODE = REQUEST_CODE_START + 45;
+    public static final int USER_POOL_SIGN_IN_REQUEST_CODE = REQUEST_CODE_START + 46;
 
     /** Request codes that the Cognito User Pools can handle. */
     private static final Set<Integer> REQUEST_CODES = new HashSet<Integer>() { {
@@ -118,6 +112,7 @@
         add(SIGN_UP_REQUEST_CODE);
         add(MFA_REQUEST_CODE);
         add(VERIFICATION_REQUEST_CODE);
+        add(USER_POOL_SIGN_IN_REQUEST_CODE);
     } };
 
     /** Stores the configuration file name. */
@@ -129,6 +124,8 @@
     /** Prefix of the exception message. */
     private static final String USERPOOLS_EXCEPTION_PREFIX = "(Service";
 
+    private static final String USER_POOL_VIEW_NAME = "com.amazonaws.mobile.auth.userpools.UserPoolSignInView";
+    
     /** The sign-in results adapter from the SignInManager. */
     private SignInProviderResultHandler resultsHandler;
 
@@ -138,12 +135,6 @@
     /** MFA processing provided by the Cognito User Pools SDK. */
     private MultiFactorAuthenticationContinuation multiFactorAuthenticationContinuation;
 
-    /** Android context. */
-    private Context context;
-
-    /** Invoking Android Activity. */
-    private Activity activity;
-
     /** Sign-in username. */
     private String username;
 
@@ -165,101 +156,98 @@
     /** AWSConfiguration object. */
     private AWSConfiguration awsConfiguration;
 
-    /** Background Color for the View. */
-    private static int backgroundColor;
-
-    /** Draw the background color full screen if fullScreenBackgroundColor is True. */
-    private static boolean isBackgroundColorFullScreenEnabled;
-
-    /** Tyypeface font-family. */
-    private static String fontFamily;
-
     /**
      * Handle callbacks from the Forgot Password flow.
+     * @return 
      */
-    private ForgotPasswordHandler forgotPasswordHandler = new ForgotPasswordHandler() {
-        @Override
-        public void onSuccess() {
-            Log.d(LOG_TAG, "Password change succeeded.");
-            ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_forgot_password),
-                    activity.getString(R.string.password_change_success));
-        }
-
-        @Override
-        public void getResetCode(final ForgotPasswordContinuation continuation) {
-            forgotPasswordContinuation = continuation;
-
-            final Intent intent = new Intent(context, ForgotPasswordActivity.class);
-            activity.startActivityForResult(intent, FORGOT_PASSWORD_REQUEST_CODE);
-        }
+    protected ForgotPasswordHandler getForgotPasswordHandler() {
+        return new ForgotPasswordHandler() {
+            @Override
+            public void onSuccess() {
+                LOG.log(Level.FINE, "Password change succeeded.");
+                GluonView.showProgressBar(false);
+                ViewHelper.showDialog(GluonView.getString("title.activity.forgot.password"), 
+                        GluonView.getString("password.change.success"));
+            }
 
-        @Override
-        public void onFailure(final Exception exception) {
-            Log.e(LOG_TAG, "Password change failed.", exception);
+            @Override
+            public void getResetCode(final ForgotPasswordContinuation continuation) {
+                forgotPasswordContinuation = continuation;
 
-            final String message;
-            if (exception instanceof InvalidParameterException) {
-                message = activity.getString(R.string.password_change_no_verification_failed);
-            } else {
-                message = getErrorMessageFromException(exception);
+                ForgotPasswordActivity forgot = new ForgotPasswordActivity(CognitoUserPoolsSignInProvider.this);
+                forgot.show();
             }
-            ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_forgot_password),
-                    activity.getString(R.string.password_change_failed) + " " + message);
-        }
-    };
 
+            @Override
+            public void onFailure(final Exception exception) {
+                LOG.log(Level.WARNING, "Password change failed.", exception);
+                GluonView.showProgressBar(false);
+                final String message;
+                if (exception instanceof InvalidParameterException) {
+                    message = GluonView.getString("password.change.no.verification.failed");
+                } else {
+                    message = getErrorMessageFromException(exception);
+                }
+                ViewHelper.showDialog(GluonView.getString("title.activity.forgot.password"), 
+                        GluonView.getString("password.change.failed") + " " + message);
+            }
+        };
+    }
+    
     /**
      * Start the SignUp Confirm Activity with the attribte keys.
      */
     private void startVerificationActivity() {
-        final Intent intent = new Intent(context, SignUpConfirmActivity.class);
-        intent.putExtra(AttributeKeys.USERNAME, username);
-        activity.startActivityForResult(intent, VERIFICATION_REQUEST_CODE);
+        SignUpConfirmActivity confirm = new SignUpConfirmActivity(CognitoUserPoolsSignInProvider.this);
+        confirm.show(username);
     }
 
     /**
      * Handle callbacks from the Sign Up flow.
      */
-    private SignUpHandler signUpHandler = new SignUpHandler() {
+    private final SignUpHandler signUpHandler = new SignUpHandler() {
         @Override
         public void onSuccess(final CognitoUser user, final boolean signUpConfirmationState,
                               final CognitoUserCodeDeliveryDetails cognitoUserCodeDeliveryDetails) {
+            GluonView.showProgressBar(false);
             if (signUpConfirmationState) {
-                Log.d(LOG_TAG, "Signed up. User ID = " + user.getUserId());
-                ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up),
-                        activity.getString(R.string.sign_up_success) + " " + user.getUserId());
+                LOG.log(Level.FINE, "Signed up. User ID = " + user.getUserId());
+                ViewHelper.showDialog(GluonView.getString("title.activity.sign.up"), 
+                        GluonView.getString("sign.up.success") + " " + user.getUserId());
             } else {
-                Log.w(LOG_TAG, "Additional confirmation for sign up.");
-
+                LOG.log(Level.WARNING, "Additional confirmation for sign up.");
                 startVerificationActivity();
             }
         }
 
         @Override
         public void onFailure(final Exception exception) {
-            Log.e(LOG_TAG, "Sign up failed.", exception);
-            ViewHelper.showDialog(activity, activity.getString(R.string.title_dialog_sign_up_failed),
+            LOG.log(Level.WARNING, "Sign up failed.", exception);
+            GluonView.showProgressBar(false);
+            ViewHelper.showDialog(GluonView.getString("title.dialog.sign.up.failed"),
                 exception.getLocalizedMessage() != null ? getErrorMessageFromException(exception)
-                    : activity.getString(R.string.sign_up_failed));
+                    : GluonView.getString("sign.up.failed"));
         }
     };
 
     /**
      * Handle callbacks from the Sign Up - Confirm Account flow.
      */
-    private GenericHandler signUpConfirmationHandler = new GenericHandler() {
+    private final GenericHandler signUpConfirmationHandler = new GenericHandler() {
         @Override
         public void onSuccess() {
-            Log.i(LOG_TAG, "Confirmed.");
-            ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up_confirm),
-                    activity.getString(R.string.sign_up_confirm_success));
+            LOG.log(Level.INFO, "Confirmed.");
+            GluonView.showProgressBar(false);
+            ViewHelper.showDialog(GluonView.getString("title.activity.sign.up.confirm"), 
+                    GluonView.getString("sign.up.confirm.success"));
         }
 
         @Override
         public void onFailure(final Exception exception) {
-            Log.e(LOG_TAG, "Failed to confirm user.", exception);
-            ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up_confirm),
-                    activity.getString(R.string.sign_up_confirm_failed) + " " + getErrorMessageFromException(exception));
+            LOG.log(Level.WARNING, "Failed to confirm user.", exception);
+            GluonView.showProgressBar(false);
+            ViewHelper.showDialog(GluonView.getString("title.activity.sign.up.confirm"), 
+                    GluonView.getString("sign.up.confirm.failed") + " " + getErrorMessageFromException(exception));
         }
     };
 
@@ -271,16 +259,17 @@ private void resendConfirmationCode() {
         cognitoUser.resendConfirmationCodeInBackground(new VerificationHandler() {
             @Override
             public void onSuccess(final CognitoUserCodeDeliveryDetails verificationCodeDeliveryMedium) {
+                GluonView.showProgressBar(false);
                 startVerificationActivity();
             }
 
             @Override
             public void onFailure(final Exception exception) {
+                GluonView.showProgressBar(false);
                 if (null != resultsHandler) {
-                    ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_in),
-                        activity.getString(R.string.login_failed)
-                            + "\nUser was not verified and resending confirmation code failed.\n"
-                            + getErrorMessageFromException(exception));
+                    ViewHelper.showDialog(GluonView.getString("title.activity.sign.in"),
+                        GluonView.getString("login.failed") + "\n" +
+                        GluonView.getString("login.failed.text") + "\n" + getErrorMessageFromException(exception));
 
                     resultsHandler.onError(CognitoUserPoolsSignInProvider.this, exception);
                 }
@@ -291,11 +280,11 @@ public void onFailure(final Exception exception) {
     /**
      * Handle callbacks from the Authentication flow. Includes MFA handling.
      */
-    private AuthenticationHandler authenticationHandler = new AuthenticationHandler() {
+    private final AuthenticationHandler authenticationHandler = new AuthenticationHandler() {
         @Override
         public void onSuccess(final CognitoUserSession userSession, final CognitoDevice newDevice) {
-            Log.i(LOG_TAG, "Logged in. " + userSession.getIdToken());
-
+            LOG.log(Level.INFO, "Logged in. " + userSession.getIdToken());
+            GluonView.showProgressBar(false);
             cognitoUserSession = userSession;
 
             if (null != resultsHandler) {
@@ -322,8 +311,8 @@ public void getAuthenticationDetails(
         public void getMFACode(final MultiFactorAuthenticationContinuation continuation) {
             multiFactorAuthenticationContinuation = continuation;
 
-            final Intent intent = new Intent(context, MFAActivity.class);
-            activity.startActivityForResult(intent, MFA_REQUEST_CODE);
+            MFAActivity mfa = new MFAActivity(CognitoUserPoolsSignInProvider.this);
+            mfa.show();
         }
 
         @Override
@@ -333,8 +322,8 @@ public void authenticationChallenge(final ChallengeContinuation continuation) {
 
         @Override
         public void onFailure(final Exception exception) {
-            Log.e(LOG_TAG, "Failed to login.", exception);
-
+            LOG.log(Level.WARNING, "Failed to login.", exception);
+            GluonView.showProgressBar(false);
             final String message;
 
             // UserNotConfirmedException will only happen once in the sign-in flow in the case
@@ -348,17 +337,16 @@ public void onFailure(final Exception exception) {
             }
 
             if (exception instanceof UserNotFoundException) {
-                message = activity.getString(R.string.user_does_not_exist);
+                message = GluonView.getString("user.does.not.exist");
             } else if (exception instanceof NotAuthorizedException) {
-                message = activity.getString(R.string.incorrect_username_or_password);
+                message = GluonView.getString("incorrect.username.or.password");
             } else {
                 message = getErrorMessageFromException(exception);
             }
 
-
             if (null != resultsHandler) {
-                ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_in),
-                                      activity.getString(R.string.login_failed) + " " + message);
+                ViewHelper.showDialog(GluonView.getString("title.activity.sign.in"), 
+                        GluonView.getString("login.failed") + " " + message);
                 resultsHandler.onError(CognitoUserPoolsSignInProvider.this, exception);
             }
         }
@@ -366,17 +354,15 @@ public void onFailure(final Exception exception) {
 
     /** {@inheritDoc} */
     @Override
-    public void initialize(final Context context, final AWSConfiguration awsConfiguration) {
-        this.context = context;
+    public void initialize(final AWSConfiguration awsConfiguration) {
         this.awsConfiguration = awsConfiguration;
 
-        Log.d(LOG_TAG, "initalizing Cognito User Pools");
+        LOG.log(Level.FINE, "initalizing Cognito User Pools");
 
         final String regionString = getCognitoUserPoolRegion();
         final Regions region = Regions.fromName(regionString);
 
-        this.cognitoUserPool = new CognitoUserPool(context,
-                                                   getCognitoUserPoolId(),
+        this.cognitoUserPool = new CognitoUserPool(getCognitoUserPoolId(),
                                                    getCognitoUserPoolClientId(),
                                                    getCognitoUserPoolClientSecret(),
                                                    region);
@@ -395,52 +381,52 @@ public boolean isRequestCodeOurs(final int requestCode) {
     @Override
     public void handleActivityResult(final int requestCode,
                                      final int resultCode,
-                                     final Intent data) {
+                                     final Object data) {
 
-        if (Activity.RESULT_OK == resultCode) {
+        if (resultCode == 0) {
+            Map<String, String> map = (Map<String, String>) data;
+            GluonView.showProgressBar(true);
             switch (requestCode) {
                 case FORGOT_PASSWORD_REQUEST_CODE:
-                    password = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD);
-                    verificationCode = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
+                    
+                    password = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD);
+                    verificationCode = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
 
                     if (password.length() < PASSWORD_MIN_LENGTH) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_forgot_password),
-                                    activity.getString(R.string.password_change_failed) 
-                                    + " " + activity.getString(R.string.password_length_validation_failed));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.forgot.password"),
+                                    GluonView.getString("password.length.validation.failed"));
                         return;
                     } 
 
-                    Log.d(LOG_TAG, "verificationCode = " + verificationCode);
+                    LOG.log(Level.FINE, "verificationCode = " + verificationCode);
 
                     forgotPasswordContinuation.setPassword(password);
                     forgotPasswordContinuation.setVerificationCode(verificationCode);
                     forgotPasswordContinuation.continueTask();
                     break;
                 case SIGN_UP_REQUEST_CODE:
-                    username = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
-                    password = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD);
-                    final String givenName = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.GIVEN_NAME);
-                    final String email = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.EMAIL_ADDRESS);
-                    final String phone = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.PHONE_NUMBER);
+                    username = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
+                    password = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD);
+                    final String givenName = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.GIVEN_NAME);
+                    final String email = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.EMAIL_ADDRESS);
+                    final String phone = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.PHONE_NUMBER);
 
                     if (username.length() < 1) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up),
-                                    activity.getString(R.string.sign_up_failed)
-                                    + " " + activity.getString(R.string.sign_up_username_missing));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.sign.up"),
+                                    GluonView.getString("sign.up.failed") + " " + GluonView.getString("sign.up.username.missing"));
                         return;
                     }
 
                     if (password.length() < PASSWORD_MIN_LENGTH) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up),
-                                    activity.getString(R.string.sign_up_failed) 
-                                    + " " + activity.getString(R.string.password_length_validation_failed));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.sign.up"),
+                                    GluonView.getString("sign.up.failed") + " " + GluonView.getString("password.length.validation.failed"));
                         return;
                     }
 
-                    Log.d(LOG_TAG, "username = " + username);
-                    Log.d(LOG_TAG, "given_name = " + givenName);
-                    Log.d(LOG_TAG, "email = " + email);
-                    Log.d(LOG_TAG, "phone = " + phone);
+                    LOG.log(Level.FINE, "username = " + username);
+                    LOG.log(Level.FINE, "given_name = " + givenName);
+                    LOG.log(Level.FINE, "email = " + email);
+                    LOG.log(Level.FINE, "phone = " + phone);
 
                     final CognitoUserAttributes userAttributes = new CognitoUserAttributes();
                     userAttributes.addAttribute(CognitoUserPoolsSignInProvider.AttributeKeys.GIVEN_NAME, givenName);
@@ -455,106 +441,81 @@ public void handleActivityResult(final int requestCode,
 
                     break;
                 case MFA_REQUEST_CODE:
-                    verificationCode = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
+                    verificationCode = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
 
                     if (verificationCode.length() < 1) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_mfa),
-                                    activity.getString(R.string.mfa_failed) 
-                                    + " " + activity.getString(R.string.mfa_code_empty));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.mfa"),
+                                    GluonView.getString("mfa.failed") + " " + GluonView.getString("mfa.code.empty"));
                         return;
                     }
 
-                    Log.d(LOG_TAG, "verificationCode = " + verificationCode);
+                    LOG.log(Level.FINE, "verificationCode = " + verificationCode);
 
                     multiFactorAuthenticationContinuation.setMfaCode(verificationCode);
                     multiFactorAuthenticationContinuation.continueTask();
 
                     break;
                 case VERIFICATION_REQUEST_CODE:
-                    username = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
-                    verificationCode = data.getStringExtra(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
+                    username = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
+                    verificationCode = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE);
 
                     if (username.length() < 1) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up_confirm),
-                                    activity.getString(R.string.sign_up_confirm_title)
-                                    + " " + activity.getString(R.string.sign_up_username_missing));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.sign.up.confirm"),
+                                    GluonView.getString("sign.up.confirm.title") + " " + GluonView.getString("sign.up.username.missing"));
                         return;
                     }
 
                     if (verificationCode.length() < 1) {
-                        ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_up_confirm),
-                                    activity.getString(R.string.sign_up_confirm_title) 
-                                    + " " + activity.getString(R.string.sign_up_confirm_code_missing));
+                        ViewHelper.showDialog(GluonView.getString("title.activity.sign.up.confirm"),
+                                    GluonView.getString("sign.up.confirm.title") + " " + GluonView.getString("sign.up.confirm.code.missing"));
                         return;
                     }
 
-                    Log.d(LOG_TAG, "username = " + username);
-                    Log.d(LOG_TAG, "verificationCode = " + verificationCode);
+                    LOG.log(Level.FINE, "username = " + username);
+                    LOG.log(Level.FINE, "verificationCode = " + verificationCode);
 
                     final CognitoUser cognitoUser = cognitoUserPool.getUser(username);
 
                     cognitoUser.confirmSignUpInBackground(verificationCode, true, signUpConfirmationHandler);
 
+                    break;
+                case USER_POOL_SIGN_IN_REQUEST_CODE:
+                    username = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME);
+                    password = map.get(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD);
+                    LOG.log(Level.FINE, "username = " + username);
+
+                    final CognitoUser cognitoUserSignIn = cognitoUserPool.getUser(username);
+                    cognitoUserSignIn.getSessionInBackground(authenticationHandler);
                     break;
                 default:
-                    Log.e(LOG_TAG, "Unknown Request Code sent.");
+                    LOG.log(Level.WARNING, "Unknown Request Code sent.");
             }
         }
     }
 
-    /** {@inheritDoc} */
+    private UserPoolSignInView userPoolSignInView;
+            
     @Override
-    public View.OnClickListener initializeSignInButton(final Activity signInActivity,
-                                                       final View buttonView,
-                                                       final SignInProviderResultHandler providerResultsHandler) {
-        this.activity = signInActivity;
-        this.resultsHandler = providerResultsHandler;
-
-        final UserPoolSignInView userPoolSignInView =
-            (UserPoolSignInView) activity.findViewById(R.id.user_pool_sign_in_view_id);
-
-        backgroundColor = userPoolSignInView.getBackgroundColor();
-        fontFamily = userPoolSignInView.getFontFamily();
-        isBackgroundColorFullScreenEnabled = userPoolSignInView.isBackgroundColorFullScreen();
-
-        userPoolSignInView.getSignUpTextView().setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(context, SignUpActivity.class);
-                activity.startActivityForResult(intent, CognitoUserPoolsSignInProvider.SIGN_UP_REQUEST_CODE);
-            }
-        });
-
-        final TextView forgotPasswordTextView = userPoolSignInView.getForgotPasswordTextView();
-        forgotPasswordTextView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(final View view) {
-                username = userPoolSignInView.getEnteredUserName();
-                if (username.length() < 1) {
-                    Log.w(LOG_TAG, "Missing username.");
-                    ViewHelper.showDialog(activity, activity.getString(R.string.title_activity_sign_in), "Missing username.");
-                } else {
-                    final CognitoUser cognitoUser = cognitoUserPool.getUser(username);
-
-                    cognitoUser.forgotPasswordInBackground(forgotPasswordHandler);
-                }
+    public void initializeSignInButton(final Button buttonView, final SignInProviderResultHandler resultsHandler) {
+        this.resultsHandler = resultsHandler;
+        
+        buttonView.setOnAction(e -> {
+            if (MobileApplication.getInstance() != null) {
+                MobileApplication.getInstance().removeViewFactory(USER_POOL_VIEW_NAME);
+                LOG.log(Level.FINE, "Creating UserPoolSignInView instance");
+                MobileApplication.getInstance().addViewFactory(USER_POOL_VIEW_NAME, new Supplier<View>() {
+                    @Override
+                    public View get() {
+                        userPoolSignInView = new UserPoolSignInView(CognitoUserPoolsSignInProvider.this);
+                        return userPoolSignInView;
+                    }
+                });
+                LOG.log(Level.FINE, "Switching to UserPoolSignInView");
+                GluonView.switchView(USER_POOL_VIEW_NAME);
+            } else {
+                LOG.log(Level.WARNING, "Failed to create the UserPoolSignInView instance");
             }
         });
-
-        final View.OnClickListener listener = new View.OnClickListener() {
-            @Override
-            public void onClick(final View view) {
-                username = userPoolSignInView.getEnteredUserName();
-                password = userPoolSignInView.getEnteredPassword();
-
-                final CognitoUser cognitoUser = cognitoUserPool.getUser(username);
-
-                cognitoUser.getSessionInBackground(authenticationHandler);
-            }
-        };
-
-        buttonView.setOnClickListener(listener);
-        return listener;
     }
 
     /** {@inheritDoc} */
@@ -587,22 +548,22 @@ public void onSuccess(final CognitoUserSession userSession, final CognitoDevice
         @Override
         public void getAuthenticationDetails(final AuthenticationContinuation authenticationContinuation,
                                              final String UserId) {
-            Log.d(LOG_TAG, "Can't refresh the session silently, due to authentication details needed.");
+            LOG.log(Level.FINE, "Can't refresh the session silently, due to authentication details needed.");
         }
 
         @Override
         public void getMFACode(final MultiFactorAuthenticationContinuation continuation) {
-            Log.wtf(LOG_TAG, "Refresh flow can not trigger request for MFA code.");
+            LOG.log(Level.SEVERE, "Refresh flow can not trigger request for MFA code.");
         }
 
         @Override
         public void authenticationChallenge(final ChallengeContinuation continuation) {
-            Log.wtf(LOG_TAG, "Refresh flow can not trigger request for authentication challenge.");
+            LOG.log(Level.SEVERE, "Refresh flow can not trigger request for authentication challenge.");
         }
 
         @Override
         public void onFailure(final Exception exception) {
-            Log.e(LOG_TAG, "Can't refresh session.", exception);
+            LOG.log(Level.WARNING, "Can't refresh session.", exception);
         }
     }
 
@@ -619,11 +580,11 @@ public boolean refreshUserSignInState() {
         cognitoUserPool.getCurrentUser().getSession(refreshSessionAuthenticationHandler);
         if (null != refreshSessionAuthenticationHandler.getUserSession()) {
             cognitoUserSession = refreshSessionAuthenticationHandler.getUserSession();
-            Log.i(LOG_TAG, "refreshUserSignInState: Signed in with Cognito.");
+            LOG.log(Level.INFO, "refreshUserSignInState: Signed in with Cognito.");
             return true;
         }
 
-        Log.i(LOG_TAG, "refreshUserSignInState: Not signed in with Cognito.");
+        LOG.log(Level.INFO, "refreshUserSignInState: Not signed in with Cognito.");
         cognitoUserSession = null;
         return false;
     }
@@ -649,7 +610,7 @@ public String refreshToken() {
             if (null != refreshSessionAuthenticationHandler.getUserSession()) {
                 cognitoUserSession = refreshSessionAuthenticationHandler.getUserSession();
             } else {
-                Log.e(LOG_TAG, "Could not refresh the Cognito User Pool Token.");
+                LOG.log(Level.WARNING, "Could not refresh the Cognito User Pool Token.");
             }
         }
 
@@ -660,6 +621,7 @@ public String refreshToken() {
     @Override
     public void signOut() {
         if (null != cognitoUserPool && null != cognitoUserPool.getCurrentUser()) {
+            LOG.log(Level.INFO, "Signing out");
             cognitoUserPool.getCurrentUser().signOut();
 
             cognitoUserSession = null;
@@ -752,15 +714,4 @@ private static String getErrorMessageFromException(final Exception exception) {
         }
     }
 
-    static boolean isBackgroundColorFullScreen() {
-        return isBackgroundColorFullScreenEnabled;
-    }
-
-    static int getBackgroundColor() {
-        return backgroundColor;
-    }
-
-    static String getFontFamily() {
-        return fontFamily;
-    }
 }
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java
new file mode 100644
index 0000000000..57bbe5a63b
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordActivity.java
@@ -0,0 +1,76 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.amazonaws.mobile.auth.core.signin.SignInProvider;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+/**
+ * Activity to prompt for a new password along with the verification code.
+ */
+public class ForgotPasswordActivity {
+
+    private static final Logger LOG = Logger.getLogger(ForgotPasswordActivity.class.getName());
+
+    private static final String VIEW_NAME = "com.amazonaws.mobile.auth.userpools.ForgotPasswordView";
+    
+    private ForgotPasswordView forgotPasswordView;
+    
+    private final SignInProvider provider;
+
+    public ForgotPasswordActivity(SignInProvider provider) {
+        this.provider = provider;
+    }
+    
+    public void show() {
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().removeViewFactory(VIEW_NAME);
+            LOG.log(Level.FINE, "Creating ForgotPasswordView instance"); 
+            MobileApplication.getInstance().addViewFactory(VIEW_NAME, () -> {
+                forgotPasswordView = new ForgotPasswordView(ForgotPasswordActivity.this);
+                return forgotPasswordView;
+            });
+            LOG.log(Level.FINE, "Switching to ForgotPasswordView");
+            GluonView.switchView(VIEW_NAME);
+        } else {
+            LOG.log(Level.WARNING, "Failed to create the ForgotPasswordView instance");
+        }
+    }
+
+    /**
+     * Retrieve input and return to caller.
+     */
+    public void forgotPassword() {
+        final String password = forgotPasswordView.getPassword();
+        final String verificationCode = forgotPasswordView.getVerificationCode();
+
+        LOG.log(Level.FINE, "verificationCode = " + verificationCode);
+
+        final Map<String, String> result = new HashMap<>();
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD, password);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
+        provider.handleActivityResult(CognitoUserPoolsSignInProvider.FORGOT_PASSWORD_REQUEST_CODE, 0, result);
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().switchToPreviousView();
+        }
+    }
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java
new file mode 100644
index 0000000000..1a838d56b0
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/ForgotPasswordView.java
@@ -0,0 +1,76 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.control.TextField;
+import java.util.logging.Level;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.PasswordField;
+
+/**
+ * This view present the ForgotPassword screen for the user to reset the
+ * password.
+ */
+public class ForgotPasswordView extends GluonView {
+
+    private final TextField verificationCodeEditText;
+    private final PasswordField passwordEditText;
+    private final Button confirmButton;
+    private final ForgotPasswordActivity activity;
+
+    /**
+     * Constructs the ForgotPassword View.
+     * @param activity
+     */
+    public ForgotPasswordView(ForgotPasswordActivity activity) {
+        this.activity = activity;
+        verificationCodeEditText = new TextField();
+        verificationCodeEditText.setFloatText(getString("sign.up.confirm.code"));
+        passwordEditText = new PasswordField();
+        passwordEditText.setPromptText(getString("sign.in.password"));
+        confirmButton = new Button(getString("forgot.password.button.hint"));
+        confirmButton.setOnAction(e -> {
+            LOG.log(Level.FINE, "confirmButton event");
+            ForgotPasswordView.this.activity.forgotPassword();
+        });
+        
+        Label title = new Label(getString("forgot.password.header"));
+        title.getStyleClass().add("title");
+        Label help = new Label(getString("forgot.password.body"));
+        help.getStyleClass().add("help");
+        help.setWrapText(true);
+        
+        addNodes(title, help, verificationCodeEditText, passwordEditText, confirmButton);
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        super.updateAppBar(appBar); 
+        appBar.setTitleText(getString("title.activity.forgot.password"));
+    }
+
+    String getVerificationCode() {
+        return verificationCodeEditText.getText();
+    }
+
+    String getPassword() {
+        return passwordEditText.getText();
+    }
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/GluonView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/GluonView.java
new file mode 100644
index 0000000000..049e446007
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/GluonView.java
@@ -0,0 +1,117 @@
+/**
+ * Copyright (c) 2018 Gluon
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in the
+ * documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Gluon, any associated website, nor the
+ * names of its contributors may be used to endorse or promote products
+ * derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+package com.amazonaws.mobile.auth.userpools;
+
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import com.gluonhq.charm.glisten.application.ViewStackPolicy;
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.mvc.View;
+import com.gluonhq.charm.glisten.visual.MaterialDesignIcon;
+import java.util.Collection;
+import java.util.MissingResourceException;
+import java.util.ResourceBundle;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+import javafx.application.Platform;
+import javafx.scene.Node;
+import javafx.scene.control.ProgressBar;
+import javafx.scene.layout.VBox;
+
+public class GluonView extends View {
+
+    static final Logger LOG = Logger.getLogger(GluonView.class.getName());
+
+    private static final ResourceBundle BUNDLE;
+    static {
+        BUNDLE = ResourceBundle.getBundle("com/amazonaws/mobile/auth/userpools/userpools");
+    }
+    
+    private final VBox center;
+    
+    public GluonView() {
+        getStyleClass().add("aws");
+        
+        center = new VBox();
+        center.getStyleClass().add("center");
+        setCenter(center);
+        
+        setOnShowing(e -> showProgressBar(false));
+    }
+
+    final void addNodes(Collection<Node> nodes) {
+        center.getChildren().addAll(nodes);
+    }
+    
+    final void addNodes(Node... nodes) {
+        center.getChildren().addAll(nodes);
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        appBar.setNavIcon(MaterialDesignIcon.CHEVRON_LEFT.button(e -> {
+            getApplication().switchToPreviousView();
+        }));
+    }
+
+    
+    @Override
+    public String getUserAgentStylesheet() {
+        return GluonView.class.getResource("aws-style.css").toExternalForm();
+    }
+    
+    static String getString(String value) {
+        try {
+            return BUNDLE.getString(value);
+        } catch (MissingResourceException ex) {
+            LOG.log(Level.SEVERE, null, ex);
+        }
+        return "";
+    }
+    
+    static void switchView(final String viewName) {
+        if (Platform.isFxApplicationThread()) {
+            MobileApplication.getInstance().switchView(viewName, ViewStackPolicy.SKIP);
+        } else {
+            Platform.runLater(() -> {
+                MobileApplication.getInstance().switchView(viewName, ViewStackPolicy.SKIP);
+            });
+        }
+    }
+    
+    static void showProgressBar(boolean value) {
+        final AppBar appBar = MobileApplication.getInstance().getAppBar();
+        if (Platform.isFxApplicationThread()) {
+            appBar.setProgress(value ? ProgressBar.INDETERMINATE_PROGRESS : 0);
+            appBar.setProgressBarVisible(value);
+        } else {
+            Platform.runLater(() -> {
+                appBar.setProgress(value ? ProgressBar.INDETERMINATE_PROGRESS : 0);
+                appBar.setProgressBarVisible(value);
+            });
+        }
+    }
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java
new file mode 100644
index 0000000000..cf8d28e811
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAActivity.java
@@ -0,0 +1,76 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.amazonaws.mobile.auth.core.signin.SignInProvider;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+
+/**
+ * Activity to prompt for a a verification code.
+ */
+public class MFAActivity {
+    
+    private static final Logger LOG = Logger.getLogger(MFAActivity.class.getName());
+
+    private static final String VIEW_NAME = "com.amazonaws.mobile.auth.userpools.MFAView";
+    
+    private MFAView mfaView;
+    
+    private final SignInProvider provider;
+
+    public MFAActivity(SignInProvider provider) {
+        this.provider = provider;
+    }
+    
+    public void show() {
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().removeViewFactory(VIEW_NAME);
+            LOG.log(Level.FINE, "Creating MFAView instance"); 
+            MobileApplication.getInstance().addViewFactory(VIEW_NAME, () -> {
+                mfaView = new MFAView(MFAActivity.this);
+                return mfaView;
+            });
+            LOG.log(Level.FINE, "Switching to MFAView");
+            GluonView.switchView(VIEW_NAME);
+        } else {
+            LOG.log(Level.WARNING, "Failed to create the MFAView instance");
+        }
+    }
+
+    /**
+     * Retrieve input and return to caller.
+     */
+    public void verify() {
+        final String verificationCode = mfaView.getMFACode();
+
+        LOG.log(Level.FINE, "verificationCode = " + verificationCode);
+
+        final Map<String, String> result = new HashMap<>();
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
+        provider.handleActivityResult(CognitoUserPoolsSignInProvider.MFA_REQUEST_CODE, 0, result);
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().switchToPreviousView();
+        }
+    }
+    
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java
new file mode 100644
index 0000000000..61c26c16bf
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/MFAView.java
@@ -0,0 +1,69 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.control.TextField;
+import java.util.logging.Level;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+
+/**
+ * View for showing MFA confirmation upon sign-in.
+ */
+public class MFAView extends GluonView {
+
+    private final TextField mfaCodeEditText;
+    private final Button confirmButton;
+    private final MFAActivity activity;
+
+    /**
+     * Constructs the ForgotPassword View.
+     * @param activity
+     */
+    public MFAView(MFAActivity activity) {
+        this.activity = activity;
+        
+        mfaCodeEditText = new TextField();
+        mfaCodeEditText.setFloatText(getString("forgot.password.input.code.hint"));
+        confirmButton = new Button(getString("verify.button.text"));
+        confirmButton.setOnAction(e -> {
+            LOG.log(Level.FINE, "confirmButton event");
+            MFAView.this.activity.verify();
+        });
+        
+        Label title = new Label(getString("mfa.header"));
+        title.getStyleClass().add("title");
+        Label help = new Label(getString("mfa.code.sent.message"));
+        help.getStyleClass().add("help");
+        help.setWrapText(true);
+        
+        addNodes(title, help, mfaCodeEditText, confirmButton);
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+       super.updateAppBar(appBar);
+        appBar.setTitleText(getString("title.activity.mfa"));
+    }
+
+    String getMFACode() {
+        return mfaCodeEditText.getText();
+    }
+
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java
new file mode 100644
index 0000000000..4edd600ce6
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpActivity.java
@@ -0,0 +1,85 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.amazonaws.mobile.auth.core.signin.SignInProvider;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+/**
+ * Activity to prompt for account sign up information.
+ */
+public class SignUpActivity {
+    
+    private static final Logger LOG = Logger.getLogger(SignUpActivity.class.getName());
+
+    private static final String VIEW_NAME = "com.amazonaws.mobile.auth.userpools.SignUpView";
+    
+    private SignUpView signUpView;
+    
+    private final SignInProvider provider;
+
+    public SignUpActivity(SignInProvider provider) {
+        this.provider = provider;
+    }
+    
+    public void show() {
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().removeViewFactory(VIEW_NAME);
+            LOG.log(Level.FINE, "Creating SignUpView instance"); 
+            MobileApplication.getInstance().addViewFactory(VIEW_NAME, () -> {
+                signUpView = new SignUpView(SignUpActivity.this);
+                return signUpView;
+            });
+            LOG.log(Level.FINE, "Switching to SignUpView");
+            GluonView.switchView(VIEW_NAME);
+        } else {
+            LOG.log(Level.WARNING, "Failed to create the SignUpView instance");
+        }
+    }
+
+    /**
+     * Retrieve input and return to caller.
+     */
+    public void signUp() {
+        final String username = signUpView.getUserName();
+        final String password = signUpView.getPassword();
+        final String givenName = signUpView.getGivenName();
+        final String email = signUpView.getEmail();
+        final String phone = signUpView.getPhone();
+
+
+        LOG.log(Level.FINE, "username = " + username + ", password = " + password + 
+                ", givenName = " + givenName + ", email = " + email + ", phone = " + phone);
+
+        final Map<String, String> result = new HashMap<>();
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME, username);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD, password);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.GIVEN_NAME, givenName);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.EMAIL_ADDRESS, email);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.PHONE_NUMBER, phone);
+        provider.handleActivityResult(CognitoUserPoolsSignInProvider.SIGN_UP_REQUEST_CODE, 0, result);
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().switchToPreviousView();
+        }
+    }
+    
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java
new file mode 100644
index 0000000000..8604aaf85f
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmActivity.java
@@ -0,0 +1,81 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.amazonaws.mobile.auth.core.signin.SignInProvider;
+import com.gluonhq.charm.glisten.application.MobileApplication;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+/**
+ * Activity to prompt for sign-up confirmation information.
+ */
+public class SignUpConfirmActivity {
+    
+    private static final Logger LOG = Logger.getLogger(SignUpConfirmActivity.class.getName());
+
+    private static final String VIEW_NAME = "com.amazonaws.mobile.auth.userpools.SignUpConfirmView";
+    
+    private SignUpConfirmView signUpConfirmView;
+
+    private final SignInProvider provider;
+
+    public SignUpConfirmActivity(SignInProvider provider) {
+        this.provider = provider;
+    }
+    
+    public void show(final String userName) {
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().removeViewFactory(VIEW_NAME);
+            LOG.log(Level.FINE, "Creating SignUpConfirmView instance"); 
+            MobileApplication.getInstance().addViewFactory(VIEW_NAME, () -> {
+                signUpConfirmView = new SignUpConfirmView(SignUpConfirmActivity.this);
+                signUpConfirmView.setOnShown(e -> {
+                    signUpConfirmView.setUserName(userName);
+                });
+                return signUpConfirmView;
+            });
+            LOG.log(Level.FINE, "Switching to SignUpConfirmView");
+            GluonView.switchView(VIEW_NAME);
+        } else {
+            LOG.log(Level.WARNING, "Failed to create the SignUpConfirmView instance");
+        }
+    }
+
+    /**
+     * Retrieve input and return to caller.
+     */
+    public void confirmAccount() {
+        final String username = signUpConfirmView.getUserName();
+        final String verificationCode = signUpConfirmView.getConfirmCode();
+
+        LOG.log(Level.FINE, "username = " + username);
+        LOG.log(Level.FINE, "verificationCode = " + verificationCode);
+
+        final Map<String, String> result = new HashMap<>();
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME, username);
+        result.put(CognitoUserPoolsSignInProvider.AttributeKeys.VERIFICATION_CODE, verificationCode);
+        provider.handleActivityResult(CognitoUserPoolsSignInProvider.VERIFICATION_REQUEST_CODE, 0, result);
+        if (MobileApplication.getInstance() != null) {
+            MobileApplication.getInstance().switchToPreviousView();
+        }
+    }
+    
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java
new file mode 100644
index 0000000000..0d58b5a60a
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpConfirmView.java
@@ -0,0 +1,80 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.control.TextField;
+import java.util.logging.Level;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+
+/**
+ * This view presents the confirmation screen for user sign up.
+ */
+public class SignUpConfirmView extends GluonView {
+
+    private final TextField userNameEditText;
+    private final TextField confirmCodeEditText;
+    private final Button confirmButton;
+    private final SignUpConfirmActivity activity;
+
+    /**
+     * Constructs the SignUpConfirmView View.
+     * @param activity
+     */
+    public SignUpConfirmView(SignUpConfirmActivity activity) {
+        this.activity = activity;
+        confirmCodeEditText = new TextField();
+        confirmCodeEditText.setFloatText(getString("sign.up.confirm.code"));
+        userNameEditText = new TextField();
+        userNameEditText.setFloatText(getString("username.text"));
+        confirmButton = new Button(getString("sign.up.confirm.text"));
+        confirmButton.setOnAction(e -> {
+            LOG.log(Level.FINE, "confirmButton event");
+            SignUpConfirmView.this.activity.confirmAccount();
+        });
+        
+        Label title = new Label(getString("sign.up.confirm.title"));
+        title.getStyleClass().add("title");
+        Label help = new Label(getString("sign.up.confirm.code.sent") +"\n\n" + getString("sign.up.confirm.enter.code"));
+        help.getStyleClass().add("help");
+        help.setWrapText(true);
+        
+        addNodes(title, help, confirmCodeEditText, userNameEditText, confirmButton);
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        super.updateAppBar(appBar);
+        appBar.setTitleText(getString("title.activity.sign.up.confirm"));
+    }
+    
+    void setUserName(String value) {
+        userNameEditText.setText(value);
+        userNameEditText.requestFocus();
+    }
+
+    String getConfirmCode() {
+        return confirmCodeEditText.getText();
+    }
+
+    String getUserName() {
+        return userNameEditText.getText();
+    }
+
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java
new file mode 100644
index 0000000000..ccf9019b9c
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/SignUpView.java
@@ -0,0 +1,110 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.control.TextField;
+import java.util.logging.Level;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.PasswordField;
+
+/**
+ * The view that handles user sign-up for Cognito User Pools.
+ */
+public class SignUpView extends GluonView {
+
+    private final TextField userNameEditText;
+    private final PasswordField passwordEditText;
+    private final TextField givenNameEditText;
+    private final TextField emailEditText;
+    private final TextField phoneEditText;
+    private final Button signUpButton;
+    
+    private final SignUpActivity activity;
+
+    /**
+     * Constructs the SignUpView View.
+     * @param activity
+     */
+    public SignUpView(SignUpActivity activity) {
+        this.activity = activity;
+
+        userNameEditText = new TextField();
+        userNameEditText.setFloatText(getString("username.text"));
+        passwordEditText = new PasswordField();
+        passwordEditText.setPromptText(getString("sign.in.password"));
+        givenNameEditText = new TextField();
+        givenNameEditText.setFloatText(getString("given.name.text"));
+        emailEditText = new TextField();
+        emailEditText.setFloatText(getString("email.address.text"));
+        phoneEditText = new TextField();
+        phoneEditText.setFloatText(getString("phone.number.text"));
+        signUpButton = new javafx.scene.control.Button(getString("title.activity.sign.up"));
+        signUpButton.setOnAction(e -> {
+            LOG.log(Level.FINE, "signUpButton event");
+            SignUpView.this.activity.signUp();
+        });
+        
+        Label title = new Label(getString("sign.up.header"));
+        title.getStyleClass().add("title");
+        
+        addNodes(title, userNameEditText, passwordEditText, givenNameEditText, emailEditText, phoneEditText, signUpButton);
+    }
+
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        super.updateAppBar(appBar);
+        appBar.setTitleText(getString("title.activity.sign.up"));
+    }
+
+    /**
+     * @return the user's user name entered in the form.
+     */
+    String getUserName() {
+        return userNameEditText.getText();
+    }
+
+    /**
+     * @return the user's password entered in the form.
+     */
+    String getPassword() {
+        return passwordEditText.getText();
+    }
+
+    /**
+     * @return the user's given name entered in the form.
+     */
+    String getGivenName() {
+       return givenNameEditText.getText();
+    }
+
+    /**
+     * @return the user's email entered in the form.
+     */
+    String getEmail() {
+        return emailEditText.getText();
+    }
+
+    /**
+     * @return the user's phone number entered in the form.
+     */
+    String getPhone() {
+        return phoneEditText.getText();
+    }
+}
diff --git a/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java
new file mode 100644
index 0000000000..062a568950
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/UserPoolSignInView.java
@@ -0,0 +1,115 @@
+/*
+  * Copyright 2013-2017 Amazon.com, Inc. or its affiliates.
+  * All Rights Reserved.
+  *
+  * Licensed under the Apache License, Version 2.0 (the "License");
+  * you may not use this file except in compliance with the License.
+  * You may obtain a copy of the License at
+  *
+  *     http://www.apache.org/licenses/LICENSE-2.0
+  *
+  * Unless required by applicable law or agreed to in writing, software
+  * distributed under the License is distributed on an "AS IS" BASIS,
+  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  * See the License for the specific language governing permissions and
+  * limitations under the License.
+  */
+
+package com.amazonaws.mobile.auth.userpools;
+
+import com.amazonaws.mobile.auth.core.internal.util.ViewHelper;
+import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
+import com.gluonhq.charm.glisten.control.AppBar;
+import com.gluonhq.charm.glisten.control.TextField;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Level;
+import javafx.scene.control.Button;
+import javafx.scene.control.Label;
+import javafx.scene.control.PasswordField;
+import javafx.scene.layout.HBox;
+import javafx.scene.layout.Pane;
+import javafx.scene.layout.Priority;
+
+/**
+ * User Pools Sign-in Control. This view presents a form to handle user sign-in.
+ * It also presents choices for creating a new account or retrieving a forgotten password.
+ */
+public class UserPoolSignInView extends GluonView {
+
+    private final TextField userNameEditText;
+    private final PasswordField passwordEditText;
+    private final Button signInButton;
+    
+    /**
+     * Constructs the UserPoolSignIn View.
+     * @param provider
+     */
+    public UserPoolSignInView(final CognitoUserPoolsSignInProvider provider) {
+        
+        Pane logo = new Pane();
+        logo.getStyleClass().add("logo");
+        
+        userNameEditText = new TextField();
+        userNameEditText.setFloatText(getString("sign.in.username"));
+        passwordEditText = new PasswordField();
+        passwordEditText.setPromptText(getString("sign.in.password"));
+        
+        signInButton = new Button(getString("sign.in.button.text"));
+        signInButton.setOnAction(e -> {
+            LOG.log(Level.FINE, "signInButton event");
+            String username = userNameEditText.getText();
+            String password = passwordEditText.getText();
+            final Map<String, String> result = new HashMap<>();
+            result.put(CognitoUserPoolsSignInProvider.AttributeKeys.USERNAME, username);
+            result.put(CognitoUserPoolsSignInProvider.AttributeKeys.PASSWORD, password);
+            provider.handleActivityResult(CognitoUserPoolsSignInProvider.USER_POOL_SIGN_IN_REQUEST_CODE, 0, result);
+        });
+        
+        Label signUpText = new Label(getString("sign.in.new.account"));
+        signUpText.getStyleClass().add("left");
+        signUpText.setWrapText(true);
+        signUpText.setOnMouseClicked(e -> {
+            LOG.log(Level.FINE, "signUpText event");
+            SignUpActivity signUp = new SignUpActivity(provider);
+            signUp.show();
+        });
+        
+        Label forgotPasswordText = new Label(getString("sign.in.forgot.password"));
+        forgotPasswordText.getStyleClass().add("right");
+        forgotPasswordText.setWrapText(true);
+        forgotPasswordText.setOnMouseClicked(e -> {
+            LOG.log(Level.FINE, "forgotPasswordText event");
+            String username = userNameEditText.getText();
+            if (username.isEmpty()) {
+                LOG.log(Level.WARNING, "Missing username.");
+                ViewHelper.showDialog(getString("title.activity.sign.in"), getString("sign.up.username.missing"));
+            } else {
+                final CognitoUser cognitoUser = provider.getCognitoUserPool().getUser(username);
+                cognitoUser.forgotPasswordInBackground(provider.getForgotPasswordHandler());
+            }
+        });
+        
+        Pane pane = new Pane();
+        HBox.setHgrow(pane, Priority.ALWAYS);
+        HBox box = new HBox(signUpText, pane, forgotPasswordText);
+        box.getStyleClass().add("box");
+        
+        addNodes(logo, userNameEditText, passwordEditText, signInButton, box);
+    }
+    
+    @Override
+    protected void updateAppBar(AppBar appBar) {
+        super.updateAppBar(appBar);
+        appBar.setTitleText(getString("title.activity.sign.in"));
+    }
+
+    String getEnteredUserName() {
+        return userNameEditText.getText();
+    }
+
+    String getEnteredPassword() {
+        return passwordEditText.getText();
+    }
+
+}
diff --git a/aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/package-info.java b/aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/package-info.java
similarity index 100%
rename from aws-android-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/package-info.java
rename to aws-java-sdk-auth-userpools/src/main/java/com/amazonaws/mobile/auth/userpools/package-info.java
diff --git a/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/aws-style.css b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/aws-style.css
new file mode 100644
index 0000000000..ba8315b9a4
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/aws-style.css
@@ -0,0 +1,79 @@
+/**
+ * Copyright (c) 2018, Gluon
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in the
+ * documentation and/or other materials provided with the distribution.
+ *     * Neither the name of Gluon, any associated website, nor the
+ * names of its contributors may be used to endorse or promote products
+ * derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+.view.aws {
+}
+
+.view.aws > .center {
+    -fx-background-color: lightgray;
+    -fx-padding: 20;
+    -fx-spacing: 15;
+    -fx-alignment: TOP_CENTER;
+}
+
+.view.aws > .center > .logo {
+    -fx-background-image: url("default_sign_in_logo.png");
+    -fx-background-repeat: no-repeat;   
+    -fx-background-size: contain;
+    -fx-background-position: center center;
+    -fx-pref-width: 200;
+    -fx-pref-height: 200;
+}
+.view.aws > .center > .label.title {
+    -fx-text-fill: white;
+    -fx-font-size: 1.2em;
+}
+
+.view.aws > .center > .label.help {
+    -fx-text-fill: white;
+    -fx-font-size: 1.0em;
+    -fx-pref-width: 200;
+}
+
+.view.aws > .center > .password-field {
+    -fx-font-family: "DummyFontFamily";  /* forces OS default font family selection */
+}
+
+.view.aws > .center > .box {
+    -fx-padding: 0;
+    -fx-alignment: CENTER;
+}
+
+.view.aws > .center > .box >.label.left {
+    -fx-text-fill: white;
+    -fx-font-size: 0.9em;
+    -fx-pref-width: 80;
+}
+
+.view.aws > .center > .box >.label.right {
+    -fx-text-fill: white;
+    -fx-font-size: 0.8em;
+    -fx-pref-width: 80;
+    -fx-text-alignment: right;
+}
+
+
diff --git a/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/default_sign_in_logo.png b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/default_sign_in_logo.png
new file mode 100644
index 0000000000..ff5b8313ce
Binary files /dev/null and b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/default_sign_in_logo.png differ
diff --git a/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/userpools.properties b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/userpools.properties
new file mode 100644
index 0000000000..35392a7e89
--- /dev/null
+++ b/aws-java-sdk-auth-userpools/src/main/resources/com/amazonaws/mobile/auth/userpools/userpools.properties
@@ -0,0 +1,46 @@
+title.activity.sign.in=Sign-in
+sign.in.button.text=Sign In
+sign.in.username=User Name / Phone # (+155\u2026)
+sign.in.password=Password
+sign.in.new.account=Create New Account
+sign.in.forgot.password=Forgot Your Password?
+sign.in.show.password=show
+sign.in.hide.password=hide
+title.activity.sign.up=Sign Up
+title.activity.forgot.password=Forgot Password
+title.activity.mfa=MFA Code
+title.activity.sign.up.confirm=Confirm Account
+title.dialog.sign.up.failed=Sign Up Failed
+forgot.password.header=Forgot your password?
+forgot.password.body=Set your new password with the verification code that was sent to you.
+forgot.password.input.code.hint=Verification code
+forgot.password.button.hint=Set password
+mfa.header=MFA verification is required to authenticate.
+mfa.code.sent.message=Code sent.
+verify.button.text=Verify
+username.text=Username
+given.name.text=Given name
+email.address.text=Email address
+phone.number.text=Phone number (+15551234567)
+sign.up.header=Enter your information to sign up.
+sign.up.confirm.code=Confirmation code
+sign.up.confirm.text=Confirm
+sign.up.confirm.code.sent=A confirmation code was sent.
+sign.up.confirm.enter.code=Please enter the code below to confirm your account.
+sign.up.confirm.title=Confirm your account
+password.change.success=Password change succeeded.
+password.change.failed=Password change failed.
+sign.up.success=Sign up succeeded.
+sign.up.failed=Sign up failed.
+login.failed=Login failed.
+login.failed.text=User was not verified and resending confirmation code failed.
+sign.up.confirm.success=Sign up confirmation succeeded.
+sign.up.confirm.failed=Sign up confirmation failed.
+user.does.not.exist=The provided username does not exist.
+incorrect.username.or.password=The provided username or password is incorrect.
+password.change.no.verification.failed=Cannot reset password without registered/verified email or phone number
+mfa.code.empty=MFA Code is empty.
+mfa.failed=MFA Failed.
+password.length.validation.failed=Password should have 6 or more characters.
+sign.up.username.missing=Missing username.
+sign.up.confirm.code.missing=Sign Up Confirmation code is missing.
\ No newline at end of file
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-java-sdk-cognitoidentityprovider/pom.xml
similarity index 58%
rename from aws-android-sdk-cognitoidentityprovider/pom.xml
rename to aws-java-sdk-cognitoidentityprovider/pom.xml
index b9a41e0ba6..dd83c88b29 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-java-sdk-cognitoidentityprovider/pom.xml
@@ -2,17 +2,16 @@
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>com.amazonaws</groupId>
-  <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
-  <packaging>jar</packaging>
-  <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
+  <groupId>com.gluonhq</groupId>
+  <artifactId>aws-java-sdk-cognitoidentityprovider</artifactId>
+  <name>AWS SDK for Java Mobile - Amazon Cognito Identity Provider</name>
   <version>2.6.19</version>
-  <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
-  <url>http://aws.amazon.com/sdkforandroid</url>
+  <description>The AWS Java Mobile SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
+  <url>https://github.com/gluonhq/aws-sdk-java-mobile</url>
 
   <parent>
-    <groupId>com.amazonaws</groupId>
-    <artifactId>aws-android-sdk-pom</artifactId>
+    <groupId>com.gluonhq</groupId>
+    <artifactId>aws-java-sdk-pom</artifactId>
     <version>2.6.19</version>
   </parent>
 
@@ -26,8 +25,8 @@
 
   <dependencies>
     <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-core</artifactId>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-core</artifactId>
       <optional>false</optional>
       <version>2.6.19</version>
     </dependency>
@@ -38,10 +37,14 @@
       <version>1.0.0</version>
     </dependency>
     <dependency>
-      <groupId>com.google.android</groupId>
-      <artifactId>android</artifactId>
-      <version>2.3.3</version>
-      <scope>provided</scope>
+        <groupId>com.gluonhq</groupId>
+        <artifactId>charm-down-plugin-settings</artifactId>
+        <version>3.8.0</version>
+    </dependency>
+    <dependency>
+        <groupId>com.gluonhq</groupId>
+        <artifactId>charm-down-plugin-device</artifactId>
+        <version>3.8.0</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java
similarity index 78%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java
index b7e1502ff4..b259143b75 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoDevice.java
@@ -17,9 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider;
 
-import android.content.Context;
-import android.os.Handler;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoInternalErrorException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoNotAuthorizedException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
@@ -74,11 +71,6 @@
      */
     private final CognitoUser user;
 
-    /**
-     * Required to access Android OS resources.
-     */
-    private final Context context;
-
     /**
      * Constructs an object of type {@link CognitoDevice} with device details.
      *
@@ -88,16 +80,14 @@
      * @param lastModifiedDate          REQUIRED: The date on which the device attributes were last modified.
      * @param lastAccessedDate          REQUIRED: The date this device details were last read.
      * @param user                      REQUIRED: The {@link CognitoUser} this device is linked to.
-     * @param context                   REQUIRED: App context.
      */
-    public CognitoDevice(String deviceKey, CognitoUserAttributes deviceAttributes, Date createDate, Date lastModifiedDate, Date lastAccessedDate, CognitoUser user, Context context) {
+    public CognitoDevice(String deviceKey, CognitoUserAttributes deviceAttributes, Date createDate, Date lastModifiedDate, Date lastAccessedDate, CognitoUser user) {
         this.deviceKey = deviceKey;
         this.deviceAttributes = deviceAttributes;
         this.createDate = createDate;
         this.lastModifiedDate = lastModifiedDate;
         this.lastAccessedDate = lastAccessedDate;
         this.user = user;
-        this.context = context;
     }
 
     /**
@@ -105,16 +95,14 @@ public CognitoDevice(String deviceKey, CognitoUserAttributes deviceAttributes, D
      *
      * @param device                    REQUIRED: A {@link DeviceType} object.
      * @param user                      REQUIRED: The {@link CognitoUser} this device is linked to.
-     * @param context                   REQUIRED: App context.
      */
-    public CognitoDevice(DeviceType device, CognitoUser user, Context context) {
+    public CognitoDevice(DeviceType device, CognitoUser user) {
         this.deviceKey = device.getDeviceKey();
         this.deviceAttributes = new CognitoUserAttributes(device.getDeviceAttributes());
         this.createDate = device.getDeviceCreateDate();
         this.lastModifiedDate = device.getDeviceLastModifiedDate();
         this.lastAccessedDate = device.getDeviceLastModifiedDate();
         this.user = user;
-        this.context = context;
     }
 
     /**
@@ -197,30 +185,16 @@ public void getDeviceInBackground(final GenericHandler callback) {
         if (callback == null) {
             throw new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final GetDeviceResult getDeviceResult = getDeviceInternal(user.getCachedSession());
-                    updateThis(getDeviceResult.getDevice());
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final GetDeviceResult getDeviceResult = getDeviceInternal(user.getCachedSession());
+                updateThis(getDeviceResult.getDevice());
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -258,29 +232,15 @@ public void forgetDeviceInBackground(final GenericHandler callback) {
         if (callback == null) {
             throw  new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    forgetDeviceInternal(user.getCachedSession());
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                forgetDeviceInternal(user.getCachedSession());
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -314,29 +274,15 @@ public void rememberThisDeviceInBackground(final GenericHandler callback) {
         if (callback == null) {
             throw  new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    updateDeviceStatusInternal(user.getCachedSession(), DEVICE_TYPE_REMEMBERED);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                updateDeviceStatusInternal(user.getCachedSession(), DEVICE_TYPE_REMEMBERED);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -371,29 +317,15 @@ public void doNotRememberThisDeviceInBackground(final GenericHandler callback) {
             throw  new CognitoParameterInvalidException("callback is null");
         }
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    updateDeviceStatusInternal(user.getCachedSession(), DEVICE_TYPE_NOT_REMEMBERED);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                updateDeviceStatusInternal(user.getCachedSession(), DEVICE_TYPE_NOT_REMEMBERED);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoMfaSettings.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoMfaSettings.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoMfaSettings.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoMfaSettings.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
similarity index 80%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
index eb2d03c993..b7c81da814 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUser.java
@@ -17,10 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider;
 
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Handler;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationContinuation;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.AuthenticationDetails;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations.ChallengeContinuation;
@@ -99,6 +95,8 @@
 import com.amazonaws.services.cognitoidentityprovider.model.VerifyUserAttributeResult;
 import com.amazonaws.util.Base64;
 import com.amazonaws.util.StringUtils;
+import com.gluonhq.charm.down.Services;
+import com.gluonhq.charm.down.plugins.SettingsService;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -133,11 +131,6 @@
 
     private static final int SRP_RADIX = 16;
 
-    /**
-     * Application context.
-     */
-    private final Context context;
-
     /**
      * CIP low-level client.
      */
@@ -199,13 +192,11 @@
      * @param clientSecret REQUIRED: Client secret assigned for this Client-Id.
      * @param secretHash REQUIRED: Secret-Hash, calculated for this android app.
      * @param client REQUIRED: Low level android client.
-     * @param context REQUIRED: Application context.
      */
     protected CognitoUser(CognitoUserPool pool, String userId,
             String clientId, String clientSecret, String secretHash,
-            AmazonCognitoIdentityProvider client, Context context) {
+            AmazonCognitoIdentityProvider client) {
         this.pool = pool;
-        this.context = context;
         this.userId = userId;
         this.cognitoIdentityProviderClient = client;
         this.clientId = clientId;
@@ -264,29 +255,15 @@ public void confirmSignUpInBackground(final String confirmationCode,
         if (callback == null) {
             throw new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    confirmSignUpInternal(confirmationCode, forcedAliasCreation);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                confirmSignUpInternal(confirmationCode, forcedAliasCreation);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -356,30 +333,18 @@ public void resendConfirmationCodeInBackground(final VerificationHandler callbac
         if (callback == null) {
             throw new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final ResendConfirmationCodeResult resendConfirmationCodeResult = resendConfirmationCodeInternal();
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(new CognitoUserCodeDeliveryDetails(
-                                    resendConfirmationCodeResult.getCodeDeliveryDetails()));
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final ResendConfirmationCodeResult resendConfirmationCodeResult = resendConfirmationCodeInternal();
+                returnCallback = () -> {
+                    callback.onSuccess(new CognitoUserCodeDeliveryDetails(
+                            resendConfirmationCodeResult.getCodeDeliveryDetails()));
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -449,34 +414,22 @@ public void forgotPasswordInBackground(final ForgotPasswordHandler callback) {
 
         final CognitoUser cognitoUser = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final ForgotPasswordResult forgotPasswordResult = forgotPasswordInternal();
-                    final ForgotPasswordContinuation continuation = new ForgotPasswordContinuation(
-                            cognitoUser,
-                            new CognitoUserCodeDeliveryDetails(
-                                    forgotPasswordResult.getCodeDeliveryDetails()),
-                            ForgotPasswordContinuation.RUN_IN_BACKGROUND, callback);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.getResetCode(continuation);
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final ForgotPasswordResult forgotPasswordResult = forgotPasswordInternal();
+                final ForgotPasswordContinuation continuation = new ForgotPasswordContinuation(
+                        cognitoUser,
+                        new CognitoUserCodeDeliveryDetails(
+                                forgotPasswordResult.getCodeDeliveryDetails()),
+                        ForgotPasswordContinuation.RUN_IN_BACKGROUND, callback);
+                returnCallback = () -> {
+                    callback.getResetCode(continuation);
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -559,29 +512,15 @@ public void confirmPasswordInBackground(final String verificationCode,
         if (callback == null) {
             throw new CognitoParameterInvalidException("callback is null");
         }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    confirmPasswordInternal(verificationCode, newPassword);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                confirmPasswordInternal(verificationCode, newPassword);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -668,40 +607,25 @@ public void getSessionInBackground(final AuthenticationHandler callback) {
 
         final CognitoUser cognitoUser = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    getCachedSession();
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(cipSession, null);
-                        }
-                    };
-                } catch (final CognitoNotAuthorizedException e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
-                                    cognitoUser, context,
-                                    AuthenticationContinuation.RUN_IN_BACKGROUND, callback);
-                            callback.getAuthenticationDetails(authenticationContinuation,
-                                    cognitoUser.getUserId());
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                getCachedSession();
+                returnCallback = () -> {
+                    callback.onSuccess(cipSession, null);
+                };
+            } catch (final CognitoNotAuthorizedException e) {
+                returnCallback = () -> {
+                    final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
+                            cognitoUser,
+                            AuthenticationContinuation.RUN_IN_BACKGROUND, callback);
+                    callback.getAuthenticationDetails(authenticationContinuation,
+                            cognitoUser.getUserId());
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -740,7 +664,7 @@ public void getSession(final AuthenticationHandler callback) {
             callback.onFailure(e);
         } catch (final CognitoNotAuthorizedException e) {
             final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
-                    this, context, AuthenticationContinuation.RUN_IN_CURRENT, callback);
+                    this, AuthenticationContinuation.RUN_IN_CURRENT, callback);
             callback.getAuthenticationDetails(authenticationContinuation, getUserId());
         } catch (final Exception e) {
             callback.onFailure(e);
@@ -772,13 +696,10 @@ public Runnable initiateUserAuthentication(final AuthenticationDetails authentic
                             authenticationDetails.getAuthenticationType())) {
             return startWithUserPasswordAuth(authenticationDetails, callback, runInBackground);
         } else {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(
-                            new CognitoParameterInvalidException("Unsupported authentication type "
-                                    + authenticationDetails.getAuthenticationType()));
-                }
+            return () -> {
+                callback.onFailure(
+                        new CognitoParameterInvalidException("Unsupported authentication type "
+                                + authenticationDetails.getAuthenticationType()));
             };
         }
     }
@@ -877,30 +798,16 @@ public void changePasswordInBackground(final String oldUserPassword,
 
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    changePasswordInternal(oldUserPassword, newUserPassword, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                changePasswordInternal(oldUserPassword, newUserPassword, session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -968,30 +875,18 @@ public void getDetailsInBackground(final GetDetailsHandler callback) {
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    final CognitoUserDetails userDetails = getUserDetailsInternal(session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(userDetails);
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                final CognitoUserDetails userDetails = getUserDetailsInternal(session);
+                returnCallback = () -> {
+                    callback.onSuccess(userDetails);
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1062,33 +957,21 @@ public void getAttributeVerificationCodeInBackground(final String attributeName,
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    final GetUserAttributeVerificationCodeResult getUserAttributeVerificationCodeResult = getAttributeVerificationCodeInternal(
-                            attributeName, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(new CognitoUserCodeDeliveryDetails(
-                                    getUserAttributeVerificationCodeResult
-                                            .getCodeDeliveryDetails()));
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                final GetUserAttributeVerificationCodeResult getUserAttributeVerificationCodeResult = getAttributeVerificationCodeInternal(
+                        attributeName, session);
+                returnCallback = () -> {
+                    callback.onSuccess(new CognitoUserCodeDeliveryDetails(
+                            getUserAttributeVerificationCodeResult
+                                    .getCodeDeliveryDetails()));
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1170,30 +1053,16 @@ public void verifyAttributeInBackground(final String attributeName,
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    verifyAttributeInternal(attributeName, verificationCode, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                verifyAttributeInternal(attributeName, verificationCode, session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1262,51 +1131,36 @@ public void associateSoftwareTokenInBackground(final String sessionToken, final
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                boolean useSessionToken;
-                try {
-                    final CognitoUserSession cognitoTokens = user.getCachedSession();
-                    AssociateSoftwareTokenResult result;
-                    if (!StringUtils.isBlank(sessionToken)) {
-                        result = associateTotpMfaInternalWithSession(sessionToken);
-                        useSessionToken = true;
-                    } else {
-                        result = associateTotpMfaInternalWithTokens(cognitoTokens);
-                        useSessionToken = false;
-                    }
-                    final String nextSessionToken = result.getSession();
-                    final Map<String, String> parameters = new HashMap<String, String>();
-                    parameters.put("type", CognitoServiceConstants.CHLG_TYPE_SOFTWARE_TOKEN_MFA);
-                    parameters.put("secretKey", result.getSecretCode());
-                    if (useSessionToken) {
-                        returnCallback = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onVerify(new VerifyMfaContinuation(context, clientId, user, callback, parameters, true, nextSessionToken, VerifyMfaContinuation.RUN_IN_BACKGROUND));
-                            }
-                        };
-                    } else {
-                        returnCallback = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onVerify(new VerifyMfaContinuation(context, clientId, user, callback, parameters, false, nextSessionToken, VerifyMfaContinuation.RUN_IN_BACKGROUND));
-                            }
-                        };
-                    }
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
+        new Thread(() -> {
+            Runnable returnCallback;
+            boolean useSessionToken;
+            try {
+                final CognitoUserSession cognitoTokens = user.getCachedSession();
+                AssociateSoftwareTokenResult result;
+                if (!StringUtils.isBlank(sessionToken)) {
+                    result = associateTotpMfaInternalWithSession(sessionToken);
+                    useSessionToken = true;
+                } else {
+                    result = associateTotpMfaInternalWithTokens(cognitoTokens);
+                    useSessionToken = false;
+                }
+                final String nextSessionToken = result.getSession();
+                final Map<String, String> parameters = new HashMap<>();
+                parameters.put("type", CognitoServiceConstants.CHLG_TYPE_SOFTWARE_TOKEN_MFA);
+                parameters.put("secretKey", result.getSecretCode());
+                if (useSessionToken) {
+                    returnCallback = () -> {
+                        callback.onVerify(new VerifyMfaContinuation(clientId, user, callback, parameters, true, nextSessionToken, VerifyMfaContinuation.RUN_IN_BACKGROUND));
+                    };
+                } else {
+                    returnCallback = () -> {
+                        callback.onVerify(new VerifyMfaContinuation(clientId, user, callback, parameters, false, nextSessionToken, VerifyMfaContinuation.RUN_IN_BACKGROUND));
                     };
                 }
-                handler.post(returnCallback);
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1332,10 +1186,10 @@ public void associateSoftwareToken(final String sessionToken, final RegisterMfaH
                 useSessionToken = false;
             }
             final String nextSessionToken = result.getSession();
-            final Map<String, String> parameters = new HashMap<String, String>();
+            final Map<String, String> parameters = new HashMap<>();
             parameters.put("type", CognitoServiceConstants.CHLG_TYPE_SOFTWARE_TOKEN_MFA);
             parameters.put("secretKey", result.getSecretCode());
-            callback.onVerify(new VerifyMfaContinuation(context, clientId, user, callback, parameters, useSessionToken, nextSessionToken, VerifyMfaContinuation.RUN_IN_CURRENT));
+            callback.onVerify(new VerifyMfaContinuation(clientId, user, callback, parameters, useSessionToken, nextSessionToken, VerifyMfaContinuation.RUN_IN_CURRENT));
         } catch (Exception e) {
             callback.onFailure(e);
         }
@@ -1396,51 +1250,34 @@ public void verifySoftwareTokenInBackground(
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession cognitoTokens = user.getCachedSession();
-                    VerifySoftwareTokenResult result;
-                    boolean useSessionToken;
-                    if (!StringUtils.isBlank(sessionToken)) {
-                        result = verifyTotpAssociationWithSession(sessionToken, totpCode, friendlyName);
-                        useSessionToken = true;
-                    } else {
-                        result = verifyTotpAssociationWithTokens(cognitoTokens, totpCode, friendlyName);
-                        useSessionToken = false;
-                    }
-                    final String newSessionToken = result.getSession();
-                    if (VerifySoftwareTokenResponseType.ERROR.equals(result.getStatus())) {
-                        throw new CognitoInternalErrorException("verification failed");
-                    }
-                    if (useSessionToken) {
-                        returnCallback = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onSuccess(newSessionToken);
-                            }
-                        };
-                    } else {
-                        returnCallback = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onSuccess(null);
-                            }
-                        };
-                    }
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession cognitoTokens = user.getCachedSession();
+                VerifySoftwareTokenResult result;
+                boolean useSessionToken;
+                if (!StringUtils.isBlank(sessionToken)) {
+                    result = verifyTotpAssociationWithSession(sessionToken, totpCode, friendlyName);
+                    useSessionToken = true;
+                } else {
+                    result = verifyTotpAssociationWithTokens(cognitoTokens, totpCode, friendlyName);
+                    useSessionToken = false;
+                }
+                final String newSessionToken = result.getSession();
+                if (VerifySoftwareTokenResponseType.ERROR.equals(result.getStatus())) {
+                    throw new CognitoInternalErrorException("verification failed");
+                }
+                if (useSessionToken) {
+                    returnCallback = () -> {
+                        callback.onSuccess(newSessionToken);
                     };
+                } else {
+                    returnCallback = () -> callback.onSuccess(null);
                 }
-                handler.post(returnCallback);
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1548,41 +1385,28 @@ public void updateAttributesInBackground(final CognitoUserAttributes attributes,
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    final UpdateUserAttributesResult updateUserAttributesResult = updateAttributesInternal(
-                            attributes, session);
-
-                    final List<CognitoUserCodeDeliveryDetails> attributesVerificationList = new ArrayList<CognitoUserCodeDeliveryDetails>();
-                    if (updateUserAttributesResult.getCodeDeliveryDetailsList() != null) {
-                        for (final CodeDeliveryDetailsType details : updateUserAttributesResult
-                                .getCodeDeliveryDetailsList()) {
-                            attributesVerificationList
-                                    .add(new CognitoUserCodeDeliveryDetails(details));
-                        }
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                final UpdateUserAttributesResult updateUserAttributesResult = updateAttributesInternal(
+                        attributes, session);
+                
+                final List<CognitoUserCodeDeliveryDetails> attributesVerificationList = new ArrayList<>();
+                if (updateUserAttributesResult.getCodeDeliveryDetailsList() != null) {
+                    for (final CodeDeliveryDetailsType details : updateUserAttributesResult
+                            .getCodeDeliveryDetailsList()) {
+                        attributesVerificationList
+                                .add(new CognitoUserCodeDeliveryDetails(details));
                     }
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-
-                            callback.onSuccess(attributesVerificationList);
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
                 }
-                handler.post(returnCallback);
+                returnCallback = () -> {
+                    callback.onSuccess(attributesVerificationList);
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1609,7 +1433,7 @@ public void updateAttributes(final CognitoUserAttributes attributes,
             final UpdateUserAttributesResult updateUserAttributesResult = updateAttributesInternal(
                     attributes, session);
 
-            final List<CognitoUserCodeDeliveryDetails> attributesVerificationList = new ArrayList<CognitoUserCodeDeliveryDetails>();
+            final List<CognitoUserCodeDeliveryDetails> attributesVerificationList = new ArrayList<>();
             if (updateUserAttributesResult.getCodeDeliveryDetailsList() != null) {
                 for (final CodeDeliveryDetailsType details : updateUserAttributesResult
                         .getCodeDeliveryDetailsList()) {
@@ -1656,30 +1480,16 @@ public void deleteAttributesInBackground(final List<String> attributeNamesToDele
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    deleteAttributesInternal(attributeNamesToDelete, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                deleteAttributesInternal(attributeNamesToDelete, session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1764,31 +1574,19 @@ public void globalSignOutInBackground(final GenericHandler callback) {
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    globalSignOutInternal(session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            signOut();
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                globalSignOutInternal(session);
+                returnCallback = () -> {
+                    signOut();
+                    callback.onSuccess();
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1848,30 +1646,16 @@ public void deleteUserInBackground(final GenericHandler callback) {
         }
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final CognitoUserSession session = user.getCachedSession();
-                    deleteUserInternal(session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final CognitoUserSession session = user.getCachedSession();
+                deleteUserInternal(session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -1934,29 +1718,15 @@ public void setUserSettingsInBackground(final CognitoUserSettings cognitoUserSet
         }
         final CognitoUserSession session = this.getCachedSession();
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    setUserSettingsInternal(cognitoUserSettings, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                setUserSettingsInternal(cognitoUserSettings, session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -2021,29 +1791,15 @@ public void setUserMfaSettingsInBackground(final List<CognitoMfaSettings> mfaSet
         }
         final CognitoUserSession session = this.getCachedSession();
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    setUserMfaSettingsInternal(mfaSettings, session);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess();
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                setUserMfaSettingsInternal(mfaSettings, session);
+                returnCallback = callback::onSuccess;
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -2086,10 +1842,12 @@ private void setUserMfaSettingsInternal(List<CognitoMfaSettings> mfaSettings, Co
      */
     private void clearCachedTokens() {
         try {
+            SettingsService csiCachedTokens = Services.get(SettingsService.class)
+                .orElseThrow(() -> {
+                    throw new RuntimeException("Error accessing Settings Service");
+            });
+            
             // Clear all cached tokens.
-            final SharedPreferences csiCachedTokens = context
-                    .getSharedPreferences("CognitoIdentityProviderCache", 0);
-
             // Format "key" strings
             final String csiIdTokenKey = String.format("CognitoIdentityProvider.%s.%s.idToken",
                     clientId, userId);
@@ -2098,11 +1856,10 @@ private void clearCachedTokens() {
             final String csiRefreshTokenKey = String
                     .format("CognitoIdentityProvider.%s.%s.refreshToken", clientId, userId);
 
-            final SharedPreferences.Editor cacheEdit = csiCachedTokens.edit();
-            cacheEdit.remove(csiIdTokenKey);
-            cacheEdit.remove(csiAccessTokenKey);
-            cacheEdit.remove(csiRefreshTokenKey).apply();
-        } catch (final Exception e) {
+            csiCachedTokens.remove(csiIdTokenKey);
+            csiCachedTokens.remove(csiAccessTokenKey);
+            csiCachedTokens.remove(csiRefreshTokenKey);
+        } catch (final Throwable e) {
             // Logging exception, this is not a fatal error
             LOGGER.error("Error while deleting from SharedPreferences", e);
         }
@@ -2117,8 +1874,10 @@ private CognitoUserSession readCachedTokens() {
         CognitoUserSession userSession = new CognitoUserSession(null, null, null);
 
         try {
-            final SharedPreferences csiCachedTokens = context
-                    .getSharedPreferences("CognitoIdentityProviderCache", 0);
+            SettingsService csiCachedTokens = Services.get(SettingsService.class)
+                .orElseThrow(() -> {
+                    throw new RuntimeException("Error accessing Settings Service");
+            });
 
             // Format "key" strings
             final String csiIdTokenKey = "CognitoIdentityProvider." + clientId + "." + userId
@@ -2128,17 +1887,17 @@ private CognitoUserSession readCachedTokens() {
             final String csiRefreshTokenKey = "CognitoIdentityProvider." + clientId + "." + userId
                     + ".refreshToken";
 
-            if (csiCachedTokens.contains(csiIdTokenKey)) {
+            if (csiCachedTokens.retrieve(csiIdTokenKey) != null) {
                 final CognitoIdToken csiCachedIdToken = new CognitoIdToken(
-                        csiCachedTokens.getString(csiIdTokenKey, null));
+                        csiCachedTokens.retrieve(csiIdTokenKey));
                 final CognitoAccessToken csiCachedAccessToken = new CognitoAccessToken(
-                        csiCachedTokens.getString(csiAccessTokenKey, null));
+                        csiCachedTokens.retrieve(csiAccessTokenKey));
                 final CognitoRefreshToken csiCachedRefreshToken = new CognitoRefreshToken(
-                        csiCachedTokens.getString(csiRefreshTokenKey, null));
+                        csiCachedTokens.retrieve(csiRefreshTokenKey));
                 userSession = new CognitoUserSession(csiCachedIdToken, csiCachedAccessToken,
                         csiCachedRefreshToken);
             }
-        } catch (final Exception e) {
+        } catch (final Throwable e) {
             // Logging exception, this is not a fatal error
             LOGGER.error("Error while reading SharedPreferences", e);
         }
@@ -2152,8 +1911,10 @@ private CognitoUserSession readCachedTokens() {
      */
     private void cacheTokens(CognitoUserSession session) {
         try {
-            final SharedPreferences csiCachedTokens = context
-                    .getSharedPreferences("CognitoIdentityProviderCache", 0);
+            SettingsService csiCachedTokens = Services.get(SettingsService.class)
+                .orElseThrow(() -> {
+                    throw new RuntimeException("Error accessing Settings Service");
+            });
 
             final String csiUserPoolId = pool.getUserPoolId();
 
@@ -2167,13 +1928,12 @@ private void cacheTokens(CognitoUserSession session) {
             final String csiLastUserKey = "CognitoIdentityProvider." + clientId + ".LastAuthUser";
 
             // Store the data in Shared Preferences
-            final SharedPreferences.Editor cacheEdit = csiCachedTokens.edit();
-            cacheEdit.putString(csiIdTokenKey, session.getIdToken().getJWTToken());
-            cacheEdit.putString(csiAccessTokenKey, session.getAccessToken().getJWTToken());
-            cacheEdit.putString(csiRefreshTokenKey, session.getRefreshToken().getToken());
-            cacheEdit.putString(csiLastUserKey, userId).apply();
+            csiCachedTokens.store(csiIdTokenKey, session.getIdToken().getJWTToken());
+            csiCachedTokens.store(csiAccessTokenKey, session.getAccessToken().getJWTToken());
+            csiCachedTokens.store(csiRefreshTokenKey, session.getRefreshToken().getToken());
+            csiCachedTokens.store(csiLastUserKey, userId);
 
-        } catch (final Exception e) {
+        } catch (final Throwable e) {
             // Logging exception, this is not a fatal error
             LOGGER.error("Error while writing to SharedPreferences.", e);
         }
@@ -2268,32 +2028,18 @@ public Runnable respondToChallenge(final RespondToAuthChallengeRequest challenge
         } catch (final ResourceNotFoundException rna) {
             final CognitoUser cognitoUser = this;
             if (rna.getMessage().contains("Device")) {
-                CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId(),
-                        context);
-                return new Runnable() {
-                    @Override
-                    public void run() {
-                        final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
-                                cognitoUser, context, runInBackground, callback);
-                        callback.getAuthenticationDetails(authenticationContinuation,
-                                cognitoUser.getUserId());
-                    }
+                CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId());
+                return () -> {
+                    final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
+                            cognitoUser, runInBackground, callback);
+                    callback.getAuthenticationDetails(authenticationContinuation,
+                            cognitoUser.getUserId());
                 };
             } else {
-                return new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onFailure(rna);
-                    }
-                };
+                return () -> callback.onFailure(rna);
             }
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2331,32 +2077,20 @@ private Runnable startWithUserSrpAuth(final AuthenticationDetails authentication
         } catch (final ResourceNotFoundException rna) {
             final CognitoUser cognitoUser = this;
             if (rna.getMessage().contains("Device")) {
-                CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId(),
-                        context);
-                return new Runnable() {
-                    @Override
-                    public void run() {
-                        final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
-                                cognitoUser, context, runInBackground, callback);
-                        callback.getAuthenticationDetails(authenticationContinuation,
-                                cognitoUser.getUserId());
-                    }
+                CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId());
+                return () -> {
+                    final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
+                            cognitoUser, runInBackground, callback);
+                    callback.getAuthenticationDetails(authenticationContinuation,
+                            cognitoUser.getUserId());
                 };
             } else {
-                return new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onFailure(rna);
-                    }
+                return () -> {
+                    callback.onFailure(rna);
                 };
             }
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2380,12 +2114,7 @@ private Runnable startWithCustomAuth(final AuthenticationDetails authenticationD
                     .initiateAuth(initiateAuthRequest);
             return handleChallenge(initiateAuthResult, callback, runInBackground);
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2414,12 +2143,9 @@ private Runnable handleChallenge(final RespondToAuthChallengeResult challenge,
             final AuthenticationHandler callback, final boolean runInBackground) {
         Runnable nextTask;
         final CognitoUser cognitoUser = this;
-        nextTask = new Runnable() {
-            @Override
-            public void run() {
-                callback.onFailure(new CognitoInternalErrorException(
-                        "Authentication failed due to an internal error"));
-            }
+        nextTask = () -> {
+            callback.onFailure(new CognitoInternalErrorException(
+                    "Authentication failed due to an internal error"));
         };
 
         if (challenge == null) {
@@ -2435,31 +2161,21 @@ public void run() {
             final NewDeviceMetadataType newDeviceMetadata = challenge.getAuthenticationResult()
                     .getNewDeviceMetadata();
             if (newDeviceMetadata == null) {
-                nextTask = new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onSuccess(cognitoUserSession, null);
-                    }
+                nextTask = () -> {
+                    callback.onSuccess(cognitoUserSession, null);
                 };
             } else {
                 final ConfirmDeviceResult confirmDeviceResult = confirmDevice(newDeviceMetadata);
                 if (confirmDeviceResult != null
                         && confirmDeviceResult.isUserConfirmationNecessary()) {
                     final CognitoDevice newDevice = new CognitoDevice(
-                            newDeviceMetadata.getDeviceKey(), null, null, null, null, cognitoUser,
-                            context);
-                    nextTask = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(cognitoUserSession, newDevice);
-                        }
+                            newDeviceMetadata.getDeviceKey(), null, null, null, null, cognitoUser);
+                    nextTask = () -> {
+                        callback.onSuccess(cognitoUserSession, newDevice);
                     };
                 } else {
-                    nextTask = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(cognitoUserSession, null);
-                        }
+                    nextTask = () -> {
+                        callback.onSuccess(cognitoUserSession, null);
                     };
                 }
             }
@@ -2468,52 +2184,37 @@ public void run() {
         } else if (CognitoServiceConstants.CHLG_TYPE_SMS_MFA.equals(challengeName)
                 || CognitoServiceConstants.CHLG_TYPE_SOFTWARE_TOKEN_MFA.equals(challengeName)) {
             final MultiFactorAuthenticationContinuation multiFactorAuthenticationContinuation = new MultiFactorAuthenticationContinuation(
-                    cognitoUser, context, challenge, runInBackground, callback);
-            nextTask = new Runnable() {
-                @Override
-                public void run() {
-                    callback.getMFACode(multiFactorAuthenticationContinuation);
-                }
+                    cognitoUser, challenge, runInBackground, callback);
+            nextTask = () -> {
+                callback.getMFACode(multiFactorAuthenticationContinuation);
             };
         } else if (CognitoServiceConstants.CHLG_TYPE_SELECT_MFA_TYPE.equals(challengeName)) {
             final ChooseMfaContinuation continuation = new ChooseMfaContinuation(
-                    cognitoUser, context, usernameInternal, clientId, secretHash, challenge, runInBackground, callback);
-            nextTask = new Runnable() {
-                @Override
-                public void run() {
-                    callback.authenticationChallenge(continuation);
-                }
+                    cognitoUser, usernameInternal, clientId, secretHash, challenge, runInBackground, callback);
+            nextTask = () -> {
+                callback.authenticationChallenge(continuation);
             };
         } else if (CognitoServiceConstants.CHLG_TYPE_MFA_SETUP.equals(challengeName)) {
             final RegisterMfaContinuation continuation = new RegisterMfaContinuation(
-                    cognitoUser, context, usernameInternal, clientId, secretHash, challenge, runInBackground, callback);
-            nextTask = new Runnable() {
-                @Override
-                public void run() {
-                    callback.authenticationChallenge(continuation);
-                }
+                    cognitoUser, usernameInternal, clientId, secretHash, challenge, runInBackground, callback);
+            nextTask = () -> {
+                callback.authenticationChallenge(continuation);
             };
         } else if (CognitoServiceConstants.CHLG_TYPE_DEVICE_SRP_AUTH.equals(challengeName)) {
             nextTask = deviceSrpAuthentication(challenge, callback, runInBackground);
         } else if (CognitoServiceConstants.CHLG_TYPE_NEW_PASSWORD_REQUIRED.equals(challengeName)) {
             final NewPasswordContinuation newPasswordContinuation = new NewPasswordContinuation(
-                    cognitoUser, context, usernameInternal, clientId, secretHash, challenge,
+                    cognitoUser, usernameInternal, clientId, secretHash, challenge,
                     runInBackground, callback);
-            nextTask = new Runnable() {
-                @Override
-                public void run() {
-                    callback.authenticationChallenge(newPasswordContinuation);
-                }
+            nextTask = () -> {
+                callback.authenticationChallenge(newPasswordContinuation);
             };
         } else {
             final ChallengeContinuation challengeContinuation = new ChallengeContinuation(
-                    cognitoUser, context, usernameInternal, clientId, secretHash, challenge,
+                    cognitoUser, usernameInternal, clientId, secretHash, challenge,
                     runInBackground, callback);
-            nextTask = new Runnable() {
-                @Override
-                public void run() {
-                    callback.authenticationChallenge(challengeContinuation);
-                }
+            nextTask = () -> {
+                callback.authenticationChallenge(challengeContinuation);
             };
         }
         return nextTask;
@@ -2543,12 +2244,7 @@ private Runnable handleChallenge(final InitiateAuthResult authResult,
             challenge.setChallengeParameters(authResult.getChallengeParameters());
             return handleChallenge(challenge, callback, runInBackground);
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2573,12 +2269,7 @@ private Runnable startWithUserPasswordAuth(final AuthenticationDetails authentic
                     .get(CognitoServiceConstants.CHLG_PARAM_USER_ID_FOR_SRP);
             return handleChallenge(initiateAuthResult, callback, runInBackground);
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2607,7 +2298,7 @@ private InitiateAuthRequest initiateUserPasswordAuthRequest(
 
         if (authenticationDetails.getValidationData() != null
                 && authenticationDetails.getValidationData().size() > 0) {
-            final Map<String, String> userValidationData = new HashMap<String, String>();
+            final Map<String, String> userValidationData = new HashMap<>();
             for (final AttributeType attribute : authenticationDetails.getValidationData()) {
                 userValidationData.put(attribute.getName(), attribute.getValue());
             }
@@ -2633,9 +2324,9 @@ private InitiateAuthRequest initiateUserPasswordAuthRequest(
     private Runnable deviceSrpAuthentication(final RespondToAuthChallengeResult challenge,
             final AuthenticationHandler callback, final boolean runInBackground) {
         final String deviceSecret = CognitoDeviceHelper.getDeviceSecret(usernameInternal,
-                pool.getUserPoolId(), context);
+                pool.getUserPoolId());
         final String deviceGroupKey = CognitoDeviceHelper.getDeviceGroupKey(usernameInternal,
-                pool.getUserPoolId(), context);
+                pool.getUserPoolId());
         final AuthenticationHelper authenticationHelper = new AuthenticationHelper(deviceGroupKey);
         final RespondToAuthChallengeRequest devicesAuthRequest = initiateDevicesAuthRequest(
                 authenticationHelper);
@@ -2655,23 +2346,15 @@ private Runnable deviceSrpAuthentication(final RespondToAuthChallengeResult chal
             }
         } catch (final NotAuthorizedException na) {
             final CognitoUser cognitoUser = this;
-            CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId(), context);
-            return new Runnable() {
-                @Override
-                public void run() {
-                    final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
-                            cognitoUser, context, runInBackground, callback);
-                    callback.getAuthenticationDetails(authenticationContinuation,
-                            cognitoUser.getUserId());
-                }
+            CognitoDeviceHelper.clearCachedDevice(usernameInternal, pool.getUserPoolId());
+            return () -> {
+                final AuthenticationContinuation authenticationContinuation = new AuthenticationContinuation(
+                        cognitoUser, runInBackground, callback);
+                callback.getAuthenticationDetails(authenticationContinuation,
+                        cognitoUser.getUserId());
             };
         } catch (final Exception e) {
-            return new Runnable() {
-                @Override
-                public void run() {
-                    callback.onFailure(e);
-                }
-            };
+            return () -> callback.onFailure(e);
         }
     }
 
@@ -2702,14 +2385,14 @@ private InitiateAuthRequest initiateUserSrpAuthRequest(
         if (deviceKey == null) {
             initiateAuthRequest.addAuthParametersEntry(
                     CognitoServiceConstants.AUTH_PARAM_DEVICE_KEY, CognitoDeviceHelper.getDeviceKey(
-                            authenticationDetails.getUserId(), pool.getUserPoolId(), context));
+                            authenticationDetails.getUserId(), pool.getUserPoolId()));
         } else {
             initiateAuthRequest.addAuthParametersEntry(
                     CognitoServiceConstants.AUTH_PARAM_DEVICE_KEY, deviceKey);
         }
         if (authenticationDetails.getValidationData() != null
                 && authenticationDetails.getValidationData().size() > 0) {
-            final Map<String, String> userValidationData = new HashMap<String, String>();
+            final Map<String, String> userValidationData = new HashMap<>();
             for (final AttributeType attribute : authenticationDetails.getValidationData()) {
                 userValidationData.put(attribute.getName(), attribute.getValue());
             }
@@ -2743,7 +2426,7 @@ private InitiateAuthRequest initiateCustomAuthRequest(
         authRequest.setAuthParameters(authenticationDetails.getAuthenticationParameters());
         if (authenticationDetails.getValidationData() != null
                 && authenticationDetails.getValidationData().size() > 0) {
-            final Map<String, String> userValidationData = new HashMap<String, String>();
+            final Map<String, String> userValidationData = new HashMap<>();
             for (final AttributeType attribute : authenticationDetails.getValidationData()) {
                 userValidationData.put(attribute.getName(), attribute.getValue());
             }
@@ -2794,11 +2477,10 @@ private InitiateAuthRequest initiateRefreshTokenAuthRequest(CognitoUserSession c
                 currSession.getRefreshToken().getToken());
         if (deviceKey == null) {
             if (usernameInternal != null) {
-                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
-                        context);
+                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId());
             } else {
                 deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(), 
-                        pool.getUserPoolId(), context);
+                        pool.getUserPoolId());
             }
         }
         initiateAuthRequest.addAuthParametersEntry(CognitoServiceConstants.AUTH_PARAM_DEVICE_KEY,
@@ -2835,8 +2517,7 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
                 .get(CognitoServiceConstants.CHLG_PARAM_USER_ID_FOR_SRP);
         this.usernameInternal = challenge.getChallengeParameters()
                 .get(CognitoServiceConstants.CHLG_PARAM_USERNAME);
-        this.deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
-                context);
+        this.deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId());
         secretHash = CognitoSecretHash.getSecretHash(usernameInternal, clientId, clientSecret);
 
         final BigInteger srpB = new BigInteger(challenge.getChallengeParameters().get("SRP_B"), 16);
@@ -2872,7 +2553,7 @@ private RespondToAuthChallengeRequest userSrpAuthRequest(InitiateAuthResult chal
             throw new CognitoInternalErrorException("SRP error", e);
         }
 
-        final Map<String, String> srpAuthResponses = new HashMap<String, String>();
+        final Map<String, String> srpAuthResponses = new HashMap<>();
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_PASSWORD_CLAIM_SECRET_BLOCK,
                 challenge.getChallengeParameters()
                         .get(CognitoServiceConstants.CHLG_PARAM_SECRET_BLOCK));
@@ -2952,7 +2633,7 @@ public RespondToAuthChallengeRequest deviceSrpAuthRequest(
 
         secretHash = CognitoSecretHash.getSecretHash(usernameInternal, clientId, clientSecret);
 
-        final Map<String, String> srpAuthResponses = new HashMap<String, String>();
+        final Map<String, String> srpAuthResponses = new HashMap<>();
         srpAuthResponses.put(CognitoServiceConstants.CHLG_RESP_PASSWORD_CLAIM_SECRET_BLOCK,
                 challenge.getChallengeParameters()
                         .get(CognitoServiceConstants.CHLG_PARAM_SECRET_BLOCK));
@@ -2988,35 +2669,23 @@ public void listDevicesInBackground(final int limit, final String paginationToke
 
         final CognitoUser user = this;
 
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final ListDevicesResult listDevicesResult = listDevicesInternal(
-                            user.getCachedSession(), limit, paginationToken);
-                    final List<CognitoDevice> devicesList = new ArrayList<CognitoDevice>();
-                    for (final DeviceType device : listDevicesResult.getDevices()) {
-                        devicesList.add(new CognitoDevice(device, user, context));
-                    }
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(devicesList);
-                        }
-                    };
-
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final ListDevicesResult listDevicesResult = listDevicesInternal(
+                        user.getCachedSession(), limit, paginationToken);
+                final List<CognitoDevice> devicesList = new ArrayList<>();
+                for (final DeviceType device : listDevicesResult.getDevices()) {
+                    devicesList.add(new CognitoDevice(device, user));
                 }
-                handler.post(returnCallback);
+                returnCallback = () -> {
+                    callback.onSuccess(devicesList);
+                };
+                
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -3037,9 +2706,9 @@ public void listDevices(int limit, String paginationToken, DevicesHandler callba
         try {
             final ListDevicesResult listDevicesResult = listDevicesInternal(getCachedSession(),
                     limit, paginationToken);
-            final List<CognitoDevice> devicesList = new ArrayList<CognitoDevice>();
+            final List<CognitoDevice> devicesList = new ArrayList<>();
             for (final DeviceType device : listDevicesResult.getDevices()) {
-                devicesList.add(new CognitoDevice(device, this, context));
+                devicesList.add(new CognitoDevice(device, this));
             }
             callback.onSuccess(devicesList);
         } catch (final Exception e) {
@@ -3056,19 +2725,18 @@ public void listDevices(int limit, String paginationToken, DevicesHandler callba
     public CognitoDevice thisDevice() {
         if (deviceKey == null) {
             if (usernameInternal != null) {
-                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
-                        context);
+                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId());
             } else if (userId != null) {
-                deviceKey = CognitoDeviceHelper.getDeviceKey(userId, pool.getUserPoolId(), context);
+                deviceKey = CognitoDeviceHelper.getDeviceKey(userId, pool.getUserPoolId());
                 if (deviceKey == null) {
                     CognitoUserSession currSession = this.readCachedTokens();
                     deviceKey = CognitoDeviceHelper.getDeviceKey(currSession.getUsername(), 
-                            this.pool.getUserPoolId(), this.context);
+                            this.pool.getUserPoolId());
                 }
             }
         }
         if (deviceKey != null) {
-            return new CognitoDevice(deviceKey, null, null, null, null, this, context);
+            return new CognitoDevice(deviceKey, null, null, null, null, this);
         } else {
             return null;
         }
@@ -3100,11 +2768,11 @@ private ConfirmDeviceResult confirmDevice(final NewDeviceMetadataType deviceMeta
             return null;
         }
         CognitoDeviceHelper.cacheDeviceKey(usernameInternal, pool.getUserPoolId(),
-                deviceMetadata.getDeviceKey(), context);
+                deviceMetadata.getDeviceKey());
         CognitoDeviceHelper.cacheDeviceVerifier(usernameInternal, pool.getUserPoolId(),
-                deviceSrpVerifiers.get("secret"), context);
+                deviceSrpVerifiers.get("secret"));
         CognitoDeviceHelper.cacheDeviceGroupKey(usernameInternal, pool.getUserPoolId(),
-                deviceMetadata.getDeviceGroupKey(), context);
+                deviceMetadata.getDeviceGroupKey());
         return confirmDeviceResult;
     }
 
@@ -3184,8 +2852,7 @@ private void updateInternalUsername(Map<String, String> challengeParameters) {
                     .containsKey(CognitoServiceConstants.CHLG_PARAM_USERNAME)) {
                 usernameInternal = challengeParameters
                         .get(CognitoServiceConstants.CHLG_PARAM_USERNAME);
-                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId(),
-                        context);
+                deviceKey = CognitoDeviceHelper.getDeviceKey(usernameInternal, pool.getUserPoolId());
                 if (secretHash == null) {
                     secretHash = CognitoSecretHash.getSecretHash(usernameInternal, clientId,
                             clientSecret);
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserAttributes.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserAttributes.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserAttributes.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserAttributes.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserCodeDeliveryDetails.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserCodeDeliveryDetails.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserCodeDeliveryDetails.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserCodeDeliveryDetails.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserDetails.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserDetails.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserDetails.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserDetails.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
similarity index 79%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
index b962bae544..23da471def 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserPool.java
@@ -17,13 +17,8 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider;
 
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Handler;
-
 import com.amazonaws.ClientConfiguration;
 import com.amazonaws.auth.AnonymousAWSCredentials;
-import com.amazonaws.cognito.clientcontext.data.UserContextDataProvider;
 import com.amazonaws.mobile.config.AWSConfiguration;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.SignUpHandler;
@@ -37,12 +32,16 @@
 import com.amazonaws.services.cognitoidentityprovider.model.SignUpRequest;
 import com.amazonaws.services.cognitoidentityprovider.model.SignUpResult;
 import com.amazonaws.services.cognitoidentityprovider.model.UserContextDataType;
+import com.gluonhq.charm.down.Services;
+import com.gluonhq.charm.down.plugins.SettingsService;
 
 import org.json.JSONObject;
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 
 /**
  * This represents a user-pool in a Cognito identity provider account. The user-pools are called as
@@ -83,11 +82,6 @@
      */
     private final String clientSecret;
 
-    /**
-     * Application context.
-     */
-    private final Context context;
-
     /**
      * CIP low-level client.
      */
@@ -114,7 +108,6 @@
      * Constructs a user-pool with a developer specified {@link ClientConfiguration} and default AWS region {@link Regions}.
      * Region defaults to US-EAST-1.
      * </p>
-     * @param context               REQUIRED: Android application context
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console
@@ -125,9 +118,9 @@
      *                              retry counts, etc.).
      */
     @Deprecated()
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret,
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret,
                            ClientConfiguration clientConfiguration) {
-        this(context, userPoolId, clientId, clientSecret, clientConfiguration, Regions.US_EAST_1);
+        this(userPoolId, clientId, clientSecret, clientConfiguration, Regions.US_EAST_1);
     }
 
     /**
@@ -136,7 +129,6 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * Constructs a user-pool with default {@link ClientConfiguration} and default AWS region {@link Regions}.
      * Region defaults to US-EAST-1.
      * </p>
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -144,24 +136,22 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      *                              the Cognito Identity Provider developer console.
      */
     @Deprecated()
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret) {
-        this(context, userPoolId, clientId, clientSecret, new ClientConfiguration(), Regions.US_EAST_1);
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret) {
+        this(userPoolId, clientId, clientSecret, new ClientConfiguration(), Regions.US_EAST_1);
     }
 
     /**
      * Constructs a user-pool with default {@link ClientConfiguration}.
      *
-     * @param context               REQUIRED: Android application context.
      * @param awsConfiguration      REQUIRED: Holds the configuration read from awsconfiguration.json
      */
-    public CognitoUserPool(Context context, AWSConfiguration awsConfiguration) {
+    public CognitoUserPool(AWSConfiguration awsConfiguration) {
         try {
             final JSONObject userPoolConfiguration = awsConfiguration.optJsonObject("CognitoUserPool");
-            this.context = context;
             this.userPoolId = userPoolConfiguration.getString("PoolId");
             this.clientId = userPoolConfiguration.getString("AppClientId");
             this.clientSecret = userPoolConfiguration.optString("AppClientSecret");
-            this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, userPoolConfiguration.optString("PinpointAppId"));
+            this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(userPoolConfiguration.optString("PinpointAppId"));
 
             final ClientConfiguration clientConfig = new ClientConfiguration();
             clientConfig.setUserAgent(awsConfiguration.getUserAgent());
@@ -177,7 +167,6 @@ public CognitoUserPool(Context context, AWSConfiguration awsConfiguration) {
     /**
      * Constructs a user-pool with default {@link ClientConfiguration}.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -185,14 +174,13 @@ public CognitoUserPool(Context context, AWSConfiguration awsConfiguration) {
      *                              the Cognito Identity Provider developer console.
      * @param region                REQUIRED: AWS region {@link Regions}.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, Regions region) {
-        this(context, userPoolId, clientId, clientSecret, new ClientConfiguration(), region);
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, Regions region) {
+        this(userPoolId, clientId, clientSecret, new ClientConfiguration(), region);
     }
     
     /**
      * Constructs a user-pool with default {@link ClientConfiguration}.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -201,14 +189,13 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * @param region                REQUIRED: AWS region {@link Regions}.
      * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, Regions region, String pinpointAppId) {
-        this(context, userPoolId, clientId, clientSecret, new ClientConfiguration(), region, pinpointAppId);
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, Regions region, String pinpointAppId) {
+        this(userPoolId, clientId, clientSecret, new ClientConfiguration(), region, pinpointAppId);
     }
 
     /**
      * Constructs a user-pool.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -219,14 +206,13 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      *                              retry counts, etc.).
      * @param region                REQUIRED: AWS region {@link Regions}.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region) {
-        this(context, userPoolId, clientId, clientSecret, clientConfiguration, region, null);
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region) {
+        this(userPoolId, clientId, clientSecret, clientConfiguration, region, null);
     }
     
     /**
      * Constructs a user-pool with integrated Pinpoint analytics.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -238,21 +224,19 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * @param region                REQUIRED: AWS region {@link Regions}.
      * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region, String pinpointAppId) {
-        this.context = context;
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, ClientConfiguration clientConfiguration, Regions region, String pinpointAppId) {
         this.userPoolId = userPoolId;
         this.clientId = clientId;
         this.clientSecret = clientSecret;
         this.client = new AmazonCognitoIdentityProviderClient(new AnonymousAWSCredentials(), clientConfiguration);
         this.client.setRegion(com.amazonaws.regions.Region.getRegion(region));
-        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, pinpointAppId);
+        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(pinpointAppId);
     }
 
 
     /**
      * Constructs a user-pool with default {@link ClientConfiguration}.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -260,14 +244,13 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      *                              the Cognito Identity Provider developer console.
      * @param client                REQUIRED: AWS low-level Cognito Identity Provider Client.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client) {
-        this(context, userPoolId, clientId, clientSecret, client, null);
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client) {
+        this(userPoolId, clientId, clientSecret, client, null);
     }
     
     /**
      * Constructs a user-pool with default {@link ClientConfiguration} and integrated analytics.
      *
-     * @param context               REQUIRED: Android application context.
      * @param userPoolId            REQUIRED: User-pool-Id of the user-pool.
      * @param clientId              REQUIRED: Client-Id generated for this app and user-pool at the
      *                              Cognito Identity Provider developer console.
@@ -276,13 +259,12 @@ public CognitoUserPool(Context context, String userPoolId, String clientId, Stri
      * @param client                REQUIRED: AWS low-level Cognito Identity Provider Client.
      * @param pinpointAppId         REQUIRED: AWS Pinpoint App Id for analytics.
      */
-    public CognitoUserPool(Context context, String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client, String pinpointAppId) {
-        this.context = context;
+    public CognitoUserPool(String userPoolId, String clientId, String clientSecret, AmazonCognitoIdentityProvider client, String pinpointAppId) {
         this.userPoolId = userPoolId;
         this.clientId = clientId;
         this.clientSecret = clientSecret;
         this.client = client;
-        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(context, pinpointAppId);
+        this.pinpointEndpointId = CognitoPinpointSharedContext.getPinpointEndpoint(pinpointAppId);
     }
 
     /**
@@ -327,33 +309,21 @@ public void signUpInBackground(final String userId, final String password,
                                          final CognitoUserAttributes userAttributes,
                                          final Map<String, String> validationData,
                                          final SignUpHandler callback) {
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                final Handler handler = new Handler(context.getMainLooper());
-                Runnable returnCallback;
-                try {
-                    final SignUpResult signUpResult = signUpInternal(userId, password,
-                            userAttributes, validationData);
-                    final CognitoUser user = getUser(userId);
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onSuccess(user, signUpResult.getUserConfirmed(),
-                                    new CognitoUserCodeDeliveryDetails(
-                                            signUpResult.getCodeDeliveryDetails()));
-                        }
-                    };
-                } catch (final Exception e) {
-                    returnCallback = new Runnable() {
-                        @Override
-                        public void run() {
-                            callback.onFailure(e);
-                        }
-                    };
-                }
-                handler.post(returnCallback);
+        new Thread(() -> {
+            Runnable returnCallback;
+            try {
+                final SignUpResult signUpResult = signUpInternal(userId, password,
+                        userAttributes, validationData);
+                final CognitoUser user = getUser(userId);
+                returnCallback = () -> {
+                    callback.onSuccess(user, signUpResult.getUserConfirmed(),
+                            new CognitoUserCodeDeliveryDetails(
+                                    signUpResult.getCodeDeliveryDetails()));
+                };
+            } catch (final Exception e) {
+                returnCallback = () -> callback.onFailure(e);
             }
+            returnCallback.run();
         }).start();
     }
 
@@ -403,7 +373,7 @@ private SignUpResult signUpInternal(String userId, String password,
         // Create a list of {@link AttributeType} from {@code userAttributes}
         List<AttributeType> validationDataList = null;
         if (validationData != null) {
-            validationDataList = new ArrayList<AttributeType>();
+            validationDataList = new ArrayList<>();
             for (final Map.Entry<String, String> data : validationData.entrySet()) {
                 final AttributeType validation = new AttributeType();
                 validation.setName(data.getKey());
@@ -439,16 +409,22 @@ private SignUpResult signUpInternal(String userId, String password,
      * @return An instance of the {@link CognitoUser} for last authenticated, cached on this device
      */
     public CognitoUser getCurrentUser() {
-        final SharedPreferences csiCachedTokens = context
-                .getSharedPreferences("CognitoIdentityProviderCache", 0);
-
-        final String csiLastUserKey = "CognitoIdentityProvider." + clientId + ".LastAuthUser";
-
-        if (csiCachedTokens.contains(csiLastUserKey)) {
-            return getUser(csiCachedTokens.getString(csiLastUserKey, null));
-        } else {
-            return getUser();
+        try {
+            SettingsService csiCachedTokens = Services.get(SettingsService.class)
+                    .orElseThrow(() -> {
+                        throw new RuntimeException("Error accessing Settings Service");
+            });
+            
+            final String csiLastUserKey = "CognitoIdentityProvider." + clientId + ".LastAuthUser";
+            if (csiCachedTokens.retrieve(csiLastUserKey) != null) {
+                return getUser(csiCachedTokens.retrieve(csiLastUserKey));
+            } else {
+                return getUser();
+            }
+        } catch (Throwable ex) {
+            Logger.getLogger(CognitoUserPool.class.getName()).log(Level.SEVERE, null, ex);
         }
+        return getUser();
     }
 
     /**
@@ -457,7 +433,7 @@ public CognitoUser getCurrentUser() {
      * @return {@link CognitoUser}.
      */
     public CognitoUser getUser() {
-        return new CognitoUser(this, null, clientId, clientSecret, null, client, context);
+        return new CognitoUser(this, null, clientId, clientSecret, null, client);
     }
 
     /**
@@ -482,7 +458,7 @@ public CognitoUser getUser(String userId) {
 
         return new CognitoUser(this, userId, clientId, clientSecret,
                 CognitoSecretHash.getSecretHash(userId, clientId, clientSecret),
-                client, context);
+                client);
     }
 
     /**
@@ -501,11 +477,12 @@ protected String getPinpointEndpointId() {
     protected UserContextDataType getUserContextData(String userId) {
         UserContextDataType contextData = null;
         if (this.advancedSecurityDataCollectionFlag) {
-            UserContextDataProvider provider = UserContextDataProvider.getInstance();
-            String encodedData = provider.getEncodedContextData(context, userId, this.getUserPoolId(), clientId);
-
-            contextData = new UserContextDataType();
-            contextData.setEncodedData(encodedData);
+            // TODO: Enable
+//            UserContextDataProvider provider = UserContextDataProvider.getInstance();
+//            String encodedData = provider.getEncodedContextData(null, userId, this.getUserPoolId(), clientId);
+//
+//            contextData = new UserContextDataType();
+//            contextData.setEncodedData(encodedData);
         }
         return contextData;
     }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSession.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSession.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSession.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSession.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSettings.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSettings.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSettings.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/CognitoUserSettings.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java
similarity index 75%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java
index 06b140da54..4c000a1e45 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationContinuation.java
@@ -17,9 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-import android.os.Handler;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
 
@@ -41,7 +38,6 @@
 
     // Data required to continue with the authentication process.
     private final CognitoUser user;
-    private final Context context;
     private final AuthenticationHandler callback;
     private final boolean runInBackground;
 
@@ -58,16 +54,13 @@
      * Constructs a new continuation in the authentication process.
      *
      * @param user                  REQUIRED: Reference to the {@link CognitoUser} object.
-     * @param context               REQUIRED: Application context to manage threads.
      * @param runInBackground       REQUIRED: Represents where this continuation has to run.
      * @param callback              REQUIRED: Callback to interact with the app.
      */
     public AuthenticationContinuation(CognitoUser user,
-                                      Context context,
                                       boolean runInBackground,
                                       AuthenticationHandler callback) {
         this.user = user;
-        this.context = context;
         this.runInBackground = runInBackground;
         this.callback = callback;
     }
@@ -91,35 +84,21 @@ public String getParameters() {
     @Override
     public void continueTask() {
         if (runInBackground) {
-            new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    final Handler handler = new Handler(context.getMainLooper());
-                    Runnable nextStep;
-                    try {
-                        nextStep = user.initiateUserAuthentication(authenticationDetails, callback, RUN_IN_BACKGROUND);
-                    } catch (final Exception e) {
-                        nextStep = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onFailure(e);
-                            }
-                        };
-                    }
-                    handler.post(nextStep);
+            new Thread(() -> {
+                Runnable nextStep;
+                try {
+                    nextStep = user.initiateUserAuthentication(authenticationDetails, callback, RUN_IN_BACKGROUND);
+                } catch (final Exception e) {
+                    nextStep = () -> callback.onFailure(e);
                 }
+                nextStep.run();
             }).start();
         } else {
             Runnable nextStep;
             try {
                 nextStep = user.initiateUserAuthentication(authenticationDetails, callback, RUN_IN_CURRENT);
             } catch (final Exception e) {
-                nextStep = new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onFailure(e);
-                    }
-                };
+                nextStep = () -> callback.onFailure(e);
             }
             nextStep.run();
         }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/AuthenticationDetails.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java
similarity index 85%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java
index 5dd5af301b..f720570a13 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChallengeContinuation.java
@@ -17,9 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-import android.os.Handler;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.util.CognitoServiceConstants;
@@ -46,7 +43,6 @@
     public static final boolean RUN_IN_CURRENT = false;
 
     private final RespondToAuthChallengeResult challengeResult;
-    private final Context context;
     private final String clientId;
     private final String secretHash;
     private final CognitoUser user;
@@ -59,7 +55,6 @@
      * Constructs a continuation for a challenge to be presented to the user.
      *  
      * @param user REQUIRED: Reference to the user being authenticated. 
-     * @param context REQUIRED: Android application context.
      * @param username REQUIRED: Username used for this auth attempt.
      * @param clientId REQUIRED: Cognito App Id 
      * @param secretHash REQUIRED: Hash of the App Secret 
@@ -69,7 +64,6 @@
      * @param callback REQUIRED: Reference to the callback handler. 
      */
     public ChallengeContinuation(CognitoUser user,
-                                 Context context,
                                  String username,
                                  String clientId,
                                  String secretHash,
@@ -77,7 +71,6 @@ public ChallengeContinuation(CognitoUser user,
                                  boolean runInBackground,
                                  AuthenticationHandler callback) {
         this.challengeResult = challengeResult;
-        this.context = context;
         this.clientId = clientId;
         this.secretHash = secretHash;
         this.user = user;
@@ -141,35 +134,21 @@ public void continueTask() {
         respondToAuthChallengeRequest.setClientId(clientId);
         respondToAuthChallengeRequest.setChallengeResponses(challengeResponses);
         if (runInBackground) {
-            new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    final Handler handler = new Handler(context.getMainLooper());
-                    Runnable nextStep;
-                    try {
-                        nextStep = user.respondToChallenge(respondToAuthChallengeRequest, callback, RUN_IN_BACKGROUND);
-                    } catch (final Exception e) {
-                        nextStep = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onFailure(e);
-                            }
-                        };
-                    }
-                    handler.post(nextStep);
+            new Thread(() -> {
+                Runnable nextStep;
+                try {
+                    nextStep = user.respondToChallenge(respondToAuthChallengeRequest, callback, RUN_IN_BACKGROUND);
+                } catch (final Exception e) {
+                    nextStep = () -> callback.onFailure(e);
                 }
+                nextStep.run();
             }).start();
         } else {
             Runnable nextStep;
             try {
                 nextStep = user.respondToChallenge(respondToAuthChallengeRequest, callback, RUN_IN_CURRENT);
             } catch (final Exception e) {
-                nextStep = new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onFailure(e);
-                    }
-                };
+                nextStep = () -> callback.onFailure(e);
             }
             nextStep.run();
         }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java
similarity index 94%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java
index 280e3f3053..3ec63f5e9b 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ChooseMfaContinuation.java
@@ -1,7 +1,5 @@
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
@@ -28,7 +26,6 @@
     /**
      * Constructs a new continuation for multiple user MFA's.
      * @param user                  REQUIRED: Reference to the {@link CognitoUser} object.
-     * @param context               REQUIRED: The android context.
      * @param username              REQUIRED: The username.
      * @param clientId              REQUIRED: The clientId.
      * @param secretHash            REQUIRED: The secret hash.
@@ -38,14 +35,13 @@
      */
     public ChooseMfaContinuation(
             CognitoUser user,
-            Context context,
             String username,
             String clientId,
             String secretHash,
             RespondToAuthChallengeResult challengeResult,
             boolean runInBackground,
             AuthenticationHandler callback) {
-        super(user, context, username, clientId, secretHash, challengeResult, runInBackground,
+        super(user, username, clientId, secretHash, challengeResult, runInBackground,
                 callback);
         mfaOptions = getListFromString(getParameters().get(CognitoServiceConstants.CHLG_PARAM_MFAS_CAN_CHOOSE));
     }
@@ -76,6 +72,7 @@ public void setMfaOption(String option) {
     /**
      * Continue the authentication process with the set MFA option.
      */
+    @Override
     public void continueTask() {
         if (!challengeResponses.containsKey(CognitoServiceConstants.CHLG_RESP_ANSWER)) {
             throw new CognitoParameterInvalidException("MFA option is not set");
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/CognitoIdentityProviderContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/CognitoIdentityProviderContinuation.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/CognitoIdentityProviderContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/CognitoIdentityProviderContinuation.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ForgotPasswordContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ForgotPasswordContinuation.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ForgotPasswordContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/ForgotPasswordContinuation.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java
similarity index 78%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java
index 08fd77fea2..8b35c4bab3 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/MultiFactorAuthenticationContinuation.java
@@ -17,9 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-import android.os.Handler;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserCodeDeliveryDetails;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
@@ -42,7 +39,6 @@
     public static final boolean RUN_IN_CURRENT = false;
 
     private final CognitoUser user;
-    private final Context context;
     private final RespondToAuthChallengeResult challenge;
     private final boolean runInBackground;
     private final AuthenticationHandler callback;
@@ -55,15 +51,12 @@
      * @param challenge             REQUIRED: Contains the MFA Challenge.
      * @param runInBackground       REQUIRED: Represents where this continuation has to run.
      * @param callback              REQUIRED: Callback to interact with the app.
-     * @param context               REQUIRED: The android context.
      */
     public MultiFactorAuthenticationContinuation(CognitoUser user,
-                                                 Context context,
                                                  RespondToAuthChallengeResult challenge,
                                                  boolean runInBackground,
                                                  AuthenticationHandler callback) {
         this.user = user;
-        this.context = context;
         this.callback = callback;
         this.runInBackground = runInBackground;
         this.challenge = challenge;
@@ -97,37 +90,21 @@ public CognitoUserCodeDeliveryDetails getParameters() {
     @Override
     public void continueTask() {
         if (runInBackground) {
-            new Thread(new Runnable() {
-                @Override
-                public void run() {
-                    final Handler handler = new Handler(context.getMainLooper());
-                    Runnable nextStep;
-                    try {
-
-                        nextStep = user.respondToMfaChallenge(mfaCode, challenge, callback,
-                                RUN_IN_BACKGROUND);
-                    } catch (final Exception e) {
-                        nextStep = new Runnable() {
-                            @Override
-                            public void run() {
-                                callback.onFailure(e);
-                            }
-                        };
-                    }
-                    handler.post(nextStep);
+            new Thread(() -> {
+                Runnable nextStep;
+                try {
+                    nextStep = user.respondToMfaChallenge(mfaCode, challenge, callback, RUN_IN_BACKGROUND);
+                } catch (final Exception e) {
+                    nextStep = () -> callback.onFailure(e);
                 }
+                nextStep.run();
             }).start();
         } else {
             Runnable nextStep;
             try {
                 nextStep = user.respondToMfaChallenge(mfaCode, challenge, callback, RUN_IN_CURRENT);
             } catch (final Exception e) {
-                nextStep = new Runnable() {
-                    @Override
-                    public void run() {
-                        callback.onFailure(e);
-                    }
-                };
+                nextStep = () -> callback.onFailure(e);
             }
             nextStep.run();
         }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java
similarity index 95%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java
index dd25d710fd..a78dbdcc8a 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/NewPasswordContinuation.java
@@ -17,8 +17,6 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
@@ -62,21 +60,19 @@
      * @param user                  REQUIRED: Reference to the {@link CognitoUser} object.
      * @param runInBackground       REQUIRED: Represents where this continuation has to run.
      * @param callback              REQUIRED: Callback to interact with the app.
-     * @param context               REQUIRED: The android context.
      * @param username              REQUIRED: the username.
      * @param clientId              REQUIRED: the clientId.
      * @param secretHash            REQUIRED: the secreth hash.
      * @param challengeResult       REQUIRED: The response to respond to the authentication challenge.
      */
     public NewPasswordContinuation(CognitoUser user,
-            Context context,
             String username,
             String clientId,
             String secretHash,
             RespondToAuthChallengeResult challengeResult,
             boolean runInBackground,
             AuthenticationHandler callback) {
-        super(user, context, username, clientId, secretHash, challengeResult, runInBackground,
+        super(user, username, clientId, secretHash, challengeResult, runInBackground,
                 callback);
         this.callback = callback;
 
@@ -156,7 +152,7 @@ public void continueTask() {
      * @param userAttributesJsonString      REQUIRED: User attributes as a Json String.
      */
     private void parseUserAttributes(String userAttributesJsonString) {
-        currentUserAttributes = new HashMap<String, String>();
+        currentUserAttributes = new HashMap<>();
         if (userAttributesJsonString != null) {
             try {
                 final JSONObject userAttributesJson = new JSONObject(userAttributesJsonString);
@@ -178,7 +174,7 @@ private void parseUserAttributes(String userAttributesJsonString) {
      * @param requiredAttributesJsonString      REQUIRED: Required user attributes as a Json array.
      */
     private void parseRequiredAttributes(String requiredAttributesJsonString) {
-        requiredAttributes = new ArrayList<String>();
+        requiredAttributes = new ArrayList<>();
         if (requiredAttributesJsonString != null) {
             try {
                 final JSONArray requiredAttributesJson = new JSONArray(requiredAttributesJsonString);
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java
similarity index 94%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java
index 891d0424a2..55519dca45 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/RegisterMfaContinuation.java
@@ -1,7 +1,5 @@
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.AuthenticationHandler;
@@ -31,7 +29,6 @@
     /**
      * Constructs a new continuation for multiple user MFA's.
      * @param user                  REQUIRED: Reference to the {@link CognitoUser} object.
-     * @param context               REQUIRED: The android context.
      * @param username              REQUIRED: The username.
      * @param clientId              REQUIRED: The clientId.
      * @param secretHash            REQUIRED: The secret hash.
@@ -41,14 +38,13 @@
      */
     public RegisterMfaContinuation(
             CognitoUser user,
-            Context context,
             String username,
             String clientId,
             String secretHash,
             RespondToAuthChallengeResult challengeResult,
             boolean runInBackground,
             AuthenticationHandler callback) {
-        super(user, context, username, clientId, secretHash, challengeResult, runInBackground,
+        super(user, username, clientId, secretHash, challengeResult, runInBackground,
                 callback);
         mfaOptions = getListFromString(getParameters().get(CognitoServiceConstants.CHLG_PARAM_MFAS_CAN_SETUP));
     }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java
similarity index 95%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java
index 069c6e2bc8..c1dfb66ae6 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/continuations/VerifyMfaContinuation.java
@@ -1,7 +1,5 @@
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.continuations;
 
-import android.content.Context;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.handlers.RegisterMfaHandler;
@@ -27,7 +25,6 @@
      */
     public static final boolean RUN_IN_CURRENT = false;
 
-    private final Context context;
     private final String clientId;
     private final CognitoUser user;
     private final RegisterMfaHandler callback;
@@ -43,7 +40,6 @@
 
     /**
      * Constructs a new continuation for MFA verification.
-     * @param context               REQUIRED: The android context.
      * @param clientId              REQUIRED: The clientId.
      * @param user                  REQUIRED: Reference to the {@link CognitoUser} object.
      * @param callback              REQUIRED: Callback to interact with the app.
@@ -53,7 +49,6 @@
      * @param runInBackground       REQUIRED: Represents where this continuation has to run.
      */
     public VerifyMfaContinuation(
-            Context context,
             String clientId,
             CognitoUser user,
             RegisterMfaHandler callback,
@@ -61,7 +56,6 @@ public VerifyMfaContinuation(
             boolean useSessionToken,
             String sessionToken,
             boolean runInBackground) {
-        this.context = context;
         this.clientId = clientId;
         this.user = user;
         this.callback = callback;
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoAuthenticationFailedException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoAuthenticationFailedException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoAuthenticationFailedException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoAuthenticationFailedException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeExpiredException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeExpiredException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeExpiredException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeExpiredException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeMismatchException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeMismatchException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeMismatchException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoCodeMismatchException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoIdentityProviderException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoIdentityProviderException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoIdentityProviderException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoIdentityProviderException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoInternalErrorException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoInternalErrorException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoInternalErrorException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoInternalErrorException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaFailedException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaFailedException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaFailedException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaFailedException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaResponseInvalidException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaResponseInvalidException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaResponseInvalidException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaResponseInvalidException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaValidationException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaValidationException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaValidationException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLambdaValidationException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLimitExceeded.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLimitExceeded.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLimitExceeded.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoLimitExceeded.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoNotAuthorizedException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoNotAuthorizedException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoNotAuthorizedException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoNotAuthorizedException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoParameterInvalidException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoParameterInvalidException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoParameterInvalidException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoParameterInvalidException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoPasswordInvalidException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoPasswordInvalidException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoPasswordInvalidException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoPasswordInvalidException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoResourceNotFoundException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoResourceNotFoundException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoResourceNotFoundException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/exceptions/CognitoResourceNotFoundException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/AuthenticationHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/AuthenticationHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/AuthenticationHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/AuthenticationHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/DevicesHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/DevicesHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/DevicesHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/DevicesHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/ForgotPasswordHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/ForgotPasswordHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/ForgotPasswordHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/ForgotPasswordHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GenericHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GenericHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GenericHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GenericHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GetDetailsHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GetDetailsHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GetDetailsHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/GetDetailsHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/RegisterMfaHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/RegisterMfaHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/RegisterMfaHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/RegisterMfaHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/SignUpHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/SignUpHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/SignUpHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/SignUpHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/UpdateAttributesHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/UpdateAttributesHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/UpdateAttributesHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/UpdateAttributesHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/VerificationHandler.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/VerificationHandler.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/VerificationHandler.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/handlers/VerificationHandler.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoAccessToken.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoAccessToken.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoAccessToken.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoAccessToken.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoIdToken.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoIdToken.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoIdToken.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoIdToken.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoRefreshToken.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoRefreshToken.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoRefreshToken.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoRefreshToken.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoUserToken.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoUserToken.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoUserToken.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/tokens/CognitoUserToken.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
similarity index 83%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
index 2d57c34de1..d187b46545 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoDeviceHelper.java
@@ -17,12 +17,11 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.util;
 
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Build;
-
 import com.amazonaws.util.Base64;
 import com.amazonaws.util.StringUtils;
+import com.gluonhq.charm.down.Services;
+import com.gluonhq.charm.down.plugins.DeviceService;
+import com.gluonhq.charm.down.plugins.SettingsService;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -51,6 +50,18 @@
     public static final int DEFAULT_DEVICE_PAGINATION_LIMIT = 10;
 
     static deviceSRP srpCalculator = null;
+    
+    static SettingsService cipCachedDeviceDetails;
+    static {
+        try {
+            cipCachedDeviceDetails = Services.get(SettingsService.class)
+                .orElseThrow(() -> {
+                    throw new RuntimeException("Error accessing Settings Service");
+            });
+        } catch (Throwable ex) {
+            LOGGER.error("Error while reading from Preferences", ex);
+        }
+    }
 
     /**
      * Uses the Android class {@link android.os.build} to return the model of
@@ -59,7 +70,9 @@
      * @return Device model name, which is also the name of the device.
      */
     public static String getDeviceName() {
-        return Build.MODEL;
+        return Services.get(DeviceService.class)
+                .map(DeviceService::getModel)
+                .orElse("Unknown device name");    
     }
 
     /**
@@ -68,15 +81,12 @@ public static String getDeviceName() {
      *
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the application.
-     * @param context           REQUIRED: Application context.
      * @return device key as String, null if the device-key is not available.
      */
-    public static String getDeviceKey(String username, String userPoolId, Context context) {
+    public static String getDeviceKey(String username, String userPoolId) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            if (cipCachedDeviceDetails != null && cipCachedDeviceDetails.contains(COGNITO_DEVICE_KEY)) {
-                return cipCachedDeviceDetails.getString(COGNITO_DEVICE_KEY, null);
-            }
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            return cipCachedDeviceDetails.retrieve(user + "." + COGNITO_DEVICE_KEY);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -89,15 +99,12 @@ public static String getDeviceKey(String username, String userPoolId, Context co
      *
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the application.
-     * @param context           REQUIRED: Application context.
      * @return device secret as String, null if the device-key is not available.
      */
-    public static String getDeviceSecret(String username, String userPoolId, Context context) {
+    public static String getDeviceSecret(String username, String userPoolId) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            if (cipCachedDeviceDetails != null && cipCachedDeviceDetails.contains(COGNITO_DEVICE_SECRET)) {
-                return cipCachedDeviceDetails.getString(COGNITO_DEVICE_SECRET, null);
-            }
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            return cipCachedDeviceDetails.retrieve(user + "." + COGNITO_DEVICE_SECRET);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -110,15 +117,12 @@ public static String getDeviceSecret(String username, String userPoolId, Context
      *
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the application.
-     * @param context           REQUIRED: Application context.
      * @return device group key as String, null if the device-key is not available.
      */
-    public static String getDeviceGroupKey(String username, String userPoolId, Context context) {
+    public static String getDeviceGroupKey(String username, String userPoolId) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            if (cipCachedDeviceDetails != null && cipCachedDeviceDetails.contains(COGNITO_DEVICE_GROUP_KEY)) {
-                return cipCachedDeviceDetails.getString(COGNITO_DEVICE_GROUP_KEY, null);
-            }
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            return cipCachedDeviceDetails.retrieve(user + "." + COGNITO_DEVICE_GROUP_KEY);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -132,12 +136,11 @@ public static String getDeviceGroupKey(String username, String userPoolId, Conte
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the device.
      * @param deviceKey         REQUIRED: Cognito assigned device key.
-     * @param context           REQUIRED: App context, needed to access device datastore.
      */
-    public static void cacheDeviceKey(String username, String userPoolId, String deviceKey, Context context) {
+    public static void cacheDeviceKey(String username, String userPoolId, String deviceKey) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            cipCachedDeviceDetails.edit().putString(COGNITO_DEVICE_KEY, deviceKey).apply();
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            cipCachedDeviceDetails.store(user + "." + COGNITO_DEVICE_KEY, deviceKey);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -150,12 +153,11 @@ public static void cacheDeviceKey(String username, String userPoolId, String dev
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the device.
      * @param deviceSecret      REQUIRED: Cognito assigned device key.
-     * @param context           REQUIRED: App context, needed to access device datastore.
      */
-    public static void cacheDeviceVerifier(String username, String userPoolId, String deviceSecret, Context context) {
+    public static void cacheDeviceVerifier(String username, String userPoolId, String deviceSecret) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            cipCachedDeviceDetails.edit().putString(COGNITO_DEVICE_SECRET, deviceSecret).apply();
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            cipCachedDeviceDetails.store(user + "." + COGNITO_DEVICE_SECRET, deviceSecret);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -168,12 +170,11 @@ public static void cacheDeviceVerifier(String username, String userPoolId, Strin
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the device.
      * @param deviceGroupKey    REQUIRED: Cognito assigned device group key.
-     * @param context           REQUIRED: App context, needed to access device datastore.
      */
-    public static void cacheDeviceGroupKey(String username, String userPoolId, String deviceGroupKey, Context context) {
+    public static void cacheDeviceGroupKey(String username, String userPoolId, String deviceGroupKey) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            cipCachedDeviceDetails.edit().putString(COGNITO_DEVICE_GROUP_KEY, deviceGroupKey).apply();
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            cipCachedDeviceDetails.store(user + "." + COGNITO_DEVICE_GROUP_KEY, deviceGroupKey);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
@@ -184,12 +185,13 @@ public static void cacheDeviceGroupKey(String username, String userPoolId, Strin
      *
      * @param username          REQUIRED: The current user.
      * @param userPoolId        REQUIRED: Client ID of the device.
-     * @param context           REQUIRED: App context, needed to access device datastore.
      */
-    public static void clearCachedDevice(String username, String userPoolId, Context context) {
+    public static void clearCachedDevice(String username, String userPoolId) {
         try {
-            final SharedPreferences cipCachedDeviceDetails = context.getSharedPreferences(getDeviceDetailsCacheForUser(username, userPoolId), 0);
-            cipCachedDeviceDetails.edit().clear().apply();
+            String user = getDeviceDetailsCacheForUser(username, userPoolId);
+            cipCachedDeviceDetails.remove(user + "." + COGNITO_DEVICE_KEY);
+            cipCachedDeviceDetails.remove(user + "." + COGNITO_DEVICE_SECRET);
+            cipCachedDeviceDetails.remove(user + "." + COGNITO_DEVICE_GROUP_KEY);
         } catch (final Exception e) {
             LOGGER.error("Error accessing SharedPreferences", e);
         }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoIdentityProviderClientConfig.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoIdentityProviderClientConfig.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoIdentityProviderClientConfig.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoIdentityProviderClientConfig.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java
similarity index 86%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java
index d7cd326464..320c17498b 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoJWTParser.java
@@ -17,14 +17,13 @@
 
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.util;
 
-import android.util.Base64;
-
 import com.amazonaws.mobileconnectors.cognitoidentityprovider.exceptions.CognitoParameterInvalidException;
 
 import org.json.JSONException;
 import org.json.JSONObject;
 
 import java.io.UnsupportedEncodingException;
+import java.util.Base64;
 
 /**
  * Utility class for all operations on JWT.
@@ -43,12 +42,10 @@
     public static JSONObject getHeader(String jwt) {
         try {
             validateJWT(jwt);
-            final byte[] sectionDecoded = Base64.decode(jwt.split("\\.")[HEADER], Base64.URL_SAFE);
+            final byte[] sectionDecoded = Base64.getDecoder().decode(jwt.split("\\.")[HEADER]);
             final String jwtSection = new String(sectionDecoded, "UTF-8");
             return new JSONObject(jwtSection);
-        } catch (final UnsupportedEncodingException e) {
-            throw new CognitoParameterInvalidException(e.getMessage());
-        } catch (final JSONException e) {
+        } catch (final UnsupportedEncodingException | JSONException e) {
             throw new CognitoParameterInvalidException(e.getMessage());
         } catch (final Exception e) {
             throw new CognitoParameterInvalidException("error in parsing JSON");
@@ -65,12 +62,10 @@ public static JSONObject getPayload(String jwt) {
         try {
             validateJWT(jwt);
             final String payload = jwt.split("\\.")[PAYLOAD];
-            final byte[] sectionDecoded = Base64.decode(payload, Base64.URL_SAFE);
+            final byte[] sectionDecoded = Base64.getDecoder().decode(payload);
             final String jwtSection = new String(sectionDecoded, "UTF-8");
             return new JSONObject(jwtSection);
-        } catch (final UnsupportedEncodingException e) {
-            throw new CognitoParameterInvalidException(e.getMessage());
-        } catch (final JSONException e) {
+        } catch (final UnsupportedEncodingException | JSONException e) {
             throw new CognitoParameterInvalidException(e.getMessage());
         } catch (final Exception e) {
             throw new CognitoParameterInvalidException("error in parsing JSON");
@@ -86,9 +81,9 @@ public static JSONObject getPayload(String jwt) {
     public static String getSignature(String jwt) {
         try {
             validateJWT(jwt);
-            final byte[] sectionDecoded = Base64.decode(jwt.split("\\.")[SIGNATURE], Base64.URL_SAFE);
+            final byte[] sectionDecoded = Base64.getDecoder().decode(jwt.split("\\.")[SIGNATURE]);
             return new String(sectionDecoded, "UTF-8");
-        } catch (final Exception e) {
+        } catch (final UnsupportedEncodingException e) {
             throw new CognitoParameterInvalidException("error in parsing JSON");
         }
     }
@@ -109,7 +104,7 @@ public static String getClaim(String jwt, String claim) {
                 return claimValue.toString();
             }
 
-        } catch (final Exception e) {
+        } catch (final JSONException e) {
             throw new CognitoParameterInvalidException("invalid token");
         }
         return null;
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
similarity index 62%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
index 02cbb54376..50cefe0f24 100644
--- a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
+++ b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoPinpointSharedContext.java
@@ -1,8 +1,7 @@
 package com.amazonaws.mobileconnectors.cognitoidentityprovider.util;
 
-import android.content.Context;
-import android.content.SharedPreferences;
-
+import com.gluonhq.charm.down.Services;
+import com.gluonhq.charm.down.plugins.SettingsService;
 import java.util.UUID;
 
 import org.apache.commons.logging.Log;
@@ -27,13 +26,11 @@
 
     /**
      * Returns the pinpoint endpoint id for the provided Pinpoint App Id.
-     * @param context Required, {@link Context}.
      * @param pinpointAppId Required, the pinpoint appId.
      * @return The pinpoint endpoint id as a string.
      */
-    public static String getPinpointEndpoint(Context context,
-                                             String pinpointAppId) {
-        return getPinpointEndpoint(context, pinpointAppId, UNIQUE_ID_KEY);
+    public static String getPinpointEndpoint(String pinpointAppId) {
+        return getPinpointEndpoint(pinpointAppId, UNIQUE_ID_KEY);
     }
 
     /**
@@ -43,30 +40,30 @@ public static String getPinpointEndpoint(Context context,
      *     Generates and stores a new pinpoint endpoint id if a pinpoint endpoint id is not available for this
      *     combination.
      * </p>
-     * @param context Required, {@link Context}.
      * @param pinpointAppId Required, the pinpoint appId.
      * @param pinpointEndpointIdentifier Required, the pinpoint user identifier.
      * @return The pinpoint endpoint id as a string.
      */
-    public static String getPinpointEndpoint(Context context,
-                                             String pinpointAppId,
+    public static String getPinpointEndpoint(String pinpointAppId,
                                              String pinpointEndpointIdentifier) {
-        if (context == null || pinpointAppId == null || pinpointEndpointIdentifier == null) {
+        if (pinpointAppId == null || pinpointEndpointIdentifier == null) {
             return null;
         }
 
         try {
-            final SharedPreferences pinpointPreferences =
-                    context.getSharedPreferences(pinpointAppId + PREFERENCES_AND_FILE_MANAGER_SUFFIX,
-                            Context.MODE_PRIVATE);
-            String pinpointEndpointId = pinpointPreferences.getString(pinpointEndpointIdentifier, null);
+            SettingsService pinpointPreferences = Services.get(SettingsService.class)
+                .orElseThrow(() -> {
+                    throw new RuntimeException("Error accessing Settings Service");
+            });
+            String pinpointEndpointId = pinpointPreferences.retrieve(pinpointAppId + "." + 
+                    PREFERENCES_AND_FILE_MANAGER_SUFFIX + "." + pinpointEndpointIdentifier);
             if (pinpointEndpointId == null) {
                 pinpointEndpointId = UUID.randomUUID().toString();
-                final SharedPreferences.Editor pinpointSharedPrefsEditor = pinpointPreferences.edit();
-                pinpointSharedPrefsEditor.putString(pinpointEndpointIdentifier, pinpointEndpointId).apply();
+                pinpointPreferences.store(pinpointAppId + "." + 
+                    PREFERENCES_AND_FILE_MANAGER_SUFFIX + "." + pinpointEndpointIdentifier, pinpointEndpointId);
             }
             return pinpointEndpointId;
-        } catch (Exception e) {
+        } catch (Throwable e) {
             LOGGER.error("Error while reading from SharedPreferences", e);
             return null;
         }
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoSecretHash.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoSecretHash.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoSecretHash.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoSecretHash.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoServiceConstants.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoServiceConstants.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoServiceConstants.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/CognitoServiceConstants.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/mobileconnectors/cognitoidentityprovider/util/Hkdf.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProvider.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/AmazonCognitoIdentityProviderClient.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AddCustomAttributesResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminConfirmSignUpResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminCreateUserResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminForgetDeviceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminForgetDeviceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminForgetDeviceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminForgetDeviceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminGetDeviceResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminInitiateAuthResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminListDevicesResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminRespondToAuthChallengeResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminSetUserSettingsResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUpdateDeviceStatusResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AdminUserGlobalSignOutResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AliasExistsException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AliasExistsException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AliasExistsException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AliasExistsException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AnalyticsMetadataType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AssociateSoftwareTokenResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeDataType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeDataType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeDataType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeDataType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AttributeType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthFlowType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthFlowType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthFlowType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthFlowType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthenticationResultType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthenticationResultType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthenticationResultType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/AuthenticationResultType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChallengeNameType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChallengeNameType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChallengeNameType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChallengeNameType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ChangePasswordResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryDetailsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryDetailsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryDetailsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryDetailsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryFailureException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryFailureException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryFailureException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeDeliveryFailureException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeMismatchException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeMismatchException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeMismatchException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CodeMismatchException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmDeviceResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmForgotPasswordResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ConfirmSignUpResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserImportJobResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/CreateUserPoolClientResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserAttributesResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolClientRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolClientRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolClientRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolClientRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserPoolRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeleteUserRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeliveryMediumType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeliveryMediumType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeliveryMediumType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeliveryMediumType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserImportJobResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DescribeUserPoolClientResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceRememberedStatusType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceRememberedStatusType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceRememberedStatusType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceRememberedStatusType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceSecretVerifierConfigType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceSecretVerifierConfigType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceSecretVerifierConfigType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceSecretVerifierConfigType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/DeviceType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/EnableSoftwareTokenMFAException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/EnableSoftwareTokenMFAException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/EnableSoftwareTokenMFAException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/EnableSoftwareTokenMFAException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExpiredCodeException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExpiredCodeException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExpiredCodeException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExpiredCodeException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExplicitAuthFlowsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExplicitAuthFlowsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExplicitAuthFlowsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ExplicitAuthFlowsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgetDeviceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgetDeviceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgetDeviceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgetDeviceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ForgotPasswordResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetCSVHeaderResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetDeviceResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserAttributeVerificationCodeResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GetUserResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/GlobalSignOutResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InitiateAuthResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InternalErrorException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InternalErrorException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InternalErrorException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InternalErrorException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidEmailRoleAccessPolicyException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidEmailRoleAccessPolicyException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidEmailRoleAccessPolicyException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidEmailRoleAccessPolicyException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidLambdaResponseException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidLambdaResponseException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidLambdaResponseException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidLambdaResponseException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidParameterException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidParameterException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidParameterException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidParameterException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidPasswordException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidPasswordException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidPasswordException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidPasswordException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleAccessPolicyException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleAccessPolicyException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleAccessPolicyException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleAccessPolicyException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleTrustRelationshipException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleTrustRelationshipException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleTrustRelationshipException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidSmsRoleTrustRelationshipException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidUserPoolConfigurationException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidUserPoolConfigurationException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidUserPoolConfigurationException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/InvalidUserPoolConfigurationException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/LimitExceededException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/LimitExceededException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/LimitExceededException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/LimitExceededException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListDevicesResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserImportJobsResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUserPoolClientsResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ListUsersResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAMethodNotFoundException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAMethodNotFoundException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAMethodNotFoundException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAMethodNotFoundException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAOptionType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAOptionType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAOptionType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MFAOptionType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MessageActionType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MessageActionType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MessageActionType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/MessageActionType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NewDeviceMetadataType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NewDeviceMetadataType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NewDeviceMetadataType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NewDeviceMetadataType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NotAuthorizedException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NotAuthorizedException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NotAuthorizedException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NotAuthorizedException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NumberAttributeConstraintsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NumberAttributeConstraintsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NumberAttributeConstraintsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/NumberAttributeConstraintsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PasswordResetRequiredException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PasswordResetRequiredException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PasswordResetRequiredException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PasswordResetRequiredException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PreconditionNotMetException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PreconditionNotMetException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PreconditionNotMetException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/PreconditionNotMetException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResendConfirmationCodeResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResourceNotFoundException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResourceNotFoundException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResourceNotFoundException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/ResourceNotFoundException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/RespondToAuthChallengeResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SMSMfaSettingsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SMSMfaSettingsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SMSMfaSettingsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SMSMfaSettingsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SchemaAttributeType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserMFAPreferenceResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SetUserSettingsResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SignUpResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMFANotFoundException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMFANotFoundException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMFANotFoundException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMFANotFoundException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMfaSettingsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMfaSettingsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMfaSettingsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/SoftwareTokenMfaSettingsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StartUserImportJobResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StopUserImportJobResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StringAttributeConstraintsType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StringAttributeConstraintsType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StringAttributeConstraintsType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/StringAttributeConstraintsType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyFailedAttemptsException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyFailedAttemptsException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyFailedAttemptsException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyFailedAttemptsException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyRequestsException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyRequestsException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyRequestsException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/TooManyRequestsException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnexpectedLambdaException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnexpectedLambdaException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnexpectedLambdaException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnexpectedLambdaException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnsupportedUserStateException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnsupportedUserStateException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnsupportedUserStateException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UnsupportedUserStateException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateDeviceStatusResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserAttributesResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UpdateUserPoolClientResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserContextDataType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserContextDataType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserContextDataType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserContextDataType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportInProgressException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportInProgressException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportInProgressException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportInProgressException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobStatusType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobStatusType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobStatusType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobStatusType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserImportJobType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserLambdaValidationException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserLambdaValidationException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserLambdaValidationException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserLambdaValidationException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotConfirmedException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotConfirmedException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotConfirmedException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotConfirmedException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotFoundException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotFoundException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotFoundException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserNotFoundException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientDescription.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientDescription.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientDescription.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientDescription.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserPoolClientType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserStatusType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserStatusType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserStatusType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserStatusType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UserType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UsernameExistsException.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UsernameExistsException.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UsernameExistsException.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/UsernameExistsException.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResponseType.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResponseType.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResponseType.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResponseType.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifySoftwareTokenResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeRequest.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeRequest.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeRequest.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeRequest.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeResult.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeResult.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeResult.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/VerifyUserAttributeResult.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/package-info.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/package-info.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/package-info.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/package-info.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AddCustomAttributesResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminConfirmSignUpResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminCreateUserResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminForgetDeviceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminForgetDeviceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminForgetDeviceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminForgetDeviceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminGetDeviceResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminInitiateAuthResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminListDevicesResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminRespondToAuthChallengeResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminSetUserSettingsResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUpdateDeviceStatusResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AdminUserGlobalSignOutResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AliasExistsExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AliasExistsExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AliasExistsExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AliasExistsExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AnalyticsMetadataTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AssociateSoftwareTokenResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AttributeTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/AuthenticationResultTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ChangePasswordResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryDetailsTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryFailureExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryFailureExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryFailureExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeDeliveryFailureExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeMismatchExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeMismatchExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeMismatchExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CodeMismatchExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmDeviceResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmForgotPasswordResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ConfirmSignUpResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserImportJobResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/CreateUserPoolClientResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserAttributesResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolClientRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolClientRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolClientRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolClientRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserPoolRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeleteUserRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserImportJobResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DescribeUserPoolClientResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceSecretVerifierConfigTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/DeviceTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/EnableSoftwareTokenMFAExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/EnableSoftwareTokenMFAExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/EnableSoftwareTokenMFAExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/EnableSoftwareTokenMFAExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ExpiredCodeExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ExpiredCodeExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ExpiredCodeExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ExpiredCodeExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgetDeviceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgetDeviceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgetDeviceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgetDeviceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ForgotPasswordResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetCSVHeaderResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetDeviceResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserAttributeVerificationCodeResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GetUserResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/GlobalSignOutResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InitiateAuthResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InternalErrorExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InternalErrorExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InternalErrorExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InternalErrorExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidEmailRoleAccessPolicyExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidEmailRoleAccessPolicyExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidEmailRoleAccessPolicyExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidEmailRoleAccessPolicyExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidLambdaResponseExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidLambdaResponseExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidLambdaResponseExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidLambdaResponseExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidParameterExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidParameterExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidParameterExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidParameterExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidPasswordExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidPasswordExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidPasswordExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidPasswordExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleAccessPolicyExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleAccessPolicyExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleAccessPolicyExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleAccessPolicyExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidSmsRoleTrustRelationshipExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidUserPoolConfigurationExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidUserPoolConfigurationExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidUserPoolConfigurationExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/InvalidUserPoolConfigurationExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/LimitExceededExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/LimitExceededExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/LimitExceededExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/LimitExceededExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListDevicesResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserImportJobsResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUserPoolClientsResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ListUsersResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAMethodNotFoundExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAMethodNotFoundExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAMethodNotFoundExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAMethodNotFoundExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/MFAOptionTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NewDeviceMetadataTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NotAuthorizedExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NotAuthorizedExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NotAuthorizedExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NotAuthorizedExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/NumberAttributeConstraintsTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PasswordResetRequiredExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PasswordResetRequiredExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PasswordResetRequiredExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PasswordResetRequiredExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PreconditionNotMetExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PreconditionNotMetExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PreconditionNotMetExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/PreconditionNotMetExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResendConfirmationCodeResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResourceNotFoundExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResourceNotFoundExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResourceNotFoundExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/ResourceNotFoundExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/RespondToAuthChallengeResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SMSMfaSettingsTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SchemaAttributeTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserMFAPreferenceResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SetUserSettingsResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SignUpResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMFANotFoundExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMFANotFoundExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMFANotFoundExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMFANotFoundExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/SoftwareTokenMfaSettingsTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StartUserImportJobResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StopUserImportJobResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/StringAttributeConstraintsTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyFailedAttemptsExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyFailedAttemptsExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyFailedAttemptsExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyFailedAttemptsExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyRequestsExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyRequestsExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyRequestsExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/TooManyRequestsExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnexpectedLambdaExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnexpectedLambdaExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnexpectedLambdaExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnexpectedLambdaExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnsupportedUserStateExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnsupportedUserStateExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnsupportedUserStateExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UnsupportedUserStateExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateDeviceStatusResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserAttributesResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UpdateUserPoolClientResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserContextDataTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportInProgressExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportInProgressExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportInProgressExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportInProgressExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserImportJobTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserLambdaValidationExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserLambdaValidationExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserLambdaValidationExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserLambdaValidationExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotConfirmedExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotConfirmedExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotConfirmedExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotConfirmedExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotFoundExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotFoundExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotFoundExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserNotFoundExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientDescriptionJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserPoolClientTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UserTypeJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UsernameExistsExceptionUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UsernameExistsExceptionUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UsernameExistsExceptionUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/UsernameExistsExceptionUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifySoftwareTokenResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeRequestMarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeRequestMarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeRequestMarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeRequestMarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeResultJsonUnmarshaller.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeResultJsonUnmarshaller.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeResultJsonUnmarshaller.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/VerifyUserAttributeResultJsonUnmarshaller.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/package-info.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/package-info.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/package-info.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/model/transform/package-info.java
diff --git a/aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/package-info.java b/aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/package-info.java
similarity index 100%
rename from aws-android-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/package-info.java
rename to aws-java-sdk-cognitoidentityprovider/src/main/java/com/amazonaws/services/cognitoidentityprovider/package-info.java
diff --git a/aws-java-sdk-core/src/main/java/com/amazonaws/auth/CognitoCachingCredentialsProvider.java b/aws-java-sdk-core/src/main/java/com/amazonaws/auth/CognitoCachingCredentialsProvider.java
index 99505e79e2..fa26f777b0 100644
--- a/aws-java-sdk-core/src/main/java/com/amazonaws/auth/CognitoCachingCredentialsProvider.java
+++ b/aws-java-sdk-core/src/main/java/com/amazonaws/auth/CognitoCachingCredentialsProvider.java
@@ -33,7 +33,7 @@
 
 /**
  * This credentials provider is intended for Android applications. It offers the
- * ability to persist the Cognito identity id in {@link SharedPreferences}.
+ * ability to persist the Cognito identity id in {@link SettingsService}.
  * Furthermore, it caches session credentials so as to reduce the number of
  * network requests. This is the provider to use with a custom identity
  * provider, which should be an extension of AWSAbstractCognitoIdentityProvider.
@@ -96,7 +96,7 @@
     private final IdentityChangedListener listener = new IdentityChangedListener() {
         @Override
         public void identityChanged(String oldIdentityId, String newIdentityId) {
-            LOG.log(Level.FINE,  "Identity id is changed");
+            LOG.log(Level.INFO,  "Identity id is changed: " + newIdentityId);
             saveIdentityId(newIdentityId);
             clearCredentials();
         }
@@ -242,8 +242,8 @@ public CognitoCachingCredentialsProvider(AWSConfiguration awsConfiguration) thro
                     @Override
                     public Object get() {
                         throw new RuntimeException("Error accessing Settings Service"); 
-                    }
-                });
+                }
+            });
         
         initialize();
     }
@@ -481,7 +481,7 @@ private void initialize() {
     /**
      * Gets the Cognito identity id of the user. The first time when this method
      * is called, a network request will be made to retrieve a new identity id.
-     * After that it's saved in {@link SharedPreferences}. Please don't call it
+     * After that it's saved in {@link SettingsService}. Please don't call it
      * in the main thread.
      *
      * @return identity id of the user
@@ -649,7 +649,7 @@ void loadCachedCredentials() {
     }
 
     /**
-     * Save the credentials to SharedPreferences
+     * Save the credentials to {@link SettingsService}.
      */
     private void saveCredentials(AWSSessionCredentials sessionCredentials,
             long time) {
@@ -664,13 +664,13 @@ private void saveCredentials(AWSSessionCredentials sessionCredentials,
 
     /**
      * clear cached identity id and credentials Save the Amazon Cognito Identity
-     * Id to SharedPreferences
+     * Id to {@link SettingsService}.
      */
     private void saveIdentityId(String identityId) {
         LOG.log(Level.FINE,  "Saving identity id to SharedPreferences");
         this.identityId = identityId;
 
-        prefs.store(namespace(ID_KEY), identityId);
+        prefs.store(namespace(ID_KEY), identityId == null ? "" : identityId);
     }
 
     @Override
diff --git a/aws-java-sdk-mobile-client/pom.xml b/aws-java-sdk-mobile-client/pom.xml
index 2d08475cba..78288871db 100644
--- a/aws-java-sdk-mobile-client/pom.xml
+++ b/aws-java-sdk-mobile-client/pom.xml
@@ -32,24 +32,15 @@
       <optional>false</optional>
       <version>2.6.19</version>
     </dependency>
-<!--
-    <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-ui</artifactId>
-      <optional>true</optional>
-      <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>
 
     <dependency>
-      <groupId>com.android.support</groupId>
-      <artifactId>appcompat-v7</artifactId>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-auth-ui</artifactId>
       <optional>true</optional>
-      <version>23.0.1</version>
-      <type>aar</type>
+      <version>2.6.19</version>
     </dependency>
 
-    <dependency>
+<!--    <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
@@ -63,15 +54,14 @@
       <optional>true</optional>
       <version>2.6.19</version>
       <type>aar</type>
-    </dependency>
+    </dependency>-->
 
     <dependency>
-      <groupId>com.amazonaws</groupId>
-      <artifactId>aws-android-sdk-auth-userpools</artifactId>
+      <groupId>com.gluonhq</groupId>
+      <artifactId>aws-java-sdk-auth-userpools</artifactId>
       <optional>true</optional>
       <version>2.6.19</version>
-      <type>aar</type>
-    </dependency>-->
+    </dependency>
 
     <dependency>
       <groupId>com.gluonhq</groupId>
diff --git a/aws-java-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java b/aws-java-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
index d0cf03fd89..59bd370aec 100644
--- a/aws-java-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
+++ b/aws-java-sdk-mobile-client/src/main/java/com/amazonaws/mobile/client/AWSMobileClient.java
@@ -23,7 +23,7 @@
 //import com.amazonaws.mobile.auth.facebook.FacebookSignInProvider;
 //import com.amazonaws.mobile.auth.google.GoogleButton;
 //import com.amazonaws.mobile.auth.google.GoogleSignInProvider;
-//import com.amazonaws.mobile.auth.userpools.CognitoUserPoolsSignInProvider;;
+import com.amazonaws.mobile.auth.userpools.CognitoUserPoolsSignInProvider;;
 import com.amazonaws.mobile.config.AWSConfiguration;
 import com.amazonaws.mobile.config.AWSConfigurable;
 
@@ -306,9 +306,7 @@ private void registerConfigSignInProviders() {
         final IdentityManager identityManager = IdentityManager.getDefaultIdentityManager();
 
         if (isConfigurationKeyPresent(USER_POOLS)) {
-            // TODO: 
-            throw new UnsupportedOperationException("Not supported yet.");
-//            identityManager.addSignInProvider(CognitoUserPoolsSignInProvider.class);
+            identityManager.addSignInProvider(CognitoUserPoolsSignInProvider.class);
         }
 
         if (isConfigurationKeyPresent(FACEBOOK)) {
diff --git a/pom.xml b/pom.xml
index c5c6d50f10..f9137af9cd 100644
--- a/pom.xml
+++ b/pom.xml
@@ -35,8 +35,6 @@
  <!--   <module>aws-android-sdk-apigateway-core</module>
     <module>aws-android-sdk-auth-google</module>
     <module>aws-android-sdk-auth-facebook</module>
-    <module>aws-android-sdk-auth-userpools</module>
-    <module>aws-android-sdk-auth-ui</module>
     <module>aws-android-sdk-autoscaling</module>
     <module>aws-android-sdk-cloudwatch</module>
     <module>aws-android-sdk-cognito</module>
@@ -69,6 +67,9 @@
     <module>aws-java-sdk-mobile-client</module>
     <module>aws-java-sdk-kms</module>
     <module>aws-java-sdk-s3</module>
+    <module>aws-java-sdk-cognitoidentityprovider</module>
+    <module>aws-java-sdk-auth-userpools</module>
+    <module>aws-java-sdk-auth-ui</module>
   </modules>
 
   <developers>
@@ -90,8 +91,8 @@
           <artifactId>maven-compiler-plugin</artifactId>
           <version>2.3</version>
           <configuration>
-            <source>1.6</source>
-            <target>1.6</target>
+            <source>1.8</source>
+            <target>1.8</target>
             <encoding>UTF-8</encoding>
             <forceJavacCompilerUse>true</forceJavacCompilerUse>
           </configuration>
