diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/InteractionClient.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/InteractionClient.java
index 66c3102f08..d1d684ff68 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/InteractionClient.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/InteractionClient.java
@@ -183,11 +183,19 @@ public InteractionClient(Context context,
         this(context, credentialsProvider, region, interactionConfig, null);
     }
 
+    public InteractionClient(Context context,
+                             AWSCredentialsProvider credentialsProvider,
+                             Regions region,
+                             InteractionConfig interactionConfig,
+                             ClientConfiguration clientConfiguration) {
+        this(context, credentialsProvider, region, interactionConfig, clientConfiguration, new AmazonLexRuntimeClient(credentialsProvider, clientConfiguration));
+    }
+
     public InteractionClient(Context context,
             AWSCredentialsProvider credentialsProvider,
             Regions region,
             InteractionConfig interactionConfig,
-            ClientConfiguration clientConfiguration) {
+            ClientConfiguration clientConfiguration, AmazonLexRuntime substituteRuntime) {
 
         if (context == null) {
             throw new InvalidParameterException("Context cannot be null.");
@@ -197,11 +205,11 @@ public InteractionClient(Context context,
 
         // Check if all necessary credentials are available.
         if (credentialsProvider == null) {
-            throw new InvalidParameterException("Credentials are not set.");
+            //throw new InvalidParameterException("Credentials are not set.");
         }
 
         if (interactionConfig == null) {
-            throw new InvalidParameterException("Interaction config is not set.");
+            //throw new InvalidParameterException("Interaction config is not set.");
         }
 
         if ((interactionConfig.getUserId() == null || interactionConfig.getUserId().isEmpty())
@@ -227,7 +235,7 @@ public InteractionClient(Context context,
 
         clientConfiguration.setUserAgent(userAgent);
 
-        amazonlex = new AmazonLexRuntimeClient(credentialsProvider, clientConfiguration);
+        amazonlex = substituteRuntime != null ? substituteRuntime : new AmazonLexRuntimeClient(credentialsProvider, clientConfiguration);
         amazonlex.setRegion(Region.getRegion(region));
     }
 
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceView.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceView.java
index 129df2974c..c0c9edccf1 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceView.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceView.java
@@ -276,7 +276,7 @@ protected void onDraw(Canvas canvas) {
         mDrawable.draw(canvas);
     }
 
-    void animateListening() {
+        public void animateListening() {
         animateImageSwitch(new ActionHandler() {
             @Override
             public void handle() {
@@ -285,7 +285,7 @@ public void handle() {
         });
     }
 
-    void animateAudioPlayback() {
+        public void animateAudioPlayback() {
         state = TRANSITION_TO_TALKING;
         animateImageSwitch(new ActionHandler() {
             @Override
@@ -471,6 +471,10 @@ public void setInteractiveVoiceListener(InteractiveVoiceListener listener) {
         viewAdapter.setVoiceListener(listener);
     }
 
+    public InteractiveVoiceListener getListener(){
+        return listener;
+    }
+
     /**
      * Returns view adapter.
      * @return The adapter set for this object.
@@ -587,6 +591,12 @@ private int getColor(String color) {
          * @param e The exception for the error.
          */
         void onError(String responseText, Exception e);
+
+            void onReadyForRecording();
+
+            void onStartedRecording();
+
+            void onVoiceClick(int STATE);
     }
 
     /**
diff --git a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceViewAdapter.java b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceViewAdapter.java
index 2c1b8223b0..8a3e09a035 100644
--- a/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceViewAdapter.java
+++ b/aws-android-sdk-lex/src/main/java/com/amazonaws/mobileconnectors/lex/interactionkit/ui/InteractiveVoiceViewAdapter.java
@@ -32,6 +32,7 @@
 import com.amazonaws.mobileconnectors.lex.interactionkit.listeners.InteractionListener;
 import com.amazonaws.mobileconnectors.lex.interactionkit.listeners.MicrophoneListener;
 import com.amazonaws.regions.Regions;
+import com.amazonaws.services.lexrts.AmazonLexRuntime;
 import com.amazonaws.services.lexrts.model.DialogState;
 
 import java.util.HashMap;
@@ -61,6 +62,7 @@
     private boolean shouldInitialize;
     private Map<String, String> sessionAttributes;
     private final ClientConfiguration clientConfiguration;
+    private AmazonLexRuntime amazonLexRuntime;
 
     // Dialog states.
     protected final static int STATE_NOT_READY = 0;
@@ -170,11 +172,17 @@ public void onInteractionError(Response response, Exception e) {
     @Override
     public void readyForRecording() {
         // noop.
+        if(voiceListener != null) {
+            voiceListener.onReadyForRecording();
+        }
     }
 
     @Override
     public void startedRecording() {
         //noop.
+        if(voiceListener != null) {
+            voiceListener.onStartedRecording();
+        }
     }
 
     @Override
@@ -211,7 +219,10 @@ public void onMicrophoneError(Exception e) {
 
     @Override
     public void onClick(View v) {
-        // Return if not ready.
+        voiceClick();
+    }
+
+    public void voiceClick(){
         switch (state) {
             case STATE_READY:
                 if (shouldInitialize) {
@@ -230,6 +241,8 @@ public void onClick(View v) {
                 state = STATE_READY;
                 break;
         }
+
+        voiceListener.onVoiceClick(state);
     }
 
     /**
@@ -260,6 +273,10 @@ protected void validateAppData() {
         }
     }
 
+    public void overrideLexRuntime(AmazonLexRuntime amazonLexRuntime){
+        this.amazonLexRuntime = amazonLexRuntime;
+    }
+
     /**
      * Creates the interaction client, uses default interaction config setting
      * {@link com.amazonaws.mobileconnectors.lex.interactionkit.config.InteractionConfig}
@@ -271,13 +288,23 @@ protected void createInteractionClient() {
             lexInteractionClient.cancel();
         }
 
-        lexInteractionClient = new InteractionClient(
-                context,
-                credentialsProvider,
-                awsRegion,
-                interactionConfig,
-                clientConfiguration);
-
+        if(amazonLexRuntime == null){
+            lexInteractionClient = new InteractionClient(
+                    context,
+                    credentialsProvider,
+                    awsRegion,
+                    interactionConfig,
+                    clientConfiguration);
+        }
+        else {
+            lexInteractionClient = new InteractionClient(
+                    context,
+                    credentialsProvider,
+                    awsRegion,
+                    interactionConfig,
+                    clientConfiguration,
+                    amazonLexRuntime);
+        }
         lexInteractionClient.setAudioPlaybackListener(this);
         lexInteractionClient.setInteractionListener(this);
         lexInteractionClient.setMicrophoneListener(this);
@@ -309,7 +336,7 @@ private void init() {
     /**
      * Cancel current dialog.
      */
-    protected void cancel() {
+    public void cancel() {
         reset();
     }
 
