diff --git a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
index 2b3064e8c7..c641cccfa7 100644
--- a/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
+++ b/aws-java-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/internal/util/ViewHelper.java
@@ -17,10 +17,9 @@
 
 package com.amazonaws.mobile.auth.core.internal.util;
 
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.DialogInterface;
-import android.widget.EditText;
+import java.util.Optional;
+import javafx.scene.control.Alert;
+import javafx.scene.control.ButtonType;
 
 /**
  * Utilities for Views.
@@ -30,26 +29,20 @@
     /**
      * Displays a modal dialog with an OK button.
      *
-     * @param activity invoking activity
      * @param title title to display for the dialog
      * @param body content of the dialog
      */
-    public static void showDialog(final Activity activity, final String title, final String body) {
-        if (null == activity) {
-            return;
-        }
+    public static void showDialog(final String title, final String body) {
 
-        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
-        builder.setTitle(title);
-        builder.setMessage(body);
-        builder.setNeutralButton(android.R.string.ok, null);
-        builder.show();
+        Alert alert = new Alert(Alert.AlertType.INFORMATION);
+        alert.setTitle(title);
+        alert.setContentText(body);
+        alert.show();
     }
 
     /**
      * Displays a modal dialog.
      *
-     * @param activity invoking activity
      * @param title title to display for the dialog
      * @param body content of the dialog
      * @param positiveButton String for positive button
@@ -57,22 +50,25 @@ public static void showDialog(final Activity activity, final String title, final
      * @param negativeButtonListener  the listener which should be invoked when a negative button is pressed
      * @param positiveButtonListener  the listener which should be invoked when a positive button is pressed
      */
-    public static void showDialog(final Activity activity,
-                                  final String title,
+    public static void showDialog(final String title,
                                   final String body,
                                   final String positiveButton, 
-                                  final DialogInterface.OnClickListener positiveButtonListener,
+                                  final Runnable positiveButtonListener,
                                   final String negativeButton,
-                                  final DialogInterface.OnClickListener negativeButtonListener) {
-        if (null == activity) {
-            return;
-        }
+                                  final Runnable negativeButtonListener) {
 
-        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
-        builder.setTitle(title);
-        builder.setMessage(body);
-        builder.setPositiveButton(positiveButton,positiveButtonListener);
-        builder.setNegativeButton(negativeButton, negativeButtonListener);
-        builder.show();
+        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
+        alert.setTitle(title);
+        alert.setContentText(body);
+        ButtonType yesButton = new ButtonType("Yes");
+        ButtonType noButton = new ButtonType("No");
+        alert.getButtonTypes().setAll(yesButton, noButton);
+
+        Optional<ButtonType> result = alert.showAndWait();
+        if (result.get() == yesButton) {
+            positiveButtonListener.run();
+        } else {
+            negativeButtonListener.run();
+        }
     }
 }
