diff --git a/.github/stale.yml b/.github/stale.yml
new file mode 100644
index 0000000000..3bf5d15391
--- /dev/null
+++ b/.github/stale.yml
@@ -0,0 +1,19 @@
+# Number of days of inactivity before an issue becomes stale
+daysUntilStale: 30
+# Number of days of inactivity before a stale issue is closed
+daysUntilClose: 7
+# Issues with these labels will never be considered stale
+exemptLabels:
+  - investigating
+  - feature request
+# Label to use when marking an issue as stale
+staleLabel: wontfix-stale
+# Comment to post when marking an issue as stale. Set to `false` to disable
+markComment: >
+  This issue has been automatically marked as stale because it has not had
+  recent activity. It will be closed if no further activity occurs. Thank you
+  for your contributions.
+# Comment to post when closing a stale issue. Set to `false` to disable
+closeComment: >
+  This issue has been automatically closed because of inactivity.
+  Please open a new issue if are still encountering problems.
diff --git a/.travis.yml b/.travis.yml
index 487bb02478..ab69812fad 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -8,10 +8,16 @@ android:
     - build-tools-19.1.0
     - android-11
     - android-15
+    - android-21
 sudo: true
 script:
     - sudo rm -f /etc/mavenrc
     - export MAVEN_OPTS="-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m"
+    - export LINUX_21="${basedir}/../android-21-linux.jar"
+    - export ANDROID_21="/../../../../../../usr/local/android-sdk/platforms/android-21/android.jar"
+    - sed -i "s,$LINUX_21,$ANDROID_21," aws-android-sdk-kinesisvideo/pom.xml
+    - sed -i "s,$LINUX_21,$ANDROID_21," aws-android-sdk-pinpoint/pom.xml
+    - cat aws-android-sdk-kinesisvideo/pom.xml
     - mvn clean install -Dmaven.javadoc.skip=true cobertura:cobertura
 
 after_success:
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6721280d9b..4784007773 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,19 @@
 # Change Log - AWS SDK for Android
 
+## [Release 2.6.18](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.18)
+
+### Enhancements
+
+* **Amazon Kinesis Video Streams**
+  * Add handling of token rotation, error recovery and the re-streaming in general.
+  * **Breaking API Changes**
+
+	|Class|2.6.17 API|2.6.18 API
+	|-----|----------|----------
+	| KinesisVideoProducerStream|getStreamData(byte[], int, int)<br />return type: int|getStreamData(byte[], int, int, ReadResult)<br />return type: void
+	| NativeKinesisVideoProducerJni|getStreamData(long, byte[], int, int)<br />return type: int|getStreamData(long, byte[], int, int , ReadResult)<br />return type: void
+	| NativeKinesisVideoProducerStream|getStreamData(@ byte[], int, int)<br />return type: int|getStreamData(@ byte[], int, int, ReadResult)<br />return type: void
+
 ## [Release 2.6.17](https://github.com/aws/aws-sdk-android/releases/tag/release_v2.6.17)
 
 ### Bug Fixes
diff --git a/README.md b/README.md
index c7639c7b8f..9d6a93e1c2 100644
--- a/README.md
+++ b/README.md
@@ -1,11 +1,11 @@
 # AWS SDK for Android 
 
 [![Build Status](https://travis-ci.org/aws/aws-sdk-android.png?branch=master)](https://travis-ci.org/aws/aws-sdk-android)
-[![GitHub release](https://img.shields.io/github/release/aws/aws-sdk-android.svg)]()
+[![GitHub release](https://img.shields.io/github/release/aws/aws-sdk-android.svg)](https://github.com/aws/aws-sdk-android/releases)
 [![Maven Central](https://img.shields.io/maven-central/v/com.amazonaws/aws-android-sdk-pom.svg)]()
 [![Twitter Follow](https://img.shields.io/twitter/follow/awsformobile.svg?style=social&label=Follow)]()
 
-The [AWS SDK for Android](http://aws.amazon.com/sdkforandroid) provides a library and documentation for developers to build connected mobile applications using AWS.
+The [AWS SDK for Android](https://aws.amazon.com/mobile/resources/) provides a library and documentation for developers to build connected mobile applications using AWS.
 
 
 
@@ -113,11 +113,19 @@ The SDK provides access to many AWS Services.  At the most basic level the SDK p
 
 ### Mobile Connectors  
 
-The SDK also provides a higher level experience for many service.
+The SDK also provides a higher level experience for many services.
 
-### S3 Transfer Manager 
+### S3 Transfer Utility
 
-The Transfer Manager adds convenience and reliability ontop of using the standard AmazonS3Client when uploading and downloading binary data to S3:
+The TransferUtility adds convenience and reliability on top of using the standard `AmazonS3Client` when uploading and downloading data to S3:
+
+* Enhances performance by automatically converting  upload transfers > 5MB to multi-part uploads, using multiple threads.
+* Provides the ability to pause/resume/cancel upload/download transfers, which is useful if the app is being killed or loses internet connectivity.
+* Automatically pauses/resumes upload/download transfers when network connectivity changes.
+
+### S3 Transfer Manager (Deprecated)
+
+The Transfer Manager adds convenience and reliability on top of using the standard `AmazonS3Client` when uploading and downloading binary data to S3:
 
 * Enhances performance by automatically converting large requests to multi-part uploads, using multiple threads.
 * Allows developers to pause/resume uploads/downloads, which is especially useful if the app is being killed or loses internet connectivity.
@@ -147,7 +155,7 @@ The Amazon Cognito mobile connector provides the ability to:
 * Synchronize user profile data, app preferences or game state across devices and across login providers.
 * Record and update user data while offline.
 
-Note:  The Cognito Identity classes are a part of core jar (as well as the core Maven package).  The Cognito Sync source code is in a separate repository, and can be found [here](https://github.com/aws/amazon-cognito-android).
+**Note**: The Amazon Cognito Federated Identities classes are part of `AWS SDK for Android - Core` (`aws-android-sdk-core` Maven package) and can be found [here](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-core). The Amazon Cognito Sync code can be found [here](https://github.com/aws/aws-sdk-android/tree/master/aws-android-sdk-cognito).
 
 
 ### Amazon Mobile Analytics
diff --git a/aws-android-sdk-apigateway-core/pom.xml b/aws-android-sdk-apigateway-core/pom.xml
index fb5d72a857..0441802200 100644
--- a/aws-android-sdk-apigateway-core/pom.xml
+++ b/aws-android-sdk-apigateway-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-auth-core/pom.xml b/aws-android-sdk-auth-core/pom.xml
index fa5907d6e9..6eee159543 100644
--- a/aws-android-sdk-auth-core/pom.xml
+++ b/aws-android-sdk-auth-core/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
index d8dd68cf0d..c728895a41 100644
--- a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
+++ b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/IdentityManager.java
@@ -65,8 +65,13 @@
  * <pre>
  * // Create IdentityManager and set it as the default instance.
  * IdentityManager idm = new IdentityManager(getApplicationContext(), 
- *                             new AWSConfiguration(getApplicationContext()));
+ *                                           new AWSConfiguration(getApplicationContext()));
  * IdentityManager.setDefaultIdentityManager(idm);
+ * 
+ * // Use IdentityManager to retrieve the {@link com.amazonaws.auth.CognitoCachingCredentialsProvider}
+ * // object.
+ * IdentityManager.getDefaultIdentityManager().getUnderlyingProvider();
+ * 
  * </pre>
  */
 public class IdentityManager {
@@ -112,7 +117,7 @@ private void setUnderlyingProvider(final CognitoCachingCredentialsProvider under
     /** Configuration for the mobile helper. */
     private AWSConfiguration awsConfiguration;
 
-    /* Cognito client configuration. */
+    /* SDK Client configuration. */
     private final ClientConfiguration clientConfiguration;
 
     /** Executor service for obtaining credentials in a background thread. */
@@ -139,17 +144,19 @@ private void setUnderlyingProvider(final CognitoCachingCredentialsProvider under
     private static IdentityManager defaultIdentityManager = null;
 
     /** 
-     * Shared Preferences Name 
-     * This key is used to store credentials in SharedPreferences
-     * and used by CognitoCachingCredentialsProvider
+     * SharedPreferences key name used to store the short-lived AWS Credentials
+     * by the CognitoCachingCredentialsProvider.
      */
     private static final String SHARED_PREF_NAME = "com.amazonaws.android.auth";
     
-    /** Shared Preferences Key */
+    /** 
+     * SharedPreferences key name used to store the expiration date for the 
+     * short-lived AWS Credentials.
+     */
     private static final String EXPIRATION_KEY = "expirationDate";
 
     /**
-     * Custom Cognito Identity Provider to handle refreshing the individual provider's tokens.
+     * Custom Amazon Cognito Identity Provider to handle refreshing the sign-in provider's token.
      */
     private class AWSRefreshingCognitoIdentityProvider extends AWSBasicCognitoIdentityProvider {
 
@@ -161,18 +168,17 @@ public AWSRefreshingCognitoIdentityProvider(final String accountId,
                                                     final ClientConfiguration clientConfiguration,
                                                     final Regions regions) {
             super(accountId, identityPoolId, clientConfiguration);
-            // Force refreshing ID provider to use same region as caching credentials provider
+            // Force refreshing Identity provider to use same region as 
+            // CognitoCachingCredentialsProvider
             this.cib.setRegion(Region.getRegion(regions));
         }
 
         @Override
         public String refresh() {
 
-            Log.d(LOG_TAG, "Refreshing token...");
-
             if (currentIdentityProvider != null) {
+                Log.d(LOG_TAG, "Storing the Refresh token in the loginsMap.");
                 final String newToken = currentIdentityProvider.refreshToken();
-
                 getLogins().put(currentIdentityProvider.getCognitoLoginKey(), newToken);
             }
             return super.refresh();
@@ -205,7 +211,7 @@ public IdentityManager(final Context context,
         this.awsConfiguration = awsConfiguration;
         this.clientConfiguration = new ClientConfiguration().withUserAgent(awsConfiguration.getUserAgent());
         this.credentialsProviderHolder = new AWSCredentialsProviderHolder();
-        initializeCognito(this.appContext, this.clientConfiguration);
+        createCredentialsProvider(this.appContext, this.clientConfiguration);
     }
 
     /**
@@ -234,7 +240,7 @@ public IdentityManager(final Context context,
         }
 
         this.credentialsProviderHolder = new AWSCredentialsProviderHolder();
-        initializeCognito(this.appContext, this.clientConfiguration);
+        createCredentialsProvider(this.appContext, this.clientConfiguration);
     }
 
     /**
@@ -252,11 +258,12 @@ public IdentityManager(final Context context,
         this.appContext = context.getApplicationContext();
         this.clientConfiguration = clientConfiguration;
         this.credentialsProviderHolder = new AWSCredentialsProviderHolder();
-        setCredentialsProvider(context, credentialsProvider);
+        credentialsProviderHolder.setUnderlyingProvider(credentialsProvider);
     }
 
+
     /**
-     * Return the default IdentityManager
+     * Return the default instance of the IdentityManager
      *
      * @return defaultIdentityManager The default IdentityManager object
      */
@@ -265,7 +272,7 @@ public static IdentityManager getDefaultIdentityManager() {
     }
 
     /**
-     * Set the IdentityManager object created as the default
+     * Set the IdentityManager object passed in as the default instance
      *
      * @param identityManager The IdentityManager object to be set as the default
      */
@@ -292,9 +299,9 @@ public void setConfiguration(AWSConfiguration configuration) {
     }
 
     /**
-     * Check if the credentials are expired.
+     * Check if the short-lived AWS Credentials are expired.
      *
-     * @return true if the cached Cognito credentials are expired, otherwise false.
+     * @return true if the cached short-lived AWS credentials are expired, otherwise false.
      */
     public boolean areCredentialsExpired() {
 
@@ -320,7 +327,7 @@ public boolean areCredentialsExpired() {
     /**
      * Retrieve the reference to AWSCredentialsProvider object.
      *
-     * @return the Cognito credentials provider.
+     * @return the holder to the CognitoCachingCredentialsProvider.
      */
     public AWSCredentialsProvider getCredentialsProvider() {
         return this.credentialsProviderHolder;
@@ -367,19 +374,17 @@ public void run() {
                     Log.e(LOG_TAG, exception.getMessage(), exception);
                 } finally {
                     final String result = identityId;
-                    Log.d(LOG_TAG, "Got user ID: " + identityId);
+                    Log.d(LOG_TAG, "Got Amazon Cognito Federated Identity ID: " + identityId);
 
-                    // Lint doesn't like early return inside a finally block, so nesting further inside the if here.
                     if (handler != null) {
                         ThreadUtils.runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
                                 if (exception != null) {
                                     handler.handleError(exception);
-                                    return;
+                                } else {
+                                    handler.onIdentityId(result);
                                 }
-
-                                handler.onIdentityId(result);
                             }
                         });
                     }
@@ -498,6 +503,14 @@ public void run() {
         }
     }
 
+    /**
+     * Set the loginMap of the CognitoCachingCredentialsProvider
+     * and invoke refresh. This retrieves the AWS Identity and the
+     * short-lived AWS Credentials to access other AWS resources.
+     * 
+     * @param loginMap the map with a key-value pair of 
+     *                 sign-in provider key and the token 
+     */
     private void refreshCredentialWithLogins(final Map<String, String> loginMap) {
       
         final CognitoCachingCredentialsProvider credentialsProvider =
@@ -509,12 +522,12 @@ private void refreshCredentialWithLogins(final Map<String, String> loginMap) {
         Log.d(LOG_TAG, "refresh credentials");
         credentialsProvider.refresh();
 
-        // expire credentials in 2 minutes.
-        appContext.getSharedPreferences(SHARED_PREF_NAME,
-            Context.MODE_PRIVATE).edit()
-                .putLong(credentialsProvider.getIdentityPoolId() + "." + EXPIRATION_KEY, System.currentTimeMillis() + (510*1000))
-                .commit();
-
+        // Set the expiration key of the Credentials Provider to 8 minutes, 30 seconds.
+        appContext.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
+                  .edit()
+                  .putLong(credentialsProvider.getIdentityPoolId() + "." + EXPIRATION_KEY,
+                           System.currentTimeMillis() + (510 * 1000))
+                  .apply();
     }
 
     /**
@@ -530,16 +543,18 @@ public void setProviderResultsHandler(final SignInProviderResultHandler signInPr
     }
 
     /**
-     * Login with an identity provider (ie. Facebook, Twitter, etc.).
+     * Fetch the token from the SignIn provider and insert into the loginMap
+     * and then invoke {@link #refreshCredentialWithLogins(Map)} to set the
+     * loginsMap with the CredentialsProvider object in-order to federate 
+     * the token with Amazon Cognito Federated Identities.
      *
      * @param provider A sign-in provider.
      */
     public void federateWithProvider(final IdentityProvider provider) {
-        Log.d(LOG_TAG, "federateWithProvider");
+        Log.d(LOG_TAG, "federate with provider: Populate loginsMap with token.");
         final Map<String, String> loginMap = new HashMap<String, String>();
         loginMap.put(provider.getCognitoLoginKey(), provider.getToken());
         currentIdentityProvider = provider;
-        initializeCognito(this.appContext, this.clientConfiguration);
 
         executorService.submit(new Runnable() {
             @Override
@@ -603,53 +618,55 @@ public boolean isUserSignedIn() {
         return true;
     }
 
-    private void handleStartupAuthResult(final Activity callingActivity,
-                                         final StartupAuthResultHandler startupAuthResultHandler,
-                                         final AuthException authException,
-                                         final Exception unAuthException) {
+    /**
+     * Invoke the onComplete method on the {@link StartupAuthResultHandler}
+     * callback object.
+     * 
+     * @param callingActivity the activity context
+     * @param startupAuthResultHandler the callback object
+     * @param ex the exception if raised during the resume session
+     */
+    private void completeHandler(final Activity callingActivity,
+                                 final StartupAuthResultHandler startupAuthResultHandler,
+                                 final AuthException ex) {
         runAfterStartupAuthDelay(callingActivity, new Runnable() {
             @Override
             public void run() {
                 startupAuthResultHandler.onComplete(new StartupAuthResult(IdentityManager.this,
-                    new StartupAuthErrorDetails(authException, unAuthException)));
+                    new StartupAuthErrorDetails(ex, null)));
             }
         });
     }
 
-    private void handleUnauthenticated(final Activity callingActivity,
-                                       final StartupAuthResultHandler startupAuthResultHandler,
-                                       final AuthException ex) {
-        SignInManager.dispose();
-
-        handleStartupAuthResult(callingActivity, startupAuthResultHandler, ex, null);
-    }
-
     /**
-     * Starts an activity after the splash timeout.
+     * Invoke the completeHandler after the resume session timeout
+     * by running the Runnable on th UI thread. This method is 
+     * currently being called from a background thread.
      *
      * @param runnable runnable to run after the splash timeout expires.
      */
-    private void runAfterStartupAuthDelay(final Activity callingActivity, final Runnable runnable) {
+    private void runAfterStartupAuthDelay(final Activity callingActivity,
+                                          final Runnable runnable) {
         executorService.submit(new Runnable() {
             public void run() {
-                // Wait for the splash timeout expiry or for the user to tap.
+                // Wait for the startupAuthTimeoutLatch to go to zero.
                 try {
                     startupAuthTimeoutLatch.await();
                 } catch (InterruptedException e) {
                     Log.d(LOG_TAG, "Interrupted while waiting for startup auth minimum delay.");
                 }
 
+                // Notify user by invoking the callback on the UI thread
                 callingActivity.runOnUiThread(runnable);
             }
         });
     }
 
     /**
-     * This should be called from your app's splash activity upon start-up. If the user was previously
-     * signed in, this will attempt to refresh their identity using the previously sign-ed in provider.
+     * This should be called from your app's activity upon start-up. If the user was previously
+     * signed-in, this will attempt to refresh their identity using the previously signed-in provider.
      * If the user was not previously signed in or their identity could not be refreshed with the
-     * previously signed in provider and sign-in is optional, it will attempt to obtain an unauthenticated (guest)
-     * identity.
+     * previously signed-in provider, it will attempt to obtain an unauthenticated identity.
      *
      * @param callingActivity the calling activity.
      * @param startupAuthResultHandler a handler for returning results.
@@ -659,78 +676,80 @@ public void resumeSession(final Activity callingActivity,
                               final StartupAuthResultHandler startupAuthResultHandler,
                               final long minimumDelay) {
 
-        Log.d(LOG_TAG, "Resume session called.");
-
+        Log.d(LOG_TAG, "Resume Session called.");
+        
         executorService.submit(new Runnable() {
             public void run() {
-                Log.d(LOG_TAG, "Starting up authentication...");
-                final SignInManager signInManager = SignInManager.getInstance(
-                    callingActivity.getApplicationContext());
-
-                if (signInManager == null) {
-                    throw new IllegalStateException("You cannot pass null for identityManager.");
-                }
-
-                final SignInProvider provider = signInManager.getPreviouslySignedInProvider();
-
-                // if the user was already previously signed-in to a provider.
-                if (provider != null) {
-                    Log.d(LOG_TAG, "Refreshing credentials with identity provider " + provider.getDisplayName());
-                    // asynchronously handle refreshing credentials and call our handler.
+                Log.d(LOG_TAG, "Looking for a previously signed-in session.");
+                final SignInManager signInManager = 
+                        SignInManager.getInstance(callingActivity.getApplicationContext());
+                
+                final SignInProvider signInProvider = 
+                        signInManager.getPreviouslySignedInProvider();
+
+                // if the user was previously signed-in with an sign-in provider and
+                // we are able to verify with the sign-in provider.
+                if (signInProvider != null) {
+                    Log.d(LOG_TAG, "Refreshing credentials with sign-in provider "
+                        + signInProvider.getDisplayName());
+                    
+                    // Use the token from the previously signed-in session to
+                    // get a AWS Identity using Cognito Federated Identities
+                    // The AWS Identity will be wrapped into the CredentialsProvider
+                    // which will contain short-lived AWS Credentials to access
+                    // AWS resources.             
                     signInManager.refreshCredentialsWithProvider(callingActivity,
-                        provider, new SignInProviderResultHandler() {
-
-                            @Override
-                            public void onSuccess(final IdentityProvider provider) {
-                                // The sign-in manager is no longer needed once signed in.
-                                SignInManager.dispose();
-
-                                Log.d(LOG_TAG, "Successfully got credentials from identity provider '"
-                                    + provider.getDisplayName());
-
-                                runAfterStartupAuthDelay(callingActivity, new Runnable() {
-                                     @Override
-                                     public void run() {
-                                         startupAuthResultHandler.onComplete(new StartupAuthResult(IdentityManager.this, null));
-                                     }
-                                });
-                            }
-
-                            @Override
-                            public void onCancel(final IdentityProvider provider) {
-                                // Should never happen.
-                                Log.wtf(LOG_TAG, "Cancel can't happen when handling a previously signed-in user.");
-                            }
+                            signInProvider,
+                            new SignInProviderResultHandler() {
 
-                            @Override
-                            public void onError(final IdentityProvider provider, final Exception ex) {
-                                Log.e(LOG_TAG,
-                                    String.format("Cognito credentials refresh with %s provider failed. Error: %s",
-                                        provider.getDisplayName(), ex.getMessage()), ex);
-
-                                if (ex instanceof AuthException) {
-                                    handleUnauthenticated(callingActivity, startupAuthResultHandler,
-                                        (AuthException) ex);
-                                } else {
-                                    handleUnauthenticated(callingActivity, startupAuthResultHandler,
-                                        new AuthException(provider, ex));
+                                @Override
+                                public void onSuccess(final IdentityProvider provider) {
+                                    Log.d(LOG_TAG, "Successfully got AWS Credentials.");
+        
+                                    runAfterStartupAuthDelay(callingActivity, new Runnable() {
+                                        @Override
+                                        public void run() {
+                                            startupAuthResultHandler.onComplete(new StartupAuthResult(IdentityManager.this, null));
+                                        }
+                                    });
                                 }
-                            }
-                        });
+        
+                                @Override
+                                public void onCancel(final IdentityProvider provider) {
+                                    Log.wtf(LOG_TAG, "Cancel can't happen when handling a previously signed-in user.");
+                                }
+        
+                                @Override
+                                public void onError(final IdentityProvider provider, final Exception ex) {
+                                    Log.e(LOG_TAG,
+                                            String.format("Federate with Cognito with %s Sign-in provider failed. Error: %s",
+                                                    provider.getDisplayName(), ex.getMessage()), ex);
+        
+                                    if (ex instanceof AuthException) {
+                                        completeHandler(callingActivity, startupAuthResultHandler,
+                                                (AuthException) ex);
+                                    } else {
+                                        completeHandler(callingActivity, startupAuthResultHandler,
+                                                new AuthException(provider, ex));
+                                    }
+                                }
+                            });
                 } else {
-                    handleUnauthenticated(callingActivity, startupAuthResultHandler, null);
+                    // No previously signed-in provider found. No session to resume.
+                    // Notify the user by executing the callback handler.
+                    completeHandler(callingActivity, startupAuthResultHandler, null);
                 }
 
                 if (minimumDelay > 0) {
-                    // Wait for the splash timeout.
+                    // Wait for the expiration timeout.
                     try {
                         Thread.sleep(minimumDelay);
                     } catch (final InterruptedException ex) {
-                        Log.i(LOG_TAG, "Interrupted while waiting for startup auth timeout.");
+                        Log.i(LOG_TAG, "Interrupted while waiting for resume session timeout.");
                     }
                 }
 
-                // Expire the splash page delay.
+                // Expire the resume session timeout.
                 startupAuthTimeoutLatch.countDown();
             }
         });
@@ -830,34 +849,26 @@ public void login(final Context context,
         }
     }
 
-    private void setCredentialsProvider(final Context context,
-                                        final CognitoCachingCredentialsProvider cachingCredentialsProvider) {
-        credentialsProviderHolder.setUnderlyingProvider(cachingCredentialsProvider);
-    }
-
     /**
      *   The CognitoCachingCredentialProvider loads cached credentials when it is
      *   instantiated, however, it does not reload the login map, which must be reloaded
      *   in order to refresh the credentials.  Therefore, currently cached credentials are
      *   only useful for unauthenticated users.
      */
-    private void initializeCognito(final Context context,
-                                   final ClientConfiguration clientConfiguration) {
+    private void createCredentialsProvider(final Context context,
+                                           final ClientConfiguration clientConfiguration) {
 
-        Log.d(LOG_TAG, "Initializing Cognito");
+        Log.d(LOG_TAG, "Creating the Cognito Caching Credentials Provider "
+                + "with a refreshing Cognito Identity Provider.");
 
         final String region = getCognitoIdentityRegion();
-        Regions cognitoIdentityRegion = Regions.fromName(region);
-        
-        setCredentialsProvider(context,
-            new CognitoCachingCredentialsProvider(context, getCognitoIdentityPoolId(),
-                cognitoIdentityRegion, clientConfiguration));
+        final Regions cognitoIdentityRegion = Regions.fromName(region);
 
         final AWSRefreshingCognitoIdentityProvider refreshingCredentialsProvider =
             new AWSRefreshingCognitoIdentityProvider(null, getCognitoIdentityPoolId(),
                 clientConfiguration, cognitoIdentityRegion);
 
-        setCredentialsProvider(context,
+        credentialsProviderHolder.setUnderlyingProvider(
             new CognitoCachingCredentialsProvider(context, refreshingCredentialsProvider,
                     cognitoIdentityRegion, clientConfiguration));
     }
diff --git a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
index dcae45052d..416b9bbf55 100644
--- a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
+++ b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/SignInManager.java
@@ -20,6 +20,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
+import android.util.Log;
 import android.util.SparseArray;
 import android.view.View;
 
@@ -28,6 +29,7 @@
 import com.amazonaws.mobile.auth.core.SignInResultHandler;
 import com.amazonaws.mobile.auth.core.internal.util.ThreadUtils;
 
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -40,7 +42,7 @@
     /** Log Tag */
     private static final String LOG_TAG = SignInManager.class.getSimpleName();
 
-    /** This map holds the class and the object of the signin providers */
+    /** This map holds the class and the object of the sign-in providers */
     private final Map<Class<? extends SignInProvider>, SignInProvider> signInProviders 
         = new HashMap<Class<? extends SignInProvider>, SignInProvider>();
 
@@ -58,27 +60,25 @@
      * Constructor.
      */
     private SignInManager(final Context context) {
-        if (singleton != null) {
-            throw new AssertionError();
-        }
 
         for (Class<? extends SignInProvider> providerClass : IdentityManager.getDefaultIdentityManager().getSignInProviderClasses()) {
             final SignInProvider provider;
             try {
-                provider = providerClass.newInstance();
+                provider = providerClass.newInstance();  
+                if (provider != null) {
+	                provider.initialize(context, IdentityManager.getDefaultIdentityManager().getConfiguration());
+	                signInProviders.put(providerClass, provider);
+	                if (provider instanceof SignInPermissionsHandler) {
+	                    final SignInPermissionsHandler handler = (SignInPermissionsHandler) provider;
+	                    providersHandlingPermissions.put(handler.getPermissionRequestCode(), handler);
+	                }
+                }
             } catch (final IllegalAccessException ex) {
-                throw new RuntimeException(ex);
+                Log.e(LOG_TAG, "Unable to instantiate " + providerClass.getSimpleName() + " . Skipping this provider.");       
             } catch (final InstantiationException ex) {
-                throw new RuntimeException(ex);
+            	Log.e(LOG_TAG, "Unable to instantiate " + providerClass.getSimpleName() + " . Skipping this provider.");
             }
-            provider.initialize(context, IdentityManager.getDefaultIdentityManager().getConfiguration());
-
-            this.signInProviders.put(providerClass, provider);
             
-            if (provider instanceof SignInPermissionsHandler) {
-                final SignInPermissionsHandler handler = (SignInPermissionsHandler) provider;
-                providersHandlingPermissions.put(handler.getPermissionRequestCode(), handler);
-            }
         }
 
         singleton = this;
@@ -140,11 +140,14 @@ public synchronized static void dispose() {
      * @return false if not already signed in, true if the user was signed in with a provider.
      */
     public SignInProvider getPreviouslySignedInProvider() {
+    	
+    	Log.d(LOG_TAG, "Providers: " + Collections.singletonList(signInProviders)); 
 
         for (final SignInProvider provider : signInProviders.values()) {
             // Note: This method may block. This loop could potentially be sped
             // up by running these calls in parallel using an executorService.
             if (provider.refreshUserSignInState()) {
+            	Log.d(LOG_TAG, "Refreshing provider: " + provider.getDisplayName());
                 return provider;
             }
         }
@@ -202,29 +205,34 @@ public void run() {
     private SignInProviderResultAdapter resultsAdapter;
 
     /**
-     * Refresh Cognito credentials with a provider.  Results handlers are always called on the main
-     * thread.
-     *
+     * Federate the token in the Sign-in Provider with Amazon Cognito
+     * Federated Identities to get an identity that can be used to 
+     * access AWS resources.
+     * 
+     * This involves retrieving the token from the Sign-in Provider and putting
+     * into the loginsMap and setting it with the CredentialsProvider.
+     * After setting it, a refresh operation is made to get an identity from Cognito.
+     * 
      * @param activity the calling activity.
-     * @param provider the sign-in provider that was previously signed in.
+     * @param signInProvider the sign-in provider that was previously signed-in.
      * @param resultsHandler the handler to receive results for credential refresh.
      */
     public void refreshCredentialsWithProvider(final Activity activity,
-                                               final IdentityProvider provider,
+                                               final IdentityProvider signInProvider,
                                                final SignInProviderResultHandler resultsHandler) {
 
-        if (provider == null) {
+        if (signInProvider == null) {
             throw new IllegalArgumentException("The sign-in provider cannot be null.");
         }
 
-        if (provider.getToken() == null) {
-            resultsHandler.onError(provider,
+        if (signInProvider.getToken() == null) {
+            resultsHandler.onError(signInProvider,
                 new IllegalArgumentException("Given provider not previously logged in."));
         }
 
         resultsAdapter = new SignInProviderResultAdapter(activity, resultsHandler);
         IdentityManager.getDefaultIdentityManager().setProviderResultsHandler(resultsAdapter);
-        IdentityManager.getDefaultIdentityManager().federateWithProvider(provider);
+        IdentityManager.getDefaultIdentityManager().federateWithProvider(signInProvider);
     }
 
     /**
diff --git a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
index d0f11663ab..a7c45e89e5 100644
--- a/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
+++ b/aws-android-sdk-auth-core/src/main/java/com/amazonaws/mobile/auth/core/signin/ui/buttons/SignInButton.java
@@ -121,6 +121,7 @@ public SignInButton(final Context context, final AttributeSet attrs,
                 isSmallStyle = true;
             }
             buttonText = styledAttributes.getString(R.styleable.SignInButton_text);
+            styledAttributes.recycle();
         } else {
             buttonText = null;
         }
diff --git a/aws-android-sdk-auth-core/src/main/res/values/strings.xml b/aws-android-sdk-auth-core/src/main/res/values/strings.xml
index 428e7be3bb..82136ecfbc 100644
--- a/aws-android-sdk-auth-core/src/main/res/values/strings.xml
+++ b/aws-android-sdk-auth-core/src/main/res/values/strings.xml
@@ -1,5 +1,3 @@
 <resources>
-  <string name="sign_in_canceled_message_format">"Sign-in with %s canceled."</string>
-  <string name="sign_in_failure_dialog_title">Sign-In Error</string>
   <string name="sign_in_failure_message_format">Sign-in with %1$s failed.\n%2$s</string>
 </resources>
diff --git a/aws-android-sdk-auth-facebook/pom.xml b/aws-android-sdk-auth-facebook/pom.xml
index f10f4e230f..eeba96e8d5 100644
--- a/aws-android-sdk-auth-facebook/pom.xml
+++ b/aws-android-sdk-auth-facebook/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <repositories>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml b/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
index 8cf2cea2f2..ff6f6eca8a 100644
--- a/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
+++ b/aws-android-sdk-auth-facebook/src/main/AndroidManifest.xml
@@ -1,11 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:tools="http://schemas.android.com/tools"
           package="com.amazonaws.mobile.auth.facebook">
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
 
 <uses-sdk android:minSdkVersion="15" android:targetSdkVersion="25" /></manifest>
diff --git a/aws-android-sdk-auth-facebook/src/main/java/com/amazonaws/mobile/auth/facebook/FacebookSignInProvider.java b/aws-android-sdk-auth-facebook/src/main/java/com/amazonaws/mobile/auth/facebook/FacebookSignInProvider.java
index 8eba7f1b4c..7ca5458895 100644
--- a/aws-android-sdk-auth-facebook/src/main/java/com/amazonaws/mobile/auth/facebook/FacebookSignInProvider.java
+++ b/aws-android-sdk-auth-facebook/src/main/java/com/amazonaws/mobile/auth/facebook/FacebookSignInProvider.java
@@ -94,12 +94,12 @@ public void initialize(@NonNull final Context context,
 
         // Read the awsconfiguration.json and apply the permissions.
         try {
-                FacebookSignInProvider.setPermissions(
-                    this.awsConfiguration
-                        .optJsonObject("FacebookSignIn")
-                        .getString("Permissions")
-                        .split(",")
-                );
+            FacebookSignInProvider.setPermissions(
+                this.awsConfiguration
+                    .optJsonObject("FacebookSignIn")
+                    .getString("Permissions")
+                    .split(",")
+            );
         } catch (final Exception exception) {
                 Log.e(LOG_TAG, "Failed to register the permissions with FacebookSignInProvider. "
                     + "Use FacebookSignInProvider.setPermissions() to register the permissions. "
diff --git a/aws-android-sdk-auth-google/pom.xml b/aws-android-sdk-auth-google/pom.xml
index c6e5e12e13..2641f78355 100644
--- a/aws-android-sdk-auth-google/pom.xml
+++ b/aws-android-sdk-auth-google/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <repositories>
@@ -40,7 +40,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     
diff --git a/aws-android-sdk-auth-ui/pom.xml b/aws-android-sdk-auth-ui/pom.xml
index d2b59bcce8..4ed1d02c08 100644
--- a/aws-android-sdk-auth-ui/pom.xml
+++ b/aws-android-sdk-auth-ui/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <repositories>
@@ -36,28 +36,28 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
     <dependency>
diff --git a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java b/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
index 055daa1fa8..3f46e42bd5 100644
--- a/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
+++ b/aws-android-sdk-auth-ui/src/main/java/com/amazonaws/mobile/auth/ui/SignInView.java
@@ -58,7 +58,7 @@
     private static final int IMAGE_LAYOUT_MARGINS = dp(10);
 
     /** String that represents the SDK Version. */
-    private static final String SDK_VERSION = "2.6.17";
+    private static final String SDK_VERSION = "2.6.18";
 
     /** Common Prefix of the namespaces of different SignIn providers. */
     private static final String NAMESPACE_COMMON_PREFIX = "com.amazonaws.mobile.auth";
diff --git a/aws-android-sdk-auth-userpools/pom.xml b/aws-android-sdk-auth-userpools/pom.xml
index 3ca4012bb0..ac2e6537e2 100644
--- a/aws-android-sdk-auth-userpools/pom.xml
+++ b/aws-android-sdk-auth-userpools/pom.xml
@@ -21,7 +21,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <repositories>
@@ -36,14 +36,14 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml b/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml
index cd7130a851..a45ac977d1 100644
--- a/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml
+++ b/aws-android-sdk-auth-userpools/src/main/res/values/dimens.xml
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <dimen name="sign_in_button_height">40dp</dimen>
-    <dimen name="sign_in_separator_height">2dp</dimen>
     <dimen name="user_pools_sign_in_button_margin_top_bottom">10dp</dimen>
     <dimen name="user_pools_button_text_size">20sp</dimen>
     <dimen name="user_pools_button_height">45dp</dimen>
diff --git a/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml b/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml
index b148ee77e6..384abf4d52 100644
--- a/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml
+++ b/aws-android-sdk-auth-userpools/src/main/res/values/strings.xml
@@ -33,7 +33,6 @@
     <string name="password_change_failed">Password change failed.</string>
     <string name="sign_up_success">Sign up succeeded.</string>
     <string name="sign_up_failed">Sign up failed.</string>
-    <string name="login_success">Login succeeded.</string>
     <string name="login_failed">Login failed.</string>
     <string name="sign_up_confirm_success">Sign up confirmation succeeded.</string>
     <string name="sign_up_confirm_failed">Sign up confirmation failed.</string>
diff --git a/aws-android-sdk-autoscaling/pom.xml b/aws-android-sdk-autoscaling/pom.xml
index 23ee2e3ccb..fbeaf8b552 100644
--- a/aws-android-sdk-autoscaling/pom.xml
+++ b/aws-android-sdk-autoscaling/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cloudwatch/pom.xml b/aws-android-sdk-cloudwatch/pom.xml
index d97a813726..85bbc26d62 100644
--- a/aws-android-sdk-cloudwatch/pom.xml
+++ b/aws-android-sdk-cloudwatch/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-cognito/README.md b/aws-android-sdk-cognito/README.md
index 779fca5571..a6bbda366c 100644
--- a/aws-android-sdk-cognito/README.md
+++ b/aws-android-sdk-cognito/README.md
@@ -4,4 +4,4 @@
 
 ## To learn more about Android Development
 
-For more information on Andorid development, see the Android developer site at: [developer.android.com](http://developer.android.com/index.html)
+For more information on Android development, see the Android developer site at: [developer.android.com](http://developer.android.com/index.html)
diff --git a/aws-android-sdk-cognito/pom.xml b/aws-android-sdk-cognito/pom.xml
index 78e1689e7b..dfc4fd30af 100644
--- a/aws-android-sdk-cognito/pom.xml
+++ b/aws-android-sdk-cognito/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognito</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Sync</name>
-  <version>2.6.17</version>
+  <version>2.6.18</version>
   <description>The AWS Android SDK for Amazon Cognito Sync module holds the client classes that are used for communicating with Amazon Cognito Sync Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
index 08cfa33f9b..2958cb8f7d 100644
--- a/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
+++ b/aws-android-sdk-cognito/src/main/resources/fabric/com.amazonaws.aws-android-sdk-cognito.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-cognito
-fabric-version=2.6.17
+fabric-version=2.6.18
 fabric-build-type=binary
diff --git a/aws-android-sdk-cognitoauth/pom.xml b/aws-android-sdk-cognitoauth/pom.xml
index ca9e6c1f8b..9c0f700a58 100644
--- a/aws-android-sdk-cognitoauth/pom.xml
+++ b/aws-android-sdk-cognitoauth/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoauth</artifactId>
   <packaging>aar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Auth</name>
-  <version>2.6.17</version>
+  <version>2.6.18</version>
   <description>The AWS Android SDK with app integration for Amazon Cognito Your User Pools Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <repositories>
diff --git a/aws-android-sdk-cognitoidentityprovider/pom.xml b/aws-android-sdk-cognitoidentityprovider/pom.xml
index 956deb15fa..8b9a5001be 100644
--- a/aws-android-sdk-cognitoidentityprovider/pom.xml
+++ b/aws-android-sdk-cognitoidentityprovider/pom.xml
@@ -6,14 +6,14 @@
   <artifactId>aws-android-sdk-cognitoidentityprovider</artifactId>
   <packaging>jar</packaging>
   <name>AWS SDK for Android - Amazon Cognito Identity Provider</name>
-  <version>2.6.17</version>
+  <version>2.6.18</version>
   <description>The AWS Android SDK for Amazon Cognito Identity Provider module holds the client classes that are used for communicating with Amazon Cognito Identity Provider Service</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <licenses>
@@ -29,7 +29,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
diff --git a/aws-android-sdk-core/pom.xml b/aws-android-sdk-core/pom.xml
index 620b340b35..bd94929ead 100644
--- a/aws-android-sdk-core/pom.xml
+++ b/aws-android-sdk-core/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
index 916e064ca1..bb0f6e4bb7 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/regions/Regions.java
@@ -32,7 +32,7 @@
     /** us-west-1. */
     US_WEST_1("us-west-1"),
 
-    /** eu-west-1. */
+    /** us-west-2. */
     US_WEST_2("us-west-2"),
 
     /** eu-west-1/ */
diff --git a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
index 4f60d58028..1540cbbb9b 100644
--- a/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
+++ b/aws-android-sdk-core/src/main/java/com/amazonaws/util/VersionInfoUtils.java
@@ -26,7 +26,7 @@
     private static final int DEFAULT_STRING_LENGTH = 128;
 
     /** SDK version info */
-    private static volatile String version = "2.6.17";
+    private static volatile String version = "2.6.18";
                                                                 // changed build
                                                                 // logic
 
diff --git a/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties b/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
index 95c984402a..96799bd791 100644
--- a/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
+++ b/aws-android-sdk-core/src/main/resources/fabric/com.amazonaws.aws-android-sdk-core.properties
@@ -1,3 +1,3 @@
 fabric-identifier=com.amazonaws.aws-android-sdk-core
-fabric-version=2.6.17
+fabric-version=2.6.18
 fabric-build-type=binary
diff --git a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
index 60922b2c92..cacd2ccac6 100644
--- a/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
+++ b/aws-android-sdk-core/src/test/java/com/amazonaws/util/VersionInfoUtilsTest.java
@@ -24,7 +24,7 @@
 
     @Test
     public void getVersion() {
-        assertEquals("2.6.17", VersionInfoUtils.getVersion());
+        assertEquals("2.6.18", VersionInfoUtils.getVersion());
     }
 
     @Test
diff --git a/aws-android-sdk-ddb-document/pom.xml b/aws-android-sdk-ddb-document/pom.xml
index 78f445a0db..043717cd96 100644
--- a/aws-android-sdk-ddb-document/pom.xml
+++ b/aws-android-sdk-ddb-document/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
diff --git a/aws-android-sdk-ddb-mapper/pom.xml b/aws-android-sdk-ddb-mapper/pom.xml
index 94d64010cf..47e1f0751e 100644
--- a/aws-android-sdk-ddb-mapper/pom.xml
+++ b/aws-android-sdk-ddb-mapper/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,19 +20,19 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-ddb</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-s3</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ddb/pom.xml b/aws-android-sdk-ddb/pom.xml
index faf91323a2..ce5db7b18c 100644
--- a/aws-android-sdk-ddb/pom.xml
+++ b/aws-android-sdk-ddb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ec2/pom.xml b/aws-android-sdk-ec2/pom.xml
index ced057b264..b9c2e4065d 100644
--- a/aws-android-sdk-ec2/pom.xml
+++ b/aws-android-sdk-ec2/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-elb/pom.xml b/aws-android-sdk-elb/pom.xml
index 3aa57f9a2d..fc15eace6f 100644
--- a/aws-android-sdk-elb/pom.xml
+++ b/aws-android-sdk-elb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-iot/pom.xml b/aws-android-sdk-iot/pom.xml
index 8cd5db6639..4c0d48cdfe 100644
--- a/aws-android-sdk-iot/pom.xml
+++ b/aws-android-sdk-iot/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>org.eclipse.paho</groupId>
diff --git a/aws-android-sdk-kinesis/pom.xml b/aws-android-sdk-kinesis/pom.xml
index e2b039f990..5037c928ca 100644
--- a/aws-android-sdk-kinesis/pom.xml
+++ b/aws-android-sdk-kinesis/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-kinesisvideo/pom.xml b/aws-android-sdk-kinesisvideo/pom.xml
index c7d02e4866..27efe82841 100644
--- a/aws-android-sdk-kinesisvideo/pom.xml
+++ b/aws-android-sdk-kinesisvideo/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <licenses>
@@ -43,7 +43,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
 
     <dependency>
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/AbstractKinesisVideoCredentialsProvider.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/AbstractKinesisVideoCredentialsProvider.java
index 10f5879ad2..4b64569cb0 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/AbstractKinesisVideoCredentialsProvider.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/AbstractKinesisVideoCredentialsProvider.java
@@ -58,4 +58,4 @@ private void refreshCredentials(boolean forceUpdate) throws KinesisVideoExceptio
     }
 
     protected abstract KinesisVideoCredentials updateCredentials() throws KinesisVideoException;
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/EmptyCredentialsProvider.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/EmptyCredentialsProvider.java
index 4d71e8cd02..7e0dc1b249 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/EmptyCredentialsProvider.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/EmptyCredentialsProvider.java
@@ -33,4 +33,4 @@ public KinesisVideoCredentials getCredentials() throws KinesisVideoException{
     public KinesisVideoCredentials getUpdatedCredentials() throws KinesisVideoException{
         return KinesisVideoCredentials.EMPTY_KINESIS_VIDEO_CREDENTIALS;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/KinesisVideoCredentialsProvider.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/KinesisVideoCredentialsProvider.java
index 5c033531b6..f3f5c6e826 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/KinesisVideoCredentialsProvider.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/KinesisVideoCredentialsProvider.java
@@ -30,4 +30,4 @@
 
     @Nullable
     KinesisVideoCredentials getUpdatedCredentials() throws KinesisVideoException;
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/StaticCredentialsProvider.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/StaticCredentialsProvider.java
index 0767a254f3..6620ab0622 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/StaticCredentialsProvider.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/auth/StaticCredentialsProvider.java
@@ -41,4 +41,4 @@ public KinesisVideoCredentials getCredentials() throws KinesisVideoException {
     public KinesisVideoCredentials getUpdatedCredentials() throws KinesisVideoException {
         return credentials;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/KinesisVideoClientConfiguration.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/KinesisVideoClientConfiguration.java
index 49800979a7..77c99d9ab6 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/KinesisVideoClientConfiguration.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/KinesisVideoClientConfiguration.java
@@ -128,4 +128,4 @@ public KinesisVideoClientConfiguration build() {
             return new KinesisVideoClientConfiguration(this);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/NativeKinesisVideoClient.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/NativeKinesisVideoClient.java
index 01bc295f90..6f0843b78c 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/NativeKinesisVideoClient.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/client/NativeKinesisVideoClient.java
@@ -126,7 +126,7 @@ public void initialize(@NonNull final DeviceInfo deviceInfo) throws KinesisVideo
                 defaultServiceCallbacks,
                 mLog);
 
-        kinesisVideoProducer.create(deviceInfo);
+        kinesisVideoProducer.createSync(deviceInfo);
 
         super.initialize(deviceInfo);
     }
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/Log.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/Log.java
index 8fd01e2577..ba09d9def0 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/Log.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/Log.java
@@ -376,4 +376,4 @@ private void addHexString(final byte[] bytes) {
             mStringBuilder.append(Integer.toHexString(unsignedByte));
         }
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/LogLevel.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/LogLevel.java
index a192877be8..5813e7ea76 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/LogLevel.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/LogLevel.java
@@ -73,4 +73,4 @@ public static LogLevel fromInt(final int logLevel) {
     public int getLogLevel() {
         return mLogLevel;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/OutputChannel.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/OutputChannel.java
index 19adb1990a..944ca5b988 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/OutputChannel.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/common/logging/OutputChannel.java
@@ -35,4 +35,4 @@
      *         The actual message to log
      */
     void print(int level, final @NonNull String tag, final @NonNull String message);
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/http/KinesisVideoApacheHttpClient.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/http/KinesisVideoApacheHttpClient.java
index 8a8b146ea7..7995c4679c 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/http/KinesisVideoApacheHttpClient.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/http/KinesisVideoApacheHttpClient.java
@@ -94,6 +94,8 @@ private CloseableHttpClient buildHttpClient() {
         try {
             builder.loadTrustMaterial(new TrustAllStrategy());
             final SSLConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(builder.build(),
+                    new String[] {"TLSv1.2"}, // TLS protocol, use 1.2 only
+                    null, // TLS ciphers, use default
                     new NoOpHostNameVerifier());
             return HttpClients.custom()
                     .setSSLSocketFactory(sslSocketFactory)
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/AuthInfoType.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/AuthInfoType.java
index 155515fd6c..61ecbcf005 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/AuthInfoType.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/AuthInfoType.java
@@ -58,4 +58,4 @@
     public int getIntType() {
         return mType;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FragmentAckType.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FragmentAckType.java
index dc6bd854c3..697995d7be 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FragmentAckType.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FragmentAckType.java
@@ -66,4 +66,4 @@ public FragmentAckType(int type) {
     public int getIntType() {
         return mType;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FrameFlags.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FrameFlags.java
index 21e75b0b13..1b1db78f15 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FrameFlags.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/FrameFlags.java
@@ -72,4 +72,4 @@ public static boolean isDiscardableFrame(final int frameFlags) {
     public static boolean isInvisibleFrame(final int frameFlags) {
         return (frameFlags & FRAME_FLAG_INVISIBLE_FRAME) == FRAME_FLAG_INVISIBLE_FRAME;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducer.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducer.java
index 5a452d4e18..66745f42de 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducer.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducer.java
@@ -182,4 +182,4 @@ void deviceCertToTokenResult(final long customData, final @Nullable byte[] token
     @NonNull
     KinesisVideoMetrics getMetrics()
             throws ProducerException;
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducerStream.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducerStream.java
index 492a015987..82692270e6 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducerStream.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/KinesisVideoProducerStream.java
@@ -63,10 +63,11 @@
      *         The start of the buffer
      * @param length
      *         The number of bytes to fill
-     * @return The number of bytes filled
+     * @param readResult
+     *         The result of the read
      * @throws ProducerException
      */
-    int getStreamData(final @NonNull byte[] fillBuffer, int offset, int length)
+    void getStreamData(final @NonNull byte[] fillBuffer, int offset, int length, @NonNull final ReadResult readResult)
             throws ProducerException;
 
     /**
@@ -131,4 +132,4 @@ int getStreamData(final @NonNull byte[] fillBuffer, int offset, int length)
      */
     @NonNull
     KinesisVideoStreamMetrics getMetrics() throws ProducerException;
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/ReadResult.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/ReadResult.java
new file mode 100644
index 0000000000..685507971f
--- /dev/null
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/ReadResult.java
@@ -0,0 +1,57 @@
+/**
+ * Copyright 2017-2018 Amazon.com,
+ * Inc. or its affiliates. All Rights Reserved.
+ *
+ * Licensed under the Amazon Software License (the "License").
+ * You may not use this file except in compliance with the
+ * License. A copy of the License is located at
+ *
+ *     http://aws.amazon.com/asl/
+ *
+ * or in the "license" file accompanying this file. This file is
+ * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
+ * CONDITIONS OF ANY KIND, express or implied. See the License
+ * for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.amazonaws.kinesisvideo.producer;
+
+/**
+ * Class to hold the read results from the native code call.
+ * The class has a setter method that will be called from the native method to avoid object creation.
+ */
+public class ReadResult {
+    /**
+     * Invalid upload handle value which is specified in the native codebase.
+     */
+    public static final long INVALID_UPLOAD_HANDLE_VALUE = -1;
+
+    private long uploadHandle = INVALID_UPLOAD_HANDLE_VALUE;
+    private int readBytes = 0;
+    private boolean isEndOfStream = false;
+
+    /**
+     * Setter method which is called from the native codebase.
+     * @param uploadHandle Upload handle
+     * @param readBytes Read bytes
+     * @param isEndOfStream Whether its the end of stream
+     */
+    public void setReadResult(final long uploadHandle, final int readBytes, final boolean isEndOfStream) {
+        this.uploadHandle = uploadHandle;
+        this.readBytes = readBytes;
+        this.isEndOfStream = isEndOfStream;
+    }
+
+    public long getUploadHandle() {
+        return uploadHandle;
+    }
+
+    public int getReadBytes() {
+        return readBytes;
+    }
+
+    public boolean isEndOfStream() {
+        return isEndOfStream;
+    }
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/StreamStatus.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/StreamStatus.java
index 8a8de9c9b7..9ab9c40784 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/StreamStatus.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/StreamStatus.java
@@ -47,4 +47,4 @@ public static final int getStatusCode(String status) {
     public final int intValue() {
         return mValue;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerJni.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerJni.java
index 612cd19538..225c7c99ea 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerJni.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerJni.java
@@ -60,7 +60,7 @@
     /**
      * The expected library version.
      */
-    private static final String EXPECTED_LIBRARY_VERSION = "1.4";
+    private static final String EXPECTED_LIBRARY_VERSION = "1.5";
 
     /**
      * The manifest handle will be set after call to parse()
@@ -498,16 +498,21 @@ public void parseFragmentAck(final long streamHandle, final long uploadHandle, f
      * @param fillBuffer    The buffer to fill
      * @param offset    The start of the buffer
      * @param length    The number of bytes to fill
-     * @return  The number of bytes filled
+     * @param readResult    The read result to fill in
      * @throws ProducerException
      */
-    public int getStreamData(final long streamHandle, final @NonNull byte[] fillBuffer, final int offset, final int length) throws ProducerException
+    public void getStreamData(final long streamHandle,
+                              final @NonNull byte[] fillBuffer,
+                              final int offset,
+                              final int length,
+                              final @NonNull ReadResult readResult) throws ProducerException
     {
         Preconditions.checkState(isInitialized());
         Preconditions.checkNotNull(fillBuffer);
+        Preconditions.checkNotNull(readResult);
 
         synchronized (mSyncObject) {
-            return getKinesisVideoStreamData(mClientHandle, streamHandle, fillBuffer, offset, length);
+            getKinesisVideoStreamData(mClientHandle, streamHandle, fillBuffer, offset, length, readResult);
         }
     }
 
@@ -1300,10 +1305,10 @@ private native void createStreamResultEvent(long clientHandle, long streamHandle
      * @param fillBuffer the buffer to fill
      * @param offset the offset into the buffer to fill
      * @param length the length of the buffer to fill
-     * @return Actual byte size copied
+     * @param readResult the result of the read operation
      * @throws ProducerException
      */
-    private native int getKinesisVideoStreamData(long clientHandle, long streamHandle, final @NonNull byte[] fillBuffer, int offset, int length)
+    private native void getKinesisVideoStreamData(long clientHandle, long streamHandle, final @NonNull byte[] fillBuffer, int offset, int length, final @NonNull ReadResult readResult)
             throws ProducerException;
 
     /**
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerStream.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerStream.java
index b7f0fe7acd..2ebee5582f 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerStream.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeKinesisVideoProducerStream.java
@@ -20,7 +20,6 @@
 import com.amazonaws.kinesisvideo.common.logging.Log;
 import com.amazonaws.kinesisvideo.common.preconditions.Preconditions;
 import com.amazonaws.kinesisvideo.producer.*;
-
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import java.io.IOException;
@@ -38,11 +37,6 @@
 public class NativeKinesisVideoProducerStream implements KinesisVideoProducerStream
 {
     private class NativeDataInputStream extends InputStream {
-        /**
-         * The MSB bit indicating the end of the stream
-         */
-        private static final int END_OF_STREAM_INDICATOR = 0x80000000;
-
         /**
          * Whether the stream has been closed
          */
@@ -52,10 +46,12 @@
         private final Object mMonitor = new Object();
         private boolean mDataAvailable = false;
         private long mAvailableDataSize = 0;
+        private final ReadResult mReadResult;
         final long mUploadHandle;
 
         public NativeDataInputStream(final long uploadHandle) {
             mUploadHandle = uploadHandle;
+            mReadResult = new ReadResult();
         }
 
         @Override
@@ -91,23 +87,36 @@ public int read(final byte[] b,
 
                     // Clear the availability indicator for now
                     mDataAvailable = false;
+                    if (mStreamClosed) {
+                        // Indicate the EOS
+                        bytesRead = -1;
+                        mLog.debug("Being notified to close stream %s with uploadHandle %d",
+                                mStreamInfo.getName(), mUploadHandle);
+                        return bytesRead;
+                    }
                 }
 
                 try {
-                    bytesRead = mKinesisVideoProducerJni.getStreamData(mStreamHandle, b, off, len);
+                    mKinesisVideoProducerJni.getStreamData(mStreamHandle, b, off, len, mReadResult);
+                    bytesRead = mReadResult.getReadBytes();
 
-                    if ((bytesRead & END_OF_STREAM_INDICATOR) == END_OF_STREAM_INDICATOR) {
-                        mLog.info("Received end-of-stream indicator for %s, uploadHandle %d",
-                                mStreamInfo.getName(), mUploadHandle);
-                        // Clear the indicator bit
-                        bytesRead &= ~END_OF_STREAM_INDICATOR;
+                    if (mReadResult.isEndOfStream()) {
+                        if (mReadResult.getUploadHandle() == mUploadHandle) {
+                            // EOS for current session
+                            mLog.info("Received end-of-stream indicator for %s, uploadHandle %d",
+                                    mStreamInfo.getName(), mUploadHandle);
 
-                        // Set the flag so the stream is not valid any longer
-                        mStreamClosed = true;
+                            // Set the flag so the stream is not valid any longer
+                            mStreamClosed = true;
 
-                        if (0 == bytesRead) {
-                            // Indicate the EOS
-                            bytesRead = -1;
+                            if (0 == bytesRead) {
+                                // Indicate the EOS
+                                bytesRead = -1;
+                            }
+                        } else {
+                            mLog.debug("Found end of stream for stream %s on uploadHandle %d for previous uploadHandle %d",
+                                    mStreamInfo.getName(), mUploadHandle, mReadResult.getUploadHandle());
+                            notifyEndOfStream(mReadResult.getUploadHandle());
                         }
                     }
 
@@ -118,6 +127,7 @@ public int read(final byte[] b,
                             if (bytesRead != -1 && mAvailableDataSize - bytesRead > 0) {
                                 mDataAvailable = true;
                             }
+
                             break;
                         }
                     }
@@ -167,6 +177,15 @@ protected void notifyReaderThread(final long duration, final long availableSize)
                 mMonitor.notify();
             }
         }
+
+        protected void endOfReaderThread() {
+            // Unblock the awaiting reading code block
+            synchronized (mMonitor) {
+                mDataAvailable = true;
+                mStreamClosed = true;
+                mMonitor.notify();
+            }
+        }
     }
 
     private final NativeKinesisVideoProducerJni mKinesisVideoProducerJni;
@@ -204,8 +223,11 @@ public InputStream getDataStream(final long uploadHandle) throws ProducerExcepti
     }
 
     @Override
-    public int getStreamData(@NonNull final byte[] fillBuffer, final int offset, final int length) throws ProducerException {
-        return mKinesisVideoProducerJni.getStreamData(mStreamHandle, fillBuffer, offset, length);
+    public void getStreamData(@NonNull final byte[] fillBuffer,
+                              final int offset,
+                              final int length,
+                              @NonNull final ReadResult readResult) throws ProducerException {
+        mKinesisVideoProducerJni.getStreamData(mStreamHandle, fillBuffer, offset, length, readResult);
     }
 
     @Override
@@ -429,4 +451,13 @@ public void awaitStopped() throws ProducerException
             throw new ProducerException(e);
         }
     }
+
+    private void notifyEndOfStream(final long uploadHandle) {
+        final NativeDataInputStream inputStream = mInputStreamMap.get(uploadHandle);
+        if (inputStream != null) {
+            inputStream.endOfReaderThread();
+        } else {
+            mLog.error("NativeDataInputStream corresponding to upload handle %d is not found.", uploadHandle);
+        }
+    }
 }
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeLibraryLoader.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeLibraryLoader.java
index d5c5d331cf..3322238e21 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeLibraryLoader.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/producer/jni/NativeLibraryLoader.java
@@ -102,4 +102,4 @@ private boolean loadNativeLibraryIndirect(final @NonNull String libraryName) {
         // This is the error return case.
         return false;
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/AckConsumer.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/AckConsumer.java
index 423dfdc9f2..a3bf78288d 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/AckConsumer.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/AckConsumer.java
@@ -122,4 +122,4 @@ public void close() throws ProducerException {
             throw new ProducerException(e);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/BlockingAckConsumer.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/BlockingAckConsumer.java
index e536604aa5..2d6f1a583e 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/BlockingAckConsumer.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/BlockingAckConsumer.java
@@ -100,4 +100,4 @@ public void awaitResponse() throws KinesisVideoException {
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/DefaultServiceCallbacksImpl.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/DefaultServiceCallbacksImpl.java
index be2267b4df..d6f0fc6765 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/DefaultServiceCallbacksImpl.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/service/DefaultServiceCallbacksImpl.java
@@ -178,7 +178,8 @@ public void stop() {
                 log.exception(e, "Stopping stream threw an exception.");
             }
 
-            for (final OngoingStream ongoingStream : ongoingStreams) {
+            while (ongoingStreams.size() > 0) {
+                final OngoingStream ongoingStream = ongoingStreams.get(0);
                 ongoingStream.stop();
             }
         }
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/socket/SocketFactory.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/socket/SocketFactory.java
index 4b3e786a69..821417f49c 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/socket/SocketFactory.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/kinesisvideo/socket/SocketFactory.java
@@ -51,7 +51,7 @@ private Socket openSocket(final URI uri) throws Exception {
     }
 
     private Socket createSslSocket(final InetAddress address, final int port) throws Exception {
-        final SSLContext context = SSLContext.getInstance("TLSv1");
+        final SSLContext context = SSLContext.getInstance("TLSv1.2");
         context.init(NO_KEY_MANAGERS, trustAllCertificates(), new SecureRandom());
         return context.getSocketFactory().createSocket(address, port);
 
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/client/AndroidKinesisVideoClient.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/client/AndroidKinesisVideoClient.java
index 7b9de08aa1..0ff3a151df 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/client/AndroidKinesisVideoClient.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/client/AndroidKinesisVideoClient.java
@@ -81,4 +81,4 @@ public MediaSource createMediaSource(final String streamName,
     public List<MediaSourceConfiguration.Builder<? extends MediaSourceConfiguration>> listSupportedConfigurations() {
         return CameraUtils.getSupportedCameraConfigrations(mContext);
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidCameraMediaSource.java b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidCameraMediaSource.java
index f418de991a..11ddf251fb 100644
--- a/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidCameraMediaSource.java
+++ b/aws-android-sdk-kinesisvideo/src/main/java/com/amazonaws/mobileconnectors/kinesisvideo/mediasource/android/AndroidCameraMediaSource.java
@@ -202,4 +202,4 @@ public void onFrameAvailable(final KinesisVideoFrame frame) {
             }
         };
     }
-}
\ No newline at end of file
+}
diff --git a/aws-android-sdk-kinesisvideo/src/main/jni/arm64-v8a/libKinesisVideoProducerJNI.so b/aws-android-sdk-kinesisvideo/src/main/jni/arm64-v8a/libKinesisVideoProducerJNI.so
index 9fa77fc20e..8da54dccad 100644
Binary files a/aws-android-sdk-kinesisvideo/src/main/jni/arm64-v8a/libKinesisVideoProducerJNI.so and b/aws-android-sdk-kinesisvideo/src/main/jni/arm64-v8a/libKinesisVideoProducerJNI.so differ
diff --git a/aws-android-sdk-kinesisvideo/src/main/jni/armeabi-v7a/libKinesisVideoProducerJNI.so b/aws-android-sdk-kinesisvideo/src/main/jni/armeabi-v7a/libKinesisVideoProducerJNI.so
index 2496c194a1..c968abb27a 100644
Binary files a/aws-android-sdk-kinesisvideo/src/main/jni/armeabi-v7a/libKinesisVideoProducerJNI.so and b/aws-android-sdk-kinesisvideo/src/main/jni/armeabi-v7a/libKinesisVideoProducerJNI.so differ
diff --git a/aws-android-sdk-kinesisvideo/src/main/jni/armeabi/libKinesisVideoProducerJNI.so b/aws-android-sdk-kinesisvideo/src/main/jni/armeabi/libKinesisVideoProducerJNI.so
index f54bca8ca3..ce9c4790fa 100644
Binary files a/aws-android-sdk-kinesisvideo/src/main/jni/armeabi/libKinesisVideoProducerJNI.so and b/aws-android-sdk-kinesisvideo/src/main/jni/armeabi/libKinesisVideoProducerJNI.so differ
diff --git a/aws-android-sdk-kinesisvideo/src/main/jni/x86/libKinesisVideoProducerJNI.so b/aws-android-sdk-kinesisvideo/src/main/jni/x86/libKinesisVideoProducerJNI.so
index ef5a6eaacf..12b0cc73ee 100644
Binary files a/aws-android-sdk-kinesisvideo/src/main/jni/x86/libKinesisVideoProducerJNI.so and b/aws-android-sdk-kinesisvideo/src/main/jni/x86/libKinesisVideoProducerJNI.so differ
diff --git a/aws-android-sdk-kinesisvideo/src/main/jni/x86_64/libKinesisVideoProducerJNI.so b/aws-android-sdk-kinesisvideo/src/main/jni/x86_64/libKinesisVideoProducerJNI.so
index fbf5c29ada..884b7ccaf9 100644
Binary files a/aws-android-sdk-kinesisvideo/src/main/jni/x86_64/libKinesisVideoProducerJNI.so and b/aws-android-sdk-kinesisvideo/src/main/jni/x86_64/libKinesisVideoProducerJNI.so differ
diff --git a/aws-android-sdk-kms/pom.xml b/aws-android-sdk-kms/pom.xml
index abef3aa20c..78b6055c54 100644
--- a/aws-android-sdk-kms/pom.xml
+++ b/aws-android-sdk-kms/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-lambda/pom.xml b/aws-android-sdk-lambda/pom.xml
index c71eddacf7..be4d4c038f 100644
--- a/aws-android-sdk-lambda/pom.xml
+++ b/aws-android-sdk-lambda/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-lex/pom.xml b/aws-android-sdk-lex/pom.xml
index ae3c09b6b7..e3b9d14eeb 100644
--- a/aws-android-sdk-lex/pom.xml
+++ b/aws-android-sdk-lex/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.6.17</version>
+        <version>2.6.18</version>
     </parent>
 
    <!-- Component includes software under each of these licenses; this is not a choice of license -->
@@ -33,7 +33,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.6.17</version>
+            <version>2.6.18</version>
         </dependency>
         <dependency>
             <groupId>com.google.android</groupId>
diff --git a/aws-android-sdk-logs/pom.xml b/aws-android-sdk-logs/pom.xml
index 5673bdf5a9..2f0fae0636 100644
--- a/aws-android-sdk-logs/pom.xml
+++ b/aws-android-sdk-logs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-machinelearning/pom.xml b/aws-android-sdk-machinelearning/pom.xml
index 1d1b7e5d30..a7b89ae87f 100644
--- a/aws-android-sdk-machinelearning/pom.xml
+++ b/aws-android-sdk-machinelearning/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-mobile-client/pom.xml b/aws-android-sdk-mobile-client/pom.xml
index c9b9da91e0..c5a643326c 100644
--- a/aws-android-sdk-mobile-client/pom.xml
+++ b/aws-android-sdk-mobile-client/pom.xml
@@ -28,7 +28,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -36,7 +36,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
@@ -44,7 +44,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-ui</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
@@ -60,7 +60,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-google</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
@@ -68,7 +68,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-facebook</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
@@ -76,7 +76,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-auth-userpools</artifactId>
       <optional>true</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
       <type>aar</type>
     </dependency>
 
diff --git a/aws-android-sdk-mobileanalytics/pom.xml b/aws-android-sdk-mobileanalytics/pom.xml
index 6a291e894b..abfd8dd638 100644
--- a/aws-android-sdk-mobileanalytics/pom.xml
+++ b/aws-android-sdk-mobileanalytics/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-pinpoint/pom.xml b/aws-android-sdk-pinpoint/pom.xml
index 35e898c231..af5e545262 100644
--- a/aws-android-sdk-pinpoint/pom.xml
+++ b/aws-android-sdk-pinpoint/pom.xml
@@ -12,7 +12,7 @@
     <parent>
         <groupId>com.amazonaws</groupId>
         <artifactId>aws-android-sdk-pom</artifactId>
-        <version>2.6.17</version>
+        <version>2.6.18</version>
     </parent>
 
     <dependencies>
@@ -20,7 +20,7 @@
             <groupId>com.amazonaws</groupId>
             <artifactId>aws-android-sdk-core</artifactId>
             <optional>false</optional>
-            <version>2.6.17</version>
+            <version>2.6.18</version>
         </dependency>
         <dependency>
             <groupId>junit</groupId>
diff --git a/aws-android-sdk-polly/pom.xml b/aws-android-sdk-polly/pom.xml
index c22e809e5a..c66aa281cb 100644
--- a/aws-android-sdk-polly/pom.xml
+++ b/aws-android-sdk-polly/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-rekognition/pom.xml b/aws-android-sdk-rekognition/pom.xml
index c837043307..9bcfb52825 100644
--- a/aws-android-sdk-rekognition/pom.xml
+++ b/aws-android-sdk-rekognition/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-s3/pom.xml b/aws-android-sdk-s3/pom.xml
index 688cd76d84..38e900d3c9 100644
--- a/aws-android-sdk-s3/pom.xml
+++ b/aws-android-sdk-s3/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-kms</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>junit</groupId>
diff --git a/aws-android-sdk-sdb/pom.xml b/aws-android-sdk-sdb/pom.xml
index 8920fe4d2c..44df713dfa 100644
--- a/aws-android-sdk-sdb/pom.xml
+++ b/aws-android-sdk-sdb/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
         <dependency>
         <groupId>junit</groupId>
diff --git a/aws-android-sdk-ses/pom.xml b/aws-android-sdk-ses/pom.xml
index 48c4d93db3..54bf1bb028 100644
--- a/aws-android-sdk-ses/pom.xml
+++ b/aws-android-sdk-ses/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sns/pom.xml b/aws-android-sdk-sns/pom.xml
index d774f8114e..b9a109549b 100644
--- a/aws-android-sdk-sns/pom.xml
+++ b/aws-android-sdk-sns/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,13 +20,13 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-sqs</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/aws-android-sdk-sqs/pom.xml b/aws-android-sdk-sqs/pom.xml
index 4f3d8c2866..c5d80a7743 100644
--- a/aws-android-sdk-sqs/pom.xml
+++ b/aws-android-sdk-sqs/pom.xml
@@ -12,7 +12,7 @@
   <parent>
     <groupId>com.amazonaws</groupId>
     <artifactId>aws-android-sdk-pom</artifactId>
-    <version>2.6.17</version>
+    <version>2.6.18</version>
   </parent>
 
   <dependencies>
@@ -20,7 +20,7 @@
       <groupId>com.amazonaws</groupId>
       <artifactId>aws-android-sdk-core</artifactId>
       <optional>false</optional>
-      <version>2.6.17</version>
+      <version>2.6.18</version>
     </dependency>
   </dependencies>
 
diff --git a/pom.xml b/pom.xml
index 59eae22869..5850a7ab76 100644
--- a/pom.xml
+++ b/pom.xml
@@ -6,7 +6,7 @@
   <artifactId>aws-android-sdk-pom</artifactId>
   <packaging>pom</packaging>
   <name>AWS SDK for Android</name>
-  <version>2.6.17</version>
+  <version>2.6.18</version>
   <description>The Amazon Web Services SDK for Android provides Android APIs for building software on AWS’ cost-effective, scalable, and reliable infrastructure products. The AWS SDK for Android allows developers to code against APIs for all of Amazon's infrastructure web services (Amazon S3, Amazon EC2, Amazon SQS, Auto Scaling, etc).</description>
   <url>http://aws.amazon.com/sdkforandroid</url>
 
