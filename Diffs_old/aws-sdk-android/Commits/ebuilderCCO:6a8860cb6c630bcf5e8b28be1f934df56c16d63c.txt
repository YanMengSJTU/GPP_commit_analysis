diff --git a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
index d2159753b0..343d5f6da4 100644
--- a/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
+++ b/aws-android-sdk-s3/src/main/java/com/amazonaws/mobileconnectors/s3/transferutility/TransferUtility.java
@@ -172,6 +172,21 @@ public TransferObserver upload(String bucket, String key, File file,
         return upload(bucket, key, file, new ObjectMetadata(), connectionCheckType);
     }
 
+    /**
+     * Starts uploading the file to the given bucket, using the given key. The
+     * file must be a valid file. Directory isn't supported.
+     *
+     * @param bucket The name of the bucket to upload the new object to.
+     * @param key The key in the specified bucket by which to store the new
+     *            object.
+     * @param file The file to upload.
+     * @return A TransferObserver used to track upload progress and state
+     */
+    public TransferObserver upload(String bucket, String key, File file) {
+
+        return upload(bucket, key, file, new ObjectMetadata(), null);
+    }
+
     /**
      * Starts uploading the file to the given bucket, using the given key. The
      * file must be a valid file. Directory isn't supported.
@@ -190,6 +205,23 @@ public TransferObserver upload(String bucket, String key, File file,
         return upload(bucket, key, file, new ObjectMetadata(), cannedAcl, connectionCheckType);
     }
 
+    /**
+     * Starts uploading the file to the given bucket, using the given key. The
+     * file must be a valid file. Directory isn't supported.
+     *
+     * @param bucket The name of the bucket to upload the new object to.
+     * @param key The key in the specified bucket by which to store the new
+     *            object.
+     * @param file The file to upload.
+     * @param cannedAcl The canned ACL to associate with this object
+     * @return A TransferObserver used to track upload progress and state
+     */
+    public TransferObserver upload(String bucket, String key, File file,
+                                   CannedAccessControlList cannedAcl) {
+
+        return upload(bucket, key, file, new ObjectMetadata(), cannedAcl, null);
+    }
+
     /**
      * Starts uploading the file to the given bucket, using the given key. The
      * file must be a valid file. Directory isn't supported.
@@ -207,6 +239,21 @@ public TransferObserver upload(String bucket, String key, File file, ObjectMetad
         return upload(bucket, key, file, metadata, null, connectionCheckType);
     }
 
+    /**
+     * Starts uploading the file to the given bucket, using the given key. The
+     * file must be a valid file. Directory isn't supported.
+     *
+     * @param bucket The name of the bucket to upload the new object to.
+     * @param key The key in the specified bucket by which to store the new
+     *            object.
+     * @param file The file to upload.
+     * @param metadata The S3 metadata to associate with this object
+     * @return A TransferObserver used to track upload progress and state
+     */
+    public TransferObserver upload(String bucket, String key, File file, ObjectMetadata metadata) {
+        return upload(bucket, key, file, metadata, null, null);
+    }
+
     /**
      * Starts uploading the file to the given bucket, using the given key. The
      * file must be a valid file. Directory isn't supported.
